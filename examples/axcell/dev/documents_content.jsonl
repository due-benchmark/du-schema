{"name": "1410.2455v3", "contents": [{"tool_name": "djvu", "text": "BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Stephan Gouws SGOUWS@GOOGLE.COM Google Inc., Mountain View, CA, USA Yoshua Bengio Dept. IRO, Universit \u0301e de Montr \u0301eal, QC, Canada & Canadian Institute for Advanced Research Greg Corrado Google Inc., Mountain View, CA, USA Abstract We introduce BilBOWA (Bilingual Bag-of- Words without Alignments), a simple and computationally-efficient model for learning bilingual distributed representations of words which can scale to large monolingual datasets and does not require word-aligned parallel train- ing data. Instead it trains directly on monolingual data and extracts a bilingual signal from a smaller set of raw-text sentence-aligned data. This is achieved using a novel sampled bag-of-words cross-lingual objective, which is used to regular- ize two noise-contrastive language models for ef- ficient cross-lingual feature learning. We show that bilingual embeddings learned using the pro- posed model outperform state-of-the-art methods on a cross-lingual document classification task as well as a lexical translation task on WMT11 data. 1. Introduction Raw text data is freely available in many languages, yet labeled data \u2013 e.g. text marked up with parts-of-speech or named-entities \u2013 is expensive and mostly available for English. Although several techniques exist that can learn to map hand-crafted features from one domain to another (Blitzer et al., 2006; Daum \u0301e III, 2009; Pan & Yang, 2010), it is in general non-trivial to come up with good features which generalize well across tasks, and even harder across different languages. It is therefore very desirable to have unsupervised techniques which can learn useful syntactic and semantic features that are invariant to the tasks or lan- Proceedings of the 32 nd International Conference on Machine Learning, Lille, France, 2015. JMLR: W&CP volume 37. Copy- right 2015 by the author(s). guages that we are interested in. Unsupervised distributed representations of words capture important syntactic and semantic information about languages and these techniques have been succesfully applied to a wide range of tasks (Col- lobert et al., 2011; Turian et al., 2010), across many differ- ent languages (Al-Rfou\u2019 et al., 2013). Traditionally, induc- ing these representations involved training a neural network language model (Bengio et al., 2003) which was slow to train. However, contemporary word embedding models are much faster in comparison, and can scale to train on billions of words per day on a single desktop machine (Mnih & Teh, 2012; Mikolov et al., 2013b; Pennington et al., 2014). In all these models, words are represented by learned, real- valued feature vectors referred to as word embeddings and trained from large amounts of raw text. These models have the property that similar embedding vectors are learned for similar words during training. Additionally, the vectors capture rich linguistic relationships such as male-female relationships or verb tenses, as illustrated in Figure 1 (a) and (b). These two properties improve generalization when the embedding vectors are used as features on word- and sentence-level prediction tasks. Distributed representations can also be induced over dif- ferent language-pairs and can serve as an effective way of learning linguistic regularities which generalize across languages, in that words with similar distributional syn- tactic and semantic properties in both languages are rep- resented using similar vectorial representations (i.e. embed nearby in the embedded space, as shown in Figure 1 (c)). This is especially useful for transferring limited label in- formation from high-resource to low-resource languages, and has been demonstrated to be effective for document classification (Klementiev et al., 2012), outperforming a strong machine-translation baseline; as well as named- entity recognition and machine translation (Zou et al., 2013; Mikolov et al., 2013a). a r X i v : 1 4 1 0 . 2 4 5 5 v 3 [ s t a t . M L ] 4 F e b 2 0 1 6 BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Figure 1. (a & b) Monolingual embeddings have been shown to capture syntactic and semantic features such as noun gender (blue) and verb tense (red). (c) The (idealized) goal of crosslingual embeddings is to capture these relationships across two or more languages. Since these techniques are fundamentally data-driven tech- niques, the quality of the learned representations improves as the size of the training data improves (Mikolov et al., 2013b; Pennington et al., 2014). However, as we will discuss in more detail in \u00a72, there are two significant drawbacks associated with current bilingual embedding methods: they are either very slow to train or they can only exploit parallel training data. The former limits the large-scale application of these techniques, while the latter severely limits the amount of available training data, and furthermore introduces a big domain bias into the learning process, since parallel data is typically only easily available for certain narrow domains (such as parliamentary discus- sions). This paper introduces BilBOWA (Bilingual Bag-of-Words without Word Alignments), a simple, scalable technique for inducing bilingual word embeddings with a trivial exten- sion to multilingual embeddings. The model is able to leverage essentially unlimited amounts of monolingual raw text. It furthermore does not require any word-level align- ments, but instead extracts a bilingual signal directly from a limited sample of sentence-aligned, raw-text parallel data (e.g . Europarl) which it uses to align embeddings as they are learned over monolingual training data. Our contribu- tions are the following: \u2022 We introduce a novel, computationally-efficient sam- pled cross-lingual objective (\u201cBilBOWA-loss\u201d) which is employed to align monolingual embeddings as they are being trained in an online setting. The mono- lingual models can scale to large-scale training sets, thereby avoiding training bias, and the BilBOWA- loss only considers sampled bag-of-words sentence- aligned data at each training step, which scales ex- tremely well and also avoids the need for estimating word-alignments (\u00a73.2); \u2022 we experimentally evaluate the induced cross-lingual embeddings on a document-classification (\u00a75.1) and lexical translation task (\u00a75.2), where the method out- performs current state-of-the-art methods, with train- ing time reduced to minutes or hours compared to sev- eral days for prior approaches; \u2022 finally, we make available our efficient C- implementation1 to hopefully stimulate further research on cross-lingual distributed feature learning. 2. Learning Cross-lingual Word Embeddings Monolingual word embedding algorithms (Mikolov et al., 2013b; Pennington et al., 2014) learn useful features about words from raw text (e.g. Fig 1 (a) & (b)). These algo- rithms are trained over large datasets to be able to predict words from the contexts in which they appear. Their work- ing can intuitively be understood as mapping each word to a learned vector in an embedded space, and updating these vectors in an attempt to simultaneously minimize the distance from a word\u2019s vector to the vectors of the words with which it frequently co-occurs. The result of this opti- mization process yields a rich geometrical encoding of the distributional properties of natural language, where words with similar distributional properties cluster together. Due to their general nature, these features work well for several NLP prediction tasks (Collobert et al., 2011; Turian et al., 2010). In the cross-lingual setup, the goal is to learn features which generalize well across different tasks and different languages. The goal is therefore to learn features (embed- dings) for each word such that similar words in each lan- 1 https://github.com/gouwsmeister/bilbowa BilBOWA: Fast Bilingual Distributed Representations without Word Alignments guage are assigned similar embeddings (the monolingual objectives), but additionally we also want similar words across languages to have similar representations (the cross- lingual objective). The latter property allows one to use the learned embeddings as features for training a discrimi- native classifier to predict labels in one language (e.g . top- ics, parts-of-speech, or named-entities) where we have la- belled data, and then directly transfer it to a language for which we do not have much labelled data. From an opti- mization perspective, there are several approaches to how one can optimize these two objectives (our classification): OFFLINE ALIGNMENT: The simplest approach is to opti- mize each monolingual objective separately (i.e. train em- beddings on each language separately using any of the sev- eral available off-the-shelve toolkits), and then enforce the cross-lingual constraints as a separate, disjoint, \u2018alignment\u2019 step. The alignment step consists of learning a transforma- tion for projecting the embeddings of words onto the em- beddings of their translation pairs, obtained from a dictio- nary. This was shown to be a viable approach by (Mikolov et al., 2013a) who learned a linear projection from one em- bedding space to the other. It was extended by (Faruqui & Dyer, 2014), who simultanteously projected source and tar- get language embeddings into a joint space using canonical correlation analysis. The advantage of this approach is that it is very fast to learn the embedding alignments. The main drawback of this approach is that it is not clear that a sin- gle transformation (whether linear or nonlinear) can cap- ture the relationships between all words in the source and target languages, and our improved results on the transla- tion task seem to point to the contrary (\u00a75.2). Furthermore, an accurate dictionary is required for the language-pair and the method considers only one translation per word, which ignores the rich multi-sense polysemy of natural languages. PA R A L LEL- O N LY: Alternatively, one may leverage purely sentence-aligned parallel data and train a model to learn similar representations for the aligned sentences. This is the approach followed by the BiCVM (Hermann & Blun- som, 2013) and the bilingual auto-encoder (BAE, (Chan- dar et al., 2014)). The advantage of this approach is that it can be fast when using an efficient noise-contrastive train- ing criterion like that of the BiCVM. The main drawbacks of this method are that it can only train on limited paral- lel data, which is expensive to obtain and not necessarily written in the same style or register as the domain where the features might be applied (i.e. there is a strong domain bias). JOINTLY-TRAINED MODELS: Another approach is to jointly optimize the monolingual objectives L(\u00b7), with the cross-lingual objective enforced as a cross-lingual regu- larizer (see Figure 2 for a schematic). To do this, we define a cross-lingual regularization term \u03a9(\u00b7), and use it to con- Figure 2. Schematic of the proposed BilBOWA model architec- ture for inducing bilingual word embeddings. Two monolingual skipgram models are jointly trained while enforcing a sampled L2 -loss which aligns the embeddings such that translation-pairs are assigned similar embeddings in the two languages. strain monolingual models as they are jointly being trained over the context h and target word wt training pairs in the dataset D, e.g . L= min \u03b8e,\u03b8f X l\u2208{e,f} X wt ,h\u2208Dl Ll(wt, h; \u03b8l) | {z } feature learning +\u03bb \u03a9(\u03b8e , \u03b8f) |{z} alignment . (1) This formulation captures the intuition that we want to learn representations which model their individual lan- guages well (the first term) while the \u03a9(\u00b7) regularizer en- courages representations to be similar for words that are related across the two languages. Conceptually, this regu- larizer consists of minimizing a distance function between the vector representations ri learned for words wi in the two domains, weighted by how similar they are, i.e. \u03a9(Re ,Rf)= X wi\u2208V e X wj\u2208V f sim(wi , wj ) \u00b7 distance(r e i,r f j). (2) where we use R to denote learned embedding represen- tations, and ri to denote the embedding learned for word wi . In other words, when this weighted sum (and hence its contribution to the total objective) is low, one can be sure that words across languages that are similar (i.e . high sim(wi , wj )) will be embedded nearby each other. This approach was shown to be useful by (Klementiev et al., 2012). Crucially, the advantages of this formulation are that it enables one to train on any available monolin- gual data, which is both more abundant and less biased than the parallel-only approach, since one can train on data which resembles the data one will be applying the learned features to. The disadvantage is that the original model of Klementiev et al. is extremely slow to train. The train- ing complexity stems both from how the authors imple- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments ment their monolingual and cross-lingual objectives. For the monolingual objective, they train a standard neural lan- guage model for which the complexity of the output soft- max layer grows with the output vocabulary size. There- fore, in order to evaluate the model the authors had to re- duce the output vocabulary to only the 3000 most frequent words. The second reason for the slow training time is that the cross-lingual objective considers the interactions between all pairs of words (in the worst case) between the source and target vocabulary at each training step, which scales as the product of the two vocabularies2. In this work, we address these two issues individually. 3. The BilBOWA Model As discussed in \u00a72, the primary challenges with existing bilingual embedding models are their computational com- plexity (due to an expensive softmax or an expensive reg- ularization term, or both), but most importantly, the strong domain bias that is introduced by models that train only on parallel data such as Europarl. The BilBOWA model is designed to overcome these issues in order to enable computationally-efficient cross-lingual distributed feature learning over large amounts of monolin- gual text. A schematic overview of the model is shown in Figure 2. The two main aspects (discussed in the following sections) are 1. First, similar to (Zou et al., 2013), we leverage ad- vances in monolingual feature learning algorithms by replacing the softmax objective with a more efficient noise-contrastive objective (\u00a73.1), allowing monolin- gual training updates to scale independently of the vo- cabulary size. 2. Second, we introduce a novel computationally- efficient cross-lingual loss which only considers sam- pled, bag-of-words sentence-aligned data for the cross-lingual objective (\u00a73.2). This avoids the need for estimating word alignments, but moreover, the com- putation of the regularization term reduces to only the words in the observed sample (compared to consider- ing the O(V 2) worst-case possible interactions at each training step in the naive case). 3.1. Learning Monolingual Features: The L term Since we do not care about language modelling, but more about feature learning, an alternative to the softmax is to use a noise-contrastive approach to score valid, observed combinations of words against randomly sampled, unlikely combinations of words. This idea was introduced by Col- lobert and Weston (Collobert et al., 2011) where they opti- 2 If we limit each word to align to k words this is still O(V k). mized a margin between the observed score and the noise scores. In their formulation, scores were computed on se- quences of words, but in (Mikolov et al., 2013a) this idea was taken one step further and successfully applied to bag- of-word representations of contexts in their continuous bag- of-words (CBOW) and skipgram models trained using the negative sampling training objective (a simplified version of noise-contrastive estimation (Mnih & Teh, 2012)). Any of these objectives would yield comparable speedup and could be used in our architecture. In this work we opted for the skipgram model trained using negative sampling since it has been shown to learn high-quality monolingual fea- tures. 3.2. Learning Cross-lingual Features: The BilBOWA-loss (\u03a9 term) Besides learning how words in one language relate to each other, it is equally important for the representations to cap- ture how words between the two languages relate to each other, which we enforce using the \u03a9 term in equation 1. In the general bilingual setting, word similarities can be ex- pressed as a matrix A where aij encodes the translation \u201cscore\u201d of word i in one language with word j in the other. In the rest of our discussion we will refer to English and French, and denote all English-specific parameters using e superscript, and all French-specific parameters with f su- perscript. If the K -dimensional word embedding row-vectors ri are stacked to form a (V, K)-dimensional matrix R, then we can express what we will refer to as the exact cross-lingual objective as follows: \u03a9A(Re ,Rf)= X i X j aij ||r e i\u2212r f j ||2 (3) = (Re \u2212 Rf )>A(Re \u2212 Rf ). (4) where subscript A indicates that the alignments are fixed (given). A captures the relationships between all V e words in English with respect to all V f words in French, and is indeed also the source of the two main challenges in this formulation, namely: 1. how to derive or learn which words to pair as transla- tion pairs (i.e . deriving/learning A); 2. how to efficiently evaluate \u03a9(\u00b7) during training, since naively evaluating it scales as the product of the two vocabulary sizes O(|V e| \u00b7 |V f |) at each training step. The cross-lingual objective therefore penalizes the Euclid- ian distance between words in the two embedding spaces (Re and Rf ) proportional to their alignment frequency. Previous work approached this step by performing a word- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Figure 3. Using global word-alignments for aligning cross-lingual embeddings (equation 3) is costly and scales as the product of the two vocabulary sizes. In contrast, the BilBOWA-loss (equation 7) approximates the global loss by averaging over implicit local co-occurrence statistics in a limited sample of parallel sentence-pairs. alignment step prior to training to learn the alignment ma- trix A. However, performing word alignment requires run- ning Giza++ (Och & Ney, 2003) or FastAlign (Dyer et al., 2013) software and training HMM word-alignment mod- els. This is both computationally costly and also noisy. We would like to learn the translation correspondences without utilizing word alignments. In order to do that, we directly exploit the parallel training data. The main contribution of this work is to approximate the costly \u03a9(\u00b7) term, defined in equation 3 in terms of the global word-alignment statistics, using cheaply-obtained local word co-occurrence statistics obtained from raw-text parallel sentence-pairs (i.e. without running a word-alignment step). The main concept is il- lustrated schematically in Figure 3, and discussed in more detail below. As a first step, notice that since the alignment weights can be normalized to sum to one, we can interpret the alignment weights as a distribution and write equation 3 as an expec- tation over the distribution of English and French word- alignment probabilities aij = P (we i,w f j), \u03a9A(Re ,Rf)= E (i,j)\u223cP (we ,wf ) h||r e i\u2212r f j ||2i (5) Since the parallel data is paired at the sentence level, we know that translation pairs for the en sentence occur in the fr sentence, but we do not know where. We therefore need a word-alignment model. A naive assumption is to assume that each observed en word can potentially be aligned with each observed fr word (i.e . to assume a uniform word- alignment model), for each word in the observed sentence pairs. Under this assumption, one can then approximate equation 5 by sampling S m-length English and n-length French sentence-pairs (se , sf ) from the parallel training data: \u03a9A(Re ,Rf)\u2248 1 S X (se,sf )\u2208S 1 mn X wi\u2208se X wj \u2208sf ||r e i\u2212r f j ||2 (6) It is important to note that the lengths of the sampled En- glish and French parallel sentences m and n need not be equal, and more importantly m   |V e| and n   |V f|. Furthermore, notice that under a uniform alignment model, at each training step, each word in the sampled English sen- tence se will be updated towards all words in the French sentence sf . We can precompute this by simply updating each English word towards the mean French bag-of-words sentence-vector. Specifically, we implement equation 6 by sampling only one parallel sentence-pair per training step (i.e . S = 1), and at each training step t we optimize the fol- lowing sampled, approximate cross-lingual objective: \u03a9(t) A (Re , Rf),|| 1 m m X wi\u2208se r e i\u2212 1 n n X wj \u2208sf r f j ||2 (7) where s\u2217 denotes the English or French sampled sentence- pair drawn from the parallel corpus. In other words, the BilBOWA-loss minimizes a sampled L2 -loss between the mean bag-of-words sentence-vectors of the parallel corpus. On its own, this objective is degenerate since all embed- dings would converge to the trivial solution (by collapsing all embeddings to the same value), but coupled as a regu- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments larizer with the monolingual losses, we find that it works very well in practice. By sampling training sentences from the parallel document distribution, this objective efficiently approximates equation 3 (the more two words are observed together in a parallel sentence-pair, the stronger the embed- dings for the two words will be pushed together, i.e. propor- tional to aij ), without having to actually compute the word alignment weights aij . 3.3. Parallel subsampling for better results Equation 7 is an approximation of equation 3. As illus- trated in Figure 3, we are really interested in estimating the global word-alignment statistics for a word-pair, i.e . aij . However, by sampling words at the sentence-level, the lo- cal alignment statistics are skewed by the words\u2019 unigram frequencies of occurrence in a given sentence (i.e . regard- less of alignment). Since language has a very strong Zipfian distribution we therefore find in practice that equation 7 over-regularizes the frequent words. A simple solution to this is to subsample (discard) words from the parallel sen- tences proportional to their unigram probabilities of occur- rence. In other words, we discard each word from the paral- lel sentences with a probability that depends on its unigram frequency of occurrence. This heavily discards frequent words and effectively flattens the unigram distribution to a uniform distribution. This idea is closely related to the monolingual subsampling employed in the word2vec mod- els, although it is motivated for a different reason in the cross-lingual setting to obtain a better approximation of the global word-alignment statistics from the local sentence- level co-occurrence statistics (see Figure 3). In practice we found this useful to learn finer-grained cross- lingual embeddings for the frequent words. To better illus- trate the effect this has on training, we jointly visualized the top-25 most frequent words in English and German using the t-SNE algorithm. This is illustrated in Figure 4. We show in red the embeddings trained without subsampling and in blue the embeddings for the same words trained us- ing parallel subsampling. As the visualization shows, with- out subsampling frequent words are over-regularized and cluster near the origin. This effect is largely reduced by the proposed subsampling scheme. 4. Implementation and Training Details We implemented our model in C by building on the pop- ular open-source word2vec toolkit3. The implementa- tion launches a monolingual skipgram model as a separate thread for each language, as well as a cross-lingual thread. All threads access the shared embedding parameters asyn- chronously. For training the model, we make use of online 3 https://code.google.com/p/word2vec/ Figure 4. A joint t-SNE visualization of the same 25 most fre- quent English and German words trained without (red, left) and with parallel subsampling (blue, right), illustrating the effect that occurs without parallel subsampling, as frequent words are over- regularized towards the origin. asynchronous stochastic gradient descent (ASGD), where at time step t, parameter \u03b8 is updated as \u03b8(t) =\u03b8 (t\u22121) \u2212 \u03b7 \u2202L \u2202\u03b8 (8) Our initial implementation synchronized updates between threads, but we found that simply clipping individual up- dates to [\u22120 .1, 0.1] per thread was sufficient to ensure train- ing stability and considerably improved training speed. For monolingual training data, we use the freely available, pre- tokenized Wikipedia datasets (Al-Rfou\u2019 et al., 2013). For cross-lingual training we use the freely-available Europarl v7 corpus (Koehn, 2005). Unlike the approach of (Kle- mentiev et al., 2012) however, we do not need to perform a word-alignment step first. Instead our implementation trains directly on the raw parallel text files obtained af- ter applying the standard preprocessing scripts that come with the data to tokenize, recase and remove all empty sentence-pairs. Embedding matrices were initialized by drawing from a zero mean, unit-variance gaussian distri- bution. The skipgram negative sampling objectives (a sim- plified form of noise-contrastive estimation) require us to sample k noise words per training pair from the unigram P (w) en and fr distributions, and we set k = 15 which has been shown to give good results. Doing each training update therefore occurs asyn- chronously across the threads. Monolingual threads each select a context-target (h,wt )-pair for each language and sample k noise words according to their unigram noise dis- tributions. The cross-lingual thread samples a random pair of parallel sentences from the parallel data. Finally, each thread makes an update to all parameters asynchronously according to equation 8, for which gradients are easy to BilBOWA: Fast Bilingual Distributed Representations without Word Alignments compute due to the square-loss of the BilBOWA-loss and the log-linear nature of the skipgram models. The learning rate was set to 0.1, with linear decay. 5. Experiments In this section we present experiments which evaluate the utility of the induced representations. We evaluate the em- beddings in a cross-lingual document classification task which tests semantic transfer of information across lan- guages, as well as a word-level translation task which tests fine-grained lexical transfer. 5.1. Cross-lingual Document Classification We use an exact replication of the cross-lingual document classification (CLDC) setup introduced by Klementiev et al. (Klementiev et al., 2012) to evaluate their cross-lingual embeddings. The CLDC task setup is as follows: The goal is to classify documents in a target language using only la- belled documents in a source language. Specifically, we train an averaged perceptron classifier on the labelled train- ing data in the source language and then attempt to apply the classifier as-is to the target data (known as \u201cdirect trans- fer\u201d). Documents are represented as the tf-idf -weighted sum of the embedding vectors of the words that appear in the documents. Similar to Klementiev, we induce cross-lingual embed- dings for the English-German language pair, and use the in- duced representations to classify a subset of the English and German sections of the Reuters RCV1/RCV2 multilingual corpora (Lewis et al., 2004) as pertaining to one of four cat- egories: CCAT (Corporate/Industrial), ECAT (Economics), GCAT (Government/Social), and MCAT (Markets). For the classification experiments, 15,000 documents (for each language) were randomly selected from the RCV1/2 corpus, with one third (5,000) used as the test set and the remainder divided into training sets of sizes between 100 and 10,000, and a separate, held-out validation set of 1,000 documents used during the development of our models. Since our setup exactly mirrors Klementiev et al, we use the same baselines, namely: the majority class baseline, glossed (replacing words in the target document by their most frequently aligned words in the source language), and a stronger MT baseline (translating target documents into the source language using an SMT system). Results are summarized in Table 1. In order to make all results comparable, results for all methods reported here were obtained using the same embedding dimensionality of 40 and the same training data. We use the first 500K lines of the English-German Europarl data both as mono- lingual and parallel training data. We use a vocabulary size of 46, 678 for English and 47, 903 for German. Since our method is motivated as a faster version of the model pro- posed by Klementiev et al., we note that we significantly improve upon their results, while training in 6 minutes ver- sus the original 10 days (14,400 minutes). This yields a total factor 2, 400 speedup. This demonstrates that the Bil- BOWA loss (equation 7) is both a computationally-efficient and an accurate approximation of the full cross-lingual ob- jective implemented by Klementiev (equation 3). Next, we compare our method to the current state-of-the-art bilingual embedding methods. The current state-of-the-art on this task is 91.8 (en2de) and 72.8 (de2en) reported us- ing the Bilingual Auto-encoder (BAE) model by (Chandar et al., 2014). Hermann et al. (Hermann & Blunsom, 2013) report 83.7 and 71.4 with the BiCVM model. As shown, our model outperforms the BiCVM on both tasks, and out- performs BAEs on German to English to yield a current state-of-the-art result on that task of 75%. The runtime of our method also compares very favorably to other meth- ods. Note that even though the BiCVM method should in principle be as fast or faster than our method, its reported training time here is slightly higher since it was trained for more iterations over the data. 5.2. WMT11 Word Translation We also evaluated the induced cross-lingual embeddings on the word translation task used by Mikolov et al. (Mikolov et al., 2013a) using the publicly-available WMT11 data4. In this task, the authors extracted the 6K most frequent words from the WMT11 English-Spanish data, and then used the online Google Translate service to derive dictio- naries by translating these source words into the target lan- guage (individually for English and Spanish). Since their method requires translation-pairs for training, they used the first 5K most frequent words to learn the \u201ctranslation ma- trix\u201d, and then evaluated their method on the remaining 1K words used as a test set. To translate a source word, one finds its k nearest neighbours in the target language em- bedding space, and then evaluate the translation precision P @k as the fraction of target translations that are within the top-k words returned using the specific method. Our method does not require translation-pairs for training, so we simply test on the same 1K test-pairs. We use as baselines the same two methods described in (Mikolov et al., 2013a). Edit Distance ranks words based on their edit-distance. Word Co-occurrence is based on dis- tributional similarity: For each word w, one first constructs a word co-occurrence vector which counts the words with which w co-occurs within a 10-word window in the corpus. The word-count vectors are then mapped from the source to the target language using the dictionary. Finally, for each test word, the word with the most similar vector in the tar- 4 http://www.statmt.org/wmt11/ BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Method en \u2192 de de \u2192 en Training Time (min) Majority Baseline 46.8 46.8 - Glossed Baseline 65.1 68.6 - MT Baseline 68.1 67.4 - Klementiev et al. 77.6 71.1 14,400 Bilingual Auto-encoders (BAEs) 91.8 72.8 4,800 BiCVM 83.7 71.4 15 BilBOWA (this work) 86.5 75 6 Table 1. Classification accuracy and training times for the proposed BilBOWA method compared to Klementiev et al. (Klementiev et al., 2012), Bilingual Auto-encoders (Chandar et al., 2014), and the BiCVM model (Hermann & Blunsom, 2013), on an exact replica of the Reuters cross-lingual document classification task. These methods were all used to induce 40-dimensional embeddings using the same training data. Baseline results are from Klementiev. Method En\u2192Sp P@1 Sp\u2192En P@1 En\u2192Sp P@5 Sp\u2192En P@5 Edit Distance 13 18 24 27 Word Co-occurrence 30 19 20 30 Mikolov et al., 2013 33 35 51 52 BilBOWA (this work) 39 (+6) 44 (+9) 51 55 (+3) Table 2. Results for the translation task measured as word translation accuracy (out of 100, higher is better) evaluated on the top-1 and top-5 words as ranked by the method. Cross-lingual embeddings are induced and distance in the embedded space are used to select word translation pairs. +x indicates improvement in absolute precision over the previous state-of-the-art on this task (Mikolov et al., 2013a). get language is selected as its translation. The results on the English-Spanish translation tasks are summarized in Table 2. We induced 40-dimensional em- beddings using the English and Spanish Wikipedias and Europarl as parallel data. Our model improves on both the baselines and on Mikolov et al.\u2019s method on both tasks and gives a noticeable improvement in accuracy for the P @1 prediction. For the English to Spanish translation, we improve absolute word translation accuracy by 6 per- cent. For the Spanish to English task, we improve abso- lute word translation accuracy by 9 percent. This indi- cates that our model is able to learn fine-grained translation equivalences from the monolingual data by using only the raw-text, sentence-aligned parallel data, despite the lack of word-level alignments or training dictionaries. 6. Discussion The BilBOWA model as introduced in this paper utilizes a sampled L2 bag-of-words cross-lingual loss. This is the main source of the significant speedup over the Klementiev model, allowing training to scale to much larger datasets, which in turn yields more accurate features. We found that the asynchronous implementation significantly speeds up training with no noticeable impact on the quality of the learned embeddings, and the parallel subsampling im- proves the accuracy of the learned features. Getting asyn- chronous training to work required clipping the updates, especially as the dimensionality of the embeddings gets larger. Parallel subsampling makes training more accurate, especially for the frequent words, and therefore turns out to be important both in the monolingual and crosslingual setting. We have motivated the reason for the crosslin- gual setting as helping to uncover a better approximation of the global alignment statistics from the observed local, sentence-level co-occurrences. Despite the speedup, the model is still much slower to use than offline methods like translation matrix (Mikolov et al., 2013a) or multilingual CCA (Faruqui & Dyer, 2014). How- ever, results on the translation task suggest BilBOWA can learn finer-grained cross-lingual relationships than these methods, and can train over much larger monolingual datasets than parallel-only methods. If the goal is to learn high-quality general purpose bilingual embeddings, it is al- ways beneficial to leverage more training data, and hence a hybrid model like BilBOWA might be a better choice than a parallel-only technique like BiCVM or BAEs. 7. Conclusion We introduce BilBOWA, a computationally-efficient model for inducing bilingual distributed word representations di- rectly from monolingual raw text and a limited amount of parallel data, without requiring word-alignments or dictio- naries. BilBOWA combines advances in training monolin- gual word embeddings with a particularly efficient novel sampled cross-lingual objective. The result is that the re- quired computations per training step scales only with the number of words in the sentences, thereby enabling effi- cient large-scale cross-lingual training. We achieve state- of-the-art results for English-German cross-lingual docu- ment classification whilst obtaining up to three orders of magnitude speedup, and improve upon the previous state of the art in an English-Spanish word-translation task. BilBOWA: Fast Bilingual Distributed Representations without Word Alignments References Al-Rfou\u2019, Rami, Perozzi, Bryan, and Skiena, Steven. Polyglot: Distributed word representations for multilingual nlp. In Pro- ceedings of the Seventeenth Conference on Computational Nat- ural Language Learning, pp. 183\u2013192, Sofia, Bulgaria, Au- gust 2013. Association for Computational Linguistics. URL http://www.aclweb.org/anthology/W13-3520. Bengio, Y, Ducharme, R, and Vincent, P. A neural probabilis- tic language model. Journal of Machine Learning Research, 2003. URL http://ukpmc.ac.uk/abstract/CIT/ 412956. Bengio, Yoshua and Senecal, J-S . Adaptive importance sampling to accelerate training of a neural probabilistic language model. Neural Networks, IEEE Transactions on, 19(4):713\u2013722, 2008. Blitzer, J., McDonald, R., and Pereira, F. Domain adaptation with structural correspondence learning. In Conference on Empir- ical Methods in Natural Language Processing, Sydney, Aus- tralia, 2006. Chandar, Sarath, Lauly, Stanislas, Larochelle, Hugo, Khapra, Mitesh M., Ravidran, Balaraman, Raykar, Vikas, and Saha, Amrita. An autoencoder approach to learning bilingual word representations. Proceedings of NIPS 2014, 2014. Collobert, R., Weston, J., Bottou, L., Karlen, M., Kavukcuoglu, K., and Kuksa, P. Natural language processing (almost) from scratch. Journal of Machine Learning Research, 12:2493\u2013 2537, 2011. Daum \u0301e III, Hal. Frustratingly easy domain adaptation. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics, 2009. Dyer, Chris, Chahuneau, Victor, and Smith, Noah A. A simple, fast, and effective reparameterization of ibm model 2. ACL, 2013. Faruqui, Manaal and Dyer, Chris. Improving vector space word representations using multilingual correlation. In Proceedings of EACL 2014, 2014. Goldberg, Yoav and Levy, Omer. word2vec explained: Deriving mikolov et al.s negative-sampling word-embedding method. arXiv preprint arXiv:1402.3722, 2014. Hermann, Karl Moritz and Blunsom, Phil. Multilingual dis- tributed representations without word alignment. arXiv preprint arXiv:1312.6173, 2013. Klementiev, Alexandre, Titov, Ivan, and Bhattarai, Binod. In- ducing crosslingual distributed representations of words. In Proceedings of the International Conference on Computational Linguistics (COLING), Bombay, India, December 2012. Koehn, Philipp. Europarl: A parallel corpus for statistical ma- chine translation. In MT summit, volume 5, pp. 79\u201386, 2005. Lewis, David D, Yang, Yiming, Rose, Tony G, and Li, Fan. Rcv1: A new benchmark collection for text categorization research. The Journal of Machine Learning Research, 5:361\u2013397, 2004. Mikolov, Tomas, Le, Quoc V, and Sutskever, Ilya. Exploiting similarities among languages for machine translation. In In- ternational Conference on Learning Representations (ICLR), 2013a. Mikolov, Tomas, Sutskever, Ilya, Chen, Kai, Corrado, Greg S, and Dean, Jeff. Distributed representations of words and phrases and their compositionality. In Advances in Neural Information Processing Systems, pp. 3111\u20133119, 2013b. Mnih, Andriy and Teh, Yee Whye. A fast and simple algorithm for training neural probabilistic language models. In Proceed- ings of the 29th International Conference on Machine Learning (ICML), 2012. Och, Franz Josef and Ney, Hermann. A systematic comparison of various statistical alignment models. Computational Linguis- tics, 29(1):19\u201351, 2003. Pan, Sinno Jialin and Yang, Qiang. A survey on transfer learning. Knowledge and Data Engineering, IEEE Transactions on, 22 (10):1345\u20131359, 2010. Pennington, Jeffrey, Socher, Richard, and Manning, Christo- pher D. Glove: Global vectors for word representation. Pro- ceedings of the Empiricial Methods in Natural Language Pro- cessing (EMNLP 2014), 12, 2014. Turian, J., Ratinov, L., and Bengio, Y. Word representations: A simple and general method for semi-supervised learning. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pp. 384\u2013394. Association for Com- putational Linguistics, 2010. Walker, Alastair J. An efficient method for generating discrete random variables with general distributions. ACM Transac- tions on Mathematical Software (TOMS), 3(3):253\u2013256, 1977. Zou, Will Y, Socher, Richard, Cer, Daniel, and Manning, Christo- pher D. Bilingual word embeddings for phrase-based machine translation. In Proceedings of the 2013 Conference on Empiri- cal Methods in Natural Language Processing (EMNLP), 2013.", "common_format": {"doc_id": "./1410.2455v3.hocr", "tokens": ["BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Stephan", "Gouws", "SGOUWS@GOOGLE.COM", "Google", "Inc.,", "Mountain", "View,", "CA,", "USA", "Yoshua", "Bengio", "Dept.", "IRO,", "Universit", "\u0301e", "de", "Montr", "\u0301eal,", "QC,", "Canada", "&", "Canadian", "Institute", "for", "Advanced", "Research", "Greg", "Corrado", "Google", "Inc.,", "Mountain", "View,", "CA,", "USA", "Abstract", "We", "introduce", "BilBOWA", "(Bilingual", "Bag-of-", "Words", "without", "Alignments),", "a", "simple", "and", "computationally-efficient", "model", "for", "learning", "bilingual", "distributed", "representations", "of", "words", "which", "can", "scale", "to", "large", "monolingual", "datasets", "and", "does", "not", "require", "word-aligned", "parallel", "train-", "ing", "data.", "Instead", "it", "trains", "directly", "on", "monolingual", "data", "and", "extracts", "a", "bilingual", "signal", "from", "a", "smaller", "set", "of", "raw-text", "sentence-aligned", "data.", "This", "is", "achieved", "using", "a", "novel", "sampled", "bag-of-words", "cross-lingual", "objective,", "which", "is", "used", "to", "regular-", "ize", "two", "noise-contrastive", "language", "models", "for", "ef-", "ficient", "cross-lingual", "feature", "learning.", "We", "show", "that", "bilingual", "embeddings", "learned", "using", "the", "pro-", "posed", "model", "outperform", "state-of-the-art", "methods", "on", "a", "cross-lingual", "document", "classification", "task", "as", "well", "as", "a", "lexical", "translation", "task", "on", "WMT11", "data.", "1.", "Introduction", "Raw", "text", "data", "is", "freely", "available", "in", "many", "languages,", "yet", "labeled", "data", "\u2013", "e.g.", "text", "marked", "up", "with", "parts-of-speech", "or", "named-entities", "\u2013", "is", "expensive", "and", "mostly", "available", "for", "English.", "Although", "several", "techniques", "exist", "that", "can", "learn", "to", "map", "hand-crafted", "features", "from", "one", "domain", "to", "another", "(Blitzer", "et", "al.,", "2006;", "Daum", "\u0301e", "III,", "2009;", "Pan", "&", "Yang,", "2010),", "it", "is", "in", "general", "non-trivial", "to", "come", "up", "with", "good", "features", "which", "generalize", "well", "across", "tasks,", "and", "even", "harder", "across", "different", "languages.", "It", "is", "therefore", "very", "desirable", "to", "have", "unsupervised", "techniques", "which", "can", "learn", "useful", "syntactic", "and", "semantic", "features", "that", "are", "invariant", "to", "the", "tasks", "or", "lan-", "Proceedings", "of", "the", "32", "nd", "International", "Conference", "on", "Machine", "Learning,", "Lille,", "France,", "2015.", "JMLR:", "W&CP", "volume", "37.", "Copy-", "right", "2015", "by", "the", "author(s).", "guages", "that", "we", "are", "interested", "in.", "Unsupervised", "distributed", "representations", "of", "words", "capture", "important", "syntactic", "and", "semantic", "information", "about", "languages", "and", "these", "techniques", "have", "been", "succesfully", "applied", "to", "a", "wide", "range", "of", "tasks", "(Col-", "lobert", "et", "al.,", "2011;", "Turian", "et", "al.,", "2010),", "across", "many", "differ-", "ent", "languages", "(Al-Rfou\u2019", "et", "al.,", "2013).", "Traditionally,", "induc-", "ing", "these", "representations", "involved", "training", "a", "neural", "network", "language", "model", "(Bengio", "et", "al.,", "2003)", "which", "was", "slow", "to", "train.", "However,", "contemporary", "word", "embedding", "models", "are", "much", "faster", "in", "comparison,", "and", "can", "scale", "to", "train", "on", "billions", "of", "words", "per", "day", "on", "a", "single", "desktop", "machine", "(Mnih", "&", "Teh,", "2012;", "Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014).", "In", "all", "these", "models,", "words", "are", "represented", "by", "learned,", "real-", "valued", "feature", "vectors", "referred", "to", "as", "word", "embeddings", "and", "trained", "from", "large", "amounts", "of", "raw", "text.", "These", "models", "have", "the", "property", "that", "similar", "embedding", "vectors", "are", "learned", "for", "similar", "words", "during", "training.", "Additionally,", "the", "vectors", "capture", "rich", "linguistic", "relationships", "such", "as", "male-female", "relationships", "or", "verb", "tenses,", "as", "illustrated", "in", "Figure", "1", "(a)", "and", "(b).", "These", "two", "properties", "improve", "generalization", "when", "the", "embedding", "vectors", "are", "used", "as", "features", "on", "word-", "and", "sentence-level", "prediction", "tasks.", "Distributed", "representations", "can", "also", "be", "induced", "over", "dif-", "ferent", "language-pairs", "and", "can", "serve", "as", "an", "effective", "way", "of", "learning", "linguistic", "regularities", "which", "generalize", "across", "languages,", "in", "that", "words", "with", "similar", "distributional", "syn-", "tactic", "and", "semantic", "properties", "in", "both", "languages", "are", "rep-", "resented", "using", "similar", "vectorial", "representations", "(i.e.", "embed", "nearby", "in", "the", "embedded", "space,", "as", "shown", "in", "Figure", "1", "(c)).", "This", "is", "especially", "useful", "for", "transferring", "limited", "label", "in-", "formation", "from", "high-resource", "to", "low-resource", "languages,", "and", "has", "been", "demonstrated", "to", "be", "effective", "for", "document", "classification", "(Klementiev", "et", "al.,", "2012),", "outperforming", "a", "strong", "machine-translation", "baseline;", "as", "well", "as", "named-", "entity", "recognition", "and", "machine", "translation", "(Zou", "et", "al.,", "2013;", "Mikolov", "et", "al.,", "2013a).", "a", "r", "X", "i", "v", ":", "1", "4", "1", "0", ".", "2", "4", "5", "5", "v", "3", "[", "s", "t", "a", "t", ".", "M", "L", "]", "4", "F", "e", "b", "2", "0", "1", "6", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Figure", "1.", "(a", "&", "b)", "Monolingual", "embeddings", "have", "been", "shown", "to", "capture", "syntactic", "and", "semantic", "features", "such", "as", "noun", "gender", "(blue)", "and", "verb", "tense", "(red).", "(c)", "The", "(idealized)", "goal", "of", "crosslingual", "embeddings", "is", "to", "capture", "these", "relationships", "across", "two", "or", "more", "languages.", "Since", "these", "techniques", "are", "fundamentally", "data-driven", "tech-", "niques,", "the", "quality", "of", "the", "learned", "representations", "improves", "as", "the", "size", "of", "the", "training", "data", "improves", "(Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014).", "However,", "as", "we", "will", "discuss", "in", "more", "detail", "in", "\u00a72,", "there", "are", "two", "significant", "drawbacks", "associated", "with", "current", "bilingual", "embedding", "methods:", "they", "are", "either", "very", "slow", "to", "train", "or", "they", "can", "only", "exploit", "parallel", "training", "data.", "The", "former", "limits", "the", "large-scale", "application", "of", "these", "techniques,", "while", "the", "latter", "severely", "limits", "the", "amount", "of", "available", "training", "data,", "and", "furthermore", "introduces", "a", "big", "domain", "bias", "into", "the", "learning", "process,", "since", "parallel", "data", "is", "typically", "only", "easily", "available", "for", "certain", "narrow", "domains", "(such", "as", "parliamentary", "discus-", "sions).", "This", "paper", "introduces", "BilBOWA", "(Bilingual", "Bag-of-Words", "without", "Word", "Alignments),", "a", "simple,", "scalable", "technique", "for", "inducing", "bilingual", "word", "embeddings", "with", "a", "trivial", "exten-", "sion", "to", "multilingual", "embeddings.", "The", "model", "is", "able", "to", "leverage", "essentially", "unlimited", "amounts", "of", "monolingual", "raw", "text.", "It", "furthermore", "does", "not", "require", "any", "word-level", "align-", "ments,", "but", "instead", "extracts", "a", "bilingual", "signal", "directly", "from", "a", "limited", "sample", "of", "sentence-aligned,", "raw-text", "parallel", "data", "(e.g", ".", "Europarl)", "which", "it", "uses", "to", "align", "embeddings", "as", "they", "are", "learned", "over", "monolingual", "training", "data.", "Our", "contribu-", "tions", "are", "the", "following:", "\u2022", "We", "introduce", "a", "novel,", "computationally-efficient", "sam-", "pled", "cross-lingual", "objective", "(\u201cBilBOWA-loss\u201d)", "which", "is", "employed", "to", "align", "monolingual", "embeddings", "as", "they", "are", "being", "trained", "in", "an", "online", "setting.", "The", "mono-", "lingual", "models", "can", "scale", "to", "large-scale", "training", "sets,", "thereby", "avoiding", "training", "bias,", "and", "the", "BilBOWA-", "loss", "only", "considers", "sampled", "bag-of-words", "sentence-", "aligned", "data", "at", "each", "training", "step,", "which", "scales", "ex-", "tremely", "well", "and", "also", "avoids", "the", "need", "for", "estimating", "word-alignments", "(\u00a73.2);", "\u2022", "we", "experimentally", "evaluate", "the", "induced", "cross-lingual", "embeddings", "on", "a", "document-classification", "(\u00a75.1)", "and", "lexical", "translation", "task", "(\u00a75.2),", "where", "the", "method", "out-", "performs", "current", "state-of-the-art", "methods,", "with", "train-", "ing", "time", "reduced", "to", "minutes", "or", "hours", "compared", "to", "sev-", "eral", "days", "for", "prior", "approaches;", "\u2022", "finally,", "we", "make", "available", "our", "efficient", "C-", "implementation1", "to", "hopefully", "stimulate", "further", "research", "on", "cross-lingual", "distributed", "feature", "learning.", "2.", "Learning", "Cross-lingual", "Word", "Embeddings", "Monolingual", "word", "embedding", "algorithms", "(Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014)", "learn", "useful", "features", "about", "words", "from", "raw", "text", "(e.g.", "Fig", "1", "(a)", "&", "(b)).", "These", "algo-", "rithms", "are", "trained", "over", "large", "datasets", "to", "be", "able", "to", "predict", "words", "from", "the", "contexts", "in", "which", "they", "appear.", "Their", "work-", "ing", "can", "intuitively", "be", "understood", "as", "mapping", "each", "word", "to", "a", "learned", "vector", "in", "an", "embedded", "space,", "and", "updating", "these", "vectors", "in", "an", "attempt", "to", "simultaneously", "minimize", "the", "distance", "from", "a", "word\u2019s", "vector", "to", "the", "vectors", "of", "the", "words", "with", "which", "it", "frequently", "co-occurs.", "The", "result", "of", "this", "opti-", "mization", "process", "yields", "a", "rich", "geometrical", "encoding", "of", "the", "distributional", "properties", "of", "natural", "language,", "where", "words", "with", "similar", "distributional", "properties", "cluster", "together.", "Due", "to", "their", "general", "nature,", "these", "features", "work", "well", "for", "several", "NLP", "prediction", "tasks", "(Collobert", "et", "al.,", "2011;", "Turian", "et", "al.,", "2010).", "In", "the", "cross-lingual", "setup,", "the", "goal", "is", "to", "learn", "features", "which", "generalize", "well", "across", "different", "tasks", "and", "different", "languages.", "The", "goal", "is", "therefore", "to", "learn", "features", "(embed-", "dings)", "for", "each", "word", "such", "that", "similar", "words", "in", "each", "lan-", "1", "https://github.com/gouwsmeister/bilbowa", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "guage", "are", "assigned", "similar", "embeddings", "(the", "monolingual", "objectives),", "but", "additionally", "we", "also", "want", "similar", "words", "across", "languages", "to", "have", "similar", "representations", "(the", "cross-", "lingual", "objective).", "The", "latter", "property", "allows", "one", "to", "use", "the", "learned", "embeddings", "as", "features", "for", "training", "a", "discrimi-", "native", "classifier", "to", "predict", "labels", "in", "one", "language", "(e.g", ".", "top-", "ics,", "parts-of-speech,", "or", "named-entities)", "where", "we", "have", "la-", "belled", "data,", "and", "then", "directly", "transfer", "it", "to", "a", "language", "for", "which", "we", "do", "not", "have", "much", "labelled", "data.", "From", "an", "opti-", "mization", "perspective,", "there", "are", "several", "approaches", "to", "how", "one", "can", "optimize", "these", "two", "objectives", "(our", "classification):", "OFFLINE", "ALIGNMENT:", "The", "simplest", "approach", "is", "to", "opti-", "mize", "each", "monolingual", "objective", "separately", "(i.e.", "train", "em-", "beddings", "on", "each", "language", "separately", "using", "any", "of", "the", "sev-", "eral", "available", "off-the-shelve", "toolkits),", "and", "then", "enforce", "the", "cross-lingual", "constraints", "as", "a", "separate,", "disjoint,", "\u2018alignment\u2019", "step.", "The", "alignment", "step", "consists", "of", "learning", "a", "transforma-", "tion", "for", "projecting", "the", "embeddings", "of", "words", "onto", "the", "em-", "beddings", "of", "their", "translation", "pairs,", "obtained", "from", "a", "dictio-", "nary.", "This", "was", "shown", "to", "be", "a", "viable", "approach", "by", "(Mikolov", "et", "al.,", "2013a)", "who", "learned", "a", "linear", "projection", "from", "one", "em-", "bedding", "space", "to", "the", "other.", "It", "was", "extended", "by", "(Faruqui", "&", "Dyer,", "2014),", "who", "simultanteously", "projected", "source", "and", "tar-", "get", "language", "embeddings", "into", "a", "joint", "space", "using", "canonical", "correlation", "analysis.", "The", "advantage", "of", "this", "approach", "is", "that", "it", "is", "very", "fast", "to", "learn", "the", "embedding", "alignments.", "The", "main", "drawback", "of", "this", "approach", "is", "that", "it", "is", "not", "clear", "that", "a", "sin-", "gle", "transformation", "(whether", "linear", "or", "nonlinear)", "can", "cap-", "ture", "the", "relationships", "between", "all", "words", "in", "the", "source", "and", "target", "languages,", "and", "our", "improved", "results", "on", "the", "transla-", "tion", "task", "seem", "to", "point", "to", "the", "contrary", "(\u00a75.2).", "Furthermore,", "an", "accurate", "dictionary", "is", "required", "for", "the", "language-pair", "and", "the", "method", "considers", "only", "one", "translation", "per", "word,", "which", "ignores", "the", "rich", "multi-sense", "polysemy", "of", "natural", "languages.", "PA", "R", "A", "L", "LEL-", "O", "N", "LY:", "Alternatively,", "one", "may", "leverage", "purely", "sentence-aligned", "parallel", "data", "and", "train", "a", "model", "to", "learn", "similar", "representations", "for", "the", "aligned", "sentences.", "This", "is", "the", "approach", "followed", "by", "the", "BiCVM", "(Hermann", "&", "Blun-", "som,", "2013)", "and", "the", "bilingual", "auto-encoder", "(BAE,", "(Chan-", "dar", "et", "al.,", "2014)).", "The", "advantage", "of", "this", "approach", "is", "that", "it", "can", "be", "fast", "when", "using", "an", "efficient", "noise-contrastive", "train-", "ing", "criterion", "like", "that", "of", "the", "BiCVM.", "The", "main", "drawbacks", "of", "this", "method", "are", "that", "it", "can", "only", "train", "on", "limited", "paral-", "lel", "data,", "which", "is", "expensive", "to", "obtain", "and", "not", "necessarily", "written", "in", "the", "same", "style", "or", "register", "as", "the", "domain", "where", "the", "features", "might", "be", "applied", "(i.e.", "there", "is", "a", "strong", "domain", "bias).", "JOINTLY-TRAINED", "MODELS:", "Another", "approach", "is", "to", "jointly", "optimize", "the", "monolingual", "objectives", "L(\u00b7),", "with", "the", "cross-lingual", "objective", "enforced", "as", "a", "cross-lingual", "regu-", "larizer", "(see", "Figure", "2", "for", "a", "schematic).", "To", "do", "this,", "we", "define", "a", "cross-lingual", "regularization", "term", "\u03a9(\u00b7),", "and", "use", "it", "to", "con-", "Figure", "2.", "Schematic", "of", "the", "proposed", "BilBOWA", "model", "architec-", "ture", "for", "inducing", "bilingual", "word", "embeddings.", "Two", "monolingual", "skipgram", "models", "are", "jointly", "trained", "while", "enforcing", "a", "sampled", "L2", "-loss", "which", "aligns", "the", "embeddings", "such", "that", "translation-pairs", "are", "assigned", "similar", "embeddings", "in", "the", "two", "languages.", "strain", "monolingual", "models", "as", "they", "are", "jointly", "being", "trained", "over", "the", "context", "h", "and", "target", "word", "wt", "training", "pairs", "in", "the", "dataset", "D,", "e.g", ".", "L=", "min", "\u03b8e,\u03b8f", "X", "l\u2208{e,f}", "X", "wt", ",h\u2208Dl", "Ll(wt,", "h;", "\u03b8l)", "|", "{z", "}", "feature", "learning", "+\u03bb", "\u03a9(\u03b8e", ",", "\u03b8f)", "|{z}", "alignment", ".", "(1)", "This", "formulation", "captures", "the", "intuition", "that", "we", "want", "to", "learn", "representations", "which", "model", "their", "individual", "lan-", "guages", "well", "(the", "first", "term)", "while", "the", "\u03a9(\u00b7)", "regularizer", "en-", "courages", "representations", "to", "be", "similar", "for", "words", "that", "are", "related", "across", "the", "two", "languages.", "Conceptually,", "this", "regu-", "larizer", "consists", "of", "minimizing", "a", "distance", "function", "between", "the", "vector", "representations", "ri", "learned", "for", "words", "wi", "in", "the", "two", "domains,", "weighted", "by", "how", "similar", "they", "are,", "i.e.", "\u03a9(Re", ",Rf)=", "X", "wi\u2208V", "e", "X", "wj\u2208V", "f", "sim(wi", ",", "wj", ")", "\u00b7", "distance(r", "e", "i,r", "f", "j).", "(2)", "where", "we", "use", "R", "to", "denote", "learned", "embedding", "represen-", "tations,", "and", "ri", "to", "denote", "the", "embedding", "learned", "for", "word", "wi", ".", "In", "other", "words,", "when", "this", "weighted", "sum", "(and", "hence", "its", "contribution", "to", "the", "total", "objective)", "is", "low,", "one", "can", "be", "sure", "that", "words", "across", "languages", "that", "are", "similar", "(i.e", ".", "high", "sim(wi", ",", "wj", "))", "will", "be", "embedded", "nearby", "each", "other.", "This", "approach", "was", "shown", "to", "be", "useful", "by", "(Klementiev", "et", "al.,", "2012).", "Crucially,", "the", "advantages", "of", "this", "formulation", "are", "that", "it", "enables", "one", "to", "train", "on", "any", "available", "monolin-", "gual", "data,", "which", "is", "both", "more", "abundant", "and", "less", "biased", "than", "the", "parallel-only", "approach,", "since", "one", "can", "train", "on", "data", "which", "resembles", "the", "data", "one", "will", "be", "applying", "the", "learned", "features", "to.", "The", "disadvantage", "is", "that", "the", "original", "model", "of", "Klementiev", "et", "al.", "is", "extremely", "slow", "to", "train.", "The", "train-", "ing", "complexity", "stems", "both", "from", "how", "the", "authors", "imple-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "ment", "their", "monolingual", "and", "cross-lingual", "objectives.", "For", "the", "monolingual", "objective,", "they", "train", "a", "standard", "neural", "lan-", "guage", "model", "for", "which", "the", "complexity", "of", "the", "output", "soft-", "max", "layer", "grows", "with", "the", "output", "vocabulary", "size.", "There-", "fore,", "in", "order", "to", "evaluate", "the", "model", "the", "authors", "had", "to", "re-", "duce", "the", "output", "vocabulary", "to", "only", "the", "3000", "most", "frequent", "words.", "The", "second", "reason", "for", "the", "slow", "training", "time", "is", "that", "the", "cross-lingual", "objective", "considers", "the", "interactions", "between", "all", "pairs", "of", "words", "(in", "the", "worst", "case)", "between", "the", "source", "and", "target", "vocabulary", "at", "each", "training", "step,", "which", "scales", "as", "the", "product", "of", "the", "two", "vocabularies2.", "In", "this", "work,", "we", "address", "these", "two", "issues", "individually.", "3.", "The", "BilBOWA", "Model", "As", "discussed", "in", "\u00a72,", "the", "primary", "challenges", "with", "existing", "bilingual", "embedding", "models", "are", "their", "computational", "com-", "plexity", "(due", "to", "an", "expensive", "softmax", "or", "an", "expensive", "reg-", "ularization", "term,", "or", "both),", "but", "most", "importantly,", "the", "strong", "domain", "bias", "that", "is", "introduced", "by", "models", "that", "train", "only", "on", "parallel", "data", "such", "as", "Europarl.", "The", "BilBOWA", "model", "is", "designed", "to", "overcome", "these", "issues", "in", "order", "to", "enable", "computationally-efficient", "cross-lingual", "distributed", "feature", "learning", "over", "large", "amounts", "of", "monolin-", "gual", "text.", "A", "schematic", "overview", "of", "the", "model", "is", "shown", "in", "Figure", "2.", "The", "two", "main", "aspects", "(discussed", "in", "the", "following", "sections)", "are", "1.", "First,", "similar", "to", "(Zou", "et", "al.,", "2013),", "we", "leverage", "ad-", "vances", "in", "monolingual", "feature", "learning", "algorithms", "by", "replacing", "the", "softmax", "objective", "with", "a", "more", "efficient", "noise-contrastive", "objective", "(\u00a73.1),", "allowing", "monolin-", "gual", "training", "updates", "to", "scale", "independently", "of", "the", "vo-", "cabulary", "size.", "2.", "Second,", "we", "introduce", "a", "novel", "computationally-", "efficient", "cross-lingual", "loss", "which", "only", "considers", "sam-", "pled,", "bag-of-words", "sentence-aligned", "data", "for", "the", "cross-lingual", "objective", "(\u00a73.2).", "This", "avoids", "the", "need", "for", "estimating", "word", "alignments,", "but", "moreover,", "the", "com-", "putation", "of", "the", "regularization", "term", "reduces", "to", "only", "the", "words", "in", "the", "observed", "sample", "(compared", "to", "consider-", "ing", "the", "O(V", "2)", "worst-case", "possible", "interactions", "at", "each", "training", "step", "in", "the", "naive", "case).", "3.1.", "Learning", "Monolingual", "Features:", "The", "L", "term", "Since", "we", "do", "not", "care", "about", "language", "modelling,", "but", "more", "about", "feature", "learning,", "an", "alternative", "to", "the", "softmax", "is", "to", "use", "a", "noise-contrastive", "approach", "to", "score", "valid,", "observed", "combinations", "of", "words", "against", "randomly", "sampled,", "unlikely", "combinations", "of", "words.", "This", "idea", "was", "introduced", "by", "Col-", "lobert", "and", "Weston", "(Collobert", "et", "al.,", "2011)", "where", "they", "opti-", "2", "If", "we", "limit", "each", "word", "to", "align", "to", "k", "words", "this", "is", "still", "O(V", "k).", "mized", "a", "margin", "between", "the", "observed", "score", "and", "the", "noise", "scores.", "In", "their", "formulation,", "scores", "were", "computed", "on", "se-", "quences", "of", "words,", "but", "in", "(Mikolov", "et", "al.,", "2013a)", "this", "idea", "was", "taken", "one", "step", "further", "and", "successfully", "applied", "to", "bag-", "of-word", "representations", "of", "contexts", "in", "their", "continuous", "bag-", "of-words", "(CBOW)", "and", "skipgram", "models", "trained", "using", "the", "negative", "sampling", "training", "objective", "(a", "simplified", "version", "of", "noise-contrastive", "estimation", "(Mnih", "&", "Teh,", "2012)).", "Any", "of", "these", "objectives", "would", "yield", "comparable", "speedup", "and", "could", "be", "used", "in", "our", "architecture.", "In", "this", "work", "we", "opted", "for", "the", "skipgram", "model", "trained", "using", "negative", "sampling", "since", "it", "has", "been", "shown", "to", "learn", "high-quality", "monolingual", "fea-", "tures.", "3.2.", "Learning", "Cross-lingual", "Features:", "The", "BilBOWA-loss", "(\u03a9", "term)", "Besides", "learning", "how", "words", "in", "one", "language", "relate", "to", "each", "other,", "it", "is", "equally", "important", "for", "the", "representations", "to", "cap-", "ture", "how", "words", "between", "the", "two", "languages", "relate", "to", "each", "other,", "which", "we", "enforce", "using", "the", "\u03a9", "term", "in", "equation", "1.", "In", "the", "general", "bilingual", "setting,", "word", "similarities", "can", "be", "ex-", "pressed", "as", "a", "matrix", "A", "where", "aij", "encodes", "the", "translation", "\u201cscore\u201d", "of", "word", "i", "in", "one", "language", "with", "word", "j", "in", "the", "other.", "In", "the", "rest", "of", "our", "discussion", "we", "will", "refer", "to", "English", "and", "French,", "and", "denote", "all", "English-specific", "parameters", "using", "e", "superscript,", "and", "all", "French-specific", "parameters", "with", "f", "su-", "perscript.", "If", "the", "K", "-dimensional", "word", "embedding", "row-vectors", "ri", "are", "stacked", "to", "form", "a", "(V,", "K)-dimensional", "matrix", "R,", "then", "we", "can", "express", "what", "we", "will", "refer", "to", "as", "the", "exact", "cross-lingual", "objective", "as", "follows:", "\u03a9A(Re", ",Rf)=", "X", "i", "X", "j", "aij", "||r", "e", "i\u2212r", "f", "j", "||2", "(3)", "=", "(Re", "\u2212", "Rf", ")>A(Re", "\u2212", "Rf", ").", "(4)", "where", "subscript", "A", "indicates", "that", "the", "alignments", "are", "fixed", "(given).", "A", "captures", "the", "relationships", "between", "all", "V", "e", "words", "in", "English", "with", "respect", "to", "all", "V", "f", "words", "in", "French,", "and", "is", "indeed", "also", "the", "source", "of", "the", "two", "main", "challenges", "in", "this", "formulation,", "namely:", "1.", "how", "to", "derive", "or", "learn", "which", "words", "to", "pair", "as", "transla-", "tion", "pairs", "(i.e", ".", "deriving/learning", "A);", "2.", "how", "to", "efficiently", "evaluate", "\u03a9(\u00b7)", "during", "training,", "since", "naively", "evaluating", "it", "scales", "as", "the", "product", "of", "the", "two", "vocabulary", "sizes", "O(|V", "e|", "\u00b7", "|V", "f", "|)", "at", "each", "training", "step.", "The", "cross-lingual", "objective", "therefore", "penalizes", "the", "Euclid-", "ian", "distance", "between", "words", "in", "the", "two", "embedding", "spaces", "(Re", "and", "Rf", ")", "proportional", "to", "their", "alignment", "frequency.", "Previous", "work", "approached", "this", "step", "by", "performing", "a", "word-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Figure", "3.", "Using", "global", "word-alignments", "for", "aligning", "cross-lingual", "embeddings", "(equation", "3)", "is", "costly", "and", "scales", "as", "the", "product", "of", "the", "two", "vocabulary", "sizes.", "In", "contrast,", "the", "BilBOWA-loss", "(equation", "7)", "approximates", "the", "global", "loss", "by", "averaging", "over", "implicit", "local", "co-occurrence", "statistics", "in", "a", "limited", "sample", "of", "parallel", "sentence-pairs.", "alignment", "step", "prior", "to", "training", "to", "learn", "the", "alignment", "ma-", "trix", "A.", "However,", "performing", "word", "alignment", "requires", "run-", "ning", "Giza++", "(Och", "&", "Ney,", "2003)", "or", "FastAlign", "(Dyer", "et", "al.,", "2013)", "software", "and", "training", "HMM", "word-alignment", "mod-", "els.", "This", "is", "both", "computationally", "costly", "and", "also", "noisy.", "We", "would", "like", "to", "learn", "the", "translation", "correspondences", "without", "utilizing", "word", "alignments.", "In", "order", "to", "do", "that,", "we", "directly", "exploit", "the", "parallel", "training", "data.", "The", "main", "contribution", "of", "this", "work", "is", "to", "approximate", "the", "costly", "\u03a9(\u00b7)", "term,", "defined", "in", "equation", "3", "in", "terms", "of", "the", "global", "word-alignment", "statistics,", "using", "cheaply-obtained", "local", "word", "co-occurrence", "statistics", "obtained", "from", "raw-text", "parallel", "sentence-pairs", "(i.e.", "without", "running", "a", "word-alignment", "step).", "The", "main", "concept", "is", "il-", "lustrated", "schematically", "in", "Figure", "3,", "and", "discussed", "in", "more", "detail", "below.", "As", "a", "first", "step,", "notice", "that", "since", "the", "alignment", "weights", "can", "be", "normalized", "to", "sum", "to", "one,", "we", "can", "interpret", "the", "alignment", "weights", "as", "a", "distribution", "and", "write", "equation", "3", "as", "an", "expec-", "tation", "over", "the", "distribution", "of", "English", "and", "French", "word-", "alignment", "probabilities", "aij", "=", "P", "(we", "i,w", "f", "j),", "\u03a9A(Re", ",Rf)=", "E", "(i,j)\u223cP", "(we", ",wf", ")", "h||r", "e", "i\u2212r", "f", "j", "||2i", "(5)", "Since", "the", "parallel", "data", "is", "paired", "at", "the", "sentence", "level,", "we", "know", "that", "translation", "pairs", "for", "the", "en", "sentence", "occur", "in", "the", "fr", "sentence,", "but", "we", "do", "not", "know", "where.", "We", "therefore", "need", "a", "word-alignment", "model.", "A", "naive", "assumption", "is", "to", "assume", "that", "each", "observed", "en", "word", "can", "potentially", "be", "aligned", "with", "each", "observed", "fr", "word", "(i.e", ".", "to", "assume", "a", "uniform", "word-", "alignment", "model),", "for", "each", "word", "in", "the", "observed", "sentence", "pairs.", "Under", "this", "assumption,", "one", "can", "then", "approximate", "equation", "5", "by", "sampling", "S", "m-length", "English", "and", "n-length", "French", "sentence-pairs", "(se", ",", "sf", ")", "from", "the", "parallel", "training", "data:", "\u03a9A(Re", ",Rf)\u2248", "1", "S", "X", "(se,sf", ")\u2208S", "1", "mn", "X", "wi\u2208se", "X", "wj", "\u2208sf", "||r", "e", "i\u2212r", "f", "j", "||2", "(6)", "It", "is", "important", "to", "note", "that", "the", "lengths", "of", "the", "sampled", "En-", "glish", "and", "French", "parallel", "sentences", "m", "and", "n", "need", "not", "be", "equal,", "and", "more", "importantly", "m", " ", "|V", "e|", "and", "n", " ", "|V", "f|.", "Furthermore,", "notice", "that", "under", "a", "uniform", "alignment", "model,", "at", "each", "training", "step,", "each", "word", "in", "the", "sampled", "English", "sen-", "tence", "se", "will", "be", "updated", "towards", "all", "words", "in", "the", "French", "sentence", "sf", ".", "We", "can", "precompute", "this", "by", "simply", "updating", "each", "English", "word", "towards", "the", "mean", "French", "bag-of-words", "sentence-vector.", "Specifically,", "we", "implement", "equation", "6", "by", "sampling", "only", "one", "parallel", "sentence-pair", "per", "training", "step", "(i.e", ".", "S", "=", "1),", "and", "at", "each", "training", "step", "t", "we", "optimize", "the", "fol-", "lowing", "sampled,", "approximate", "cross-lingual", "objective:", "\u03a9(t)", "A", "(Re", ",", "Rf),||", "1", "m", "m", "X", "wi\u2208se", "r", "e", "i\u2212", "1", "n", "n", "X", "wj", "\u2208sf", "r", "f", "j", "||2", "(7)", "where", "s\u2217", "denotes", "the", "English", "or", "French", "sampled", "sentence-", "pair", "drawn", "from", "the", "parallel", "corpus.", "In", "other", "words,", "the", "BilBOWA-loss", "minimizes", "a", "sampled", "L2", "-loss", "between", "the", "mean", "bag-of-words", "sentence-vectors", "of", "the", "parallel", "corpus.", "On", "its", "own,", "this", "objective", "is", "degenerate", "since", "all", "embed-", "dings", "would", "converge", "to", "the", "trivial", "solution", "(by", "collapsing", "all", "embeddings", "to", "the", "same", "value),", "but", "coupled", "as", "a", "regu-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "larizer", "with", "the", "monolingual", "losses,", "we", "find", "that", "it", "works", "very", "well", "in", "practice.", "By", "sampling", "training", "sentences", "from", "the", "parallel", "document", "distribution,", "this", "objective", "efficiently", "approximates", "equation", "3", "(the", "more", "two", "words", "are", "observed", "together", "in", "a", "parallel", "sentence-pair,", "the", "stronger", "the", "embed-", "dings", "for", "the", "two", "words", "will", "be", "pushed", "together,", "i.e.", "propor-", "tional", "to", "aij", "),", "without", "having", "to", "actually", "compute", "the", "word", "alignment", "weights", "aij", ".", "3.3.", "Parallel", "subsampling", "for", "better", "results", "Equation", "7", "is", "an", "approximation", "of", "equation", "3.", "As", "illus-", "trated", "in", "Figure", "3,", "we", "are", "really", "interested", "in", "estimating", "the", "global", "word-alignment", "statistics", "for", "a", "word-pair,", "i.e", ".", "aij", ".", "However,", "by", "sampling", "words", "at", "the", "sentence-level,", "the", "lo-", "cal", "alignment", "statistics", "are", "skewed", "by", "the", "words\u2019", "unigram", "frequencies", "of", "occurrence", "in", "a", "given", "sentence", "(i.e", ".", "regard-", "less", "of", "alignment).", "Since", "language", "has", "a", "very", "strong", "Zipfian", "distribution", "we", "therefore", "find", "in", "practice", "that", "equation", "7", "over-regularizes", "the", "frequent", "words.", "A", "simple", "solution", "to", "this", "is", "to", "subsample", "(discard)", "words", "from", "the", "parallel", "sen-", "tences", "proportional", "to", "their", "unigram", "probabilities", "of", "occur-", "rence.", "In", "other", "words,", "we", "discard", "each", "word", "from", "the", "paral-", "lel", "sentences", "with", "a", "probability", "that", "depends", "on", "its", "unigram", "frequency", "of", "occurrence.", "This", "heavily", "discards", "frequent", "words", "and", "effectively", "flattens", "the", "unigram", "distribution", "to", "a", "uniform", "distribution.", "This", "idea", "is", "closely", "related", "to", "the", "monolingual", "subsampling", "employed", "in", "the", "word2vec", "mod-", "els,", "although", "it", "is", "motivated", "for", "a", "different", "reason", "in", "the", "cross-lingual", "setting", "to", "obtain", "a", "better", "approximation", "of", "the", "global", "word-alignment", "statistics", "from", "the", "local", "sentence-", "level", "co-occurrence", "statistics", "(see", "Figure", "3).", "In", "practice", "we", "found", "this", "useful", "to", "learn", "finer-grained", "cross-", "lingual", "embeddings", "for", "the", "frequent", "words.", "To", "better", "illus-", "trate", "the", "effect", "this", "has", "on", "training,", "we", "jointly", "visualized", "the", "top-25", "most", "frequent", "words", "in", "English", "and", "German", "using", "the", "t-SNE", "algorithm.", "This", "is", "illustrated", "in", "Figure", "4.", "We", "show", "in", "red", "the", "embeddings", "trained", "without", "subsampling", "and", "in", "blue", "the", "embeddings", "for", "the", "same", "words", "trained", "us-", "ing", "parallel", "subsampling.", "As", "the", "visualization", "shows,", "with-", "out", "subsampling", "frequent", "words", "are", "over-regularized", "and", "cluster", "near", "the", "origin.", "This", "effect", "is", "largely", "reduced", "by", "the", "proposed", "subsampling", "scheme.", "4.", "Implementation", "and", "Training", "Details", "We", "implemented", "our", "model", "in", "C", "by", "building", "on", "the", "pop-", "ular", "open-source", "word2vec", "toolkit3.", "The", "implementa-", "tion", "launches", "a", "monolingual", "skipgram", "model", "as", "a", "separate", "thread", "for", "each", "language,", "as", "well", "as", "a", "cross-lingual", "thread.", "All", "threads", "access", "the", "shared", "embedding", "parameters", "asyn-", "chronously.", "For", "training", "the", "model,", "we", "make", "use", "of", "online", "3", "https://code.google.com/p/word2vec/", "Figure", "4.", "A", "joint", "t-SNE", "visualization", "of", "the", "same", "25", "most", "fre-", "quent", "English", "and", "German", "words", "trained", "without", "(red,", "left)", "and", "with", "parallel", "subsampling", "(blue,", "right),", "illustrating", "the", "effect", "that", "occurs", "without", "parallel", "subsampling,", "as", "frequent", "words", "are", "over-", "regularized", "towards", "the", "origin.", "asynchronous", "stochastic", "gradient", "descent", "(ASGD),", "where", "at", "time", "step", "t,", "parameter", "\u03b8", "is", "updated", "as", "\u03b8(t)", "=\u03b8", "(t\u22121)", "\u2212", "\u03b7", "\u2202L", "\u2202\u03b8", "(8)", "Our", "initial", "implementation", "synchronized", "updates", "between", "threads,", "but", "we", "found", "that", "simply", "clipping", "individual", "up-", "dates", "to", "[\u22120", ".1,", "0.1]", "per", "thread", "was", "sufficient", "to", "ensure", "train-", "ing", "stability", "and", "considerably", "improved", "training", "speed.", "For", "monolingual", "training", "data,", "we", "use", "the", "freely", "available,", "pre-", "tokenized", "Wikipedia", "datasets", "(Al-Rfou\u2019", "et", "al.,", "2013).", "For", "cross-lingual", "training", "we", "use", "the", "freely-available", "Europarl", "v7", "corpus", "(Koehn,", "2005).", "Unlike", "the", "approach", "of", "(Kle-", "mentiev", "et", "al.,", "2012)", "however,", "we", "do", "not", "need", "to", "perform", "a", "word-alignment", "step", "first.", "Instead", "our", "implementation", "trains", "directly", "on", "the", "raw", "parallel", "text", "files", "obtained", "af-", "ter", "applying", "the", "standard", "preprocessing", "scripts", "that", "come", "with", "the", "data", "to", "tokenize,", "recase", "and", "remove", "all", "empty", "sentence-pairs.", "Embedding", "matrices", "were", "initialized", "by", "drawing", "from", "a", "zero", "mean,", "unit-variance", "gaussian", "distri-", "bution.", "The", "skipgram", "negative", "sampling", "objectives", "(a", "sim-", "plified", "form", "of", "noise-contrastive", "estimation)", "require", "us", "to", "sample", "k", "noise", "words", "per", "training", "pair", "from", "the", "unigram", "P", "(w)", "en", "and", "fr", "distributions,", "and", "we", "set", "k", "=", "15", "which", "has", "been", "shown", "to", "give", "good", "results.", "Doing", "each", "training", "update", "therefore", "occurs", "asyn-", "chronously", "across", "the", "threads.", "Monolingual", "threads", "each", "select", "a", "context-target", "(h,wt", ")-pair", "for", "each", "language", "and", "sample", "k", "noise", "words", "according", "to", "their", "unigram", "noise", "dis-", "tributions.", "The", "cross-lingual", "thread", "samples", "a", "random", "pair", "of", "parallel", "sentences", "from", "the", "parallel", "data.", "Finally,", "each", "thread", "makes", "an", "update", "to", "all", "parameters", "asynchronously", "according", "to", "equation", "8,", "for", "which", "gradients", "are", "easy", "to", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "compute", "due", "to", "the", "square-loss", "of", "the", "BilBOWA-loss", "and", "the", "log-linear", "nature", "of", "the", "skipgram", "models.", "The", "learning", "rate", "was", "set", "to", "0.1,", "with", "linear", "decay.", "5.", "Experiments", "In", "this", "section", "we", "present", "experiments", "which", "evaluate", "the", "utility", "of", "the", "induced", "representations.", "We", "evaluate", "the", "em-", "beddings", "in", "a", "cross-lingual", "document", "classification", "task", "which", "tests", "semantic", "transfer", "of", "information", "across", "lan-", "guages,", "as", "well", "as", "a", "word-level", "translation", "task", "which", "tests", "fine-grained", "lexical", "transfer.", "5.1.", "Cross-lingual", "Document", "Classification", "We", "use", "an", "exact", "replication", "of", "the", "cross-lingual", "document", "classification", "(CLDC)", "setup", "introduced", "by", "Klementiev", "et", "al.", "(Klementiev", "et", "al.,", "2012)", "to", "evaluate", "their", "cross-lingual", "embeddings.", "The", "CLDC", "task", "setup", "is", "as", "follows:", "The", "goal", "is", "to", "classify", "documents", "in", "a", "target", "language", "using", "only", "la-", "belled", "documents", "in", "a", "source", "language.", "Specifically,", "we", "train", "an", "averaged", "perceptron", "classifier", "on", "the", "labelled", "train-", "ing", "data", "in", "the", "source", "language", "and", "then", "attempt", "to", "apply", "the", "classifier", "as-is", "to", "the", "target", "data", "(known", "as", "\u201cdirect", "trans-", "fer\u201d).", "Documents", "are", "represented", "as", "the", "tf-idf", "-weighted", "sum", "of", "the", "embedding", "vectors", "of", "the", "words", "that", "appear", "in", "the", "documents.", "Similar", "to", "Klementiev,", "we", "induce", "cross-lingual", "embed-", "dings", "for", "the", "English-German", "language", "pair,", "and", "use", "the", "in-", "duced", "representations", "to", "classify", "a", "subset", "of", "the", "English", "and", "German", "sections", "of", "the", "Reuters", "RCV1/RCV2", "multilingual", "corpora", "(Lewis", "et", "al.,", "2004)", "as", "pertaining", "to", "one", "of", "four", "cat-", "egories:", "CCAT", "(Corporate/Industrial),", "ECAT", "(Economics),", "GCAT", "(Government/Social),", "and", "MCAT", "(Markets).", "For", "the", "classification", "experiments,", "15,000", "documents", "(for", "each", "language)", "were", "randomly", "selected", "from", "the", "RCV1/2", "corpus,", "with", "one", "third", "(5,000)", "used", "as", "the", "test", "set", "and", "the", "remainder", "divided", "into", "training", "sets", "of", "sizes", "between", "100", "and", "10,000,", "and", "a", "separate,", "held-out", "validation", "set", "of", "1,000", "documents", "used", "during", "the", "development", "of", "our", "models.", "Since", "our", "setup", "exactly", "mirrors", "Klementiev", "et", "al,", "we", "use", "the", "same", "baselines,", "namely:", "the", "majority", "class", "baseline,", "glossed", "(replacing", "words", "in", "the", "target", "document", "by", "their", "most", "frequently", "aligned", "words", "in", "the", "source", "language),", "and", "a", "stronger", "MT", "baseline", "(translating", "target", "documents", "into", "the", "source", "language", "using", "an", "SMT", "system).", "Results", "are", "summarized", "in", "Table", "1.", "In", "order", "to", "make", "all", "results", "comparable,", "results", "for", "all", "methods", "reported", "here", "were", "obtained", "using", "the", "same", "embedding", "dimensionality", "of", "40", "and", "the", "same", "training", "data.", "We", "use", "the", "first", "500K", "lines", "of", "the", "English-German", "Europarl", "data", "both", "as", "mono-", "lingual", "and", "parallel", "training", "data.", "We", "use", "a", "vocabulary", "size", "of", "46,", "678", "for", "English", "and", "47,", "903", "for", "German.", "Since", "our", "method", "is", "motivated", "as", "a", "faster", "version", "of", "the", "model", "pro-", "posed", "by", "Klementiev", "et", "al.,", "we", "note", "that", "we", "significantly", "improve", "upon", "their", "results,", "while", "training", "in", "6", "minutes", "ver-", "sus", "the", "original", "10", "days", "(14,400", "minutes).", "This", "yields", "a", "total", "factor", "2,", "400", "speedup.", "This", "demonstrates", "that", "the", "Bil-", "BOWA", "loss", "(equation", "7)", "is", "both", "a", "computationally-efficient", "and", "an", "accurate", "approximation", "of", "the", "full", "cross-lingual", "ob-", "jective", "implemented", "by", "Klementiev", "(equation", "3).", "Next,", "we", "compare", "our", "method", "to", "the", "current", "state-of-the-art", "bilingual", "embedding", "methods.", "The", "current", "state-of-the-art", "on", "this", "task", "is", "91.8", "(en2de)", "and", "72.8", "(de2en)", "reported", "us-", "ing", "the", "Bilingual", "Auto-encoder", "(BAE)", "model", "by", "(Chandar", "et", "al.,", "2014).", "Hermann", "et", "al.", "(Hermann", "&", "Blunsom,", "2013)", "report", "83.7", "and", "71.4", "with", "the", "BiCVM", "model.", "As", "shown,", "our", "model", "outperforms", "the", "BiCVM", "on", "both", "tasks,", "and", "out-", "performs", "BAEs", "on", "German", "to", "English", "to", "yield", "a", "current", "state-of-the-art", "result", "on", "that", "task", "of", "75%.", "The", "runtime", "of", "our", "method", "also", "compares", "very", "favorably", "to", "other", "meth-", "ods.", "Note", "that", "even", "though", "the", "BiCVM", "method", "should", "in", "principle", "be", "as", "fast", "or", "faster", "than", "our", "method,", "its", "reported", "training", "time", "here", "is", "slightly", "higher", "since", "it", "was", "trained", "for", "more", "iterations", "over", "the", "data.", "5.2.", "WMT11", "Word", "Translation", "We", "also", "evaluated", "the", "induced", "cross-lingual", "embeddings", "on", "the", "word", "translation", "task", "used", "by", "Mikolov", "et", "al.", "(Mikolov", "et", "al.,", "2013a)", "using", "the", "publicly-available", "WMT11", "data4.", "In", "this", "task,", "the", "authors", "extracted", "the", "6K", "most", "frequent", "words", "from", "the", "WMT11", "English-Spanish", "data,", "and", "then", "used", "the", "online", "Google", "Translate", "service", "to", "derive", "dictio-", "naries", "by", "translating", "these", "source", "words", "into", "the", "target", "lan-", "guage", "(individually", "for", "English", "and", "Spanish).", "Since", "their", "method", "requires", "translation-pairs", "for", "training,", "they", "used", "the", "first", "5K", "most", "frequent", "words", "to", "learn", "the", "\u201ctranslation", "ma-", "trix\u201d,", "and", "then", "evaluated", "their", "method", "on", "the", "remaining", "1K", "words", "used", "as", "a", "test", "set.", "To", "translate", "a", "source", "word,", "one", "finds", "its", "k", "nearest", "neighbours", "in", "the", "target", "language", "em-", "bedding", "space,", "and", "then", "evaluate", "the", "translation", "precision", "P", "@k", "as", "the", "fraction", "of", "target", "translations", "that", "are", "within", "the", "top-k", "words", "returned", "using", "the", "specific", "method.", "Our", "method", "does", "not", "require", "translation-pairs", "for", "training,", "so", "we", "simply", "test", "on", "the", "same", "1K", "test-pairs.", "We", "use", "as", "baselines", "the", "same", "two", "methods", "described", "in", "(Mikolov", "et", "al.,", "2013a).", "Edit", "Distance", "ranks", "words", "based", "on", "their", "edit-distance.", "Word", "Co-occurrence", "is", "based", "on", "dis-", "tributional", "similarity:", "For", "each", "word", "w,", "one", "first", "constructs", "a", "word", "co-occurrence", "vector", "which", "counts", "the", "words", "with", "which", "w", "co-occurs", "within", "a", "10-word", "window", "in", "the", "corpus.", "The", "word-count", "vectors", "are", "then", "mapped", "from", "the", "source", "to", "the", "target", "language", "using", "the", "dictionary.", "Finally,", "for", "each", "test", "word,", "the", "word", "with", "the", "most", "similar", "vector", "in", "the", "tar-", "4", "http://www.statmt.org/wmt11/", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Method", "en", "\u2192", "de", "de", "\u2192", "en", "Training", "Time", "(min)", "Majority", "Baseline", "46.8", "46.8", "-", "Glossed", "Baseline", "65.1", "68.6", "-", "MT", "Baseline", "68.1", "67.4", "-", "Klementiev", "et", "al.", "77.6", "71.1", "14,400", "Bilingual", "Auto-encoders", "(BAEs)", "91.8", "72.8", "4,800", "BiCVM", "83.7", "71.4", "15", "BilBOWA", "(this", "work)", "86.5", "75", "6", "Table", "1.", "Classification", "accuracy", "and", "training", "times", "for", "the", "proposed", "BilBOWA", "method", "compared", "to", "Klementiev", "et", "al.", "(Klementiev", "et", "al.,", "2012),", "Bilingual", "Auto-encoders", "(Chandar", "et", "al.,", "2014),", "and", "the", "BiCVM", "model", "(Hermann", "&", "Blunsom,", "2013),", "on", "an", "exact", "replica", "of", "the", "Reuters", "cross-lingual", "document", "classification", "task.", "These", "methods", "were", "all", "used", "to", "induce", "40-dimensional", "embeddings", "using", "the", "same", "training", "data.", "Baseline", "results", "are", "from", "Klementiev.", "Method", "En\u2192Sp", "P@1", "Sp\u2192En", "P@1", "En\u2192Sp", "P@5", "Sp\u2192En", "P@5", "Edit", "Distance", "13", "18", "24", "27", "Word", "Co-occurrence", "30", "19", "20", "30", "Mikolov", "et", "al.,", "2013", "33", "35", "51", "52", "BilBOWA", "(this", "work)", "39", "(+6)", "44", "(+9)", "51", "55", "(+3)", "Table", "2.", "Results", "for", "the", "translation", "task", "measured", "as", "word", "translation", "accuracy", "(out", "of", "100,", "higher", "is", "better)", "evaluated", "on", "the", "top-1", "and", "top-5", "words", "as", "ranked", "by", "the", "method.", "Cross-lingual", "embeddings", "are", "induced", "and", "distance", "in", "the", "embedded", "space", "are", "used", "to", "select", "word", "translation", "pairs.", "+x", "indicates", "improvement", "in", "absolute", "precision", "over", "the", "previous", "state-of-the-art", "on", "this", "task", "(Mikolov", "et", "al.,", "2013a).", "get", "language", "is", "selected", "as", "its", "translation.", "The", "results", "on", "the", "English-Spanish", "translation", "tasks", "are", "summarized", "in", "Table", "2.", "We", "induced", "40-dimensional", "em-", "beddings", "using", "the", "English", "and", "Spanish", "Wikipedias", "and", "Europarl", "as", "parallel", "data.", "Our", "model", "improves", "on", "both", "the", "baselines", "and", "on", "Mikolov", "et", "al.\u2019s", "method", "on", "both", "tasks", "and", "gives", "a", "noticeable", "improvement", "in", "accuracy", "for", "the", "P", "@1", "prediction.", "For", "the", "English", "to", "Spanish", "translation,", "we", "improve", "absolute", "word", "translation", "accuracy", "by", "6", "per-", "cent.", "For", "the", "Spanish", "to", "English", "task,", "we", "improve", "abso-", "lute", "word", "translation", "accuracy", "by", "9", "percent.", "This", "indi-", "cates", "that", "our", "model", "is", "able", "to", "learn", "fine-grained", "translation", "equivalences", "from", "the", "monolingual", "data", "by", "using", "only", "the", "raw-text,", "sentence-aligned", "parallel", "data,", "despite", "the", "lack", "of", "word-level", "alignments", "or", "training", "dictionaries.", "6.", "Discussion", "The", "BilBOWA", "model", "as", "introduced", "in", "this", "paper", "utilizes", "a", "sampled", "L2", "bag-of-words", "cross-lingual", "loss.", "This", "is", "the", "main", "source", "of", "the", "significant", "speedup", "over", "the", "Klementiev", "model,", "allowing", "training", "to", "scale", "to", "much", "larger", "datasets,", "which", "in", "turn", "yields", "more", "accurate", "features.", "We", "found", "that", "the", "asynchronous", "implementation", "significantly", "speeds", "up", "training", "with", "no", "noticeable", "impact", "on", "the", "quality", "of", "the", "learned", "embeddings,", "and", "the", "parallel", "subsampling", "im-", "proves", "the", "accuracy", "of", "the", "learned", "features.", "Getting", "asyn-", "chronous", "training", "to", "work", "required", "clipping", "the", "updates,", "especially", "as", "the", "dimensionality", "of", "the", "embeddings", "gets", "larger.", "Parallel", "subsampling", "makes", "training", "more", "accurate,", "especially", "for", "the", "frequent", "words,", "and", "therefore", "turns", "out", "to", "be", "important", "both", "in", "the", "monolingual", "and", "crosslingual", "setting.", "We", "have", "motivated", "the", "reason", "for", "the", "crosslin-", "gual", "setting", "as", "helping", "to", "uncover", "a", "better", "approximation", "of", "the", "global", "alignment", "statistics", "from", "the", "observed", "local,", "sentence-level", "co-occurrences.", "Despite", "the", "speedup,", "the", "model", "is", "still", "much", "slower", "to", "use", "than", "offline", "methods", "like", "translation", "matrix", "(Mikolov", "et", "al.,", "2013a)", "or", "multilingual", "CCA", "(Faruqui", "&", "Dyer,", "2014).", "How-", "ever,", "results", "on", "the", "translation", "task", "suggest", "BilBOWA", "can", "learn", "finer-grained", "cross-lingual", "relationships", "than", "these", "methods,", "and", "can", "train", "over", "much", "larger", "monolingual", "datasets", "than", "parallel-only", "methods.", "If", "the", "goal", "is", "to", "learn", "high-quality", "general", "purpose", "bilingual", "embeddings,", "it", "is", "al-", "ways", "beneficial", "to", "leverage", "more", "training", "data,", "and", "hence", "a", "hybrid", "model", "like", "BilBOWA", "might", "be", "a", "better", "choice", "than", "a", "parallel-only", "technique", "like", "BiCVM", "or", "BAEs.", "7.", "Conclusion", "We", "introduce", "BilBOWA,", "a", "computationally-efficient", "model", "for", "inducing", "bilingual", "distributed", "word", "representations", "di-", "rectly", "from", "monolingual", "raw", "text", "and", "a", "limited", "amount", "of", "parallel", "data,", "without", "requiring", "word-alignments", "or", "dictio-", "naries.", "BilBOWA", "combines", "advances", "in", "training", "monolin-", "gual", "word", "embeddings", "with", "a", "particularly", "efficient", "novel", "sampled", "cross-lingual", "objective.", "The", "result", "is", "that", "the", "re-", "quired", "computations", "per", "training", "step", "scales", "only", "with", "the", "number", "of", "words", "in", "the", "sentences,", "thereby", "enabling", "effi-", "cient", "large-scale", "cross-lingual", "training.", "We", "achieve", "state-", "of-the-art", "results", "for", "English-German", "cross-lingual", "docu-", "ment", "classification", "whilst", "obtaining", "up", "to", "three", "orders", "of", "magnitude", "speedup,", "and", "improve", "upon", "the", "previous", "state", "of", "the", "art", "in", "an", "English-Spanish", "word-translation", "task.", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "References", "Al-Rfou\u2019,", "Rami,", "Perozzi,", "Bryan,", "and", "Skiena,", "Steven.", "Polyglot:", "Distributed", "word", "representations", "for", "multilingual", "nlp.", "In", "Pro-", "ceedings", "of", "the", "Seventeenth", "Conference", "on", "Computational", "Nat-", "ural", "Language", "Learning,", "pp.", "183\u2013192,", "Sofia,", "Bulgaria,", "Au-", "gust", "2013.", "Association", "for", "Computational", "Linguistics.", "URL", "http://www.aclweb.org/anthology/W13-3520.", "Bengio,", "Y,", "Ducharme,", "R,", "and", "Vincent,", "P.", "A", "neural", "probabilis-", "tic", "language", "model.", "Journal", "of", "Machine", "Learning", "Research,", "2003.", "URL", "http://ukpmc.ac.uk/abstract/CIT/", "412956.", "Bengio,", "Yoshua", "and", "Senecal,", "J-S", ".", "Adaptive", "importance", "sampling", "to", "accelerate", "training", "of", "a", "neural", "probabilistic", "language", "model.", "Neural", "Networks,", "IEEE", "Transactions", "on,", "19(4):713\u2013722,", "2008.", "Blitzer,", "J.,", "McDonald,", "R.,", "and", "Pereira,", "F.", "Domain", "adaptation", "with", "structural", "correspondence", "learning.", "In", "Conference", "on", "Empir-", "ical", "Methods", "in", "Natural", "Language", "Processing,", "Sydney,", "Aus-", "tralia,", "2006.", "Chandar,", "Sarath,", "Lauly,", "Stanislas,", "Larochelle,", "Hugo,", "Khapra,", "Mitesh", "M.,", "Ravidran,", "Balaraman,", "Raykar,", "Vikas,", "and", "Saha,", "Amrita.", "An", "autoencoder", "approach", "to", "learning", "bilingual", "word", "representations.", "Proceedings", "of", "NIPS", "2014,", "2014.", "Collobert,", "R.,", "Weston,", "J.,", "Bottou,", "L.,", "Karlen,", "M.,", "Kavukcuoglu,", "K.,", "and", "Kuksa,", "P.", "Natural", "language", "processing", "(almost)", "from", "scratch.", "Journal", "of", "Machine", "Learning", "Research,", "12:2493\u2013", "2537,", "2011.", "Daum", "\u0301e", "III,", "Hal.", "Frustratingly", "easy", "domain", "adaptation.", "In", "Proceedings", "of", "the", "48th", "Annual", "Meeting", "of", "the", "Association", "for", "Computational", "Linguistics.", "Association", "for", "Computational", "Linguistics,", "2009.", "Dyer,", "Chris,", "Chahuneau,", "Victor,", "and", "Smith,", "Noah", "A.", "A", "simple,", "fast,", "and", "effective", "reparameterization", "of", "ibm", "model", "2.", "ACL,", "2013.", "Faruqui,", "Manaal", "and", "Dyer,", "Chris.", "Improving", "vector", "space", "word", "representations", "using", "multilingual", "correlation.", "In", "Proceedings", "of", "EACL", "2014,", "2014.", "Goldberg,", "Yoav", "and", "Levy,", "Omer.", "word2vec", "explained:", "Deriving", "mikolov", "et", "al.s", "negative-sampling", "word-embedding", "method.", "arXiv", "preprint", "arXiv:1402.3722,", "2014.", "Hermann,", "Karl", "Moritz", "and", "Blunsom,", "Phil.", "Multilingual", "dis-", "tributed", "representations", "without", "word", "alignment.", "arXiv", "preprint", "arXiv:1312.6173,", "2013.", "Klementiev,", "Alexandre,", "Titov,", "Ivan,", "and", "Bhattarai,", "Binod.", "In-", "ducing", "crosslingual", "distributed", "representations", "of", "words.", "In", "Proceedings", "of", "the", "International", "Conference", "on", "Computational", "Linguistics", "(COLING),", "Bombay,", "India,", "December", "2012.", "Koehn,", "Philipp.", "Europarl:", "A", "parallel", "corpus", "for", "statistical", "ma-", "chine", "translation.", "In", "MT", "summit,", "volume", "5,", "pp.", "79\u201386,", "2005.", "Lewis,", "David", "D,", "Yang,", "Yiming,", "Rose,", "Tony", "G,", "and", "Li,", "Fan.", "Rcv1:", "A", "new", "benchmark", "collection", "for", "text", "categorization", "research.", "The", "Journal", "of", "Machine", "Learning", "Research,", "5:361\u2013397,", "2004.", "Mikolov,", "Tomas,", "Le,", "Quoc", "V,", "and", "Sutskever,", "Ilya.", "Exploiting", "similarities", "among", "languages", "for", "machine", "translation.", "In", "In-", "ternational", "Conference", "on", "Learning", "Representations", "(ICLR),", "2013a.", "Mikolov,", "Tomas,", "Sutskever,", "Ilya,", "Chen,", "Kai,", "Corrado,", "Greg", "S,", "and", "Dean,", "Jeff.", "Distributed", "representations", "of", "words", "and", "phrases", "and", "their", "compositionality.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "pp.", "3111\u20133119,", "2013b.", "Mnih,", "Andriy", "and", "Teh,", "Yee", "Whye.", "A", "fast", "and", "simple", "algorithm", "for", "training", "neural", "probabilistic", "language", "models.", "In", "Proceed-", "ings", "of", "the", "29th", "International", "Conference", "on", "Machine", "Learning", "(ICML),", "2012.", "Och,", "Franz", "Josef", "and", "Ney,", "Hermann.", "A", "systematic", "comparison", "of", "various", "statistical", "alignment", "models.", "Computational", "Linguis-", "tics,", "29(1):19\u201351,", "2003.", "Pan,", "Sinno", "Jialin", "and", "Yang,", "Qiang.", "A", "survey", "on", "transfer", "learning.", "Knowledge", "and", "Data", "Engineering,", "IEEE", "Transactions", "on,", "22", "(10):1345\u20131359,", "2010.", "Pennington,", "Jeffrey,", "Socher,", "Richard,", "and", "Manning,", "Christo-", "pher", "D.", "Glove:", "Global", "vectors", "for", "word", "representation.", "Pro-", "ceedings", "of", "the", "Empiricial", "Methods", "in", "Natural", "Language", "Pro-", "cessing", "(EMNLP", "2014),", "12,", "2014.", "Turian,", "J.,", "Ratinov,", "L.,", "and", "Bengio,", "Y.", "Word", "representations:", "A", "simple", "and", "general", "method", "for", "semi-supervised", "learning.", "In", "Proceedings", "of", "the", "48th", "Annual", "Meeting", "of", "the", "Association", "for", "Computational", "Linguistics,", "pp.", "384\u2013394.", "Association", "for", "Com-", "putational", "Linguistics,", "2010.", "Walker,", "Alastair", "J.", "An", "efficient", "method", "for", "generating", "discrete", "random", "variables", "with", "general", "distributions.", "ACM", "Transac-", "tions", "on", "Mathematical", "Software", "(TOMS),", "3(3):253\u2013256,", "1977.", "Zou,", "Will", "Y,", "Socher,", "Richard,", "Cer,", "Daniel,", "and", "Manning,", "Christo-", "pher", "D.", "Bilingual", "word", "embeddings", "for", "phrase-based", "machine", "translation.", "In", "Proceedings", "of", "the", "2013", "Conference", "on", "Empiri-", "cal", "Methods", "in", "Natural", "Language", "Processing", "(EMNLP),", "2013."], "positions": [[371, 379, 638, 421], [659, 380, 766, 421], [782, 379, 1012, 432], [1029, 379, 1318, 421], [1336, 379, 1744, 432], [1761, 379, 1956, 421], [1972, 380, 2114, 421], [1098, 454, 1388, 507], [232, 667, 375, 705], [388, 667, 507, 697], [1791, 668, 2223, 697], [231, 726, 352, 763], [364, 727, 434, 760], [448, 726, 608, 754], [620, 726, 711, 760], [724, 726, 789, 760], [803, 726, 884, 755], [231, 806, 359, 835], [371, 805, 492, 843], [231, 866, 319, 902], [333, 865, 410, 899], [424, 865, 576, 894], [576, 865, 593, 893], [605, 865, 643, 893], [655, 866, 758, 893], [759, 865, 814, 899], [828, 865, 892, 900], [906, 865, 1029, 894], [1042, 865, 1071, 894], [1084, 865, 1239, 894], [1251, 865, 1385, 893], [1397, 865, 1445, 893], [1456, 865, 1622, 894], [1634, 865, 1784, 893], [232, 944, 319, 982], [332, 944, 481, 974], [231, 1004, 352, 1041], [364, 1005, 434, 1038], [448, 1004, 608, 1032], [620, 1004, 711, 1038], [724, 1004, 789, 1038], [803, 1004, 884, 1033], [625, 1168, 811, 1203], [314, 1246, 367, 1273], [402, 1245, 557, 1273], [592, 1245, 761, 1274], [797, 1245, 964, 1282], [996, 1245, 1121, 1282], [317, 1295, 415, 1324], [453, 1295, 577, 1324], [609, 1295, 820, 1332], [865, 1304, 881, 1323], [919, 1295, 1027, 1332], [1065, 1295, 1122, 1323], [315, 1345, 733, 1382], [767, 1345, 869, 1373], [905, 1345, 953, 1373], [987, 1345, 1122, 1382], [314, 1395, 461, 1432], [487, 1395, 662, 1423], [687, 1395, 936, 1432], [963, 1395, 999, 1423], [1022, 1395, 1120, 1424], [315, 1444, 414, 1473], [434, 1453, 490, 1472], [512, 1444, 592, 1472], [612, 1448, 643, 1472], [663, 1444, 744, 1481], [764, 1444, 972, 1481], [992, 1444, 1120, 1472], [316, 1494, 373, 1522], [386, 1494, 459, 1522], [473, 1498, 525, 1522], [536, 1494, 653, 1531], [666, 1494, 885, 1531], [897, 1494, 1021, 1531], [1034, 1494, 1121, 1522], [315, 1544, 366, 1581], [376, 1544, 452, 1572], [468, 1544, 586, 1572], [596, 1544, 619, 1572], [628, 1544, 717, 1572], [728, 1544, 853, 1581], [864, 1553, 903, 1572], [914, 1544, 1122, 1581], [315, 1594, 382, 1622], [393, 1594, 450, 1622], [460, 1598, 585, 1622], [597, 1603, 613, 1622], [622, 1594, 769, 1631], [780, 1594, 876, 1631], [886, 1594, 965, 1622], [976, 1603, 992, 1622], [1002, 1594, 1123, 1622], [316, 1648, 360, 1672], [379, 1644, 415, 1672], [432, 1648, 569, 1673], [589, 1644, 866, 1681], [886, 1644, 962, 1672], [1003, 1644, 1074, 1672], [1096, 1644, 1120, 1672], [316, 1693, 459, 1722], [480, 1693, 569, 1730], [592, 1702, 608, 1721], [630, 1693, 720, 1722], [743, 1693, 878, 1730], [899, 1693, 1120, 1730], [315, 1743, 527, 1780], [540, 1743, 697, 1780], [712, 1743, 812, 1772], [824, 1743, 849, 1771], [862, 1743, 938, 1771], [950, 1747, 981, 1771], [993, 1743, 1121, 1780], [315, 1793, 361, 1821], [372, 1797, 432, 1822], [442, 1793, 723, 1822], [733, 1793, 881, 1830], [892, 1793, 1008, 1821], [1020, 1793, 1068, 1821], [1077, 1793, 1121, 1821], [315, 1843, 418, 1871], [433, 1843, 646, 1880], [663, 1843, 777, 1871], [794, 1843, 937, 1880], [966, 1844, 1020, 1871], [1038, 1843, 1122, 1872], [315, 1893, 376, 1921], [387, 1893, 534, 1930], [547, 1893, 744, 1930], [758, 1893, 879, 1921], [890, 1893, 980, 1930], [993, 1893, 1042, 1921], [1053, 1902, 1121, 1930], [314, 1943, 410, 1980], [420, 1943, 522, 1971], [532, 1943, 718, 1980], [729, 1943, 974, 1971], [983, 1943, 1120, 1971], [315, 2001, 354, 2020], [366, 2001, 382, 2020], [392, 1992, 605, 2029], [615, 1992, 778, 2020], [788, 1992, 1003, 2020], [1013, 1992, 1079, 2020], [1090, 2001, 1120, 2020], [315, 2042, 384, 2071], [396, 2051, 426, 2070], [439, 2051, 455, 2070], [465, 2042, 573, 2070], [583, 2042, 757, 2070], [767, 2042, 833, 2070], [842, 2051, 882, 2070], [891, 2042, 1030, 2070], [1044, 2042, 1120, 2070], [233, 2187, 265, 2222], [281, 2187, 550, 2222], [231, 2275, 305, 2303], [323, 2278, 384, 2302], [401, 2274, 468, 2302], [486, 2274, 510, 2302], [529, 2274, 624, 2311], [643, 2274, 789, 2303], [806, 2274, 837, 2302], [854, 2283, 944, 2311], [962, 2274, 1135, 2311], [1156, 2278, 1206, 2311], [231, 2324, 350, 2352], [370, 2324, 438, 2352], [457, 2342, 478, 2344], [497, 2333, 553, 2361], [575, 2328, 637, 2352], [656, 2324, 778, 2352], [797, 2333, 838, 2361], [858, 2324, 930, 2353], [950, 2324, 1205, 2361], [231, 2383, 265, 2402], [280, 2374, 522, 2402], [538, 2392, 559, 2394], [574, 2374, 599, 2402], [616, 2374, 778, 2411], [795, 2374, 852, 2402], [868, 2374, 980, 2411], [997, 2374, 1142, 2403], [1158, 2374, 1206, 2402], [231, 2424, 365, 2461], [392, 2424, 547, 2461], [564, 2424, 677, 2453], [693, 2424, 867, 2461], [884, 2424, 961, 2452], [976, 2424, 1038, 2452], [1052, 2433, 1108, 2452], [1124, 2424, 1205, 2452], [231, 2477, 262, 2501], [277, 2482, 347, 2510], [361, 2473, 570, 2501], [586, 2473, 714, 2501], [730, 2473, 810, 2501], [825, 2482, 883, 2501], [898, 2473, 1021, 2501], [1036, 2477, 1067, 2501], [1083, 2473, 1206, 2501], [232, 2523, 357, 2558], [369, 2527, 399, 2551], [411, 2523, 458, 2557], [472, 2523, 563, 2557], [577, 2524, 677, 2551], [679, 2523, 696, 2551], [708, 2524, 757, 2557], [771, 2523, 862, 2557], [876, 2524, 936, 2551], [950, 2523, 979, 2552], [992, 2524, 1085, 2560], [1099, 2523, 1203, 2558], [231, 2573, 254, 2601], [269, 2573, 293, 2601], [311, 2573, 342, 2601], [358, 2573, 478, 2610], [494, 2573, 667, 2602], [683, 2577, 713, 2601], [729, 2582, 818, 2601], [833, 2582, 873, 2610], [890, 2573, 962, 2602], [978, 2573, 1059, 2610], [1075, 2573, 1203, 2601], [231, 2623, 331, 2652], [344, 2623, 513, 2660], [525, 2623, 595, 2652], [609, 2632, 709, 2651], [723, 2623, 813, 2657], [828, 2623, 885, 2651], [898, 2632, 973, 2652], [985, 2623, 1091, 2651], [1104, 2632, 1203, 2651], [231, 2673, 373, 2701], [387, 2673, 560, 2710], [587, 2674, 612, 2701], [627, 2673, 651, 2701], [669, 2673, 817, 2701], [832, 2682, 904, 2710], [919, 2673, 1068, 2701], [1083, 2677, 1114, 2701], [1129, 2673, 1205, 2702], [230, 2722, 449, 2759], [465, 2722, 640, 2759], [657, 2722, 757, 2751], [773, 2731, 829, 2750], [845, 2722, 927, 2750], [942, 2722, 1043, 2750], [1060, 2722, 1204, 2759], [232, 2772, 290, 2800], [304, 2772, 448, 2800], [462, 2772, 590, 2800], [604, 2772, 666, 2800], [679, 2781, 727, 2800], [740, 2772, 884, 2801], [896, 2776, 927, 2800], [940, 2772, 989, 2800], [1002, 2772, 1082, 2800], [1096, 2781, 1130, 2800], [1142, 2772, 1204, 2800], [231, 2849, 415, 2883], [432, 2850, 466, 2883], [476, 2849, 519, 2875], [540, 2850, 577, 2876], [582, 2842, 615, 2859], [633, 2849, 830, 2875], [847, 2850, 1015, 2883], [1033, 2859, 1068, 2875], [1083, 2849, 1213, 2875], [230, 2893, 374, 2925], [388, 2891, 465, 2922], [479, 2892, 587, 2922], [602, 2891, 682, 2918], [700, 2892, 803, 2918], [817, 2892, 926, 2918], [938, 2891, 1048, 2918], [1061, 2892, 1104, 2918], [1122, 2892, 1213, 2925], [230, 2932, 301, 2966], [311, 2932, 382, 2959], [394, 2932, 431, 2966], [441, 2932, 486, 2958], [497, 2932, 638, 2965], [1282, 1183, 1394, 1211], [1408, 1174, 1470, 1202], [1482, 1183, 1529, 1203], [1544, 1183, 1592, 1202], [1605, 1174, 1765, 1202], [1778, 1174, 1817, 1202], [1837, 1174, 2064, 1211], [2077, 1174, 2257, 1203], [1280, 1224, 1530, 1261], [1549, 1224, 1585, 1252], [1600, 1224, 1698, 1253], [1717, 1228, 1838, 1261], [1855, 1224, 2016, 1261], [2034, 1224, 2178, 1261], [2198, 1224, 2255, 1252], [1282, 1274, 1427, 1302], [1437, 1274, 1632, 1302], [1643, 1274, 1734, 1302], [1743, 1274, 1905, 1311], [1918, 1274, 1975, 1302], [1985, 1274, 2069, 1302], [2079, 1274, 2253, 1311], [1280, 1324, 1357, 1353], [1366, 1324, 1443, 1352], [1454, 1324, 1638, 1361], [1649, 1324, 1769, 1361], [1779, 1328, 1809, 1352], [1820, 1333, 1836, 1352], [1846, 1324, 1925, 1353], [1934, 1333, 2025, 1361], [2035, 1324, 2071, 1352], [2078, 1324, 2158, 1352], [2170, 1324, 2254, 1359], [1281, 1373, 1378, 1401], [1389, 1377, 1418, 1401], [1431, 1373, 1477, 1407], [1491, 1373, 1582, 1407], [1596, 1373, 1703, 1401], [1716, 1377, 1745, 1401], [1757, 1373, 1804, 1407], [1818, 1373, 1922, 1408], [1937, 1382, 2036, 1401], [2050, 1382, 2140, 1410], [2152, 1373, 2254, 1401], [1281, 1427, 1332, 1451], [1343, 1423, 1505, 1460], [1520, 1423, 1679, 1458], [1695, 1427, 1725, 1451], [1737, 1423, 1783, 1457], [1797, 1423, 1901, 1458], [1917, 1423, 2137, 1460], [2150, 1423, 2254, 1451], [1281, 1473, 1333, 1510], [1343, 1473, 1426, 1501], [1435, 1473, 1684, 1510], [1695, 1473, 1836, 1502], [1845, 1473, 1973, 1510], [1984, 1482, 2000, 1501], [2009, 1473, 2111, 1501], [2121, 1473, 2256, 1502], [1281, 1523, 1430, 1560], [1446, 1523, 1549, 1551], [1566, 1523, 1697, 1560], [1714, 1527, 1743, 1551], [1760, 1523, 1806, 1557], [1824, 1523, 1918, 1558], [1936, 1523, 2036, 1552], [2053, 1532, 2114, 1552], [2133, 1523, 2207, 1552], [2224, 1527, 2255, 1551], [1281, 1573, 1365, 1601], [1381, 1574, 1535, 1607], [1548, 1577, 1777, 1610], [1788, 1573, 1871, 1602], [1883, 1573, 2065, 1610], [2076, 1573, 2193, 1601], [2207, 1582, 2255, 1601], [1281, 1623, 1372, 1651], [1382, 1623, 1473, 1651], [1481, 1623, 1512, 1651], [1522, 1623, 1722, 1660], [1735, 1623, 1792, 1651], [1802, 1632, 1858, 1651], [1868, 1623, 1949, 1651], [1958, 1627, 1989, 1651], [1999, 1623, 2073, 1651], [2082, 1632, 2122, 1651], [2131, 1623, 2253, 1651], [1281, 1672, 1317, 1700], [1331, 1672, 1429, 1701], [1445, 1681, 1499, 1709], [1514, 1672, 1572, 1709], [1589, 1681, 1629, 1700], [1646, 1681, 1662, 1700], [1679, 1672, 1776, 1709], [1792, 1672, 1919, 1709], [1936, 1672, 2075, 1700], [2107, 1672, 2208, 1707], [2225, 1672, 2254, 1701], [1281, 1722, 1350, 1756], [1364, 1722, 1455, 1756], [1469, 1722, 1609, 1751], [1621, 1726, 1651, 1750], [1663, 1722, 1709, 1756], [1723, 1722, 1834, 1756], [1848, 1722, 2036, 1759], [2048, 1726, 2077, 1750], [2089, 1722, 2136, 1756], [2149, 1722, 2253, 1757], [1281, 1773, 1314, 1800], [1327, 1772, 1366, 1800], [1378, 1772, 1461, 1800], [1473, 1772, 1600, 1806], [1613, 1772, 1711, 1801], [1725, 1781, 1774, 1800], [1784, 1772, 1975, 1809], [1985, 1772, 2026, 1809], [2038, 1772, 2167, 1806], [2179, 1772, 2254, 1800], [1281, 1822, 1389, 1851], [1402, 1822, 1516, 1850], [1529, 1826, 1645, 1851], [1659, 1822, 1789, 1850], [1802, 1826, 1833, 1850], [1847, 1831, 1877, 1850], [1892, 1822, 1976, 1851], [1987, 1822, 2183, 1859], [2198, 1822, 2255, 1850], [1281, 1872, 1395, 1900], [1407, 1872, 1486, 1900], [1497, 1872, 1578, 1909], [1590, 1876, 1727, 1900], [1740, 1872, 1776, 1900], [1783, 1881, 1844, 1901], [1856, 1876, 1925, 1900], [1941, 1872, 2038, 1900], [2050, 1872, 2167, 1900], [2179, 1872, 2255, 1901], [1281, 1921, 1331, 1949], [1341, 1925, 1481, 1958], [1493, 1921, 1555, 1949], [1567, 1921, 1680, 1949], [1691, 1921, 1874, 1958], [1886, 1925, 2002, 1950], [2016, 1930, 2064, 1949], [2076, 1921, 2196, 1949], [2208, 1921, 2256, 1949], [1282, 1971, 1396, 1999], [1414, 1971, 1512, 2000], [1533, 1971, 1639, 2008], [1659, 1971, 1795, 2008], [1832, 1971, 2046, 2008], [2069, 1971, 2118, 1999], [2137, 1975, 2253, 2000], [1281, 2025, 1402, 2058], [1420, 2021, 1484, 2049], [1503, 2021, 1656, 2058], [1675, 2021, 1885, 2058], [1906, 2021, 1980, 2049], [2000, 2030, 2031, 2049], [2051, 2021, 2254, 2058], [1280, 2071, 1491, 2108], [1509, 2080, 1542, 2099], [1558, 2071, 1628, 2100], [1646, 2075, 1755, 2105], [1775, 2080, 1805, 2099], [1823, 2071, 1988, 2099], [2004, 2071, 2035, 2099], [2051, 2071, 2158, 2108], [2179, 2071, 2190, 2099], [2211, 2071, 2254, 2106], [1282, 2121, 1340, 2149], [1352, 2121, 1406, 2156], [1422, 2121, 1519, 2149], [1530, 2125, 1590, 2150], [1600, 2121, 1764, 2158], [1776, 2121, 1912, 2158], [1922, 2121, 2156, 2158], [2167, 2121, 2255, 2150], [1281, 2170, 1331, 2198], [1346, 2170, 1529, 2207], [1545, 2174, 1661, 2199], [1680, 2179, 1728, 2198], [1742, 2170, 1818, 2198], [1835, 2179, 1865, 2198], [1882, 2170, 2011, 2198], [2028, 2179, 2068, 2198], [2084, 2170, 2180, 2199], [2198, 2170, 2255, 2198], [1282, 2220, 1516, 2249], [1527, 2220, 1694, 2257], [1706, 2220, 1796, 2248], [1281, 2295, 1466, 2323], [1482, 2295, 1732, 2332], [1751, 2304, 1807, 2323], [1825, 2295, 1889, 2323], [1906, 2295, 1945, 2323], [1962, 2295, 2092, 2323], [2110, 2305, 2183, 2324], [2199, 2295, 2254, 2332], [1274, 2345, 1376, 2382], [1395, 2345, 1644, 2382], [1665, 2345, 1722, 2373], [1741, 2354, 1797, 2373], [1817, 2354, 1901, 2374], [1921, 2354, 1951, 2373], [1973, 2354, 2009, 2373], [2028, 2345, 2169, 2374], [2188, 2354, 2255, 2382], [1281, 2395, 1317, 2423], [1331, 2395, 1465, 2432], [1481, 2395, 1634, 2432], [1650, 2395, 1834, 2432], [1851, 2395, 1951, 2424], [1968, 2395, 2137, 2432], [2154, 2404, 2253, 2423], [1281, 2444, 1455, 2481], [1477, 2444, 1507, 2472], [1526, 2444, 1588, 2472], [1606, 2444, 1704, 2473], [1724, 2444, 1796, 2473], [1816, 2444, 1929, 2472], [1947, 2444, 2166, 2472], [2186, 2453, 2254, 2481], [1281, 2494, 1369, 2522], [1388, 2494, 1445, 2522], [1463, 2494, 1607, 2522], [1624, 2494, 1788, 2531], [1806, 2494, 1836, 2522], [1852, 2494, 1925, 2522], [1942, 2494, 2105, 2531], [2125, 2503, 2173, 2522], [2189, 2503, 2254, 2531], [1280, 2544, 1418, 2572], [1429, 2544, 1518, 2581], [1531, 2544, 1644, 2572], [1655, 2544, 1798, 2573], [1809, 2544, 2058, 2581], [2072, 2544, 2132, 2579], [2146, 2544, 2255, 2572], [1281, 2594, 1393, 2631], [1408, 2594, 1438, 2622], [1453, 2594, 1502, 2622], [1517, 2594, 1686, 2622], [1702, 2603, 1800, 2631], [1818, 2603, 1849, 2622], [1866, 2594, 1970, 2623], [1985, 2594, 2016, 2622], [2031, 2594, 2138, 2631], [2156, 2594, 2167, 2622], [2187, 2594, 2253, 2629], [1281, 2644, 1352, 2672], [1370, 2644, 1395, 2672], [1413, 2644, 1577, 2681], [1593, 2644, 1694, 2672], [1710, 2644, 1758, 2672], [1774, 2644, 1965, 2681], [1982, 2644, 2098, 2672], [2115, 2644, 2194, 2672], [2210, 2644, 2254, 2672], [1281, 2694, 1443, 2722], [1461, 2694, 1540, 2722], [1556, 2694, 1784, 2731], [1801, 2698, 1832, 2722], [1849, 2694, 2063, 2723], [2080, 2694, 2253, 2731], [1282, 2743, 1340, 2771], [1357, 2743, 1410, 2771], [1429, 2743, 1506, 2771], [1525, 2743, 1746, 2771], [1765, 2747, 1795, 2771], [1812, 2743, 1851, 2771], [1869, 2743, 2010, 2772], [2028, 2743, 2076, 2771], [2093, 2743, 2256, 2771], [1281, 2793, 1497, 2821], [1517, 2793, 1720, 2828], [1739, 2797, 1769, 2821], [1788, 2793, 1834, 2827], [1855, 2793, 1959, 2828], [1981, 2793, 2219, 2830], [2239, 2802, 2255, 2821], [1282, 2847, 1384, 2880], [1406, 2843, 1734, 2871], [1755, 2843, 1900, 2877], [1931, 2852, 1961, 2871], [1985, 2843, 2055, 2872], [2078, 2852, 2108, 2871], [2132, 2843, 2254, 2871], [1281, 2893, 1374, 2930], [1397, 2893, 1585, 2930], [1610, 2893, 1667, 2921], [1691, 2893, 1830, 2921], [1854, 2893, 2027, 2921], [2052, 2893, 2130, 2928], [2154, 2897, 2183, 2921], [2207, 2893, 2253, 2927], [1281, 2943, 1373, 2977], [1386, 2943, 1527, 2972], [1539, 2947, 1568, 2971], [1580, 2943, 1626, 2977], [1640, 2943, 1763, 2978], [97, 2286, 134, 2329], [97, 2256, 133, 2293], [83, 2209, 133, 2267], [83, 2183, 133, 2205], [98, 2138, 133, 2185], [103, 2123, 134, 2134], [82, 2079, 133, 2110], [82, 2029, 133, 2075], [82, 1996, 133, 2027], [82, 1948, 134, 1989], [125, 1934, 134, 1945], [82, 1887, 133, 1926], [82, 1842, 133, 1888], [83, 1802, 134, 1842], [83, 1760, 134, 1800], [98, 1719, 133, 1766], [82, 1677, 134, 1718], [81, 1615, 142, 1634], [97, 1575, 134, 1608], [87, 1548, 134, 1579], [97, 1510, 134, 1553], [87, 1487, 134, 1518], [125, 1478, 134, 1489], [83, 1395, 133, 1472], [83, 1349, 133, 1397], [81, 1326, 142, 1345], [82, 1233, 133, 1279], [83, 1166, 133, 1215], [97, 1128, 134, 1169], [81, 1087, 134, 1134], [82, 1029, 133, 1068], [82, 985, 134, 1026], [82, 949, 133, 980], [82, 901, 134, 943], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [231, 1024, 328, 1058], [341, 1025, 363, 1050], [377, 1025, 404, 1057], [416, 1025, 442, 1050], [452, 1024, 482, 1057], [493, 1024, 686, 1058], [697, 1024, 875, 1058], [886, 1024, 955, 1051], [965, 1024, 1035, 1050], [1048, 1024, 1142, 1051], [1152, 1028, 1180, 1050], [1192, 1028, 1300, 1058], [1313, 1024, 1442, 1058], [1454, 1024, 1506, 1050], [1519, 1024, 1648, 1050], [1661, 1024, 1776, 1050], [1790, 1024, 1855, 1050], [1867, 1033, 1895, 1050], [1908, 1033, 1981, 1050], [1992, 1024, 2093, 1058], [2105, 1024, 2190, 1057], [2203, 1024, 2255, 1050], [232, 1070, 295, 1097], [306, 1074, 382, 1096], [394, 1070, 471, 1103], [487, 1071, 525, 1103], [537, 1070, 594, 1096], [606, 1070, 762, 1103], [774, 1070, 837, 1104], [847, 1070, 879, 1096], [888, 1070, 1067, 1104], [1078, 1070, 1256, 1104], [1268, 1070, 1290, 1096], [1301, 1074, 1329, 1096], [1340, 1074, 1449, 1104], [1459, 1070, 1535, 1096], [1545, 1070, 1734, 1104], [1746, 1079, 1837, 1096], [1848, 1074, 1903, 1097], [1914, 1079, 1944, 1096], [1954, 1079, 2029, 1096], [2040, 1070, 2196, 1104], [233, 1201, 322, 1230], [334, 1201, 417, 1229], [429, 1201, 603, 1238], [617, 1210, 665, 1229], [677, 1201, 915, 1238], [926, 1201, 1112, 1230], [1124, 1201, 1204, 1229], [232, 1250, 347, 1287], [362, 1250, 411, 1278], [423, 1250, 537, 1287], [550, 1250, 586, 1278], [596, 1250, 645, 1278], [657, 1250, 778, 1278], [790, 1250, 1039, 1287], [1053, 1250, 1203, 1287], [233, 1309, 263, 1328], [281, 1300, 331, 1328], [348, 1300, 410, 1328], [427, 1300, 463, 1328], [477, 1300, 526, 1328], [543, 1300, 670, 1337], [687, 1300, 755, 1328], [771, 1300, 921, 1337], [941, 1300, 1094, 1335], [1111, 1304, 1140, 1328], [1157, 1300, 1203, 1334], [232, 1350, 343, 1384], [366, 1350, 553, 1387], [575, 1354, 604, 1378], [625, 1350, 671, 1384], [694, 1350, 798, 1385], [841, 1351, 995, 1384], [1021, 1359, 1052, 1378], [1074, 1359, 1121, 1379], [1142, 1350, 1205, 1379], [232, 1400, 348, 1428], [373, 1400, 403, 1428], [426, 1409, 510, 1428], [533, 1400, 624, 1428], [647, 1400, 677, 1428], [702, 1399, 747, 1437], [774, 1400, 856, 1428], [879, 1409, 928, 1428], [950, 1404, 1010, 1429], [1035, 1400, 1206, 1437], [232, 1450, 405, 1479], [430, 1450, 598, 1478], [621, 1450, 693, 1479], [715, 1454, 832, 1478], [853, 1450, 1000, 1487], [1022, 1450, 1205, 1487], [232, 1499, 379, 1527], [411, 1499, 480, 1536], [500, 1508, 548, 1527], [567, 1499, 661, 1527], [679, 1508, 751, 1536], [771, 1499, 846, 1528], [865, 1503, 896, 1527], [915, 1499, 989, 1527], [1008, 1508, 1042, 1527], [1061, 1499, 1130, 1536], [1149, 1508, 1205, 1527], [232, 1549, 304, 1586], [320, 1549, 434, 1586], [449, 1549, 573, 1586], [589, 1549, 717, 1586], [733, 1549, 809, 1577], [839, 1549, 902, 1577], [918, 1549, 1031, 1577], [1046, 1549, 1138, 1577], [1156, 1549, 1205, 1577], [232, 1599, 409, 1636], [422, 1599, 604, 1636], [617, 1599, 652, 1627], [662, 1599, 746, 1627], [758, 1599, 942, 1636], [957, 1599, 1048, 1628], [1060, 1599, 1109, 1627], [1121, 1599, 1206, 1627], [233, 1649, 366, 1686], [383, 1649, 474, 1677], [492, 1649, 541, 1677], [558, 1653, 681, 1677], [696, 1649, 732, 1677], [746, 1649, 892, 1678], [908, 1649, 1035, 1686], [1051, 1649, 1128, 1683], [1148, 1649, 1205, 1677], [232, 1699, 428, 1727], [441, 1699, 611, 1727], [626, 1708, 642, 1727], [654, 1699, 706, 1736], [719, 1699, 842, 1727], [854, 1699, 918, 1727], [933, 1699, 996, 1727], [1009, 1699, 1058, 1727], [1070, 1699, 1205, 1736], [231, 1758, 363, 1786], [376, 1749, 459, 1777], [468, 1749, 592, 1786], [602, 1749, 670, 1777], [680, 1749, 705, 1777], [717, 1749, 860, 1786], [871, 1749, 943, 1786], [953, 1749, 1048, 1786], [1060, 1749, 1205, 1778], [232, 1798, 279, 1826], [292, 1798, 403, 1826], [417, 1807, 531, 1827], [545, 1798, 683, 1826], [699, 1798, 786, 1833], [801, 1807, 831, 1826], [845, 1798, 1075, 1835], [1089, 1798, 1204, 1826], [233, 1848, 338, 1883], [232, 1923, 302, 1951], [317, 1932, 409, 1960], [423, 1923, 593, 1951], [608, 1922, 781, 1952], [797, 1923, 964, 1960], [976, 1923, 1204, 1960], [232, 1973, 356, 2002], [368, 1973, 453, 2002], [460, 1973, 670, 2010], [685, 1982, 701, 2001], [713, 1973, 830, 2010], [844, 1973, 975, 2001], [987, 1973, 1147, 2010], [1158, 1973, 1206, 2001], [232, 2022, 375, 2059], [391, 2022, 538, 2059], [554, 2022, 637, 2051], [653, 2022, 851, 2059], [869, 2022, 941, 2051], [958, 2031, 974, 2050], [991, 2022, 1087, 2051], [1103, 2026, 1204, 2050], [233, 2072, 299, 2100], [319, 2076, 349, 2100], [369, 2072, 571, 2109], [590, 2072, 798, 2109], [837, 2072, 900, 2100], [920, 2072, 1022, 2100], [1041, 2072, 1066, 2100], [1088, 2072, 1155, 2100], [1174, 2076, 1205, 2100], [232, 2122, 369, 2159], [380, 2122, 553, 2159], [563, 2122, 721, 2150], [733, 2126, 870, 2150], [882, 2122, 918, 2150], [926, 2122, 1134, 2159], [1144, 2131, 1205, 2151], [232, 2176, 300, 2200], [320, 2173, 345, 2200], [357, 2172, 554, 2200], [567, 2172, 640, 2200], [655, 2176, 708, 2200], [719, 2172, 836, 2209], [850, 2181, 907, 2209], [920, 2172, 1096, 2201], [1111, 2172, 1204, 2209], [232, 2226, 338, 2256], [352, 2222, 405, 2250], [417, 2222, 533, 2250], [546, 2226, 672, 2250], [688, 2231, 704, 2250], [716, 2222, 863, 2259], [877, 2222, 974, 2259], [987, 2222, 1112, 2259], [1126, 2222, 1205, 2250], [233, 2281, 249, 2300], [259, 2272, 375, 2300], [388, 2272, 503, 2309], [514, 2272, 549, 2300], [559, 2272, 844, 2309], [856, 2276, 993, 2301], [1002, 2272, 1126, 2309], [1137, 2272, 1205, 2300], [233, 2321, 293, 2358], [297, 2345, 302, 2349], [319, 2321, 475, 2358], [492, 2321, 592, 2350], [607, 2321, 630, 2349], [643, 2330, 713, 2349], [730, 2325, 760, 2349], [777, 2321, 857, 2358], [873, 2321, 1070, 2358], [1088, 2330, 1119, 2349], [1136, 2321, 1205, 2358], [233, 2380, 281, 2399], [295, 2371, 415, 2399], [430, 2380, 501, 2400], [515, 2371, 723, 2408], [737, 2371, 865, 2408], [879, 2371, 955, 2399], [978, 2371, 1042, 2400], [1055, 2371, 1204, 2399], [232, 2421, 309, 2449], [324, 2430, 372, 2449], [384, 2421, 433, 2449], [445, 2421, 612, 2458], [274, 2562, 290, 2578], [314, 2553, 367, 2580], [381, 2552, 536, 2580], [551, 2561, 567, 2580], [581, 2552, 679, 2586], [695, 2552, 1113, 2589], [1126, 2562, 1204, 2581], [311, 2602, 386, 2639], [395, 2602, 612, 2639], [622, 2602, 770, 2639], [783, 2602, 1093, 2637], [1105, 2602, 1205, 2631], [315, 2652, 339, 2680], [352, 2652, 514, 2689], [525, 2656, 556, 2680], [569, 2652, 649, 2689], [661, 2652, 869, 2689], [881, 2652, 1078, 2689], [1092, 2661, 1123, 2680], [1136, 2652, 1205, 2689], [316, 2711, 364, 2730], [382, 2702, 474, 2739], [494, 2702, 608, 2730], [628, 2702, 658, 2730], [679, 2711, 716, 2730], [736, 2702, 838, 2730], [859, 2702, 975, 2739], [1015, 2702, 1078, 2730], [1098, 2711, 1204, 2730], [315, 2752, 428, 2789], [445, 2752, 561, 2780], [579, 2761, 635, 2780], [653, 2752, 733, 2780], [749, 2756, 780, 2780], [796, 2752, 974, 2789], [990, 2752, 1117, 2789], [1135, 2756, 1203, 2786], [315, 2801, 437, 2838], [460, 2801, 601, 2838], [622, 2801, 750, 2838], [771, 2801, 845, 2835], [872, 2801, 929, 2829], [951, 2801, 1000, 2829], [1022, 2801, 1204, 2830], [315, 2851, 376, 2879], [395, 2851, 467, 2888], [484, 2851, 638, 2879], [658, 2851, 793, 2888], [810, 2851, 1031, 2888], [1051, 2855, 1204, 2879], [316, 2901, 435, 2938], [453, 2901, 521, 2929], [540, 2905, 569, 2929], [586, 2901, 660, 2929], [679, 2901, 806, 2938], [826, 2905, 898, 2938], [920, 2901, 1020, 2930], [1039, 2901, 1134, 2929], [1154, 2910, 1204, 2929], [315, 2951, 440, 2988], [455, 2951, 525, 2980], [541, 2951, 598, 2979], [615, 2951, 679, 2979], [695, 2951, 798, 2980], [815, 2951, 864, 2979], [879, 2951, 956, 2979], [971, 2951, 1019, 2979], [1034, 2951, 1205, 2988], [1365, 1201, 1642, 1238], [1657, 1200, 1762, 1238], [1324, 1290, 1340, 1306], [1365, 1289, 1411, 1309], [1425, 1280, 1672, 1317], [1686, 1280, 1821, 1309], [1835, 1280, 1884, 1308], [1898, 1280, 2028, 1308], [2042, 1280, 2255, 1317], [1365, 1330, 1562, 1367], [1581, 1339, 1621, 1358], [1639, 1339, 1655, 1358], [1673, 1330, 2065, 1358], [2084, 1329, 2178, 1367], [2198, 1330, 2255, 1358], [1365, 1379, 1473, 1407], [1487, 1379, 1661, 1407], [1675, 1379, 1741, 1407], [1755, 1378, 1859, 1416], [1875, 1379, 1975, 1408], [1989, 1379, 2039, 1407], [2053, 1379, 2175, 1407], [2190, 1383, 2254, 1407], [1364, 1429, 1511, 1466], [1527, 1433, 1644, 1457], [1658, 1429, 1903, 1457], [1916, 1429, 2064, 1463], [2080, 1429, 2152, 1458], [2167, 1429, 2254, 1457], [1365, 1479, 1416, 1516], [1426, 1479, 1499, 1507], [1508, 1479, 1639, 1507], [1649, 1483, 1680, 1507], [1690, 1479, 1819, 1507], [1830, 1488, 1864, 1507], [1873, 1479, 1963, 1507], [1975, 1479, 2137, 1516], [2147, 1483, 2178, 1507], [2189, 1488, 2254, 1508], [1365, 1529, 1425, 1557], [1437, 1529, 1510, 1566], [1524, 1529, 1571, 1557], [1581, 1529, 1662, 1566], [1674, 1529, 1868, 1566], [1324, 1618, 1340, 1634], [1365, 1608, 1475, 1645], [1528, 1617, 1575, 1637], [1619, 1608, 1707, 1636], [1751, 1608, 1897, 1637], [1940, 1617, 1995, 1636], [2038, 1608, 2172, 1636], [2215, 1608, 2254, 1637], [1365, 1651, 1635, 1695], [1681, 1662, 1712, 1686], [1752, 1658, 1910, 1695], [1953, 1658, 2103, 1686], [2144, 1658, 2256, 1686], [1364, 1708, 1501, 1736], [1513, 1717, 1553, 1736], [1565, 1708, 1778, 1745], [1790, 1708, 1965, 1736], [1977, 1708, 2091, 1736], [2103, 1708, 2246, 1745], [1281, 1814, 1315, 1849], [1331, 1814, 1525, 1858], [1541, 1814, 1822, 1858], [1836, 1814, 1955, 1849], [1969, 1814, 2233, 1858], [1281, 1900, 1494, 1937], [1509, 1900, 1592, 1929], [1607, 1900, 1789, 1937], [1805, 1900, 1978, 1937], [1995, 1900, 2148, 1935], [2163, 1904, 2192, 1928], [2207, 1900, 2253, 1934], [1281, 1950, 1393, 1984], [1407, 1950, 1595, 1987], [1607, 1954, 1637, 1978], [1649, 1950, 1695, 1984], [1709, 1950, 1803, 1985], [1817, 1950, 1898, 1978], [1909, 1950, 2010, 1978], [2022, 1950, 2150, 1978], [2165, 1950, 2256, 1978], [1281, 2000, 1379, 2029], [1398, 2000, 1478, 2028], [1493, 2009, 1554, 2029], [1572, 2004, 1633, 2028], [1650, 2000, 1719, 2037], [1738, 2000, 1792, 2037], [1813, 2000, 1824, 2028], [1847, 2000, 1889, 2035], [1908, 2000, 1937, 2029], [1956, 2000, 2024, 2035], [2056, 2000, 2154, 2028], [2172, 2000, 2254, 2037], [1280, 2050, 1384, 2078], [1401, 2059, 1450, 2078], [1464, 2050, 1578, 2078], [1592, 2059, 1664, 2079], [1678, 2050, 1758, 2087], [1773, 2050, 1901, 2078], [1917, 2054, 1947, 2078], [1961, 2050, 2000, 2078], [2015, 2050, 2082, 2078], [2096, 2054, 2127, 2078], [2140, 2050, 2256, 2087], [1281, 2100, 1379, 2129], [1393, 2100, 1472, 2128], [1483, 2100, 1533, 2128], [1544, 2104, 1679, 2128], [1692, 2100, 1722, 2128], [1734, 2100, 1834, 2129], [1846, 2100, 1915, 2137], [1927, 2109, 2042, 2137], [2058, 2100, 2147, 2128], [2158, 2100, 2254, 2129], [1281, 2149, 1333, 2186], [1351, 2158, 1407, 2177], [1425, 2149, 1592, 2186], [1609, 2149, 1648, 2177], [1665, 2149, 1849, 2177], [1868, 2158, 1898, 2177], [1918, 2149, 2061, 2186], [2079, 2149, 2154, 2177], [2172, 2149, 2255, 2178], [1281, 2203, 1312, 2227], [1331, 2208, 1347, 2227], [1365, 2199, 1485, 2227], [1504, 2203, 1606, 2228], [1623, 2199, 1654, 2227], [1673, 2208, 1709, 2227], [1727, 2199, 1896, 2227], [1915, 2208, 2014, 2236], [2036, 2199, 2093, 2227], [2110, 2199, 2255, 2236], [1281, 2249, 1365, 2277], [1377, 2253, 1493, 2278], [1507, 2249, 1537, 2277], [1551, 2258, 1587, 2277], [1600, 2253, 1723, 2286], [1734, 2253, 1765, 2277], [1778, 2249, 2026, 2286], [2039, 2249, 2194, 2277], [2206, 2249, 2255, 2277], [1281, 2299, 1416, 2327], [1431, 2299, 1510, 2327], [1526, 2308, 1542, 2327], [1557, 2299, 1667, 2328], [1683, 2303, 1786, 2328], [1800, 2303, 1831, 2327], [1846, 2299, 1895, 2327], [1910, 2303, 2026, 2328], [2043, 2299, 2079, 2327], [2091, 2299, 2140, 2327], [2155, 2299, 2253, 2328], [1281, 2349, 1354, 2378], [1366, 2349, 1466, 2378], [1479, 2349, 1502, 2377], [1513, 2349, 1682, 2386], [1695, 2358, 1863, 2377], [1882, 2349, 1945, 2377], [1957, 2349, 2049, 2377], [2061, 2349, 2097, 2377], [2107, 2349, 2164, 2377], [2178, 2349, 2254, 2386], [1281, 2398, 1425, 2426], [1437, 2407, 1559, 2435], [1574, 2398, 1670, 2435], [1685, 2407, 1701, 2426], [1713, 2398, 1776, 2426], [1789, 2398, 1984, 2435], [1997, 2398, 2147, 2435], [2160, 2398, 2196, 2426], [2206, 2398, 2255, 2426], [1281, 2448, 1501, 2476], [1514, 2448, 1677, 2485], [1693, 2448, 1729, 2476], [1740, 2448, 1854, 2476], [1868, 2448, 2025, 2485], [2041, 2448, 2141, 2477], [2155, 2448, 2253, 2477], [1281, 2498, 1354, 2527], [1368, 2498, 1482, 2526], [1494, 2498, 1713, 2526], [1725, 2498, 1889, 2535], [1904, 2498, 2014, 2526], [2026, 2498, 2167, 2535], [2187, 2499, 2255, 2526], [1281, 2552, 1312, 2576], [1324, 2548, 1399, 2576], [1411, 2548, 1531, 2585], [1543, 2552, 1654, 2582], [1668, 2548, 1751, 2576], [1763, 2548, 1891, 2576], [1905, 2548, 1989, 2577], [2000, 2548, 2070, 2577], [2082, 2548, 2129, 2576], [2142, 2548, 2255, 2577], [1281, 2599, 1359, 2626], [1371, 2598, 1539, 2635], [1553, 2598, 1633, 2626], [1649, 2598, 1818, 2633], [1831, 2602, 1860, 2626], [1874, 2598, 1920, 2632], [1936, 2598, 2027, 2632], [2043, 2598, 2150, 2626], [2164, 2602, 2193, 2626], [2207, 2598, 2253, 2632], [1281, 2648, 1385, 2683], [1281, 2723, 1314, 2750], [1336, 2722, 1385, 2750], [1406, 2722, 1619, 2759], [1642, 2726, 1735, 2759], [1761, 2722, 1810, 2750], [1831, 2722, 1901, 2759], [1923, 2722, 1947, 2750], [1970, 2726, 2001, 2750], [2022, 2722, 2104, 2750], [2125, 2722, 2253, 2750], [1281, 2772, 1381, 2801], [1398, 2772, 1567, 2809], [1583, 2772, 1653, 2801], [1669, 2782, 1773, 2801], [1790, 2772, 1928, 2809], [1944, 2772, 2024, 2801], [2041, 2772, 2104, 2801], [2118, 2772, 2256, 2809], [1282, 2822, 1458, 2859], [1478, 2822, 1541, 2850], [1554, 2822, 1624, 2859], [1637, 2822, 1661, 2850], [1676, 2822, 1824, 2850], [1837, 2826, 1868, 2850], [1881, 2822, 1962, 2850], [1975, 2822, 2104, 2850], [2119, 2822, 2254, 2857], [1281, 2872, 1382, 2909], [1398, 2872, 1446, 2900], [1459, 2872, 1534, 2900], [1548, 2872, 1632, 2901], [1647, 2872, 1721, 2900], [1735, 2872, 1797, 2900], [1810, 2872, 1928, 2901], [1941, 2872, 2039, 2901], [2055, 2873, 2084, 2900], [2099, 2872, 2175, 2900], [2191, 2872, 2254, 2900], [1336, 2946, 1343, 2963], [1359, 2954, 2229, 2986], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [231, 302, 330, 329], [346, 301, 395, 320], [410, 292, 550, 329], [566, 292, 680, 320], [694, 292, 891, 329], [908, 292, 970, 327], [985, 291, 1205, 329], [231, 341, 427, 378], [446, 342, 499, 370], [516, 342, 712, 379], [730, 351, 777, 371], [795, 342, 859, 370], [877, 346, 957, 371], [973, 342, 1090, 371], [1107, 342, 1204, 371], [231, 402, 336, 421], [347, 392, 514, 429], [524, 396, 554, 420], [563, 392, 639, 421], [650, 392, 763, 420], [771, 392, 1020, 429], [1032, 392, 1094, 427], [1104, 400, 1204, 421], [231, 441, 352, 479], [368, 441, 547, 478], [575, 442, 638, 470], [654, 442, 739, 470], [753, 446, 893, 479], [910, 442, 1013, 471], [1030, 451, 1089, 470], [1105, 446, 1135, 470], [1150, 451, 1205, 470], [231, 492, 281, 520], [293, 492, 414, 520], [427, 492, 624, 529], [640, 501, 670, 520], [684, 492, 813, 520], [827, 492, 875, 520], [887, 492, 1014, 529], [1028, 501, 1044, 520], [1057, 492, 1204, 520], [231, 541, 330, 570], [342, 541, 489, 569], [501, 545, 532, 569], [544, 541, 659, 578], [671, 541, 765, 569], [779, 541, 810, 569], [823, 550, 881, 569], [894, 541, 1042, 578], [1056, 541, 1116, 578], [1120, 565, 1125, 569], [1140, 545, 1204, 578], [231, 591, 285, 625], [300, 591, 564, 628], [580, 600, 614, 619], [628, 591, 883, 626], [898, 591, 998, 620], [1012, 600, 1059, 620], [1072, 591, 1149, 620], [1163, 591, 1204, 619], [230, 641, 331, 669], [347, 641, 423, 675], [442, 641, 499, 669], [514, 641, 584, 669], [599, 641, 724, 678], [740, 641, 866, 669], [880, 641, 903, 669], [917, 645, 947, 669], [964, 650, 980, 669], [995, 641, 1143, 678], [1158, 641, 1206, 669], [231, 691, 331, 720], [346, 700, 393, 720], [408, 691, 448, 719], [463, 695, 516, 719], [529, 691, 605, 720], [620, 691, 710, 719], [726, 691, 855, 719], [871, 691, 947, 719], [972, 692, 1061, 719], [1076, 700, 1113, 719], [1128, 691, 1204, 728], [231, 741, 375, 769], [389, 741, 584, 778], [602, 741, 683, 769], [699, 750, 747, 769], [763, 741, 876, 770], [892, 741, 1074, 778], [1091, 745, 1121, 769], [1135, 741, 1205, 770], [231, 800, 290, 819], [302, 800, 358, 819], [370, 791, 514, 828], [525, 791, 609, 819], [621, 795, 681, 820], [693, 791, 857, 828], [871, 791, 939, 826], [950, 791, 1188, 826], [233, 864, 393, 894], [406, 864, 646, 894], [664, 865, 727, 893], [740, 865, 876, 902], [888, 865, 1037, 902], [1049, 865, 1073, 893], [1086, 869, 1117, 893], [1128, 865, 1204, 902], [231, 915, 311, 943], [324, 915, 399, 943], [412, 915, 621, 952], [634, 915, 783, 952], [798, 915, 963, 952], [978, 915, 1038, 950], [1054, 915, 1128, 943], [1142, 924, 1204, 943], [230, 965, 378, 1002], [391, 974, 431, 993], [442, 965, 516, 993], [528, 965, 676, 1002], [688, 965, 854, 1002], [864, 965, 953, 1002], [966, 974, 1022, 1002], [1034, 965, 1070, 993], [1078, 965, 1127, 993], [1139, 974, 1204, 994], [231, 1015, 292, 1043], [306, 1015, 451, 1044], [464, 1015, 694, 1044], [706, 1015, 852, 1050], [867, 1015, 925, 1043], [938, 1015, 1007, 1043], [1020, 1015, 1143, 1043], [1156, 1015, 1205, 1043], [231, 1065, 444, 1102], [455, 1065, 631, 1093], [644, 1074, 675, 1093], [687, 1074, 703, 1093], [714, 1069, 856, 1102], [869, 1065, 1000, 1102], [1017, 1065, 1201, 1102], [232, 1118, 305, 1151], [322, 1114, 385, 1142], [398, 1114, 562, 1151], [574, 1118, 638, 1151], [651, 1114, 779, 1142], [792, 1114, 828, 1142], [838, 1114, 972, 1151], [985, 1123, 1001, 1142], [1013, 1114, 1204, 1142], [231, 1164, 294, 1192], [309, 1164, 357, 1192], [370, 1164, 537, 1201], [552, 1164, 601, 1192], [616, 1164, 813, 1201], [830, 1164, 865, 1192], [877, 1164, 975, 1193], [991, 1168, 1063, 1192], [1078, 1164, 1127, 1192], [1142, 1173, 1204, 1192], [230, 1214, 378, 1251], [394, 1214, 429, 1242], [440, 1214, 516, 1242], [529, 1214, 702, 1242], [715, 1214, 804, 1251], [820, 1214, 961, 1242], [975, 1214, 1054, 1242], [1069, 1223, 1085, 1242], [1098, 1214, 1204, 1242], [231, 1273, 310, 1301], [326, 1264, 397, 1292], [410, 1273, 471, 1293], [486, 1264, 591, 1293], [603, 1268, 633, 1292], [645, 1264, 683, 1292], [696, 1273, 712, 1292], [724, 1264, 824, 1293], [837, 1264, 986, 1301], [998, 1264, 1038, 1301], [1052, 1264, 1205, 1299], [231, 1318, 261, 1342], [272, 1314, 319, 1348], [332, 1314, 444, 1349], [457, 1314, 527, 1343], [539, 1314, 659, 1342], [672, 1323, 688, 1342], [699, 1314, 793, 1342], [802, 1314, 970, 1351], [982, 1314, 1061, 1342], [1072, 1323, 1131, 1342], [1142, 1323, 1204, 1342], [230, 1363, 363, 1400], [378, 1372, 467, 1400], [480, 1367, 511, 1391], [524, 1363, 573, 1391], [586, 1363, 676, 1391], [695, 1364, 720, 1391], [732, 1372, 793, 1392], [807, 1363, 955, 1391], [967, 1363, 1007, 1400], [1022, 1363, 1161, 1400], [1175, 1363, 1204, 1392], [231, 1414, 321, 1450], [333, 1413, 437, 1448], [450, 1413, 519, 1442], [531, 1413, 791, 1450], [800, 1413, 954, 1450], [965, 1422, 1071, 1441], [1082, 1413, 1139, 1441], [1150, 1417, 1204, 1441], [231, 1467, 282, 1500], [291, 1463, 440, 1500], [450, 1463, 648, 1500], [660, 1463, 723, 1491], [735, 1472, 751, 1491], [758, 1463, 837, 1500], [848, 1472, 938, 1500], [947, 1463, 1037, 1500], [1047, 1463, 1205, 1491], [231, 1513, 410, 1541], [422, 1513, 562, 1550], [578, 1513, 641, 1541], [654, 1513, 819, 1550], [830, 1513, 866, 1541], [875, 1513, 931, 1541], [945, 1513, 1095, 1550], [1107, 1513, 1131, 1541], [1144, 1513, 1206, 1541], [231, 1563, 254, 1591], [264, 1563, 289, 1591], [302, 1572, 373, 1600], [385, 1563, 444, 1591], [454, 1567, 485, 1591], [496, 1563, 577, 1591], [589, 1563, 638, 1591], [650, 1563, 832, 1600], [845, 1563, 1033, 1600], [1049, 1563, 1112, 1591], [1123, 1563, 1205, 1591], [231, 1612, 391, 1641], [405, 1612, 441, 1640], [452, 1612, 509, 1640], [525, 1612, 675, 1649], [689, 1612, 714, 1640], [729, 1612, 791, 1640], [804, 1612, 827, 1640], [840, 1612, 864, 1640], [880, 1616, 932, 1640], [945, 1612, 1025, 1640], [1039, 1612, 1100, 1640], [1114, 1621, 1130, 1640], [1145, 1612, 1204, 1640], [231, 1662, 281, 1699], [297, 1662, 540, 1690], [557, 1662, 703, 1697], [719, 1662, 812, 1690], [828, 1671, 862, 1690], [877, 1662, 1045, 1697], [1063, 1671, 1118, 1690], [1135, 1671, 1204, 1699], [231, 1716, 295, 1740], [309, 1712, 358, 1740], [371, 1712, 581, 1749], [596, 1712, 734, 1741], [750, 1712, 788, 1740], [803, 1712, 901, 1741], [917, 1712, 947, 1740], [962, 1712, 1011, 1740], [1026, 1721, 1132, 1740], [1148, 1712, 1205, 1740], [231, 1766, 325, 1799], [339, 1762, 512, 1799], [530, 1762, 587, 1790], [602, 1771, 657, 1790], [671, 1762, 827, 1799], [841, 1762, 947, 1790], [963, 1771, 1003, 1790], [1018, 1762, 1067, 1790], [1082, 1762, 1204, 1790], [231, 1812, 294, 1840], [306, 1812, 372, 1840], [384, 1821, 467, 1840], [478, 1816, 509, 1840], [520, 1812, 606, 1849], [616, 1816, 647, 1840], [658, 1812, 708, 1840], [719, 1816, 856, 1849], [868, 1811, 972, 1849], [989, 1812, 1203, 1846], [232, 1871, 269, 1890], [281, 1866, 417, 1890], [428, 1862, 595, 1899], [606, 1862, 630, 1890], [642, 1862, 779, 1899], [791, 1862, 838, 1890], [849, 1862, 898, 1890], [909, 1862, 1136, 1899], [1148, 1862, 1205, 1890], [231, 1911, 281, 1939], [293, 1911, 416, 1939], [428, 1911, 581, 1939], [595, 1911, 667, 1948], [679, 1920, 738, 1939], [750, 1911, 923, 1939], [935, 1920, 988, 1948], [999, 1911, 1091, 1945], [1105, 1911, 1205, 1940], [231, 1961, 351, 1998], [362, 1961, 411, 1989], [420, 1961, 484, 1989], [494, 1961, 684, 1989], [693, 1961, 853, 1998], [864, 1961, 899, 1989], [907, 1961, 1020, 1989], [1030, 1961, 1203, 1998], [233, 2036, 279, 2064], [283, 2042, 306, 2064], [308, 2041, 331, 2064], [335, 2042, 355, 2064], [360, 2042, 443, 2064], [448, 2041, 472, 2065], [476, 2042, 498, 2065], [502, 2042, 555, 2065], [572, 2036, 794, 2073], [806, 2045, 864, 2064], [874, 2045, 944, 2073], [953, 2036, 1091, 2073], [1099, 2036, 1205, 2073], [232, 2086, 509, 2123], [526, 2086, 650, 2123], [667, 2086, 735, 2114], [753, 2086, 811, 2114], [828, 2086, 903, 2114], [922, 2095, 938, 2114], [955, 2086, 1057, 2114], [1075, 2090, 1106, 2114], [1124, 2086, 1205, 2114], [232, 2136, 346, 2164], [361, 2136, 610, 2173], [628, 2136, 676, 2164], [691, 2136, 741, 2164], [758, 2136, 877, 2173], [895, 2140, 1060, 2164], [1090, 2136, 1161, 2164], [1179, 2136, 1203, 2164], [231, 2185, 281, 2213], [296, 2185, 446, 2222], [460, 2185, 605, 2214], [619, 2185, 660, 2222], [675, 2185, 724, 2213], [738, 2185, 870, 2214], [886, 2185, 1052, 2220], [1068, 2185, 1097, 2214], [1112, 2185, 1204, 2213], [232, 2244, 308, 2269], [326, 2235, 420, 2270], [438, 2235, 495, 2263], [512, 2235, 561, 2263], [576, 2235, 723, 2272], [740, 2235, 955, 2263], [972, 2235, 1073, 2270], [1092, 2235, 1204, 2270], [231, 2285, 284, 2313], [296, 2289, 325, 2313], [338, 2285, 384, 2319], [399, 2285, 517, 2320], [536, 2285, 599, 2313], [613, 2285, 778, 2322], [790, 2285, 826, 2313], [836, 2285, 893, 2313], [908, 2285, 1058, 2322], [1071, 2285, 1095, 2313], [1110, 2285, 1172, 2313], [1183, 2285, 1206, 2313], [231, 2344, 287, 2363], [300, 2335, 338, 2363], [352, 2335, 410, 2363], [423, 2335, 511, 2364], [523, 2335, 612, 2372], [627, 2344, 663, 2363], [676, 2335, 811, 2363], [823, 2335, 1104, 2364], [1117, 2335, 1204, 2363], [231, 2385, 283, 2422], [296, 2385, 435, 2413], [448, 2385, 509, 2413], [521, 2385, 583, 2413], [595, 2385, 631, 2413], [641, 2385, 691, 2413], [703, 2385, 844, 2414], [859, 2385, 922, 2413], [935, 2385, 1016, 2413], [1030, 2385, 1203, 2414], [231, 2434, 267, 2462], [280, 2434, 337, 2462], [354, 2434, 477, 2462], [493, 2443, 541, 2462], [557, 2434, 618, 2462], [633, 2434, 655, 2462], [670, 2443, 726, 2462], [741, 2434, 813, 2471], [829, 2434, 903, 2462], [919, 2443, 959, 2462], [975, 2434, 1090, 2463], [1099, 2434, 1204, 2471], [232, 2484, 272, 2512], [287, 2484, 367, 2518], [385, 2484, 485, 2513], [500, 2484, 525, 2512], [541, 2484, 704, 2521], [719, 2488, 749, 2512], [765, 2484, 867, 2512], [883, 2484, 940, 2512], [955, 2488, 1008, 2512], [1022, 2484, 1205, 2521], [231, 2534, 347, 2563], [363, 2534, 394, 2562], [410, 2534, 459, 2562], [475, 2543, 558, 2562], [575, 2534, 651, 2571], [666, 2543, 700, 2562], [714, 2534, 838, 2571], [854, 2543, 884, 2562], [902, 2534, 951, 2562], [966, 2534, 1089, 2562], [1105, 2534, 1205, 2563], [231, 2584, 281, 2612], [293, 2584, 422, 2612], [436, 2584, 532, 2621], [543, 2584, 582, 2612], [596, 2584, 715, 2621], [729, 2584, 789, 2619], [804, 2584, 886, 2612], [898, 2584, 923, 2612], [938, 2593, 954, 2612], [968, 2588, 1069, 2621], [1082, 2584, 1205, 2613], [231, 2634, 322, 2669], [232, 2708, 572, 2740], [594, 2708, 767, 2737], [803, 2708, 938, 2736], [958, 2708, 1108, 2745], [1128, 2708, 1152, 2736], [1174, 2712, 1205, 2736], [225, 2758, 336, 2795], [351, 2759, 489, 2795], [505, 2758, 554, 2786], [569, 2758, 777, 2795], [792, 2758, 955, 2795], [972, 2755, 1051, 2796], [1069, 2758, 1141, 2787], [1156, 2758, 1205, 2786], [231, 2808, 444, 2845], [461, 2808, 610, 2845], [627, 2808, 771, 2836], [789, 2817, 819, 2836], [839, 2817, 855, 2836], [872, 2807, 1096, 2845], [1113, 2816, 1204, 2845], [231, 2857, 348, 2887], [359, 2858, 423, 2893], [433, 2858, 540, 2895], [550, 2858, 569, 2886], [580, 2858, 628, 2886], [638, 2867, 654, 2886], [665, 2858, 851, 2893], [867, 2859, 908, 2886], [918, 2858, 958, 2886], [968, 2858, 1035, 2892], [1048, 2867, 1095, 2887], [1105, 2858, 1205, 2886], [232, 2917, 248, 2936], [262, 2908, 475, 2945], [487, 2908, 716, 2945], [730, 2912, 805, 2936], [819, 2905, 899, 2946], [915, 2908, 973, 2936], [985, 2917, 1040, 2936], [1054, 2908, 1076, 2936], [1089, 2912, 1119, 2936], [1133, 2917, 1204, 2936], [1281, 949, 1378, 983], [1388, 950, 1413, 975], [1427, 949, 1579, 976], [1595, 949, 1627, 975], [1639, 949, 1684, 975], [1699, 949, 1835, 983], [1851, 949, 2003, 976], [2019, 949, 2111, 975], [2126, 949, 2254, 975], [1280, 999, 1338, 1021], [1351, 995, 1394, 1021], [1407, 995, 1536, 1029], [1548, 995, 1681, 1029], [1694, 995, 1769, 1022], [1782, 995, 1969, 1029], [1991, 996, 2054, 1022], [2068, 995, 2255, 1029], [1282, 1041, 1419, 1075], [1435, 1041, 1540, 1067], [1557, 1050, 1601, 1067], [1613, 1041, 1713, 1075], [1728, 1041, 1831, 1067], [1847, 1041, 1928, 1068], [1944, 1041, 2085, 1075], [2101, 1050, 2117, 1067], [2133, 1041, 2255, 1075], [1282, 1086, 1320, 1117], [1325, 1086, 1393, 1112], [1408, 1086, 1498, 1113], [1512, 1086, 1598, 1120], [1612, 1086, 1657, 1112], [1671, 1086, 1849, 1120], [1865, 1086, 1931, 1112], [1944, 1086, 2000, 1112], [2013, 1086, 2254, 1120], [1281, 1141, 1326, 1158], [1336, 1132, 1463, 1166], [1475, 1132, 1578, 1158], [1588, 1132, 1766, 1166], [1777, 1132, 1805, 1158], [1815, 1132, 1860, 1158], [1870, 1136, 1925, 1159], [1936, 1132, 2091, 1166], [1282, 1260, 1372, 1288], [1384, 1260, 1592, 1297], [1604, 1260, 1721, 1288], [1735, 1269, 1765, 1288], [1779, 1260, 1848, 1297], [1861, 1269, 1909, 1288], [1916, 1260, 2027, 1297], [2038, 1260, 2129, 1297], [2141, 1260, 2255, 1288], [1281, 1319, 1353, 1339], [1366, 1310, 1415, 1338], [1428, 1314, 1549, 1338], [1563, 1309, 1584, 1338], [1599, 1310, 1656, 1338], [1670, 1314, 1763, 1347], [1775, 1310, 1858, 1339], [1872, 1320, 1912, 1344], [1928, 1310, 2055, 1347], [2068, 1310, 2147, 1347], [2162, 1310, 2192, 1338], [2206, 1310, 2255, 1338], [1281, 1359, 1396, 1387], [1407, 1359, 1447, 1393], [1461, 1368, 1509, 1396], [1513, 1383, 1518, 1387], [1326, 1453, 1395, 1483], [1415, 1454, 1482, 1482], [1411, 1488, 1483, 1517], [1522, 1442, 1578, 1500], [1496, 1511, 1603, 1540], [1649, 1442, 1705, 1500], [1614, 1521, 1647, 1538], [1654, 1512, 1736, 1540], [1749, 1445, 1858, 1492], [1871, 1453, 1901, 1490], [1913, 1445, 1956, 1492], [1747, 1496, 1767, 1510], [1836, 1505, 1874, 1519], [1942, 1496, 1962, 1510], [1764, 1529, 1843, 1549], [1852, 1529, 1946, 1555], [1970, 1453, 2023, 1485], [2033, 1451, 2112, 1492], [2120, 1478, 2124, 1490], [2136, 1445, 2188, 1492], [2030, 1496, 2194, 1519], [2055, 1529, 2170, 1555], [2203, 1478, 2207, 1482], [2209, 1564, 2254, 1599], [1282, 1638, 1352, 1666], [1374, 1638, 1569, 1666], [1589, 1642, 1725, 1675], [1747, 1638, 1796, 1666], [1816, 1638, 1955, 1666], [1976, 1638, 2038, 1666], [2057, 1647, 2104, 1667], [2125, 1642, 2205, 1667], [2224, 1642, 2255, 1666], [1282, 1688, 1363, 1716], [1385, 1688, 1634, 1725], [1658, 1688, 1758, 1717], [1781, 1688, 1883, 1716], [1906, 1688, 1981, 1716], [2003, 1688, 2169, 1717], [2192, 1688, 2254, 1716], [1282, 1747, 1394, 1775], [1410, 1738, 1480, 1767], [1496, 1738, 1558, 1773], [1573, 1738, 1637, 1766], [1651, 1738, 1738, 1773], [1754, 1738, 1845, 1767], [1860, 1738, 1909, 1766], [1925, 1735, 1992, 1776], [2010, 1738, 2189, 1775], [2203, 1747, 2254, 1766], [1282, 1797, 1426, 1825], [1444, 1788, 1693, 1825], [1712, 1792, 1743, 1816], [1759, 1788, 1798, 1816], [1816, 1788, 1930, 1816], [1947, 1788, 1994, 1816], [2011, 1788, 2109, 1817], [2128, 1788, 2189, 1816], [2207, 1797, 2255, 1816], [1281, 1838, 1393, 1866], [1408, 1847, 1507, 1866], [1523, 1838, 1572, 1866], [1586, 1842, 1646, 1867], [1660, 1838, 1833, 1875], [1855, 1838, 2081, 1875], [2097, 1838, 2154, 1866], [2169, 1847, 2254, 1875], [1282, 1887, 1387, 1915], [1399, 1887, 1527, 1915], [1542, 1887, 1578, 1915], [1588, 1887, 1778, 1924], [1792, 1896, 1808, 1915], [1821, 1887, 1955, 1915], [1968, 1887, 2105, 1915], [2117, 1887, 2255, 1916], [1282, 1937, 1331, 1965], [1348, 1941, 1450, 1966], [1465, 1937, 1714, 1974], [1734, 1946, 1761, 1972], [1782, 1937, 1902, 1965], [1919, 1937, 1967, 1965], [1983, 1937, 2081, 1966], [2099, 1947, 2138, 1972], [2158, 1937, 2189, 1965], [2206, 1937, 2255, 1965], [1282, 1991, 1342, 2016], [1354, 1987, 1501, 2021], [1515, 1987, 1666, 2024], [1677, 1987, 1717, 2024], [1729, 1987, 1798, 2016], [1811, 1987, 1925, 2015], [1936, 1987, 2005, 2024], [2018, 1996, 2075, 2021], [2089, 1987, 2136, 2015], [1283, 2079, 1376, 2120], [1384, 2072, 1514, 2120], [1551, 2070, 1607, 2128], [1529, 2139, 1612, 2163], [1616, 2142, 1626, 2151], [1663, 2070, 1719, 2128], [1638, 2142, 1724, 2170], [1727, 2139, 1739, 2158], [1753, 2079, 1867, 2120], [1875, 2106, 1879, 2118], [1890, 2092, 1932, 2122], [1938, 2079, 1948, 2120], [1964, 2097, 1968, 2102], [1980, 2079, 2149, 2120], [2152, 2079, 2164, 2092], [2151, 2091, 2205, 2120], [2208, 2070, 2224, 2096], [2206, 2079, 2252, 2127], [2209, 2179, 2254, 2214], [1282, 2229, 1381, 2258], [1399, 2238, 1446, 2258], [1463, 2238, 1518, 2257], [1536, 2229, 1570, 2257], [1587, 2233, 1618, 2257], [1636, 2229, 1745, 2257], [1763, 2229, 1883, 2257], [1901, 2229, 2084, 2266], [2101, 2238, 2254, 2266], [1282, 2278, 1399, 2312], [1418, 2278, 1476, 2306], [1492, 2287, 1520, 2313], [1539, 2282, 1569, 2306], [1585, 2278, 1694, 2306], [1710, 2278, 1759, 2306], [1775, 2278, 1957, 2315], [1973, 2278, 2093, 2306], [2109, 2278, 2157, 2306], [2172, 2278, 2255, 2307], [1282, 2338, 1320, 2362], [1327, 2352, 1332, 2356], [1362, 2329, 1395, 2356], [1412, 2328, 1496, 2356], [1512, 2328, 1620, 2362], [1640, 2328, 1728, 2357], [1745, 2328, 1801, 2356], [1820, 2328, 1970, 2365], [1988, 2337, 2055, 2356], [2072, 2328, 2143, 2363], [2159, 2328, 2255, 2356], [1282, 2378, 1318, 2406], [1337, 2378, 1537, 2406], [1554, 2382, 1585, 2406], [1602, 2378, 1652, 2406], [1669, 2378, 1741, 2406], [1759, 2378, 1920, 2415], [1939, 2378, 1963, 2406], [1982, 2378, 2048, 2412], [2068, 2387, 2127, 2406], [2144, 2387, 2200, 2406], [2216, 2378, 2255, 2406], [1283, 2437, 1349, 2456], [1362, 2428, 1424, 2456], [1437, 2428, 1534, 2457], [1550, 2437, 1650, 2456], [1665, 2428, 1828, 2465], [1843, 2428, 1904, 2456], [1918, 2437, 1966, 2456], [1980, 2428, 2094, 2456], [2107, 2428, 2159, 2463], [2163, 2452, 2168, 2456], [2182, 2428, 2255, 2465], [1283, 2475, 1396, 2516], [1404, 2502, 1408, 2514], [1420, 2488, 1461, 2518], [1468, 2475, 1494, 2516], [1507, 2478, 1570, 2507], [1581, 2478, 1620, 2506], [1632, 2478, 1801, 2506], [1813, 2478, 1924, 2515], [1936, 2478, 2010, 2506], [2022, 2478, 2112, 2506], [1282, 2552, 1352, 2580], [1376, 2552, 1525, 2589], [1547, 2561, 1608, 2581], [1631, 2552, 1736, 2581], [1757, 2556, 1788, 2580], [1808, 2552, 1847, 2580], [1867, 2552, 1968, 2580], [1988, 2552, 2029, 2589], [2051, 2552, 2255, 2587], [1282, 2606, 1311, 2630], [1324, 2602, 1371, 2636], [1386, 2602, 1490, 2637], [1510, 2602, 1669, 2639], [1685, 2602, 1734, 2630], [1748, 2602, 1927, 2639], [1942, 2602, 1978, 2630], [1989, 2602, 2046, 2630], [2060, 2602, 2255, 2630], [1283, 2661, 1331, 2680], [1346, 2652, 1407, 2680], [1421, 2652, 1444, 2680], [1458, 2652, 1582, 2681], [1598, 2662, 1655, 2680], [1672, 2657, 1701, 2680], [1718, 2653, 1795, 2680], [1810, 2662, 1850, 2680], [1865, 2662, 1924, 2689], [1939, 2652, 2091, 2681], [2107, 2652, 2254, 2680], [1281, 2702, 1355, 2739], [1372, 2702, 1453, 2736], [1474, 2702, 1573, 2731], [1592, 2702, 1616, 2730], [1635, 2702, 1708, 2730], [1726, 2711, 1810, 2730], [1829, 2702, 1978, 2730], [1996, 2702, 2054, 2730], [2072, 2702, 2131, 2730], [2149, 2702, 2255, 2730], [1282, 2752, 1351, 2780], [1363, 2752, 1412, 2780], [1422, 2752, 1634, 2789], [1646, 2752, 1804, 2789], [1819, 2752, 1902, 2780], [1913, 2761, 1971, 2780], [1983, 2761, 2039, 2780], [2050, 2752, 2124, 2780], [2136, 2761, 2176, 2780], [2187, 2752, 2255, 2780], [1282, 2801, 1381, 2830], [1394, 2801, 1558, 2829], [1572, 2801, 1622, 2829], [1635, 2801, 1703, 2829], [1716, 2810, 1774, 2829], [1788, 2801, 1851, 2830], [1863, 2801, 1902, 2829], [1916, 2801, 2058, 2838], [2072, 2801, 2121, 2829], [2134, 2801, 2255, 2829], [1282, 2851, 1410, 2879], [1429, 2855, 1469, 2879], [1503, 2851, 1567, 2879], [1585, 2851, 1799, 2888], [1817, 2851, 1841, 2879], [1861, 2851, 1923, 2879], [1940, 2851, 1989, 2879], [2007, 2851, 2135, 2888], [2153, 2851, 2255, 2879], [1282, 2901, 1317, 2929], [1329, 2901, 1520, 2930], [1534, 2905, 1563, 2929], [1578, 2901, 1614, 2929], [1630, 2901, 1654, 2929], [1670, 2901, 1834, 2938], [1849, 2901, 1924, 2930], [1938, 2905, 1969, 2929], [1983, 2901, 2066, 2929], [2089, 2901, 2153, 2929], [2167, 2901, 2254, 2929], [1282, 2951, 1333, 2988], [1351, 2951, 1536, 2988], [1555, 2955, 1646, 2979], [1665, 2951, 1738, 2979], [1757, 2951, 1836, 2979], [1853, 2951, 1923, 2980], [1941, 2951, 1991, 2979], [2010, 2951, 2128, 2979], [2148, 2951, 2254, 2988], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 296, 314, 320], [329, 292, 404, 320], [420, 292, 628, 329], [645, 292, 702, 320], [718, 292, 931, 329], [947, 292, 1121, 329], [1149, 293, 1206, 320], [232, 342, 281, 370], [292, 342, 500, 379], [512, 342, 669, 379], [683, 342, 752, 379], [764, 342, 838, 370], [850, 351, 866, 370], [879, 342, 1017, 370], [1028, 342, 1131, 370], [1142, 342, 1204, 370], [232, 401, 329, 429], [344, 392, 446, 420], [461, 392, 508, 420], [522, 392, 622, 421], [637, 392, 686, 420], [700, 392, 885, 429], [900, 392, 935, 420], [947, 392, 997, 420], [1011, 396, 1117, 429], [1131, 392, 1204, 420], [232, 451, 301, 470], [317, 442, 399, 479], [414, 451, 511, 479], [528, 442, 600, 471], [616, 442, 665, 470], [681, 446, 786, 479], [801, 442, 982, 479], [998, 442, 1069, 470], [1096, 442, 1204, 470], [232, 492, 305, 526], [322, 492, 353, 520], [368, 492, 454, 520], [468, 496, 499, 520], [514, 492, 648, 521], [663, 492, 712, 520], [726, 492, 829, 520], [843, 492, 893, 520], [908, 492, 1026, 520], [1041, 492, 1100, 520], [1115, 496, 1146, 520], [1159, 501, 1204, 520], [232, 541, 308, 569], [321, 541, 370, 569], [382, 545, 488, 578], [499, 541, 680, 578], [693, 545, 724, 569], [736, 541, 808, 578], [821, 541, 870, 569], [884, 541, 963, 570], [977, 545, 1057, 569], [1068, 541, 1206, 578], [231, 591, 340, 620], [376, 591, 439, 619], [458, 591, 571, 619], [588, 600, 696, 619], [715, 591, 762, 619], [780, 591, 829, 619], [849, 591, 923, 620], [942, 591, 1069, 628], [1088, 591, 1160, 619], [1179, 591, 1203, 619], [231, 641, 293, 669], [310, 641, 359, 669], [376, 641, 589, 678], [607, 641, 756, 678], [773, 641, 927, 669], [946, 641, 995, 669], [1013, 641, 1203, 669], [230, 691, 368, 720], [382, 691, 421, 719], [433, 691, 512, 728], [527, 691, 563, 719], [573, 691, 671, 720], [687, 691, 730, 726], [743, 691, 793, 719], [806, 695, 897, 720], [909, 691, 991, 726], [1005, 691, 1142, 720], [1156, 691, 1205, 719], [232, 750, 338, 769], [354, 741, 411, 769], [427, 745, 520, 778], [534, 741, 715, 778], [730, 746, 762, 769], [776, 741, 852, 769], [868, 742, 998, 778], [1014, 746, 1087, 778], [1105, 741, 1205, 770], [233, 791, 327, 819], [340, 800, 371, 819], [383, 791, 432, 819], [441, 791, 569, 828], [578, 791, 614, 819], [621, 791, 671, 819], [681, 795, 741, 820], [752, 784, 983, 820], [999, 792, 1032, 819], [1042, 791, 1099, 819], [1111, 791, 1203, 825], [231, 849, 278, 869], [291, 840, 412, 868], [425, 840, 509, 868], [521, 844, 581, 869], [593, 840, 689, 868], [703, 840, 907, 877], [231, 953, 265, 988], [282, 953, 362, 988], [377, 953, 584, 988], [599, 953, 733, 988], [231, 1040, 274, 1068], [293, 1040, 451, 1068], [468, 1040, 498, 1068], [518, 1039, 562, 1077], [582, 1040, 631, 1068], [648, 1040, 778, 1077], [796, 1040, 968, 1077], [986, 1040, 1058, 1069], [1076, 1040, 1205, 1077], [230, 1090, 378, 1127], [391, 1090, 574, 1127], [588, 1090, 705, 1118], [721, 1099, 769, 1118], [783, 1090, 858, 1118], [871, 1090, 1111, 1127], [1124, 1100, 1204, 1118], [228, 1140, 340, 1177], [356, 1140, 427, 1175], [441, 1144, 472, 1168], [488, 1149, 524, 1168], [539, 1140, 702, 1177], [717, 1140, 848, 1168], [863, 1149, 897, 1168], [912, 1149, 948, 1168], [963, 1140, 1126, 1177], [1139, 1149, 1204, 1177], [230, 1190, 407, 1218], [420, 1194, 503, 1224], [518, 1199, 552, 1218], [563, 1190, 658, 1225], [672, 1190, 725, 1218], [736, 1194, 817, 1218], [828, 1190, 1026, 1227], [1041, 1190, 1090, 1218], [1104, 1194, 1205, 1227], [231, 1239, 354, 1268], [366, 1239, 433, 1268], [445, 1239, 507, 1267], [517, 1239, 542, 1267], [555, 1239, 730, 1267], [741, 1239, 782, 1276], [793, 1239, 910, 1267], [923, 1239, 985, 1267], [995, 1239, 1070, 1267], [1081, 1239, 1153, 1276], [1165, 1248, 1205, 1267], [230, 1289, 354, 1326], [366, 1289, 434, 1317], [447, 1289, 520, 1317], [533, 1298, 564, 1317], [577, 1289, 730, 1326], [231, 1364, 295, 1392], [306, 1364, 475, 1393], [487, 1364, 590, 1392], [601, 1364, 626, 1392], [639, 1364, 785, 1401], [797, 1368, 827, 1392], [839, 1373, 1000, 1393], [1012, 1364, 1096, 1392], [1107, 1364, 1203, 1392], [231, 1414, 262, 1442], [280, 1414, 367, 1442], [384, 1418, 414, 1442], [433, 1414, 539, 1442], [557, 1414, 975, 1451], [992, 1414, 1205, 1451], [231, 1464, 406, 1492], [418, 1464, 531, 1492], [542, 1464, 676, 1501], [687, 1473, 759, 1493], [769, 1464, 850, 1501], [862, 1468, 998, 1492], [1010, 1464, 1046, 1492], [1054, 1464, 1204, 1492], [231, 1513, 301, 1550], [315, 1517, 384, 1541], [405, 1513, 433, 1541], [448, 1513, 611, 1541], [625, 1513, 776, 1542], [790, 1513, 825, 1541], [836, 1513, 886, 1541], [899, 1513, 1001, 1541], [1015, 1513, 1040, 1541], [1056, 1513, 1160, 1542], [1174, 1513, 1205, 1541], [231, 1563, 338, 1600], [350, 1563, 377, 1591], [393, 1563, 456, 1591], [467, 1567, 528, 1592], [539, 1563, 620, 1591], [633, 1567, 748, 1600], [762, 1563, 932, 1598], [944, 1563, 974, 1591], [986, 1563, 1035, 1591], [1046, 1563, 1205, 1600], [232, 1613, 376, 1648], [390, 1622, 439, 1641], [267, 1715, 290, 1743], [315, 1715, 398, 1749], [420, 1715, 533, 1743], [550, 1719, 581, 1743], [600, 1715, 678, 1750], [696, 1719, 725, 1743], [743, 1715, 789, 1749], [809, 1715, 913, 1750], [934, 1724, 981, 1744], [998, 1715, 1136, 1752], [1154, 1715, 1204, 1743], [315, 1774, 423, 1794], [438, 1765, 468, 1793], [481, 1765, 690, 1802], [702, 1765, 816, 1793], [829, 1765, 963, 1802], [977, 1765, 1151, 1802], [1164, 1765, 1205, 1802], [314, 1815, 467, 1852], [482, 1815, 531, 1843], [546, 1815, 677, 1843], [692, 1815, 841, 1852], [855, 1815, 927, 1844], [943, 1824, 959, 1843], [973, 1824, 1057, 1843], [1072, 1815, 1206, 1843], [315, 1865, 595, 1894], [610, 1865, 759, 1902], [775, 1864, 879, 1902], [898, 1865, 1039, 1902], [1054, 1865, 1204, 1893], [315, 1914, 384, 1951], [395, 1914, 523, 1951], [533, 1914, 657, 1951], [670, 1918, 700, 1942], [712, 1914, 793, 1942], [804, 1914, 1037, 1951], [1048, 1914, 1084, 1942], [1092, 1914, 1141, 1942], [1152, 1923, 1204, 1943], [315, 1964, 455, 2001], [468, 1964, 539, 1992], [263, 2044, 290, 2072], [316, 2044, 444, 2078], [484, 2053, 530, 2073], [563, 2044, 718, 2072], [752, 2053, 768, 2072], [801, 2044, 890, 2073], [923, 2044, 1204, 2081], [315, 2094, 449, 2122], [460, 2094, 673, 2131], [686, 2094, 747, 2122], [761, 2094, 861, 2123], [873, 2094, 946, 2131], [958, 2094, 1112, 2122], [1127, 2103, 1204, 2122], [314, 2144, 393, 2181], [427, 2144, 648, 2181], [679, 2144, 955, 2181], [984, 2144, 1052, 2172], [1080, 2144, 1128, 2172], [1156, 2144, 1205, 2172], [315, 2194, 527, 2231], [537, 2194, 686, 2231], [697, 2193, 801, 2231], [816, 2194, 887, 2222], [899, 2194, 1002, 2223], [1013, 2194, 1062, 2222], [1072, 2194, 1148, 2222], [1158, 2194, 1206, 2222], [315, 2244, 486, 2281], [502, 2244, 585, 2273], [602, 2244, 790, 2281], [807, 2244, 860, 2272], [875, 2253, 1038, 2278], [1056, 2244, 1106, 2272], [1121, 2253, 1204, 2272], [314, 2293, 449, 2330], [461, 2293, 496, 2321], [505, 2293, 555, 2321], [565, 2293, 794, 2330], [806, 2297, 881, 2321], [892, 2293, 1016, 2321], [1029, 2297, 1060, 2321], [1072, 2293, 1144, 2330], [1156, 2293, 1205, 2321], [315, 2343, 412, 2372], [427, 2343, 457, 2371], [470, 2343, 519, 2371], [532, 2343, 679, 2372], [693, 2343, 808, 2380], [822, 2343, 997, 2380], [1009, 2347, 1040, 2371], [1053, 2343, 1204, 2371], [315, 2393, 366, 2430], [376, 2393, 425, 2421], [436, 2390, 515, 2431], [518, 2387, 547, 2431], [560, 2397, 736, 2422], [745, 2393, 880, 2430], [890, 2393, 1081, 2421], [1093, 2397, 1122, 2421], [1130, 2393, 1205, 2421], [315, 2443, 442, 2480], [455, 2447, 519, 2480], [531, 2443, 562, 2471], [574, 2443, 623, 2471], [635, 2443, 722, 2472], [734, 2443, 826, 2478], [231, 2544, 291, 2574], [304, 2544, 466, 2582], [478, 2544, 702, 2582], [714, 2545, 876, 2574], [893, 2545, 961, 2574], [973, 2544, 999, 2574], [1012, 2547, 1096, 2574], [233, 2623, 322, 2652], [336, 2632, 383, 2652], [397, 2623, 437, 2651], [451, 2627, 503, 2651], [516, 2632, 584, 2651], [599, 2623, 690, 2651], [703, 2623, 851, 2660], [865, 2623, 1040, 2660], [1056, 2623, 1108, 2651], [1121, 2632, 1205, 2651], [233, 2672, 323, 2700], [338, 2672, 452, 2700], [468, 2672, 611, 2709], [631, 2681, 667, 2700], [685, 2672, 856, 2701], [872, 2676, 902, 2700], [919, 2672, 968, 2700], [985, 2672, 1116, 2700], [1132, 2672, 1157, 2700], [1174, 2676, 1205, 2700], [231, 2731, 285, 2750], [298, 2731, 314, 2750], [326, 2721, 624, 2751], [636, 2722, 801, 2759], [814, 2726, 844, 2750], [857, 2731, 943, 2750], [954, 2722, 1043, 2756], [1057, 2722, 1205, 2751], [232, 2772, 452, 2800], [464, 2772, 500, 2800], [508, 2772, 606, 2801], [619, 2772, 735, 2809], [744, 2772, 902, 2809], [914, 2772, 1058, 2809], [1070, 2772, 1205, 2809], [232, 2822, 452, 2850], [468, 2822, 503, 2850], [515, 2822, 623, 2851], [645, 2822, 715, 2850], [731, 2822, 799, 2850], [812, 2831, 873, 2851], [889, 2822, 1065, 2850], [1078, 2822, 1119, 2859], [1133, 2822, 1204, 2851], [232, 2872, 328, 2900], [340, 2872, 397, 2900], [409, 2873, 531, 2900], [545, 2872, 714, 2907], [725, 2876, 754, 2900], [767, 2872, 813, 2906], [827, 2872, 921, 2907], [935, 2872, 1035, 2901], [1047, 2872, 1116, 2909], [1128, 2872, 1204, 2909], [284, 2946, 295, 2963], [299, 2953, 324, 2979], [333, 2962, 375, 2980], [386, 2953, 455, 2979], [466, 2953, 533, 2979], [544, 2953, 618, 2980], [628, 2957, 657, 2979], [668, 2953, 741, 2987], [751, 2957, 779, 2979], [791, 2953, 808, 2979], [821, 2953, 909, 2980], [920, 2953, 972, 2979], [984, 2953, 1007, 2979], [1020, 2953, 1073, 2979], [1085, 2951, 1157, 2988], [1161, 2951, 1202, 2988], [1282, 292, 1381, 320], [1397, 301, 1413, 320], [1427, 292, 1542, 329], [1555, 292, 1693, 321], [1707, 292, 1757, 320], [1771, 292, 1918, 321], [1934, 301, 2019, 320], [2034, 292, 2091, 320], [2105, 292, 2155, 320], [2169, 292, 2255, 320], [1283, 351, 1392, 370], [1414, 343, 1447, 370], [1461, 342, 1537, 370], [1550, 342, 1753, 376], [1770, 351, 1870, 370], [1885, 351, 1964, 371], [1978, 342, 2140, 379], [2154, 351, 2194, 370], [2208, 352, 2254, 371], [1282, 402, 1413, 429], [1428, 392, 1464, 420], [1476, 392, 1584, 426], [1600, 392, 1652, 420], [1666, 392, 1696, 420], [1712, 392, 1865, 427], [1880, 396, 1909, 420], [1924, 392, 1970, 426], [1986, 392, 2099, 427], [2114, 392, 2171, 420], [2187, 392, 2255, 420], [1282, 451, 1342, 471], [1355, 442, 1443, 470], [1455, 451, 1513, 470], [1526, 446, 1590, 479], [1601, 442, 1713, 470], [1725, 442, 1782, 470], [1795, 442, 1995, 479], [2008, 442, 2127, 479], [2139, 446, 2169, 470], [2181, 442, 2254, 479], [1282, 492, 1412, 529], [1420, 492, 1669, 529], [1680, 492, 1716, 520], [1722, 496, 1857, 520], [1868, 492, 1899, 520], [1908, 492, 1984, 520], [1993, 492, 2172, 520], [2182, 492, 2254, 529], [1282, 541, 1428, 570], [1444, 541, 1591, 576], [1607, 541, 1664, 569], [1679, 541, 1831, 578], [1844, 541, 1961, 569], [1976, 541, 2090, 569], [2103, 541, 2192, 578], [2206, 541, 2255, 569], [1282, 591, 1418, 628], [1435, 591, 1584, 628], [1600, 591, 1728, 628], [1744, 591, 1893, 628], [1909, 591, 1939, 626], [1956, 591, 2119, 628], [2135, 591, 2255, 620], [1282, 641, 1317, 669], [1328, 641, 1608, 670], [1621, 641, 1792, 669], [1807, 641, 1908, 676], [1922, 641, 1951, 670], [1965, 641, 2033, 675], [2048, 641, 2166, 676], [2186, 641, 2255, 678], [1282, 691, 1317, 719], [1332, 691, 1416, 719], [1434, 691, 1597, 728], [1616, 691, 1718, 720], [1736, 691, 1817, 728], [1835, 691, 2027, 728], [2045, 691, 2179, 728], [2198, 691, 2255, 719], [1282, 741, 1372, 769], [1382, 741, 1421, 769], [1430, 741, 1506, 769], [1517, 741, 1547, 769], [1558, 750, 1613, 769], [1624, 741, 1826, 769], [1842, 742, 1875, 769], [1886, 741, 1942, 769], [1955, 741, 2039, 770], [2049, 750, 2096, 770], [2107, 741, 2197, 778], [2208, 741, 2256, 769], [1282, 791, 1331, 819], [1345, 791, 1498, 828], [1511, 791, 1613, 819], [1627, 791, 1741, 819], [1753, 791, 1843, 828], [1857, 791, 1993, 828], [2008, 791, 2157, 828], [2172, 791, 2255, 819], [1282, 840, 1304, 868], [1318, 840, 1372, 868], [1388, 840, 1466, 868], [1484, 840, 1588, 869], [1605, 844, 1635, 868], [1652, 840, 1733, 868], [1749, 840, 1951, 877], [1967, 840, 2176, 877], [2192, 840, 2254, 868], [1282, 894, 1369, 918], [1282, 994, 1341, 1024], [1354, 994, 1516, 1032], [1529, 994, 1763, 1032], [1775, 995, 1937, 1024], [1954, 995, 2022, 1024], [1354, 1044, 1606, 1074], [1619, 1044, 1659, 1080], [1672, 1044, 1769, 1080], [1281, 1122, 1407, 1150], [1421, 1122, 1556, 1159], [1567, 1122, 1636, 1151], [1649, 1122, 1747, 1151], [1761, 1122, 1791, 1150], [1804, 1131, 1862, 1150], [1874, 1122, 2023, 1159], [2034, 1122, 2125, 1150], [2138, 1126, 2168, 1150], [2180, 1122, 2255, 1150], [1281, 1172, 1372, 1206], [1386, 1172, 1408, 1200], [1419, 1172, 1444, 1200], [1457, 1172, 1578, 1209], [1590, 1172, 1750, 1209], [1761, 1172, 1809, 1200], [1820, 1172, 1869, 1200], [1880, 1172, 2129, 1209], [2143, 1176, 2173, 1200], [2185, 1181, 2254, 1209], [1281, 1226, 1345, 1250], [1359, 1222, 1428, 1251], [1444, 1222, 1541, 1251], [1557, 1222, 1695, 1251], [1710, 1222, 1759, 1250], [1774, 1226, 1834, 1251], [1849, 1222, 2012, 1259], [2028, 1222, 2120, 1250], [2135, 1226, 2165, 1250], [2180, 1222, 2255, 1250], [1281, 1272, 1372, 1306], [1386, 1272, 1486, 1301], [1498, 1281, 1545, 1301], [1557, 1272, 1680, 1300], [1691, 1272, 1780, 1309], [1793, 1272, 1842, 1300], [1855, 1271, 1881, 1300], [1894, 1276, 1969, 1300], [1981, 1272, 2012, 1300], [2024, 1272, 2165, 1309], [2181, 1272, 2205, 1300], [2222, 1273, 2255, 1300], [1281, 1322, 1331, 1350], [1346, 1322, 1467, 1359], [1482, 1322, 1629, 1359], [1646, 1322, 1762, 1359], [1781, 1322, 1864, 1351], [1881, 1322, 2061, 1350], [2079, 1331, 2135, 1350], [2150, 1322, 2188, 1350], [2204, 1331, 2254, 1350], [1280, 1372, 1404, 1409], [1423, 1381, 1453, 1400], [1473, 1381, 1489, 1400], [1506, 1372, 1613, 1400], [1631, 1371, 1663, 1400], [1682, 1372, 1782, 1401], [1800, 1382, 1844, 1412], [1866, 1372, 1996, 1400], [2015, 1372, 2064, 1400], [2081, 1372, 2255, 1400], [1282, 1421, 1404, 1449], [1416, 1421, 1452, 1449], [1461, 1421, 1544, 1450], [1555, 1422, 1566, 1449], [1580, 1421, 1610, 1449], [1622, 1430, 1681, 1449], [1692, 1421, 1840, 1458], [1852, 1421, 1924, 1450], [1936, 1421, 2019, 1450], [2029, 1422, 2046, 1458], [2060, 1421, 2091, 1449], [2102, 1421, 2152, 1449], [2163, 1421, 2253, 1449], [1281, 1472, 1314, 1499], [1330, 1471, 1380, 1499], [1394, 1475, 1455, 1499], [1469, 1471, 1505, 1499], [1518, 1480, 1573, 1499], [1588, 1471, 1759, 1499], [1775, 1480, 1822, 1500], [1838, 1471, 1901, 1500], [1915, 1471, 1994, 1499], [2009, 1475, 2040, 1499], [2055, 1471, 2181, 1508], [2198, 1471, 2255, 1499], [1281, 1521, 1404, 1555], [1420, 1521, 1477, 1549], [1490, 1521, 1599, 1549], [1613, 1521, 1652, 1549], [1665, 1521, 1930, 1558], [1942, 1525, 2122, 1558], [2136, 1521, 2225, 1558], [2238, 1531, 2254, 1549], [1282, 1571, 1471, 1608], [1490, 1571, 1547, 1599], [1564, 1571, 1603, 1599], [1619, 1571, 1873, 1608], [1888, 1575, 2068, 1608], [2086, 1571, 2158, 1600], [2167, 1571, 2191, 1608], [2207, 1580, 2254, 1599], [1280, 1621, 1434, 1658], [1281, 1695, 1310, 1723], [1322, 1695, 1372, 1723], [1387, 1695, 1422, 1723], [1425, 1695, 1639, 1723], [1654, 1695, 1737, 1724], [1752, 1695, 1935, 1732], [1949, 1699, 2143, 1724], [2160, 1704, 2188, 1730], [2207, 1704, 2255, 1723], [1282, 1745, 1404, 1773], [1420, 1749, 1450, 1773], [1466, 1745, 1545, 1773], [1562, 1754, 1578, 1773], [1596, 1742, 1643, 1783], [1655, 1742, 1924, 1783], [1939, 1745, 2046, 1773], [2063, 1745, 2104, 1779], [2123, 1745, 2192, 1773], [2208, 1754, 2255, 1774], [1281, 1804, 1337, 1823], [1348, 1804, 1468, 1832], [1480, 1795, 1560, 1824], [1570, 1804, 1617, 1824], [1627, 1795, 1690, 1824], [1699, 1795, 1777, 1823], [1787, 1799, 1817, 1823], [1829, 1804, 1859, 1823], [1871, 1795, 1920, 1823], [1930, 1797, 2022, 1824], [2031, 1794, 2255, 1832], [1281, 1844, 1438, 1881], [1451, 1854, 1482, 1873], [1495, 1845, 1626, 1874], [1400, 1941, 1524, 1982], [1532, 1935, 1661, 1982], [1677, 1932, 1733, 1990], [1700, 2002, 1709, 2021], [1744, 1932, 1800, 1990], [1764, 2002, 1777, 2027], [1811, 1954, 1855, 1984], [1865, 1941, 1901, 1982], [1904, 1942, 1916, 1955], [1903, 1953, 1989, 1982], [1993, 1932, 2009, 1958], [1991, 1964, 2004, 1989], [2017, 1936, 2050, 1982], [2209, 1944, 2254, 1979], [1633, 2069, 1661, 2078], [1679, 2053, 1741, 2094], [1757, 2073, 1783, 2074], [1797, 2047, 1849, 2084], [1855, 2047, 1999, 2094], [2015, 2073, 2041, 2074], [2055, 2047, 2107, 2084], [2113, 2053, 2135, 2094], [2209, 2056, 2254, 2091], [1282, 2149, 1381, 2178], [1398, 2149, 1546, 2186], [1562, 2148, 1594, 2177], [1611, 2149, 1755, 2177], [1772, 2149, 1834, 2177], [1849, 2149, 1898, 2177], [1914, 2149, 2092, 2186], [2110, 2158, 2159, 2177], [2174, 2149, 2255, 2177], [1283, 2199, 1407, 2236], [1424, 2198, 1456, 2227], [1468, 2203, 1603, 2236], [1615, 2199, 1665, 2227], [1674, 2199, 1884, 2236], [1896, 2199, 2033, 2228], [2045, 2199, 2084, 2227], [2096, 2199, 2126, 2228], [2129, 2199, 2141, 2212], [2155, 2199, 2253, 2228], [1282, 2249, 1312, 2277], [1327, 2249, 1452, 2286], [1468, 2249, 1540, 2278], [1554, 2253, 1672, 2286], [1686, 2253, 1716, 2277], [1733, 2249, 1772, 2277], [1788, 2249, 1818, 2278], [1821, 2242, 1837, 2268], [1855, 2249, 1953, 2278], [1970, 2249, 2000, 2277], [2015, 2249, 2138, 2283], [2156, 2249, 2214, 2277], [2229, 2249, 2253, 2277], [1282, 2298, 1390, 2326], [1407, 2298, 1471, 2326], [1487, 2298, 1536, 2326], [1553, 2307, 1659, 2326], [1674, 2298, 1710, 2326], [1723, 2298, 1772, 2326], [1788, 2302, 1848, 2327], [1864, 2298, 1945, 2326], [1961, 2298, 2133, 2335], [2150, 2298, 2181, 2326], [2197, 2298, 2253, 2326], [1282, 2348, 1485, 2382], [1498, 2348, 1627, 2385], [1317, 2457, 1340, 2485], [1364, 2457, 1433, 2486], [1446, 2461, 1477, 2485], [1490, 2457, 1590, 2486], [1603, 2466, 1636, 2485], [1648, 2457, 1730, 2485], [1742, 2457, 1842, 2486], [1855, 2457, 1953, 2486], [1967, 2461, 1998, 2485], [2010, 2457, 2074, 2494], [2087, 2466, 2118, 2485], [2132, 2457, 2254, 2485], [1365, 2507, 1427, 2535], [1438, 2507, 1517, 2544], [1532, 2507, 1583, 2542], [1587, 2531, 1592, 2535], [1605, 2507, 1889, 2544], [1902, 2506, 1959, 2542], [1313, 2593, 1340, 2621], [1364, 2593, 1433, 2622], [1447, 2597, 1478, 2621], [1492, 2593, 1651, 2630], [1664, 2593, 1799, 2622], [1814, 2590, 1881, 2631], [1899, 2593, 2005, 2630], [2019, 2593, 2155, 2630], [2172, 2593, 2255, 2621], [1365, 2642, 1483, 2679], [1498, 2642, 1667, 2679], [1682, 2642, 1705, 2670], [1720, 2642, 1815, 2670], [1832, 2651, 1862, 2670], [1879, 2642, 1928, 2670], [1942, 2642, 2069, 2679], [2083, 2642, 2119, 2670], [2131, 2642, 2180, 2670], [2195, 2646, 2255, 2671], [1365, 2692, 1546, 2729], [1559, 2692, 1635, 2720], [1650, 2689, 1740, 2730], [1743, 2689, 1766, 2730], [1784, 2707, 1788, 2712], [1805, 2689, 1843, 2730], [1847, 2685, 1863, 2711], [1871, 2689, 1890, 2730], [1905, 2697, 1937, 2720], [1948, 2692, 2024, 2720], [2037, 2693, 2167, 2729], [2179, 2697, 2253, 2729], [1282, 2801, 1345, 2829], [1357, 2801, 1570, 2838], [1583, 2801, 1732, 2838], [1745, 2801, 1894, 2829], [1905, 2801, 2058, 2838], [2072, 2801, 2121, 2829], [2134, 2801, 2254, 2829], [1282, 2851, 1330, 2879], [1346, 2851, 1481, 2879], [1495, 2851, 1633, 2880], [1648, 2851, 1746, 2880], [1763, 2851, 1794, 2879], [1809, 2851, 1859, 2879], [1874, 2855, 1934, 2880], [1950, 2851, 2133, 2888], [2149, 2860, 2253, 2888], [1283, 2901, 1344, 2936], [1368, 2901, 1425, 2929], [1445, 2894, 1497, 2929], [1502, 2901, 1513, 2936], [1532, 2901, 1737, 2938], [1756, 2905, 1787, 2929], [1806, 2901, 1881, 2929], [1901, 2901, 2065, 2938], [2083, 2901, 2253, 2938], [1282, 2951, 1423, 2980], [1436, 2951, 1520, 2980], [1532, 2951, 1721, 2988], [1733, 2951, 1790, 2979], [1804, 2955, 1868, 2988], [1879, 2951, 1920, 2988], [1931, 2951, 2117, 2988], [2130, 2960, 2146, 2979], [2158, 2951, 2254, 2980], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [231, 1240, 328, 1274], [339, 1241, 363, 1267], [376, 1240, 463, 1274], [473, 1240, 565, 1274], [575, 1240, 826, 1274], [837, 1240, 880, 1266], [889, 1240, 1010, 1274], [1020, 1240, 1211, 1274], [1221, 1240, 1399, 1274], [1411, 1240, 1550, 1274], [1561, 1241, 1589, 1273], [1599, 1240, 1622, 1266], [1633, 1240, 1720, 1274], [1731, 1240, 1783, 1266], [1794, 1240, 1880, 1266], [1891, 1249, 1919, 1266], [1929, 1240, 1974, 1266], [1983, 1240, 2097, 1274], [2107, 1240, 2139, 1266], [2146, 1240, 2191, 1266], [2200, 1244, 2255, 1267], [232, 1286, 394, 1320], [404, 1286, 482, 1312], [496, 1287, 526, 1312], [535, 1290, 659, 1317], [669, 1286, 714, 1312], [723, 1286, 945, 1313], [956, 1286, 1095, 1320], [1104, 1287, 1132, 1319], [1142, 1286, 1341, 1320], [1350, 1286, 1395, 1312], [1404, 1286, 1496, 1320], [1505, 1286, 1560, 1312], [1569, 1286, 1606, 1320], [1615, 1286, 1759, 1320], [1769, 1295, 1833, 1313], [1841, 1286, 1956, 1320], [1965, 1286, 2036, 1312], [2045, 1295, 2255, 1312], [233, 1332, 358, 1358], [370, 1332, 397, 1358], [408, 1341, 424, 1358], [434, 1332, 538, 1358], [550, 1332, 653, 1366], [664, 1332, 696, 1358], [704, 1332, 815, 1366], [827, 1332, 1046, 1366], [233, 1462, 397, 1499], [410, 1466, 474, 1499], [486, 1462, 567, 1499], [580, 1466, 610, 1490], [623, 1462, 751, 1499], [764, 1466, 794, 1490], [808, 1462, 889, 1490], [902, 1462, 952, 1490], [965, 1462, 1130, 1499], [1142, 1471, 1204, 1490], [232, 1512, 287, 1540], [300, 1511, 342, 1540], [358, 1513, 513, 1546], [525, 1512, 711, 1549], [723, 1512, 806, 1541], [819, 1512, 983, 1549], [993, 1512, 1124, 1549], [1136, 1521, 1204, 1540], [232, 1562, 304, 1599], [316, 1562, 440, 1591], [456, 1562, 536, 1597], [549, 1562, 578, 1591], [591, 1563, 667, 1599], [681, 1562, 775, 1597], [789, 1571, 822, 1590], [834, 1562, 995, 1599], [1009, 1562, 1104, 1599], [1115, 1566, 1145, 1590], [1157, 1562, 1203, 1596], [232, 1612, 326, 1647], [344, 1612, 484, 1641], [502, 1612, 559, 1640], [576, 1612, 703, 1649], [720, 1613, 822, 1640], [839, 1612, 1103, 1649], [1119, 1612, 1204, 1640], [232, 1662, 285, 1690], [301, 1662, 371, 1690], [385, 1662, 409, 1690], [421, 1662, 494, 1690], [506, 1662, 774, 1699], [786, 1662, 883, 1699], [896, 1662, 953, 1690], [966, 1662, 1030, 1690], [1042, 1662, 1136, 1699], [1151, 1663, 1205, 1690], [232, 1711, 333, 1740], [344, 1711, 405, 1739], [415, 1715, 446, 1739], [457, 1711, 538, 1739], [549, 1711, 598, 1739], [609, 1711, 783, 1739], [794, 1711, 1067, 1748], [1080, 1711, 1206, 1740], [231, 1761, 368, 1798], [382, 1761, 465, 1790], [480, 1761, 668, 1798], [690, 1762, 722, 1789], [736, 1761, 823, 1789], [836, 1765, 867, 1789], [880, 1761, 920, 1789], [934, 1761, 1003, 1795], [1019, 1770, 1066, 1790], [1080, 1761, 1205, 1798], [232, 1811, 346, 1848], [357, 1811, 407, 1839], [418, 1811, 542, 1848], [555, 1811, 682, 1848], [695, 1811, 771, 1839], [789, 1811, 852, 1839], [865, 1811, 946, 1839], [959, 1811, 1159, 1839], [1172, 1811, 1208, 1839], [232, 1861, 288, 1889], [301, 1861, 385, 1890], [396, 1861, 420, 1889], [433, 1865, 464, 1889], [477, 1861, 682, 1898], [693, 1861, 742, 1889], [753, 1861, 851, 1898], [863, 1858, 931, 1899], [946, 1865, 1029, 1895], [1042, 1861, 1163, 1889], [1174, 1861, 1205, 1889], [232, 1911, 373, 1948], [385, 1911, 401, 1940], [414, 1911, 445, 1939], [456, 1915, 545, 1939], [558, 1911, 594, 1939], [602, 1911, 651, 1939], [661, 1911, 768, 1948], [778, 1911, 1042, 1948], [1054, 1911, 1203, 1945], [231, 1960, 320, 1997], [331, 1960, 616, 1997], [628, 1960, 710, 1988], [720, 1960, 804, 1989], [815, 1970, 1051, 1988], [1065, 1960, 1203, 1988], [232, 2010, 373, 2038], [385, 2010, 464, 2038], [475, 2014, 613, 2039], [623, 2010, 747, 2047], [760, 2010, 993, 2047], [1008, 2010, 1068, 2045], [1082, 2010, 1206, 2039], [231, 2060, 359, 2097], [377, 2069, 393, 2088], [409, 2060, 673, 2097], [689, 2060, 776, 2097], [806, 2060, 869, 2088], [885, 2060, 966, 2088], [983, 2064, 1112, 2097], [1127, 2060, 1152, 2088], [1170, 2060, 1204, 2088], [232, 2110, 373, 2138], [387, 2110, 613, 2147], [626, 2110, 657, 2138], [671, 2110, 778, 2147], [792, 2110, 819, 2144], [835, 2110, 892, 2138], [906, 2110, 1063, 2138], [1077, 2110, 1108, 2138], [1121, 2119, 1205, 2138], [232, 2160, 322, 2188], [333, 2160, 439, 2189], [232, 2234, 274, 2262], [290, 2243, 306, 2262], [319, 2234, 383, 2262], [396, 2238, 469, 2271], [485, 2234, 585, 2262], [598, 2234, 659, 2262], [672, 2234, 755, 2262], [768, 2234, 818, 2262], [832, 2234, 996, 2271], [1008, 2234, 1134, 2271], [1149, 2243, 1205, 2262], [231, 2284, 269, 2312], [279, 2284, 464, 2312], [474, 2288, 504, 2312], [515, 2293, 582, 2312], [591, 2288, 622, 2312], [632, 2293, 699, 2318], [711, 2293, 758, 2313], [767, 2293, 823, 2312], [833, 2284, 973, 2321], [982, 2284, 1031, 2312], [1041, 2284, 1206, 2321], [232, 2334, 357, 2371], [373, 2343, 403, 2362], [418, 2343, 434, 2362], [446, 2334, 635, 2362], [649, 2334, 706, 2362], [719, 2334, 803, 2363], [815, 2334, 956, 2371], [970, 2334, 986, 2363], [1002, 2343, 1032, 2362], [1047, 2343, 1084, 2362], [1097, 2343, 1204, 2371], [232, 2384, 324, 2412], [342, 2393, 414, 2413], [431, 2384, 481, 2412], [498, 2384, 687, 2412], [706, 2384, 741, 2412], [757, 2384, 882, 2421], [901, 2384, 958, 2412], [976, 2384, 1090, 2412], [1108, 2384, 1204, 2413], [233, 2434, 397, 2471], [407, 2434, 612, 2471], [627, 2444, 672, 2474], [690, 2447, 718, 2456], [733, 2434, 762, 2462], [768, 2431, 825, 2472], [811, 2444, 876, 2473], [880, 2422, 896, 2448], [877, 2431, 924, 2479], [344, 2538, 468, 2579], [476, 2532, 605, 2579], [724, 2541, 750, 2569], [622, 2576, 732, 2605], [737, 2576, 783, 2605], [791, 2575, 836, 2604], [843, 2576, 851, 2605], [870, 2521, 921, 2596], [925, 2539, 937, 2552], [924, 2550, 1010, 2579], [1013, 2529, 1029, 2555], [1011, 2561, 1024, 2586], [1038, 2521, 1085, 2596], [1159, 2540, 1204, 2576], [233, 2652, 322, 2681], [338, 2652, 387, 2680], [402, 2652, 526, 2689], [542, 2652, 610, 2680], [626, 2652, 650, 2680], [667, 2652, 770, 2689], [787, 2656, 816, 2680], [831, 2652, 880, 2680], [897, 2656, 1037, 2680], [1053, 2652, 1139, 2686], [1158, 2661, 1205, 2681], [231, 2702, 321, 2731], [334, 2702, 395, 2730], [407, 2702, 580, 2730], [592, 2702, 671, 2739], [685, 2702, 732, 2730], [744, 2702, 793, 2730], [806, 2712, 843, 2730], [857, 2706, 997, 2730], [1009, 2711, 1101, 2730], [1113, 2702, 1143, 2730], [1156, 2702, 1205, 2730], [225, 2752, 259, 2789], [272, 2756, 421, 2786], [434, 2752, 487, 2780], [498, 2761, 545, 2781], [558, 2752, 597, 2780], [610, 2756, 663, 2780], [673, 2752, 763, 2781], [776, 2752, 884, 2781], [901, 2753, 955, 2780], [967, 2752, 1116, 2780], [1128, 2752, 1205, 2780], [233, 2810, 249, 2829], [261, 2801, 525, 2838], [536, 2801, 647, 2829], [664, 2801, 692, 2829], [704, 2801, 791, 2830], [804, 2801, 991, 2838], [1003, 2801, 1028, 2829], [1041, 2805, 1072, 2829], [1085, 2810, 1205, 2829], [232, 2851, 293, 2879], [304, 2851, 378, 2879], [390, 2851, 538, 2880], [550, 2861, 587, 2879], [600, 2851, 683, 2880], [695, 2860, 751, 2879], [762, 2851, 939, 2888], [950, 2851, 988, 2879], [1001, 2851, 1121, 2888], [1133, 2851, 1205, 2880], [232, 2901, 306, 2929], [324, 2901, 472, 2930], [483, 2901, 517, 2938], [535, 2901, 618, 2930], [637, 2901, 689, 2936], [693, 2925, 698, 2929], [718, 2905, 748, 2929], [767, 2910, 887, 2929], [906, 2910, 922, 2929], [940, 2900, 1083, 2930], [1101, 2901, 1204, 2930], [232, 2950, 408, 2988], [419, 2951, 548, 2986], [562, 2951, 609, 2979], [620, 2951, 694, 2979], [706, 2951, 789, 2980], [802, 2952, 831, 2979], [844, 2951, 891, 2979], [904, 2951, 1054, 2980], [1064, 2956, 1204, 2980], [1278, 1463, 1373, 1499], [1404, 1462, 1507, 1491], [1523, 1462, 1580, 1490], [1599, 1462, 1794, 1499], [1814, 1471, 1873, 1490], [1889, 1471, 1945, 1490], [1962, 1462, 2032, 1490], [2050, 1462, 2255, 1499], [1282, 1512, 1423, 1549], [1438, 1511, 1455, 1541], [1471, 1512, 1512, 1549], [1528, 1512, 1677, 1549], [1693, 1511, 1718, 1541], [1733, 1512, 1886, 1549], [1901, 1512, 2026, 1549], [2042, 1512, 2099, 1540], [2114, 1512, 2255, 1549], [1282, 1562, 1395, 1590], [1416, 1562, 1649, 1599], [1673, 1559, 1719, 1600], [1727, 1586, 1731, 1598], [1743, 1555, 1779, 1590], [1784, 1559, 1794, 1600], [1817, 1562, 1897, 1590], [1916, 1562, 1965, 1590], [1984, 1562, 2108, 1599], [2127, 1562, 2255, 1599], [1282, 1612, 1358, 1640], [1295, 1704, 1420, 1745], [1427, 1698, 1557, 1745], [1583, 1679, 1596, 1707], [1578, 1734, 1603, 1764], [1661, 1695, 1717, 1753], [1618, 1764, 1700, 1794], [1706, 1765, 1761, 1794], [1798, 1679, 1811, 1707], [1775, 1745, 1834, 1763], [1865, 1695, 1921, 1753], [1848, 1765, 1934, 1787], [1965, 1695, 2021, 1753], [1946, 1774, 1980, 1795], [1988, 1764, 2037, 1789], [2053, 1704, 2089, 1745], [2093, 1705, 2105, 1718], [2092, 1716, 2178, 1745], [2181, 1695, 2197, 1721], [2179, 1727, 2192, 1752], [2206, 1699, 2239, 1745], [2209, 1804, 2254, 1839], [1281, 1855, 1306, 1882], [1320, 1854, 1344, 1882], [1360, 1854, 1521, 1891], [1534, 1858, 1565, 1882], [1579, 1858, 1649, 1882], [1663, 1854, 1725, 1882], [1738, 1854, 1788, 1882], [1802, 1854, 1919, 1891], [1935, 1854, 1970, 1882], [1982, 1854, 2031, 1882], [2046, 1854, 2182, 1891], [2197, 1855, 2254, 1882], [1281, 1904, 1360, 1941], [1378, 1904, 1435, 1932], [1451, 1904, 1564, 1932], [1580, 1904, 1703, 1941], [1720, 1908, 1875, 1932], [1893, 1914, 1927, 1932], [1945, 1904, 2002, 1932], [2018, 1914, 2041, 1932], [2057, 1904, 2134, 1932], [2150, 1908, 2202, 1932], [2216, 1904, 2255, 1932], [1281, 1953, 1378, 1990], [1399, 1953, 1456, 1981], [1472, 1962, 1556, 1981], [1573, 1953, 1765, 1990], [1781, 1963, 1815, 1981], [1838, 1958, 1875, 1984], [1902, 1950, 1941, 1991], [1944, 1950, 1967, 1991], [1989, 1953, 2046, 1981], [2062, 1963, 2085, 1981], [2108, 1958, 2145, 1984], [2172, 1950, 2211, 1991], [2214, 1946, 2253, 1991], [1281, 2003, 1496, 2037], [1509, 2003, 1609, 2031], [1620, 2003, 1682, 2031], [1691, 2003, 1785, 2031], [1797, 2012, 1813, 2031], [1823, 2003, 1956, 2031], [1968, 2003, 2132, 2040], [2142, 2003, 2253, 2037], [1282, 2057, 1311, 2081], [1320, 2053, 1394, 2081], [1404, 2053, 1532, 2090], [1543, 2057, 1616, 2090], [1628, 2053, 1702, 2081], [1712, 2053, 1795, 2082], [1806, 2053, 1836, 2081], [1846, 2053, 1896, 2081], [1906, 2053, 2042, 2090], [2052, 2053, 2177, 2090], [2188, 2062, 2254, 2081], [1281, 2107, 1368, 2131], [1384, 2103, 1416, 2131], [1435, 2103, 1498, 2132], [1513, 2103, 1552, 2131], [1567, 2103, 1697, 2140], [1714, 2103, 1840, 2132], [1859, 2103, 1898, 2131], [1914, 2103, 2012, 2132], [2029, 2103, 2060, 2131], [2076, 2103, 2125, 2131], [2141, 2103, 2255, 2131], [1282, 2157, 1423, 2181], [1439, 2146, 1474, 2181], [1481, 2177, 1486, 2181], [1509, 2154, 1563, 2181], [1577, 2162, 1633, 2181], [1647, 2157, 1843, 2190], [1857, 2153, 1914, 2181], [1929, 2153, 1970, 2190], [1986, 2153, 2096, 2190], [2110, 2153, 2255, 2190], [1281, 2203, 1356, 2231], [1369, 2203, 1494, 2240], [1507, 2203, 1590, 2232], [1603, 2203, 1730, 2232], [1744, 2203, 1793, 2231], [1806, 2212, 1894, 2231], [1907, 2203, 2020, 2231], [2032, 2203, 2253, 2240], [1281, 2254, 1562, 2281], [1579, 2252, 1778, 2289], [1791, 2261, 1838, 2281], [1848, 2252, 2025, 2289], [2034, 2252, 2175, 2289], [2186, 2252, 2204, 2281], [2214, 2252, 2255, 2289], [1282, 2302, 1432, 2339], [1447, 2302, 1519, 2339], [1534, 2311, 1593, 2330], [1607, 2302, 1731, 2339], [1747, 2302, 1966, 2339], [1980, 2311, 2033, 2339], [2047, 2302, 2174, 2339], [2191, 2306, 2255, 2339], [1282, 2352, 1334, 2387], [1338, 2376, 1343, 2380], [1356, 2351, 1381, 2381], [1396, 2365, 1424, 2374], [1441, 2352, 1480, 2387], [1494, 2352, 1551, 2380], [1563, 2356, 1591, 2380], [1601, 2352, 1675, 2380], [1686, 2352, 1814, 2389], [1825, 2356, 1890, 2389], [1901, 2354, 1914, 2380], [1925, 2361, 1972, 2381], [1982, 2352, 2126, 2389], [2137, 2352, 2186, 2380], [2197, 2352, 2254, 2380], [1281, 2402, 1394, 2439], [1406, 2402, 1562, 2439], [1575, 2401, 1798, 2439], [1810, 2401, 2034, 2439], [2046, 2401, 2211, 2438], [1381, 2503, 1444, 2547], [1410, 2539, 1436, 2559], [1453, 2516, 1515, 2557], [1523, 2543, 1527, 2555], [1540, 2510, 1685, 2557], [1706, 2491, 1719, 2519], [1695, 2557, 1729, 2575], [1775, 2482, 1802, 2495], [1761, 2508, 1817, 2566], [1744, 2577, 1830, 2599], [1843, 2528, 1859, 2547], [1863, 2517, 1875, 2530], [1862, 2536, 1917, 2557], [1940, 2491, 1953, 2519], [1935, 2557, 1958, 2575], [2010, 2482, 2028, 2495], [1991, 2508, 2047, 2566], [1972, 2586, 2006, 2608], [2014, 2576, 2063, 2601], [2076, 2528, 2092, 2547], [2096, 2507, 2112, 2533], [2094, 2540, 2107, 2565], [2120, 2511, 2154, 2557], [2209, 2519, 2254, 2554], [1281, 2652, 1381, 2681], [1395, 2651, 1426, 2680], [1443, 2652, 1567, 2680], [1580, 2652, 1630, 2680], [1642, 2652, 1767, 2689], [1779, 2661, 1813, 2680], [1825, 2652, 1938, 2680], [1952, 2652, 2087, 2689], [2101, 2656, 2254, 2680], [1281, 2702, 1345, 2739], [1361, 2702, 1462, 2731], [1479, 2702, 1559, 2730], [1575, 2702, 1624, 2730], [1640, 2702, 1764, 2739], [1780, 2711, 1898, 2739], [1928, 2703, 1961, 2730], [1978, 2702, 2062, 2730], [2078, 2702, 2186, 2736], [2207, 2702, 2254, 2730], [1281, 2752, 1517, 2781], [1536, 2753, 1700, 2783], [1719, 2762, 1738, 2780], [1756, 2752, 1895, 2789], [1912, 2752, 1953, 2786], [1959, 2752, 2034, 2781], [2053, 2752, 2187, 2781], [2207, 2752, 2254, 2780], [1282, 2811, 1370, 2829], [1380, 2801, 1599, 2838], [1610, 2806, 1884, 2830], [1894, 2801, 1932, 2838], [1936, 2801, 1983, 2829], [1990, 2801, 2124, 2838], [2133, 2811, 2253, 2838], [1282, 2851, 1330, 2880], [1347, 2851, 1383, 2879], [1401, 2860, 1479, 2885], [1498, 2851, 1555, 2879], [1573, 2851, 1722, 2888], [1739, 2851, 1763, 2879], [1781, 2851, 1959, 2888], [1976, 2851, 2059, 2879], [2077, 2851, 2116, 2879], [2132, 2851, 2254, 2879], [1282, 2901, 1368, 2938], [1383, 2901, 1485, 2930], [1498, 2910, 1645, 2938], [1658, 2905, 1689, 2929], [1702, 2901, 1751, 2929], [1764, 2901, 1861, 2930], [1875, 2901, 2006, 2929], [2020, 2901, 2073, 2938], [2086, 2901, 2255, 2938], [1283, 2951, 1321, 2979], [1336, 2951, 1533, 2988], [1549, 2955, 1580, 2979], [1594, 2951, 1643, 2979], [1659, 2960, 1741, 2979], [1756, 2951, 1865, 2986], [1881, 2951, 1934, 2979], [1947, 2951, 2077, 2988], [2092, 2960, 2123, 2979], [2139, 2960, 2155, 2979], [2169, 2960, 2254, 2988], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 292, 337, 320], [351, 292, 423, 321], [439, 292, 488, 320], [504, 292, 712, 329], [727, 292, 834, 326], [852, 301, 899, 321], [914, 292, 977, 320], [992, 292, 1054, 320], [1069, 292, 1091, 320], [1105, 292, 1203, 321], [232, 351, 303, 379], [315, 342, 385, 371], [397, 342, 428, 370], [439, 342, 578, 379], [595, 343, 642, 379], [655, 342, 804, 379], [817, 342, 944, 379], [957, 346, 1112, 370], [1126, 342, 1205, 370], [232, 392, 281, 420], [291, 392, 415, 429], [426, 392, 589, 420], [599, 392, 797, 426], [810, 392, 866, 420], [879, 392, 1028, 429], [1039, 392, 1205, 429], [233, 442, 452, 479], [465, 442, 606, 479], [618, 442, 634, 471], [648, 442, 710, 477], [721, 451, 805, 470], [816, 446, 876, 471], [887, 442, 985, 471], [998, 451, 1046, 470], [1057, 442, 1205, 471], [232, 492, 367, 529], [376, 492, 407, 520], [419, 501, 435, 520], [444, 492, 568, 529], [579, 492, 805, 529], [818, 492, 867, 520], [878, 496, 1013, 529], [1022, 492, 1072, 520], [1082, 492, 1204, 520], [232, 541, 318, 578], [330, 541, 377, 569], [386, 541, 436, 569], [445, 545, 505, 570], [515, 541, 613, 570], [625, 541, 688, 570], [696, 541, 735, 569], [744, 541, 861, 578], [871, 541, 1012, 578], [1024, 541, 1071, 569], [1082, 550, 1204, 578], [232, 591, 325, 619], [336, 595, 367, 619], [380, 601, 424, 632], [430, 591, 451, 626], [464, 591, 591, 620], [600, 591, 712, 628], [724, 595, 754, 619], [767, 591, 896, 628], [908, 595, 1049, 628], [1061, 591, 1110, 619], [1122, 591, 1205, 620], [233, 641, 397, 678], [408, 641, 534, 678], [548, 651, 593, 681], [601, 665, 606, 669], [231, 745, 291, 775], [304, 746, 441, 775], [452, 745, 674, 783], [687, 745, 737, 775], [749, 746, 854, 775], [865, 746, 980, 775], [231, 824, 380, 861], [397, 825, 415, 852], [434, 824, 458, 852], [478, 833, 515, 852], [533, 824, 772, 861], [790, 824, 826, 852], [840, 824, 982, 861], [1000, 824, 1027, 853], [1059, 824, 1102, 852], [1121, 824, 1204, 852], [231, 873, 324, 901], [336, 873, 366, 901], [378, 873, 485, 910], [497, 873, 524, 907], [537, 882, 584, 902], [596, 882, 644, 901], [655, 873, 748, 910], [760, 873, 919, 901], [931, 873, 962, 901], [973, 873, 1144, 910], [1156, 873, 1205, 901], [231, 923, 334, 960], [351, 923, 615, 960], [633, 923, 772, 951], [791, 923, 838, 951], [856, 932, 872, 951], [889, 923, 1058, 960], [1078, 923, 1117, 951], [1121, 947, 1126, 951], [1146, 933, 1191, 963], [1198, 947, 1203, 951], [232, 974, 386, 1007], [401, 973, 442, 1010], [457, 973, 606, 1010], [620, 973, 718, 1002], [735, 977, 763, 1001], [776, 973, 825, 1001], [840, 973, 1081, 1007], [1097, 973, 1147, 1001], [1160, 973, 1204, 1001], [232, 1023, 278, 1051], [293, 1023, 457, 1060], [471, 1023, 610, 1051], [626, 1032, 674, 1051], [689, 1023, 809, 1052], [822, 1023, 863, 1060], [877, 1023, 926, 1051], [940, 1023, 1049, 1052], [1067, 1024, 1205, 1060], [225, 1073, 419, 1110], [434, 1073, 472, 1110], [479, 1083, 661, 1101], [676, 1073, 707, 1101], [722, 1082, 738, 1101], [752, 1073, 841, 1110], [856, 1077, 997, 1101], [1011, 1073, 1063, 1108], [1067, 1097, 1072, 1101], [1086, 1073, 1204, 1110], [232, 1122, 291, 1150], [302, 1122, 337, 1150], [345, 1122, 531, 1159], [547, 1122, 637, 1151], [647, 1122, 795, 1159], [803, 1122, 856, 1150], [869, 1131, 885, 1150], [894, 1131, 965, 1159], [976, 1126, 1077, 1159], [1086, 1122, 1205, 1159], [232, 1172, 420, 1200], [439, 1181, 486, 1201], [503, 1172, 652, 1200], [670, 1172, 733, 1200], [751, 1172, 781, 1200], [799, 1172, 930, 1209], [948, 1172, 1009, 1200], [1026, 1172, 1168, 1209], [1186, 1173, 1204, 1200], [232, 1222, 499, 1259], [516, 1222, 563, 1250], [572, 1222, 715, 1259], [729, 1222, 836, 1251], [860, 1222, 888, 1250], [904, 1222, 1013, 1259], [1028, 1222, 1159, 1250], [1174, 1226, 1205, 1250], [232, 1272, 288, 1300], [303, 1272, 328, 1300], [343, 1276, 373, 1300], [388, 1272, 561, 1309], [575, 1272, 719, 1307], [733, 1272, 831, 1301], [846, 1272, 925, 1300], [939, 1272, 988, 1300], [1000, 1272, 1124, 1309], [1138, 1281, 1204, 1300], [232, 1326, 332, 1350], [345, 1322, 549, 1359], [561, 1326, 592, 1350], [604, 1322, 679, 1350], [689, 1322, 827, 1359], [838, 1322, 1043, 1359], [1056, 1322, 1092, 1350], [1101, 1331, 1204, 1350], [231, 1381, 328, 1400], [344, 1373, 377, 1400], [387, 1372, 471, 1400], [480, 1372, 588, 1406], [600, 1381, 647, 1401], [657, 1372, 775, 1400], [785, 1372, 859, 1400], [869, 1372, 952, 1401], [962, 1372, 1041, 1400], [1051, 1372, 1100, 1400], [1109, 1372, 1204, 1409], [232, 1421, 271, 1449], [283, 1425, 438, 1449], [450, 1421, 522, 1450], [534, 1430, 550, 1449], [560, 1421, 741, 1458], [752, 1421, 814, 1449], [824, 1421, 957, 1458], [969, 1430, 1009, 1449], [1020, 1421, 1056, 1449], [1067, 1421, 1205, 1458], [232, 1471, 395, 1508], [413, 1471, 449, 1499], [464, 1480, 653, 1499], [688, 1471, 758, 1499], [777, 1471, 898, 1508], [916, 1471, 1049, 1499], [1068, 1471, 1206, 1508], [232, 1521, 329, 1550], [349, 1521, 406, 1549], [423, 1521, 596, 1558], [613, 1521, 730, 1549], [749, 1521, 798, 1549], [814, 1521, 952, 1558], [968, 1521, 1157, 1549], [1174, 1525, 1205, 1549], [233, 1580, 249, 1599], [263, 1571, 397, 1599], [412, 1571, 610, 1599], [637, 1571, 708, 1599], [725, 1571, 793, 1599], [809, 1571, 833, 1599], [850, 1571, 966, 1608], [981, 1571, 1093, 1599], [1109, 1575, 1140, 1599], [1156, 1571, 1205, 1599], [232, 1621, 440, 1658], [452, 1621, 659, 1658], [671, 1621, 832, 1658], [844, 1621, 874, 1649], [886, 1621, 935, 1649], [946, 1621, 1107, 1650], [1119, 1621, 1204, 1649], [232, 1670, 285, 1704], [306, 1670, 449, 1707], [466, 1670, 489, 1698], [505, 1670, 529, 1698], [548, 1670, 710, 1699], [728, 1670, 775, 1698], [793, 1679, 809, 1698], [826, 1670, 967, 1698], [983, 1679, 1090, 1698], [1108, 1670, 1138, 1698], [1156, 1670, 1205, 1698], [232, 1720, 444, 1757], [456, 1720, 564, 1757], [575, 1724, 606, 1748], [616, 1720, 718, 1748], [730, 1729, 746, 1748], [756, 1720, 851, 1748], [862, 1720, 1101, 1757], [1112, 1720, 1148, 1748], [1156, 1720, 1205, 1748], [232, 1770, 334, 1807], [351, 1770, 615, 1807], [633, 1770, 771, 1798], [790, 1770, 870, 1798], [887, 1770, 936, 1798], [953, 1770, 1032, 1798], [1051, 1774, 1204, 1798], [232, 1820, 309, 1849], [321, 1829, 555, 1848], [567, 1820, 706, 1848], [721, 1820, 785, 1855], [797, 1820, 904, 1857], [917, 1820, 957, 1855], [232, 1896, 264, 1923], [273, 1895, 404, 1932], [414, 1904, 461, 1924], [471, 1895, 566, 1923], [576, 1895, 633, 1923], [643, 1895, 744, 1923], [754, 1899, 784, 1923], [794, 1895, 876, 1923], [886, 1895, 1097, 1932], [1107, 1904, 1204, 1923], [232, 1944, 345, 1981], [357, 1944, 555, 1981], [569, 1944, 616, 1972], [628, 1944, 677, 1972], [689, 1944, 827, 1981], [838, 1944, 946, 1973], [963, 1945, 1004, 1972], [1015, 1944, 1110, 1972], [1121, 1944, 1204, 1972], [232, 1998, 304, 2022], [314, 1994, 363, 2022], [373, 1994, 466, 2022], [476, 1994, 532, 2022], [543, 1994, 596, 2022], [608, 2003, 648, 2022], [658, 1994, 794, 2031], [807, 2003, 854, 2023], [858, 1994, 969, 2031], [979, 1994, 1145, 2023], [1156, 1994, 1205, 2022], [232, 2043, 336, 2081], [353, 2048, 433, 2072], [447, 2044, 584, 2081], [598, 2044, 696, 2073], [712, 2044, 742, 2072], [757, 2044, 882, 2081], [898, 2044, 955, 2072], [970, 2044, 1102, 2073], [1116, 2044, 1205, 2081], [232, 2094, 281, 2122], [297, 2094, 399, 2123], [416, 2094, 584, 2131], [613, 2094, 684, 2122], [702, 2094, 726, 2122], [744, 2094, 908, 2122], [925, 2094, 956, 2122], [972, 2094, 1079, 2131], [1095, 2094, 1123, 2122], [1151, 2095, 1205, 2122], [233, 2144, 316, 2173], [332, 2144, 363, 2172], [378, 2144, 430, 2172], [446, 2144, 495, 2172], [511, 2144, 709, 2181], [726, 2144, 839, 2172], [856, 2144, 982, 2173], [998, 2144, 1205, 2181], [233, 2193, 290, 2221], [302, 2193, 333, 2221], [344, 2193, 415, 2221], [428, 2193, 477, 2221], [489, 2193, 687, 2230], [701, 2193, 748, 2221], [760, 2193, 809, 2221], [823, 2202, 905, 2221], [918, 2193, 1016, 2222], [1030, 2193, 1143, 2221], [1155, 2202, 1204, 2221], [232, 2243, 283, 2280], [293, 2243, 417, 2280], [428, 2243, 644, 2280], [660, 2243, 703, 2271], [715, 2243, 765, 2271], [775, 2243, 985, 2272], [997, 2243, 1106, 2277], [1119, 2243, 1204, 2272], [232, 2297, 284, 2321], [301, 2293, 508, 2330], [525, 2293, 662, 2330], [678, 2293, 776, 2322], [795, 2302, 843, 2321], [860, 2293, 1130, 2330], [1148, 2293, 1205, 2321], [232, 2343, 341, 2371], [352, 2352, 422, 2371], [433, 2343, 482, 2371], [493, 2343, 599, 2380], [615, 2343, 686, 2371], [699, 2343, 792, 2371], [802, 2343, 827, 2371], [839, 2343, 952, 2380], [963, 2343, 1093, 2371], [1104, 2343, 1144, 2380], [1156, 2343, 1205, 2371], [231, 2393, 382, 2430], [395, 2393, 602, 2430], [615, 2393, 746, 2421], [232, 2506, 265, 2541], [281, 2506, 620, 2550], [634, 2506, 713, 2541], [728, 2506, 910, 2550], [924, 2506, 1068, 2541], [231, 2593, 284, 2620], [300, 2592, 515, 2629], [530, 2601, 585, 2620], [599, 2592, 701, 2620], [717, 2592, 747, 2620], [763, 2592, 788, 2621], [803, 2592, 844, 2629], [858, 2592, 995, 2629], [1011, 2601, 1050, 2620], [1066, 2592, 1115, 2620], [1129, 2601, 1204, 2629], [231, 2642, 295, 2670], [313, 2651, 514, 2679], [532, 2644, 728, 2671], [748, 2635, 880, 2670], [915, 2642, 979, 2670], [997, 2642, 1204, 2679], [232, 2692, 294, 2720], [307, 2692, 449, 2720], [465, 2701, 481, 2720], [493, 2692, 702, 2729], [715, 2692, 868, 2729], [880, 2692, 982, 2720], [996, 2701, 1027, 2720], [1042, 2701, 1058, 2720], [1072, 2696, 1205, 2729], [232, 2742, 333, 2770], [346, 2742, 394, 2770], [406, 2742, 480, 2770], [493, 2742, 649, 2779], [665, 2751, 695, 2770], [710, 2742, 779, 2771], [793, 2751, 823, 2770], [839, 2751, 855, 2770], [867, 2742, 1080, 2779], [1092, 2742, 1203, 2770], [232, 2792, 283, 2820], [296, 2792, 413, 2820], [428, 2801, 530, 2820], [545, 2792, 594, 2820], [608, 2792, 714, 2820], [727, 2792, 910, 2829], [922, 2796, 1102, 2829], [1118, 2801, 1204, 2829], [232, 2841, 420, 2878], [438, 2842, 494, 2869], [505, 2841, 633, 2878], [645, 2841, 695, 2869], [707, 2841, 818, 2875], [832, 2850, 879, 2870], [891, 2841, 979, 2869], [990, 2850, 1045, 2869], [1057, 2841, 1093, 2869], [1103, 2841, 1205, 2869], [284, 2916, 294, 2933], [300, 2924, 1078, 2956], [1281, 1021, 1378, 1055], [1389, 1022, 1413, 1047], [1426, 1022, 1451, 1047], [1464, 1021, 1535, 1055], [1550, 1022, 1642, 1048], [1659, 1021, 1848, 1048], [1865, 1021, 1897, 1047], [1910, 1021, 1955, 1047], [1971, 1030, 2045, 1047], [2063, 1021, 2097, 1048], [2115, 1025, 2186, 1047], [2203, 1021, 2254, 1047], [1282, 1070, 1363, 1100], [1376, 1066, 1489, 1100], [1503, 1066, 1555, 1092], [1569, 1067, 1688, 1093], [1702, 1066, 1790, 1093], [1804, 1066, 1907, 1092], [1921, 1066, 2032, 1093], [2047, 1066, 2112, 1099], [2128, 1066, 2188, 1099], [2203, 1066, 2255, 1092], [1282, 1112, 1344, 1139], [1355, 1112, 1467, 1146], [1480, 1112, 1666, 1146], [1679, 1112, 1761, 1145], [1774, 1112, 1864, 1146], [1878, 1112, 2038, 1146], [2049, 1112, 2094, 1138], [2106, 1112, 2189, 1138], [2199, 1112, 2255, 1138], [1282, 1167, 1376, 1184], [1389, 1158, 1502, 1185], [1513, 1158, 1625, 1192], [1638, 1158, 1831, 1192], [1846, 1167, 1874, 1184], [1887, 1158, 2010, 1192], [2022, 1158, 2110, 1185], [2123, 1167, 2168, 1184], [2180, 1167, 2254, 1185], [1281, 1203, 1447, 1237], [1457, 1203, 1573, 1230], [1584, 1203, 1629, 1229], [1640, 1203, 1735, 1237], [1283, 1329, 1507, 1366], [1525, 1329, 1685, 1357], [1702, 1329, 1837, 1366], [1852, 1329, 1976, 1357], [1991, 1329, 2138, 1364], [2155, 1329, 2255, 1358], [1283, 1383, 1311, 1407], [1322, 1379, 1394, 1407], [1407, 1383, 1471, 1416], [1483, 1381, 1505, 1413], [1518, 1383, 1684, 1416], [1696, 1378, 1713, 1407], [1726, 1379, 1751, 1407], [1763, 1379, 1894, 1416], [1907, 1388, 1938, 1407], [1592, 1473, 1646, 1513], [1665, 1484, 1726, 1513], [1730, 1473, 1805, 1502], [1822, 1502, 1848, 1503], [1862, 1495, 1882, 1522], [1890, 1454, 1939, 1485], [1894, 1511, 1935, 1542], [2209, 1485, 2254, 1520], [1281, 1581, 1345, 1610], [1359, 1581, 1455, 1609], [1470, 1581, 1728, 1618], [1744, 1581, 1963, 1618], [1977, 1581, 2102, 1618], [2117, 1581, 2255, 1610], [1281, 1631, 1408, 1665], [1426, 1631, 1478, 1659], [1493, 1640, 1540, 1660], [1555, 1631, 1651, 1659], [1666, 1631, 1728, 1659], [1744, 1631, 1854, 1668], [1870, 1631, 2004, 1668], [2020, 1631, 2186, 1660], [2200, 1640, 2254, 1668], [1281, 1681, 1364, 1709], [1375, 1685, 1405, 1709], [1419, 1678, 1477, 1719], [1483, 1681, 1519, 1717], [1532, 1678, 1590, 1719], [1602, 1690, 1655, 1718], [1664, 1681, 1766, 1709], [1776, 1690, 1837, 1710], [1849, 1681, 2001, 1709], [2010, 1685, 2040, 1709], [2050, 1690, 2157, 1709], [2167, 1681, 2254, 1709], [1281, 1730, 1333, 1767], [1345, 1730, 1476, 1767], [1488, 1730, 1545, 1758], [1556, 1730, 1766, 1767], [1777, 1730, 1933, 1767], [1944, 1730, 2071, 1767], [2083, 1730, 2184, 1767], [2199, 1731, 2256, 1758], [1281, 1780, 1490, 1817], [1501, 1780, 1629, 1817], [1640, 1780, 1717, 1814], [1730, 1789, 1777, 1809], [1787, 1789, 1842, 1808], [1854, 1780, 1903, 1808], [1914, 1780, 2010, 1817], [2022, 1780, 2176, 1814], [2189, 1789, 2254, 1817], [1281, 1830, 1441, 1858], [1455, 1830, 1626, 1867], [1640, 1830, 1768, 1858], [1786, 1830, 1945, 1865], [1964, 1834, 1993, 1858], [2008, 1830, 2054, 1864], [2071, 1830, 2175, 1865], [2199, 1831, 2256, 1858], [1281, 1880, 1494, 1917], [1508, 1880, 1635, 1917], [1649, 1889, 1696, 1909], [1709, 1889, 1764, 1908], [1778, 1880, 1827, 1908], [1840, 1880, 2098, 1917], [2111, 1880, 2255, 1917], [1281, 1931, 1320, 1959], [1339, 1939, 1447, 1967], [1467, 1930, 1596, 1965], [1616, 1929, 1720, 1965], [1754, 1930, 1865, 1959], [1883, 1930, 1932, 1958], [1951, 1930, 2100, 1967], [2118, 1930, 2154, 1958], [2170, 1930, 2254, 1965], [1281, 1980, 1412, 2009], [1427, 1984, 1456, 2008], [1471, 1980, 1517, 2014], [1533, 1980, 1627, 2015], [1642, 1980, 1788, 2014], [1805, 1989, 1852, 2009], [1866, 1980, 1906, 2008], [1921, 1984, 1973, 2008], [1987, 1980, 2063, 2008], [2078, 1984, 2108, 2008], [2122, 1980, 2255, 2017], [1282, 2038, 1298, 2057], [1316, 2029, 1581, 2066], [1599, 2033, 1663, 2066], [1681, 2029, 1753, 2057], [1788, 2029, 1906, 2057], [1924, 2038, 1979, 2057], [1996, 2029, 2255, 2066], [1281, 2079, 1371, 2107], [1391, 2079, 1516, 2116], [1536, 2088, 1575, 2107], [1595, 2079, 1644, 2107], [1662, 2088, 1723, 2108], [1741, 2079, 1865, 2116], [1884, 2083, 1945, 2107], [1963, 2079, 2029, 2107], [2050, 2079, 2191, 2107], [2211, 2079, 2254, 2107], [1281, 2133, 1324, 2157], [1341, 2129, 1484, 2166], [1500, 2129, 1549, 2157], [1567, 2129, 1705, 2157], [1720, 2129, 1950, 2166], [1967, 2129, 2072, 2166], [2090, 2129, 2151, 2157], [2167, 2138, 2255, 2157], [1281, 2179, 1354, 2208], [1374, 2179, 1423, 2207], [1443, 2179, 1510, 2207], [1530, 2183, 1560, 2207], [1581, 2179, 1728, 2213], [1750, 2188, 1854, 2207], [1874, 2179, 1931, 2207], [1950, 2188, 2073, 2208], [2094, 2179, 2133, 2207], [2153, 2183, 2255, 2216], [1282, 2229, 1526, 2266], [1565, 2229, 1754, 2266], [1774, 2229, 1911, 2257], [1933, 2238, 2012, 2258], [2031, 2229, 2195, 2257], [2214, 2229, 2255, 2266], [1281, 2278, 1415, 2315], [1432, 2278, 1512, 2306], [1529, 2287, 1545, 2306], [1562, 2287, 1632, 2306], [1649, 2287, 1746, 2312], [1765, 2278, 1982, 2307], [1999, 2278, 2140, 2315], [2157, 2278, 2254, 2306], [1280, 2328, 1394, 2356], [1411, 2328, 1474, 2356], [1487, 2328, 1639, 2365], [1651, 2328, 1788, 2365], [1801, 2328, 1950, 2365], [1963, 2328, 2126, 2365], [2141, 2328, 2171, 2363], [2184, 2328, 2254, 2356], [1280, 2378, 1386, 2415], [1402, 2378, 1481, 2406], [1496, 2378, 1532, 2406], [1545, 2378, 1825, 2407], [1841, 2378, 2025, 2413], [2041, 2378, 2158, 2415], [2172, 2387, 2207, 2406], [2224, 2382, 2255, 2406], [1282, 2428, 1398, 2465], [1414, 2427, 1433, 2456], [1451, 2428, 1537, 2456], [1553, 2428, 1651, 2457], [1667, 2437, 1720, 2465], [1736, 2428, 1863, 2465], [1878, 2428, 1943, 2465], [1958, 2428, 2037, 2456], [2053, 2428, 2102, 2456], [2117, 2428, 2255, 2465], [1282, 2478, 1311, 2506], [1317, 2475, 1372, 2516], [1387, 2488, 1425, 2506], [1438, 2478, 1495, 2506], [1500, 2478, 1535, 2515], [1546, 2478, 1760, 2512], [1775, 2478, 1832, 2506], [1844, 2487, 1891, 2507], [1904, 2482, 1948, 2506], [1960, 2477, 1979, 2506], [1995, 2491, 2023, 2500], [2041, 2478, 2076, 2507], [2089, 2478, 2189, 2507], [2200, 2478, 2253, 2506], [1280, 2528, 1358, 2556], [1371, 2528, 1476, 2557], [1488, 2532, 1519, 2556], [1531, 2528, 1599, 2565], [1611, 2528, 1692, 2565], [1703, 2528, 1820, 2556], [1281, 2602, 1384, 2639], [1420, 2602, 1494, 2630], [1530, 2602, 1658, 2639], [1693, 2602, 1803, 2639], [1839, 2602, 1988, 2630], [2024, 2611, 2129, 2630], [2168, 2611, 2254, 2639], [1281, 2652, 1464, 2689], [1481, 2661, 1581, 2680], [1598, 2652, 1647, 2680], [1663, 2652, 1790, 2680], [1818, 2652, 2031, 2689], [2046, 2652, 2163, 2680], [2180, 2652, 2255, 2680], [1282, 2702, 1375, 2730], [1393, 2711, 1409, 2730], [1427, 2706, 1656, 2739], [1673, 2701, 1760, 2737], [1765, 2702, 1856, 2739], [1873, 2702, 1921, 2730], [1938, 2702, 2012, 2730], [2030, 2702, 2179, 2739], [2198, 2702, 2255, 2730], [1282, 2752, 1398, 2789], [1410, 2751, 1429, 2780], [1441, 2752, 1527, 2780], [1538, 2752, 1636, 2781], [1650, 2752, 1811, 2789], [1822, 2756, 1852, 2780], [1864, 2752, 1939, 2780], [1948, 2752, 2086, 2789], [2097, 2752, 2183, 2780], [2194, 2752, 2254, 2780], [1281, 2801, 1447, 2829], [1465, 2801, 1528, 2829], [1540, 2801, 1753, 2838], [1766, 2801, 1867, 2829], [1881, 2801, 2011, 2838], [2026, 2810, 2042, 2829], [2053, 2801, 2180, 2829], [2191, 2801, 2256, 2838], [1281, 2851, 1317, 2879], [1329, 2851, 1453, 2888], [1469, 2855, 1624, 2879], [1641, 2851, 1720, 2879], [1735, 2851, 1785, 2879], [1799, 2851, 1923, 2888], [1938, 2851, 2014, 2879], [2041, 2851, 2162, 2888], [2180, 2851, 2255, 2879], [1281, 2901, 1383, 2929], [1399, 2901, 1502, 2929], [1520, 2910, 1557, 2929], [1572, 2901, 1682, 2938], [1697, 2905, 1728, 2929], [1745, 2901, 1784, 2929], [1799, 2905, 1979, 2938], [1997, 2901, 2255, 2938], [1282, 2951, 1443, 2988], [1461, 2955, 1492, 2979], [1510, 2951, 1651, 2988], [1670, 2951, 1696, 2985], [1717, 2951, 1765, 2979], [1782, 2951, 1881, 2980], [1899, 2951, 2048, 2988], [2069, 2960, 2117, 2979], [2134, 2960, 2206, 2988], [2224, 2955, 2255, 2979], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 296, 373, 329], [388, 292, 446, 320], [461, 296, 492, 320], [507, 292, 556, 320], [572, 292, 755, 329], [771, 292, 807, 320], [819, 292, 869, 320], [884, 292, 1130, 321], [1148, 292, 1205, 320], [232, 342, 281, 370], [293, 342, 453, 379], [465, 346, 567, 370], [579, 342, 615, 370], [625, 342, 674, 370], [687, 342, 839, 379], [851, 342, 978, 370], [995, 342, 1058, 370], [1070, 342, 1205, 379], [231, 396, 292, 420], [304, 401, 365, 421], [380, 396, 424, 420], [435, 396, 466, 420], [478, 392, 537, 426], [550, 392, 622, 421], [635, 392, 728, 420], [740, 392, 841, 429], [232, 505, 265, 540], [281, 505, 550, 549], [232, 593, 264, 620], [279, 592, 336, 620], [353, 592, 468, 620], [483, 601, 530, 621], [543, 596, 663, 629], [677, 592, 876, 629], [892, 592, 992, 621], [1007, 592, 1141, 621], [1156, 592, 1205, 620], [231, 642, 329, 679], [342, 642, 377, 670], [387, 642, 437, 670], [449, 642, 579, 670], [590, 642, 850, 679], [867, 643, 921, 670], [933, 642, 1068, 671], [1080, 642, 1130, 670], [1142, 651, 1204, 670], [231, 691, 378, 728], [400, 691, 431, 719], [452, 700, 468, 719], [488, 691, 701, 728], [722, 691, 885, 719], [904, 691, 1119, 719], [1140, 691, 1206, 719], [232, 741, 331, 770], [350, 745, 421, 769], [441, 742, 588, 770], [607, 741, 737, 778], [756, 741, 791, 769], [807, 741, 1002, 769], [1022, 750, 1121, 769], [1142, 741, 1204, 769], [232, 800, 354, 828], [369, 800, 399, 819], [413, 791, 483, 820], [496, 800, 526, 819], [541, 800, 557, 819], [569, 791, 745, 820], [757, 791, 931, 819], [943, 791, 1009, 819], [1021, 791, 1120, 820], [1133, 795, 1203, 819], [232, 841, 430, 878], [443, 841, 552, 869], [564, 841, 701, 878], [231, 945, 291, 975], [305, 945, 539, 983], [551, 946, 733, 975], [745, 945, 979, 975], [230, 1024, 284, 1051], [297, 1032, 352, 1051], [366, 1032, 402, 1051], [416, 1028, 502, 1051], [516, 1023, 694, 1060], [707, 1023, 743, 1051], [754, 1023, 803, 1051], [816, 1023, 1029, 1060], [1043, 1023, 1206, 1051], [231, 1073, 447, 1101], [463, 1072, 605, 1108], [622, 1077, 707, 1110], [723, 1073, 899, 1101], [913, 1073, 954, 1110], [970, 1073, 1161, 1102], [1177, 1077, 1206, 1101], [232, 1123, 268, 1151], [284, 1123, 488, 1158], [501, 1127, 531, 1151], [544, 1123, 590, 1157], [605, 1123, 699, 1158], [713, 1127, 744, 1151], [757, 1123, 892, 1152], [905, 1123, 980, 1151], [992, 1123, 1205, 1160], [231, 1173, 439, 1210], [456, 1173, 519, 1201], [531, 1173, 639, 1202], [652, 1173, 719, 1201], [731, 1177, 816, 1210], [828, 1173, 853, 1201], [867, 1182, 898, 1201], [912, 1173, 1042, 1202], [1060, 1173, 1123, 1201], [1135, 1173, 1205, 1210], [231, 1223, 256, 1251], [270, 1227, 300, 1251], [313, 1223, 438, 1260], [450, 1223, 627, 1251], [641, 1223, 671, 1251], [685, 1232, 701, 1251], [713, 1227, 806, 1260], [817, 1223, 966, 1260], [977, 1223, 1066, 1260], [1078, 1223, 1150, 1260], [1163, 1223, 1204, 1251], [230, 1272, 331, 1300], [348, 1272, 525, 1300], [544, 1272, 574, 1300], [593, 1281, 609, 1300], [626, 1281, 732, 1300], [749, 1272, 906, 1309], [939, 1272, 1138, 1309], [1158, 1281, 1205, 1301], [231, 1322, 306, 1350], [318, 1331, 354, 1350], [366, 1322, 512, 1359], [521, 1326, 698, 1359], [709, 1322, 856, 1350], [866, 1331, 905, 1350], [916, 1322, 966, 1350], [976, 1322, 1106, 1350], [1117, 1322, 1204, 1350], [231, 1372, 283, 1409], [298, 1372, 365, 1400], [380, 1372, 410, 1400], [425, 1372, 475, 1400], [490, 1381, 596, 1400], [611, 1372, 759, 1409], [775, 1372, 832, 1400], [847, 1372, 916, 1400], [932, 1376, 1055, 1409], [1069, 1376, 1099, 1400], [1115, 1372, 1205, 1409], [231, 1422, 281, 1450], [291, 1422, 438, 1450], [448, 1422, 520, 1450], [532, 1426, 562, 1450], [573, 1422, 622, 1450], [632, 1426, 726, 1459], [735, 1422, 803, 1450], [814, 1422, 937, 1457], [948, 1431, 979, 1450], [991, 1422, 1103, 1450], [1112, 1426, 1204, 1450], [231, 1472, 317, 1507], [353, 1473, 539, 1500], [560, 1481, 609, 1500], [626, 1472, 817, 1509], [837, 1481, 867, 1500], [887, 1472, 937, 1500], [955, 1472, 1042, 1500], [1042, 1472, 1205, 1509], [232, 1530, 299, 1549], [313, 1521, 349, 1549], [360, 1521, 410, 1549], [424, 1521, 606, 1558], [621, 1525, 737, 1550], [752, 1521, 788, 1549], [799, 1521, 849, 1549], [863, 1521, 961, 1550], [976, 1521, 1038, 1549], [1052, 1530, 1161, 1558], [1174, 1521, 1205, 1549], [231, 1571, 281, 1599], [293, 1571, 479, 1599], [232, 1646, 353, 1675], [374, 1650, 404, 1674], [426, 1646, 623, 1680], [649, 1655, 696, 1675], [717, 1646, 826, 1674], [848, 1646, 1061, 1683], [1082, 1646, 1204, 1674], [231, 1696, 318, 1733], [330, 1696, 377, 1724], [387, 1696, 436, 1724], [446, 1696, 718, 1733], [729, 1696, 877, 1733], [886, 1696, 957, 1733], [970, 1696, 1027, 1724], [1036, 1705, 1091, 1724], [1101, 1696, 1151, 1724], [1160, 1696, 1204, 1724], [231, 1746, 329, 1774], [338, 1746, 587, 1783], [598, 1750, 628, 1774], [638, 1746, 763, 1783], [774, 1755, 790, 1774], [800, 1746, 902, 1774], [911, 1746, 946, 1774], [953, 1746, 1002, 1774], [1012, 1746, 1137, 1783], [1148, 1746, 1205, 1774], [231, 1795, 363, 1824], [378, 1795, 507, 1823], [522, 1795, 558, 1823], [568, 1795, 617, 1823], [630, 1796, 754, 1823], [768, 1795, 990, 1824], [1004, 1795, 1205, 1832], [231, 1854, 357, 1882], [368, 1845, 478, 1880], [490, 1849, 519, 1873], [529, 1845, 576, 1879], [588, 1845, 682, 1880], [694, 1854, 725, 1873], [736, 1845, 903, 1882], [914, 1849, 944, 1873], [955, 1854, 1013, 1873], [1023, 1845, 1059, 1873], [1066, 1845, 1135, 1873], [1144, 1849, 1204, 1873], [231, 1895, 358, 1932], [379, 1899, 472, 1924], [488, 1895, 859, 1932], [874, 1899, 969, 1924], [985, 1895, 1203, 1930], [233, 1949, 327, 1974], [343, 1945, 698, 1980], [712, 1945, 770, 1973], [781, 1949, 878, 1974], [893, 1945, 1062, 1980], [231, 2021, 288, 2048], [302, 2020, 351, 2048], [366, 2020, 581, 2048], [596, 2020, 806, 2057], [827, 2019, 936, 2054], [951, 2020, 1128, 2048], [1145, 2020, 1206, 2055], [231, 2069, 306, 2097], [321, 2069, 482, 2106], [498, 2078, 577, 2098], [590, 2069, 749, 2106], [765, 2069, 895, 2097], [910, 2069, 990, 2097], [1004, 2069, 1054, 2097], [1068, 2069, 1205, 2098], [231, 2128, 349, 2156], [366, 2119, 438, 2148], [453, 2128, 512, 2147], [526, 2119, 603, 2147], [619, 2118, 736, 2154], [751, 2119, 826, 2147], [842, 2128, 873, 2147], [889, 2119, 938, 2147], [953, 2123, 1010, 2147], [1024, 2123, 1069, 2147], [1084, 2119, 1141, 2147], [1156, 2119, 1205, 2147], [230, 2169, 399, 2197], [414, 2169, 535, 2198], [551, 2169, 614, 2197], [630, 2169, 757, 2206], [774, 2173, 832, 2197], [849, 2169, 885, 2197], [898, 2169, 975, 2197], [991, 2169, 1129, 2198], [1148, 2169, 1205, 2198], [232, 2219, 290, 2247], [305, 2219, 422, 2253], [437, 2219, 494, 2247], [506, 2228, 522, 2247], [535, 2223, 677, 2256], [689, 2219, 828, 2247], [838, 2219, 1001, 2248], [1014, 2223, 1058, 2247], [1069, 2219, 1104, 2247], [1117, 2219, 1205, 2253], [231, 2269, 408, 2297], [429, 2269, 504, 2297], [524, 2269, 630, 2306], [650, 2269, 700, 2297], [719, 2269, 931, 2306], [950, 2269, 986, 2297], [1003, 2278, 1057, 2297], [1076, 2269, 1203, 2297], [232, 2318, 322, 2347], [338, 2327, 393, 2346], [409, 2322, 494, 2355], [510, 2318, 628, 2355], [644, 2318, 763, 2346], [781, 2318, 972, 2347], [988, 2322, 1017, 2346], [1033, 2318, 1069, 2352], [1088, 2327, 1135, 2347], [1150, 2327, 1205, 2346], [231, 2368, 281, 2396], [300, 2377, 382, 2396], [399, 2368, 559, 2402], [581, 2368, 710, 2405], [739, 2368, 788, 2396], [806, 2369, 945, 2405], [963, 2368, 1041, 2396], [1059, 2368, 1203, 2402], [230, 2418, 356, 2455], [373, 2418, 539, 2455], [556, 2418, 654, 2447], [672, 2418, 703, 2446], [720, 2418, 769, 2446], [786, 2422, 879, 2455], [895, 2418, 1058, 2446], [1073, 2418, 1113, 2455], [1130, 2418, 1206, 2446], [231, 2472, 312, 2496], [322, 2468, 490, 2505], [503, 2468, 622, 2505], [633, 2468, 731, 2497], [743, 2468, 774, 2496], [785, 2468, 834, 2496], [846, 2477, 952, 2496], [963, 2468, 1134, 2505], [1148, 2468, 1205, 2496], [232, 2527, 248, 2546], [265, 2522, 399, 2555], [411, 2519, 473, 2546], [487, 2518, 623, 2546], [639, 2518, 825, 2555], [841, 2522, 934, 2555], [948, 2518, 1125, 2546], [1142, 2518, 1205, 2546], [231, 2568, 281, 2596], [294, 2577, 400, 2596], [411, 2568, 560, 2605], [571, 2568, 660, 2605], [673, 2577, 709, 2596], [722, 2568, 805, 2597], [818, 2568, 953, 2605], [231, 2642, 351, 2670], [370, 2651, 418, 2670], [435, 2642, 635, 2670], [652, 2642, 682, 2670], [699, 2642, 789, 2670], [809, 2642, 832, 2670], [862, 2643, 895, 2670], [911, 2642, 998, 2670], [1014, 2646, 1044, 2670], [1061, 2642, 1149, 2670], [1166, 2642, 1205, 2670], [230, 2692, 337, 2720], [356, 2692, 557, 2729], [576, 2692, 683, 2720], [702, 2692, 749, 2720], [767, 2692, 806, 2720], [824, 2692, 961, 2720], [980, 2692, 1117, 2729], [1134, 2692, 1205, 2720], [231, 2751, 311, 2771], [328, 2742, 469, 2770], [486, 2742, 575, 2779], [592, 2742, 641, 2770], [660, 2751, 742, 2770], [760, 2742, 942, 2779], [960, 2742, 1205, 2779], [231, 2792, 267, 2820], [281, 2792, 320, 2821], [339, 2792, 396, 2820], [413, 2792, 462, 2820], [479, 2801, 562, 2820], [579, 2792, 706, 2829], [723, 2792, 799, 2820], [828, 2793, 882, 2820], [898, 2801, 952, 2820], [969, 2792, 1018, 2820], [1035, 2792, 1099, 2820], [1114, 2791, 1206, 2821], [231, 2841, 307, 2869], [323, 2841, 359, 2869], [371, 2841, 420, 2869], [435, 2841, 707, 2878], [722, 2841, 866, 2878], [881, 2841, 949, 2869], [963, 2841, 1035, 2869], [1051, 2850, 1082, 2869], [1098, 2850, 1204, 2869], [231, 2891, 345, 2928], [358, 2891, 415, 2919], [425, 2891, 549, 2928], [561, 2891, 688, 2928], [700, 2891, 776, 2919], [791, 2892, 845, 2919], [855, 2900, 910, 2919], [922, 2900, 938, 2919], [949, 2891, 1130, 2928], [1143, 2891, 1205, 2919], [231, 2941, 267, 2969], [279, 2941, 327, 2977], [340, 2941, 398, 2970], [414, 2941, 461, 2969], [475, 2941, 600, 2978], [615, 2941, 672, 2969], [687, 2941, 735, 2977], [748, 2941, 806, 2970], [822, 2941, 869, 2969], [883, 2941, 1023, 2970], [1047, 2941, 1137, 2970], [1151, 2950, 1206, 2969], [1282, 292, 1404, 320], [1419, 292, 1444, 320], [1461, 292, 1623, 321], [1639, 301, 1669, 320], [1687, 301, 1703, 320], [1718, 292, 1809, 320], [1823, 292, 1943, 321], [1958, 292, 1994, 320], [2006, 292, 2055, 320], [2070, 292, 2172, 320], [2186, 301, 2254, 329], [1281, 342, 1377, 379], [1391, 342, 1432, 379], [1447, 342, 1638, 371], [1654, 347, 1683, 370], [1698, 342, 1747, 376], [1765, 351, 1812, 371], [1828, 346, 1898, 370], [1913, 342, 1975, 370], [1989, 351, 2036, 371], [2052, 342, 2255, 379], [1282, 392, 1417, 429], [1427, 401, 1510, 429], [1521, 392, 1597, 420], [1606, 392, 1723, 426], [1736, 392, 1827, 421], [1838, 392, 1965, 429], [1977, 392, 2008, 420], [2020, 392, 2037, 421], [2050, 392, 2178, 420], [2191, 401, 2254, 421], [1283, 451, 1331, 470], [1350, 442, 1399, 470], [1416, 442, 1543, 479], [1564, 442, 1600, 471], [1617, 442, 1690, 479], [1709, 442, 1834, 477], [1851, 442, 2004, 477], [2035, 442, 2105, 470], [2124, 442, 2220, 479], [2239, 451, 2255, 470], [1282, 492, 1354, 520], [1366, 492, 1461, 520], [1474, 492, 1500, 528], [1512, 492, 1571, 521], [1586, 492, 1728, 529], [1744, 492, 1815, 520], [1828, 492, 2044, 520], [2058, 492, 2120, 520], [2131, 492, 2180, 520], [2192, 492, 2254, 520], [1282, 541, 1400, 570], [1410, 541, 1472, 569], [1485, 541, 1639, 578], [1649, 541, 1681, 576], [1692, 541, 1717, 569], [1727, 541, 1800, 569], [1812, 550, 1828, 569], [1838, 541, 2256, 578], [1283, 591, 1340, 619], [1353, 600, 1389, 619], [1402, 595, 1538, 619], [1551, 591, 1790, 628], [1802, 591, 1838, 619], [1847, 591, 1897, 619], [1908, 591, 1965, 619], [1976, 591, 2189, 628], [2201, 591, 2254, 619], [1278, 641, 1389, 678], [1401, 641, 1616, 678], [1627, 641, 1668, 678], [1680, 641, 1871, 670], [1884, 641, 2038, 678], [2051, 641, 2092, 676], [1282, 717, 1369, 750], [1381, 725, 1428, 745], [1437, 725, 1579, 753], [1588, 725, 1643, 744], [1652, 716, 1775, 744], [1785, 720, 1815, 744], [1825, 716, 1874, 744], [1884, 720, 2001, 744], [2011, 716, 2256, 744], [1281, 766, 1428, 803], [1441, 766, 1623, 803], [1637, 766, 1785, 794], [1804, 766, 1868, 794], [1881, 770, 1998, 794], [2011, 766, 2256, 794], [1282, 824, 1321, 843], [1336, 815, 1393, 843], [1409, 815, 1475, 843], [1489, 815, 1513, 843], [1530, 815, 1600, 844], [1617, 815, 1740, 850], [1756, 815, 1814, 843], [1829, 815, 1899, 844], [1916, 815, 2039, 850], [2054, 815, 2191, 852], [2205, 824, 2254, 843], [1282, 865, 1333, 902], [1346, 865, 1395, 893], [1408, 865, 1561, 902], [1574, 865, 1801, 893], [1814, 865, 1920, 900], [1934, 865, 2036, 893], [2048, 865, 2089, 902], [2103, 865, 2256, 900], [1282, 919, 1311, 943], [1324, 915, 1370, 949], [1385, 915, 1488, 950], [1507, 916, 1660, 943], [1673, 919, 1702, 943], [1715, 915, 1751, 943], [1766, 915, 1932, 950], [1946, 915, 1975, 944], [1988, 915, 2145, 949], [2160, 915, 2254, 950], [1281, 969, 1380, 1002], [1395, 965, 1466, 994], [1483, 965, 1540, 993], [1556, 965, 1627, 994], [1643, 965, 1715, 994], [1730, 965, 1780, 993], [1795, 965, 1927, 994], [1942, 965, 2053, 993], [2079, 965, 2122, 993], [2140, 965, 2253, 999], [1282, 1024, 1336, 1043], [1347, 1015, 1449, 1043], [1461, 1015, 1661, 1052], [1674, 1015, 1724, 1043], [1736, 1015, 1867, 1044], [1880, 1024, 1919, 1043], [1930, 1015, 2004, 1043], [2016, 1015, 2106, 1049], [2120, 1015, 2178, 1043], [2190, 1019, 2254, 1043], [1281, 1065, 1428, 1102], [1447, 1065, 1542, 1093], [1561, 1074, 1600, 1093], [1618, 1065, 1750, 1094], [1767, 1069, 1798, 1093], [1815, 1065, 1940, 1102], [1958, 1069, 1989, 1093], [2006, 1065, 2087, 1102], [2106, 1074, 2122, 1093], [2139, 1069, 2256, 1093], [1283, 1114, 1528, 1142], [1539, 1114, 1632, 1142], [1645, 1123, 1685, 1142], [1699, 1114, 1760, 1142], [1773, 1114, 1839, 1142], [1852, 1114, 1888, 1142], [1900, 1114, 1982, 1143], [2004, 1114, 2067, 1142], [2080, 1114, 2208, 1142], [2222, 1114, 2258, 1142], [1282, 1173, 1336, 1192], [1352, 1164, 1475, 1192], [1493, 1164, 1558, 1192], [1575, 1173, 1731, 1201], [1750, 1173, 1821, 1201], [1838, 1164, 1994, 1201], [2011, 1168, 2041, 1192], [2059, 1164, 2143, 1192], [2160, 1164, 2254, 1192], [1282, 1214, 1346, 1242], [1369, 1215, 1448, 1242], [1462, 1214, 1524, 1242], [1537, 1223, 1612, 1243], [1626, 1214, 1740, 1251], [1754, 1214, 1803, 1242], [1817, 1214, 1949, 1243], [1964, 1214, 2087, 1242], [2102, 1214, 2210, 1242], [2224, 1214, 2255, 1242], [1281, 1264, 1428, 1301], [1441, 1264, 1480, 1292], [1495, 1273, 1525, 1292], [1541, 1264, 1600, 1292], [1614, 1273, 1647, 1292], [1661, 1264, 1752, 1292], [1765, 1264, 1835, 1292], [1850, 1273, 1904, 1292], [1918, 1264, 2049, 1298], [2066, 1264, 2102, 1292], [2117, 1264, 2255, 1301], [1282, 1314, 1409, 1351], [1421, 1314, 1494, 1342], [1505, 1314, 1576, 1342], [1588, 1314, 1612, 1342], [1627, 1314, 1749, 1351], [1760, 1314, 1866, 1351], [1879, 1314, 1962, 1342], [1974, 1314, 1996, 1342], [2007, 1323, 2068, 1343], [2082, 1314, 2196, 1342], [2208, 1314, 2256, 1342], [1282, 1372, 1365, 1391], [1377, 1363, 1529, 1391], [1542, 1372, 1614, 1392], [1625, 1363, 1674, 1391], [1686, 1363, 1762, 1391], [1282, 1467, 1341, 1497], [1354, 1467, 1500, 1497], [1514, 1468, 1613, 1497], [1625, 1467, 1828, 1497], [1281, 1547, 1334, 1574], [1345, 1546, 1409, 1574], [1419, 1546, 1575, 1575], [1585, 1546, 1634, 1574], [1644, 1546, 1773, 1574], [1783, 1546, 1996, 1583], [2006, 1546, 2204, 1583], [2215, 1555, 2255, 1574], [1282, 1596, 1331, 1624], [1345, 1596, 1428, 1625], [1442, 1596, 1615, 1624], [1630, 1596, 1696, 1624], [1708, 1596, 1783, 1624], [1796, 1596, 1837, 1633], [1851, 1596, 1991, 1625], [2006, 1600, 2035, 1624], [2049, 1596, 2085, 1624], [2102, 1596, 2255, 1631], [1282, 1649, 1311, 1673], [1327, 1645, 1373, 1679], [1391, 1645, 1504, 1680], [1520, 1645, 1609, 1682], [1625, 1645, 1675, 1673], [1690, 1645, 1987, 1682], [2002, 1645, 2140, 1673], [2160, 1638, 2253, 1673], [1282, 1696, 1314, 1723], [1333, 1695, 1389, 1723], [1409, 1695, 1483, 1729], [1504, 1695, 1554, 1723], [1573, 1695, 1691, 1723], [1710, 1695, 1860, 1723], [1878, 1695, 1928, 1723], [1946, 1695, 2002, 1724], [2021, 1699, 2101, 1723], [2118, 1695, 2256, 1732], [1282, 1745, 1379, 1774], [1399, 1745, 1478, 1773], [1496, 1745, 1545, 1773], [1562, 1745, 1700, 1773], [1723, 1745, 1993, 1782], [2011, 1745, 2087, 1779], [2110, 1745, 2167, 1773], [2185, 1745, 2255, 1773], [1281, 1795, 1356, 1823], [1371, 1795, 1421, 1823], [1436, 1795, 1538, 1823], [1553, 1795, 1674, 1832], [1689, 1795, 1840, 1823], [1856, 1795, 1971, 1824], [1987, 1799, 2017, 1823], [2032, 1795, 2133, 1824], [2148, 1795, 2254, 1823], [1282, 1845, 1377, 1873], [1390, 1845, 1430, 1882], [1442, 1845, 1616, 1882], [1628, 1845, 1712, 1873], [1724, 1854, 1830, 1873], [1841, 1845, 1939, 1874], [1953, 1845, 2015, 1873], [2027, 1845, 2077, 1873], [2088, 1849, 2181, 1882], [2192, 1845, 2254, 1873], [1282, 1904, 1379, 1932], [1395, 1895, 1606, 1932], [1621, 1895, 1669, 1923], [1683, 1895, 1808, 1932], [1824, 1895, 1882, 1923], [1898, 1895, 2049, 1932], [2076, 1895, 2165, 1924], [2180, 1895, 2256, 1923], [1282, 1944, 1404, 1972], [1414, 1944, 1545, 1981], [1557, 1944, 1824, 1981], [1836, 1944, 1883, 1972], [1893, 1944, 2029, 1981], [2041, 1944, 2111, 1981], [2120, 1944, 2195, 1972], [2206, 1944, 2255, 1972], [1282, 1994, 1346, 2022], [1359, 1994, 1415, 2023], [1429, 1998, 1509, 2022], [1522, 1994, 1659, 2031], [1672, 1994, 1770, 2023], [1785, 1998, 1815, 2022], [1829, 1994, 1910, 2022], [1924, 1994, 1973, 2022], [1987, 1994, 2178, 2022], [2192, 2003, 2254, 2022], [1282, 2044, 1365, 2078], [1378, 2044, 1435, 2072], [1446, 2044, 1516, 2072], [1526, 2044, 1681, 2073], [1692, 2044, 1767, 2072], [1777, 2044, 1900, 2072], [1910, 2053, 1950, 2072], [1961, 2044, 2010, 2072], [2019, 2044, 2187, 2081], [2201, 2044, 2254, 2072], [1282, 2094, 1379, 2123], [1396, 2094, 1471, 2122], [1488, 2103, 1518, 2122], [1536, 2103, 1552, 2122], [1568, 2098, 1625, 2122], [1641, 2098, 1693, 2122], [1720, 2095, 1761, 2122], [1777, 2094, 1916, 2122], [1932, 2103, 1948, 2122], [1965, 2103, 2071, 2122], [2086, 2094, 2178, 2128], [2197, 2103, 2255, 2122], [1282, 2144, 1359, 2172], [1378, 2144, 1414, 2172], [1433, 2143, 1452, 2172], [1471, 2148, 1588, 2172], [1604, 2144, 1785, 2181], [1804, 2144, 1834, 2172], [1851, 2144, 1901, 2172], [1917, 2148, 2011, 2181], [2027, 2144, 2175, 2181], [2192, 2153, 2254, 2172], [1281, 2193, 1413, 2230], [1429, 2202, 1528, 2230], [1546, 2193, 1603, 2221], [1618, 2193, 1688, 2221], [1703, 2193, 1837, 2222], [1852, 2193, 1901, 2221], [1916, 2193, 2089, 2221], [2103, 2193, 2255, 2230], [1283, 2243, 1312, 2271], [1315, 2242, 1366, 2271], [1385, 2252, 1415, 2271], [1434, 2243, 1483, 2271], [1499, 2243, 1626, 2271], [1643, 2243, 1679, 2271], [1693, 2247, 1786, 2280], [1801, 2243, 1990, 2271], [2008, 2243, 2069, 2271], [2086, 2252, 2134, 2271], [2150, 2243, 2255, 2272], [1282, 2293, 1331, 2321], [1347, 2292, 1434, 2330], [1451, 2293, 1549, 2322], [1566, 2293, 1704, 2321], [1719, 2293, 1808, 2330], [1825, 2293, 1874, 2321], [1891, 2293, 2014, 2330], [2031, 2293, 2163, 2321], [2192, 2293, 2256, 2322], [1281, 2343, 1404, 2371], [1421, 2343, 1494, 2371], [1513, 2347, 1565, 2371], [1580, 2343, 1698, 2380], [1714, 2343, 1981, 2380], [2000, 2343, 2047, 2371], [2063, 2343, 2200, 2380], [2221, 2352, 2255, 2371], [1281, 2402, 1328, 2422], [1341, 2393, 1452, 2430], [1464, 2397, 1521, 2421], [1532, 2402, 1571, 2421], [1584, 2393, 1633, 2421], [1646, 2402, 1729, 2421], [1743, 2393, 1797, 2421], [1810, 2393, 1969, 2430], [1280, 2468, 1334, 2495], [1351, 2476, 1406, 2495], [1425, 2476, 1456, 2495], [1474, 2467, 1624, 2495], [1644, 2467, 1693, 2495], [1712, 2476, 1795, 2495], [1813, 2471, 1873, 2496], [1891, 2467, 2029, 2495], [2049, 2467, 2206, 2495], [2224, 2467, 2255, 2495], [1282, 2517, 1436, 2552], [1450, 2521, 1480, 2545], [1494, 2517, 1540, 2551], [1557, 2517, 1679, 2552], [1702, 2517, 1771, 2546], [1784, 2518, 1930, 2546], [1944, 2517, 2032, 2545], [2048, 2517, 2146, 2546], [2161, 2517, 2255, 2545], [1281, 2576, 1321, 2595], [1332, 2567, 1407, 2595], [1417, 2567, 1636, 2595], [1654, 2567, 1739, 2596], [1750, 2567, 1993, 2596], [2004, 2567, 2028, 2595], [2039, 2567, 2133, 2595], [2144, 2576, 2184, 2595], [2194, 2567, 2254, 2595], [1281, 2617, 1452, 2645], [1464, 2617, 1629, 2654], [1646, 2618, 1703, 2645], [1713, 2617, 1787, 2645], [1799, 2617, 1882, 2646], [1893, 2627, 1931, 2651], [1944, 2626, 2003, 2645], [2014, 2617, 2078, 2645], [2088, 2621, 2253, 2645], [1282, 2676, 1298, 2695], [1312, 2667, 1395, 2696], [1409, 2676, 1643, 2695], [1657, 2671, 1759, 2696], [1772, 2667, 1872, 2696], [1886, 2671, 1991, 2695], [2006, 2667, 2056, 2695], [2069, 2667, 2167, 2696], [2183, 2667, 2255, 2696], [1281, 2716, 1381, 2745], [1392, 2726, 1420, 2744], [1432, 2725, 1590, 2744], [1602, 2716, 1706, 2745], [1718, 2725, 1734, 2744], [1748, 2716, 1882, 2745], [1893, 2716, 2024, 2745], [2035, 2716, 2065, 2744], [2076, 2716, 2125, 2744], [2135, 2725, 2253, 2753], [1281, 2766, 1345, 2794], [1359, 2766, 1550, 2795], [1564, 2770, 1680, 2795], [1697, 2775, 1746, 2794], [1760, 2766, 1830, 2794], [1845, 2766, 1975, 2803], [1990, 2766, 2069, 2794], [2084, 2766, 2133, 2794], [2149, 2775, 2255, 2794], [1281, 2820, 1312, 2844], [1322, 2816, 1372, 2844], [1382, 2820, 1475, 2853], [1484, 2816, 1633, 2853], [1642, 2816, 1731, 2853], [1741, 2816, 1791, 2844], [1801, 2816, 1973, 2853], [1989, 2816, 2111, 2853], [2123, 2816, 2171, 2844], [2180, 2816, 2255, 2844], [1281, 2870, 1339, 2894], [1350, 2866, 1442, 2900], [1457, 2866, 1506, 2894], [1519, 2866, 1602, 2895], [1615, 2866, 1687, 2895], [1700, 2866, 1749, 2894], [1762, 2870, 1842, 2894], [1855, 2866, 1968, 2894], [1980, 2870, 2082, 2895], [2094, 2866, 2125, 2894], [2138, 2866, 2187, 2894], [2200, 2870, 2254, 2894], [1333, 2937, 1345, 2954], [1350, 2945, 1971, 2977], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [633, 285, 756, 311], [1173, 294, 1207, 310], [1219, 291, 1253, 310], [1266, 284, 1298, 310], [1351, 284, 1384, 310], [1396, 291, 1430, 310], [1443, 294, 1477, 310], [1528, 284, 1665, 318], [1676, 284, 1757, 311], [1769, 284, 1852, 316], [631, 329, 762, 361], [772, 327, 899, 353], [1204, 327, 1267, 354], [1381, 327, 1445, 354], [1842, 343, 1852, 346], [634, 368, 754, 395], [762, 368, 889, 394], [1205, 368, 1265, 395], [1382, 368, 1445, 395], [1842, 384, 1852, 387], [631, 412, 687, 436], [693, 410, 820, 436], [1205, 410, 1265, 437], [1382, 410, 1446, 437], [1842, 426, 1852, 429], [633, 453, 805, 480], [816, 457, 841, 479], [852, 453, 885, 479], [1205, 453, 1267, 480], [1382, 454, 1443, 479], [1755, 454, 1853, 484], [633, 495, 771, 529], [782, 495, 999, 521], [1012, 496, 1121, 528], [1205, 495, 1268, 521], [1382, 496, 1445, 522], [1770, 496, 1853, 526], [633, 536, 751, 563], [1206, 537, 1267, 563], [1382, 537, 1446, 562], [1821, 536, 1851, 563], [633, 578, 789, 605], [801, 578, 868, 610], [880, 578, 973, 610], [1206, 578, 1266, 605], [1396, 579, 1432, 604], [1836, 578, 1853, 604], [235, 663, 313, 689], [326, 664, 348, 689], [360, 663, 562, 690], [572, 672, 703, 697], [713, 663, 765, 689], [775, 663, 890, 697], [899, 663, 979, 689], [990, 663, 1033, 689], [1041, 663, 1086, 689], [1095, 663, 1232, 697], [1242, 663, 1394, 690], [1404, 663, 1515, 689], [1525, 663, 1671, 697], [1680, 667, 1708, 689], [1719, 663, 1890, 690], [1900, 667, 1926, 689], [1936, 663, 1969, 689], [1982, 663, 2165, 696], [2175, 667, 2201, 689], [2211, 663, 2253, 694], [232, 709, 325, 741], [338, 708, 476, 742], [487, 708, 704, 734], [718, 708, 855, 741], [866, 712, 891, 734], [902, 708, 945, 739], [958, 709, 1051, 741], [1064, 708, 1117, 734], [1127, 708, 1172, 734], [1184, 708, 1302, 735], [1314, 708, 1406, 734], [1418, 709, 1567, 741], [1579, 709, 1605, 734], [1617, 708, 1758, 739], [1771, 709, 1865, 741], [1878, 717, 1914, 734], [1925, 717, 1959, 734], [1970, 712, 2047, 734], [2057, 708, 2159, 742], [2170, 708, 2202, 734], [2210, 708, 2255, 734], [232, 755, 343, 780], [356, 754, 547, 788], [559, 754, 705, 780], [716, 754, 910, 780], [921, 754, 988, 780], [1005, 754, 1093, 780], [1105, 754, 1229, 780], [1241, 763, 1312, 781], [1324, 754, 1360, 780], [1371, 754, 1439, 780], [1449, 758, 1478, 780], [1490, 754, 1588, 780], [1598, 754, 1831, 781], [1842, 754, 2020, 788], [2032, 754, 2112, 788], [2123, 754, 2168, 780], [2181, 763, 2255, 780], [231, 800, 346, 834], [357, 800, 425, 826], [440, 800, 567, 826], [577, 800, 673, 826], [685, 809, 729, 826], [740, 800, 812, 826], [822, 800, 999, 827], [547, 889, 670, 915], [939, 888, 1062, 922], [1074, 888, 1147, 915], [1200, 888, 1323, 922], [1335, 888, 1408, 915], [1469, 888, 1593, 922], [1604, 888, 1679, 915], [1730, 888, 1854, 922], [1865, 888, 1940, 915], [546, 932, 608, 958], [618, 932, 748, 958], [1029, 933, 1059, 959], [1290, 933, 1321, 959], [1556, 933, 1592, 958], [1817, 933, 1852, 958], [546, 973, 627, 999], [638, 974, 857, 1000], [1027, 974, 1061, 1000], [1290, 974, 1321, 1000], [1556, 974, 1592, 1000], [1818, 974, 1853, 1000], [545, 1015, 667, 1042], [678, 1021, 704, 1041], [714, 1015, 759, 1046], [771, 1016, 842, 1042], [1027, 1016, 1059, 1042], [1288, 1015, 1320, 1042], [1556, 1015, 1591, 1041], [1817, 1015, 1853, 1042], [547, 1056, 702, 1083], [715, 1056, 782, 1088], [794, 1056, 886, 1088], [989, 1056, 1024, 1083], [1036, 1056, 1097, 1089], [1250, 1056, 1285, 1082], [1297, 1057, 1358, 1089], [1556, 1056, 1591, 1082], [1780, 1057, 1816, 1082], [1828, 1057, 1889, 1089], [235, 1141, 313, 1167], [323, 1142, 348, 1167], [360, 1141, 468, 1167], [481, 1141, 524, 1167], [534, 1141, 579, 1167], [589, 1141, 747, 1167], [758, 1141, 818, 1167], [829, 1141, 971, 1167], [983, 1150, 1011, 1167], [1024, 1141, 1099, 1168], [1110, 1141, 1267, 1167], [1279, 1150, 1409, 1175], [1422, 1142, 1480, 1174], [1492, 1141, 1523, 1167], [1536, 1142, 1595, 1172], [1608, 1141, 1704, 1175], [1715, 1141, 1737, 1167], [1749, 1141, 1845, 1174], [1858, 1141, 1998, 1168], [2010, 1150, 2045, 1167], [2056, 1141, 2101, 1167], [2112, 1142, 2188, 1175], [2203, 1141, 2255, 1167], [231, 1187, 307, 1221], [319, 1187, 407, 1214], [418, 1196, 447, 1213], [457, 1187, 557, 1213], [567, 1187, 603, 1221], [612, 1187, 657, 1213], [667, 1187, 785, 1213], [800, 1187, 1000, 1221], [1010, 1187, 1188, 1221], [1199, 1196, 1243, 1213], [1253, 1187, 1370, 1213], [1380, 1187, 1432, 1213], [1442, 1187, 1563, 1213], [1573, 1187, 1600, 1213], [1610, 1187, 1655, 1213], [1665, 1187, 1816, 1213], [1828, 1196, 1908, 1221], [1918, 1196, 1962, 1213], [1971, 1187, 2039, 1213], [2048, 1191, 2076, 1213], [2088, 1187, 2170, 1213], [2180, 1187, 2255, 1214], [231, 1233, 388, 1259], [397, 1233, 477, 1267], [493, 1237, 540, 1262], [552, 1233, 682, 1259], [694, 1233, 890, 1267], [901, 1233, 928, 1259], [939, 1233, 1062, 1259], [1071, 1233, 1207, 1267], [1218, 1242, 1283, 1260], [1291, 1233, 1336, 1259], [1346, 1233, 1472, 1267], [1484, 1233, 1704, 1259], [1714, 1242, 1750, 1259], [1760, 1233, 1812, 1259], [1822, 1233, 1883, 1259], [1893, 1233, 2031, 1266], [2042, 1237, 2067, 1259], [2077, 1233, 2120, 1264], [2132, 1234, 2242, 1266], [231, 1367, 282, 1400], [293, 1363, 441, 1400], [453, 1363, 477, 1391], [492, 1363, 623, 1391], [636, 1372, 666, 1391], [680, 1363, 716, 1391], [730, 1363, 912, 1391], [231, 1438, 295, 1466], [313, 1438, 420, 1466], [441, 1447, 481, 1466], [501, 1438, 550, 1466], [570, 1438, 841, 1475], [861, 1438, 1034, 1466], [1054, 1438, 1134, 1466], [1157, 1447, 1205, 1466], [232, 1488, 433, 1516], [449, 1488, 479, 1516], [495, 1488, 585, 1516], [600, 1488, 628, 1516], [655, 1489, 708, 1516], [724, 1488, 854, 1516], [870, 1488, 1126, 1517], [1142, 1497, 1204, 1516], [230, 1538, 378, 1575], [397, 1538, 487, 1575], [505, 1538, 555, 1566], [573, 1538, 698, 1575], [718, 1538, 775, 1566], [795, 1538, 923, 1575], [941, 1538, 1126, 1575], [1148, 1538, 1205, 1566], [231, 1587, 375, 1624], [395, 1596, 425, 1615], [445, 1587, 569, 1624], [588, 1587, 664, 1615], [701, 1587, 764, 1616], [782, 1587, 885, 1615], [903, 1587, 1054, 1624], [1074, 1596, 1114, 1615], [1132, 1587, 1205, 1615], [231, 1637, 281, 1665], [292, 1637, 442, 1665], [458, 1637, 515, 1665], [528, 1646, 568, 1665], [579, 1637, 715, 1666], [727, 1642, 757, 1665], [768, 1637, 836, 1665], [850, 1637, 973, 1665], [986, 1646, 1025, 1665], [1037, 1637, 1110, 1665], [1123, 1637, 1203, 1665], [232, 1687, 290, 1715], [309, 1687, 392, 1724], [414, 1696, 430, 1715], [449, 1687, 618, 1715], [637, 1687, 857, 1724], [875, 1687, 906, 1715], [926, 1696, 1070, 1724], [1090, 1687, 1137, 1715], [1156, 1687, 1205, 1715], [232, 1737, 261, 1765], [265, 1736, 312, 1765], [332, 1737, 508, 1774], [542, 1738, 598, 1765], [615, 1737, 664, 1765], [682, 1737, 807, 1774], [825, 1741, 855, 1765], [874, 1737, 1003, 1774], [1021, 1737, 1203, 1771], [231, 1796, 278, 1816], [293, 1787, 429, 1824], [443, 1787, 581, 1816], [597, 1787, 681, 1816], [694, 1787, 873, 1816], [888, 1797, 1038, 1824], [1051, 1787, 1092, 1824], [1107, 1787, 1125, 1816], [1139, 1796, 1204, 1824], [231, 1841, 308, 1865], [337, 1838, 393, 1865], [409, 1837, 458, 1865], [475, 1837, 604, 1874], [620, 1841, 651, 1865], [667, 1837, 792, 1874], [809, 1837, 883, 1871], [902, 1846, 949, 1866], [965, 1837, 1100, 1874], [1118, 1837, 1204, 1865], [231, 1886, 292, 1914], [311, 1886, 395, 1915], [414, 1886, 588, 1914], [608, 1895, 752, 1923], [771, 1886, 811, 1923], [831, 1886, 849, 1915], [868, 1890, 998, 1923], [1037, 1886, 1107, 1914], [1128, 1886, 1204, 1914], [231, 1940, 311, 1964], [324, 1936, 385, 1964], [395, 1945, 450, 1964], [460, 1936, 562, 1964], [573, 1936, 597, 1964], [610, 1936, 677, 1964], [688, 1940, 718, 1964], [729, 1936, 811, 1964], [821, 1936, 1020, 1973], [1031, 1936, 1205, 1964], [231, 1986, 441, 2023], [456, 1986, 535, 2014], [549, 1986, 598, 2014], [611, 1986, 820, 2023], [833, 1986, 901, 2014], [913, 1986, 954, 2023], [967, 1986, 1056, 2023], [1070, 1986, 1142, 2023], [1156, 1986, 1205, 2014], [230, 2040, 376, 2070], [390, 2036, 667, 2073], [678, 2036, 802, 2073], [813, 2036, 890, 2070], [903, 2036, 1020, 2073], [1031, 2036, 1081, 2064], [1092, 2036, 1161, 2064], [1172, 2036, 1208, 2064], [231, 2086, 408, 2115], [421, 2086, 599, 2123], [612, 2095, 646, 2114], [657, 2086, 785, 2123], [797, 2086, 997, 2114], [231, 2199, 265, 2234], [281, 2199, 504, 2234], [231, 2285, 295, 2313], [311, 2285, 480, 2314], [497, 2285, 599, 2313], [617, 2294, 647, 2313], [665, 2285, 841, 2313], [857, 2285, 888, 2313], [905, 2285, 961, 2313], [979, 2294, 1071, 2322], [1086, 2285, 1203, 2313], [232, 2344, 248, 2363], [263, 2335, 399, 2372], [414, 2335, 455, 2369], [472, 2335, 693, 2372], [708, 2335, 921, 2372], [935, 2335, 1007, 2363], [1029, 2335, 1100, 2363], [1116, 2335, 1140, 2363], [1156, 2335, 1205, 2363], [231, 2385, 313, 2413], [325, 2394, 431, 2413], [441, 2385, 477, 2413], [485, 2385, 534, 2413], [546, 2385, 717, 2422], [728, 2385, 861, 2422], [872, 2394, 944, 2414], [954, 2385, 1003, 2413], [1014, 2385, 1205, 2414], [231, 2435, 342, 2469], [361, 2435, 503, 2472], [518, 2435, 645, 2472], [661, 2439, 691, 2463], [708, 2435, 788, 2463], [803, 2439, 834, 2463], [849, 2435, 940, 2463], [955, 2435, 1050, 2472], [1065, 2435, 1203, 2469], [231, 2485, 331, 2514], [351, 2485, 381, 2513], [401, 2489, 466, 2513], [485, 2485, 581, 2522], [602, 2494, 686, 2513], [706, 2489, 842, 2513], [861, 2485, 999, 2513], [1037, 2486, 1091, 2513], [1110, 2485, 1205, 2513], [231, 2534, 293, 2562], [305, 2534, 355, 2562], [368, 2534, 592, 2571], [607, 2534, 866, 2571], [880, 2534, 1083, 2571], [1097, 2534, 1203, 2571], [230, 2593, 271, 2621], [291, 2584, 419, 2621], [438, 2584, 510, 2613], [530, 2593, 570, 2612], [590, 2584, 759, 2612], [779, 2584, 891, 2621], [910, 2593, 950, 2612], [970, 2584, 1019, 2612], [1038, 2584, 1152, 2621], [1172, 2584, 1208, 2612], [231, 2634, 281, 2662], [295, 2634, 415, 2662], [430, 2634, 637, 2671], [655, 2634, 712, 2662], [726, 2634, 775, 2662], [788, 2634, 912, 2671], [927, 2634, 1135, 2671], [1149, 2634, 1204, 2662], [230, 2693, 338, 2721], [353, 2684, 402, 2712], [417, 2693, 561, 2721], [575, 2684, 611, 2712], [622, 2684, 671, 2712], [685, 2684, 805, 2712], [820, 2684, 958, 2712], [980, 2684, 1103, 2721], [1118, 2693, 1204, 2721], [231, 2734, 381, 2762], [400, 2734, 527, 2771], [545, 2738, 576, 2762], [594, 2734, 678, 2763], [694, 2734, 832, 2771], [850, 2734, 984, 2771], [1002, 2734, 1052, 2762], [1068, 2734, 1203, 2771], [231, 2783, 396, 2820], [416, 2792, 447, 2811], [468, 2783, 517, 2811], [536, 2783, 781, 2820], [800, 2783, 836, 2811], [853, 2783, 902, 2811], [921, 2783, 1119, 2820], [1140, 2787, 1203, 2820], [231, 2833, 332, 2870], [349, 2833, 474, 2861], [487, 2833, 694, 2870], [706, 2833, 809, 2861], [822, 2833, 950, 2870], [962, 2842, 1046, 2861], [1059, 2837, 1203, 2867], [231, 2883, 396, 2920], [412, 2883, 459, 2911], [474, 2883, 524, 2911], [539, 2883, 677, 2920], [692, 2883, 800, 2917], [819, 2883, 876, 2911], [892, 2883, 1041, 2911], [1056, 2887, 1136, 2911], [1153, 2887, 1206, 2911], [231, 2937, 262, 2961], [277, 2933, 316, 2961], [332, 2933, 493, 2970], [506, 2933, 580, 2961], [596, 2933, 626, 2961], [642, 2933, 692, 2961], [707, 2933, 916, 2970], [933, 2933, 990, 2961], [1006, 2933, 1205, 2970], [1282, 1363, 1399, 1400], [1436, 1364, 1490, 1391], [1508, 1363, 1584, 1392], [1603, 1363, 1766, 1392], [1785, 1363, 1834, 1391], [1852, 1372, 1960, 1391], [1979, 1363, 2027, 1391], [2045, 1363, 2095, 1391], [2114, 1363, 2254, 1391], [1281, 1413, 1351, 1450], [1368, 1413, 1476, 1450], [1493, 1422, 1524, 1441], [1540, 1413, 1664, 1450], [1680, 1417, 1710, 1441], [1725, 1422, 1858, 1442], [1874, 1422, 1890, 1441], [1905, 1413, 1999, 1441], [2015, 1413, 2255, 1450], [1281, 1463, 1317, 1491], [1329, 1463, 1379, 1491], [1393, 1463, 1495, 1500], [1511, 1463, 1676, 1500], [1690, 1463, 1829, 1491], [1845, 1463, 1925, 1491], [1939, 1463, 1988, 1491], [2003, 1463, 2151, 1492], [2165, 1463, 2253, 1497], [1282, 1513, 1516, 1542], [1528, 1522, 1786, 1541], [1281, 1587, 1407, 1624], [1420, 1587, 1469, 1615], [1483, 1587, 1625, 1624], [1641, 1587, 1690, 1615], [1703, 1587, 1805, 1615], [1819, 1587, 1843, 1615], [1859, 1587, 1919, 1615], [1932, 1587, 2022, 1615], [2037, 1587, 2145, 1616], [2157, 1591, 2188, 1615], [2200, 1596, 2255, 1615], [1281, 1637, 1351, 1665], [1362, 1637, 1468, 1665], [1479, 1637, 1616, 1665], [1629, 1637, 1689, 1665], [1700, 1637, 1873, 1665], [1884, 1637, 1991, 1665], [2003, 1637, 2156, 1672], [2167, 1641, 2196, 1665], [2207, 1637, 2253, 1671], [1281, 1687, 1394, 1722], [1405, 1696, 1439, 1715], [1447, 1687, 1649, 1724], [1658, 1687, 1742, 1716], [1753, 1687, 1892, 1724], [1903, 1687, 1932, 1716], [1942, 1688, 2032, 1724], [2044, 1687, 2148, 1722], [2163, 1688, 2254, 1716], [1281, 1746, 1357, 1771], [1372, 1737, 1478, 1765], [1494, 1746, 1534, 1765], [1548, 1737, 1597, 1765], [1611, 1737, 1785, 1765], [1799, 1737, 1865, 1765], [1879, 1741, 2002, 1774], [2015, 1737, 2184, 1766], [2199, 1746, 2255, 1765], [1281, 1787, 1363, 1815], [1383, 1787, 1595, 1824], [1616, 1787, 1829, 1824], [1849, 1787, 2059, 1824], [2081, 1787, 2150, 1815], [2171, 1787, 2255, 1815], [1281, 1837, 1429, 1871], [1459, 1837, 1516, 1865], [1540, 1846, 1596, 1865], [1620, 1837, 1695, 1865], [1719, 1846, 1790, 1866], [1814, 1837, 1904, 1865], [1928, 1837, 2023, 1874], [2047, 1837, 2255, 1874], [1281, 1886, 1410, 1914], [1425, 1886, 1495, 1914], [1508, 1886, 1719, 1923], [1733, 1886, 1881, 1914], [1903, 1886, 1931, 1914], [1942, 1886, 1992, 1914], [2005, 1886, 2075, 1923], [2089, 1886, 2114, 1914], [2129, 1890, 2160, 1914], [2174, 1886, 2255, 1914], [1280, 1936, 1483, 1973], [1494, 1936, 1614, 1973], [1624, 1945, 1755, 1973], [1765, 1936, 1912, 1973], [1923, 1936, 2130, 1973], [2143, 1936, 2166, 1964], [2176, 1936, 2200, 1964], [2214, 1936, 2254, 1964], [1281, 1995, 1363, 2023], [1375, 1986, 1536, 2014], [1547, 1990, 1578, 2014], [1589, 1986, 1727, 2023], [1738, 1995, 1822, 2014], [1833, 1986, 1961, 2023], [1972, 1986, 2048, 2020], [2063, 1986, 2120, 2014], [2130, 1986, 2227, 2014], [2239, 1995, 2255, 2014], [1280, 2036, 1388, 2073], [1401, 2036, 1503, 2064], [1516, 2036, 1576, 2064], [1589, 2036, 1758, 2065], [1771, 2036, 1868, 2073], [1879, 2036, 1917, 2064], [1931, 2045, 1947, 2064], [1959, 2036, 2053, 2064], [2065, 2036, 2172, 2064], [2185, 2036, 2255, 2064], [1282, 2095, 1298, 2114], [1309, 2086, 1521, 2123], [1533, 2086, 1693, 2123], [1705, 2086, 1765, 2114], [1777, 2086, 1909, 2115], [1921, 2095, 1955, 2114], [1966, 2086, 2071, 2114], [1281, 2199, 1315, 2234], [1332, 2199, 1568, 2234], [1280, 2286, 1334, 2313], [1344, 2285, 1499, 2313], [1509, 2285, 1687, 2319], [1700, 2294, 1716, 2313], [1726, 2285, 2144, 2322], [2153, 2285, 2255, 2313], [1281, 2335, 1329, 2363], [1342, 2335, 1486, 2372], [1499, 2335, 1646, 2372], [1660, 2335, 1835, 2363], [1849, 2335, 1932, 2364], [1946, 2335, 2195, 2372], [2210, 2335, 2254, 2363], [1280, 2385, 1374, 2422], [1388, 2385, 1468, 2413], [1481, 2385, 1690, 2422], [1703, 2394, 1763, 2414], [1778, 2389, 1839, 2413], [1853, 2385, 1910, 2413], [1925, 2394, 1941, 2413], [1955, 2385, 2071, 2413], [2086, 2389, 2209, 2413], [2222, 2385, 2258, 2413], [1280, 2435, 1404, 2472], [1417, 2435, 1493, 2469], [1508, 2435, 1635, 2464], [1646, 2435, 1797, 2472], [1810, 2435, 2088, 2472], [2102, 2444, 2136, 2463], [2148, 2435, 2254, 2463], [1281, 2485, 1388, 2513], [1406, 2485, 1575, 2514], [1588, 2485, 1744, 2513], [1759, 2485, 1906, 2514], [1921, 2485, 1951, 2513], [1964, 2485, 2091, 2522], [2104, 2485, 2254, 2513], [1281, 2534, 1351, 2571], [1368, 2534, 1452, 2563], [1469, 2534, 1666, 2571], [1685, 2534, 1757, 2563], [1775, 2543, 1791, 2562], [1807, 2534, 1998, 2571], [2015, 2534, 2149, 2562], [2166, 2534, 2255, 2563], [1282, 2584, 1418, 2621], [1433, 2584, 1646, 2621], [1661, 2584, 1819, 2621], [1845, 2584, 1908, 2612], [1922, 2584, 2015, 2612], [2029, 2584, 2053, 2612], [2070, 2584, 2132, 2612], [2146, 2584, 2195, 2612], [2209, 2593, 2254, 2612], [1281, 2634, 1386, 2671], [1400, 2634, 1620, 2671], [1635, 2643, 1688, 2671], [1701, 2634, 1829, 2671], [1844, 2638, 1908, 2671], [1923, 2634, 2018, 2662], [2033, 2634, 2106, 2671], [2120, 2634, 2192, 2663], [2206, 2634, 2255, 2662], [1281, 2684, 1407, 2712], [1424, 2684, 1459, 2712], [1474, 2684, 1572, 2713], [1590, 2684, 1621, 2712], [1638, 2684, 1687, 2712], [1705, 2688, 1870, 2718], [1890, 2684, 2013, 2721], [2030, 2684, 2171, 2721], [2188, 2684, 2254, 2712], [1281, 2734, 1362, 2762], [1376, 2734, 1554, 2771], [1569, 2734, 1782, 2771], [1797, 2734, 1933, 2771], [1959, 2735, 2012, 2762], [2029, 2734, 2151, 2763], [2168, 2738, 2254, 2762], [1281, 2783, 1438, 2811], [1453, 2783, 1559, 2811], [1578, 2783, 1625, 2811], [1642, 2783, 1915, 2820], [1932, 2783, 2145, 2820], [2162, 2783, 2254, 2811], [1281, 2837, 1364, 2861], [1380, 2833, 1595, 2861], [1612, 2833, 1713, 2862], [1728, 2833, 1884, 2870], [1900, 2842, 1940, 2870], [1957, 2837, 1988, 2861], [2005, 2833, 2086, 2861], [2103, 2833, 2204, 2861], [2222, 2833, 2258, 2861], [1281, 2883, 1455, 2920], [1473, 2883, 1615, 2920], [1635, 2883, 1692, 2911], [1709, 2883, 1844, 2920], [1859, 2892, 1942, 2920], [1958, 2883, 2008, 2911], [2023, 2883, 2162, 2920], [2181, 2887, 2255, 2911], [1281, 2933, 1317, 2961], [1326, 2933, 1376, 2961], [1389, 2937, 1431, 2961], [1442, 2933, 1472, 2961], [1485, 2942, 1522, 2961], [1534, 2933, 1804, 2970], [1816, 2933, 2089, 2962], [2101, 2933, 2175, 2961], [603, 199, 768, 226], [782, 200, 848, 226], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 286, 461, 321], [232, 361, 374, 392], [391, 361, 478, 392], [495, 361, 613, 392], [630, 362, 727, 395], [744, 361, 797, 387], [812, 361, 919, 392], [937, 362, 1042, 388], [1069, 361, 1202, 395], [273, 402, 439, 428], [451, 402, 526, 429], [537, 402, 762, 436], [775, 402, 818, 428], [829, 402, 1011, 436], [1023, 402, 1077, 436], [1098, 403, 1127, 428], [1139, 404, 1204, 428], [273, 444, 402, 478], [411, 445, 445, 478], [447, 444, 491, 470], [500, 444, 677, 471], [687, 445, 854, 478], [864, 454, 900, 470], [910, 444, 1131, 478], [1138, 446, 1204, 471], [274, 485, 333, 511], [348, 487, 495, 519], [512, 487, 656, 519], [674, 494, 718, 519], [739, 486, 873, 516], [893, 485, 975, 516], [995, 485, 1129, 519], [1148, 486, 1204, 511], [273, 531, 334, 561], [349, 528, 430, 554], [447, 527, 621, 553], [637, 527, 680, 553], [694, 527, 914, 561], [928, 527, 1101, 561], [1132, 528, 1205, 554], [274, 569, 1178, 601], [232, 653, 345, 687], [363, 654, 392, 684], [409, 653, 570, 684], [588, 654, 619, 684], [636, 653, 688, 679], [704, 653, 826, 684], [844, 654, 866, 679], [897, 654, 922, 679], [938, 653, 1030, 679], [1044, 653, 1204, 687], [272, 694, 308, 720], [323, 694, 456, 728], [471, 694, 570, 720], [597, 694, 712, 721], [726, 695, 759, 728], [765, 694, 895, 720], [909, 696, 1046, 728], [1059, 694, 1203, 725], [273, 737, 354, 763], [397, 737, 470, 763], [490, 737, 1201, 769], [276, 780, 414, 804], [231, 862, 345, 896], [358, 862, 468, 888], [478, 862, 530, 888], [542, 862, 663, 893], [675, 863, 720, 889], [726, 884, 730, 888], [747, 862, 881, 896], [892, 862, 1058, 896], [1071, 862, 1205, 896], [272, 907, 300, 929], [311, 903, 459, 929], [469, 903, 584, 937], [595, 903, 627, 929], [635, 912, 651, 929], [661, 903, 753, 929], [763, 903, 948, 937], [960, 903, 1093, 937], [1104, 903, 1203, 929], [271, 945, 375, 972], [381, 945, 529, 976], [540, 947, 623, 971], [631, 947, 820, 971], [829, 955, 873, 976], [886, 946, 1112, 978], [1122, 946, 1203, 972], [231, 1029, 338, 1060], [349, 1030, 380, 1060], [391, 1029, 557, 1060], [569, 1030, 610, 1060], [622, 1029, 674, 1055], [684, 1029, 796, 1060], [807, 1030, 832, 1055], [847, 1029, 966, 1055], [976, 1029, 1130, 1063], [1140, 1029, 1205, 1056], [274, 1071, 413, 1097], [426, 1071, 659, 1105], [673, 1071, 801, 1105], [826, 1072, 856, 1097], [870, 1072, 1038, 1105], [1052, 1081, 1088, 1097], [1100, 1073, 1204, 1105], [274, 1112, 328, 1138], [340, 1112, 469, 1138], [484, 1114, 511, 1138], [523, 1112, 639, 1139], [652, 1114, 799, 1146], [814, 1114, 985, 1146], [1003, 1112, 1117, 1146], [1134, 1113, 1204, 1138], [272, 1154, 356, 1185], [368, 1154, 449, 1181], [231, 1238, 363, 1269], [387, 1238, 487, 1269], [509, 1238, 601, 1272], [625, 1238, 763, 1269], [785, 1238, 952, 1269], [975, 1239, 1064, 1272], [1087, 1238, 1203, 1272], [272, 1280, 375, 1306], [391, 1281, 441, 1311], [461, 1280, 603, 1311], [623, 1280, 791, 1311], [811, 1280, 924, 1314], [944, 1280, 1035, 1311], [1055, 1280, 1107, 1306], [1126, 1280, 1203, 1311], [273, 1321, 385, 1347], [410, 1322, 454, 1347], [467, 1321, 649, 1347], [662, 1321, 797, 1355], [809, 1325, 838, 1347], [851, 1321, 972, 1355], [984, 1321, 1117, 1355], [1130, 1321, 1205, 1348], [272, 1363, 505, 1397], [521, 1363, 706, 1397], [716, 1364, 750, 1397], [753, 1364, 833, 1390], [842, 1364, 924, 1394], [936, 1364, 1017, 1390], [231, 1447, 379, 1478], [395, 1448, 435, 1478], [450, 1448, 568, 1478], [583, 1448, 614, 1478], [630, 1448, 738, 1478], [753, 1448, 792, 1478], [808, 1447, 916, 1478], [931, 1448, 981, 1478], [997, 1447, 1203, 1481], [273, 1490, 315, 1520], [330, 1489, 383, 1515], [396, 1489, 497, 1520], [512, 1490, 534, 1515], [556, 1489, 668, 1515], [681, 1489, 814, 1523], [826, 1489, 985, 1523], [999, 1489, 1120, 1522], [1134, 1489, 1205, 1515], [274, 1530, 385, 1556], [423, 1530, 538, 1557], [556, 1531, 589, 1564], [599, 1530, 729, 1556], [747, 1532, 883, 1564], [900, 1530, 1044, 1561], [1068, 1531, 1206, 1557], [273, 1572, 354, 1603], [366, 1573, 447, 1599], [231, 1657, 322, 1682], [323, 1657, 338, 1682], [359, 1657, 402, 1687], [425, 1656, 485, 1682], [533, 1656, 726, 1690], [747, 1665, 812, 1690], [833, 1656, 943, 1682], [964, 1656, 1126, 1690], [1175, 1657, 1205, 1682], [272, 1698, 457, 1732], [474, 1699, 508, 1732], [519, 1698, 562, 1724], [580, 1698, 645, 1724], [660, 1698, 770, 1724], [785, 1700, 908, 1732], [925, 1699, 959, 1732], [971, 1698, 1014, 1724], [1029, 1699, 1205, 1724], [267, 1740, 316, 1773], [328, 1739, 549, 1773], [560, 1741, 731, 1773], [744, 1739, 919, 1765], [931, 1739, 974, 1765], [984, 1739, 1205, 1773], [272, 1781, 445, 1815], [458, 1782, 538, 1808], [231, 1866, 311, 1899], [326, 1865, 413, 1896], [429, 1865, 603, 1896], [619, 1865, 716, 1896], [732, 1865, 784, 1891], [799, 1865, 893, 1896], [908, 1865, 988, 1891], [1001, 1866, 1034, 1891], [1059, 1866, 1084, 1891], [1099, 1865, 1203, 1899], [273, 1907, 333, 1938], [350, 1907, 402, 1933], [416, 1907, 543, 1934], [556, 1907, 836, 1941], [850, 1907, 882, 1933], [894, 1907, 951, 1933], [965, 1907, 1057, 1933], [1071, 1908, 1096, 1933], [1124, 1908, 1203, 1938], [273, 1949, 354, 1975], [230, 2033, 353, 2067], [368, 2033, 479, 2059], [492, 2033, 544, 2059], [558, 2034, 637, 2067], [652, 2033, 739, 2060], [763, 2033, 918, 2067], [931, 2037, 1024, 2060], [1037, 2042, 1117, 2067], [1130, 2033, 1205, 2060], [272, 2074, 497, 2108], [508, 2074, 589, 2108], [600, 2074, 782, 2108], [793, 2074, 961, 2100], [980, 2075, 1010, 2100], [1020, 2074, 1205, 2108], [273, 2117, 307, 2150], [310, 2117, 401, 2143], [410, 2117, 492, 2147], [504, 2117, 585, 2143], [231, 2200, 378, 2234], [392, 2201, 467, 2227], [479, 2200, 531, 2226], [543, 2201, 623, 2234], [638, 2201, 727, 2227], [748, 2200, 892, 2227], [905, 2200, 1056, 2234], [1075, 2200, 1205, 2234], [273, 2242, 395, 2269], [413, 2246, 439, 2268], [456, 2242, 505, 2268], [524, 2242, 796, 2276], [814, 2242, 1067, 2276], [1085, 2242, 1203, 2268], [273, 2285, 354, 2310], [361, 2285, 486, 2317], [496, 2284, 756, 2314], [769, 2284, 849, 2310], [231, 2369, 377, 2399], [399, 2368, 464, 2394], [482, 2368, 583, 2394], [602, 2368, 654, 2394], [674, 2368, 815, 2399], [837, 2368, 904, 2394], [945, 2368, 1132, 2402], [1150, 2368, 1204, 2394], [272, 2409, 387, 2435], [412, 2409, 637, 2443], [664, 2409, 776, 2436], [802, 2409, 877, 2436], [903, 2409, 1058, 2443], [1123, 2411, 1205, 2436], [269, 2453, 394, 2485], [403, 2451, 664, 2482], [676, 2452, 757, 2478], [231, 2535, 408, 2566], [428, 2535, 589, 2566], [608, 2535, 691, 2566], [710, 2536, 782, 2566], [801, 2535, 853, 2561], [870, 2535, 1012, 2566], [1032, 2535, 1129, 2561], [1163, 2536, 1204, 2561], [273, 2576, 373, 2610], [389, 2576, 568, 2610], [585, 2576, 742, 2602], [757, 2576, 982, 2610], [999, 2576, 1031, 2602], [1045, 2576, 1142, 2603], [1175, 2577, 1205, 2602], [272, 2618, 457, 2652], [465, 2619, 499, 2652], [502, 2618, 545, 2644], [554, 2618, 751, 2644], [760, 2619, 928, 2652], [938, 2628, 973, 2644], [983, 2618, 1205, 2652], [272, 2662, 435, 2694], [447, 2661, 614, 2693], [627, 2660, 757, 2694], [770, 2660, 853, 2691], [865, 2660, 1018, 2686], [1028, 2661, 1109, 2687], [231, 2744, 336, 2775], [354, 2744, 468, 2778], [496, 2744, 634, 2778], [658, 2745, 683, 2770], [697, 2744, 809, 2778], [824, 2753, 921, 2778], [937, 2744, 980, 2770], [995, 2744, 1134, 2770], [1148, 2753, 1204, 2770], [273, 2785, 352, 2811], [362, 2785, 527, 2811], [544, 2786, 573, 2811], [582, 2787, 638, 2811], [645, 2787, 759, 2816], [772, 2785, 882, 2812], [893, 2785, 917, 2816], [929, 2794, 973, 2819], [986, 2785, 1086, 2816], [1098, 2785, 1179, 2812], [230, 2870, 328, 2901], [340, 2870, 429, 2897], [438, 2871, 471, 2901], [483, 2871, 566, 2904], [578, 2870, 696, 2904], [708, 2871, 788, 2901], [800, 2871, 874, 2904], [884, 2871, 917, 2901], [928, 2870, 981, 2896], [989, 2870, 1030, 2901], [1040, 2871, 1103, 2896], [1117, 2871, 1202, 2897], [273, 2912, 298, 2937], [313, 2920, 372, 2938], [385, 2911, 552, 2937], [565, 2911, 711, 2937], [725, 2911, 768, 2937], [780, 2915, 835, 2937], [849, 2911, 1058, 2945], [1072, 2911, 1203, 2937], [274, 2953, 326, 2979], [337, 2953, 452, 2980], [463, 2954, 497, 2987], [499, 2953, 629, 2979], [640, 2955, 776, 2987], [786, 2953, 930, 2984], [943, 2953, 1109, 2984], [1122, 2954, 1202, 2980], [1280, 294, 1413, 325], [1432, 295, 1537, 325], [1555, 295, 1602, 325], [1621, 295, 1699, 327], [1717, 295, 1745, 325], [1763, 294, 1815, 320], [1832, 294, 1981, 325], [2001, 294, 2065, 328], [2098, 294, 2255, 328], [1324, 336, 1487, 362], [1502, 345, 1602, 370], [1617, 336, 1764, 370], [1780, 336, 1823, 362], [1836, 336, 1961, 362], [1975, 336, 2140, 362], [2169, 337, 2198, 362], [2212, 338, 2254, 362], [1323, 377, 1488, 403], [1504, 378, 1671, 411], [1687, 387, 1723, 403], [1737, 379, 1873, 411], [1887, 379, 2126, 411], [2142, 378, 2253, 410], [1323, 420, 1420, 446], [1281, 494, 1413, 525], [1424, 495, 1529, 525], [1541, 494, 1690, 525], [1701, 494, 1765, 528], [1776, 494, 1861, 525], [1873, 494, 1932, 525], [1944, 494, 2072, 525], [2083, 495, 2156, 528], [2166, 495, 2192, 525], [2203, 494, 2255, 520], [1323, 536, 1408, 566], [1423, 535, 1486, 562], [1512, 535, 1678, 561], [1691, 535, 1916, 569], [1931, 535, 1963, 561], [1975, 535, 2063, 562], [2078, 535, 2130, 561], [2143, 535, 2254, 569], [1323, 577, 1375, 603], [1385, 577, 1454, 603], [1464, 577, 1718, 611], [1735, 578, 1764, 603], [1772, 577, 1917, 604], [1928, 579, 1955, 603], [1964, 577, 2067, 604], [2077, 578, 2255, 611], [1322, 620, 1486, 652], [1497, 619, 1621, 652], [1633, 627, 1677, 652], [1691, 619, 1864, 649], [1876, 618, 1976, 645], [1281, 693, 1368, 724], [1384, 693, 1488, 727], [1501, 693, 1554, 719], [1567, 693, 1628, 724], [1644, 694, 1699, 719], [1711, 693, 1807, 727], [1831, 694, 1856, 719], [1869, 693, 1922, 719], [1934, 693, 1987, 719], [2001, 693, 2098, 727], [2111, 693, 2255, 727], [1323, 734, 1366, 760], [1376, 734, 1491, 768], [1503, 734, 1595, 760], [1605, 734, 1790, 768], [1803, 734, 1936, 768], [1948, 734, 2061, 760], [2080, 735, 2110, 760], [2120, 734, 2254, 760], [1324, 778, 1384, 810], [1392, 777, 1426, 810], [1429, 776, 1472, 802], [1481, 776, 1546, 803], [1554, 776, 1751, 802], [1761, 777, 1928, 810], [1938, 786, 1973, 802], [1980, 776, 2110, 802], [2118, 778, 2255, 810], [1324, 818, 1443, 850], [1456, 818, 1537, 844], [1282, 892, 1350, 923], [1361, 893, 1445, 918], [1454, 892, 1533, 919], [1541, 892, 1593, 918], [1602, 893, 1669, 926], [1681, 893, 1826, 918], [1841, 893, 1866, 918], [1877, 892, 2031, 926], [2043, 892, 2215, 926], [2225, 892, 2257, 918], [1323, 934, 1430, 961], [1445, 934, 1584, 960], [1597, 934, 1745, 968], [1758, 934, 1872, 960], [1897, 934, 2119, 968], [2131, 936, 2254, 968], [1323, 977, 1381, 1006], [1394, 975, 1584, 1008], [1597, 976, 1678, 1002], [1282, 1051, 1343, 1081], [1356, 1050, 1441, 1077], [1450, 1050, 1531, 1077], [1541, 1050, 1593, 1076], [1604, 1051, 1687, 1084], [1699, 1050, 1797, 1084], [1812, 1051, 1837, 1076], [1849, 1059, 1945, 1084], [1956, 1059, 1991, 1076], [2001, 1050, 2115, 1076], [2125, 1050, 2253, 1084], [1322, 1091, 1488, 1125], [1503, 1091, 1559, 1117], [1569, 1093, 1643, 1117], [1656, 1093, 1845, 1125], [1862, 1093, 1944, 1117], [1957, 1093, 2147, 1117], [2160, 1101, 2203, 1122], [2219, 1092, 2255, 1117], [1324, 1133, 1570, 1166], [1582, 1134, 1663, 1160], [1282, 1208, 1458, 1242], [1482, 1208, 1588, 1242], [1614, 1208, 1721, 1239], [1746, 1208, 1871, 1239], [1895, 1208, 1948, 1234], [1967, 1208, 2109, 1242], [2134, 1208, 2254, 1235], [1322, 1249, 1389, 1283], [1401, 1250, 1434, 1275], [1457, 1249, 1554, 1276], [1574, 1249, 1674, 1276], [1687, 1253, 1792, 1276], [1806, 1249, 1849, 1275], [1861, 1249, 1935, 1276], [1948, 1249, 2166, 1283], [2189, 1251, 2254, 1275], [1323, 1291, 1452, 1325], [1464, 1292, 1497, 1325], [1503, 1291, 1546, 1317], [1557, 1291, 1717, 1325], [1726, 1291, 1855, 1317], [1867, 1293, 1894, 1317], [1903, 1291, 2020, 1318], [2030, 1293, 2177, 1325], [2189, 1293, 2254, 1317], [1323, 1334, 1431, 1366], [1443, 1333, 1576, 1365], [1586, 1333, 1680, 1365], [1695, 1333, 1736, 1363], [1748, 1333, 1829, 1359], [1282, 1407, 1385, 1438], [1400, 1408, 1431, 1438], [1446, 1407, 1567, 1438], [1582, 1408, 1621, 1438], [1637, 1407, 1689, 1433], [1702, 1407, 1816, 1441], [1831, 1408, 1860, 1433], [1882, 1407, 1964, 1433], [1976, 1407, 2209, 1441], [2230, 1408, 2255, 1433], [1324, 1448, 1421, 1482], [1436, 1448, 1489, 1474], [1504, 1448, 1612, 1482], [1627, 1448, 1738, 1474], [1753, 1448, 1796, 1474], [1811, 1448, 2051, 1482], [2067, 1448, 2195, 1482], [2225, 1449, 2255, 1474], [1322, 1490, 1507, 1524], [1517, 1491, 1551, 1524], [1556, 1490, 1599, 1516], [1610, 1490, 1676, 1516], [1684, 1490, 1793, 1516], [1802, 1492, 1925, 1524], [1936, 1491, 1969, 1524], [1974, 1490, 2017, 1516], [2026, 1491, 2202, 1516], [2207, 1491, 2256, 1524], [1324, 1531, 1546, 1565], [1553, 1533, 1724, 1565], [1735, 1540, 1779, 1565], [1791, 1532, 1926, 1558], [1937, 1531, 2112, 1557], [2121, 1531, 2164, 1557], [2171, 1532, 2254, 1558], [1322, 1573, 1471, 1607], [1481, 1573, 1654, 1607], [1667, 1574, 1747, 1600], [1281, 1648, 1393, 1679], [1410, 1648, 1528, 1674], [1541, 1649, 1563, 1675], [1593, 1649, 1637, 1674], [1652, 1648, 1772, 1674], [1787, 1648, 1897, 1674], [1912, 1648, 1955, 1674], [1969, 1648, 2125, 1682], [2140, 1648, 2255, 1674], [1322, 1689, 1436, 1715], [1452, 1689, 1583, 1716], [1600, 1689, 1665, 1716], [1681, 1689, 1790, 1723], [1806, 1689, 1998, 1715], [2029, 1690, 2110, 1716], [2125, 1691, 2254, 1715], [1323, 1733, 1394, 1757], [1405, 1741, 1441, 1757], [1450, 1731, 1658, 1757], [1669, 1732, 1797, 1765], [1810, 1732, 1937, 1764], [1951, 1731, 2159, 1764], [2175, 1732, 2253, 1758], [1281, 1806, 1348, 1836], [1359, 1805, 1423, 1831], [1433, 1806, 1461, 1836], [1474, 1805, 1582, 1836], [1594, 1805, 1718, 1836], [1730, 1806, 1789, 1836], [1801, 1805, 1906, 1836], [1918, 1805, 1971, 1831], [1980, 1805, 2122, 1839], [2134, 1805, 2254, 1832], [1322, 1847, 1389, 1881], [1399, 1848, 1432, 1873], [1449, 1847, 1586, 1881], [1597, 1847, 1672, 1874], [1683, 1847, 1861, 1881], [1873, 1847, 1916, 1873], [1925, 1847, 2119, 1881], [2130, 1847, 2255, 1873], [1322, 1888, 1487, 1914], [1503, 1889, 1532, 1914], [1542, 1888, 1727, 1922], [1737, 1889, 1771, 1922], [1775, 1888, 1818, 1914], [1829, 1889, 1902, 1914], [1915, 1889, 2082, 1922], [2094, 1898, 2130, 1914], [2139, 1890, 2254, 1922], [1323, 1930, 1367, 1956], [1375, 1930, 1504, 1956], [1516, 1932, 1542, 1956], [1550, 1930, 1667, 1957], [1676, 1932, 1823, 1964], [1833, 1932, 1997, 1964], [2008, 1931, 2160, 1963], [2172, 1931, 2253, 1957]], "scoresstructures": {"pages": {"version": "1.0", "structure_value": [[0, 620], [620, 1190], [1190, 2008], [2008, 2818], [2818, 3392], [3392, 4133], [4133, 5017], [5017, 5728], [5728, 6333]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 7], [7, 8], [8, 10], [10, 11], [11, 17], [17, 19], [19, 34], [34, 36], [36, 42], [42, 43], [43, 48], [48, 54], [54, 58], [58, 63], [63, 70], [70, 77], [77, 85], [85, 94], [94, 101], [101, 107], [107, 114], [114, 121], [121, 127], [127, 134], [134, 139], [139, 146], [146, 155], [155, 157], [157, 167], [167, 176], [176, 185], [185, 193], [193, 202], [202, 214], [214, 225], [225, 234], [234, 243], [243, 250], [250, 261], [261, 265], [265, 266], [266, 270], [270, 279], [279, 284], [284, 292], [292, 299], [299, 306], [306, 317], [317, 328], [328, 336], [336, 344], [344, 354], [354, 361], [361, 372], [372, 383], [383, 393], [393, 403], [403, 412], [412, 422], [422, 431], [431, 438], [438, 445], [445, 455], [455, 463], [463, 473], [473, 476], [476, 484], [484, 493], [493, 500], [500, 508], [508, 517], [517, 524], [524, 535], [535, 544], [544, 550], [550, 559], [559, 566], [566, 573], [573, 581], [581, 586], [586, 587], [587, 588], [588, 589], [589, 590], [590, 591], [591, 592], [592, 593], [593, 594], [594, 595], [595, 596], [596, 597], [597, 598], [598, 599], [599, 600], [600, 601], [601, 602], [602, 603], [603, 604], [604, 605], [605, 606], [606, 607], [607, 608], [608, 609], [609, 610], [610, 611], [611, 612], [612, 613], [613, 614], [614, 615], [615, 616], [616, 617], [617, 618], [618, 619], [619, 620], [620, 628], [628, 650], [650, 670], [670, 677], [677, 685], [685, 696], [696, 705], [705, 715], [715, 721], [721, 732], [732, 741], [741, 749], [749, 758], [758, 767], [767, 776], [776, 784], [784, 785], [785, 791], [791, 799], [799, 807], [807, 816], [816, 823], [823, 832], [832, 841], [841, 849], [849, 860], [860, 868], [868, 872], [872, 879], [879, 884], [884, 892], [892, 901], [901, 909], [909, 916], [916, 922], [922, 931], [931, 940], [940, 942], [942, 949], [949, 955], [955, 963], [963, 969], [969, 979], [979, 984], [984, 992], [992, 997], [997, 1003], [1003, 1008], [1008, 1015], [1015, 1024], [1024, 1036], [1036, 1047], [1047, 1057], [1057, 1066], [1066, 1076], [1076, 1085], [1085, 1096], [1096, 1106], [1106, 1115], [1115, 1122], [1122, 1129], [1129, 1139], [1139, 1149], [1149, 1150], [1150, 1160], [1160, 1168], [1168, 1177], [1177, 1188], [1188, 1189], [1189, 1190], [1190, 1198], [1198, 1205], [1205, 1213], [1213, 1221], [1221, 1230], [1230, 1239], [1239, 1250], [1250, 1258], [1258, 1269], [1269, 1280], [1280, 1288], [1288, 1296], [1296, 1304], [1304, 1312], [1312, 1322], [1322, 1330], [1330, 1337], [1337, 1346], [1346, 1356], [1356, 1365], [1365, 1376], [1376, 1387], [1387, 1398], [1398, 1406], [1406, 1415], [1415, 1424], [1424, 1435], [1435, 1448], [1448, 1456], [1456, 1466], [1466, 1475], [1475, 1485], [1485, 1494], [1494, 1503], [1503, 1511], [1511, 1524], [1524, 1533], [1533, 1541], [1541, 1550], [1550, 1558], [1558, 1570], [1570, 1579], [1579, 1589], [1589, 1601], [1601, 1611], [1611, 1622], [1622, 1633], [1633, 1634], [1634, 1640], [1640, 1648], [1648, 1655], [1655, 1667], [1667, 1677], [1677, 1686], [1686, 1694], [1694, 1703], [1703, 1712], [1712, 1720], [1720, 1729], [1729, 1741], [1741, 1745], [1745, 1747], [1747, 1748], [1748, 1749], [1749, 1750], [1750, 1751], [1751, 1753], [1753, 1756], [1756, 1757], [1757, 1758], [1758, 1759], [1759, 1761], [1761, 1763], [1763, 1765], [1765, 1766], [1766, 1767], [1767, 1768], [1768, 1769], [1769, 1778], [1778, 1785], [1785, 1795], [1795, 1804], [1804, 1812], [1812, 1820], [1820, 1830], [1830, 1839], [1839, 1840], [1840, 1841], [1841, 1842], [1842, 1844], [1844, 1845], [1845, 1847], [1847, 1853], [1853, 1854], [1854, 1855], [1855, 1856], [1856, 1857], [1857, 1858], [1858, 1867], [1867, 1877], [1877, 1888], [1888, 1899], [1899, 1910], [1910, 1920], [1920, 1929], [1929, 1938], [1938, 1949], [1949, 1959], [1959, 1969], [1969, 1979], [1979, 1988], [1988, 1999], [1999, 2008], [2008, 2016], [2016, 2023], [2023, 2032], [2032, 2042], [2042, 2051], [2051, 2063], [2063, 2073], [2073, 2083], [2083, 2090], [2090, 2101], [2101, 2110], [2110, 2121], [2121, 2127], [2127, 2131], [2131, 2140], [2140, 2147], [2147, 2157], [2157, 2166], [2166, 2177], [2177, 2182], [2182, 2191], [2191, 2197], [2197, 2205], [2205, 2216], [2216, 2226], [2226, 2228], [2228, 2239], [2239, 2246], [2246, 2254], [2254, 2259], [2259, 2268], [2268, 2270], [2270, 2277], [2277, 2284], [2284, 2290], [2290, 2298], [2298, 2305], [2305, 2314], [2314, 2322], [2322, 2331], [2331, 2337], [2337, 2344], [2344, 2354], [2354, 2364], [2364, 2372], [2372, 2379], [2379, 2388], [2388, 2398], [2398, 2399], [2399, 2414], [2414, 2424], [2424, 2433], [2433, 2444], [2444, 2454], [2454, 2462], [2462, 2470], [2470, 2477], [2477, 2485], [2485, 2493], [2493, 2505], [2505, 2513], [2513, 2522], [2522, 2523], [2523, 2528], [2528, 2531], [2531, 2541], [2541, 2551], [2551, 2561], [2561, 2573], [2573, 2582], [2582, 2592], [2592, 2605], [2605, 2617], [2617, 2625], [2625, 2633], [2633, 2634], [2634, 2643], [2643, 2653], [2653, 2664], [2664, 2667], [2667, 2668], [2668, 2669], [2669, 2670], [2670, 2671], [2671, 2672], [2672, 2673], [2673, 2675], [2675, 2676], [2676, 2677], [2677, 2678], [2678, 2680], [2680, 2681], [2681, 2683], [2683, 2684], [2684, 2686], [2686, 2687], [2687, 2690], [2690, 2699], [2699, 2709], [2709, 2722], [2722, 2733], [2733, 2735], [2735, 2747], [2747, 2753], [2753, 2762], [2762, 2772], [2772, 2784], [2784, 2791], [2791, 2800], [2800, 2809], [2809, 2818], [2818, 2826], [2826, 2847], [2847, 2865], [2865, 2873], [2873, 2883], [2883, 2891], [2891, 2902], [2902, 2909], [2909, 2919], [2919, 2927], [2927, 2937], [2937, 2946], [2946, 2957], [2957, 2966], [2966, 2972], [2972, 2979], [2979, 2988], [2988, 2997], [2997, 2999], [2999, 3010], [3010, 3021], [3021, 3032], [3032, 3041], [3041, 3047], [3047, 3048], [3048, 3049], [3049, 3050], [3050, 3051], [3051, 3052], [3052, 3053], [3053, 3057], [3057, 3058], [3058, 3059], [3059, 3060], [3060, 3061], [3061, 3063], [3063, 3064], [3064, 3075], [3075, 3086], [3086, 3097], [3097, 3106], [3106, 3116], [3116, 3127], [3127, 3136], [3136, 3144], [3144, 3153], [3153, 3156], [3156, 3163], [3163, 3164], [3164, 3165], [3165, 3166], [3166, 3167], [3167, 3168], [3168, 3169], [3169, 3171], [3171, 3172], [3172, 3173], [3173, 3174], [3174, 3175], [3175, 3176], [3176, 3178], [3178, 3179], [3179, 3180], [3180, 3181], [3181, 3182], [3182, 3184], [3184, 3185], [3185, 3197], [3197, 3208], [3208, 3221], [3221, 3229], [3229, 3240], [3240, 3251], [3251, 3261], [3261, 3269], [3269, 3276], [3276, 3284], [3284, 3299], [3299, 3304], [3304, 3305], [3305, 3307], [3307, 3309], [3309, 3310], [3310, 3311], [3311, 3312], [3312, 3313], [3313, 3314], [3314, 3315], [3315, 3316], [3316, 3317], [3317, 3318], [3318, 3319], [3319, 3320], [3320, 3321], [3321, 3323], [3323, 3324], [3324, 3325], [3325, 3328], [3328, 3337], [3337, 3347], [3347, 3355], [3355, 3362], [3362, 3372], [3372, 3381], [3381, 3392], [3392, 3400], [3400, 3410], [3410, 3419], [3419, 3426], [3426, 3435], [3435, 3444], [3444, 3455], [3455, 3466], [3466, 3470], [3470, 3476], [3476, 3486], [3486, 3497], [3497, 3507], [3507, 3516], [3516, 3525], [3525, 3535], [3535, 3545], [3545, 3554], [3554, 3562], [3562, 3572], [3572, 3580], [3580, 3591], [3591, 3601], [3601, 3608], [3608, 3616], [3616, 3626], [3626, 3633], [3633, 3644], [3644, 3653], [3653, 3660], [3660, 3666], [3666, 3676], [3676, 3685], [3685, 3696], [3696, 3705], [3705, 3715], [3715, 3723], [3723, 3734], [3734, 3742], [3742, 3749], [3749, 3760], [3760, 3763], [3763, 3768], [3768, 3779], [3779, 3785], [3785, 3794], [3794, 3804], [3804, 3812], [3812, 3822], [3822, 3823], [3823, 3824], [3824, 3836], [3836, 3846], [3846, 3855], [3855, 3864], [3864, 3868], [3868, 3874], [3874, 3883], [3883, 3884], [3884, 3885], [3885, 3886], [3886, 3887], [3887, 3888], [3888, 3889], [3889, 3890], [3890, 3891], [3891, 3897], [3897, 3906], [3906, 3918], [3918, 3926], [3926, 3935], [3935, 3943], [3943, 3950], [3950, 3959], [3959, 3970], [3970, 3977], [3977, 3987], [3987, 3995], [3995, 4005], [4005, 4011], [4011, 4019], [4019, 4027], [4027, 4035], [4035, 4045], [4045, 4059], [4059, 4065], [4065, 4072], [4072, 4079], [4079, 4088], [4088, 4098], [4098, 4106], [4106, 4115], [4115, 4123], [4123, 4133], [4133, 4141], [4141, 4150], [4150, 4159], [4159, 4167], [4167, 4169], [4169, 4178], [4178, 4187], [4187, 4194], [4194, 4202], [4202, 4212], [4212, 4215], [4215, 4219], [4219, 4228], [4228, 4235], [4235, 4244], [4244, 4254], [4254, 4265], [4265, 4273], [4273, 4282], [4282, 4293], [4293, 4304], [4304, 4312], [4312, 4323], [4323, 4325], [4325, 4332], [4332, 4342], [4342, 4352], [4352, 4359], [4359, 4371], [4371, 4376], [4376, 4381], [4381, 4388], [4388, 4396], [4396, 4408], [4408, 4417], [4417, 4427], [4427, 4435], [4435, 4445], [4445, 4453], [4453, 4462], [4462, 4471], [4471, 4479], [4479, 4486], [4486, 4497], [4497, 4505], [4505, 4512], [4512, 4524], [4524, 4533], [4533, 4543], [4543, 4555], [4555, 4566], [4566, 4576], [4576, 4586], [4586, 4596], [4596, 4606], [4606, 4614], [4614, 4623], [4623, 4629], [4629, 4638], [4638, 4644], [4644, 4655], [4655, 4663], [4663, 4673], [4673, 4683], [4683, 4693], [4693, 4703], [4703, 4713], [4713, 4722], [4722, 4732], [4732, 4743], [4743, 4754], [4754, 4759], [4759, 4763], [4763, 4771], [4771, 4781], [4781, 4789], [4789, 4799], [4799, 4807], [4807, 4816], [4816, 4826], [4826, 4834], [4834, 4842], [4842, 4852], [4852, 4862], [4862, 4874], [4874, 4884], [4884, 4892], [4892, 4903], [4903, 4912], [4912, 4920], [4920, 4928], [4928, 4938], [4938, 4947], [4947, 4956], [4956, 4965], [4965, 4974], [4974, 4984], [4984, 4993], [4993, 5003], [5003, 5015], [5015, 5016], [5016, 5017], [5017, 5025], [5025, 5026], [5026, 5035], [5035, 5037], [5037, 5038], [5038, 5039], [5039, 5040], [5040, 5042], [5042, 5043], [5043, 5044], [5044, 5045], [5045, 5047], [5047, 5048], [5048, 5049], [5049, 5050], [5050, 5053], [5053, 5054], [5054, 5055], [5055, 5056], [5056, 5059], [5059, 5060], [5060, 5061], [5061, 5062], [5062, 5063], [5063, 5064], [5064, 5065], [5065, 5066], [5066, 5069], [5069, 5070], [5070, 5071], [5071, 5072], [5072, 5092], [5092, 5113], [5113, 5130], [5130, 5137], [5137, 5138], [5138, 5146], [5146, 5148], [5148, 5149], [5149, 5150], [5150, 5151], [5151, 5152], [5152, 5154], [5154, 5155], [5155, 5156], [5156, 5157], [5157, 5158], [5158, 5162], [5162, 5163], [5163, 5164], [5164, 5165], [5165, 5166], [5166, 5169], [5169, 5171], [5171, 5173], [5173, 5174], [5174, 5176], [5176, 5199], [5199, 5221], [5221, 5240], [5240, 5247], [5247, 5255], [5255, 5263], [5263, 5271], [5271, 5280], [5280, 5291], [5291, 5300], [5300, 5309], [5309, 5318], [5318, 5328], [5328, 5337], [5337, 5347], [5347, 5356], [5356, 5364], [5364, 5369], [5369, 5371], [5371, 5380], [5380, 5389], [5389, 5398], [5398, 5407], [5407, 5416], [5416, 5422], [5422, 5432], [5432, 5440], [5440, 5449], [5449, 5457], [5457, 5465], [5465, 5472], [5472, 5481], [5481, 5490], [5490, 5499], [5499, 5508], [5508, 5517], [5517, 5519], [5519, 5530], [5530, 5539], [5539, 5548], [5548, 5557], [5557, 5563], [5563, 5571], [5571, 5581], [5581, 5589], [5589, 5599], [5599, 5609], [5609, 5616], [5616, 5618], [5618, 5624], [5624, 5631], [5631, 5641], [5641, 5648], [5648, 5655], [5655, 5663], [5663, 5672], [5672, 5681], [5681, 5690], [5690, 5697], [5697, 5703], [5703, 5712], [5712, 5720], [5720, 5728], [5728, 5736], [5736, 5737], [5737, 5745], [5745, 5753], [5753, 5761], [5761, 5769], [5769, 5776], [5776, 5777], [5777, 5787], [5787, 5795], [5795, 5798], [5798, 5799], [5799, 5808], [5808, 5817], [5817, 5824], [5824, 5834], [5834, 5841], [5841, 5849], [5849, 5851], [5851, 5858], [5858, 5866], [5866, 5874], [5874, 5880], [5880, 5889], [5889, 5898], [5898, 5905], [5905, 5907], [5907, 5916], [5916, 5925], [5925, 5931], [5931, 5933], [5933, 5943], [5943, 5952], [5952, 5953], [5953, 5962], [5962, 5968], [5968, 5972], [5972, 5980], [5980, 5986], [5986, 5990], [5990, 5998], [5998, 6003], [6003, 6004], [6004, 6007], [6007, 6015], [6015, 6022], [6022, 6029], [6029, 6035], [6035, 6044], [6044, 6054], [6054, 6066], [6066, 6074], [6074, 6082], [6082, 6091], [6091, 6099], [6099, 6105], [6105, 6106], [6106, 6116], [6116, 6124], [6124, 6132], [6132, 6137], [6137, 6148], [6148, 6156], [6156, 6165], [6165, 6167], [6167, 6177], [6177, 6183], [6183, 6186], [6186, 6197], [6197, 6205], [6205, 6207], [6207, 6214], [6214, 6223], [6223, 6232], [6232, 6237], [6237, 6247], [6247, 6255], [6255, 6265], [6265, 6272], [6272, 6275], [6275, 6284], [6284, 6291], [6291, 6298], [6298, 6308], [6308, 6316], [6316, 6325], [6325, 6333]], "positions": [[371, 379, 2114, 432], [1098, 454, 1388, 507], [232, 667, 507, 705], [1791, 668, 2223, 697], [231, 726, 884, 763], [231, 805, 492, 843], [231, 865, 1784, 902], [232, 944, 481, 982], [231, 1004, 884, 1041], [625, 1168, 811, 1203], [314, 1245, 1121, 1282], [317, 1295, 1122, 1332], [315, 1345, 1122, 1382], [314, 1395, 1120, 1432], [315, 1444, 1120, 1481], [316, 1494, 1121, 1531], [315, 1544, 1122, 1581], [315, 1594, 1123, 1631], [316, 1644, 1120, 1681], [316, 1693, 1120, 1730], [315, 1743, 1121, 1780], [315, 1793, 1121, 1830], [315, 1843, 1122, 1880], [315, 1893, 1121, 1930], [314, 1943, 1120, 1980], [315, 1992, 1120, 2029], [315, 2042, 1120, 2071], [233, 2187, 550, 2222], [231, 2274, 1206, 2311], [231, 2324, 1205, 2361], [231, 2374, 1206, 2411], [231, 2424, 1205, 2461], [231, 2473, 1206, 2510], [232, 2523, 1203, 2560], [231, 2573, 1203, 2610], [231, 2623, 1203, 2660], [231, 2673, 1205, 2710], [230, 2722, 1204, 2759], [232, 2772, 1204, 2801], [231, 2849, 577, 2883], [582, 2842, 615, 2859], [633, 2849, 1213, 2883], [230, 2891, 1213, 2925], [230, 2932, 638, 2966], [1282, 1174, 2257, 1211], [1280, 1224, 2255, 1261], [1282, 1274, 2253, 1311], [1280, 1324, 2254, 1361], [1281, 1373, 2254, 1410], [1281, 1423, 2254, 1460], [1281, 1473, 2256, 1510], [1281, 1523, 2255, 1560], [1281, 1573, 2255, 1610], [1281, 1623, 2253, 1660], [1281, 1672, 2254, 1709], [1281, 1722, 2253, 1759], [1281, 1772, 2254, 1809], [1281, 1822, 2255, 1859], [1281, 1872, 2255, 1909], [1281, 1921, 2256, 1958], [1282, 1971, 2253, 2008], [1281, 2021, 2254, 2058], [1280, 2071, 2254, 2108], [1282, 2121, 2255, 2158], [1281, 2170, 2255, 2207], [1282, 2220, 1796, 2257], [1281, 2295, 2254, 2332], [1274, 2345, 2255, 2382], [1281, 2395, 2253, 2432], [1281, 2444, 2254, 2481], [1281, 2494, 2254, 2531], [1280, 2544, 2255, 2581], [1281, 2594, 2253, 2631], [1281, 2644, 2254, 2681], [1281, 2694, 2253, 2731], [1282, 2743, 2256, 2772], [1281, 2793, 2255, 2830], [1282, 2843, 2254, 2880], [1281, 2893, 2253, 2930], [1281, 2943, 1763, 2978], [97, 2286, 134, 2329], [97, 2256, 133, 2293], [83, 2209, 133, 2267], [83, 2183, 133, 2205], [98, 2138, 133, 2185], [103, 2123, 134, 2134], [82, 2079, 133, 2110], [82, 2029, 133, 2075], [82, 1996, 133, 2027], [82, 1948, 134, 1989], [125, 1934, 134, 1945], [82, 1887, 133, 1926], [82, 1842, 133, 1888], [83, 1802, 134, 1842], [83, 1760, 134, 1800], [98, 1719, 133, 1766], [82, 1677, 134, 1718], [81, 1615, 142, 1634], [97, 1575, 134, 1608], [87, 1548, 134, 1579], [97, 1510, 134, 1553], [87, 1487, 134, 1518], [125, 1478, 134, 1489], [83, 1395, 133, 1472], [83, 1349, 133, 1397], [81, 1326, 142, 1345], [82, 1233, 133, 1279], [83, 1166, 133, 1215], [97, 1128, 134, 1169], [81, 1087, 134, 1134], [82, 1029, 133, 1068], [82, 985, 134, 1026], [82, 949, 133, 980], [82, 901, 134, 943], [603, 199, 1883, 233], [231, 1024, 2255, 1058], [232, 1070, 2196, 1104], [233, 1201, 1204, 1238], [232, 1250, 1203, 1287], [233, 1300, 1203, 1337], [232, 1350, 1205, 1387], [232, 1399, 1206, 1437], [232, 1450, 1205, 1487], [232, 1499, 1205, 1536], [232, 1549, 1205, 1586], [232, 1599, 1206, 1636], [233, 1649, 1205, 1686], [232, 1699, 1205, 1736], [231, 1749, 1205, 1786], [232, 1798, 1204, 1835], [233, 1848, 338, 1883], [232, 1922, 1204, 1960], [232, 1973, 1206, 2010], [232, 2022, 1204, 2059], [233, 2072, 1205, 2109], [232, 2122, 1205, 2159], [232, 2172, 1204, 2209], [232, 2222, 1205, 2259], [233, 2272, 1205, 2309], [233, 2321, 1205, 2358], [233, 2371, 1204, 2408], [232, 2421, 612, 2458], [274, 2552, 1204, 2589], [311, 2602, 1205, 2639], [315, 2652, 1205, 2689], [316, 2702, 1204, 2739], [315, 2752, 1203, 2789], [315, 2801, 1204, 2838], [315, 2851, 1204, 2888], [316, 2901, 1204, 2938], [315, 2951, 1205, 2988], [1365, 1200, 1762, 1238], [1324, 1280, 2255, 1317], [1365, 1329, 2255, 1367], [1365, 1378, 2254, 1416], [1364, 1429, 2254, 1466], [1365, 1479, 2254, 1516], [1365, 1529, 1868, 1566], [1324, 1608, 2254, 1645], [1365, 1651, 2256, 1695], [1364, 1708, 2246, 1745], [1281, 1814, 2233, 1858], [1281, 1900, 2253, 1937], [1281, 1950, 2256, 1987], [1281, 2000, 2254, 2037], [1280, 2050, 2256, 2087], [1281, 2100, 2254, 2137], [1281, 2149, 2255, 2186], [1281, 2199, 2255, 2236], [1281, 2249, 2255, 2286], [1281, 2299, 2253, 2328], [1281, 2349, 2254, 2386], [1281, 2398, 2255, 2435], [1281, 2448, 2253, 2485], [1281, 2498, 2255, 2535], [1281, 2548, 2255, 2585], [1281, 2598, 2253, 2635], [1281, 2648, 1385, 2683], [1281, 2722, 2253, 2759], [1281, 2772, 2256, 2809], [1282, 2822, 2254, 2859], [1281, 2872, 2254, 2909], [1336, 2946, 1343, 2963], [1359, 2954, 2229, 2986], [603, 199, 1883, 233], [231, 291, 1205, 329], [231, 341, 1204, 379], [231, 392, 1204, 429], [231, 441, 1205, 479], [231, 492, 1204, 529], [231, 541, 1204, 578], [231, 591, 1204, 628], [230, 641, 1206, 678], [231, 691, 1204, 728], [231, 741, 1205, 778], [231, 791, 1188, 828], [233, 864, 1204, 902], [231, 915, 1204, 952], [230, 965, 1204, 1002], [231, 1015, 1205, 1050], [231, 1065, 1201, 1102], [232, 1114, 1204, 1151], [231, 1164, 1204, 1201], [230, 1214, 1204, 1251], [231, 1264, 1205, 1301], [231, 1314, 1204, 1351], [230, 1363, 1204, 1400], [231, 1413, 1204, 1450], [231, 1463, 1205, 1500], [231, 1513, 1206, 1550], [231, 1563, 1205, 1600], [231, 1612, 1204, 1649], [231, 1662, 1204, 1699], [231, 1712, 1205, 1749], [231, 1762, 1204, 1799], [231, 1811, 1203, 1849], [232, 1862, 1205, 1899], [231, 1911, 1205, 1948], [231, 1961, 1203, 1998], [233, 2036, 1205, 2073], [232, 2086, 1205, 2123], [232, 2136, 1203, 2173], [231, 2185, 1204, 2222], [232, 2235, 1204, 2272], [231, 2285, 1206, 2322], [231, 2335, 1204, 2372], [231, 2385, 1203, 2422], [231, 2434, 1204, 2471], [232, 2484, 1205, 2521], [231, 2534, 1205, 2571], [231, 2584, 1205, 2621], [231, 2634, 322, 2669], [232, 2708, 1205, 2745], [225, 2755, 1205, 2796], [231, 2807, 1204, 2845], [231, 2857, 1205, 2895], [232, 2905, 1204, 2946], [1281, 949, 2254, 983], [1280, 995, 2255, 1029], [1282, 1041, 2255, 1075], [1282, 1086, 2254, 1120], [1281, 1132, 2091, 1166], [1282, 1260, 2255, 1297], [1281, 1309, 2255, 1347], [1281, 1359, 1518, 1396], [1326, 1453, 1482, 1483], [1411, 1488, 1483, 1517], [1522, 1442, 1578, 1500], [1496, 1511, 1603, 1540], [1649, 1442, 1705, 1500], [1614, 1512, 1736, 1540], [1749, 1445, 1956, 1492], [1747, 1496, 1767, 1510], [1836, 1505, 1874, 1519], [1942, 1496, 1962, 1510], [1764, 1529, 1946, 1555], [1970, 1451, 2112, 1492], [2120, 1445, 2188, 1492], [2030, 1496, 2194, 1519], [2055, 1529, 2170, 1555], [2203, 1478, 2207, 1482], [2209, 1564, 2254, 1599], [1282, 1638, 2255, 1675], [1282, 1688, 2254, 1725], [1282, 1735, 2254, 1776], [1282, 1788, 2255, 1825], [1281, 1838, 2254, 1875], [1282, 1887, 2255, 1924], [1282, 1937, 2255, 1974], [1282, 1987, 2136, 2024], [1283, 2079, 1376, 2120], [1384, 2072, 1514, 2120], [1551, 2070, 1607, 2128], [1529, 2139, 1626, 2163], [1663, 2070, 1719, 2128], [1638, 2139, 1739, 2170], [1753, 2079, 2149, 2122], [2152, 2079, 2164, 2092], [2151, 2091, 2205, 2120], [2208, 2070, 2224, 2096], [2206, 2079, 2252, 2127], [2209, 2179, 2254, 2214], [1282, 2229, 2254, 2266], [1282, 2278, 2255, 2315], [1282, 2328, 2255, 2365], [1282, 2378, 2255, 2415], [1283, 2428, 2255, 2465], [1283, 2475, 2112, 2518], [1282, 2552, 2255, 2589], [1282, 2602, 2255, 2639], [1283, 2652, 2254, 2689], [1281, 2702, 2255, 2739], [1282, 2752, 2255, 2789], [1282, 2801, 2255, 2838], [1282, 2851, 2255, 2888], [1282, 2901, 2254, 2938], [1282, 2951, 2254, 2988], [603, 199, 1883, 233], [232, 292, 1206, 329], [232, 342, 1204, 379], [232, 392, 1204, 429], [232, 442, 1204, 479], [232, 492, 1204, 526], [232, 541, 1206, 578], [231, 591, 1203, 628], [231, 641, 1203, 678], [230, 691, 1205, 728], [232, 741, 1205, 778], [233, 784, 1203, 828], [231, 840, 907, 877], [231, 953, 733, 988], [231, 1039, 1205, 1077], [230, 1090, 1204, 1127], [228, 1140, 1204, 1177], [230, 1190, 1205, 1227], [231, 1239, 1205, 1276], [230, 1289, 730, 1326], [231, 1364, 1203, 1401], [231, 1414, 1205, 1451], [231, 1464, 1204, 1501], [231, 1513, 1205, 1550], [231, 1563, 1205, 1600], [232, 1613, 439, 1648], [267, 1715, 1204, 1752], [315, 1765, 1205, 1802], [314, 1815, 1206, 1852], [315, 1864, 1204, 1902], [315, 1914, 1204, 1951], [315, 1964, 539, 2001], [263, 2044, 1204, 2081], [315, 2094, 1204, 2131], [314, 2144, 1205, 2181], [315, 2193, 1206, 2231], [315, 2244, 1204, 2281], [314, 2293, 1205, 2330], [315, 2343, 1204, 2380], [315, 2387, 1205, 2431], [315, 2443, 826, 2480], [231, 2544, 1096, 2582], [233, 2623, 1205, 2660], [233, 2672, 1205, 2709], [231, 2721, 1205, 2759], [232, 2772, 1205, 2809], [232, 2822, 1204, 2859], [232, 2872, 1204, 2909], [284, 2946, 295, 2963], [299, 2951, 1202, 2988], [1282, 292, 2255, 329], [1283, 342, 2254, 379], [1282, 392, 2255, 429], [1282, 442, 2254, 479], [1282, 492, 2254, 529], [1282, 541, 2255, 578], [1282, 591, 2255, 628], [1282, 641, 2255, 678], [1282, 691, 2255, 728], [1282, 741, 2256, 778], [1282, 791, 2255, 828], [1282, 840, 2254, 877], [1282, 894, 1369, 918], [1282, 994, 2022, 1032], [1354, 1044, 1769, 1080], [1281, 1122, 2255, 1159], [1281, 1172, 2254, 1209], [1281, 1222, 2255, 1259], [1281, 1271, 2255, 1309], [1281, 1322, 2254, 1359], [1280, 1371, 2255, 1412], [1282, 1421, 2253, 1458], [1281, 1471, 2255, 1508], [1281, 1521, 2254, 1558], [1282, 1571, 2254, 1608], [1280, 1621, 1434, 1658], [1281, 1695, 2255, 1732], [1282, 1742, 2255, 1783], [1281, 1794, 2255, 1832], [1281, 1844, 1626, 1881], [1400, 1941, 1524, 1982], [1532, 1935, 1661, 1982], [1677, 1932, 1733, 1990], [1700, 2002, 1709, 2021], [1744, 1932, 1800, 1990], [1764, 2002, 1777, 2027], [1811, 1941, 1901, 1984], [1904, 1942, 1916, 1955], [1903, 1953, 1989, 1982], [1993, 1932, 2009, 1958], [1991, 1936, 2050, 1989], [2209, 1944, 2254, 1979], [1633, 2053, 1741, 2094], [1757, 2073, 1783, 2074], [1797, 2047, 1999, 2094], [2015, 2073, 2041, 2074], [2055, 2047, 2254, 2094], [1282, 2148, 2255, 2186], [1283, 2198, 2253, 2236], [1282, 2242, 2253, 2286], [1282, 2298, 2253, 2335], [1282, 2348, 1627, 2385], [1317, 2457, 2254, 2494], [1365, 2506, 1959, 2544], [1313, 2590, 2255, 2631], [1365, 2642, 2255, 2679], [1365, 2685, 2253, 2730], [1282, 2801, 2254, 2838], [1282, 2851, 2253, 2888], [1283, 2894, 2253, 2938], [1282, 2951, 2254, 2988], [603, 199, 1883, 233], [231, 1240, 2255, 1274], [232, 1286, 2255, 1320], [233, 1332, 1046, 1366], [233, 1462, 1204, 1499], [232, 1511, 1204, 1549], [232, 1562, 1203, 1599], [232, 1612, 1204, 1649], [232, 1662, 1205, 1699], [232, 1711, 1206, 1748], [231, 1761, 1205, 1798], [232, 1811, 1208, 1848], [232, 1858, 1205, 1899], [232, 1911, 1203, 1948], [231, 1960, 1203, 1997], [232, 2010, 1206, 2047], [231, 2060, 1204, 2097], [232, 2110, 1205, 2147], [232, 2160, 439, 2189], [232, 2234, 1205, 2271], [231, 2284, 1206, 2321], [232, 2334, 1204, 2371], [232, 2384, 1204, 2421], [233, 2431, 825, 2474], [811, 2444, 876, 2473], [880, 2422, 896, 2448], [877, 2431, 924, 2479], [344, 2538, 468, 2579], [476, 2532, 605, 2579], [724, 2541, 750, 2569], [622, 2575, 851, 2605], [870, 2521, 921, 2596], [925, 2539, 937, 2552], [924, 2550, 1010, 2579], [1013, 2529, 1029, 2555], [1011, 2521, 1085, 2596], [1159, 2540, 1204, 2576], [233, 2652, 1205, 2689], [231, 2702, 1205, 2739], [225, 2752, 1205, 2789], [233, 2801, 1205, 2838], [232, 2851, 1205, 2888], [232, 2900, 1204, 2938], [232, 2950, 1204, 2988], [1278, 1462, 2255, 1499], [1282, 1511, 2255, 1549], [1282, 1559, 1719, 1600], [1727, 1555, 2255, 1600], [1282, 1612, 1358, 1640], [1295, 1704, 1420, 1745], [1427, 1698, 1557, 1745], [1583, 1679, 1596, 1707], [1578, 1734, 1603, 1764], [1661, 1695, 1717, 1753], [1618, 1764, 1761, 1794], [1798, 1679, 1811, 1707], [1775, 1745, 1834, 1763], [1865, 1695, 1921, 1753], [1848, 1765, 1934, 1787], [1965, 1695, 2021, 1753], [1946, 1764, 2037, 1795], [2053, 1704, 2089, 1745], [2093, 1705, 2105, 1718], [2092, 1716, 2178, 1745], [2181, 1695, 2197, 1721], [2179, 1699, 2239, 1752], [2209, 1804, 2254, 1839], [1281, 1854, 2254, 1891], [1281, 1904, 2255, 1941], [1281, 1946, 2253, 1991], [1281, 2003, 2253, 2040], [1282, 2053, 2254, 2090], [1281, 2103, 2255, 2140], [1282, 2146, 2255, 2190], [1281, 2203, 2253, 2240], [1281, 2252, 2255, 2289], [1282, 2302, 2255, 2339], [1282, 2351, 2254, 2389], [1281, 2401, 2211, 2439], [1381, 2503, 1444, 2547], [1410, 2516, 1515, 2559], [1523, 2510, 1685, 2557], [1706, 2491, 1719, 2519], [1695, 2557, 1729, 2575], [1775, 2482, 1802, 2495], [1761, 2508, 1817, 2566], [1744, 2577, 1830, 2599], [1843, 2528, 1859, 2547], [1863, 2517, 1875, 2530], [1862, 2536, 1917, 2557], [1940, 2491, 1953, 2519], [1935, 2557, 1958, 2575], [2010, 2482, 2028, 2495], [1991, 2508, 2047, 2566], [1972, 2576, 2063, 2608], [2076, 2528, 2092, 2547], [2096, 2507, 2112, 2533], [2094, 2511, 2254, 2565], [1281, 2651, 2254, 2689], [1281, 2702, 2254, 2739], [1281, 2752, 2254, 2789], [1282, 2801, 2253, 2838], [1282, 2851, 2254, 2888], [1282, 2901, 2255, 2938], [1283, 2951, 2254, 2988], [603, 199, 1883, 233], [232, 292, 1203, 329], [232, 342, 1205, 379], [232, 392, 1205, 429], [233, 442, 1205, 479], [232, 492, 1204, 529], [232, 541, 1204, 578], [232, 591, 1205, 632], [233, 641, 606, 681], [231, 745, 980, 783], [231, 824, 1204, 861], [231, 873, 1205, 910], [231, 923, 1203, 963], [232, 973, 1204, 1010], [232, 1023, 1205, 1060], [225, 1073, 1204, 1110], [232, 1122, 1205, 1159], [232, 1172, 1204, 1209], [232, 1222, 1205, 1259], [232, 1272, 1204, 1309], [232, 1322, 1204, 1359], [231, 1372, 1204, 1409], [232, 1421, 1205, 1458], [232, 1471, 1206, 1508], [232, 1521, 1205, 1558], [233, 1571, 1205, 1608], [232, 1621, 1204, 1658], [232, 1670, 1205, 1707], [232, 1720, 1205, 1757], [232, 1770, 1204, 1807], [232, 1820, 957, 1857], [232, 1895, 1204, 1932], [232, 1944, 1204, 1981], [232, 1994, 1205, 2031], [232, 2043, 1205, 2081], [232, 2094, 1205, 2131], [233, 2144, 1205, 2181], [233, 2193, 1204, 2230], [232, 2243, 1204, 2280], [232, 2293, 1205, 2330], [232, 2343, 1205, 2380], [231, 2393, 746, 2430], [232, 2506, 1068, 2550], [231, 2592, 1204, 2629], [231, 2635, 1204, 2679], [232, 2692, 1205, 2729], [232, 2742, 1203, 2779], [232, 2792, 1204, 2829], [232, 2841, 1205, 2878], [284, 2916, 294, 2933], [300, 2924, 1078, 2956], [1281, 1021, 2254, 1055], [1282, 1066, 2255, 1100], [1282, 1112, 2255, 1146], [1282, 1158, 2254, 1192], [1281, 1203, 1735, 1237], [1283, 1329, 2255, 1366], [1283, 1378, 1938, 1416], [1592, 1473, 1646, 1513], [1665, 1484, 1726, 1513], [1730, 1473, 1805, 1502], [1822, 1502, 1848, 1503], [1862, 1495, 1882, 1522], [1890, 1454, 1939, 1485], [1894, 1511, 1935, 1542], [2209, 1485, 2254, 1520], [1281, 1581, 2255, 1618], [1281, 1631, 2254, 1668], [1281, 1678, 2254, 1719], [1281, 1730, 2256, 1767], [1281, 1780, 2254, 1817], [1281, 1830, 2256, 1867], [1281, 1880, 2255, 1917], [1281, 1929, 2254, 1967], [1281, 1980, 2255, 2017], [1282, 2029, 2255, 2066], [1281, 2079, 2254, 2116], [1281, 2129, 2255, 2166], [1281, 2179, 2255, 2216], [1282, 2229, 2255, 2266], [1281, 2278, 2254, 2315], [1280, 2328, 2254, 2365], [1280, 2378, 2255, 2415], [1282, 2427, 2255, 2465], [1282, 2475, 2253, 2516], [1280, 2528, 1820, 2565], [1281, 2602, 2254, 2639], [1281, 2652, 2255, 2689], [1282, 2701, 2255, 2739], [1282, 2751, 2254, 2789], [1281, 2801, 2256, 2838], [1281, 2851, 2255, 2888], [1281, 2901, 2255, 2938], [1282, 2951, 2255, 2988], [603, 199, 1883, 233], [232, 292, 1205, 329], [232, 342, 1205, 379], [231, 392, 841, 429], [232, 505, 550, 549], [232, 592, 1205, 629], [231, 642, 1204, 679], [231, 691, 1206, 728], [232, 741, 1204, 778], [232, 791, 1203, 828], [232, 841, 701, 878], [231, 945, 979, 983], [230, 1023, 1206, 1060], [231, 1072, 1206, 1110], [232, 1123, 1205, 1160], [231, 1173, 1205, 1210], [231, 1223, 1204, 1260], [230, 1272, 1205, 1309], [231, 1322, 1204, 1359], [231, 1372, 1205, 1409], [231, 1422, 1204, 1459], [231, 1472, 1205, 1509], [232, 1521, 1205, 1558], [231, 1571, 479, 1599], [232, 1646, 1204, 1683], [231, 1696, 1204, 1733], [231, 1746, 1205, 1783], [231, 1795, 1205, 1832], [231, 1845, 1204, 1882], [231, 1895, 1203, 1932], [233, 1945, 1062, 1980], [231, 2019, 1206, 2057], [231, 2069, 1205, 2106], [231, 2118, 1205, 2156], [230, 2169, 1205, 2206], [232, 2219, 1205, 2256], [231, 2269, 1203, 2306], [232, 2318, 1205, 2355], [231, 2368, 1203, 2405], [230, 2418, 1206, 2455], [231, 2468, 1205, 2505], [232, 2518, 1205, 2555], [231, 2568, 953, 2605], [231, 2642, 1205, 2670], [230, 2692, 1205, 2729], [231, 2742, 1205, 2779], [231, 2791, 1206, 2829], [231, 2841, 1204, 2878], [231, 2891, 1205, 2928], [231, 2941, 1206, 2978], [1282, 292, 2254, 329], [1281, 342, 2255, 379], [1282, 392, 2254, 429], [1283, 442, 2255, 479], [1282, 492, 2254, 529], [1282, 541, 2256, 578], [1283, 591, 2254, 628], [1278, 641, 2092, 678], [1282, 716, 2256, 753], [1281, 766, 2256, 803], [1282, 815, 2254, 852], [1282, 865, 2256, 902], [1282, 915, 2254, 950], [1281, 965, 2253, 1002], [1282, 1015, 2254, 1052], [1281, 1065, 2256, 1102], [1283, 1114, 2258, 1143], [1282, 1164, 2254, 1201], [1282, 1214, 2255, 1251], [1281, 1264, 2255, 1301], [1282, 1314, 2256, 1351], [1282, 1363, 1762, 1392], [1282, 1467, 1828, 1497], [1281, 1546, 2255, 1583], [1282, 1596, 2255, 1633], [1282, 1638, 2253, 1682], [1282, 1695, 2256, 1732], [1282, 1745, 2255, 1782], [1281, 1795, 2254, 1832], [1282, 1845, 2254, 1882], [1282, 1895, 2256, 1932], [1282, 1944, 2255, 1981], [1282, 1994, 2254, 2031], [1282, 2044, 2254, 2081], [1282, 2094, 2255, 2128], [1282, 2143, 2254, 2181], [1281, 2193, 2255, 2230], [1283, 2242, 2255, 2280], [1282, 2292, 2256, 2330], [1281, 2343, 2255, 2380], [1281, 2393, 1969, 2430], [1280, 2467, 2255, 2496], [1282, 2517, 2255, 2552], [1281, 2567, 2254, 2596], [1281, 2617, 2253, 2654], [1282, 2667, 2255, 2696], [1281, 2716, 2253, 2753], [1281, 2766, 2255, 2803], [1281, 2816, 2255, 2853], [1281, 2866, 2254, 2900], [1333, 2937, 1345, 2954], [1350, 2945, 1971, 2977], [603, 199, 1883, 233], [633, 285, 756, 311], [1173, 284, 1852, 318], [631, 327, 899, 361], [1204, 327, 1267, 354], [1381, 327, 1445, 354], [1842, 343, 1852, 346], [634, 368, 889, 395], [1205, 368, 1265, 395], [1382, 368, 1445, 395], [1842, 384, 1852, 387], [631, 410, 820, 436], [1205, 410, 1265, 437], [1382, 410, 1446, 437], [1842, 426, 1852, 429], [633, 453, 885, 480], [1205, 453, 1267, 480], [1382, 454, 1443, 479], [1755, 454, 1853, 484], [633, 495, 1121, 529], [1205, 495, 1268, 521], [1382, 496, 1445, 522], [1770, 496, 1853, 526], [633, 536, 751, 563], [1206, 537, 1267, 563], [1382, 537, 1446, 562], [1821, 536, 1851, 563], [633, 578, 973, 610], [1206, 578, 1266, 605], [1396, 579, 1432, 604], [1836, 578, 1853, 604], [235, 663, 2253, 697], [232, 708, 2255, 742], [232, 754, 2255, 788], [231, 800, 999, 834], [547, 889, 670, 915], [939, 888, 1940, 922], [546, 932, 748, 958], [1029, 933, 1059, 959], [1290, 933, 1321, 959], [1556, 933, 1592, 958], [1817, 933, 1852, 958], [546, 973, 857, 1000], [1027, 974, 1061, 1000], [1290, 974, 1321, 1000], [1556, 974, 1592, 1000], [1818, 974, 1853, 1000], [545, 1015, 842, 1046], [1027, 1016, 1059, 1042], [1288, 1015, 1320, 1042], [1556, 1015, 1591, 1041], [1817, 1015, 1853, 1042], [547, 1056, 886, 1088], [989, 1056, 1097, 1089], [1250, 1056, 1358, 1089], [1556, 1056, 1591, 1082], [1780, 1057, 1889, 1089], [235, 1141, 2255, 1175], [231, 1187, 2255, 1221], [231, 1233, 2242, 1267], [231, 1363, 912, 1400], [231, 1438, 1205, 1475], [232, 1488, 1204, 1517], [230, 1538, 1205, 1575], [231, 1587, 1205, 1624], [231, 1637, 1203, 1666], [232, 1687, 1205, 1724], [232, 1736, 1203, 1774], [231, 1787, 1204, 1824], [231, 1837, 1204, 1874], [231, 1886, 1204, 1923], [231, 1936, 1205, 1973], [231, 1986, 1205, 2023], [230, 2036, 1208, 2073], [231, 2086, 997, 2123], [231, 2199, 504, 2234], [231, 2285, 1203, 2322], [232, 2335, 1205, 2372], [231, 2385, 1205, 2422], [231, 2435, 1203, 2472], [231, 2485, 1205, 2522], [231, 2534, 1203, 2571], [230, 2584, 1208, 2621], [231, 2634, 1204, 2671], [230, 2684, 1204, 2721], [231, 2734, 1203, 2771], [231, 2783, 1203, 2820], [231, 2833, 1203, 2870], [231, 2883, 1206, 2920], [231, 2933, 1205, 2970], [1282, 1363, 2254, 1400], [1281, 1413, 2255, 1450], [1281, 1463, 2253, 1500], [1282, 1513, 1786, 1542], [1281, 1587, 2255, 1624], [1281, 1637, 2253, 1672], [1281, 1687, 2254, 1724], [1281, 1737, 2255, 1774], [1281, 1787, 2255, 1824], [1281, 1837, 2255, 1874], [1281, 1886, 2255, 1923], [1280, 1936, 2254, 1973], [1281, 1986, 2255, 2023], [1280, 2036, 2255, 2073], [1282, 2086, 2071, 2123], [1281, 2199, 1568, 2234], [1280, 2285, 2255, 2322], [1281, 2335, 2254, 2372], [1280, 2385, 2258, 2422], [1280, 2435, 2254, 2472], [1281, 2485, 2254, 2522], [1281, 2534, 2255, 2571], [1282, 2584, 2254, 2621], [1281, 2634, 2255, 2671], [1281, 2684, 2254, 2721], [1281, 2734, 2254, 2771], [1281, 2783, 2254, 2820], [1281, 2833, 2258, 2870], [1281, 2883, 2255, 2920], [1281, 2933, 2175, 2970], [603, 199, 1883, 233], [232, 286, 461, 321], [232, 361, 1202, 395], [273, 402, 1204, 436], [273, 444, 1204, 478], [274, 485, 1204, 519], [273, 527, 1205, 561], [274, 569, 1178, 601], [232, 653, 1204, 687], [272, 694, 1203, 728], [273, 737, 1201, 769], [276, 780, 414, 804], [231, 862, 1205, 896], [272, 903, 1203, 937], [271, 945, 1203, 978], [231, 1029, 1205, 1063], [274, 1071, 1204, 1105], [274, 1112, 1204, 1146], [272, 1154, 449, 1185], [231, 1238, 1203, 1272], [272, 1280, 1203, 1314], [273, 1321, 1205, 1355], [272, 1363, 1017, 1397], [231, 1447, 1203, 1481], [273, 1489, 1205, 1523], [274, 1530, 1206, 1564], [273, 1572, 447, 1603], [231, 1656, 1205, 1690], [272, 1698, 1205, 1732], [267, 1739, 1205, 1773], [272, 1781, 538, 1815], [231, 1865, 1203, 1899], [273, 1907, 1203, 1941], [273, 1949, 354, 1975], [230, 2033, 1205, 2067], [272, 2074, 1205, 2108], [273, 2117, 585, 2150], [231, 2200, 1205, 2234], [273, 2242, 1203, 2276], [273, 2284, 849, 2317], [231, 2368, 1204, 2402], [272, 2409, 1058, 2443], [1123, 2411, 1205, 2436], [269, 2451, 757, 2485], [231, 2535, 1204, 2566], [273, 2576, 1205, 2610], [272, 2618, 1205, 2652], [272, 2660, 1109, 2694], [231, 2744, 1204, 2778], [273, 2785, 1179, 2819], [230, 2870, 1202, 2904], [273, 2911, 1203, 2945], [274, 2953, 1202, 2987], [1280, 294, 2255, 328], [1324, 336, 2254, 370], [1323, 377, 2253, 411], [1323, 420, 1420, 446], [1281, 494, 2255, 528], [1323, 535, 2254, 569], [1323, 577, 2255, 611], [1322, 618, 1976, 652], [1281, 693, 2255, 727], [1323, 734, 2254, 768], [1324, 776, 2255, 810], [1324, 818, 1537, 850], [1282, 892, 2257, 926], [1323, 934, 2254, 968], [1323, 975, 1678, 1008], [1282, 1050, 2253, 1084], [1322, 1091, 2255, 1125], [1324, 1133, 1663, 1166], [1282, 1208, 2254, 1242], [1322, 1249, 2254, 1283], [1323, 1291, 2254, 1325], [1323, 1333, 1829, 1366], [1282, 1407, 2255, 1441], [1324, 1448, 2255, 1482], [1322, 1490, 2256, 1524], [1324, 1531, 2254, 1565], [1322, 1573, 1747, 1607], [1281, 1648, 2255, 1682], [1322, 1689, 2254, 1723], [1323, 1731, 2253, 1765], [1281, 1805, 2254, 1839], [1322, 1847, 2255, 1881], [1322, 1888, 2254, 1922], [1323, 1930, 2253, 1964]]}}}}, {"tool_name": "tesseract", "text": "1410.2455v3 [stat ML] 4 Feb 2016 acxiv BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Stephan Gouws Google Inc., Mountain View, CA, USA Yoshua Bengio SGOUWS @GOOGLE.COM Dept. IRO, Universit\u00e9 de Montr\u00e9al, QC, Canada & Canadian Institute for Advanced Research Greg Corrado Google Inc., Mountain View, CA, USA Abstract We introduce BilBOWA (Bilingual Bag-of- Words without Alignments), a simple and computationally-efficient model for learning bilingual distributed representations of words which can scale to large monolingual datasets and does not require word-aligned parallel train- ing data. Instead it trains directly on monolingual data and extracts a bilingual signal from a smaller set of raw-text sentence-aligned data. This is achieved using a novel sampled bag-of-words cross-lingual objective, which is used to regular- ize two noise-contrastive language models for ef- ficient cross-lingual feature learning. We show that bilingual embeddings learned using the pro- posed model outperform state-of-the-art methods on a cross-lingual document classification task as well as a lexical translation task on WMT11 data. 1. Introduction Raw text data is freely available in many languages, yet labeled data \u2014 e.g. text marked up with parts-of-speech or named-entities \u2014 is expensive and mostly available for English. Although several techniques exist that can learn to map hand-crafted features from one domain to another (Blitzer et al., 2006; Daum\u00e9 ITI, 2009; Pan & Yang, 2010), it is in general non-trivial to come up with good features which generalize well across tasks, and even harder across different languages. It is therefore very desirable to have unsupervised techniques which can learn useful syntactic and semantic features that are invariant to the tasks or lan- Proceedings of the 32\"% International Conference on Machine Learning, Lille, France, 2015. JMLR: W&CP volume 37. Copy- right 2015 by the author(s). guages that we are interested in. Unsupervised distributed representations of words capture important syntactic and semantic information about languages and these techniques have been succesfully applied to a wide range of tasks (Col- lobert et al., 2011; Turian et al., 2010), across many differ- ent languages (Al-Rfow\u2019 et al., 2013). Traditionally, induc- ing these representations involved training a neural network language model (Bengio et al., 2003) which was slow to train. However, contemporary word embedding models are much faster in comparison, and can scale to train on billions of words per day on a single desktop machine (Mnih & Teh, 2012; Mikolov et al., 2013b; Pennington et al., 2014). In all these models, words are represented by learned, real- valued feature vectors referred to as word embeddings and trained from large amounts of raw text. These models have the property that similar embedding vectors are learned for similar words during training. Additionally, the vectors capture rich linguistic relationships such as male-female relationships or verb tenses, as illustrated in Figure 1 (a) and (b). These two properties improve generalization when the embedding vectors are used as features on word- and sentence-level prediction tasks. Distributed representations can also be induced over dif- ferent language-pairs and can serve as an effective way of learning linguistic regularities which generalize across languages, in that words with similar distributional syn- tactic and semantic properties in both languages are rep- resented using similar vectorial representations (i.e. embed nearby in the embedded space, as shown in Figure | (c)). This is especially useful for transferring limited label in- formation from high-resource to low-resource languages, and has been demonstrated to be effective for document classification (Klementiev et al., 2012), outperforming a strong machine-translation baseline; as well as named- entity recognition and machine translation (Zou et al., 2013; Mikolov et al., 2013a). BilBOWA: Fast Bilingual Distributed Representations without Word Alignments parl\u00e9 a. woman march\u00e9 irl mani eee 8 boy femme walk fille talk talke walked homme garcon man yea homme parle ; parl\u00e9 marche marche talked walked fille woman girl femme 1 parle marche talk walk (a) (c) Figure 1. (a & b) Monolingual embeddings have been shown to capture syntactic and semantic features such as noun gender (blue) and verb tense (red). (c) The (idealized) goal of crosslingual embeddings is to capture these relationships across two or more languages. Since these techniques are fundamentally data-driven tech- niques, the quality of the learned representations improves as the size of the training data improves (Mikolov et al., 2013b; Pennington et al., 2014). However, as we will discuss in more detail in \u00a72, there are two significant drawbacks associated with current bilingual embedding methods: they are either very slow to train or they can only exploit parallel training data. The former limits the large-scale application of these techniques, while the latter severely limits the amount of available training data, and furthermore introduces a big domain bias into the learning process, since parallel data is typically only easily available for certain narrow domains (such as parliamentary discus- sions). This paper introduces BiIBOWA (Bilingual Bag-of-Words without Word Alignments), a simple, scalable technique for inducing bilingual word embeddings with a trivial exten- sion to multilingual embeddings. The model is able to leverage essentially unlimited amounts of monolingual raw text. It furthermore does not require any word-level align- ments, but instead extracts a bilingual signal directly from a limited sample of sentence-aligned, raw-text parallel data (e.g. Europarl) which it uses to align embeddings as they are learned over monolingual training data. Our contribu- tions are the following: e We introduce a novel, computationally-efficient sam- pled cross-lingual objective (\u201cBilBOWA-loss\u201d) which is employed to align monolingual embeddings as they are being trained in an online setting. The mono- lingual models can scale to large-scale training sets, thereby avoiding training bias, and the BilBOWA- loss only considers sampled bag-of-words sentence- aligned data at each training step, which scales ex- tremely well and also avoids the need for estimating word-alignments (\u00a73.2); \u00ae we experimentally evaluate the induced cross-lingual embeddings on a document-classification (\u00a75.1) and lexical translation task (85.2), where the method out- performs current state-of-the-art methods, with train- ing time reduced to minutes or hours compared to sey- eral days for prior approaches; we make I e finally, available our efficient C- implementation\u2019 to hopefully stimulate further research on cross-lingual distributed feature learning. 2. Learning Cross-lingual Word Embeddings Monolingual word embedding algorithms (Mikolov et al., 2013b; Pennington et al., 2014) learn useful features about words from raw text (e.g. Fig 1 (a) & (b)). These algo- rithms are trained over large datasets to be able to predict words from the contexts in which they appear. Their work- ing can intuitively be understood as mapping each word to a learned vector in an embedded space, and updating these vectors in an attempt to simultaneously minimize the distance from a word\u2019s vector to the vectors of the words with which it frequently co-occurs. The result of this opti- mization process yields a rich geometrical encoding of the distributional properties of natural language, where words with similar distributional properties cluster together. Due to their general nature, these features work well for several NLP prediction tasks (Collobert et al., 2011; Turian et al., 2010). In the cross-lingual setup, the goal is to learn features which generalize well across different tasks and different languages. The goal is therefore to learn features (embed- dings) for each word such that similar words in each lan- \u2018https: //github.com/gouwsmeister/bilbowa BilBOWA: Fast Bilingual Distributed Representations without Word Alignments guage are assigned similar embeddings (the monolingual objectives), but additionally we also want similar words across languages to have similar representations (the cross- lingual objective). The latter property allows one to use the learned embeddings as features for training a discrimi- native classifier to predict labels in one language (e.g. top- ics, parts-of-speech, or named-entities) where we have la- belled data, and then directly transfer it to a language for which we do not have much labelled data. From an opti- mization perspective, there are several approaches to how one can optimize these two objectives (our classification): OFFLINE ALIGNMENT: The simplest approach is to opti- mize each monolingual objective separately (i.e. train em- beddings on each language separately using any of the sev- eral available off-the-shelve toolkits), and then enforce the cross-lingual constraints as a separate, disjoint, \u2018alignment\u2019 step. The alignment step consists of learning a transforma- tion for projecting the embeddings of words onto the em- beddings of their translation pairs, obtained from a dictio- nary. This was shown to be a viable approach by (Mikolov et al., 2013a) who learned a linear projection from one em- bedding space to the other. It was extended by (Faruqui & Dyer, 2014), who simultanteously projected source and tar- get language embeddings into a joint space using canonical correlation analysis. The advantage of this approach is that itis very fast to learn the embedding alignments. The main drawback of this approach is that it is not clear that a sin- gle transformation (whether linear or nonlinear) can cap- ture the relationships between all words in the source and target languages, and our improved results on the transla- tion task seem to point to the contrary (85.2). Furthermore, an accurate dictionary is required for the language-pair and the method considers only one translation per word, which ignores the rich multi-sense polysemy of natural languages. PARALLEL-ONLY: Alternatively, one may leverage purely sentence-aligned parallel data and train a model to learn similar representations for the aligned sentences. This is the approach followed by the BiCVM (Hermann & Blun- som, 2013) and the bilingual auto-encoder (BAE, (Chan- dar et al., 2014)). The advantage of this approach is that it can be fast when using an efficient noise-contrastive train- ing criterion like that of the BiCVM. The main drawbacks of this method are that it can only train on limited paral- lel data, which is expensive to obtain and not necessarily written in the same style or register as the domain where the features might be applied (i.e. there is a strong domain bias). JOINTLY-TRAINED MODELS: Another approach is to jointly optimize the monolingual objectives \u00a3(-), with the cross-lingual objective enforced as a cross-lingual regu- larizer (see Figure 2 for a schematic). To do this, we define a cross-lingual regularization term ((-), and use it to con- @ Sampled 12 loss En Fr BOW BOW sentences seniences Fr monolingual En monolingual En-Fr paralle\u2019 Figure 2. Schematic of the proposed BilBOWA model architec- ture for inducing bilingual word embeddings. Two monolingual skipgram models are jointly trained while enforcing a sampled \u00a3L2-loss which aligns the embeddings such that translation-pairs are assigned similar embeddings in the two languages. strain monolingual models as they are jointly being trained over the context / and target word wz, training pairs in the dataset D, e.g. \u00a3= min ac,of So SE Li (we, hs 04) +.0(0\u00b0, OF). lef{e,f} w,heD! Y. Y feature learning alignment (1) This formulation captures the intuition that we want to learn representations which model their individual lan- guages well (the first term) while the (-) regularizer en- courages representations to be similar for words that are related across the two languages. Conceptually, this regu- larizer consists of minimizing a distance function between the vector representations r; learned for words w; in the two domains, weighted by how similar they are, i.e. Q(R\u00b0, RS) = S- S- sim(w;, w;) - distance(rf, 7). wiEV* wjyEVi (2) where we use R to denote learned embedding represen- tations, and r; to denote the embedding learned for word w;. In other words, when this weighted sum (and hence its contribution to the total objective) is low, one can be sure that words across languages that are similar (i.e. high sim(w;, w;)) will be embedded nearby each other. This approach was shown to be useful by (Klementiev et al., 2012). Crucially, the advantages of this formulation are that it enables one to train on any available monolin- gual data, which is both more abundant and less biased than the parallel-only approach, since one can train on data which resembles the data one will be applying the learned features to. The disadvantage is that the original model of Klementiev et al. is extremely slow to train. The train- ing complexity stems both from how the authors imple- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments ment their monolingual and cross-lingual objectives. For the monolingual objective, they train a standard neural lan- guage model for which the complexity of the output soft- max layer grows with the output vocabulary size. There- fore, in order to evaluate the model the authors had to re- duce the output vocabulary to only the 3000 most frequent words. The second reason for the slow training time is that the cross-lingual objective considers the interactions between all pairs of words (in the worst case) between the source and target vocabulary at each training step, which scales as the product of the two vocabularies\u201d. In this work, we address these two issues individually. 3. The BiLBOWA Model As discussed in \u00a72, the primary challenges with existing bilingual embedding models are their computational com- plexity (due to an expensive softmax or an expensive reg- ularization term, or both), but most importantly, the strong domain bias that is introduced by models that train only on parallel data such as Europarl. The BilBOWA model is designed to overcome these issues in order to enable computationally-efficient cross-lingual distributed feature learning over large amounts of monolin- gual text. A schematic overview of the model is shown in Figure 2. The two main aspects (discussed in the following sections) are 1. First, similar to (Zou et al., 2013), we leverage ad- vances in monolingual feature learning algorithms by replacing the softmax objective with a more efficient noise-contrastive objective (\u00a73.1), allowing monolin- gual training updates to scale independently of the vo- cabulary size. 2. Second, we introduce a novel computationally- efficient cross-lingual loss which only considers sam- pled, bag-of-words sentence-aligned data for the cross-lingual objective (\u00a73.2). This avoids the need for estimating word alignments, but moreover, the com- putation of the regularization term reduces to only the words in the observed sample (compared to consider- ing the O(V\u201d) worst-case possible interactions at each training step in the naive case). 3.1. Learning Monolingual Features: The \u00a3 term Since we do not care about language modelling, but more about feature learning, an alternative to the softmax is to use a noise-contrastive approach to score valid, observed combinations of words against randomly sampled, unlikely combinations of words. This idea was introduced by Col- lobert and Weston (Collobert et al., 2011) where they opti- \u201cTf we limit each word to align to & words this is still O(V&). mized a margin between the observed score and the noise scores. In their formulation, scores were computed on se- quences of words, but in (Mikolov et al., 2013a) this idea was taken one step further and successfully applied to bag- of-word representations of contexts in their continuous bag- of-words (CBOW) and skipgram models trained using the negative sampling training objective (a simplified version of noise-contrastive estimation (Mnih & Teh, 2012)). Any of these objectives would yield comparable speedup and could be used in our architecture. In this work we opted for the skipgram model trained using negative sampling since it has been shown to learn high-quality monolingual fea- tures. 3.2. Learning Cross-lingual Features: The BiIBOWA-loss (\u00a9 term) Besides learning how words in one language relate to each other, it is equally important for the representations to cap- ture how words between the two languages relate to each other, which we enforce using the Q term in equation 1. In the general bilingual setting, word similarities can be ex- pressed as a matrix A where a;; encodes the translation \u201cscore\u201d of word 7 in one language with word j in the other. In the rest of our discussion we will refer to English and French, and denote all English-specific parameters using e superscript, and all French-specific parameters with f su- perscript. If the -dimensional word embedding row-vectors r; are stacked to form a (V, A\u2019)-dimensional matrix R, then we can express what we will refer to as the exact cross-lingual objective as follows: Qa (R\u00b0RI) = SOSC aisle? \u2014 ef? (3) j 4 =(R\u00b0\u2014R/)'A(R\u00ae\u2014RS). (4) where subscript A indicates that the alignments are fixed (given). A captures the relationships between all V\u00b0 words in English with respect to all V\u2018 words in French, and is indeed also the source of the two main challenges in this formulation, namely: 1. how to derive or learn which words to pair as transla- tion pairs (i.e. deriving/learning A); 2. how to efficiently evaluate Q(-) during training, since naively evaluating it scales as the product of the two vocabulary sizes O(|V\u00b0| - |V4|) at each training step. The cross-lingual objective therefore penalizes the Euclid- ian distance between words in the two embedding spaces (R\u00b0 and R/) proportional to their alignment frequency. Previous work approached this step by performing a word- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments GLOBAL ALIGNMENTS a the.. cat sits dog un le chat =a ips assis chien Requires word-level alignments Expensive O(|V\u00ae|.|V\u2018[) LOCAL ALIGNMENTS cr the cat sits on.. le chat) <\u2019 S assis ] sur 5 2.4 : A \u201c13 a cat anddog.. s\u00a9\u00a2 .sJ rab BTN Requires parallel text Cheap O(|s*|.|s\u2018|) Figure 3. Using global word-alignments for aligning cross-lingual embeddings (equation 3) is costly and scales as the product of the two vocabulary sizes. In contrast, the BilBOWA-loss (equation 7) approximates the global loss by averaging over implicit local co-occurrence statistics in a limited sample of parallel sentence-pairs. alignment step prior to training to learn the alignment ma- trix A. However, performing word alignment requires run- ning Giza++ (Och & Ney, 2003) or FastAlign (Dyer et al., 2013) software and training HMM word-alignment mod- els. This is both computationally costly and also noisy. We would like to learn the translation correspondences without utilizing word alignments. In order to do that, we directly exploit the parallel training data. The main contribution of this work is to approximate the costly Q(-) term, defined in equation 3 in terms of the global word-alignment statistics, using cheaply-obtained local word co-occurrence statistics obtained from raw-text parallel sentence-pairs (i.e. without running a word-alignment step). The main concept is il- lustrated schematically in Figure 3, and discussed in more detail below. As a first step, notice that since the alignment weights can be normalized to sum to one, we can interpret the alignment weights as a distribution and write equation 3 as an expec- tation over the distribution of English and French word- alignment probabilities a;; = P(wf, wt ), Q,(R\u00b0, Rf) = Al )= gym teue wo!) ilies \u2014rF1P] Since the parallel data is paired at the sentence level, we know that translation pairs for the en sentence occur in the jr sentence, but we do not know where. We therefore need a word-alignment model. A naive assumption is to assume that each observed en word can potentially be aligned with each observed fr word (i.e. to assume a uniform word- alignment model), for each word in the observed sentence pairs. Under this assumption, one can then approximate equation 5 by sampling S m-length English and n-length French sentence-pairs (s\u00b0,s) from the parallel training data: O,(RRI) \u00a9 2 S- \u2014 So SS Wee =e IP (s\u00a2,sf)ES wiEs\u00ae wiesf (6) It is important to note that the lengths of the sampled En- glish and French parallel sentences m and n need not be equal, and more importantly m < |V\u00ae| andn < |V/|. Furthermore, notice that under a uniform alignment model, at each training step, each word in the sampled English sen- tence s\u00b0 will be updated towards all words in the French sentence s/. We can precompute this by simply updating each English word towards the mean French bag-of-words sentence-vector. Specifically, we implement equation 6 by sampling only one parallel sentence-pair per training step (i.e. S = 1), and at each training step \u00a2 we optimize the fol- lowing sampled, approximate cross-lingual objective: n \u20ac 1 \u2014 \u20ac 1 a (BER) AI SO ve = SO ele wires? w est where s* denotes the English or French sampled sentence- pair drawn from the parallel corpus. In other words, the BilBOWA-loss minimizes a sampled L-loss between the mean bag-of-words sentence-vectors of the parallel corpus. On its own, this objective is degenerate since all embed- dings would converge to the trivial solution (by collapsing all embeddings to the same value), but coupled as a regu- BilBOWA: Fast Bilingual Distributed Representations without Word Alignments larizer with the monolingual losses, we find that it works very well in practice. By sampling training sentences from the parallel document distribution, this objective efficiently approximates equation 3 (the more two words are observed together in a parallel sentence-pair, the stronger the embed- dings for the two words will be pushed together, i.e. propor- tional to a,;), without having to actually compute the word alignment weights a,;;. 3.3. Parallel subsampling for better results Equation 7 is an approximation of equation 3. As illus- trated in Figure 3, we are really interested in estimating the global word-alignment statistics for a word-pair, i.e. aj;;. However, by sampling words at the sentence-level, the lo- cal alignment statistics are skewed by the words\u2019 unigram frequencies of occurrence in a given sentence (i.e. regard- less of alignment). Since language has a very strong Zipfian distribution we therefore find in practice that equation 7 over-regularizes the frequent words. A simple solution to this is to subsample (discard) words from the parallel sen- tences proportional to their unigram probabilities of occur- rence. In other words, we discard each word from the paral- lel sentences with a probability that depends on its unigram frequency of occurrence. This heavily discards frequent words and effectively flattens the unigram distribution to a uniform distribution. This idea is closely related to the monolingual subsampling employed in the word2vec mod- els, although it is motivated for a different reason in the cross-lingual setting to obtain a better approximation of the global word-alignment statistics from the local sentence- level co-occurrence statistics (see Figure 3). In practice we found this useful to learn finer-grained cross- lingual embeddings for the frequent words. To better illus- trate the effect this has on training, we jointly visualized the top-25 most frequent words in English and German using the t-SNE algorithm. This is illustrated in Figure 4. We show in red the embeddings trained without subsampling and in blue the embeddings for the same words trained us- ing parallel subsampling. As the visualization shows, with- out subsampling frequent words are over-regularized and cluster near the origin. This effect is largely reduced by the proposed subsampling scheme. 4. Implementation and Training Details We implemented our model in C by building on the pop- ular open-source word2vec toolkit\u2019. The implementa- tion launches a monolingual skipgram model as a separate thread for each language, as well as a cross-lingual thread. All threads access the shared embedding parameters asyn- chronously. For training the model, we make use of online Shttps://code.google.com/p/word2vec/ Figure 4. A joint t-SNE visualization of the same 25 most fre- quent English and German words trained without (red, left) and with parallel subsampling (blue, right), illustrating the effect that occurs without parallel subsampling, as frequent words are over- regularized towards the origin. asynchronous stochastic gradient descent (ASGD), where at time step t, parameter 0 is updated as OL 150 Our initial implementation synchronized updates between threads, but we found that simply clipping individual up- dates to [\u20140.1, 0.1] per thread was sufficient to ensure train- ing stability and considerably improved training speed. For monolingual training data, we use the freely available, pre- tokenized Wikipedia datasets (Al-Rfou\u2019 et al., 2013). For cross-lingual training we use the freely-available Europarl v7 corpus (Koehn, 2005). Unlike the approach of (Kle- mentiev et al., 2012) however, we do not need to perform a word-alignment step first. Instead our implementation trains directly on the raw parallel text files obtained af- ter applying the standard preprocessing scripts that come with the data to tokenize, recase and remove all empty sentence-pairs. Embedding matrices were initialized by drawing from a zero mean, unit-variance gaussian distri- bution. The skipgram negative sampling objectives (a sim- plified form of noise-contrastive estimation) require us to sample & noise words per training pair from the unigram P(w) en and fr distributions, and we set k = 15 which has been shown to give good results. g\u00ae \u2014 g@-D _ (8) Doing each training update therefore occurs asyn- chronously across the threads. Monolingual threads each select a context-target (/,w,)-pair for each language and sample & noise words according to their unigram noise dis- tributions. The cross-lingual thread samples a random pair of parallel sentences from the parallel data. Finally, each thread makes an update to all parameters asynchronously according to equation 8, for which gradients are easy to BilBOWA: Fast Bilingual Distributed Representations without Word Alignments compute due to the square-loss of the BilBOWA-loss and the log-linear nature of the skipgram models. The learning rate was set to 0.1, with linear decay. 5. Experiments In this section we present experiments which evaluate the utility of the induced representations. We evaluate the em- beddings in a cross-lingual document classification task which tests semantic transfer of information across lan- guages, as well as a word-level translation task which tests fine-grained lexical transfer. 5.1. Cross-lingual Document Classification We use an exact replication of the cross-lingual document classification (CLDC) setup introduced by Klementiev et al. (Klementiev et al., 2012) to evaluate their cross-lingual embeddings. The CLDC task setup is as follows: The goal is to classify documents in a target language using only la- belled documents in a source language. Specifically, we train an averaged perceptron classifier on the labelled train- ing data in the source language and then attempt to apply the classifier as-is to the target data (known as \u201cdirect trans- fer\u2019). Documents are represented as the tf-idf-weighted sum of the embedding vectors of the words that appear in the documents. Similar to Klementiev, we induce cross-lingual embed- dings for the English-German language pair, and use the in- duced representations to classify a subset of the English and German sections of the Reuters RCV1I/RCV2 multilingual corpora (Lewis et al., 2004) as pertaining to one of four cat- egories: CCAT (Corporate/Industrial), ECAT (Economics), GCAT (Government/Social), and MCAT (Markets). For the classification experiments, 15,000 documents (for each language) were randomly selected from the RCV1/2 corpus, with one third (5,000) used as the test set and the remainder divided into training sets of sizes between 100 and 10,000, and a separate, held-out validation set of 1,000 documents used during the development of our models. Since our setup exactly mirrors Klementiev et al, we use the same baselines, namely: the majority class baseline, glossed (replacing words in the target document by their most frequently aligned words in the source language), and a stronger MT baseline (translating target documents into the source language using an SMT system). Results are summarized in Table 1. In order to make all results comparable, results for all methods reported here were obtained using the same embedding dimensionality of 40 and the same training data. We use the first 500K lines of the English-German Europarl data both as mono- lingual and parallel training data. We use a vocabulary size of 46,678 for English and 47,903 for German. Since our method is motivated as a faster version of the model pro- posed by Klementiev ef al., we note that we significantly improve upon their results, while training in 6 minutes ver- sus the original 10 days (14,400 minutes). This yields a total factor 2, 400 speedup. This demonstrates that the Bil- BOWA loss (equation 7) is both a computationally-efficient and an accurate approximation of the full cross-lingual ob- jective implemented by Klementiev (equation 3). Next, we compare our method to the current state-of-the-art bilingual embedding methods. The current state-of-the-art on this task is 91.8 (en2de) and 72.8 (de2en) reported us- ing the Bilingual Auto-encoder (BAE) model by (Chandar et al., 2014). Hermann et al. (Hermann & Blunsom, 2013) report 83.7 and 71.4 with the BiCVM model. As shown, our model outperforms the BiCVM on both tasks, and out- performs BAEs on German to English to yield a current state-of-the-art result on that task of 75%. The runtime of our method also compares very favorably to other meth- ods. Note that even though the BiCVM method should in principle be as fast or faster than our method, its reported training time here is slightly higher since it was trained for more iterations over the data. 5.2. WMT11 Word Translation We also evaluated the induced cross-lingual embeddings on the word translation task used by Mikolov et al. (Mikolov et al., 2013a) using the publicly-available WMT11 data\u2019. In this task, the authors extracted the 64 most frequent words from the WMT11 English-Spanish data, and then used the online Google Translate service to derive dictio- naries by translating these source words into the target lan- guage (individually for English and Spanish). Since their method requires translation-pairs for training, they used the first 54 most frequent words to learn the \u201ctranslation ma- trix\u201d, and then evaluated their method on the remaining LK words used as a test set. To translate a source word, one finds its & nearest neighbours in the target language em- bedding space, and then evaluate the translation precision PQk as the fraction of target translations that are within the top-/ words returned using the specific method. Our method does not require translation-pairs for training, so we simply test on the same | K test-pairs. We use as baselines the same two methods described in (Mikolov et al., 2013a). Edit Distance ranks words based on their edit-distance. Word Co-occurrence is based on dis- tributional similarity: For each word w, one first constructs a word co-occurrence vector which counts the words with which w co-occurs within a 10-word window in the corpus. The word-count vectors are then mapped from the source to the target language using the dictionary. Finally, for each test word, the word with the most similar vector in the tar- *http://www.statmt.org/wmt11/ BilBOWA: Fast Bilingual Distributed Representations without Word Alignments Method en\u2014>de de\u2014>en | Training Time (min) Majority Baseline 46.8 46.8 - Glossed Baseline 65.1 68.6 - MT Baseline 68.1 67.4 - Klementiev et al. 717.6 711 14,400 Bilingual Auto-encoders (BAEs) 91.8 72.8 4,800 BiCVM 83.7 71.4 15 BilBOWA (this work) 86.5 75 6 Table 1. Classification accuracy and training times for the proposed BilBOWA method compared to Klementiev et al. (Klementiev et al., 2012), Bilingual Auto-encoders (Chandar et al., 2014), and the BiCVM model (Hermann & Blunsom, 2013), on an exact replica of the Reuters cross-lingual document classification task. These methods were all used to induce 40-dimensional embeddings using the same training data. Baseline results are from Klementiev. Method En\u2014Sp P@1 | Sp>En P@1 || En\u2014SpP@5 | Sp>EnP@5 Edit Distance 13 18 24 27 Word Co-occurrence 30 19 20 30 Mikoloy et al., 2013 33 35 51 52 BilIBOWA (this work) 39 (+6) 44 (+9) 51 55 (+3) Table 2. Results for the translation task measured as word translation accuracy (out of 100, higher is better) evaluated on the top-1 and top-5 words as ranked by the method. Cross-lingual embeddings are induced and distance in the embedded space are used to select word translation pairs. +x indicates improvement in absolute precision over the previous state-of-the-art on this task (Mikolov et al., 2013a). get language is selected as its translation. The results on the English-Spanish translation tasks are summarized in Table 2. We induced 40-dimensional em- beddings using the English and Spanish Wikipedias and Europarl as parallel data. Our model improves on both the baselines and on Mikoloy et al.\u2019s method on both tasks and gives a noticeable improvement in accuracy for the P@1 prediction. For the English to Spanish translation, we improve absolute word translation accuracy by 6 per- cent. For the Spanish to English task, we improve abso- lute word translation accuracy by 9 percent. This indi- cates that our model is able to learn fine-grained translation equivalences from the monolingual data by using only the raw-text, sentence-aligned parallel data, despite the lack of word-level alignments or training dictionaries. 6. Discussion The BilBOWA model as introduced in this paper utilizes a sampled Lz bag-of-words cross-lingual loss. This is the main source of the significant speedup over the Klementiev model, allowing training to scale to much larger datasets, which in turn yields more accurate features. We found that the asynchronous implementation significantly speeds up training with no noticeable impact on the quality of the learned embeddings, and the parallel subsampling im- proves the accuracy of the learned features. Getting asyn- chronous training to work required clipping the updates, especially as the dimensionality of the embeddings gets larger. Parallel subsampling makes training more accurate, especially for the frequent words, and therefore turns out to be important both in the monolingual and crosslingual setting. We have motivated the reason for the crosslin- gual setting as helping to uncover a better approximation of the global alignment statistics from the observed local, sentence-level co-occurrences. Despite the speedup, the model is still much slower to use than offline methods like translation matrix (Mikolov et al., 2013a) or multilingual CCA (Faruqui & Dyer, 2014). How- ever, results on the translation task suggest BilBOWA can learn finer-grained cross-lingual relationships than these methods, and can train over much larger monolingual datasets than parallel-only methods. If the goal is to learn high-quality general purpose bilingual embeddings, it is al- ways beneficial to leverage more training data, and hence a hybrid model like BiIBOWA might be a better choice than a parallel-only technique like BiCVM or BAEs. 7. Conclusion We introduce BilBOWA, a computationally-efficient model for inducing bilingual distributed word representations di- rectly from monolingual raw text and a limited amount of parallel data, without requiring word-alignments or dictio- naries. BilBOWA combines advances in training monolin- gual word embeddings with a particularly efficient novel sampled cross-lingual objective. The result is that the re- quired computations per training step scales only with the number of words in the sentences, thereby enabling effi- cient large-scale cross-lingual training. We achieve state- of-the-art results for English-German cross-lingual docu- ment classification whilst obtaining up to three orders of magnitude speedup, and improve upon the previous state of the art in an English-Spanish word-translation task. BilBOWA: Fast Bilingual Distributed Representations without Word Alignments References Al-Rfou\u2019, Rami, Perozzi, Bryan, and Skiena, Steven. Polyglot: Distributed word representations for multilingual nlp. In Pro- ceedings of the Seventeenth Conference on Computational Nat- ural Language Learning, pp. 183-192, Sofia, Bulgaria, Au- gust 2013. Association for Computational Linguistics. URL http://www.aclweb.org/anthology/W13-3520. Bengio, Y, Ducharme, R, and Vincent, P. A neural probabilis- tic language model. Journal of Machine Learning Research, 2003. URL http://ukomec.ac.uk/abstract/CIT/ 412956. Bengio, Yoshua and Senecal, J-S. Adaptive importance sampling to accelerate training of a neural probabilistic language model. Neural Networks, IEEE Transactions on, 19(4):713-722, 2008. Blitzer, J., McDonald, R., and Pereira, F. Domain adaptation with structural correspondence learning. In Conference on Empir- ical Methods in Natural Language Processing, Sydney, Aus- tralia, 2006. Chandar, Sarath, Lauly, Stanislas, Larochelle, Hugo, Khapra, Mitesh M., Ravidran, Balaraman, Raykar, Vikas, and Saha, Amrita. An autoencoder approach to learning bilingual word representations. Proceedings of NIPS 2014, 2014. Collobert, R., Weston, J., Bottou, L., Karlen, M., Kavukcuoglu, K., and Kuksa, P. Natural language processing (almost) from scratch. Journal of Machine Learning Research, 12:2493- 2537, 2011. Daum\u00e9 III, Hal. Frustratingly easy domain adaptation. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics, 2009. Dyer, Chris, Chahuneau, Victor, and Smith, Noah A. A simple, fast, and effective reparameterization of ibm model 2. ACL, 2013. Faruqui, Manaal and Dyer, Chris. Improving vector space word representations using multilingual correlation. In Proceedings of EACL 2014, 2014. Goldberg, Yoav and Levy, Omer. word2vec explained: Deriving mikolov et al.s negative-sampling word-embedding method. arXiv preprint arXiv:1402.3722, 2014. Hermann, Karl Moritz and Blunsom, Phil. Multilingual dis- tributed representations without word alignment. arXiv preprint arXiv: 1312.6173, 2013. Klementiev, Alexandre, Titov, Ivan, and Bhattarai, Binod. In- ducing crosslingual distributed representations of words. In Proceedings of the International Conference on Computational Linguistics (COLING), Bombay, India, December 2012. Koehn, Philipp. Europarl: A parallel corpus for statistical ma- chine translation. In MT summit, volume 5, pp. 79-86, 2005. Lewis, David D, Yang, Yiming, Rose, Tony G, and Li, Fan. Rev1: A new benchmark collection for text categorization research. The Journal of Machine Learning Research, 5:361\u2014397, 2004. Mikolov, Tomas, Le, Quoc V, and Sutskever, Ilya. Exploiting similarities among languages for machine translation. In /n- ternational Conference on Learning Representations (ICLR), 2013a. Mikolov, Tomas, Sutskever, Ilya, Chen, Kai, Corrado, Greg S, and Dean, Jeff. Distributed representations of words and phrases and their compositionality. In Advances in Neural Information Processing Systems, pp. 3111-3119, 2013b. Mnih, Andriy and Teh, Yee Whye. A fast and simple algorithm for training neural probabilistic language models. In Proceed- ings of the 29th International Conference on Machine Learning (ICML), 2012. Och, Franz Josef and Ney, Hermann. A systematic comparison of various statistical alignment models. Computational Linguis- tics, 29(1):19-51, 2003. Pan, Sinno Jialin and Yang, Qiang. A survey on transfer learning. Knowledge and Data Engineering, IEEE Transactions on, 22 (10):1345-1359, 2010. Pennington, Jeffrey, Socher, Richard, and Manning, Christo- pher D. Glove: Global vectors for word representation. Pro- ceedings of the Empiricial Methods in Natural Language Pro- cessing (EMNLP 2014), 12,2014. Turian, J., Ratinov, L., and Bengio, Y. Word representations: A simple and general method for semi-supervised learning. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pp. 384-394. Association for Com- putational Linguistics, 2010. Walker, Alastair J. An efficient method for generating discrete random variables with general distributions. ACM Transac- tions on Mathematical Software (TOMS), 3(3):253-256, 1977. Zou, Will Y, Socher, Richard, Cer, Daniel, and Manning, Christo- pher D. Bilingual word embeddings for phrase-based machine translation. In Proceedings of the 2013 Conference on Empiri- cal Methods in Natural Language Processing (EMNLP), 2013.", "common_format": {"doc_id": "./1410.2455v3.hocr", "tokens": ["1410.2455v3", "[stat", "ML]", "4", "Feb", "2016", "acxiv", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Stephan", "Gouws", "Google", "Inc.,", "Mountain", "View,", "CA,", "USA", "Yoshua", "Bengio", "SGOUWS", "@GOOGLE.COM", "Dept.", "IRO,", "Universit\u00e9", "de", "Montr\u00e9al,", "QC,", "Canada", "&", "Canadian", "Institute", "for", "Advanced", "Research", "Greg", "Corrado", "Google", "Inc.,", "Mountain", "View,", "CA,", "USA", "Abstract", "We", "introduce", "BilBOWA", "(Bilingual", "Bag-of-", "Words", "without", "Alignments),", "a", "simple", "and", "computationally-efficient", "model", "for", "learning", "bilingual", "distributed", "representations", "of", "words", "which", "can", "scale", "to", "large", "monolingual", "datasets", "and", "does", "not", "require", "word-aligned", "parallel", "train-", "ing", "data.", "Instead", "it", "trains", "directly", "on", "monolingual", "data", "and", "extracts", "a", "bilingual", "signal", "from", "a", "smaller", "set", "of", "raw-text", "sentence-aligned", "data.", "This", "is", "achieved", "using", "a", "novel", "sampled", "bag-of-words", "cross-lingual", "objective,", "which", "is", "used", "to", "regular-", "ize", "two", "noise-contrastive", "language", "models", "for", "ef-", "ficient", "cross-lingual", "feature", "learning.", "We", "show", "that", "bilingual", "embeddings", "learned", "using", "the", "pro-", "posed", "model", "outperform", "state-of-the-art", "methods", "on", "a", "cross-lingual", "document", "classification", "task", "as", "well", "as", "a", "lexical", "translation", "task", "on", "WMT11", "data.", "1.", "Introduction", "Raw", "text", "data", "is", "freely", "available", "in", "many", "languages,", "yet", "labeled", "data", "\u2014", "e.g.", "text", "marked", "up", "with", "parts-of-speech", "or", "named-entities", "\u2014", "is", "expensive", "and", "mostly", "available", "for", "English.", "Although", "several", "techniques", "exist", "that", "can", "learn", "to", "map", "hand-crafted", "features", "from", "one", "domain", "to", "another", "(Blitzer", "et", "al.,", "2006;", "Daum\u00e9", "ITI,", "2009;", "Pan", "&", "Yang,", "2010),", "it", "is", "in", "general", "non-trivial", "to", "come", "up", "with", "good", "features", "which", "generalize", "well", "across", "tasks,", "and", "even", "harder", "across", "different", "languages.", "It", "is", "therefore", "very", "desirable", "to", "have", "unsupervised", "techniques", "which", "can", "learn", "useful", "syntactic", "and", "semantic", "features", "that", "are", "invariant", "to", "the", "tasks", "or", "lan-", "Proceedings", "of", "the", "32\"%", "International", "Conference", "on", "Machine", "Learning,", "Lille,", "France,", "2015.", "JMLR:", "W&CP", "volume", "37.", "Copy-", "right", "2015", "by", "the", "author(s).", "guages", "that", "we", "are", "interested", "in.", "Unsupervised", "distributed", "representations", "of", "words", "capture", "important", "syntactic", "and", "semantic", "information", "about", "languages", "and", "these", "techniques", "have", "been", "succesfully", "applied", "to", "a", "wide", "range", "of", "tasks", "(Col-", "lobert", "et", "al.,", "2011;", "Turian", "et", "al.,", "2010),", "across", "many", "differ-", "ent", "languages", "(Al-Rfow\u2019", "et", "al.,", "2013).", "Traditionally,", "induc-", "ing", "these", "representations", "involved", "training", "a", "neural", "network", "language", "model", "(Bengio", "et", "al.,", "2003)", "which", "was", "slow", "to", "train.", "However,", "contemporary", "word", "embedding", "models", "are", "much", "faster", "in", "comparison,", "and", "can", "scale", "to", "train", "on", "billions", "of", "words", "per", "day", "on", "a", "single", "desktop", "machine", "(Mnih", "&", "Teh,", "2012;", "Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014).", "In", "all", "these", "models,", "words", "are", "represented", "by", "learned,", "real-", "valued", "feature", "vectors", "referred", "to", "as", "word", "embeddings", "and", "trained", "from", "large", "amounts", "of", "raw", "text.", "These", "models", "have", "the", "property", "that", "similar", "embedding", "vectors", "are", "learned", "for", "similar", "words", "during", "training.", "Additionally,", "the", "vectors", "capture", "rich", "linguistic", "relationships", "such", "as", "male-female", "relationships", "or", "verb", "tenses,", "as", "illustrated", "in", "Figure", "1", "(a)", "and", "(b).", "These", "two", "properties", "improve", "generalization", "when", "the", "embedding", "vectors", "are", "used", "as", "features", "on", "word-", "and", "sentence-level", "prediction", "tasks.", "Distributed", "representations", "can", "also", "be", "induced", "over", "dif-", "ferent", "language-pairs", "and", "can", "serve", "as", "an", "effective", "way", "of", "learning", "linguistic", "regularities", "which", "generalize", "across", "languages,", "in", "that", "words", "with", "similar", "distributional", "syn-", "tactic", "and", "semantic", "properties", "in", "both", "languages", "are", "rep-", "resented", "using", "similar", "vectorial", "representations", "(i.e.", "embed", "nearby", "in", "the", "embedded", "space,", "as", "shown", "in", "Figure", "|", "(c)).", "This", "is", "especially", "useful", "for", "transferring", "limited", "label", "in-", "formation", "from", "high-resource", "to", "low-resource", "languages,", "and", "has", "been", "demonstrated", "to", "be", "effective", "for", "document", "classification", "(Klementiev", "et", "al.,", "2012),", "outperforming", "a", "strong", "machine-translation", "baseline;", "as", "well", "as", "named-", "entity", "recognition", "and", "machine", "translation", "(Zou", "et", "al.,", "2013;", "Mikolov", "et", "al.,", "2013a).", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "parl\u00e9", "a.", "woman", "march\u00e9", "irl", "mani", "eee", "8", "boy", "femme", "walk", "fille", "talk", "talke", "walked", "homme", "garcon", "man", "yea", "homme", "parle", ";", "parl\u00e9", "marche", "marche", "talked", "walked", "fille", "woman", "girl", "femme", "1", "parle", "marche", "talk", "walk", "(a)", "(c)", "Figure", "1.", "(a", "&", "b)", "Monolingual", "embeddings", "have", "been", "shown", "to", "capture", "syntactic", "and", "semantic", "features", "such", "as", "noun", "gender", "(blue)", "and", "verb", "tense", "(red).", "(c)", "The", "(idealized)", "goal", "of", "crosslingual", "embeddings", "is", "to", "capture", "these", "relationships", "across", "two", "or", "more", "languages.", "Since", "these", "techniques", "are", "fundamentally", "data-driven", "tech-", "niques,", "the", "quality", "of", "the", "learned", "representations", "improves", "as", "the", "size", "of", "the", "training", "data", "improves", "(Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014).", "However,", "as", "we", "will", "discuss", "in", "more", "detail", "in", "\u00a72,", "there", "are", "two", "significant", "drawbacks", "associated", "with", "current", "bilingual", "embedding", "methods:", "they", "are", "either", "very", "slow", "to", "train", "or", "they", "can", "only", "exploit", "parallel", "training", "data.", "The", "former", "limits", "the", "large-scale", "application", "of", "these", "techniques,", "while", "the", "latter", "severely", "limits", "the", "amount", "of", "available", "training", "data,", "and", "furthermore", "introduces", "a", "big", "domain", "bias", "into", "the", "learning", "process,", "since", "parallel", "data", "is", "typically", "only", "easily", "available", "for", "certain", "narrow", "domains", "(such", "as", "parliamentary", "discus-", "sions).", "This", "paper", "introduces", "BiIBOWA", "(Bilingual", "Bag-of-Words", "without", "Word", "Alignments),", "a", "simple,", "scalable", "technique", "for", "inducing", "bilingual", "word", "embeddings", "with", "a", "trivial", "exten-", "sion", "to", "multilingual", "embeddings.", "The", "model", "is", "able", "to", "leverage", "essentially", "unlimited", "amounts", "of", "monolingual", "raw", "text.", "It", "furthermore", "does", "not", "require", "any", "word-level", "align-", "ments,", "but", "instead", "extracts", "a", "bilingual", "signal", "directly", "from", "a", "limited", "sample", "of", "sentence-aligned,", "raw-text", "parallel", "data", "(e.g.", "Europarl)", "which", "it", "uses", "to", "align", "embeddings", "as", "they", "are", "learned", "over", "monolingual", "training", "data.", "Our", "contribu-", "tions", "are", "the", "following:", "e", "We", "introduce", "a", "novel,", "computationally-efficient", "sam-", "pled", "cross-lingual", "objective", "(\u201cBilBOWA-loss\u201d)", "which", "is", "employed", "to", "align", "monolingual", "embeddings", "as", "they", "are", "being", "trained", "in", "an", "online", "setting.", "The", "mono-", "lingual", "models", "can", "scale", "to", "large-scale", "training", "sets,", "thereby", "avoiding", "training", "bias,", "and", "the", "BilBOWA-", "loss", "only", "considers", "sampled", "bag-of-words", "sentence-", "aligned", "data", "at", "each", "training", "step,", "which", "scales", "ex-", "tremely", "well", "and", "also", "avoids", "the", "need", "for", "estimating", "word-alignments", "(\u00a73.2);", "\u00ae", "we", "experimentally", "evaluate", "the", "induced", "cross-lingual", "embeddings", "on", "a", "document-classification", "(\u00a75.1)", "and", "lexical", "translation", "task", "(85.2),", "where", "the", "method", "out-", "performs", "current", "state-of-the-art", "methods,", "with", "train-", "ing", "time", "reduced", "to", "minutes", "or", "hours", "compared", "to", "sey-", "eral", "days", "for", "prior", "approaches;", "we", "make", "I", "e", "finally,", "available", "our", "efficient", "C-", "implementation\u2019", "to", "hopefully", "stimulate", "further", "research", "on", "cross-lingual", "distributed", "feature", "learning.", "2.", "Learning", "Cross-lingual", "Word", "Embeddings", "Monolingual", "word", "embedding", "algorithms", "(Mikolov", "et", "al.,", "2013b;", "Pennington", "et", "al.,", "2014)", "learn", "useful", "features", "about", "words", "from", "raw", "text", "(e.g.", "Fig", "1", "(a)", "&", "(b)).", "These", "algo-", "rithms", "are", "trained", "over", "large", "datasets", "to", "be", "able", "to", "predict", "words", "from", "the", "contexts", "in", "which", "they", "appear.", "Their", "work-", "ing", "can", "intuitively", "be", "understood", "as", "mapping", "each", "word", "to", "a", "learned", "vector", "in", "an", "embedded", "space,", "and", "updating", "these", "vectors", "in", "an", "attempt", "to", "simultaneously", "minimize", "the", "distance", "from", "a", "word\u2019s", "vector", "to", "the", "vectors", "of", "the", "words", "with", "which", "it", "frequently", "co-occurs.", "The", "result", "of", "this", "opti-", "mization", "process", "yields", "a", "rich", "geometrical", "encoding", "of", "the", "distributional", "properties", "of", "natural", "language,", "where", "words", "with", "similar", "distributional", "properties", "cluster", "together.", "Due", "to", "their", "general", "nature,", "these", "features", "work", "well", "for", "several", "NLP", "prediction", "tasks", "(Collobert", "et", "al.,", "2011;", "Turian", "et", "al.,", "2010).", "In", "the", "cross-lingual", "setup,", "the", "goal", "is", "to", "learn", "features", "which", "generalize", "well", "across", "different", "tasks", "and", "different", "languages.", "The", "goal", "is", "therefore", "to", "learn", "features", "(embed-", "dings)", "for", "each", "word", "such", "that", "similar", "words", "in", "each", "lan-", "\u2018https:", "//github.com/gouwsmeister/bilbowa", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "guage", "are", "assigned", "similar", "embeddings", "(the", "monolingual", "objectives),", "but", "additionally", "we", "also", "want", "similar", "words", "across", "languages", "to", "have", "similar", "representations", "(the", "cross-", "lingual", "objective).", "The", "latter", "property", "allows", "one", "to", "use", "the", "learned", "embeddings", "as", "features", "for", "training", "a", "discrimi-", "native", "classifier", "to", "predict", "labels", "in", "one", "language", "(e.g.", "top-", "ics,", "parts-of-speech,", "or", "named-entities)", "where", "we", "have", "la-", "belled", "data,", "and", "then", "directly", "transfer", "it", "to", "a", "language", "for", "which", "we", "do", "not", "have", "much", "labelled", "data.", "From", "an", "opti-", "mization", "perspective,", "there", "are", "several", "approaches", "to", "how", "one", "can", "optimize", "these", "two", "objectives", "(our", "classification):", "OFFLINE", "ALIGNMENT:", "The", "simplest", "approach", "is", "to", "opti-", "mize", "each", "monolingual", "objective", "separately", "(i.e.", "train", "em-", "beddings", "on", "each", "language", "separately", "using", "any", "of", "the", "sev-", "eral", "available", "off-the-shelve", "toolkits),", "and", "then", "enforce", "the", "cross-lingual", "constraints", "as", "a", "separate,", "disjoint,", "\u2018alignment\u2019", "step.", "The", "alignment", "step", "consists", "of", "learning", "a", "transforma-", "tion", "for", "projecting", "the", "embeddings", "of", "words", "onto", "the", "em-", "beddings", "of", "their", "translation", "pairs,", "obtained", "from", "a", "dictio-", "nary.", "This", "was", "shown", "to", "be", "a", "viable", "approach", "by", "(Mikolov", "et", "al.,", "2013a)", "who", "learned", "a", "linear", "projection", "from", "one", "em-", "bedding", "space", "to", "the", "other.", "It", "was", "extended", "by", "(Faruqui", "&", "Dyer,", "2014),", "who", "simultanteously", "projected", "source", "and", "tar-", "get", "language", "embeddings", "into", "a", "joint", "space", "using", "canonical", "correlation", "analysis.", "The", "advantage", "of", "this", "approach", "is", "that", "itis", "very", "fast", "to", "learn", "the", "embedding", "alignments.", "The", "main", "drawback", "of", "this", "approach", "is", "that", "it", "is", "not", "clear", "that", "a", "sin-", "gle", "transformation", "(whether", "linear", "or", "nonlinear)", "can", "cap-", "ture", "the", "relationships", "between", "all", "words", "in", "the", "source", "and", "target", "languages,", "and", "our", "improved", "results", "on", "the", "transla-", "tion", "task", "seem", "to", "point", "to", "the", "contrary", "(85.2).", "Furthermore,", "an", "accurate", "dictionary", "is", "required", "for", "the", "language-pair", "and", "the", "method", "considers", "only", "one", "translation", "per", "word,", "which", "ignores", "the", "rich", "multi-sense", "polysemy", "of", "natural", "languages.", "PARALLEL-ONLY:", "Alternatively,", "one", "may", "leverage", "purely", "sentence-aligned", "parallel", "data", "and", "train", "a", "model", "to", "learn", "similar", "representations", "for", "the", "aligned", "sentences.", "This", "is", "the", "approach", "followed", "by", "the", "BiCVM", "(Hermann", "&", "Blun-", "som,", "2013)", "and", "the", "bilingual", "auto-encoder", "(BAE,", "(Chan-", "dar", "et", "al.,", "2014)).", "The", "advantage", "of", "this", "approach", "is", "that", "it", "can", "be", "fast", "when", "using", "an", "efficient", "noise-contrastive", "train-", "ing", "criterion", "like", "that", "of", "the", "BiCVM.", "The", "main", "drawbacks", "of", "this", "method", "are", "that", "it", "can", "only", "train", "on", "limited", "paral-", "lel", "data,", "which", "is", "expensive", "to", "obtain", "and", "not", "necessarily", "written", "in", "the", "same", "style", "or", "register", "as", "the", "domain", "where", "the", "features", "might", "be", "applied", "(i.e.", "there", "is", "a", "strong", "domain", "bias).", "JOINTLY-TRAINED", "MODELS:", "Another", "approach", "is", "to", "jointly", "optimize", "the", "monolingual", "objectives", "\u00a3(-),", "with", "the", "cross-lingual", "objective", "enforced", "as", "a", "cross-lingual", "regu-", "larizer", "(see", "Figure", "2", "for", "a", "schematic).", "To", "do", "this,", "we", "define", "a", "cross-lingual", "regularization", "term", "((-),", "and", "use", "it", "to", "con-", "@", "Sampled", "12", "loss", "En", "Fr", "BOW", "BOW", "sentences", "seniences", "Fr", "monolingual", "En", "monolingual", "En-Fr", "paralle\u2019", "Figure", "2.", "Schematic", "of", "the", "proposed", "BilBOWA", "model", "architec-", "ture", "for", "inducing", "bilingual", "word", "embeddings.", "Two", "monolingual", "skipgram", "models", "are", "jointly", "trained", "while", "enforcing", "a", "sampled", "\u00a3L2-loss", "which", "aligns", "the", "embeddings", "such", "that", "translation-pairs", "are", "assigned", "similar", "embeddings", "in", "the", "two", "languages.", "strain", "monolingual", "models", "as", "they", "are", "jointly", "being", "trained", "over", "the", "context", "/", "and", "target", "word", "wz,", "training", "pairs", "in", "the", "dataset", "D,", "e.g.", "\u00a3=", "min", "ac,of", "So", "SE", "Li", "(we,", "hs", "04)", "+.0(0\u00b0,", "OF).", "lef{e,f}", "w,heD!", "Y.", "Y", "feature", "learning", "alignment", "(1)", "This", "formulation", "captures", "the", "intuition", "that", "we", "want", "to", "learn", "representations", "which", "model", "their", "individual", "lan-", "guages", "well", "(the", "first", "term)", "while", "the", "(-)", "regularizer", "en-", "courages", "representations", "to", "be", "similar", "for", "words", "that", "are", "related", "across", "the", "two", "languages.", "Conceptually,", "this", "regu-", "larizer", "consists", "of", "minimizing", "a", "distance", "function", "between", "the", "vector", "representations", "r;", "learned", "for", "words", "w;", "in", "the", "two", "domains,", "weighted", "by", "how", "similar", "they", "are,", "i.e.", "Q(R\u00b0,", "RS)", "=", "S-", "S-", "sim(w;,", "w;)", "-", "distance(rf,", "7).", "wiEV*", "wjyEVi", "(2)", "where", "we", "use", "R", "to", "denote", "learned", "embedding", "represen-", "tations,", "and", "r;", "to", "denote", "the", "embedding", "learned", "for", "word", "w;.", "In", "other", "words,", "when", "this", "weighted", "sum", "(and", "hence", "its", "contribution", "to", "the", "total", "objective)", "is", "low,", "one", "can", "be", "sure", "that", "words", "across", "languages", "that", "are", "similar", "(i.e.", "high", "sim(w;,", "w;))", "will", "be", "embedded", "nearby", "each", "other.", "This", "approach", "was", "shown", "to", "be", "useful", "by", "(Klementiev", "et", "al.,", "2012).", "Crucially,", "the", "advantages", "of", "this", "formulation", "are", "that", "it", "enables", "one", "to", "train", "on", "any", "available", "monolin-", "gual", "data,", "which", "is", "both", "more", "abundant", "and", "less", "biased", "than", "the", "parallel-only", "approach,", "since", "one", "can", "train", "on", "data", "which", "resembles", "the", "data", "one", "will", "be", "applying", "the", "learned", "features", "to.", "The", "disadvantage", "is", "that", "the", "original", "model", "of", "Klementiev", "et", "al.", "is", "extremely", "slow", "to", "train.", "The", "train-", "ing", "complexity", "stems", "both", "from", "how", "the", "authors", "imple-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "ment", "their", "monolingual", "and", "cross-lingual", "objectives.", "For", "the", "monolingual", "objective,", "they", "train", "a", "standard", "neural", "lan-", "guage", "model", "for", "which", "the", "complexity", "of", "the", "output", "soft-", "max", "layer", "grows", "with", "the", "output", "vocabulary", "size.", "There-", "fore,", "in", "order", "to", "evaluate", "the", "model", "the", "authors", "had", "to", "re-", "duce", "the", "output", "vocabulary", "to", "only", "the", "3000", "most", "frequent", "words.", "The", "second", "reason", "for", "the", "slow", "training", "time", "is", "that", "the", "cross-lingual", "objective", "considers", "the", "interactions", "between", "all", "pairs", "of", "words", "(in", "the", "worst", "case)", "between", "the", "source", "and", "target", "vocabulary", "at", "each", "training", "step,", "which", "scales", "as", "the", "product", "of", "the", "two", "vocabularies\u201d.", "In", "this", "work,", "we", "address", "these", "two", "issues", "individually.", "3.", "The", "BiLBOWA", "Model", "As", "discussed", "in", "\u00a72,", "the", "primary", "challenges", "with", "existing", "bilingual", "embedding", "models", "are", "their", "computational", "com-", "plexity", "(due", "to", "an", "expensive", "softmax", "or", "an", "expensive", "reg-", "ularization", "term,", "or", "both),", "but", "most", "importantly,", "the", "strong", "domain", "bias", "that", "is", "introduced", "by", "models", "that", "train", "only", "on", "parallel", "data", "such", "as", "Europarl.", "The", "BilBOWA", "model", "is", "designed", "to", "overcome", "these", "issues", "in", "order", "to", "enable", "computationally-efficient", "cross-lingual", "distributed", "feature", "learning", "over", "large", "amounts", "of", "monolin-", "gual", "text.", "A", "schematic", "overview", "of", "the", "model", "is", "shown", "in", "Figure", "2.", "The", "two", "main", "aspects", "(discussed", "in", "the", "following", "sections)", "are", "1.", "First,", "similar", "to", "(Zou", "et", "al.,", "2013),", "we", "leverage", "ad-", "vances", "in", "monolingual", "feature", "learning", "algorithms", "by", "replacing", "the", "softmax", "objective", "with", "a", "more", "efficient", "noise-contrastive", "objective", "(\u00a73.1),", "allowing", "monolin-", "gual", "training", "updates", "to", "scale", "independently", "of", "the", "vo-", "cabulary", "size.", "2.", "Second,", "we", "introduce", "a", "novel", "computationally-", "efficient", "cross-lingual", "loss", "which", "only", "considers", "sam-", "pled,", "bag-of-words", "sentence-aligned", "data", "for", "the", "cross-lingual", "objective", "(\u00a73.2).", "This", "avoids", "the", "need", "for", "estimating", "word", "alignments,", "but", "moreover,", "the", "com-", "putation", "of", "the", "regularization", "term", "reduces", "to", "only", "the", "words", "in", "the", "observed", "sample", "(compared", "to", "consider-", "ing", "the", "O(V\u201d)", "worst-case", "possible", "interactions", "at", "each", "training", "step", "in", "the", "naive", "case).", "3.1.", "Learning", "Monolingual", "Features:", "The", "\u00a3", "term", "Since", "we", "do", "not", "care", "about", "language", "modelling,", "but", "more", "about", "feature", "learning,", "an", "alternative", "to", "the", "softmax", "is", "to", "use", "a", "noise-contrastive", "approach", "to", "score", "valid,", "observed", "combinations", "of", "words", "against", "randomly", "sampled,", "unlikely", "combinations", "of", "words.", "This", "idea", "was", "introduced", "by", "Col-", "lobert", "and", "Weston", "(Collobert", "et", "al.,", "2011)", "where", "they", "opti-", "\u201cTf", "we", "limit", "each", "word", "to", "align", "to", "&", "words", "this", "is", "still", "O(V&).", "mized", "a", "margin", "between", "the", "observed", "score", "and", "the", "noise", "scores.", "In", "their", "formulation,", "scores", "were", "computed", "on", "se-", "quences", "of", "words,", "but", "in", "(Mikolov", "et", "al.,", "2013a)", "this", "idea", "was", "taken", "one", "step", "further", "and", "successfully", "applied", "to", "bag-", "of-word", "representations", "of", "contexts", "in", "their", "continuous", "bag-", "of-words", "(CBOW)", "and", "skipgram", "models", "trained", "using", "the", "negative", "sampling", "training", "objective", "(a", "simplified", "version", "of", "noise-contrastive", "estimation", "(Mnih", "&", "Teh,", "2012)).", "Any", "of", "these", "objectives", "would", "yield", "comparable", "speedup", "and", "could", "be", "used", "in", "our", "architecture.", "In", "this", "work", "we", "opted", "for", "the", "skipgram", "model", "trained", "using", "negative", "sampling", "since", "it", "has", "been", "shown", "to", "learn", "high-quality", "monolingual", "fea-", "tures.", "3.2.", "Learning", "Cross-lingual", "Features:", "The", "BiIBOWA-loss", "(\u00a9", "term)", "Besides", "learning", "how", "words", "in", "one", "language", "relate", "to", "each", "other,", "it", "is", "equally", "important", "for", "the", "representations", "to", "cap-", "ture", "how", "words", "between", "the", "two", "languages", "relate", "to", "each", "other,", "which", "we", "enforce", "using", "the", "Q", "term", "in", "equation", "1.", "In", "the", "general", "bilingual", "setting,", "word", "similarities", "can", "be", "ex-", "pressed", "as", "a", "matrix", "A", "where", "a;;", "encodes", "the", "translation", "\u201cscore\u201d", "of", "word", "7", "in", "one", "language", "with", "word", "j", "in", "the", "other.", "In", "the", "rest", "of", "our", "discussion", "we", "will", "refer", "to", "English", "and", "French,", "and", "denote", "all", "English-specific", "parameters", "using", "e", "superscript,", "and", "all", "French-specific", "parameters", "with", "f", "su-", "perscript.", "If", "the", "-dimensional", "word", "embedding", "row-vectors", "r;", "are", "stacked", "to", "form", "a", "(V,", "A\u2019)-dimensional", "matrix", "R,", "then", "we", "can", "express", "what", "we", "will", "refer", "to", "as", "the", "exact", "cross-lingual", "objective", "as", "follows:", "Qa", "(R\u00b0RI)", "=", "SOSC", "aisle?", "\u2014", "ef?", "(3)", "j", "4", "=(R\u00b0\u2014R/)'A(R\u00ae\u2014RS).", "(4)", "where", "subscript", "A", "indicates", "that", "the", "alignments", "are", "fixed", "(given).", "A", "captures", "the", "relationships", "between", "all", "V\u00b0", "words", "in", "English", "with", "respect", "to", "all", "V\u2018", "words", "in", "French,", "and", "is", "indeed", "also", "the", "source", "of", "the", "two", "main", "challenges", "in", "this", "formulation,", "namely:", "1.", "how", "to", "derive", "or", "learn", "which", "words", "to", "pair", "as", "transla-", "tion", "pairs", "(i.e.", "deriving/learning", "A);", "2.", "how", "to", "efficiently", "evaluate", "Q(-)", "during", "training,", "since", "naively", "evaluating", "it", "scales", "as", "the", "product", "of", "the", "two", "vocabulary", "sizes", "O(|V\u00b0|", "-", "|V4|)", "at", "each", "training", "step.", "The", "cross-lingual", "objective", "therefore", "penalizes", "the", "Euclid-", "ian", "distance", "between", "words", "in", "the", "two", "embedding", "spaces", "(R\u00b0", "and", "R/)", "proportional", "to", "their", "alignment", "frequency.", "Previous", "work", "approached", "this", "step", "by", "performing", "a", "word-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "GLOBAL", "ALIGNMENTS", "a", "the..", "cat", "sits", "dog", "un", "le", "chat", "=a", "ips", "assis", "chien", "Requires", "word-level", "alignments", "Expensive", "O(|V\u00ae|.|V\u2018[)", "LOCAL", "ALIGNMENTS", "cr", "the", "cat", "sits", "on..", "le", "chat)", "<\u2019", "S", "assis", "]", "sur", "5", "2.4", ":", "A", "\u201c13", "a", "cat", "anddog..", "s\u00a9\u00a2", ".sJ", "rab", "BTN", "Requires", "parallel", "text", "Cheap", "O(|s*|.|s\u2018|)", "Figure", "3.", "Using", "global", "word-alignments", "for", "aligning", "cross-lingual", "embeddings", "(equation", "3)", "is", "costly", "and", "scales", "as", "the", "product", "of", "the", "two", "vocabulary", "sizes.", "In", "contrast,", "the", "BilBOWA-loss", "(equation", "7)", "approximates", "the", "global", "loss", "by", "averaging", "over", "implicit", "local", "co-occurrence", "statistics", "in", "a", "limited", "sample", "of", "parallel", "sentence-pairs.", "alignment", "step", "prior", "to", "training", "to", "learn", "the", "alignment", "ma-", "trix", "A.", "However,", "performing", "word", "alignment", "requires", "run-", "ning", "Giza++", "(Och", "&", "Ney,", "2003)", "or", "FastAlign", "(Dyer", "et", "al.,", "2013)", "software", "and", "training", "HMM", "word-alignment", "mod-", "els.", "This", "is", "both", "computationally", "costly", "and", "also", "noisy.", "We", "would", "like", "to", "learn", "the", "translation", "correspondences", "without", "utilizing", "word", "alignments.", "In", "order", "to", "do", "that,", "we", "directly", "exploit", "the", "parallel", "training", "data.", "The", "main", "contribution", "of", "this", "work", "is", "to", "approximate", "the", "costly", "Q(-)", "term,", "defined", "in", "equation", "3", "in", "terms", "of", "the", "global", "word-alignment", "statistics,", "using", "cheaply-obtained", "local", "word", "co-occurrence", "statistics", "obtained", "from", "raw-text", "parallel", "sentence-pairs", "(i.e.", "without", "running", "a", "word-alignment", "step).", "The", "main", "concept", "is", "il-", "lustrated", "schematically", "in", "Figure", "3,", "and", "discussed", "in", "more", "detail", "below.", "As", "a", "first", "step,", "notice", "that", "since", "the", "alignment", "weights", "can", "be", "normalized", "to", "sum", "to", "one,", "we", "can", "interpret", "the", "alignment", "weights", "as", "a", "distribution", "and", "write", "equation", "3", "as", "an", "expec-", "tation", "over", "the", "distribution", "of", "English", "and", "French", "word-", "alignment", "probabilities", "a;;", "=", "P(wf,", "wt", "),", "Q,(R\u00b0,", "Rf)", "=", "Al", ")=", "gym", "teue", "wo!)", "ilies", "\u2014rF1P]", "Since", "the", "parallel", "data", "is", "paired", "at", "the", "sentence", "level,", "we", "know", "that", "translation", "pairs", "for", "the", "en", "sentence", "occur", "in", "the", "jr", "sentence,", "but", "we", "do", "not", "know", "where.", "We", "therefore", "need", "a", "word-alignment", "model.", "A", "naive", "assumption", "is", "to", "assume", "that", "each", "observed", "en", "word", "can", "potentially", "be", "aligned", "with", "each", "observed", "fr", "word", "(i.e.", "to", "assume", "a", "uniform", "word-", "alignment", "model),", "for", "each", "word", "in", "the", "observed", "sentence", "pairs.", "Under", "this", "assumption,", "one", "can", "then", "approximate", "equation", "5", "by", "sampling", "S", "m-length", "English", "and", "n-length", "French", "sentence-pairs", "(s\u00b0,s)", "from", "the", "parallel", "training", "data:", "O,(RRI)", "\u00a9", "2", "S-", "\u2014", "So", "SS", "Wee", "=e", "IP", "(s\u00a2,sf)ES", "wiEs\u00ae", "wiesf", "(6)", "It", "is", "important", "to", "note", "that", "the", "lengths", "of", "the", "sampled", "En-", "glish", "and", "French", "parallel", "sentences", "m", "and", "n", "need", "not", "be", "equal,", "and", "more", "importantly", "m", "<", "|V\u00ae|", "andn", "<", "|V/|.", "Furthermore,", "notice", "that", "under", "a", "uniform", "alignment", "model,", "at", "each", "training", "step,", "each", "word", "in", "the", "sampled", "English", "sen-", "tence", "s\u00b0", "will", "be", "updated", "towards", "all", "words", "in", "the", "French", "sentence", "s/.", "We", "can", "precompute", "this", "by", "simply", "updating", "each", "English", "word", "towards", "the", "mean", "French", "bag-of-words", "sentence-vector.", "Specifically,", "we", "implement", "equation", "6", "by", "sampling", "only", "one", "parallel", "sentence-pair", "per", "training", "step", "(i.e.", "S", "=", "1),", "and", "at", "each", "training", "step", "\u00a2", "we", "optimize", "the", "fol-", "lowing", "sampled,", "approximate", "cross-lingual", "objective:", "n", "\u20ac", "1", "\u2014", "\u20ac", "1", "a", "(BER)", "AI", "SO", "ve", "=", "SO", "ele", "wires?", "w", "est", "where", "s*", "denotes", "the", "English", "or", "French", "sampled", "sentence-", "pair", "drawn", "from", "the", "parallel", "corpus.", "In", "other", "words,", "the", "BilBOWA-loss", "minimizes", "a", "sampled", "L-loss", "between", "the", "mean", "bag-of-words", "sentence-vectors", "of", "the", "parallel", "corpus.", "On", "its", "own,", "this", "objective", "is", "degenerate", "since", "all", "embed-", "dings", "would", "converge", "to", "the", "trivial", "solution", "(by", "collapsing", "all", "embeddings", "to", "the", "same", "value),", "but", "coupled", "as", "a", "regu-", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "larizer", "with", "the", "monolingual", "losses,", "we", "find", "that", "it", "works", "very", "well", "in", "practice.", "By", "sampling", "training", "sentences", "from", "the", "parallel", "document", "distribution,", "this", "objective", "efficiently", "approximates", "equation", "3", "(the", "more", "two", "words", "are", "observed", "together", "in", "a", "parallel", "sentence-pair,", "the", "stronger", "the", "embed-", "dings", "for", "the", "two", "words", "will", "be", "pushed", "together,", "i.e.", "propor-", "tional", "to", "a,;),", "without", "having", "to", "actually", "compute", "the", "word", "alignment", "weights", "a,;;.", "3.3.", "Parallel", "subsampling", "for", "better", "results", "Equation", "7", "is", "an", "approximation", "of", "equation", "3.", "As", "illus-", "trated", "in", "Figure", "3,", "we", "are", "really", "interested", "in", "estimating", "the", "global", "word-alignment", "statistics", "for", "a", "word-pair,", "i.e.", "aj;;.", "However,", "by", "sampling", "words", "at", "the", "sentence-level,", "the", "lo-", "cal", "alignment", "statistics", "are", "skewed", "by", "the", "words\u2019", "unigram", "frequencies", "of", "occurrence", "in", "a", "given", "sentence", "(i.e.", "regard-", "less", "of", "alignment).", "Since", "language", "has", "a", "very", "strong", "Zipfian", "distribution", "we", "therefore", "find", "in", "practice", "that", "equation", "7", "over-regularizes", "the", "frequent", "words.", "A", "simple", "solution", "to", "this", "is", "to", "subsample", "(discard)", "words", "from", "the", "parallel", "sen-", "tences", "proportional", "to", "their", "unigram", "probabilities", "of", "occur-", "rence.", "In", "other", "words,", "we", "discard", "each", "word", "from", "the", "paral-", "lel", "sentences", "with", "a", "probability", "that", "depends", "on", "its", "unigram", "frequency", "of", "occurrence.", "This", "heavily", "discards", "frequent", "words", "and", "effectively", "flattens", "the", "unigram", "distribution", "to", "a", "uniform", "distribution.", "This", "idea", "is", "closely", "related", "to", "the", "monolingual", "subsampling", "employed", "in", "the", "word2vec", "mod-", "els,", "although", "it", "is", "motivated", "for", "a", "different", "reason", "in", "the", "cross-lingual", "setting", "to", "obtain", "a", "better", "approximation", "of", "the", "global", "word-alignment", "statistics", "from", "the", "local", "sentence-", "level", "co-occurrence", "statistics", "(see", "Figure", "3).", "In", "practice", "we", "found", "this", "useful", "to", "learn", "finer-grained", "cross-", "lingual", "embeddings", "for", "the", "frequent", "words.", "To", "better", "illus-", "trate", "the", "effect", "this", "has", "on", "training,", "we", "jointly", "visualized", "the", "top-25", "most", "frequent", "words", "in", "English", "and", "German", "using", "the", "t-SNE", "algorithm.", "This", "is", "illustrated", "in", "Figure", "4.", "We", "show", "in", "red", "the", "embeddings", "trained", "without", "subsampling", "and", "in", "blue", "the", "embeddings", "for", "the", "same", "words", "trained", "us-", "ing", "parallel", "subsampling.", "As", "the", "visualization", "shows,", "with-", "out", "subsampling", "frequent", "words", "are", "over-regularized", "and", "cluster", "near", "the", "origin.", "This", "effect", "is", "largely", "reduced", "by", "the", "proposed", "subsampling", "scheme.", "4.", "Implementation", "and", "Training", "Details", "We", "implemented", "our", "model", "in", "C", "by", "building", "on", "the", "pop-", "ular", "open-source", "word2vec", "toolkit\u2019.", "The", "implementa-", "tion", "launches", "a", "monolingual", "skipgram", "model", "as", "a", "separate", "thread", "for", "each", "language,", "as", "well", "as", "a", "cross-lingual", "thread.", "All", "threads", "access", "the", "shared", "embedding", "parameters", "asyn-", "chronously.", "For", "training", "the", "model,", "we", "make", "use", "of", "online", "Shttps://code.google.com/p/word2vec/", "Figure", "4.", "A", "joint", "t-SNE", "visualization", "of", "the", "same", "25", "most", "fre-", "quent", "English", "and", "German", "words", "trained", "without", "(red,", "left)", "and", "with", "parallel", "subsampling", "(blue,", "right),", "illustrating", "the", "effect", "that", "occurs", "without", "parallel", "subsampling,", "as", "frequent", "words", "are", "over-", "regularized", "towards", "the", "origin.", "asynchronous", "stochastic", "gradient", "descent", "(ASGD),", "where", "at", "time", "step", "t,", "parameter", "0", "is", "updated", "as", "OL", "150", "Our", "initial", "implementation", "synchronized", "updates", "between", "threads,", "but", "we", "found", "that", "simply", "clipping", "individual", "up-", "dates", "to", "[\u20140.1,", "0.1]", "per", "thread", "was", "sufficient", "to", "ensure", "train-", "ing", "stability", "and", "considerably", "improved", "training", "speed.", "For", "monolingual", "training", "data,", "we", "use", "the", "freely", "available,", "pre-", "tokenized", "Wikipedia", "datasets", "(Al-Rfou\u2019", "et", "al.,", "2013).", "For", "cross-lingual", "training", "we", "use", "the", "freely-available", "Europarl", "v7", "corpus", "(Koehn,", "2005).", "Unlike", "the", "approach", "of", "(Kle-", "mentiev", "et", "al.,", "2012)", "however,", "we", "do", "not", "need", "to", "perform", "a", "word-alignment", "step", "first.", "Instead", "our", "implementation", "trains", "directly", "on", "the", "raw", "parallel", "text", "files", "obtained", "af-", "ter", "applying", "the", "standard", "preprocessing", "scripts", "that", "come", "with", "the", "data", "to", "tokenize,", "recase", "and", "remove", "all", "empty", "sentence-pairs.", "Embedding", "matrices", "were", "initialized", "by", "drawing", "from", "a", "zero", "mean,", "unit-variance", "gaussian", "distri-", "bution.", "The", "skipgram", "negative", "sampling", "objectives", "(a", "sim-", "plified", "form", "of", "noise-contrastive", "estimation)", "require", "us", "to", "sample", "&", "noise", "words", "per", "training", "pair", "from", "the", "unigram", "P(w)", "en", "and", "fr", "distributions,", "and", "we", "set", "k", "=", "15", "which", "has", "been", "shown", "to", "give", "good", "results.", "g\u00ae", "\u2014", "g@-D", "_", "(8)", "Doing", "each", "training", "update", "therefore", "occurs", "asyn-", "chronously", "across", "the", "threads.", "Monolingual", "threads", "each", "select", "a", "context-target", "(/,w,)-pair", "for", "each", "language", "and", "sample", "&", "noise", "words", "according", "to", "their", "unigram", "noise", "dis-", "tributions.", "The", "cross-lingual", "thread", "samples", "a", "random", "pair", "of", "parallel", "sentences", "from", "the", "parallel", "data.", "Finally,", "each", "thread", "makes", "an", "update", "to", "all", "parameters", "asynchronously", "according", "to", "equation", "8,", "for", "which", "gradients", "are", "easy", "to", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "compute", "due", "to", "the", "square-loss", "of", "the", "BilBOWA-loss", "and", "the", "log-linear", "nature", "of", "the", "skipgram", "models.", "The", "learning", "rate", "was", "set", "to", "0.1,", "with", "linear", "decay.", "5.", "Experiments", "In", "this", "section", "we", "present", "experiments", "which", "evaluate", "the", "utility", "of", "the", "induced", "representations.", "We", "evaluate", "the", "em-", "beddings", "in", "a", "cross-lingual", "document", "classification", "task", "which", "tests", "semantic", "transfer", "of", "information", "across", "lan-", "guages,", "as", "well", "as", "a", "word-level", "translation", "task", "which", "tests", "fine-grained", "lexical", "transfer.", "5.1.", "Cross-lingual", "Document", "Classification", "We", "use", "an", "exact", "replication", "of", "the", "cross-lingual", "document", "classification", "(CLDC)", "setup", "introduced", "by", "Klementiev", "et", "al.", "(Klementiev", "et", "al.,", "2012)", "to", "evaluate", "their", "cross-lingual", "embeddings.", "The", "CLDC", "task", "setup", "is", "as", "follows:", "The", "goal", "is", "to", "classify", "documents", "in", "a", "target", "language", "using", "only", "la-", "belled", "documents", "in", "a", "source", "language.", "Specifically,", "we", "train", "an", "averaged", "perceptron", "classifier", "on", "the", "labelled", "train-", "ing", "data", "in", "the", "source", "language", "and", "then", "attempt", "to", "apply", "the", "classifier", "as-is", "to", "the", "target", "data", "(known", "as", "\u201cdirect", "trans-", "fer\u2019).", "Documents", "are", "represented", "as", "the", "tf-idf-weighted", "sum", "of", "the", "embedding", "vectors", "of", "the", "words", "that", "appear", "in", "the", "documents.", "Similar", "to", "Klementiev,", "we", "induce", "cross-lingual", "embed-", "dings", "for", "the", "English-German", "language", "pair,", "and", "use", "the", "in-", "duced", "representations", "to", "classify", "a", "subset", "of", "the", "English", "and", "German", "sections", "of", "the", "Reuters", "RCV1I/RCV2", "multilingual", "corpora", "(Lewis", "et", "al.,", "2004)", "as", "pertaining", "to", "one", "of", "four", "cat-", "egories:", "CCAT", "(Corporate/Industrial),", "ECAT", "(Economics),", "GCAT", "(Government/Social),", "and", "MCAT", "(Markets).", "For", "the", "classification", "experiments,", "15,000", "documents", "(for", "each", "language)", "were", "randomly", "selected", "from", "the", "RCV1/2", "corpus,", "with", "one", "third", "(5,000)", "used", "as", "the", "test", "set", "and", "the", "remainder", "divided", "into", "training", "sets", "of", "sizes", "between", "100", "and", "10,000,", "and", "a", "separate,", "held-out", "validation", "set", "of", "1,000", "documents", "used", "during", "the", "development", "of", "our", "models.", "Since", "our", "setup", "exactly", "mirrors", "Klementiev", "et", "al,", "we", "use", "the", "same", "baselines,", "namely:", "the", "majority", "class", "baseline,", "glossed", "(replacing", "words", "in", "the", "target", "document", "by", "their", "most", "frequently", "aligned", "words", "in", "the", "source", "language),", "and", "a", "stronger", "MT", "baseline", "(translating", "target", "documents", "into", "the", "source", "language", "using", "an", "SMT", "system).", "Results", "are", "summarized", "in", "Table", "1.", "In", "order", "to", "make", "all", "results", "comparable,", "results", "for", "all", "methods", "reported", "here", "were", "obtained", "using", "the", "same", "embedding", "dimensionality", "of", "40", "and", "the", "same", "training", "data.", "We", "use", "the", "first", "500K", "lines", "of", "the", "English-German", "Europarl", "data", "both", "as", "mono-", "lingual", "and", "parallel", "training", "data.", "We", "use", "a", "vocabulary", "size", "of", "46,678", "for", "English", "and", "47,903", "for", "German.", "Since", "our", "method", "is", "motivated", "as", "a", "faster", "version", "of", "the", "model", "pro-", "posed", "by", "Klementiev", "ef", "al.,", "we", "note", "that", "we", "significantly", "improve", "upon", "their", "results,", "while", "training", "in", "6", "minutes", "ver-", "sus", "the", "original", "10", "days", "(14,400", "minutes).", "This", "yields", "a", "total", "factor", "2,", "400", "speedup.", "This", "demonstrates", "that", "the", "Bil-", "BOWA", "loss", "(equation", "7)", "is", "both", "a", "computationally-efficient", "and", "an", "accurate", "approximation", "of", "the", "full", "cross-lingual", "ob-", "jective", "implemented", "by", "Klementiev", "(equation", "3).", "Next,", "we", "compare", "our", "method", "to", "the", "current", "state-of-the-art", "bilingual", "embedding", "methods.", "The", "current", "state-of-the-art", "on", "this", "task", "is", "91.8", "(en2de)", "and", "72.8", "(de2en)", "reported", "us-", "ing", "the", "Bilingual", "Auto-encoder", "(BAE)", "model", "by", "(Chandar", "et", "al.,", "2014).", "Hermann", "et", "al.", "(Hermann", "&", "Blunsom,", "2013)", "report", "83.7", "and", "71.4", "with", "the", "BiCVM", "model.", "As", "shown,", "our", "model", "outperforms", "the", "BiCVM", "on", "both", "tasks,", "and", "out-", "performs", "BAEs", "on", "German", "to", "English", "to", "yield", "a", "current", "state-of-the-art", "result", "on", "that", "task", "of", "75%.", "The", "runtime", "of", "our", "method", "also", "compares", "very", "favorably", "to", "other", "meth-", "ods.", "Note", "that", "even", "though", "the", "BiCVM", "method", "should", "in", "principle", "be", "as", "fast", "or", "faster", "than", "our", "method,", "its", "reported", "training", "time", "here", "is", "slightly", "higher", "since", "it", "was", "trained", "for", "more", "iterations", "over", "the", "data.", "5.2.", "WMT11", "Word", "Translation", "We", "also", "evaluated", "the", "induced", "cross-lingual", "embeddings", "on", "the", "word", "translation", "task", "used", "by", "Mikolov", "et", "al.", "(Mikolov", "et", "al.,", "2013a)", "using", "the", "publicly-available", "WMT11", "data\u2019.", "In", "this", "task,", "the", "authors", "extracted", "the", "64", "most", "frequent", "words", "from", "the", "WMT11", "English-Spanish", "data,", "and", "then", "used", "the", "online", "Google", "Translate", "service", "to", "derive", "dictio-", "naries", "by", "translating", "these", "source", "words", "into", "the", "target", "lan-", "guage", "(individually", "for", "English", "and", "Spanish).", "Since", "their", "method", "requires", "translation-pairs", "for", "training,", "they", "used", "the", "first", "54", "most", "frequent", "words", "to", "learn", "the", "\u201ctranslation", "ma-", "trix\u201d,", "and", "then", "evaluated", "their", "method", "on", "the", "remaining", "LK", "words", "used", "as", "a", "test", "set.", "To", "translate", "a", "source", "word,", "one", "finds", "its", "&", "nearest", "neighbours", "in", "the", "target", "language", "em-", "bedding", "space,", "and", "then", "evaluate", "the", "translation", "precision", "PQk", "as", "the", "fraction", "of", "target", "translations", "that", "are", "within", "the", "top-/", "words", "returned", "using", "the", "specific", "method.", "Our", "method", "does", "not", "require", "translation-pairs", "for", "training,", "so", "we", "simply", "test", "on", "the", "same", "|", "K", "test-pairs.", "We", "use", "as", "baselines", "the", "same", "two", "methods", "described", "in", "(Mikolov", "et", "al.,", "2013a).", "Edit", "Distance", "ranks", "words", "based", "on", "their", "edit-distance.", "Word", "Co-occurrence", "is", "based", "on", "dis-", "tributional", "similarity:", "For", "each", "word", "w,", "one", "first", "constructs", "a", "word", "co-occurrence", "vector", "which", "counts", "the", "words", "with", "which", "w", "co-occurs", "within", "a", "10-word", "window", "in", "the", "corpus.", "The", "word-count", "vectors", "are", "then", "mapped", "from", "the", "source", "to", "the", "target", "language", "using", "the", "dictionary.", "Finally,", "for", "each", "test", "word,", "the", "word", "with", "the", "most", "similar", "vector", "in", "the", "tar-", "*http://www.statmt.org/wmt11/", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "Method", "en\u2014>de", "de\u2014>en", "|", "Training", "Time", "(min)", "Majority", "Baseline", "46.8", "46.8", "-", "Glossed", "Baseline", "65.1", "68.6", "-", "MT", "Baseline", "68.1", "67.4", "-", "Klementiev", "et", "al.", "717.6", "711", "14,400", "Bilingual", "Auto-encoders", "(BAEs)", "91.8", "72.8", "4,800", "BiCVM", "83.7", "71.4", "15", "BilBOWA", "(this", "work)", "86.5", "75", "6", "Table", "1.", "Classification", "accuracy", "and", "training", "times", "for", "the", "proposed", "BilBOWA", "method", "compared", "to", "Klementiev", "et", "al.", "(Klementiev", "et", "al.,", "2012),", "Bilingual", "Auto-encoders", "(Chandar", "et", "al.,", "2014),", "and", "the", "BiCVM", "model", "(Hermann", "&", "Blunsom,", "2013),", "on", "an", "exact", "replica", "of", "the", "Reuters", "cross-lingual", "document", "classification", "task.", "These", "methods", "were", "all", "used", "to", "induce", "40-dimensional", "embeddings", "using", "the", "same", "training", "data.", "Baseline", "results", "are", "from", "Klementiev.", "Method", "En\u2014Sp", "P@1", "|", "Sp>En", "P@1", "||", "En\u2014SpP@5", "|", "Sp>EnP@5", "Edit", "Distance", "13", "18", "24", "27", "Word", "Co-occurrence", "30", "19", "20", "30", "Mikoloy", "et", "al.,", "2013", "33", "35", "51", "52", "BilIBOWA", "(this", "work)", "39", "(+6)", "44", "(+9)", "51", "55", "(+3)", "Table", "2.", "Results", "for", "the", "translation", "task", "measured", "as", "word", "translation", "accuracy", "(out", "of", "100,", "higher", "is", "better)", "evaluated", "on", "the", "top-1", "and", "top-5", "words", "as", "ranked", "by", "the", "method.", "Cross-lingual", "embeddings", "are", "induced", "and", "distance", "in", "the", "embedded", "space", "are", "used", "to", "select", "word", "translation", "pairs.", "+x", "indicates", "improvement", "in", "absolute", "precision", "over", "the", "previous", "state-of-the-art", "on", "this", "task", "(Mikolov", "et", "al.,", "2013a).", "get", "language", "is", "selected", "as", "its", "translation.", "The", "results", "on", "the", "English-Spanish", "translation", "tasks", "are", "summarized", "in", "Table", "2.", "We", "induced", "40-dimensional", "em-", "beddings", "using", "the", "English", "and", "Spanish", "Wikipedias", "and", "Europarl", "as", "parallel", "data.", "Our", "model", "improves", "on", "both", "the", "baselines", "and", "on", "Mikoloy", "et", "al.\u2019s", "method", "on", "both", "tasks", "and", "gives", "a", "noticeable", "improvement", "in", "accuracy", "for", "the", "P@1", "prediction.", "For", "the", "English", "to", "Spanish", "translation,", "we", "improve", "absolute", "word", "translation", "accuracy", "by", "6", "per-", "cent.", "For", "the", "Spanish", "to", "English", "task,", "we", "improve", "abso-", "lute", "word", "translation", "accuracy", "by", "9", "percent.", "This", "indi-", "cates", "that", "our", "model", "is", "able", "to", "learn", "fine-grained", "translation", "equivalences", "from", "the", "monolingual", "data", "by", "using", "only", "the", "raw-text,", "sentence-aligned", "parallel", "data,", "despite", "the", "lack", "of", "word-level", "alignments", "or", "training", "dictionaries.", "6.", "Discussion", "The", "BilBOWA", "model", "as", "introduced", "in", "this", "paper", "utilizes", "a", "sampled", "Lz", "bag-of-words", "cross-lingual", "loss.", "This", "is", "the", "main", "source", "of", "the", "significant", "speedup", "over", "the", "Klementiev", "model,", "allowing", "training", "to", "scale", "to", "much", "larger", "datasets,", "which", "in", "turn", "yields", "more", "accurate", "features.", "We", "found", "that", "the", "asynchronous", "implementation", "significantly", "speeds", "up", "training", "with", "no", "noticeable", "impact", "on", "the", "quality", "of", "the", "learned", "embeddings,", "and", "the", "parallel", "subsampling", "im-", "proves", "the", "accuracy", "of", "the", "learned", "features.", "Getting", "asyn-", "chronous", "training", "to", "work", "required", "clipping", "the", "updates,", "especially", "as", "the", "dimensionality", "of", "the", "embeddings", "gets", "larger.", "Parallel", "subsampling", "makes", "training", "more", "accurate,", "especially", "for", "the", "frequent", "words,", "and", "therefore", "turns", "out", "to", "be", "important", "both", "in", "the", "monolingual", "and", "crosslingual", "setting.", "We", "have", "motivated", "the", "reason", "for", "the", "crosslin-", "gual", "setting", "as", "helping", "to", "uncover", "a", "better", "approximation", "of", "the", "global", "alignment", "statistics", "from", "the", "observed", "local,", "sentence-level", "co-occurrences.", "Despite", "the", "speedup,", "the", "model", "is", "still", "much", "slower", "to", "use", "than", "offline", "methods", "like", "translation", "matrix", "(Mikolov", "et", "al.,", "2013a)", "or", "multilingual", "CCA", "(Faruqui", "&", "Dyer,", "2014).", "How-", "ever,", "results", "on", "the", "translation", "task", "suggest", "BilBOWA", "can", "learn", "finer-grained", "cross-lingual", "relationships", "than", "these", "methods,", "and", "can", "train", "over", "much", "larger", "monolingual", "datasets", "than", "parallel-only", "methods.", "If", "the", "goal", "is", "to", "learn", "high-quality", "general", "purpose", "bilingual", "embeddings,", "it", "is", "al-", "ways", "beneficial", "to", "leverage", "more", "training", "data,", "and", "hence", "a", "hybrid", "model", "like", "BiIBOWA", "might", "be", "a", "better", "choice", "than", "a", "parallel-only", "technique", "like", "BiCVM", "or", "BAEs.", "7.", "Conclusion", "We", "introduce", "BilBOWA,", "a", "computationally-efficient", "model", "for", "inducing", "bilingual", "distributed", "word", "representations", "di-", "rectly", "from", "monolingual", "raw", "text", "and", "a", "limited", "amount", "of", "parallel", "data,", "without", "requiring", "word-alignments", "or", "dictio-", "naries.", "BilBOWA", "combines", "advances", "in", "training", "monolin-", "gual", "word", "embeddings", "with", "a", "particularly", "efficient", "novel", "sampled", "cross-lingual", "objective.", "The", "result", "is", "that", "the", "re-", "quired", "computations", "per", "training", "step", "scales", "only", "with", "the", "number", "of", "words", "in", "the", "sentences,", "thereby", "enabling", "effi-", "cient", "large-scale", "cross-lingual", "training.", "We", "achieve", "state-", "of-the-art", "results", "for", "English-German", "cross-lingual", "docu-", "ment", "classification", "whilst", "obtaining", "up", "to", "three", "orders", "of", "magnitude", "speedup,", "and", "improve", "upon", "the", "previous", "state", "of", "the", "art", "in", "an", "English-Spanish", "word-translation", "task.", "BilBOWA:", "Fast", "Bilingual", "Distributed", "Representations", "without", "Word", "Alignments", "References", "Al-Rfou\u2019,", "Rami,", "Perozzi,", "Bryan,", "and", "Skiena,", "Steven.", "Polyglot:", "Distributed", "word", "representations", "for", "multilingual", "nlp.", "In", "Pro-", "ceedings", "of", "the", "Seventeenth", "Conference", "on", "Computational", "Nat-", "ural", "Language", "Learning,", "pp.", "183-192,", "Sofia,", "Bulgaria,", "Au-", "gust", "2013.", "Association", "for", "Computational", "Linguistics.", "URL", "http://www.aclweb.org/anthology/W13-3520.", "Bengio,", "Y,", "Ducharme,", "R,", "and", "Vincent,", "P.", "A", "neural", "probabilis-", "tic", "language", "model.", "Journal", "of", "Machine", "Learning", "Research,", "2003.", "URL", "http://ukomec.ac.uk/abstract/CIT/", "412956.", "Bengio,", "Yoshua", "and", "Senecal,", "J-S.", "Adaptive", "importance", "sampling", "to", "accelerate", "training", "of", "a", "neural", "probabilistic", "language", "model.", "Neural", "Networks,", "IEEE", "Transactions", "on,", "19(4):713-722,", "2008.", "Blitzer,", "J.,", "McDonald,", "R.,", "and", "Pereira,", "F.", "Domain", "adaptation", "with", "structural", "correspondence", "learning.", "In", "Conference", "on", "Empir-", "ical", "Methods", "in", "Natural", "Language", "Processing,", "Sydney,", "Aus-", "tralia,", "2006.", "Chandar,", "Sarath,", "Lauly,", "Stanislas,", "Larochelle,", "Hugo,", "Khapra,", "Mitesh", "M.,", "Ravidran,", "Balaraman,", "Raykar,", "Vikas,", "and", "Saha,", "Amrita.", "An", "autoencoder", "approach", "to", "learning", "bilingual", "word", "representations.", "Proceedings", "of", "NIPS", "2014,", "2014.", "Collobert,", "R.,", "Weston,", "J.,", "Bottou,", "L.,", "Karlen,", "M.,", "Kavukcuoglu,", "K.,", "and", "Kuksa,", "P.", "Natural", "language", "processing", "(almost)", "from", "scratch.", "Journal", "of", "Machine", "Learning", "Research,", "12:2493-", "2537,", "2011.", "Daum\u00e9", "III,", "Hal.", "Frustratingly", "easy", "domain", "adaptation.", "In", "Proceedings", "of", "the", "48th", "Annual", "Meeting", "of", "the", "Association", "for", "Computational", "Linguistics.", "Association", "for", "Computational", "Linguistics,", "2009.", "Dyer,", "Chris,", "Chahuneau,", "Victor,", "and", "Smith,", "Noah", "A.", "A", "simple,", "fast,", "and", "effective", "reparameterization", "of", "ibm", "model", "2.", "ACL,", "2013.", "Faruqui,", "Manaal", "and", "Dyer,", "Chris.", "Improving", "vector", "space", "word", "representations", "using", "multilingual", "correlation.", "In", "Proceedings", "of", "EACL", "2014,", "2014.", "Goldberg,", "Yoav", "and", "Levy,", "Omer.", "word2vec", "explained:", "Deriving", "mikolov", "et", "al.s", "negative-sampling", "word-embedding", "method.", "arXiv", "preprint", "arXiv:1402.3722,", "2014.", "Hermann,", "Karl", "Moritz", "and", "Blunsom,", "Phil.", "Multilingual", "dis-", "tributed", "representations", "without", "word", "alignment.", "arXiv", "preprint", "arXiv:", "1312.6173,", "2013.", "Klementiev,", "Alexandre,", "Titov,", "Ivan,", "and", "Bhattarai,", "Binod.", "In-", "ducing", "crosslingual", "distributed", "representations", "of", "words.", "In", "Proceedings", "of", "the", "International", "Conference", "on", "Computational", "Linguistics", "(COLING),", "Bombay,", "India,", "December", "2012.", "Koehn,", "Philipp.", "Europarl:", "A", "parallel", "corpus", "for", "statistical", "ma-", "chine", "translation.", "In", "MT", "summit,", "volume", "5,", "pp.", "79-86,", "2005.", "Lewis,", "David", "D,", "Yang,", "Yiming,", "Rose,", "Tony", "G,", "and", "Li,", "Fan.", "Rev1:", "A", "new", "benchmark", "collection", "for", "text", "categorization", "research.", "The", "Journal", "of", "Machine", "Learning", "Research,", "5:361\u2014397,", "2004.", "Mikolov,", "Tomas,", "Le,", "Quoc", "V,", "and", "Sutskever,", "Ilya.", "Exploiting", "similarities", "among", "languages", "for", "machine", "translation.", "In", "/n-", "ternational", "Conference", "on", "Learning", "Representations", "(ICLR),", "2013a.", "Mikolov,", "Tomas,", "Sutskever,", "Ilya,", "Chen,", "Kai,", "Corrado,", "Greg", "S,", "and", "Dean,", "Jeff.", "Distributed", "representations", "of", "words", "and", "phrases", "and", "their", "compositionality.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "pp.", "3111-3119,", "2013b.", "Mnih,", "Andriy", "and", "Teh,", "Yee", "Whye.", "A", "fast", "and", "simple", "algorithm", "for", "training", "neural", "probabilistic", "language", "models.", "In", "Proceed-", "ings", "of", "the", "29th", "International", "Conference", "on", "Machine", "Learning", "(ICML),", "2012.", "Och,", "Franz", "Josef", "and", "Ney,", "Hermann.", "A", "systematic", "comparison", "of", "various", "statistical", "alignment", "models.", "Computational", "Linguis-", "tics,", "29(1):19-51,", "2003.", "Pan,", "Sinno", "Jialin", "and", "Yang,", "Qiang.", "A", "survey", "on", "transfer", "learning.", "Knowledge", "and", "Data", "Engineering,", "IEEE", "Transactions", "on,", "22", "(10):1345-1359,", "2010.", "Pennington,", "Jeffrey,", "Socher,", "Richard,", "and", "Manning,", "Christo-", "pher", "D.", "Glove:", "Global", "vectors", "for", "word", "representation.", "Pro-", "ceedings", "of", "the", "Empiricial", "Methods", "in", "Natural", "Language", "Pro-", "cessing", "(EMNLP", "2014),", "12,2014.", "Turian,", "J.,", "Ratinov,", "L.,", "and", "Bengio,", "Y.", "Word", "representations:", "A", "simple", "and", "general", "method", "for", "semi-supervised", "learning.", "In", "Proceedings", "of", "the", "48th", "Annual", "Meeting", "of", "the", "Association", "for", "Computational", "Linguistics,", "pp.", "384-394.", "Association", "for", "Com-", "putational", "Linguistics,", "2010.", "Walker,", "Alastair", "J.", "An", "efficient", "method", "for", "generating", "discrete", "random", "variables", "with", "general", "distributions.", "ACM", "Transac-", "tions", "on", "Mathematical", "Software", "(TOMS),", "3(3):253-256,", "1977.", "Zou,", "Will", "Y,", "Socher,", "Richard,", "Cer,", "Daniel,", "and", "Manning,", "Christo-", "pher", "D.", "Bilingual", "word", "embeddings", "for", "phrase-based", "machine", "translation.", "In", "Proceedings", "of", "the", "2013", "Conference", "on", "Empiri-", "cal", "Methods", "in", "Natural", "Language", "Processing", "(EMNLP),", "2013."], "positions": [[82, 1677, 134, 2110], [81, 1478, 142, 1634], [81, 1326, 142, 1472], [82, 1233, 133, 1279], [81, 1087, 134, 1215], [82, 901, 134, 1068], [83, 2138, 134, 2329], [371, 379, 621, 421], [628, 380, 766, 421], [782, 379, 1012, 432], [1029, 379, 1318, 421], [1336, 379, 1744, 432], [1761, 379, 1956, 421], [1972, 380, 2114, 421], [1098, 454, 1388, 507], [232, 667, 375, 705], [388, 667, 507, 697], [231, 726, 352, 763], [364, 727, 434, 760], [448, 726, 608, 754], [620, 726, 711, 760], [724, 726, 789, 760], [803, 726, 884, 755], [231, 806, 359, 835], [371, 805, 492, 843], [1791, 674, 1938, 696], [1947, 668, 2223, 697], [231, 866, 318, 902], [333, 865, 410, 899], [424, 865, 593, 894], [605, 865, 643, 893], [655, 865, 814, 899], [828, 865, 892, 900], [906, 865, 1029, 894], [1042, 865, 1071, 894], [1084, 865, 1239, 894], [1251, 865, 1385, 893], [1397, 865, 1445, 893], [1456, 865, 1622, 894], [1634, 865, 1784, 893], [232, 944, 319, 982], [332, 944, 481, 974], [231, 1004, 352, 1041], [364, 1005, 434, 1038], [448, 1004, 608, 1032], [620, 1004, 711, 1038], [724, 1004, 789, 1038], [803, 1004, 884, 1033], [625, 1168, 810, 1203], [315, 1246, 367, 1273], [402, 1245, 557, 1273], [592, 1245, 761, 1274], [797, 1245, 963, 1282], [996, 1245, 1121, 1282], [317, 1295, 415, 1324], [453, 1295, 577, 1324], [609, 1295, 820, 1332], [865, 1304, 881, 1323], [919, 1295, 1027, 1332], [1065, 1295, 1122, 1323], [315, 1345, 732, 1382], [767, 1345, 869, 1373], [905, 1345, 953, 1373], [987, 1345, 1122, 1382], [314, 1395, 461, 1432], [487, 1395, 662, 1423], [687, 1395, 936, 1432], [963, 1395, 999, 1423], [1022, 1395, 1120, 1423], [315, 1444, 414, 1472], [434, 1453, 490, 1472], [512, 1444, 592, 1472], [612, 1448, 643, 1472], [663, 1444, 744, 1481], [764, 1444, 972, 1481], [992, 1444, 1120, 1472], [316, 1494, 373, 1522], [386, 1494, 459, 1522], [473, 1498, 524, 1522], [536, 1494, 653, 1531], [666, 1494, 885, 1531], [897, 1494, 1021, 1531], [1034, 1494, 1121, 1522], [315, 1544, 366, 1581], [376, 1544, 451, 1572], [468, 1544, 586, 1572], [596, 1544, 618, 1572], [628, 1544, 717, 1572], [728, 1544, 853, 1581], [864, 1553, 903, 1572], [914, 1544, 1122, 1581], [315, 1594, 382, 1622], [393, 1594, 450, 1622], [460, 1598, 585, 1622], [597, 1603, 613, 1622], [622, 1594, 769, 1631], [780, 1594, 876, 1631], [886, 1594, 965, 1622], [976, 1603, 992, 1622], [1002, 1594, 1123, 1622], [316, 1648, 359, 1672], [379, 1644, 415, 1672], [432, 1648, 568, 1672], [589, 1644, 866, 1681], [886, 1644, 961, 1672], [1003, 1644, 1074, 1672], [1096, 1644, 1120, 1672], [316, 1693, 459, 1722], [480, 1693, 569, 1730], [592, 1702, 608, 1721], [630, 1693, 720, 1722], [743, 1693, 878, 1730], [899, 1693, 1120, 1730], [315, 1743, 527, 1780], [540, 1743, 697, 1780], [712, 1743, 812, 1771], [824, 1743, 849, 1771], [862, 1743, 938, 1771], [950, 1747, 981, 1771], [993, 1743, 1121, 1780], [315, 1793, 361, 1821], [372, 1797, 432, 1821], [442, 1793, 723, 1822], [733, 1793, 881, 1830], [892, 1793, 994, 1821], [996, 1793, 1068, 1821], [1077, 1793, 1121, 1821], [315, 1843, 417, 1871], [433, 1843, 646, 1880], [663, 1843, 777, 1871], [794, 1843, 936, 1880], [967, 1844, 1020, 1871], [1038, 1843, 1122, 1871], [315, 1893, 375, 1921], [387, 1893, 534, 1930], [547, 1893, 744, 1930], [758, 1893, 879, 1921], [890, 1893, 980, 1930], [993, 1893, 1042, 1921], [1053, 1902, 1121, 1930], [314, 1943, 410, 1980], [420, 1943, 511, 1971], [512, 1943, 718, 1980], [729, 1943, 973, 1971], [983, 1943, 1120, 1971], [315, 2001, 354, 2020], [366, 2001, 382, 2020], [392, 1992, 605, 2029], [615, 1992, 766, 2020], [767, 1992, 1003, 2020], [1013, 1992, 1079, 2020], [1090, 2001, 1120, 2020], [315, 2042, 384, 2070], [396, 2051, 426, 2070], [439, 2051, 455, 2070], [465, 2042, 573, 2070], [583, 2042, 757, 2070], [767, 2042, 833, 2070], [842, 2051, 882, 2070], [892, 2042, 1009, 2070], [1019, 2042, 1119, 2070], [233, 2187, 265, 2222], [281, 2187, 550, 2222], [231, 2275, 305, 2302], [323, 2278, 383, 2302], [401, 2274, 468, 2302], [486, 2274, 510, 2302], [529, 2274, 624, 2311], [643, 2274, 789, 2303], [806, 2274, 837, 2302], [854, 2283, 944, 2311], [962, 2274, 1135, 2311], [1156, 2278, 1205, 2311], [231, 2324, 350, 2352], [370, 2324, 438, 2352], [457, 2342, 478, 2344], [497, 2333, 552, 2361], [575, 2328, 636, 2352], [656, 2324, 778, 2352], [797, 2333, 838, 2361], [858, 2324, 930, 2352], [950, 2324, 1205, 2361], [231, 2383, 265, 2402], [280, 2374, 522, 2402], [538, 2392, 559, 2394], [574, 2374, 599, 2402], [616, 2374, 778, 2411], [795, 2374, 852, 2402], [868, 2374, 980, 2411], [997, 2374, 1142, 2403], [1158, 2374, 1206, 2402], [231, 2424, 364, 2461], [392, 2424, 547, 2461], [564, 2424, 677, 2453], [693, 2424, 867, 2461], [884, 2424, 960, 2452], [976, 2424, 1037, 2452], [1052, 2433, 1108, 2452], [1124, 2424, 1205, 2452], [231, 2477, 262, 2501], [277, 2482, 347, 2510], [361, 2473, 570, 2501], [586, 2473, 714, 2501], [730, 2473, 810, 2501], [825, 2482, 883, 2501], [898, 2473, 1021, 2501], [1036, 2477, 1067, 2501], [1083, 2473, 1206, 2501], [232, 2523, 357, 2558], [369, 2527, 398, 2551], [411, 2523, 458, 2557], [472, 2523, 563, 2557], [577, 2524, 677, 2551], [679, 2523, 757, 2557], [771, 2523, 862, 2557], [876, 2524, 936, 2551], [950, 2523, 979, 2552], [992, 2524, 1085, 2560], [1099, 2523, 1203, 2558], [231, 2573, 253, 2601], [269, 2573, 293, 2601], [311, 2573, 342, 2601], [358, 2573, 478, 2610], [494, 2573, 667, 2602], [683, 2577, 713, 2601], [729, 2582, 818, 2601], [833, 2582, 873, 2610], [890, 2573, 962, 2601], [978, 2573, 1059, 2610], [1075, 2573, 1203, 2601], [231, 2623, 331, 2651], [344, 2623, 513, 2660], [525, 2623, 595, 2651], [609, 2632, 709, 2651], [723, 2623, 813, 2657], [828, 2623, 885, 2651], [898, 2632, 973, 2652], [985, 2623, 1091, 2651], [1104, 2632, 1203, 2651], [231, 2673, 372, 2701], [387, 2673, 559, 2710], [587, 2674, 611, 2701], [627, 2673, 651, 2701], [669, 2673, 817, 2701], [832, 2682, 904, 2710], [919, 2673, 1068, 2701], [1083, 2677, 1114, 2701], [1129, 2673, 1205, 2702], [230, 2722, 449, 2759], [465, 2722, 640, 2759], [657, 2722, 757, 2750], [773, 2731, 829, 2750], [845, 2722, 927, 2750], [942, 2722, 1043, 2750], [1060, 2722, 1204, 2759], [232, 2772, 290, 2800], [304, 2772, 448, 2800], [462, 2772, 590, 2800], [604, 2772, 665, 2800], [679, 2781, 727, 2800], [740, 2772, 883, 2801], [896, 2776, 927, 2800], [940, 2772, 989, 2800], [1002, 2772, 1082, 2800], [1096, 2781, 1130, 2800], [1142, 2772, 1204, 2800], [231, 2849, 415, 2883], [432, 2850, 466, 2883], [476, 2850, 519, 2875], [540, 2842, 615, 2876], [633, 2850, 830, 2875], [847, 2850, 1015, 2883], [1033, 2859, 1067, 2875], [1083, 2850, 1213, 2875], [230, 2893, 374, 2925], [388, 2892, 465, 2922], [479, 2892, 587, 2922], [602, 2892, 682, 2918], [700, 2892, 803, 2917], [817, 2892, 926, 2918], [938, 2892, 1048, 2917], [1061, 2892, 1104, 2917], [1122, 2892, 1213, 2925], [230, 2933, 301, 2966], [311, 2933, 382, 2959], [394, 2932, 431, 2966], [442, 2933, 486, 2958], [497, 2933, 638, 2965], [1282, 1183, 1379, 1211], [1382, 1174, 1469, 1202], [1482, 1183, 1529, 1202], [1544, 1183, 1592, 1202], [1605, 1174, 1765, 1202], [1778, 1174, 1816, 1202], [1837, 1174, 2064, 1211], [2077, 1174, 2257, 1203], [1280, 1224, 1530, 1261], [1549, 1224, 1585, 1252], [1600, 1224, 1698, 1252], [1717, 1228, 1838, 1261], [1855, 1224, 2015, 1261], [2034, 1224, 2178, 1261], [2198, 1224, 2255, 1252], [1282, 1274, 1427, 1302], [1437, 1274, 1632, 1302], [1643, 1274, 1733, 1302], [1743, 1274, 1905, 1311], [1918, 1274, 1975, 1302], [1985, 1274, 2069, 1302], [2079, 1274, 2253, 1311], [1280, 1324, 1357, 1353], [1366, 1324, 1443, 1352], [1454, 1324, 1638, 1361], [1649, 1324, 1769, 1361], [1779, 1328, 1809, 1352], [1820, 1333, 1836, 1352], [1846, 1324, 1925, 1352], [1934, 1333, 2025, 1361], [2035, 1324, 2071, 1352], [2078, 1324, 2158, 1352], [2170, 1324, 2254, 1359], [1281, 1373, 1377, 1401], [1389, 1377, 1417, 1401], [1431, 1373, 1477, 1407], [1491, 1373, 1582, 1407], [1596, 1373, 1703, 1401], [1716, 1377, 1744, 1401], [1757, 1373, 1804, 1407], [1818, 1373, 1922, 1408], [1937, 1382, 2036, 1401], [2050, 1382, 2140, 1410], [2152, 1373, 2254, 1401], [1281, 1427, 1331, 1451], [1343, 1423, 1505, 1460], [1520, 1423, 1669, 1458], [1673, 1423, 1724, 1451], [1737, 1423, 1783, 1457], [1797, 1423, 1900, 1458], [1917, 1423, 2137, 1460], [2150, 1423, 2254, 1451], [1281, 1473, 1333, 1510], [1343, 1473, 1426, 1501], [1435, 1473, 1684, 1510], [1695, 1473, 1815, 1502], [1817, 1473, 1973, 1510], [1984, 1482, 2000, 1501], [2009, 1473, 2111, 1501], [2121, 1473, 2256, 1501], [1281, 1523, 1430, 1560], [1446, 1523, 1549, 1551], [1566, 1523, 1697, 1560], [1714, 1527, 1742, 1551], [1760, 1523, 1806, 1557], [1824, 1523, 1918, 1558], [1936, 1523, 2036, 1551], [2053, 1532, 2114, 1551], [2133, 1523, 2207, 1551], [2224, 1527, 2255, 1551], [1281, 1573, 1364, 1601], [1381, 1574, 1535, 1607], [1548, 1577, 1777, 1610], [1788, 1573, 1871, 1601], [1883, 1573, 2065, 1610], [2076, 1573, 2193, 1601], [2207, 1582, 2255, 1601], [1281, 1632, 1351, 1651], [1352, 1623, 1473, 1651], [1481, 1623, 1512, 1651], [1522, 1623, 1722, 1660], [1735, 1623, 1792, 1651], [1802, 1632, 1858, 1651], [1868, 1623, 1930, 1651], [1932, 1627, 1989, 1651], [1999, 1623, 2073, 1651], [2082, 1632, 2122, 1651], [2131, 1623, 2253, 1651], [1281, 1672, 1317, 1700], [1331, 1672, 1429, 1700], [1445, 1681, 1499, 1709], [1514, 1672, 1572, 1709], [1589, 1681, 1629, 1700], [1646, 1681, 1662, 1700], [1679, 1672, 1776, 1709], [1792, 1672, 1919, 1709], [1936, 1672, 2075, 1700], [2107, 1672, 2208, 1707], [2225, 1672, 2254, 1701], [1281, 1722, 1350, 1756], [1364, 1722, 1455, 1756], [1469, 1722, 1589, 1750], [1590, 1726, 1650, 1751], [1663, 1722, 1709, 1756], [1723, 1722, 1834, 1756], [1848, 1722, 2015, 1759], [2017, 1726, 2076, 1750], [2089, 1722, 2136, 1756], [2149, 1722, 2252, 1757], [1281, 1773, 1314, 1800], [1327, 1772, 1366, 1800], [1378, 1772, 1461, 1800], [1473, 1772, 1600, 1806], [1613, 1772, 1711, 1800], [1725, 1781, 1774, 1800], [1784, 1772, 1975, 1809], [1985, 1772, 2026, 1809], [2038, 1772, 2158, 1800], [2161, 1772, 2254, 1806], [1281, 1822, 1389, 1851], [1402, 1822, 1516, 1850], [1529, 1826, 1645, 1851], [1659, 1822, 1789, 1850], [1802, 1826, 1833, 1850], [1847, 1831, 1877, 1850], [1892, 1822, 1976, 1851], [1987, 1822, 2183, 1859], [2198, 1822, 2255, 1850], [1281, 1872, 1395, 1900], [1407, 1872, 1486, 1900], [1497, 1872, 1578, 1909], [1590, 1876, 1727, 1900], [1740, 1872, 1776, 1900], [1783, 1881, 1844, 1900], [1856, 1876, 1924, 1900], [1941, 1872, 2038, 1900], [2050, 1872, 2167, 1900], [2179, 1872, 2255, 1901], [1281, 1921, 1331, 1949], [1341, 1925, 1481, 1958], [1493, 1921, 1554, 1949], [1567, 1921, 1680, 1949], [1691, 1921, 1874, 1958], [1886, 1925, 2002, 1950], [2016, 1930, 2064, 1949], [2076, 1921, 2196, 1949], [2208, 1921, 2256, 1949], [1282, 1971, 1396, 1999], [1414, 1971, 1512, 1999], [1533, 1971, 1639, 2008], [1659, 1971, 1794, 2008], [1832, 1971, 2046, 2008], [2069, 1971, 2118, 1999], [2137, 1975, 2253, 2000], [1281, 2025, 1402, 2058], [1420, 2021, 1484, 2049], [1503, 2021, 1656, 2058], [1675, 2021, 1885, 2058], [1906, 2021, 1980, 2049], [2000, 2030, 2031, 2049], [2051, 2021, 2254, 2058], [1280, 2071, 1491, 2108], [1509, 2080, 1542, 2099], [1558, 2071, 1628, 2100], [1646, 2075, 1755, 2105], [1775, 2080, 1805, 2099], [1823, 2071, 1988, 2099], [2004, 2071, 2035, 2099], [2051, 2071, 2158, 2108], [2179, 2071, 2190, 2099], [2211, 2071, 2254, 2106], [1282, 2121, 1340, 2149], [1352, 2121, 1405, 2156], [1422, 2121, 1519, 2149], [1530, 2125, 1590, 2149], [1600, 2121, 1764, 2158], [1776, 2121, 1912, 2158], [1922, 2121, 2156, 2158], [2167, 2121, 2255, 2149], [1281, 2170, 1331, 2198], [1346, 2170, 1529, 2207], [1545, 2174, 1661, 2199], [1680, 2179, 1728, 2198], [1742, 2170, 1818, 2198], [1835, 2179, 1865, 2198], [1882, 2170, 2011, 2198], [2028, 2179, 2068, 2198], [2084, 2170, 2180, 2198], [2198, 2170, 2255, 2198], [1282, 2220, 1516, 2249], [1527, 2220, 1694, 2257], [1706, 2220, 1795, 2248], [1281, 2295, 1466, 2323], [1482, 2295, 1732, 2332], [1751, 2304, 1807, 2323], [1825, 2295, 1889, 2323], [1906, 2295, 1945, 2323], [1962, 2295, 2092, 2323], [2110, 2305, 2183, 2324], [2199, 2295, 2254, 2332], [1274, 2345, 1376, 2382], [1395, 2345, 1644, 2382], [1665, 2345, 1722, 2373], [1741, 2354, 1797, 2373], [1817, 2354, 1901, 2374], [1921, 2354, 1951, 2373], [1973, 2354, 2009, 2373], [2028, 2345, 2169, 2374], [2188, 2354, 2255, 2382], [1281, 2395, 1317, 2423], [1331, 2395, 1465, 2432], [1481, 2395, 1634, 2432], [1650, 2395, 1834, 2432], [1851, 2395, 1951, 2423], [1968, 2395, 2137, 2432], [2154, 2404, 2253, 2423], [1281, 2444, 1455, 2481], [1477, 2444, 1507, 2472], [1526, 2444, 1587, 2472], [1606, 2444, 1704, 2472], [1724, 2444, 1796, 2472], [1816, 2444, 1929, 2472], [1947, 2444, 2166, 2472], [2186, 2453, 2254, 2481], [1281, 2494, 1369, 2522], [1388, 2494, 1445, 2522], [1463, 2494, 1607, 2522], [1624, 2494, 1788, 2531], [1806, 2494, 1836, 2522], [1852, 2494, 1925, 2522], [1942, 2494, 2105, 2531], [2125, 2503, 2173, 2522], [2189, 2503, 2254, 2531], [1280, 2544, 1418, 2572], [1429, 2544, 1518, 2581], [1531, 2544, 1644, 2572], [1655, 2544, 1798, 2573], [1809, 2544, 2058, 2581], [2072, 2544, 2131, 2579], [2146, 2544, 2255, 2572], [1281, 2594, 1393, 2631], [1408, 2594, 1438, 2622], [1453, 2594, 1502, 2622], [1517, 2594, 1665, 2622], [1667, 2594, 1800, 2631], [1818, 2603, 1849, 2622], [1866, 2594, 1970, 2622], [1985, 2594, 2016, 2622], [2031, 2594, 2138, 2631], [2156, 2594, 2167, 2622], [2187, 2594, 2252, 2629], [1281, 2644, 1352, 2672], [1370, 2644, 1395, 2672], [1413, 2644, 1577, 2681], [1593, 2644, 1694, 2672], [1710, 2644, 1758, 2672], [1774, 2644, 1965, 2681], [1982, 2644, 2098, 2672], [2115, 2644, 2194, 2672], [2210, 2644, 2254, 2672], [1281, 2694, 1443, 2722], [1461, 2694, 1540, 2722], [1556, 2694, 1784, 2731], [1801, 2698, 1832, 2722], [1849, 2694, 2063, 2722], [2080, 2694, 2253, 2731], [1282, 2743, 1340, 2771], [1357, 2743, 1410, 2771], [1429, 2743, 1506, 2771], [1525, 2743, 1746, 2771], [1765, 2747, 1795, 2771], [1812, 2743, 1851, 2771], [1869, 2743, 2010, 2772], [2028, 2743, 2076, 2771], [2093, 2743, 2255, 2771], [1281, 2793, 1497, 2821], [1517, 2793, 1720, 2828], [1739, 2797, 1768, 2821], [1788, 2793, 1834, 2827], [1855, 2793, 1959, 2828], [1981, 2793, 2219, 2830], [2239, 2802, 2255, 2821], [1282, 2847, 1384, 2880], [1406, 2843, 1734, 2871], [1755, 2843, 1900, 2877], [1931, 2852, 1961, 2871], [1985, 2843, 2055, 2871], [2078, 2852, 2108, 2871], [2132, 2843, 2254, 2871], [1281, 2893, 1374, 2930], [1397, 2893, 1585, 2930], [1610, 2893, 1667, 2921], [1691, 2893, 1830, 2921], [1854, 2893, 2027, 2921], [2052, 2893, 2130, 2928], [2154, 2897, 2182, 2921], [2207, 2893, 2253, 2927], [1281, 2943, 1373, 2977], [1386, 2943, 1507, 2971], [1508, 2947, 1567, 2972], [1580, 2943, 1626, 2977], [1640, 2943, 1762, 2978], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [1166, 339, 1236, 368], [450, 395, 600, 446], [625, 379, 729, 396], [1113, 380, 1217, 405], [691, 416, 716, 440], [390, 448, 449, 466], [479, 423, 629, 475], [673, 423, 687, 446], [426, 481, 476, 510], [1006, 467, 1105, 492], [743, 513, 807, 538], [1089, 499, 1138, 525], [788, 552, 839, 576], [499, 637, 567, 661], [550, 684, 648, 709], [1035, 682, 1141, 706], [1116, 732, 1210, 754], [1782, 379, 1842, 396], [1887, 354, 2025, 409], [1817, 407, 1924, 432], [1416, 443, 1485, 473], [1818, 473, 1821, 478], [1626, 480, 1695, 511], [1721, 473, 1824, 497], [1323, 500, 1427, 525], [1643, 514, 1729, 539], [1739, 516, 1837, 540], [1999, 536, 2049, 561], [1902, 582, 2005, 599], [2033, 573, 2075, 602], [1937, 609, 2036, 634], [1687, 560, 1805, 651], [1651, 670, 1720, 699], [1744, 673, 1848, 697], [1643, 708, 1694, 732], [1779, 708, 1842, 732], [525, 864, 576, 909], [1851, 864, 1900, 909], [232, 1025, 328, 1058], [342, 1025, 363, 1050], [377, 1025, 404, 1056], [416, 1025, 442, 1050], [452, 1024, 482, 1057], [493, 1025, 686, 1058], [697, 1024, 875, 1058], [886, 1025, 955, 1050], [965, 1024, 1035, 1050], [1048, 1025, 1142, 1050], [1153, 1028, 1180, 1050], [1192, 1028, 1300, 1058], [1313, 1025, 1442, 1058], [1454, 1025, 1506, 1050], [1519, 1025, 1648, 1050], [1661, 1024, 1776, 1050], [1790, 1025, 1855, 1050], [1867, 1033, 1895, 1050], [1908, 1033, 1981, 1050], [1992, 1025, 2093, 1058], [2105, 1024, 2190, 1057], [2203, 1025, 2255, 1050], [232, 1070, 295, 1096], [307, 1074, 382, 1096], [394, 1071, 471, 1103], [487, 1071, 525, 1103], [537, 1071, 594, 1096], [606, 1071, 762, 1103], [774, 1071, 837, 1104], [847, 1070, 879, 1096], [888, 1071, 1067, 1104], [1078, 1070, 1242, 1104], [1245, 1071, 1290, 1096], [1302, 1074, 1329, 1096], [1340, 1074, 1449, 1104], [1460, 1071, 1535, 1096], [1545, 1071, 1734, 1104], [1746, 1079, 1837, 1096], [1849, 1074, 1903, 1096], [1914, 1079, 1944, 1096], [1954, 1079, 2029, 1096], [2040, 1071, 2196, 1104], [233, 1201, 322, 1230], [334, 1201, 417, 1229], [429, 1201, 603, 1238], [617, 1210, 665, 1229], [677, 1201, 915, 1238], [926, 1201, 1112, 1230], [1124, 1201, 1204, 1229], [232, 1250, 347, 1287], [362, 1250, 411, 1278], [423, 1250, 537, 1287], [550, 1250, 586, 1278], [596, 1250, 645, 1278], [657, 1250, 778, 1278], [790, 1250, 1039, 1287], [1053, 1250, 1203, 1287], [233, 1309, 263, 1328], [281, 1300, 331, 1328], [348, 1300, 410, 1328], [427, 1300, 463, 1328], [477, 1300, 526, 1328], [543, 1300, 670, 1337], [687, 1300, 755, 1328], [771, 1300, 921, 1337], [941, 1300, 1094, 1335], [1111, 1309, 1128, 1328], [1129, 1300, 1203, 1334], [232, 1350, 343, 1384], [366, 1350, 553, 1387], [575, 1354, 603, 1378], [625, 1350, 671, 1384], [694, 1350, 797, 1385], [841, 1351, 995, 1384], [1021, 1359, 1052, 1378], [1074, 1359, 1121, 1378], [1142, 1350, 1205, 1378], [232, 1400, 348, 1428], [373, 1400, 403, 1428], [426, 1409, 510, 1428], [533, 1400, 624, 1428], [647, 1400, 677, 1428], [702, 1399, 747, 1437], [774, 1400, 856, 1428], [879, 1409, 928, 1428], [950, 1404, 1010, 1428], [1035, 1400, 1205, 1437], [232, 1450, 405, 1478], [430, 1450, 598, 1478], [621, 1450, 693, 1478], [715, 1454, 831, 1478], [853, 1450, 1000, 1487], [1022, 1450, 1205, 1487], [232, 1499, 379, 1527], [411, 1499, 480, 1536], [500, 1508, 548, 1527], [567, 1499, 661, 1527], [679, 1508, 751, 1536], [771, 1499, 846, 1527], [865, 1503, 896, 1527], [915, 1499, 989, 1527], [1008, 1508, 1042, 1527], [1061, 1499, 1130, 1536], [1149, 1508, 1205, 1527], [232, 1549, 304, 1586], [320, 1549, 433, 1586], [449, 1549, 573, 1586], [589, 1549, 717, 1586], [733, 1549, 808, 1577], [839, 1549, 902, 1577], [918, 1549, 1031, 1577], [1046, 1549, 1138, 1577], [1156, 1549, 1205, 1577], [232, 1599, 409, 1636], [422, 1599, 604, 1636], [617, 1599, 652, 1627], [662, 1599, 746, 1627], [758, 1599, 942, 1636], [957, 1599, 1048, 1627], [1060, 1599, 1109, 1627], [1121, 1599, 1206, 1627], [233, 1649, 366, 1686], [383, 1649, 474, 1677], [492, 1649, 541, 1677], [558, 1658, 668, 1677], [670, 1649, 732, 1677], [746, 1649, 892, 1678], [908, 1649, 1035, 1686], [1051, 1649, 1128, 1683], [1148, 1649, 1205, 1677], [232, 1699, 428, 1727], [441, 1699, 611, 1727], [626, 1708, 642, 1727], [654, 1699, 706, 1736], [719, 1699, 842, 1727], [854, 1699, 918, 1727], [933, 1699, 996, 1727], [1009, 1699, 1058, 1727], [1070, 1699, 1205, 1736], [231, 1758, 363, 1786], [376, 1749, 459, 1777], [468, 1749, 592, 1786], [602, 1749, 670, 1777], [680, 1749, 705, 1777], [717, 1749, 860, 1786], [871, 1749, 943, 1786], [953, 1749, 1048, 1786], [1060, 1749, 1205, 1778], [232, 1798, 279, 1826], [292, 1798, 403, 1826], [417, 1807, 531, 1826], [545, 1798, 683, 1826], [699, 1798, 786, 1833], [801, 1807, 831, 1826], [845, 1798, 1075, 1835], [1089, 1798, 1204, 1826], [233, 1848, 337, 1883], [232, 1923, 302, 1951], [317, 1932, 409, 1960], [423, 1923, 593, 1951], [608, 1922, 757, 1952], [752, 1922, 963, 1960], [976, 1923, 1204, 1960], [232, 1973, 356, 2002], [368, 1973, 453, 2002], [460, 1973, 670, 2010], [685, 1982, 701, 2001], [713, 1973, 830, 2010], [844, 1973, 975, 2001], [987, 1973, 1147, 2010], [1158, 1973, 1206, 2001], [232, 2022, 375, 2059], [391, 2022, 538, 2059], [554, 2022, 637, 2050], [653, 2022, 851, 2059], [869, 2022, 941, 2050], [958, 2031, 974, 2050], [991, 2022, 1087, 2051], [1103, 2026, 1204, 2050], [233, 2072, 299, 2100], [319, 2076, 349, 2100], [369, 2072, 571, 2109], [590, 2072, 797, 2109], [837, 2072, 900, 2100], [920, 2072, 1022, 2100], [1041, 2072, 1066, 2100], [1088, 2072, 1155, 2100], [1174, 2076, 1205, 2100], [232, 2122, 369, 2159], [380, 2122, 553, 2159], [563, 2122, 721, 2150], [733, 2126, 870, 2150], [882, 2122, 918, 2150], [926, 2122, 1134, 2159], [1144, 2131, 1205, 2150], [232, 2176, 299, 2200], [320, 2173, 344, 2200], [357, 2172, 554, 2200], [567, 2172, 640, 2200], [655, 2176, 707, 2200], [719, 2172, 836, 2209], [850, 2181, 907, 2209], [920, 2172, 1096, 2201], [1111, 2172, 1204, 2209], [232, 2226, 338, 2256], [352, 2222, 404, 2250], [417, 2222, 533, 2250], [546, 2226, 672, 2250], [688, 2231, 704, 2250], [716, 2222, 863, 2259], [877, 2222, 974, 2259], [987, 2222, 1112, 2259], [1126, 2222, 1205, 2250], [233, 2281, 249, 2300], [259, 2272, 375, 2300], [388, 2272, 503, 2309], [514, 2272, 549, 2300], [559, 2272, 844, 2309], [856, 2276, 992, 2300], [1002, 2272, 1126, 2309], [1137, 2272, 1205, 2300], [233, 2321, 301, 2358], [319, 2321, 475, 2358], [492, 2321, 592, 2349], [607, 2321, 629, 2349], [643, 2330, 713, 2349], [730, 2325, 760, 2349], [777, 2321, 857, 2358], [873, 2321, 1070, 2358], [1088, 2330, 1119, 2349], [1136, 2321, 1205, 2358], [233, 2380, 281, 2399], [295, 2371, 415, 2399], [430, 2380, 501, 2400], [515, 2371, 723, 2408], [737, 2371, 865, 2408], [879, 2371, 954, 2399], [978, 2371, 1042, 2400], [1055, 2371, 1204, 2399], [232, 2421, 309, 2449], [324, 2430, 372, 2449], [384, 2421, 433, 2449], [445, 2421, 612, 2458], [274, 2562, 290, 2578], [315, 2553, 367, 2580], [381, 2552, 536, 2580], [551, 2561, 567, 2580], [581, 2552, 679, 2586], [695, 2552, 1112, 2589], [1126, 2562, 1204, 2581], [311, 2602, 386, 2639], [395, 2602, 611, 2639], [622, 2602, 770, 2639], [783, 2602, 1093, 2637], [1105, 2602, 1205, 2630], [315, 2652, 339, 2680], [352, 2652, 493, 2689], [495, 2652, 556, 2680], [569, 2652, 649, 2689], [661, 2652, 869, 2689], [881, 2652, 1063, 2689], [1066, 2661, 1123, 2680], [1136, 2652, 1205, 2689], [316, 2711, 364, 2730], [382, 2702, 474, 2739], [494, 2702, 608, 2730], [628, 2702, 658, 2730], [679, 2711, 716, 2730], [736, 2702, 838, 2730], [859, 2702, 974, 2739], [1015, 2702, 1078, 2730], [1098, 2711, 1204, 2730], [315, 2752, 428, 2789], [445, 2752, 561, 2780], [579, 2761, 635, 2780], [653, 2752, 733, 2780], [749, 2756, 780, 2780], [796, 2752, 974, 2789], [990, 2752, 1117, 2789], [1135, 2756, 1203, 2786], [315, 2801, 437, 2838], [460, 2801, 601, 2838], [622, 2801, 750, 2838], [771, 2801, 845, 2835], [872, 2801, 929, 2829], [951, 2801, 1000, 2829], [1022, 2801, 1204, 2830], [315, 2851, 376, 2879], [395, 2851, 467, 2888], [484, 2851, 638, 2879], [658, 2851, 793, 2888], [810, 2851, 1031, 2888], [1051, 2855, 1204, 2879], [316, 2901, 435, 2938], [453, 2901, 521, 2929], [540, 2905, 568, 2929], [586, 2901, 660, 2929], [679, 2901, 806, 2938], [826, 2905, 898, 2938], [920, 2901, 1020, 2929], [1039, 2901, 1134, 2929], [1154, 2910, 1204, 2929], [315, 2951, 440, 2988], [455, 2951, 525, 2979], [541, 2951, 598, 2979], [615, 2951, 679, 2979], [695, 2951, 798, 2980], [815, 2951, 864, 2979], [879, 2951, 956, 2979], [971, 2951, 1019, 2979], [1034, 2951, 1205, 2988], [1365, 1201, 1642, 1238], [1657, 1200, 1762, 1238], [1324, 1290, 1340, 1306], [1365, 1289, 1411, 1308], [1425, 1280, 1672, 1317], [1686, 1280, 1821, 1309], [1835, 1280, 1884, 1308], [1898, 1280, 2028, 1308], [2042, 1280, 2255, 1317], [1365, 1330, 1562, 1367], [1581, 1339, 1621, 1358], [1639, 1339, 1655, 1358], [1673, 1330, 2065, 1358], [2084, 1329, 2178, 1367], [2198, 1330, 2255, 1358], [1365, 1379, 1473, 1407], [1487, 1379, 1661, 1407], [1675, 1379, 1741, 1407], [1755, 1378, 1859, 1416], [1875, 1379, 1975, 1407], [1989, 1379, 2039, 1407], [2053, 1379, 2175, 1407], [2190, 1383, 2254, 1407], [1364, 1429, 1511, 1466], [1527, 1433, 1643, 1457], [1658, 1429, 1902, 1457], [1916, 1429, 2064, 1463], [2080, 1429, 2152, 1457], [2167, 1429, 2254, 1457], [1365, 1479, 1416, 1516], [1426, 1479, 1499, 1507], [1508, 1479, 1639, 1507], [1649, 1483, 1680, 1507], [1690, 1479, 1819, 1507], [1830, 1488, 1864, 1507], [1873, 1479, 1963, 1507], [1975, 1488, 2116, 1516], [2118, 1479, 2178, 1507], [2189, 1488, 2254, 1508], [1365, 1529, 1425, 1557], [1437, 1529, 1510, 1566], [1524, 1529, 1571, 1557], [1581, 1529, 1662, 1566], [1674, 1529, 1868, 1566], [1528, 1617, 1575, 1636], [1619, 1608, 1707, 1636], [1628, 1651, 1635, 1671], [1324, 1618, 1340, 1634], [1365, 1608, 1475, 1645], [1751, 1608, 1897, 1637], [1940, 1617, 1995, 1636], [2038, 1608, 2171, 1636], [2215, 1608, 2254, 1637], [1365, 1658, 1623, 1695], [1681, 1662, 1712, 1686], [1752, 1658, 1910, 1695], [1953, 1658, 2103, 1686], [2144, 1658, 2256, 1686], [1364, 1708, 1501, 1736], [1513, 1717, 1553, 1736], [1565, 1708, 1778, 1745], [1790, 1708, 1965, 1736], [1977, 1708, 2091, 1736], [2103, 1708, 2245, 1745], [1281, 1814, 1315, 1849], [1331, 1814, 1525, 1858], [1541, 1814, 1822, 1858], [1836, 1814, 1955, 1849], [1969, 1814, 2233, 1858], [1281, 1900, 1494, 1937], [1509, 1900, 1592, 1928], [1607, 1900, 1789, 1937], [1805, 1900, 1978, 1937], [1995, 1900, 2128, 1935], [2129, 1904, 2191, 1929], [2207, 1900, 2253, 1934], [1281, 1950, 1393, 1984], [1407, 1950, 1574, 1987], [1576, 1954, 1636, 1978], [1649, 1950, 1695, 1984], [1709, 1950, 1803, 1985], [1817, 1950, 1898, 1978], [1909, 1950, 2010, 1978], [2022, 1950, 2150, 1978], [2165, 1950, 2255, 1978], [1281, 2000, 1379, 2028], [1398, 2000, 1478, 2028], [1493, 2009, 1554, 2028], [1572, 2004, 1632, 2028], [1650, 2000, 1718, 2037], [1738, 2000, 1792, 2037], [1813, 2000, 1824, 2028], [1847, 2000, 1889, 2035], [1908, 2000, 1937, 2029], [1956, 2000, 2023, 2035], [2056, 2000, 2154, 2028], [2172, 2000, 2254, 2037], [1280, 2050, 1384, 2078], [1401, 2059, 1450, 2078], [1464, 2050, 1578, 2078], [1592, 2059, 1664, 2079], [1678, 2050, 1758, 2087], [1773, 2050, 1901, 2078], [1917, 2054, 1947, 2078], [1961, 2050, 2000, 2078], [2015, 2050, 2082, 2078], [2096, 2054, 2127, 2078], [2140, 2050, 2255, 2087], [1281, 2100, 1379, 2128], [1393, 2100, 1472, 2128], [1483, 2100, 1533, 2128], [1544, 2104, 1679, 2128], [1692, 2100, 1722, 2128], [1734, 2100, 1834, 2128], [1846, 2100, 1915, 2137], [1927, 2109, 2041, 2137], [2058, 2100, 2147, 2128], [2158, 2100, 2254, 2128], [1281, 2149, 1333, 2186], [1351, 2158, 1407, 2177], [1425, 2149, 1592, 2186], [1609, 2149, 1648, 2177], [1665, 2149, 1849, 2177], [1868, 2158, 1898, 2177], [1918, 2149, 2061, 2186], [2079, 2149, 2154, 2177], [2172, 2149, 2255, 2177], [1281, 2203, 1312, 2227], [1331, 2208, 1347, 2227], [1365, 2199, 1485, 2227], [1504, 2203, 1606, 2228], [1623, 2199, 1654, 2227], [1673, 2208, 1709, 2227], [1727, 2199, 1896, 2227], [1915, 2208, 2014, 2236], [2036, 2199, 2093, 2227], [2110, 2199, 2255, 2236], [1281, 2249, 1365, 2277], [1377, 2253, 1493, 2278], [1507, 2249, 1537, 2277], [1551, 2258, 1587, 2277], [1600, 2253, 1722, 2286], [1734, 2253, 1765, 2277], [1778, 2249, 2026, 2286], [2039, 2249, 2194, 2277], [2206, 2249, 2255, 2277], [1281, 2299, 1416, 2327], [1431, 2299, 1510, 2327], [1526, 2308, 1542, 2327], [1557, 2299, 1667, 2327], [1683, 2303, 1786, 2328], [1800, 2303, 1831, 2327], [1846, 2299, 1895, 2327], [1910, 2303, 2026, 2328], [2043, 2299, 2079, 2327], [2091, 2299, 2140, 2327], [2155, 2299, 2253, 2327], [1281, 2349, 1354, 2377], [1366, 2349, 1466, 2377], [1479, 2349, 1501, 2377], [1513, 2349, 1682, 2386], [1695, 2358, 1862, 2377], [1882, 2349, 1945, 2377], [1957, 2349, 2048, 2377], [2061, 2349, 2097, 2377], [2107, 2349, 2164, 2377], [2178, 2349, 2254, 2386], [1281, 2398, 1425, 2426], [1437, 2407, 1559, 2435], [1574, 2398, 1670, 2435], [1685, 2407, 1701, 2426], [1713, 2398, 1776, 2426], [1789, 2398, 1984, 2435], [1997, 2398, 2147, 2435], [2160, 2398, 2196, 2426], [2206, 2398, 2255, 2426], [1281, 2448, 1501, 2476], [1514, 2448, 1677, 2485], [1693, 2448, 1729, 2476], [1740, 2448, 1854, 2476], [1868, 2448, 2025, 2485], [2041, 2448, 2141, 2476], [2155, 2448, 2253, 2476], [1281, 2498, 1354, 2526], [1368, 2498, 1482, 2526], [1494, 2498, 1713, 2526], [1725, 2498, 1889, 2535], [1904, 2498, 2014, 2526], [2026, 2498, 2166, 2535], [2187, 2499, 2255, 2526], [1281, 2552, 1312, 2576], [1324, 2548, 1399, 2576], [1411, 2548, 1531, 2585], [1543, 2552, 1654, 2582], [1668, 2548, 1751, 2576], [1763, 2548, 1891, 2576], [1905, 2548, 1989, 2576], [2000, 2548, 2070, 2576], [2082, 2548, 2129, 2576], [2142, 2548, 2255, 2577], [1281, 2599, 1335, 2626], [1337, 2598, 1539, 2635], [1553, 2598, 1633, 2626], [1649, 2598, 1817, 2633], [1831, 2602, 1859, 2626], [1874, 2598, 1920, 2632], [1936, 2598, 2027, 2632], [2043, 2598, 2150, 2626], [2164, 2602, 2192, 2626], [2207, 2598, 2253, 2632], [1281, 2648, 1384, 2683], [1281, 2723, 1314, 2750], [1336, 2722, 1385, 2750], [1406, 2722, 1619, 2759], [1642, 2726, 1735, 2759], [1761, 2722, 1810, 2750], [1831, 2722, 1901, 2759], [1923, 2722, 1947, 2750], [1970, 2726, 2001, 2750], [2022, 2722, 2104, 2750], [2125, 2722, 2253, 2750], [1281, 2772, 1381, 2800], [1398, 2772, 1567, 2809], [1583, 2772, 1653, 2800], [1669, 2782, 1773, 2801], [1790, 2772, 1928, 2809], [1944, 2772, 2024, 2801], [2041, 2772, 2104, 2801], [2118, 2772, 2256, 2809], [1282, 2822, 1457, 2859], [1478, 2822, 1541, 2850], [1554, 2831, 1612, 2859], [1614, 2822, 1661, 2850], [1676, 2822, 1824, 2850], [1837, 2826, 1868, 2850], [1881, 2822, 1962, 2850], [1975, 2822, 2104, 2850], [2119, 2822, 2254, 2857], [1281, 2872, 1382, 2909], [1398, 2872, 1446, 2900], [1459, 2872, 1534, 2900], [1548, 2872, 1632, 2900], [1647, 2872, 1721, 2900], [1735, 2872, 1796, 2900], [1810, 2872, 1928, 2901], [1941, 2872, 2039, 2901], [2055, 2873, 2083, 2900], [2099, 2872, 2175, 2900], [2191, 2872, 2254, 2900], [1337, 2947, 1483, 2986], [1496, 2954, 2229, 2986], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [231, 302, 330, 329], [346, 301, 395, 320], [410, 292, 550, 329], [566, 292, 680, 320], [694, 292, 891, 329], [908, 292, 970, 327], [985, 291, 1205, 329], [231, 341, 427, 378], [446, 342, 498, 370], [516, 342, 712, 379], [730, 351, 777, 370], [795, 342, 859, 370], [877, 346, 956, 370], [973, 342, 1090, 371], [1107, 342, 1204, 371], [231, 402, 336, 421], [347, 392, 497, 429], [500, 396, 554, 421], [563, 392, 639, 421], [650, 392, 763, 420], [771, 392, 1005, 429], [1008, 392, 1094, 427], [1104, 400, 1204, 421], [231, 441, 352, 479], [368, 441, 546, 478], [575, 442, 638, 470], [654, 442, 739, 470], [753, 446, 893, 479], [910, 442, 1013, 470], [1030, 451, 1089, 470], [1105, 446, 1135, 470], [1150, 451, 1205, 470], [231, 492, 281, 520], [293, 492, 414, 520], [427, 492, 610, 529], [612, 501, 670, 520], [684, 492, 813, 520], [827, 492, 875, 520], [887, 492, 1014, 529], [1028, 501, 1044, 520], [1057, 492, 1204, 520], [231, 541, 330, 570], [342, 541, 489, 569], [501, 545, 532, 569], [544, 541, 658, 578], [671, 541, 765, 569], [779, 541, 810, 569], [823, 550, 881, 569], [894, 541, 1023, 578], [1025, 541, 1124, 578], [1140, 545, 1204, 578], [231, 591, 285, 625], [300, 591, 564, 628], [580, 600, 614, 619], [628, 591, 883, 626], [898, 591, 998, 619], [1012, 600, 1059, 619], [1072, 591, 1149, 620], [1163, 591, 1204, 619], [230, 641, 331, 669], [347, 641, 423, 675], [442, 641, 499, 669], [514, 641, 584, 669], [599, 641, 724, 678], [740, 641, 866, 669], [880, 641, 902, 669], [917, 645, 947, 669], [964, 650, 980, 669], [995, 641, 1143, 678], [1158, 641, 1206, 669], [231, 691, 331, 719], [346, 700, 393, 719], [408, 691, 448, 719], [463, 695, 515, 719], [529, 691, 605, 720], [620, 691, 710, 719], [726, 691, 855, 719], [871, 691, 946, 719], [972, 692, 1061, 719], [1076, 700, 1113, 719], [1128, 691, 1204, 728], [231, 741, 375, 769], [389, 741, 584, 778], [602, 741, 683, 769], [699, 750, 747, 769], [763, 741, 876, 770], [892, 741, 1074, 778], [1091, 745, 1121, 769], [1135, 741, 1205, 769], [231, 800, 290, 819], [302, 800, 358, 819], [370, 791, 514, 828], [525, 791, 609, 819], [621, 795, 681, 819], [693, 791, 857, 828], [871, 791, 924, 826], [925, 791, 1188, 826], [233, 864, 393, 894], [406, 864, 646, 894], [664, 865, 727, 893], [740, 865, 875, 902], [888, 865, 1037, 902], [1049, 865, 1073, 893], [1086, 869, 1117, 893], [1128, 865, 1204, 902], [231, 915, 311, 943], [324, 915, 399, 943], [412, 915, 621, 952], [634, 915, 783, 952], [798, 915, 963, 952], [978, 915, 1037, 950], [1054, 915, 1128, 943], [1142, 924, 1204, 943], [230, 965, 378, 1002], [391, 974, 431, 993], [442, 965, 516, 993], [528, 965, 676, 1002], [688, 965, 854, 1002], [864, 965, 953, 1002], [966, 974, 1022, 1002], [1034, 965, 1070, 993], [1078, 965, 1127, 993], [1139, 974, 1204, 994], [231, 1015, 292, 1043], [306, 1015, 451, 1044], [464, 1015, 694, 1044], [706, 1015, 852, 1050], [867, 1015, 925, 1043], [938, 1015, 1007, 1043], [1020, 1015, 1143, 1043], [1156, 1015, 1205, 1043], [231, 1065, 444, 1102], [455, 1065, 631, 1093], [644, 1074, 675, 1093], [687, 1074, 703, 1093], [714, 1069, 856, 1102], [869, 1065, 1000, 1102], [1017, 1065, 1201, 1102], [232, 1118, 304, 1151], [322, 1114, 385, 1142], [398, 1114, 561, 1151], [574, 1118, 638, 1151], [651, 1114, 779, 1142], [792, 1114, 828, 1142], [838, 1114, 972, 1151], [985, 1123, 1001, 1142], [1013, 1114, 1204, 1142], [231, 1164, 294, 1192], [309, 1164, 357, 1192], [370, 1164, 537, 1201], [552, 1164, 601, 1192], [616, 1164, 813, 1201], [830, 1164, 865, 1192], [877, 1164, 975, 1192], [991, 1168, 1063, 1192], [1078, 1164, 1127, 1192], [1142, 1173, 1204, 1192], [230, 1214, 378, 1251], [394, 1214, 429, 1242], [440, 1214, 516, 1242], [529, 1214, 702, 1242], [715, 1214, 804, 1251], [820, 1214, 961, 1242], [975, 1214, 1054, 1242], [1069, 1223, 1085, 1242], [1098, 1214, 1204, 1242], [231, 1273, 309, 1301], [326, 1264, 397, 1292], [410, 1273, 471, 1292], [486, 1264, 570, 1292], [572, 1268, 633, 1292], [645, 1264, 683, 1292], [696, 1273, 712, 1292], [724, 1264, 824, 1293], [837, 1264, 986, 1301], [998, 1264, 1038, 1301], [1052, 1264, 1205, 1299], [231, 1318, 260, 1342], [272, 1314, 319, 1348], [332, 1314, 444, 1349], [457, 1314, 527, 1342], [539, 1314, 659, 1342], [672, 1323, 688, 1342], [699, 1314, 793, 1342], [802, 1314, 970, 1351], [982, 1314, 1061, 1342], [1072, 1323, 1131, 1342], [1142, 1323, 1204, 1342], [230, 1363, 363, 1400], [378, 1372, 448, 1400], [450, 1367, 511, 1391], [524, 1363, 573, 1391], [586, 1363, 675, 1391], [695, 1364, 719, 1391], [732, 1372, 793, 1391], [807, 1363, 955, 1391], [967, 1363, 1007, 1400], [1022, 1363, 1161, 1400], [1175, 1363, 1204, 1392], [231, 1414, 321, 1450], [333, 1413, 437, 1448], [450, 1413, 519, 1441], [531, 1413, 791, 1450], [800, 1413, 954, 1450], [965, 1422, 1071, 1441], [1082, 1422, 1119, 1441], [1120, 1413, 1204, 1441], [231, 1467, 281, 1500], [291, 1463, 440, 1500], [450, 1463, 633, 1500], [636, 1463, 723, 1491], [735, 1472, 751, 1491], [758, 1463, 836, 1500], [848, 1472, 938, 1500], [947, 1463, 1037, 1500], [1047, 1463, 1205, 1491], [231, 1513, 410, 1541], [422, 1513, 561, 1550], [578, 1513, 641, 1541], [654, 1513, 819, 1550], [830, 1513, 866, 1541], [875, 1513, 931, 1541], [945, 1522, 1073, 1550], [1075, 1513, 1131, 1541], [1144, 1513, 1205, 1541], [231, 1563, 289, 1591], [302, 1572, 373, 1600], [385, 1563, 443, 1591], [454, 1567, 485, 1591], [496, 1563, 577, 1591], [589, 1563, 638, 1591], [650, 1563, 832, 1600], [845, 1563, 1032, 1600], [1049, 1563, 1112, 1591], [1123, 1563, 1205, 1591], [231, 1612, 391, 1640], [405, 1612, 441, 1640], [452, 1612, 509, 1640], [525, 1621, 653, 1649], [655, 1612, 714, 1640], [729, 1612, 790, 1640], [804, 1612, 826, 1640], [840, 1612, 864, 1640], [880, 1616, 931, 1640], [945, 1612, 1025, 1640], [1039, 1612, 1099, 1640], [1114, 1621, 1130, 1640], [1145, 1612, 1204, 1640], [231, 1662, 281, 1699], [297, 1662, 540, 1690], [557, 1662, 703, 1697], [719, 1662, 812, 1690], [828, 1671, 862, 1690], [877, 1662, 1045, 1697], [1063, 1671, 1118, 1690], [1135, 1671, 1204, 1699], [231, 1716, 295, 1740], [309, 1712, 358, 1740], [371, 1712, 581, 1749], [596, 1712, 734, 1740], [750, 1712, 788, 1740], [803, 1712, 901, 1740], [917, 1712, 947, 1740], [962, 1712, 1011, 1740], [1026, 1721, 1132, 1740], [1148, 1712, 1205, 1740], [231, 1766, 324, 1799], [339, 1762, 512, 1799], [530, 1762, 587, 1790], [602, 1771, 657, 1790], [671, 1762, 806, 1799], [808, 1762, 947, 1790], [963, 1771, 1003, 1790], [1018, 1762, 1067, 1790], [1082, 1762, 1204, 1790], [231, 1812, 294, 1840], [306, 1812, 372, 1840], [384, 1821, 467, 1840], [478, 1816, 509, 1840], [520, 1812, 605, 1849], [616, 1816, 647, 1840], [658, 1812, 708, 1840], [719, 1816, 856, 1849], [868, 1811, 971, 1849], [989, 1812, 1203, 1846], [232, 1871, 269, 1890], [281, 1866, 417, 1890], [428, 1862, 595, 1899], [606, 1862, 630, 1890], [642, 1862, 779, 1899], [791, 1862, 838, 1890], [849, 1862, 898, 1890], [909, 1862, 1136, 1899], [1148, 1862, 1205, 1890], [231, 1911, 281, 1939], [293, 1911, 416, 1939], [428, 1911, 581, 1939], [595, 1911, 667, 1948], [679, 1920, 738, 1939], [750, 1911, 923, 1939], [935, 1920, 988, 1948], [999, 1911, 1091, 1945], [1105, 1911, 1205, 1939], [231, 1961, 351, 1998], [362, 1961, 411, 1989], [420, 1961, 484, 1989], [494, 1961, 684, 1989], [693, 1961, 833, 1998], [834, 1961, 899, 1998], [907, 1961, 1020, 1989], [1030, 1961, 1202, 1998], [233, 2036, 545, 2065], [548, 2036, 794, 2073], [806, 2045, 864, 2064], [874, 2045, 944, 2073], [953, 2036, 1091, 2073], [1099, 2036, 1205, 2073], [232, 2086, 509, 2123], [526, 2086, 650, 2123], [667, 2086, 735, 2114], [753, 2086, 811, 2114], [828, 2086, 903, 2114], [922, 2095, 938, 2114], [955, 2086, 1057, 2114], [1075, 2090, 1106, 2114], [1124, 2086, 1205, 2114], [232, 2136, 346, 2164], [361, 2136, 610, 2173], [628, 2136, 676, 2164], [691, 2136, 741, 2164], [758, 2136, 877, 2173], [895, 2140, 1059, 2164], [1090, 2136, 1161, 2164], [1179, 2136, 1203, 2164], [231, 2185, 281, 2213], [296, 2185, 446, 2222], [460, 2185, 605, 2213], [619, 2185, 660, 2222], [675, 2185, 724, 2213], [738, 2185, 870, 2214], [886, 2185, 1052, 2220], [1068, 2185, 1097, 2214], [1112, 2185, 1204, 2213], [232, 2244, 308, 2269], [326, 2235, 420, 2270], [438, 2235, 495, 2263], [512, 2235, 561, 2263], [576, 2235, 723, 2272], [740, 2235, 955, 2263], [972, 2235, 1073, 2270], [1092, 2235, 1204, 2270], [231, 2285, 269, 2313], [270, 2289, 324, 2313], [338, 2285, 384, 2319], [399, 2285, 516, 2320], [536, 2285, 599, 2313], [613, 2285, 778, 2322], [790, 2285, 826, 2313], [836, 2285, 893, 2313], [908, 2294, 1036, 2322], [1038, 2285, 1095, 2313], [1110, 2285, 1171, 2313], [1183, 2285, 1205, 2313], [231, 2344, 287, 2363], [300, 2335, 338, 2363], [352, 2335, 409, 2363], [423, 2335, 511, 2363], [523, 2335, 612, 2372], [627, 2344, 663, 2363], [676, 2335, 810, 2363], [823, 2335, 1104, 2364], [1117, 2335, 1204, 2363], [231, 2385, 283, 2422], [296, 2385, 435, 2413], [448, 2385, 509, 2413], [521, 2385, 582, 2413], [595, 2385, 631, 2413], [641, 2385, 691, 2413], [703, 2385, 843, 2414], [859, 2385, 922, 2413], [935, 2385, 1016, 2413], [1030, 2385, 1203, 2413], [231, 2434, 267, 2462], [280, 2434, 337, 2462], [354, 2434, 477, 2462], [493, 2443, 541, 2462], [557, 2434, 617, 2462], [633, 2434, 654, 2462], [670, 2443, 726, 2462], [741, 2434, 813, 2471], [829, 2434, 903, 2462], [919, 2443, 959, 2462], [975, 2434, 1090, 2463], [1099, 2434, 1204, 2471], [232, 2484, 271, 2512], [287, 2484, 367, 2518], [385, 2484, 485, 2512], [500, 2484, 525, 2512], [541, 2484, 704, 2521], [719, 2488, 749, 2512], [765, 2484, 867, 2512], [883, 2484, 940, 2512], [955, 2488, 1007, 2512], [1022, 2484, 1205, 2521], [231, 2534, 347, 2562], [363, 2534, 394, 2562], [410, 2534, 459, 2562], [475, 2543, 558, 2562], [575, 2534, 651, 2571], [666, 2543, 700, 2562], [714, 2534, 838, 2571], [854, 2543, 884, 2562], [902, 2534, 951, 2562], [966, 2534, 1089, 2562], [1105, 2534, 1205, 2562], [231, 2584, 281, 2612], [293, 2584, 422, 2612], [436, 2584, 531, 2621], [543, 2584, 582, 2612], [596, 2584, 715, 2621], [729, 2584, 788, 2619], [804, 2584, 886, 2612], [898, 2584, 923, 2612], [938, 2593, 954, 2612], [968, 2588, 1069, 2621], [1082, 2584, 1204, 2613], [231, 2634, 321, 2669], [232, 2708, 572, 2740], [594, 2708, 767, 2737], [803, 2708, 938, 2736], [958, 2708, 1108, 2745], [1128, 2708, 1152, 2736], [1174, 2712, 1205, 2736], [225, 2758, 336, 2795], [351, 2759, 489, 2795], [505, 2758, 554, 2786], [569, 2758, 777, 2795], [792, 2758, 955, 2795], [972, 2755, 1051, 2796], [1069, 2758, 1141, 2786], [1156, 2758, 1205, 2786], [231, 2808, 444, 2845], [461, 2808, 610, 2845], [627, 2808, 771, 2836], [789, 2817, 819, 2836], [839, 2817, 855, 2836], [872, 2807, 1096, 2845], [1113, 2816, 1204, 2845], [231, 2857, 348, 2887], [359, 2858, 423, 2893], [433, 2858, 540, 2895], [550, 2858, 569, 2886], [580, 2858, 628, 2886], [638, 2867, 654, 2886], [665, 2858, 850, 2893], [867, 2859, 908, 2886], [918, 2858, 958, 2886], [968, 2858, 1035, 2892], [1048, 2867, 1095, 2886], [1105, 2858, 1205, 2886], [232, 2917, 248, 2936], [262, 2908, 475, 2945], [487, 2908, 716, 2945], [730, 2912, 805, 2936], [819, 2905, 899, 2946], [915, 2908, 973, 2936], [985, 2917, 1040, 2936], [1054, 2908, 1075, 2936], [1089, 2912, 1119, 2936], [1133, 2917, 1204, 2936], [1704, 297, 1806, 363], [1656, 427, 1758, 450], [1767, 427, 1794, 446], [1803, 427, 1851, 446], [1663, 552, 1691, 570], [1836, 551, 1857, 569], [1648, 580, 1704, 599], [1820, 579, 1877, 597], [1622, 612, 1734, 629], [1791, 613, 1902, 627], [2040, 855, 2060, 870], [2070, 856, 2198, 876], [1327, 859, 1353, 875], [1364, 859, 1493, 882], [1698, 858, 1756, 876], [1767, 859, 1840, 880], [1282, 950, 1378, 983], [1388, 950, 1413, 975], [1427, 950, 1579, 975], [1595, 949, 1627, 975], [1640, 950, 1684, 975], [1699, 950, 1835, 983], [1851, 950, 2003, 975], [2019, 950, 2111, 975], [2126, 950, 2254, 975], [1281, 999, 1338, 1021], [1351, 995, 1394, 1021], [1407, 996, 1536, 1029], [1548, 995, 1681, 1029], [1694, 996, 1769, 1021], [1782, 995, 1969, 1029], [1991, 996, 2054, 1021], [2068, 996, 2255, 1029], [1282, 1042, 1419, 1075], [1435, 1042, 1540, 1067], [1557, 1050, 1601, 1067], [1613, 1042, 1713, 1075], [1729, 1042, 1831, 1067], [1847, 1042, 1928, 1067], [1944, 1041, 2085, 1075], [2101, 1050, 2117, 1067], [2133, 1042, 2255, 1075], [1282, 1086, 1393, 1117], [1408, 1087, 1498, 1112], [1512, 1087, 1598, 1120], [1613, 1087, 1657, 1112], [1671, 1086, 1849, 1120], [1865, 1087, 1931, 1112], [1945, 1087, 2000, 1112], [2014, 1087, 2254, 1120], [1281, 1141, 1326, 1158], [1336, 1133, 1463, 1166], [1475, 1133, 1578, 1158], [1588, 1132, 1752, 1166], [1755, 1133, 1805, 1158], [1816, 1133, 1860, 1158], [1871, 1136, 1925, 1158], [1936, 1133, 2091, 1166], [1282, 1260, 1372, 1288], [1384, 1260, 1592, 1297], [1604, 1260, 1721, 1288], [1735, 1269, 1765, 1288], [1779, 1260, 1848, 1297], [1861, 1269, 1909, 1288], [1916, 1260, 2027, 1297], [2038, 1260, 2129, 1297], [2141, 1260, 2255, 1288], [1281, 1319, 1353, 1339], [1366, 1310, 1415, 1338], [1428, 1314, 1548, 1338], [1563, 1309, 1584, 1338], [1599, 1310, 1656, 1338], [1670, 1314, 1762, 1347], [1775, 1310, 1858, 1338], [1872, 1320, 1900, 1338], [1903, 1310, 2055, 1347], [2068, 1310, 2147, 1347], [2162, 1310, 2192, 1338], [2206, 1310, 2255, 1338], [1281, 1359, 1395, 1387], [1407, 1359, 1447, 1393], [1461, 1368, 1517, 1396], [1326, 1453, 1395, 1483], [1415, 1454, 1482, 1482], [1411, 1488, 1483, 1516], [1522, 1442, 1578, 1500], [1649, 1442, 1705, 1500], [1749, 1445, 1785, 1483], [1794, 1451, 1858, 1492], [1871, 1453, 1901, 1490], [1913, 1445, 1956, 1492], [1970, 1451, 2124, 1492], [2136, 1445, 2207, 1492], [1496, 1511, 1603, 1540], [1614, 1496, 1767, 1539], [1850, 1510, 1860, 1519], [2107, 1510, 2117, 1519], [1764, 1529, 1843, 1549], [1852, 1529, 1946, 1555], [2055, 1529, 2170, 1555], [2209, 1564, 2254, 1599], [1282, 1638, 1352, 1666], [1374, 1638, 1569, 1666], [1589, 1642, 1725, 1675], [1747, 1638, 1796, 1666], [1816, 1638, 1955, 1666], [1976, 1638, 2037, 1666], [2057, 1647, 2104, 1666], [2125, 1642, 2204, 1666], [2224, 1642, 2255, 1666], [1282, 1688, 1363, 1716], [1385, 1688, 1634, 1725], [1658, 1688, 1758, 1716], [1781, 1688, 1883, 1716], [1906, 1688, 1981, 1716], [2003, 1688, 2169, 1717], [2192, 1688, 2254, 1716], [1282, 1747, 1394, 1775], [1410, 1738, 1480, 1766], [1496, 1738, 1558, 1773], [1573, 1738, 1636, 1766], [1651, 1738, 1738, 1773], [1754, 1738, 1845, 1766], [1860, 1738, 1909, 1766], [1925, 1735, 1992, 1776], [2010, 1738, 2189, 1775], [2203, 1747, 2254, 1766], [1282, 1797, 1426, 1825], [1444, 1788, 1693, 1825], [1712, 1792, 1743, 1816], [1759, 1788, 1798, 1816], [1816, 1788, 1930, 1816], [1947, 1788, 1994, 1816], [2011, 1788, 2109, 1816], [2128, 1788, 2188, 1816], [2207, 1797, 2255, 1816], [1281, 1838, 1393, 1866], [1408, 1847, 1507, 1866], [1523, 1838, 1572, 1866], [1586, 1842, 1646, 1866], [1660, 1838, 1832, 1875], [1855, 1838, 2081, 1875], [2097, 1838, 2154, 1866], [2169, 1847, 2254, 1875], [1282, 1887, 1387, 1915], [1399, 1887, 1527, 1915], [1542, 1887, 1578, 1915], [1588, 1887, 1778, 1924], [1792, 1896, 1808, 1915], [1821, 1887, 1955, 1915], [1968, 1887, 2105, 1915], [2117, 1887, 2255, 1915], [1282, 1937, 1331, 1965], [1348, 1941, 1450, 1966], [1465, 1937, 1714, 1974], [1734, 1946, 1761, 1972], [1782, 1937, 1902, 1965], [1919, 1937, 1967, 1965], [1983, 1937, 2081, 1965], [2099, 1947, 2138, 1972], [2158, 1937, 2189, 1965], [2206, 1937, 2255, 1965], [1282, 1991, 1342, 2015], [1354, 1987, 1501, 2021], [1515, 1987, 1666, 2024], [1677, 1987, 1717, 2024], [1729, 1987, 1798, 2015], [1811, 1987, 1925, 2015], [1936, 1987, 2005, 2024], [2018, 1996, 2067, 2015], [2069, 1987, 2135, 2021], [1283, 2079, 1388, 2120], [1401, 2072, 1468, 2120], [1486, 2095, 1514, 2104], [1551, 2070, 1607, 2128], [1663, 2070, 1719, 2128], [1753, 2079, 1879, 2120], [1890, 2079, 1948, 2122], [1964, 2097, 1968, 2102], [1980, 2079, 2176, 2120], [2189, 2070, 2252, 2127], [1529, 2139, 1626, 2163], [1638, 2139, 1739, 2170], [2209, 2179, 2254, 2214], [1282, 2229, 1381, 2257], [1399, 2238, 1446, 2257], [1463, 2238, 1518, 2257], [1536, 2229, 1570, 2257], [1587, 2233, 1618, 2257], [1636, 2229, 1745, 2257], [1763, 2229, 1883, 2257], [1901, 2229, 2084, 2266], [2101, 2238, 2254, 2266], [1282, 2278, 1399, 2312], [1418, 2278, 1476, 2306], [1492, 2287, 1520, 2313], [1539, 2282, 1569, 2306], [1585, 2278, 1694, 2306], [1710, 2278, 1759, 2306], [1775, 2278, 1957, 2315], [1973, 2278, 2093, 2306], [2109, 2278, 2157, 2306], [2172, 2278, 2255, 2306], [1282, 2338, 1331, 2362], [1362, 2329, 1395, 2356], [1412, 2328, 1496, 2356], [1512, 2328, 1620, 2362], [1640, 2328, 1728, 2356], [1745, 2328, 1801, 2356], [1820, 2328, 1970, 2365], [1988, 2337, 2055, 2356], [2072, 2328, 2143, 2363], [2159, 2328, 2255, 2356], [1282, 2378, 1318, 2406], [1337, 2378, 1537, 2406], [1554, 2382, 1585, 2406], [1602, 2378, 1652, 2406], [1669, 2378, 1741, 2406], [1759, 2378, 1920, 2415], [1939, 2378, 1963, 2406], [1982, 2378, 2048, 2412], [2068, 2387, 2127, 2406], [2144, 2387, 2200, 2406], [2216, 2378, 2255, 2406], [1283, 2437, 1349, 2456], [1362, 2428, 1423, 2456], [1437, 2428, 1534, 2456], [1550, 2437, 1650, 2456], [1665, 2428, 1813, 2465], [1816, 2428, 1903, 2456], [1918, 2437, 1966, 2456], [1980, 2428, 2094, 2456], [2107, 2428, 2167, 2463], [2182, 2428, 2255, 2465], [1283, 2475, 1408, 2516], [1420, 2475, 1494, 2518], [1507, 2478, 1570, 2506], [1581, 2478, 1620, 2506], [1632, 2478, 1801, 2506], [1813, 2478, 1924, 2515], [1936, 2487, 1989, 2506], [1990, 2478, 2111, 2506], [1282, 2552, 1352, 2580], [1376, 2552, 1525, 2589], [1547, 2561, 1608, 2580], [1631, 2552, 1736, 2580], [1757, 2556, 1788, 2580], [1808, 2552, 1847, 2580], [1867, 2552, 1968, 2580], [1988, 2552, 2029, 2589], [2051, 2552, 2255, 2587], [1282, 2606, 1310, 2630], [1324, 2602, 1371, 2636], [1386, 2602, 1489, 2637], [1510, 2602, 1669, 2639], [1685, 2602, 1734, 2630], [1748, 2602, 1927, 2639], [1942, 2602, 1978, 2630], [1989, 2602, 2046, 2630], [2060, 2602, 2255, 2630], [1283, 2661, 1331, 2680], [1346, 2652, 1406, 2680], [1421, 2652, 1443, 2680], [1458, 2652, 1582, 2681], [1598, 2662, 1655, 2680], [1672, 2658, 1701, 2680], [1718, 2653, 1794, 2680], [1810, 2662, 1849, 2680], [1865, 2662, 1924, 2688], [1939, 2652, 2091, 2681], [2107, 2652, 2254, 2680], [1281, 2702, 1354, 2739], [1372, 2702, 1453, 2736], [1474, 2702, 1573, 2730], [1592, 2702, 1616, 2730], [1635, 2702, 1708, 2730], [1726, 2711, 1810, 2730], [1829, 2702, 1977, 2730], [1996, 2702, 2054, 2730], [2072, 2702, 2131, 2730], [2149, 2702, 2255, 2730], [1282, 2752, 1351, 2780], [1363, 2752, 1412, 2780], [1422, 2752, 1634, 2789], [1646, 2752, 1804, 2789], [1819, 2752, 1902, 2780], [1913, 2761, 1971, 2780], [1983, 2761, 2018, 2780], [2020, 2752, 2124, 2780], [2136, 2761, 2176, 2780], [2187, 2752, 2255, 2780], [1282, 2801, 1381, 2829], [1394, 2801, 1558, 2829], [1572, 2801, 1622, 2829], [1635, 2801, 1703, 2829], [1716, 2810, 1774, 2829], [1788, 2801, 1851, 2829], [1863, 2801, 1902, 2829], [1916, 2801, 2058, 2838], [2072, 2801, 2121, 2829], [2134, 2801, 2255, 2829], [1282, 2851, 1410, 2879], [1429, 2855, 1468, 2879], [1503, 2851, 1567, 2879], [1585, 2851, 1799, 2888], [1817, 2851, 1841, 2879], [1861, 2851, 1922, 2879], [1940, 2851, 1989, 2879], [2007, 2851, 2135, 2888], [2153, 2851, 2255, 2879], [1282, 2901, 1317, 2929], [1329, 2901, 1520, 2930], [1534, 2905, 1562, 2929], [1578, 2901, 1613, 2929], [1630, 2901, 1654, 2929], [1670, 2901, 1834, 2938], [1849, 2901, 1924, 2929], [1938, 2905, 1969, 2929], [1983, 2901, 2065, 2929], [2089, 2901, 2134, 2929], [2136, 2901, 2254, 2929], [1282, 2951, 1333, 2988], [1351, 2951, 1536, 2988], [1555, 2955, 1646, 2979], [1665, 2951, 1738, 2979], [1757, 2951, 1836, 2979], [1853, 2951, 1923, 2979], [1941, 2951, 1991, 2979], [2010, 2951, 2128, 2979], [2148, 2951, 2254, 2988], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 296, 313, 320], [329, 292, 404, 320], [420, 292, 628, 329], [645, 292, 702, 320], [718, 292, 931, 329], [947, 292, 1120, 329], [1149, 293, 1206, 320], [232, 342, 281, 370], [292, 342, 500, 379], [512, 342, 669, 379], [683, 342, 752, 379], [764, 342, 838, 370], [850, 351, 866, 370], [879, 342, 1017, 370], [1028, 342, 1131, 370], [1142, 342, 1204, 370], [232, 401, 329, 429], [344, 392, 446, 420], [461, 392, 508, 420], [522, 392, 622, 420], [637, 392, 686, 420], [700, 392, 885, 429], [900, 392, 935, 420], [947, 392, 997, 420], [1011, 396, 1116, 429], [1131, 392, 1204, 420], [232, 451, 301, 470], [317, 442, 399, 479], [414, 451, 511, 479], [528, 442, 600, 470], [616, 442, 665, 470], [681, 446, 785, 479], [801, 442, 982, 479], [998, 442, 1068, 470], [1096, 442, 1204, 470], [232, 492, 305, 526], [322, 492, 353, 520], [368, 492, 454, 520], [468, 496, 499, 520], [514, 492, 648, 521], [663, 492, 712, 520], [726, 492, 829, 520], [843, 492, 893, 520], [908, 492, 1026, 520], [1041, 492, 1100, 520], [1115, 496, 1146, 520], [1159, 501, 1204, 520], [232, 541, 308, 569], [321, 541, 370, 569], [382, 545, 487, 578], [499, 541, 680, 578], [693, 545, 724, 569], [736, 541, 808, 578], [821, 541, 870, 569], [884, 541, 963, 570], [977, 545, 1056, 569], [1068, 541, 1205, 578], [231, 591, 339, 619], [376, 591, 439, 619], [458, 591, 571, 619], [588, 600, 696, 619], [715, 591, 762, 619], [780, 591, 829, 619], [849, 591, 923, 619], [942, 591, 1069, 628], [1088, 591, 1160, 619], [1179, 591, 1203, 619], [231, 641, 292, 669], [310, 641, 359, 669], [376, 641, 589, 678], [607, 641, 756, 678], [773, 641, 927, 669], [946, 641, 995, 669], [1013, 641, 1203, 669], [230, 691, 348, 719], [349, 691, 421, 719], [433, 691, 512, 728], [527, 691, 563, 719], [573, 691, 671, 719], [687, 691, 730, 726], [743, 691, 793, 719], [806, 695, 896, 719], [909, 691, 991, 726], [1005, 691, 1142, 719], [1156, 691, 1205, 719], [232, 750, 338, 769], [354, 741, 411, 769], [427, 745, 519, 778], [534, 741, 715, 778], [730, 747, 762, 769], [776, 741, 852, 769], [868, 742, 998, 778], [1014, 747, 1087, 778], [1105, 741, 1205, 769], [233, 791, 327, 819], [340, 800, 371, 819], [383, 791, 432, 819], [441, 791, 555, 828], [558, 791, 614, 819], [621, 791, 671, 819], [681, 795, 741, 819], [752, 784, 982, 820], [999, 792, 1032, 819], [1042, 791, 1099, 819], [1111, 791, 1203, 825], [231, 849, 259, 868], [261, 840, 412, 868], [425, 840, 509, 868], [521, 844, 581, 868], [593, 840, 689, 868], [703, 840, 906, 877], [231, 953, 265, 988], [282, 953, 362, 988], [377, 953, 584, 988], [599, 953, 733, 988], [231, 1040, 274, 1068], [293, 1040, 451, 1068], [468, 1040, 498, 1068], [518, 1039, 562, 1077], [582, 1040, 631, 1068], [648, 1040, 778, 1077], [796, 1040, 968, 1077], [986, 1040, 1058, 1068], [1076, 1040, 1205, 1077], [230, 1090, 378, 1127], [391, 1090, 574, 1127], [588, 1090, 705, 1118], [721, 1099, 769, 1118], [783, 1090, 858, 1118], [871, 1090, 1110, 1127], [1124, 1100, 1204, 1118], [228, 1140, 340, 1177], [356, 1140, 427, 1175], [441, 1144, 472, 1168], [488, 1149, 524, 1168], [539, 1140, 702, 1177], [717, 1140, 848, 1168], [863, 1149, 897, 1168], [912, 1149, 948, 1168], [963, 1140, 1126, 1177], [1139, 1149, 1204, 1177], [230, 1190, 407, 1218], [420, 1194, 503, 1224], [518, 1199, 552, 1218], [563, 1190, 658, 1225], [672, 1190, 724, 1218], [736, 1194, 816, 1218], [828, 1190, 1026, 1227], [1041, 1190, 1090, 1218], [1104, 1194, 1205, 1227], [231, 1239, 353, 1268], [366, 1239, 433, 1268], [445, 1239, 506, 1267], [517, 1239, 542, 1267], [555, 1239, 730, 1267], [741, 1239, 782, 1276], [793, 1239, 910, 1267], [923, 1239, 984, 1267], [995, 1239, 1070, 1267], [1081, 1239, 1153, 1276], [1165, 1248, 1205, 1267], [230, 1289, 354, 1326], [366, 1289, 434, 1317], [447, 1289, 520, 1317], [533, 1298, 564, 1317], [577, 1289, 729, 1326], [231, 1364, 295, 1392], [306, 1364, 475, 1393], [487, 1364, 578, 1392], [580, 1364, 626, 1392], [639, 1364, 785, 1401], [797, 1368, 827, 1392], [839, 1373, 1000, 1393], [1012, 1364, 1096, 1392], [1107, 1364, 1203, 1392], [231, 1414, 262, 1442], [280, 1414, 367, 1442], [384, 1418, 414, 1442], [433, 1414, 539, 1442], [557, 1414, 974, 1451], [992, 1414, 1205, 1451], [231, 1464, 406, 1492], [418, 1464, 531, 1492], [542, 1464, 676, 1501], [687, 1473, 759, 1493], [769, 1464, 850, 1501], [862, 1468, 998, 1492], [1010, 1464, 1046, 1492], [1054, 1464, 1204, 1492], [231, 1513, 301, 1550], [315, 1517, 383, 1541], [405, 1513, 433, 1541], [448, 1513, 611, 1541], [625, 1513, 776, 1542], [790, 1513, 825, 1541], [836, 1513, 886, 1541], [899, 1513, 1001, 1541], [1015, 1513, 1040, 1541], [1056, 1513, 1160, 1541], [1174, 1513, 1205, 1541], [231, 1563, 338, 1600], [350, 1563, 376, 1591], [393, 1563, 456, 1591], [467, 1567, 528, 1591], [539, 1563, 620, 1591], [633, 1567, 748, 1600], [762, 1563, 932, 1598], [944, 1563, 974, 1591], [986, 1563, 1035, 1591], [1046, 1563, 1205, 1600], [232, 1613, 376, 1648], [390, 1622, 439, 1641], [267, 1715, 289, 1743], [315, 1715, 398, 1749], [420, 1715, 533, 1743], [550, 1719, 581, 1743], [600, 1715, 678, 1750], [696, 1719, 724, 1743], [743, 1715, 789, 1749], [809, 1715, 913, 1750], [934, 1724, 981, 1743], [998, 1715, 1136, 1752], [1154, 1715, 1204, 1743], [315, 1774, 423, 1794], [438, 1765, 468, 1793], [481, 1765, 690, 1802], [702, 1765, 816, 1793], [829, 1765, 963, 1802], [977, 1765, 1151, 1802], [1164, 1765, 1205, 1802], [314, 1815, 467, 1852], [482, 1815, 531, 1843], [546, 1815, 677, 1843], [692, 1815, 841, 1852], [855, 1815, 927, 1843], [943, 1824, 959, 1843], [973, 1824, 1057, 1843], [1072, 1815, 1205, 1843], [315, 1865, 595, 1894], [610, 1865, 759, 1902], [775, 1864, 879, 1902], [898, 1865, 1039, 1902], [1054, 1865, 1204, 1893], [315, 1914, 384, 1951], [395, 1914, 523, 1951], [533, 1914, 657, 1951], [670, 1918, 700, 1942], [712, 1914, 793, 1942], [804, 1914, 1037, 1951], [1048, 1914, 1084, 1942], [1092, 1914, 1141, 1942], [1152, 1923, 1204, 1943], [315, 1964, 455, 2001], [468, 1964, 538, 1992], [263, 2044, 289, 2072], [316, 2044, 444, 2078], [484, 2053, 530, 2072], [563, 2044, 718, 2072], [752, 2053, 768, 2072], [801, 2044, 890, 2073], [923, 2044, 1204, 2081], [315, 2094, 448, 2122], [460, 2094, 673, 2131], [686, 2094, 747, 2122], [761, 2094, 861, 2122], [873, 2094, 946, 2131], [958, 2094, 1112, 2122], [1127, 2103, 1204, 2122], [314, 2144, 393, 2181], [427, 2144, 648, 2181], [679, 2144, 955, 2181], [984, 2144, 1052, 2172], [1080, 2144, 1128, 2172], [1156, 2144, 1205, 2172], [315, 2194, 527, 2231], [537, 2194, 686, 2231], [697, 2193, 800, 2231], [816, 2194, 887, 2222], [899, 2194, 1002, 2223], [1013, 2194, 1062, 2222], [1072, 2194, 1148, 2222], [1158, 2194, 1206, 2222], [315, 2244, 486, 2281], [502, 2244, 585, 2272], [602, 2244, 790, 2281], [807, 2244, 859, 2272], [875, 2253, 1038, 2278], [1056, 2244, 1106, 2272], [1121, 2253, 1204, 2272], [314, 2293, 449, 2330], [461, 2293, 496, 2321], [505, 2293, 555, 2321], [565, 2293, 794, 2330], [806, 2297, 881, 2321], [892, 2293, 1016, 2321], [1029, 2297, 1060, 2321], [1072, 2293, 1144, 2330], [1156, 2293, 1205, 2321], [315, 2343, 412, 2371], [427, 2343, 457, 2371], [470, 2343, 519, 2371], [532, 2343, 679, 2372], [693, 2343, 808, 2380], [822, 2343, 976, 2380], [978, 2343, 1040, 2371], [1053, 2343, 1204, 2371], [315, 2393, 366, 2430], [376, 2393, 425, 2421], [436, 2387, 531, 2431], [537, 2390, 736, 2431], [745, 2393, 880, 2430], [890, 2393, 1081, 2421], [1093, 2397, 1121, 2421], [1130, 2393, 1205, 2421], [315, 2443, 442, 2480], [455, 2447, 519, 2480], [531, 2443, 562, 2471], [574, 2443, 623, 2471], [635, 2443, 722, 2472], [734, 2443, 825, 2478], [231, 2544, 291, 2574], [304, 2544, 466, 2582], [478, 2544, 702, 2582], [714, 2545, 876, 2574], [893, 2545, 961, 2574], [973, 2544, 999, 2574], [1012, 2547, 1096, 2574], [233, 2623, 322, 2652], [336, 2632, 383, 2651], [397, 2623, 437, 2651], [451, 2627, 502, 2651], [516, 2632, 584, 2651], [599, 2623, 689, 2651], [703, 2623, 851, 2660], [865, 2623, 1040, 2660], [1056, 2623, 1107, 2651], [1121, 2632, 1205, 2651], [233, 2672, 322, 2700], [338, 2672, 452, 2700], [468, 2672, 611, 2709], [631, 2681, 667, 2700], [685, 2672, 856, 2701], [872, 2676, 902, 2700], [919, 2672, 968, 2700], [985, 2672, 1116, 2700], [1132, 2672, 1157, 2700], [1174, 2676, 1205, 2700], [231, 2731, 285, 2750], [298, 2731, 314, 2750], [326, 2721, 624, 2751], [636, 2722, 801, 2759], [814, 2726, 844, 2750], [857, 2731, 943, 2750], [954, 2722, 1043, 2756], [1057, 2722, 1205, 2751], [232, 2772, 452, 2800], [464, 2772, 500, 2800], [508, 2772, 606, 2800], [619, 2772, 734, 2809], [744, 2772, 902, 2809], [914, 2772, 1058, 2809], [1070, 2772, 1205, 2809], [232, 2822, 452, 2850], [468, 2822, 503, 2850], [515, 2822, 622, 2850], [645, 2822, 715, 2850], [731, 2822, 799, 2850], [812, 2831, 873, 2850], [889, 2822, 1065, 2850], [1078, 2822, 1119, 2859], [1133, 2822, 1204, 2851], [232, 2872, 327, 2900], [340, 2872, 397, 2900], [410, 2873, 531, 2900], [545, 2872, 713, 2907], [725, 2876, 753, 2900], [767, 2872, 813, 2906], [827, 2872, 921, 2907], [935, 2872, 1035, 2900], [1047, 2872, 1116, 2909], [1128, 2872, 1204, 2909], [284, 2946, 324, 2979], [333, 2962, 375, 2979], [386, 2954, 455, 2979], [466, 2954, 533, 2979], [544, 2962, 601, 2979], [601, 2954, 657, 2979], [668, 2954, 741, 2987], [752, 2957, 779, 2979], [791, 2953, 808, 2979], [821, 2954, 895, 2979], [898, 2954, 972, 2979], [984, 2954, 1007, 2979], [1020, 2954, 1073, 2979], [1085, 2951, 1202, 2988], [1282, 292, 1381, 320], [1397, 301, 1413, 320], [1427, 292, 1542, 329], [1555, 292, 1693, 320], [1707, 292, 1757, 320], [1771, 292, 1918, 321], [1934, 301, 2019, 320], [2034, 292, 2091, 320], [2105, 292, 2155, 320], [2169, 292, 2255, 320], [1283, 351, 1391, 370], [1414, 343, 1447, 370], [1461, 342, 1537, 370], [1550, 342, 1753, 376], [1770, 351, 1870, 370], [1885, 351, 1964, 370], [1978, 342, 2140, 379], [2154, 351, 2194, 370], [2208, 352, 2254, 371], [1282, 402, 1413, 429], [1428, 392, 1464, 420], [1476, 392, 1584, 426], [1600, 392, 1651, 420], [1666, 392, 1696, 420], [1712, 392, 1845, 427], [1846, 396, 1908, 421], [1924, 392, 1970, 426], [1986, 392, 2099, 427], [2114, 392, 2171, 420], [2187, 392, 2255, 420], [1282, 451, 1342, 470], [1355, 442, 1443, 470], [1455, 451, 1513, 470], [1526, 446, 1590, 479], [1601, 442, 1713, 470], [1725, 442, 1782, 470], [1795, 442, 1995, 479], [2008, 442, 2127, 479], [2139, 446, 2169, 470], [2181, 442, 2254, 479], [1282, 492, 1412, 529], [1420, 492, 1654, 529], [1657, 492, 1716, 520], [1722, 496, 1857, 520], [1868, 492, 1899, 520], [1908, 492, 1984, 520], [1993, 492, 2172, 520], [2182, 492, 2254, 529], [1282, 541, 1428, 569], [1444, 541, 1578, 576], [1580, 541, 1664, 576], [1679, 541, 1831, 578], [1844, 541, 1961, 569], [1976, 541, 2090, 569], [2103, 541, 2192, 578], [2206, 541, 2255, 569], [1282, 591, 1418, 628], [1435, 591, 1584, 628], [1600, 591, 1728, 628], [1744, 591, 1893, 628], [1909, 591, 1939, 626], [1956, 591, 2119, 628], [2135, 591, 2255, 620], [1282, 641, 1317, 669], [1328, 641, 1608, 670], [1621, 641, 1792, 669], [1807, 641, 1908, 676], [1922, 641, 1951, 670], [1965, 641, 2033, 675], [2048, 641, 2165, 676], [2186, 641, 2255, 678], [1282, 691, 1317, 719], [1332, 691, 1416, 719], [1434, 691, 1597, 728], [1616, 691, 1718, 719], [1736, 691, 1817, 728], [1835, 691, 2027, 728], [2045, 691, 2179, 728], [2198, 691, 2255, 719], [1282, 741, 1372, 769], [1382, 741, 1421, 769], [1430, 741, 1506, 769], [1517, 741, 1547, 769], [1558, 750, 1613, 769], [1624, 741, 1825, 769], [1842, 742, 1875, 769], [1886, 741, 1942, 769], [1955, 741, 2039, 769], [2049, 750, 2096, 769], [2107, 741, 2197, 778], [2208, 741, 2256, 769], [1282, 791, 1331, 819], [1345, 791, 1498, 828], [1511, 791, 1602, 819], [1603, 791, 1741, 819], [1753, 791, 1843, 828], [1857, 791, 1993, 828], [2008, 791, 2157, 828], [2172, 791, 2255, 819], [1282, 840, 1303, 868], [1318, 840, 1372, 868], [1388, 840, 1466, 868], [1484, 840, 1588, 868], [1605, 844, 1635, 868], [1652, 840, 1733, 868], [1749, 840, 1951, 877], [1967, 840, 2176, 877], [2192, 840, 2254, 868], [1282, 894, 1368, 918], [1282, 994, 1341, 1024], [1354, 994, 1516, 1032], [1529, 994, 1763, 1032], [1775, 995, 1937, 1024], [1954, 995, 2022, 1024], [1354, 1044, 1606, 1074], [1619, 1044, 1659, 1080], [1672, 1044, 1769, 1080], [1281, 1122, 1407, 1150], [1421, 1122, 1556, 1159], [1567, 1122, 1636, 1150], [1649, 1122, 1732, 1150], [1735, 1122, 1791, 1150], [1804, 1131, 1862, 1150], [1874, 1122, 2004, 1159], [2006, 1122, 2125, 1150], [2138, 1126, 2168, 1150], [2180, 1122, 2255, 1150], [1281, 1172, 1372, 1206], [1386, 1172, 1407, 1200], [1419, 1172, 1444, 1200], [1457, 1172, 1578, 1209], [1590, 1172, 1749, 1209], [1761, 1172, 1809, 1200], [1820, 1172, 1869, 1200], [1880, 1172, 2129, 1209], [2143, 1176, 2173, 1200], [2185, 1181, 2254, 1209], [1281, 1226, 1345, 1250], [1359, 1222, 1428, 1250], [1444, 1222, 1541, 1250], [1557, 1222, 1695, 1250], [1710, 1222, 1759, 1250], [1774, 1226, 1834, 1250], [1849, 1222, 1998, 1259], [2000, 1222, 2120, 1250], [2135, 1226, 2165, 1250], [2180, 1222, 2255, 1250], [1281, 1272, 1372, 1306], [1386, 1272, 1486, 1300], [1498, 1281, 1545, 1300], [1557, 1272, 1680, 1300], [1691, 1272, 1780, 1309], [1793, 1272, 1842, 1300], [1855, 1271, 1881, 1300], [1894, 1276, 1969, 1300], [1981, 1272, 2012, 1300], [2024, 1272, 2165, 1309], [2181, 1272, 2204, 1300], [2222, 1273, 2255, 1300], [1281, 1322, 1331, 1350], [1346, 1322, 1467, 1359], [1482, 1322, 1629, 1359], [1646, 1322, 1762, 1359], [1781, 1322, 1864, 1350], [1881, 1322, 2061, 1350], [2079, 1331, 2135, 1350], [2150, 1322, 2188, 1350], [2204, 1331, 2254, 1350], [1280, 1372, 1404, 1409], [1423, 1381, 1453, 1400], [1473, 1381, 1489, 1400], [1506, 1372, 1613, 1400], [1631, 1371, 1663, 1400], [1682, 1372, 1782, 1400], [1800, 1382, 1844, 1412], [1866, 1372, 1996, 1400], [2015, 1372, 2064, 1400], [2081, 1372, 2255, 1400], [1282, 1421, 1404, 1449], [1416, 1421, 1452, 1449], [1461, 1421, 1544, 1449], [1555, 1422, 1566, 1449], [1580, 1421, 1610, 1449], [1622, 1430, 1681, 1449], [1692, 1421, 1840, 1458], [1852, 1421, 1924, 1449], [1936, 1421, 2019, 1449], [2030, 1422, 2046, 1457], [2060, 1421, 2091, 1449], [2102, 1421, 2152, 1449], [2163, 1421, 2252, 1449], [1281, 1472, 1314, 1499], [1330, 1471, 1380, 1499], [1394, 1475, 1454, 1499], [1469, 1471, 1505, 1499], [1518, 1480, 1573, 1499], [1588, 1471, 1759, 1499], [1775, 1480, 1822, 1499], [1838, 1471, 1901, 1499], [1915, 1471, 1994, 1499], [2009, 1475, 2040, 1499], [2055, 1471, 2181, 1508], [2198, 1471, 2255, 1499], [1281, 1521, 1404, 1555], [1420, 1521, 1477, 1549], [1490, 1521, 1599, 1549], [1613, 1521, 1652, 1549], [1665, 1521, 1930, 1558], [1942, 1525, 2122, 1558], [2136, 1521, 2225, 1558], [2238, 1531, 2254, 1549], [1282, 1571, 1471, 1608], [1490, 1571, 1547, 1599], [1564, 1571, 1603, 1599], [1619, 1571, 1873, 1608], [1888, 1575, 2068, 1608], [2086, 1571, 2158, 1599], [2167, 1571, 2191, 1608], [2207, 1580, 2254, 1599], [1280, 1621, 1433, 1658], [1281, 1695, 1310, 1723], [1322, 1695, 1372, 1723], [1387, 1695, 1639, 1723], [1654, 1695, 1737, 1723], [1752, 1695, 1935, 1732], [1949, 1699, 2143, 1724], [2160, 1704, 2188, 1730], [2207, 1704, 2255, 1723], [1282, 1745, 1404, 1773], [1420, 1749, 1450, 1773], [1466, 1745, 1545, 1773], [1562, 1754, 1578, 1773], [1596, 1742, 1643, 1783], [1655, 1742, 1924, 1783], [1939, 1745, 2046, 1773], [2063, 1745, 2104, 1779], [2123, 1745, 2192, 1773], [2208, 1754, 2255, 1773], [1281, 1804, 1337, 1823], [1348, 1804, 1468, 1832], [1480, 1795, 1559, 1823], [1570, 1804, 1598, 1823], [1600, 1795, 1690, 1823], [1699, 1795, 1777, 1823], [1787, 1799, 1817, 1823], [1829, 1804, 1859, 1823], [1871, 1795, 1920, 1823], [1930, 1797, 2021, 1824], [2031, 1794, 2255, 1832], [1281, 1844, 1438, 1881], [1451, 1854, 1482, 1873], [1495, 1845, 1626, 1873], [1400, 1943, 1455, 1978], [1462, 1935, 1615, 1982], [1633, 1957, 1661, 1966], [1677, 1932, 1800, 1990], [1811, 1941, 1916, 1984], [1933, 1961, 1959, 1962], [1973, 1932, 2050, 1989], [2209, 1944, 2254, 1979], [1764, 2002, 1777, 2027], [1700, 2002, 1709, 2021], [1633, 2047, 2135, 2094], [2209, 2056, 2254, 2091], [1282, 2149, 1381, 2177], [1398, 2149, 1545, 2186], [1562, 2148, 1594, 2177], [1611, 2149, 1755, 2177], [1772, 2149, 1833, 2177], [1849, 2149, 1898, 2177], [1914, 2149, 2092, 2186], [2110, 2158, 2159, 2177], [2174, 2149, 2255, 2177], [1283, 2199, 1406, 2236], [1424, 2198, 1456, 2227], [1468, 2203, 1603, 2236], [1615, 2199, 1665, 2227], [1674, 2199, 1884, 2236], [1896, 2199, 2033, 2227], [2045, 2199, 2084, 2227], [2096, 2199, 2141, 2228], [2155, 2199, 2253, 2227], [1282, 2249, 1312, 2277], [1327, 2249, 1452, 2286], [1468, 2249, 1540, 2277], [1554, 2253, 1671, 2286], [1686, 2253, 1716, 2277], [1733, 2249, 1772, 2277], [1788, 2242, 1837, 2278], [1855, 2249, 1953, 2277], [1970, 2249, 2000, 2277], [2015, 2249, 2138, 2283], [2156, 2249, 2214, 2277], [2229, 2249, 2253, 2277], [1282, 2298, 1390, 2326], [1407, 2298, 1471, 2326], [1487, 2298, 1536, 2326], [1553, 2307, 1659, 2326], [1674, 2298, 1710, 2326], [1723, 2298, 1772, 2326], [1788, 2302, 1848, 2326], [1864, 2298, 1945, 2326], [1961, 2298, 2133, 2335], [2150, 2298, 2181, 2326], [2197, 2298, 2253, 2326], [1282, 2348, 1485, 2382], [1498, 2348, 1627, 2385], [1317, 2457, 1339, 2485], [1364, 2457, 1433, 2485], [1446, 2461, 1477, 2485], [1490, 2457, 1590, 2486], [1603, 2466, 1636, 2485], [1648, 2457, 1730, 2485], [1742, 2457, 1842, 2485], [1855, 2457, 1938, 2485], [1941, 2461, 1998, 2485], [2010, 2457, 2074, 2494], [2087, 2466, 2118, 2485], [2132, 2457, 2254, 2485], [1365, 2507, 1427, 2535], [1438, 2507, 1517, 2544], [1532, 2507, 1591, 2542], [1605, 2507, 1889, 2544], [1902, 2506, 1959, 2542], [1313, 2593, 1339, 2621], [1364, 2593, 1433, 2621], [1447, 2597, 1478, 2621], [1492, 2593, 1651, 2630], [1664, 2593, 1799, 2622], [1814, 2590, 1881, 2631], [1899, 2593, 2005, 2630], [2019, 2593, 2155, 2630], [2172, 2593, 2255, 2621], [1365, 2642, 1483, 2679], [1498, 2642, 1667, 2679], [1682, 2642, 1704, 2670], [1720, 2642, 1815, 2670], [1832, 2651, 1862, 2670], [1879, 2642, 1928, 2670], [1942, 2642, 2068, 2679], [2083, 2642, 2119, 2670], [2131, 2642, 2180, 2670], [2195, 2646, 2255, 2670], [1365, 2692, 1546, 2729], [1559, 2692, 1635, 2720], [1650, 2689, 1766, 2730], [1784, 2707, 1788, 2712], [1805, 2685, 1890, 2730], [1905, 2698, 1937, 2720], [1948, 2692, 2024, 2720], [2037, 2693, 2167, 2729], [2179, 2698, 2252, 2729], [1282, 2801, 1345, 2829], [1357, 2801, 1570, 2838], [1583, 2801, 1732, 2838], [1745, 2801, 1894, 2829], [1905, 2801, 2058, 2838], [2072, 2801, 2121, 2829], [2134, 2801, 2254, 2829], [1282, 2851, 1330, 2879], [1346, 2851, 1481, 2879], [1495, 2851, 1633, 2879], [1648, 2851, 1746, 2879], [1763, 2851, 1794, 2879], [1809, 2851, 1859, 2879], [1874, 2855, 1934, 2879], [1950, 2851, 2133, 2888], [2149, 2860, 2253, 2888], [1283, 2901, 1344, 2936], [1368, 2901, 1425, 2929], [1445, 2894, 1513, 2936], [1532, 2901, 1737, 2938], [1756, 2905, 1787, 2929], [1806, 2901, 1881, 2929], [1901, 2901, 2064, 2938], [2083, 2901, 2252, 2938], [1282, 2951, 1423, 2980], [1436, 2951, 1520, 2979], [1532, 2951, 1700, 2988], [1702, 2951, 1790, 2979], [1804, 2955, 1868, 2988], [1879, 2951, 1920, 2988], [1931, 2951, 2117, 2988], [2130, 2960, 2146, 2979], [2158, 2951, 2254, 2979], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [662, 298, 799, 326], [819, 298, 1050, 326], [588, 467, 604, 488], [654, 459, 729, 488], [843, 465, 894, 491], [1020, 462, 1073, 489], [1104, 460, 1165, 497], [489, 519, 527, 540], [497, 561, 523, 590], [461, 651, 533, 680], [819, 645, 912, 694], [1087, 642, 1242, 694], [458, 742, 533, 770], [449, 786, 537, 815], [589, 1041, 734, 1076], [746, 1039, 924, 1068], [937, 1039, 1121, 1076], [589, 1089, 753, 1123], [766, 1084, 974, 1124], [1575, 301, 1684, 329], [1694, 301, 1926, 329], [1502, 381, 1529, 407], [1633, 366, 1688, 395], [1719, 370, 1769, 395], [1790, 367, 1844, 395], [1865, 374, 1926, 395], [1599, 421, 1624, 450], [1557, 462, 1637, 491], [1602, 507, 1625, 536], [1382, 547, 1409, 578], [1546, 547, 1623, 575], [1286, 571, 1299, 613], [1572, 597, 1622, 618], [1274, 639, 1316, 702], [1351, 597, 1497, 688], [1780, 655, 1785, 678], [1277, 690, 1288, 702], [1363, 706, 1446, 727], [1638, 693, 1655, 713], [1715, 687, 1764, 713], [1796, 684, 1950, 720], [1342, 721, 1356, 735], [1391, 721, 1437, 740], [0, 0, 2550, 3300], [1859, 736, 1932, 742], [1583, 1041, 1728, 1075], [1742, 1039, 1863, 1075], [1876, 1043, 1941, 1068], [1581, 1089, 1686, 1125], [1698, 1084, 1891, 1125], [232, 1241, 328, 1274], [339, 1241, 363, 1266], [376, 1241, 463, 1274], [473, 1240, 565, 1274], [575, 1241, 812, 1274], [815, 1240, 880, 1266], [889, 1241, 1010, 1274], [1020, 1241, 1211, 1274], [1221, 1240, 1399, 1274], [1411, 1241, 1550, 1274], [1561, 1241, 1589, 1273], [1599, 1241, 1622, 1266], [1633, 1241, 1720, 1274], [1731, 1241, 1783, 1266], [1794, 1241, 1880, 1266], [1891, 1249, 1919, 1266], [1930, 1241, 1974, 1266], [1983, 1241, 2097, 1274], [2107, 1240, 2139, 1266], [2147, 1241, 2191, 1266], [2201, 1244, 2255, 1266], [232, 1286, 394, 1320], [404, 1287, 482, 1312], [496, 1287, 526, 1312], [535, 1290, 659, 1317], [670, 1287, 714, 1312], [723, 1287, 945, 1312], [956, 1287, 1095, 1320], [1104, 1287, 1132, 1319], [1142, 1287, 1341, 1320], [1351, 1287, 1395, 1312], [1404, 1286, 1496, 1320], [1505, 1287, 1560, 1312], [1569, 1286, 1606, 1320], [1615, 1287, 1759, 1320], [1769, 1295, 1833, 1312], [1841, 1287, 1956, 1320], [1965, 1287, 2036, 1312], [2045, 1295, 2255, 1312], [233, 1333, 358, 1358], [370, 1333, 397, 1358], [408, 1341, 424, 1358], [434, 1333, 538, 1358], [550, 1333, 653, 1366], [664, 1332, 696, 1358], [704, 1333, 815, 1366], [827, 1333, 1046, 1366], [233, 1462, 396, 1499], [410, 1466, 474, 1499], [486, 1462, 567, 1499], [580, 1466, 610, 1490], [623, 1462, 751, 1499], [764, 1466, 794, 1490], [808, 1462, 889, 1490], [902, 1462, 952, 1490], [965, 1462, 1129, 1499], [1142, 1471, 1204, 1490], [232, 1512, 287, 1540], [300, 1511, 341, 1540], [358, 1513, 513, 1546], [525, 1512, 711, 1549], [723, 1512, 806, 1540], [819, 1512, 982, 1549], [993, 1512, 1124, 1549], [1136, 1521, 1204, 1540], [232, 1562, 304, 1599], [316, 1562, 440, 1591], [456, 1562, 536, 1597], [549, 1562, 578, 1591], [591, 1563, 667, 1599], [681, 1562, 775, 1597], [789, 1571, 822, 1590], [834, 1562, 995, 1599], [1009, 1562, 1089, 1599], [1090, 1571, 1132, 1590], [1134, 1562, 1203, 1596], [232, 1612, 326, 1647], [344, 1612, 484, 1640], [502, 1612, 559, 1640], [576, 1612, 703, 1649], [720, 1613, 822, 1640], [839, 1612, 1102, 1649], [1119, 1612, 1204, 1640], [232, 1662, 284, 1690], [301, 1662, 371, 1690], [385, 1662, 409, 1690], [421, 1662, 494, 1690], [506, 1662, 774, 1699], [786, 1662, 883, 1699], [896, 1662, 953, 1690], [966, 1662, 1030, 1690], [1042, 1662, 1135, 1699], [1152, 1663, 1205, 1690], [232, 1711, 333, 1739], [344, 1711, 405, 1739], [415, 1715, 446, 1739], [457, 1711, 538, 1739], [549, 1711, 598, 1739], [609, 1711, 783, 1739], [794, 1711, 1067, 1748], [1080, 1711, 1205, 1739], [231, 1761, 368, 1798], [382, 1761, 465, 1789], [480, 1761, 667, 1798], [690, 1762, 722, 1789], [736, 1761, 823, 1789], [836, 1765, 867, 1789], [880, 1761, 920, 1789], [934, 1761, 1003, 1795], [1019, 1770, 1066, 1789], [1080, 1761, 1205, 1798], [232, 1811, 345, 1848], [357, 1811, 407, 1839], [418, 1811, 542, 1848], [555, 1811, 682, 1848], [695, 1811, 770, 1839], [789, 1811, 852, 1839], [865, 1811, 946, 1839], [959, 1811, 1159, 1839], [1172, 1811, 1208, 1839], [232, 1861, 288, 1889], [301, 1861, 385, 1889], [396, 1861, 420, 1889], [433, 1865, 464, 1889], [477, 1861, 682, 1898], [693, 1861, 742, 1889], [753, 1861, 851, 1898], [863, 1858, 931, 1899], [946, 1865, 1029, 1895], [1042, 1861, 1163, 1889], [1174, 1861, 1205, 1889], [232, 1911, 373, 1948], [385, 1911, 401, 1940], [414, 1911, 445, 1939], [456, 1915, 545, 1939], [558, 1911, 594, 1939], [602, 1911, 651, 1939], [661, 1911, 767, 1948], [778, 1911, 1029, 1948], [1032, 1911, 1203, 1945], [231, 1960, 320, 1997], [331, 1960, 616, 1997], [628, 1960, 709, 1988], [720, 1960, 804, 1988], [815, 1970, 1034, 1988], [1035, 1960, 1203, 1988], [232, 2010, 373, 2038], [385, 2010, 464, 2038], [475, 2014, 612, 2038], [623, 2010, 747, 2047], [760, 2010, 993, 2047], [1008, 2010, 1067, 2045], [1082, 2010, 1206, 2039], [231, 2060, 359, 2097], [377, 2069, 393, 2088], [409, 2060, 672, 2097], [689, 2060, 775, 2097], [806, 2060, 869, 2088], [885, 2060, 966, 2088], [983, 2069, 1099, 2097], [1101, 2060, 1152, 2088], [1170, 2060, 1204, 2088], [232, 2110, 373, 2138], [387, 2110, 613, 2147], [626, 2110, 657, 2138], [671, 2110, 778, 2147], [792, 2110, 819, 2144], [835, 2110, 892, 2138], [906, 2110, 1063, 2138], [1077, 2110, 1108, 2138], [1121, 2119, 1205, 2138], [232, 2160, 322, 2188], [333, 2160, 438, 2188], [232, 2234, 260, 2262], [262, 2243, 306, 2262], [319, 2234, 382, 2262], [396, 2238, 469, 2271], [485, 2234, 585, 2262], [598, 2234, 658, 2262], [672, 2234, 755, 2262], [768, 2234, 818, 2262], [832, 2234, 995, 2271], [1008, 2234, 1134, 2271], [1149, 2243, 1205, 2262], [231, 2284, 269, 2312], [279, 2284, 464, 2312], [474, 2288, 504, 2312], [515, 2293, 582, 2312], [591, 2288, 622, 2312], [632, 2293, 699, 2318], [711, 2293, 758, 2312], [767, 2293, 823, 2312], [833, 2284, 972, 2321], [982, 2284, 1031, 2312], [1041, 2284, 1205, 2321], [232, 2334, 357, 2371], [373, 2343, 403, 2362], [418, 2343, 434, 2362], [446, 2334, 635, 2362], [649, 2334, 706, 2362], [719, 2334, 803, 2362], [815, 2334, 956, 2371], [970, 2334, 986, 2363], [1002, 2343, 1032, 2362], [1047, 2343, 1084, 2362], [1097, 2343, 1204, 2371], [232, 2384, 324, 2412], [342, 2393, 414, 2413], [431, 2384, 481, 2412], [498, 2384, 687, 2412], [706, 2384, 741, 2412], [757, 2384, 882, 2421], [901, 2384, 958, 2412], [976, 2384, 1090, 2412], [1108, 2384, 1204, 2412], [233, 2434, 384, 2471], [386, 2434, 612, 2471], [627, 2444, 672, 2474], [690, 2447, 718, 2456], [733, 2431, 837, 2473], [848, 2422, 896, 2479], [901, 2431, 924, 2472], [344, 2539, 480, 2577], [492, 2532, 544, 2569], [577, 2554, 605, 2563], [373, 2538, 416, 2579], [550, 2538, 560, 2579], [622, 2576, 706, 2605], [710, 2576, 770, 2605], [773, 2575, 851, 2605], [870, 2521, 937, 2596], [953, 2521, 1204, 2596], [233, 2652, 322, 2681], [338, 2652, 387, 2680], [402, 2652, 526, 2689], [542, 2652, 610, 2680], [626, 2652, 650, 2680], [667, 2652, 770, 2689], [787, 2656, 815, 2680], [831, 2652, 880, 2680], [897, 2656, 1037, 2680], [1053, 2652, 1139, 2686], [1158, 2661, 1205, 2680], [231, 2702, 292, 2730], [293, 2702, 394, 2730], [407, 2702, 580, 2730], [592, 2702, 671, 2739], [685, 2702, 732, 2730], [744, 2702, 793, 2730], [806, 2712, 842, 2730], [857, 2706, 997, 2730], [1009, 2711, 1101, 2730], [1113, 2702, 1143, 2730], [1156, 2702, 1205, 2730], [225, 2752, 259, 2789], [272, 2756, 421, 2786], [434, 2752, 486, 2780], [498, 2761, 545, 2780], [558, 2752, 597, 2780], [610, 2756, 662, 2780], [673, 2752, 763, 2780], [776, 2752, 883, 2780], [902, 2753, 955, 2780], [967, 2752, 1116, 2780], [1128, 2752, 1205, 2780], [233, 2810, 249, 2829], [261, 2801, 524, 2838], [536, 2801, 646, 2829], [664, 2801, 692, 2829], [704, 2801, 791, 2830], [804, 2801, 991, 2838], [1003, 2801, 1028, 2829], [1041, 2805, 1072, 2829], [1085, 2810, 1205, 2829], [232, 2851, 292, 2879], [304, 2851, 378, 2879], [390, 2851, 538, 2880], [550, 2861, 586, 2879], [600, 2851, 683, 2879], [695, 2860, 751, 2879], [762, 2851, 939, 2888], [950, 2851, 988, 2879], [1001, 2851, 1121, 2888], [1133, 2851, 1205, 2879], [232, 2901, 306, 2929], [324, 2901, 472, 2930], [483, 2901, 517, 2938], [535, 2901, 618, 2929], [637, 2901, 697, 2936], [718, 2905, 748, 2929], [767, 2910, 887, 2929], [906, 2910, 922, 2929], [940, 2900, 1083, 2930], [1101, 2901, 1204, 2930], [232, 2950, 407, 2988], [419, 2951, 548, 2986], [562, 2951, 609, 2979], [620, 2951, 694, 2979], [706, 2951, 789, 2979], [802, 2952, 830, 2979], [844, 2951, 891, 2979], [904, 2951, 1054, 2980], [1064, 2957, 1204, 2980], [1278, 1463, 1372, 1499], [1404, 1462, 1507, 1491], [1523, 1462, 1580, 1490], [1599, 1462, 1794, 1499], [1814, 1471, 1873, 1490], [1889, 1471, 1945, 1490], [1962, 1462, 2032, 1490], [2050, 1462, 2255, 1499], [1282, 1512, 1423, 1549], [1438, 1512, 1455, 1541], [1471, 1512, 1512, 1549], [1528, 1512, 1677, 1549], [1693, 1511, 1718, 1541], [1733, 1512, 1886, 1549], [1901, 1512, 2026, 1549], [2042, 1512, 2099, 1540], [2114, 1512, 2255, 1549], [1282, 1562, 1395, 1590], [1416, 1562, 1649, 1599], [1673, 1555, 1794, 1600], [1817, 1562, 1897, 1590], [1916, 1562, 1965, 1590], [1984, 1562, 2108, 1599], [2127, 1562, 2255, 1599], [1282, 1612, 1358, 1640], [1295, 1698, 1511, 1745], [1529, 1715, 1557, 1733], [1576, 1679, 1604, 1764], [1661, 1695, 1717, 1753], [1774, 1679, 1836, 1763], [1865, 1695, 1921, 1753], [1965, 1695, 2021, 1753], [2053, 1704, 2105, 1745], [2121, 1716, 2178, 1735], [2179, 1695, 2239, 1752], [1618, 1764, 1761, 1794], [1848, 1765, 1934, 1787], [1946, 1764, 2037, 1795], [2209, 1804, 2254, 1839], [1281, 1855, 1305, 1882], [1320, 1854, 1344, 1882], [1360, 1854, 1520, 1891], [1534, 1858, 1565, 1882], [1579, 1858, 1649, 1882], [1663, 1854, 1724, 1882], [1738, 1854, 1788, 1882], [1802, 1854, 1919, 1891], [1935, 1854, 1970, 1882], [1982, 1854, 2031, 1882], [2046, 1854, 2182, 1891], [2197, 1855, 2254, 1882], [1281, 1904, 1360, 1941], [1378, 1904, 1435, 1932], [1451, 1904, 1564, 1932], [1580, 1904, 1703, 1941], [1720, 1908, 1875, 1932], [1893, 1914, 1927, 1932], [1945, 1904, 2002, 1932], [2018, 1914, 2041, 1932], [2057, 1904, 2134, 1932], [2150, 1908, 2201, 1932], [2216, 1904, 2255, 1932], [1281, 1953, 1378, 1990], [1399, 1953, 1456, 1981], [1472, 1962, 1556, 1981], [1573, 1953, 1765, 1990], [1781, 1963, 1815, 1981], [1838, 1958, 1875, 1984], [1902, 1950, 1967, 1991], [1989, 1953, 2085, 1981], [2108, 1958, 2145, 1984], [2172, 1946, 2252, 1991], [1281, 2003, 1496, 2037], [1509, 2003, 1609, 2031], [1620, 2003, 1681, 2031], [1691, 2003, 1785, 2031], [1797, 2012, 1813, 2031], [1823, 2003, 1956, 2031], [1968, 2003, 2131, 2040], [2142, 2003, 2253, 2037], [1282, 2057, 1310, 2081], [1320, 2053, 1394, 2081], [1404, 2053, 1532, 2090], [1543, 2057, 1616, 2090], [1628, 2053, 1702, 2081], [1712, 2053, 1795, 2081], [1806, 2053, 1836, 2081], [1846, 2053, 1896, 2081], [1906, 2053, 2042, 2090], [2052, 2053, 2177, 2090], [2188, 2062, 2254, 2081], [1281, 2107, 1368, 2131], [1384, 2103, 1416, 2131], [1435, 2103, 1498, 2131], [1513, 2103, 1552, 2131], [1567, 2103, 1697, 2140], [1714, 2103, 1840, 2131], [1859, 2103, 1898, 2131], [1914, 2103, 2012, 2131], [2029, 2103, 2060, 2131], [2076, 2103, 2125, 2131], [2141, 2103, 2255, 2131], [1282, 2157, 1423, 2181], [1439, 2146, 1485, 2181], [1510, 2154, 1563, 2181], [1577, 2162, 1633, 2181], [1647, 2157, 1843, 2190], [1857, 2153, 1914, 2181], [1929, 2153, 1970, 2190], [1986, 2153, 2096, 2190], [2110, 2153, 2255, 2190], [1281, 2203, 1356, 2231], [1369, 2203, 1494, 2240], [1507, 2203, 1590, 2231], [1603, 2203, 1730, 2231], [1744, 2203, 1793, 2231], [1806, 2212, 1894, 2231], [1907, 2203, 2020, 2231], [2032, 2203, 2253, 2240], [1281, 2254, 1561, 2281], [1579, 2252, 1778, 2289], [1791, 2261, 1838, 2280], [1848, 2252, 2024, 2289], [2034, 2252, 2175, 2289], [2186, 2252, 2204, 2281], [2214, 2252, 2255, 2289], [1282, 2302, 1432, 2339], [1447, 2302, 1519, 2339], [1534, 2311, 1593, 2330], [1607, 2302, 1731, 2339], [1747, 2302, 1966, 2339], [1980, 2311, 2033, 2339], [2047, 2302, 2174, 2339], [2191, 2306, 2255, 2339], [1282, 2352, 1342, 2387], [1356, 2351, 1381, 2381], [1396, 2365, 1424, 2374], [1441, 2352, 1480, 2387], [1494, 2352, 1551, 2380], [1563, 2356, 1590, 2380], [1601, 2361, 1654, 2380], [1655, 2352, 1814, 2389], [1825, 2356, 1890, 2389], [1901, 2354, 1914, 2380], [1925, 2361, 1972, 2380], [1982, 2352, 2126, 2389], [2137, 2352, 2186, 2380], [2197, 2352, 2254, 2380], [1281, 2402, 1394, 2439], [1406, 2402, 1562, 2439], [1575, 2401, 1798, 2439], [1810, 2401, 2034, 2439], [2046, 2401, 2211, 2438], [2010, 2482, 2028, 2495], [1503, 2517, 1515, 2530], [1706, 2491, 1719, 2519], [1775, 2482, 1802, 2495], [1863, 2517, 1875, 2530], [1940, 2491, 1953, 2519], [1381, 2503, 1444, 2559], [1453, 2510, 1607, 2557], [1625, 2511, 1731, 2575], [1761, 2508, 1817, 2566], [1843, 2528, 1917, 2557], [1934, 2536, 1960, 2575], [1991, 2508, 2047, 2566], [2076, 2507, 2254, 2565], [1744, 2577, 1830, 2599], [1972, 2586, 1994, 2599], [1996, 2576, 2063, 2608], [1281, 2652, 1381, 2680], [1395, 2651, 1426, 2680], [1443, 2652, 1567, 2680], [1580, 2652, 1630, 2680], [1642, 2652, 1767, 2689], [1779, 2661, 1813, 2680], [1825, 2652, 1938, 2680], [1952, 2652, 2087, 2689], [2101, 2656, 2254, 2680], [1281, 2702, 1345, 2739], [1361, 2702, 1462, 2730], [1479, 2702, 1559, 2730], [1575, 2702, 1624, 2730], [1640, 2702, 1764, 2739], [1780, 2711, 1897, 2739], [1928, 2703, 1961, 2730], [1978, 2702, 2062, 2730], [2078, 2702, 2186, 2736], [2207, 2702, 2254, 2730], [1281, 2752, 1517, 2781], [1536, 2753, 1700, 2783], [1719, 2762, 1737, 2780], [1756, 2752, 1895, 2789], [1912, 2752, 2034, 2786], [2053, 2752, 2186, 2781], [2207, 2752, 2254, 2780], [1282, 2811, 1369, 2829], [1380, 2801, 1599, 2838], [1610, 2807, 1884, 2830], [1894, 2801, 1932, 2838], [1936, 2801, 1983, 2829], [1990, 2801, 2123, 2838], [2133, 2811, 2252, 2838], [1282, 2851, 1330, 2880], [1347, 2851, 1383, 2879], [1401, 2860, 1479, 2885], [1498, 2851, 1555, 2879], [1573, 2851, 1722, 2888], [1739, 2851, 1763, 2879], [1781, 2851, 1959, 2888], [1976, 2851, 2059, 2879], [2077, 2851, 2116, 2879], [2132, 2851, 2254, 2879], [1282, 2901, 1368, 2938], [1383, 2901, 1485, 2929], [1498, 2910, 1627, 2938], [1628, 2905, 1689, 2929], [1702, 2901, 1751, 2929], [1764, 2901, 1861, 2930], [1875, 2901, 2006, 2929], [2020, 2901, 2073, 2938], [2086, 2901, 2255, 2938], [1283, 2951, 1321, 2979], [1336, 2951, 1533, 2988], [1549, 2955, 1580, 2979], [1594, 2951, 1643, 2979], [1659, 2960, 1741, 2979], [1756, 2951, 1865, 2986], [1881, 2951, 1933, 2979], [1947, 2951, 2077, 2988], [2092, 2960, 2123, 2979], [2139, 2960, 2155, 2979], [2169, 2960, 2254, 2988], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 292, 337, 320], [351, 292, 423, 320], [439, 292, 488, 320], [504, 292, 712, 329], [727, 292, 834, 326], [852, 301, 899, 320], [914, 292, 977, 320], [992, 292, 1053, 320], [1069, 292, 1090, 320], [1105, 292, 1203, 320], [232, 351, 303, 379], [315, 342, 385, 370], [397, 342, 428, 370], [439, 342, 577, 379], [595, 343, 642, 379], [655, 342, 804, 379], [817, 342, 944, 379], [957, 346, 1112, 370], [1126, 342, 1205, 370], [232, 392, 281, 420], [291, 392, 415, 429], [426, 392, 576, 420], [578, 392, 797, 426], [810, 392, 866, 420], [879, 392, 1028, 429], [1039, 392, 1205, 429], [233, 442, 452, 479], [465, 442, 606, 479], [618, 442, 634, 471], [648, 442, 710, 477], [721, 451, 805, 470], [816, 446, 876, 470], [887, 442, 970, 470], [973, 451, 1046, 470], [1057, 442, 1205, 471], [232, 492, 352, 529], [353, 492, 407, 520], [419, 501, 435, 520], [444, 492, 568, 529], [579, 492, 805, 529], [818, 492, 867, 520], [878, 496, 1013, 529], [1022, 492, 1072, 520], [1082, 492, 1204, 520], [232, 541, 318, 578], [330, 541, 377, 569], [386, 541, 436, 569], [445, 545, 505, 569], [515, 541, 598, 569], [601, 541, 688, 569], [696, 541, 735, 569], [744, 541, 861, 578], [871, 541, 1006, 578], [1006, 541, 1070, 575], [1082, 550, 1204, 578], [232, 591, 325, 619], [336, 595, 367, 619], [380, 591, 451, 632], [464, 591, 590, 619], [600, 591, 712, 628], [724, 595, 754, 619], [767, 591, 896, 628], [908, 595, 1049, 628], [1061, 591, 1110, 619], [1122, 591, 1205, 619], [233, 641, 396, 678], [408, 641, 534, 678], [548, 651, 605, 681], [231, 746, 291, 775], [304, 746, 441, 775], [452, 745, 674, 783], [687, 745, 737, 775], [749, 746, 854, 775], [865, 746, 980, 775], [231, 824, 380, 861], [397, 825, 415, 852], [434, 824, 458, 852], [478, 833, 515, 852], [533, 824, 772, 861], [790, 824, 826, 852], [840, 824, 982, 861], [1000, 824, 1026, 853], [1059, 824, 1102, 852], [1121, 824, 1204, 852], [231, 873, 324, 901], [336, 873, 366, 901], [378, 873, 485, 910], [497, 873, 524, 907], [537, 882, 584, 901], [596, 882, 644, 901], [655, 873, 748, 910], [760, 873, 919, 901], [931, 873, 962, 901], [973, 873, 1144, 910], [1156, 873, 1205, 901], [231, 923, 334, 960], [351, 923, 603, 960], [604, 923, 772, 951], [791, 923, 838, 951], [856, 932, 872, 951], [889, 923, 1058, 960], [1078, 923, 1125, 951], [1146, 933, 1202, 963], [232, 974, 386, 1007], [401, 973, 442, 1010], [457, 973, 606, 1010], [620, 973, 704, 1001], [706, 977, 762, 1001], [776, 973, 825, 1001], [840, 973, 1081, 1007], [1097, 973, 1147, 1001], [1160, 973, 1204, 1001], [232, 1023, 278, 1051], [293, 1023, 445, 1060], [446, 1023, 610, 1051], [626, 1032, 674, 1051], [689, 1023, 809, 1051], [822, 1023, 863, 1060], [877, 1023, 926, 1051], [940, 1023, 1049, 1051], [1067, 1024, 1205, 1060], [225, 1073, 419, 1110], [434, 1073, 472, 1110], [479, 1083, 661, 1101], [676, 1073, 707, 1101], [722, 1082, 738, 1101], [752, 1073, 841, 1110], [856, 1077, 977, 1101], [980, 1073, 1071, 1108], [1086, 1073, 1204, 1110], [232, 1122, 291, 1150], [302, 1122, 337, 1150], [345, 1122, 530, 1159], [547, 1122, 637, 1151], [647, 1122, 776, 1159], [778, 1122, 842, 1150], [844, 1131, 885, 1150], [894, 1131, 965, 1159], [976, 1126, 1077, 1159], [1086, 1122, 1205, 1159], [232, 1172, 420, 1200], [439, 1181, 486, 1200], [503, 1172, 652, 1200], [670, 1172, 733, 1200], [751, 1172, 781, 1200], [799, 1172, 930, 1209], [948, 1172, 1008, 1200], [1026, 1172, 1168, 1209], [1186, 1173, 1204, 1200], [232, 1222, 499, 1259], [516, 1222, 563, 1250], [572, 1222, 715, 1259], [729, 1222, 835, 1251], [860, 1222, 888, 1250], [904, 1222, 1013, 1259], [1028, 1222, 1159, 1250], [1174, 1226, 1205, 1250], [232, 1272, 288, 1300], [303, 1272, 328, 1300], [343, 1276, 373, 1300], [388, 1272, 561, 1309], [575, 1272, 719, 1307], [733, 1272, 831, 1300], [846, 1272, 925, 1300], [939, 1272, 988, 1300], [1000, 1272, 1124, 1309], [1138, 1281, 1204, 1300], [232, 1326, 332, 1350], [345, 1322, 538, 1359], [539, 1322, 592, 1350], [604, 1322, 679, 1350], [689, 1322, 827, 1359], [838, 1322, 1043, 1359], [1056, 1322, 1092, 1350], [1101, 1331, 1204, 1350], [231, 1381, 327, 1400], [344, 1373, 377, 1400], [387, 1372, 471, 1400], [480, 1372, 588, 1406], [600, 1381, 647, 1400], [657, 1372, 775, 1400], [785, 1372, 859, 1400], [869, 1372, 952, 1400], [962, 1372, 1041, 1400], [1051, 1372, 1100, 1400], [1109, 1372, 1204, 1409], [232, 1421, 271, 1449], [283, 1425, 438, 1449], [450, 1421, 522, 1449], [534, 1430, 550, 1449], [560, 1421, 741, 1458], [752, 1421, 813, 1449], [824, 1421, 942, 1458], [945, 1430, 1009, 1449], [1020, 1421, 1056, 1449], [1067, 1421, 1205, 1458], [232, 1471, 395, 1508], [413, 1471, 449, 1499], [464, 1480, 652, 1499], [688, 1471, 758, 1499], [777, 1471, 898, 1508], [916, 1471, 1049, 1499], [1068, 1471, 1205, 1508], [232, 1521, 329, 1549], [349, 1530, 385, 1549], [387, 1521, 596, 1558], [613, 1521, 730, 1549], [749, 1521, 798, 1549], [814, 1521, 952, 1558], [968, 1521, 1157, 1549], [1174, 1525, 1205, 1549], [233, 1580, 249, 1599], [263, 1571, 397, 1599], [412, 1571, 609, 1599], [637, 1571, 708, 1599], [725, 1571, 793, 1599], [809, 1571, 833, 1599], [850, 1571, 966, 1608], [981, 1571, 1093, 1599], [1109, 1575, 1140, 1599], [1156, 1571, 1205, 1599], [232, 1621, 440, 1658], [452, 1621, 659, 1658], [671, 1621, 832, 1658], [844, 1621, 874, 1649], [886, 1621, 935, 1649], [946, 1621, 1107, 1650], [1119, 1621, 1204, 1649], [232, 1670, 285, 1704], [306, 1670, 449, 1707], [466, 1670, 488, 1698], [505, 1670, 529, 1698], [548, 1670, 710, 1699], [728, 1670, 775, 1698], [793, 1679, 809, 1698], [826, 1670, 966, 1698], [983, 1679, 1090, 1698], [1108, 1670, 1138, 1698], [1156, 1670, 1205, 1698], [232, 1720, 444, 1757], [456, 1720, 564, 1757], [575, 1724, 606, 1748], [616, 1720, 718, 1748], [730, 1729, 746, 1748], [756, 1720, 851, 1748], [862, 1720, 1101, 1757], [1112, 1720, 1148, 1748], [1156, 1720, 1205, 1748], [232, 1770, 334, 1807], [351, 1770, 603, 1807], [604, 1770, 771, 1798], [790, 1770, 870, 1798], [887, 1770, 936, 1798], [953, 1770, 1032, 1798], [1051, 1774, 1204, 1798], [232, 1820, 309, 1849], [321, 1829, 535, 1848], [538, 1820, 706, 1848], [721, 1820, 785, 1855], [797, 1820, 904, 1857], [917, 1820, 956, 1855], [232, 1896, 264, 1923], [273, 1895, 404, 1932], [414, 1904, 461, 1923], [471, 1895, 545, 1923], [547, 1895, 633, 1923], [643, 1895, 744, 1923], [754, 1899, 784, 1923], [794, 1895, 876, 1923], [886, 1895, 1097, 1932], [1107, 1904, 1204, 1923], [232, 1944, 345, 1981], [357, 1944, 540, 1981], [543, 1944, 616, 1972], [628, 1944, 677, 1972], [689, 1944, 826, 1981], [838, 1944, 945, 1972], [963, 1945, 1004, 1972], [1015, 1944, 1110, 1972], [1121, 1944, 1204, 1972], [232, 1998, 304, 2022], [314, 1994, 363, 2022], [373, 1994, 465, 2022], [476, 1994, 532, 2022], [543, 1994, 596, 2022], [608, 2003, 648, 2022], [658, 1994, 794, 2031], [807, 2003, 854, 2022], [858, 1994, 969, 2031], [979, 1994, 1145, 2023], [1156, 1994, 1205, 2022], [232, 2044, 336, 2081], [353, 2048, 432, 2072], [447, 2044, 583, 2081], [598, 2044, 696, 2072], [712, 2044, 742, 2072], [757, 2044, 882, 2081], [898, 2044, 955, 2072], [970, 2044, 1102, 2073], [1116, 2044, 1205, 2081], [232, 2094, 281, 2122], [297, 2094, 399, 2123], [416, 2094, 583, 2131], [613, 2094, 684, 2122], [702, 2094, 726, 2122], [744, 2094, 908, 2122], [925, 2094, 956, 2122], [972, 2094, 1079, 2131], [1095, 2094, 1122, 2122], [1152, 2095, 1205, 2122], [233, 2144, 316, 2172], [332, 2144, 363, 2172], [378, 2144, 430, 2172], [446, 2144, 495, 2172], [511, 2144, 694, 2181], [697, 2144, 839, 2172], [856, 2144, 981, 2172], [998, 2144, 1205, 2181], [233, 2193, 290, 2221], [302, 2193, 333, 2221], [344, 2193, 415, 2221], [428, 2193, 477, 2221], [489, 2193, 687, 2230], [701, 2193, 748, 2221], [760, 2193, 809, 2221], [823, 2202, 905, 2221], [918, 2193, 1001, 2221], [1004, 2193, 1143, 2221], [1155, 2202, 1204, 2221], [232, 2243, 283, 2280], [293, 2243, 417, 2280], [428, 2243, 643, 2280], [660, 2243, 688, 2271], [691, 2243, 765, 2271], [775, 2243, 985, 2272], [997, 2243, 1106, 2277], [1119, 2243, 1204, 2271], [232, 2297, 283, 2321], [301, 2293, 508, 2330], [525, 2293, 661, 2330], [678, 2293, 776, 2321], [795, 2302, 843, 2321], [860, 2293, 1130, 2330], [1148, 2293, 1205, 2321], [232, 2343, 341, 2371], [352, 2352, 422, 2371], [433, 2343, 482, 2371], [493, 2343, 598, 2380], [615, 2343, 686, 2371], [699, 2343, 791, 2371], [802, 2343, 827, 2371], [839, 2343, 952, 2380], [963, 2343, 1093, 2371], [1104, 2343, 1144, 2380], [1156, 2343, 1205, 2371], [231, 2393, 382, 2430], [395, 2393, 602, 2430], [615, 2393, 745, 2421], [232, 2506, 265, 2541], [281, 2506, 620, 2550], [634, 2506, 713, 2541], [728, 2506, 910, 2550], [924, 2506, 1068, 2541], [232, 2593, 284, 2620], [300, 2592, 515, 2629], [530, 2601, 585, 2620], [599, 2592, 701, 2620], [717, 2592, 747, 2620], [763, 2592, 788, 2621], [803, 2592, 844, 2629], [858, 2592, 995, 2629], [1011, 2601, 1050, 2620], [1066, 2592, 1115, 2620], [1129, 2601, 1204, 2629], [231, 2642, 295, 2670], [313, 2651, 514, 2679], [532, 2644, 728, 2671], [748, 2635, 879, 2670], [915, 2642, 979, 2670], [997, 2642, 1204, 2679], [232, 2692, 294, 2720], [307, 2692, 449, 2720], [465, 2701, 481, 2720], [493, 2692, 702, 2729], [715, 2692, 868, 2729], [880, 2692, 982, 2720], [996, 2701, 1027, 2720], [1042, 2701, 1058, 2720], [1072, 2696, 1205, 2729], [232, 2742, 333, 2770], [346, 2742, 394, 2770], [406, 2742, 480, 2770], [493, 2742, 649, 2779], [665, 2751, 695, 2770], [710, 2742, 779, 2770], [793, 2751, 823, 2770], [839, 2751, 855, 2770], [867, 2742, 1080, 2779], [1092, 2742, 1202, 2770], [232, 2792, 283, 2820], [296, 2792, 413, 2820], [428, 2801, 530, 2820], [545, 2792, 594, 2820], [608, 2792, 714, 2820], [727, 2792, 910, 2829], [922, 2796, 1102, 2829], [1118, 2801, 1204, 2829], [232, 2841, 419, 2878], [438, 2842, 494, 2869], [505, 2841, 633, 2878], [645, 2841, 695, 2869], [707, 2841, 818, 2875], [832, 2850, 879, 2869], [891, 2841, 979, 2869], [990, 2850, 1045, 2869], [1057, 2841, 1093, 2869], [1103, 2841, 1205, 2869], [284, 2916, 1078, 2956], [1282, 1022, 1378, 1055], [1389, 1022, 1413, 1047], [1426, 1022, 1451, 1047], [1464, 1022, 1535, 1055], [1551, 1022, 1642, 1047], [1659, 1022, 1848, 1047], [1865, 1021, 1897, 1047], [1911, 1022, 1955, 1047], [1971, 1030, 2045, 1047], [2063, 1022, 2097, 1047], [2115, 1025, 2186, 1047], [2203, 1021, 2254, 1047], [1282, 1070, 1363, 1100], [1376, 1067, 1489, 1100], [1503, 1067, 1555, 1092], [1569, 1067, 1688, 1093], [1702, 1067, 1790, 1092], [1805, 1067, 1907, 1092], [1921, 1067, 2032, 1093], [2047, 1067, 2112, 1098], [2128, 1066, 2188, 1099], [2203, 1067, 2255, 1092], [1282, 1113, 1344, 1139], [1355, 1113, 1467, 1146], [1480, 1112, 1666, 1146], [1679, 1112, 1753, 1144], [1756, 1113, 1864, 1146], [1878, 1113, 2038, 1146], [2050, 1113, 2094, 1138], [2106, 1112, 2189, 1138], [2200, 1113, 2255, 1138], [1282, 1167, 1376, 1184], [1389, 1159, 1502, 1184], [1513, 1159, 1625, 1192], [1638, 1158, 1831, 1192], [1846, 1167, 1874, 1184], [1887, 1158, 2010, 1192], [2022, 1159, 2110, 1184], [2123, 1167, 2168, 1184], [2180, 1167, 2254, 1184], [1281, 1204, 1447, 1237], [1458, 1204, 1559, 1229], [1562, 1204, 1629, 1229], [1640, 1204, 1735, 1237], [1283, 1329, 1492, 1366], [1495, 1329, 1685, 1357], [1702, 1329, 1836, 1366], [1852, 1329, 1975, 1357], [1991, 1329, 2138, 1364], [2155, 1329, 2255, 1357], [1283, 1383, 1310, 1407], [1322, 1379, 1394, 1407], [1407, 1383, 1471, 1416], [1483, 1381, 1505, 1413], [1518, 1383, 1684, 1416], [1696, 1378, 1713, 1407], [1726, 1379, 1751, 1407], [1763, 1379, 1894, 1416], [1907, 1388, 1938, 1407], [1890, 1454, 1939, 1485], [1862, 1495, 1942, 1542], [1281, 1581, 1330, 1610], [1331, 1581, 1455, 1609], [1470, 1581, 1728, 1618], [1744, 1581, 1963, 1618], [1977, 1581, 2102, 1618], [2117, 1581, 2255, 1609], [1281, 1631, 1408, 1665], [1426, 1631, 1477, 1659], [1493, 1640, 1540, 1659], [1555, 1631, 1651, 1659], [1666, 1631, 1727, 1659], [1744, 1631, 1854, 1668], [1870, 1631, 2004, 1668], [2020, 1631, 2186, 1660], [2200, 1640, 2254, 1668], [1281, 1681, 1364, 1709], [1375, 1685, 1405, 1709], [1419, 1678, 1519, 1719], [1532, 1678, 1590, 1719], [1602, 1690, 1655, 1718], [1664, 1681, 1766, 1709], [1776, 1690, 1823, 1709], [1825, 1681, 2000, 1709], [2010, 1685, 2040, 1709], [2050, 1690, 2157, 1709], [2167, 1681, 2254, 1709], [1281, 1730, 1333, 1767], [1345, 1730, 1476, 1767], [1488, 1730, 1545, 1758], [1556, 1730, 1766, 1767], [1777, 1730, 1913, 1767], [1914, 1730, 2071, 1767], [2083, 1730, 2183, 1767], [2199, 1731, 2256, 1758], [1281, 1780, 1478, 1817], [1480, 1780, 1629, 1817], [1640, 1780, 1717, 1814], [1730, 1789, 1777, 1808], [1787, 1789, 1842, 1808], [1854, 1780, 1903, 1808], [1914, 1780, 2010, 1817], [2022, 1780, 2176, 1814], [2189, 1789, 2254, 1817], [1281, 1830, 1441, 1858], [1456, 1830, 1626, 1867], [1640, 1830, 1768, 1858], [1786, 1830, 1945, 1865], [1964, 1834, 1992, 1858], [2008, 1830, 2054, 1864], [2071, 1830, 2174, 1865], [2199, 1831, 2256, 1858], [1281, 1880, 1494, 1917], [1508, 1880, 1635, 1917], [1649, 1889, 1696, 1908], [1709, 1889, 1764, 1908], [1778, 1880, 1827, 1908], [1840, 1880, 2098, 1917], [2111, 1880, 2255, 1917], [1281, 1931, 1320, 1959], [1339, 1939, 1447, 1967], [1467, 1930, 1596, 1965], [1616, 1930, 1719, 1965], [1754, 1930, 1865, 1959], [1883, 1930, 1932, 1958], [1951, 1930, 2100, 1967], [2118, 1930, 2154, 1958], [2170, 1930, 2254, 1965], [1281, 1980, 1412, 2009], [1427, 1984, 1455, 2008], [1471, 1980, 1517, 2014], [1533, 1980, 1627, 2015], [1642, 1980, 1788, 2014], [1805, 1989, 1852, 2008], [1866, 1980, 1906, 2008], [1921, 1984, 1972, 2008], [1987, 1980, 2063, 2008], [2078, 1984, 2108, 2008], [2122, 1980, 2255, 2017], [1282, 2038, 1298, 2057], [1316, 2029, 1568, 2066], [1570, 2033, 1663, 2066], [1681, 2029, 1752, 2057], [1788, 2029, 1906, 2057], [1924, 2038, 1979, 2057], [1996, 2029, 2255, 2066], [1281, 2079, 1371, 2107], [1391, 2079, 1516, 2116], [1536, 2088, 1575, 2107], [1595, 2079, 1644, 2107], [1662, 2088, 1723, 2107], [1741, 2079, 1865, 2116], [1884, 2083, 1944, 2107], [1963, 2079, 2029, 2107], [2050, 2079, 2191, 2107], [2211, 2079, 2254, 2107], [1281, 2133, 1324, 2157], [1341, 2129, 1484, 2166], [1500, 2129, 1549, 2157], [1567, 2129, 1705, 2157], [1720, 2129, 1950, 2166], [1967, 2129, 2072, 2166], [2090, 2129, 2150, 2157], [2167, 2138, 2255, 2157], [1281, 2179, 1354, 2207], [1374, 2179, 1423, 2207], [1443, 2179, 1510, 2207], [1530, 2183, 1560, 2207], [1581, 2179, 1728, 2213], [1750, 2188, 1854, 2207], [1874, 2179, 1931, 2207], [1950, 2188, 2073, 2208], [2094, 2179, 2133, 2207], [2153, 2183, 2255, 2216], [1282, 2229, 1525, 2266], [1565, 2229, 1754, 2266], [1774, 2229, 1911, 2257], [1933, 2238, 2012, 2257], [2031, 2229, 2195, 2257], [2214, 2229, 2255, 2266], [1281, 2278, 1415, 2315], [1432, 2278, 1512, 2306], [1529, 2287, 1545, 2306], [1562, 2287, 1632, 2306], [1649, 2287, 1746, 2312], [1765, 2278, 1982, 2307], [1999, 2278, 2140, 2315], [2157, 2278, 2254, 2306], [1280, 2328, 1393, 2356], [1411, 2328, 1474, 2356], [1487, 2328, 1639, 2365], [1651, 2328, 1788, 2365], [1801, 2328, 1950, 2365], [1963, 2328, 2126, 2365], [2141, 2328, 2171, 2363], [2184, 2328, 2254, 2356], [1280, 2378, 1386, 2415], [1402, 2378, 1481, 2406], [1496, 2378, 1532, 2406], [1545, 2378, 1825, 2407], [1841, 2378, 2025, 2413], [2041, 2378, 2158, 2415], [2172, 2387, 2207, 2406], [2224, 2382, 2255, 2406], [1282, 2428, 1398, 2465], [1414, 2427, 1433, 2456], [1451, 2428, 1537, 2456], [1553, 2428, 1651, 2456], [1667, 2437, 1720, 2465], [1736, 2428, 1863, 2465], [1878, 2428, 1943, 2465], [1958, 2428, 2037, 2456], [2053, 2428, 2102, 2456], [2117, 2428, 2255, 2465], [1282, 2475, 1372, 2516], [1387, 2488, 1424, 2506], [1438, 2478, 1495, 2506], [1500, 2478, 1535, 2515], [1546, 2478, 1760, 2512], [1775, 2478, 1832, 2506], [1844, 2487, 1891, 2506], [1904, 2482, 1947, 2506], [1960, 2477, 1979, 2506], [1995, 2491, 2023, 2500], [2041, 2478, 2076, 2507], [2089, 2478, 2189, 2506], [2200, 2478, 2253, 2506], [1280, 2528, 1358, 2556], [1371, 2528, 1455, 2556], [1457, 2532, 1519, 2556], [1531, 2528, 1599, 2565], [1611, 2537, 1671, 2565], [1673, 2528, 1819, 2556], [1592, 1473, 1646, 1513], [1665, 1498, 1693, 1507], [1709, 1473, 1805, 1513], [1822, 1502, 1848, 1503], [2209, 1485, 2254, 1520], [1281, 2602, 1384, 2639], [1420, 2602, 1494, 2630], [1530, 2602, 1658, 2639], [1693, 2602, 1803, 2639], [1839, 2602, 1988, 2630], [2024, 2611, 2129, 2630], [2168, 2611, 2254, 2639], [1281, 2652, 1464, 2689], [1481, 2661, 1581, 2680], [1598, 2652, 1647, 2680], [1663, 2652, 1789, 2680], [1818, 2652, 2031, 2689], [2046, 2652, 2163, 2680], [2180, 2652, 2255, 2680], [1282, 2702, 1374, 2730], [1393, 2711, 1409, 2730], [1427, 2706, 1655, 2739], [1673, 2701, 1856, 2739], [1873, 2702, 1921, 2730], [1938, 2702, 2012, 2730], [2030, 2702, 2179, 2739], [2198, 2702, 2255, 2730], [1282, 2752, 1398, 2789], [1410, 2751, 1429, 2780], [1441, 2752, 1527, 2780], [1538, 2752, 1636, 2780], [1650, 2752, 1811, 2789], [1822, 2756, 1852, 2780], [1864, 2752, 1939, 2780], [1948, 2752, 2086, 2789], [2097, 2752, 2183, 2780], [2194, 2752, 2254, 2780], [1281, 2801, 1446, 2829], [1465, 2801, 1528, 2829], [1540, 2801, 1753, 2838], [1766, 2801, 1867, 2829], [1881, 2801, 2011, 2838], [2026, 2810, 2042, 2829], [2053, 2801, 2180, 2829], [2191, 2801, 2256, 2838], [1281, 2851, 1317, 2879], [1329, 2851, 1453, 2888], [1469, 2855, 1624, 2879], [1641, 2851, 1720, 2879], [1735, 2851, 1785, 2879], [1799, 2851, 1923, 2888], [1938, 2851, 2013, 2879], [2041, 2851, 2162, 2888], [2180, 2851, 2255, 2879], [1281, 2901, 1383, 2929], [1399, 2901, 1502, 2929], [1520, 2910, 1557, 2929], [1572, 2901, 1682, 2938], [1697, 2905, 1728, 2929], [1745, 2901, 1784, 2929], [1799, 2905, 1979, 2938], [1997, 2901, 2255, 2938], [1282, 2951, 1443, 2988], [1461, 2955, 1492, 2979], [1510, 2951, 1651, 2988], [1670, 2951, 1696, 2985], [1717, 2951, 1765, 2979], [1782, 2951, 1881, 2979], [1899, 2951, 2048, 2988], [2069, 2960, 2117, 2979], [2134, 2960, 2206, 2988], [2224, 2955, 2255, 2979], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 296, 373, 329], [388, 292, 446, 320], [461, 296, 492, 320], [507, 292, 556, 320], [572, 292, 755, 329], [771, 292, 807, 320], [819, 292, 869, 320], [884, 292, 1130, 321], [1148, 292, 1205, 320], [232, 342, 281, 370], [293, 342, 453, 379], [465, 346, 567, 370], [579, 342, 615, 370], [625, 342, 674, 370], [687, 342, 839, 379], [851, 342, 977, 370], [995, 342, 1058, 370], [1070, 342, 1205, 379], [231, 396, 292, 420], [304, 401, 351, 420], [353, 396, 423, 420], [435, 396, 466, 420], [478, 392, 537, 426], [550, 392, 622, 420], [635, 392, 728, 420], [740, 392, 840, 429], [232, 505, 265, 540], [281, 505, 550, 549], [232, 593, 264, 620], [279, 592, 336, 620], [353, 592, 468, 620], [483, 601, 530, 620], [543, 596, 662, 629], [677, 592, 876, 629], [892, 592, 992, 620], [1007, 592, 1141, 621], [1156, 592, 1205, 620], [231, 642, 329, 679], [342, 642, 377, 670], [387, 642, 437, 670], [449, 642, 579, 670], [590, 642, 849, 679], [868, 643, 921, 670], [933, 642, 1068, 671], [1080, 642, 1130, 670], [1142, 651, 1204, 670], [231, 691, 378, 728], [400, 691, 431, 719], [452, 700, 468, 719], [488, 691, 701, 728], [722, 691, 872, 719], [874, 691, 1119, 719], [1140, 691, 1206, 719], [232, 741, 331, 769], [350, 745, 421, 769], [441, 742, 588, 770], [607, 741, 737, 778], [756, 741, 791, 769], [807, 741, 1002, 769], [1022, 750, 1121, 769], [1142, 741, 1204, 769], [232, 800, 354, 828], [369, 800, 399, 819], [413, 791, 483, 819], [496, 800, 526, 819], [541, 800, 557, 819], [569, 791, 745, 820], [757, 791, 931, 819], [943, 791, 1009, 819], [1021, 791, 1120, 819], [1133, 795, 1203, 819], [232, 841, 430, 878], [443, 841, 551, 869], [564, 841, 700, 878], [231, 945, 291, 974], [305, 945, 539, 983], [551, 946, 718, 975], [720, 945, 979, 975], [231, 1024, 268, 1051], [267, 1032, 352, 1051], [366, 1032, 402, 1051], [416, 1029, 502, 1051], [516, 1023, 693, 1060], [707, 1023, 743, 1051], [754, 1023, 803, 1051], [816, 1023, 1029, 1060], [1043, 1023, 1205, 1051], [231, 1073, 447, 1101], [463, 1072, 591, 1108], [594, 1073, 707, 1110], [723, 1073, 899, 1101], [913, 1073, 954, 1110], [970, 1073, 1161, 1102], [1177, 1077, 1205, 1101], [232, 1123, 267, 1151], [284, 1123, 488, 1158], [501, 1127, 530, 1151], [544, 1123, 590, 1157], [605, 1123, 699, 1158], [713, 1127, 744, 1151], [757, 1123, 892, 1152], [905, 1123, 980, 1151], [992, 1123, 1205, 1160], [231, 1173, 438, 1210], [456, 1173, 519, 1201], [531, 1173, 639, 1202], [652, 1173, 719, 1201], [731, 1177, 816, 1210], [828, 1173, 853, 1201], [867, 1182, 898, 1201], [912, 1173, 1042, 1201], [1060, 1173, 1123, 1201], [1135, 1173, 1205, 1210], [231, 1223, 256, 1251], [270, 1227, 300, 1251], [313, 1223, 438, 1260], [450, 1223, 627, 1251], [641, 1223, 671, 1251], [685, 1232, 701, 1251], [713, 1227, 805, 1260], [817, 1223, 966, 1260], [977, 1223, 1066, 1260], [1078, 1223, 1150, 1260], [1163, 1223, 1204, 1251], [230, 1272, 331, 1300], [348, 1272, 525, 1300], [544, 1272, 574, 1300], [593, 1281, 609, 1300], [626, 1281, 732, 1300], [749, 1272, 905, 1309], [939, 1272, 1138, 1309], [1158, 1281, 1205, 1300], [231, 1322, 306, 1350], [318, 1331, 354, 1350], [366, 1322, 512, 1359], [521, 1326, 677, 1359], [679, 1322, 856, 1350], [866, 1331, 905, 1350], [916, 1322, 966, 1350], [976, 1322, 1106, 1350], [1117, 1322, 1204, 1350], [231, 1372, 283, 1409], [298, 1372, 365, 1400], [380, 1372, 410, 1400], [425, 1372, 475, 1400], [490, 1381, 596, 1400], [611, 1372, 759, 1409], [775, 1372, 832, 1400], [847, 1372, 916, 1400], [932, 1376, 1054, 1409], [1069, 1376, 1099, 1400], [1115, 1372, 1205, 1409], [231, 1422, 281, 1450], [291, 1422, 438, 1450], [448, 1422, 520, 1450], [532, 1426, 562, 1450], [573, 1422, 622, 1450], [632, 1426, 725, 1459], [735, 1422, 803, 1450], [814, 1422, 937, 1457], [948, 1431, 964, 1450], [967, 1422, 1102, 1450], [1112, 1426, 1204, 1450], [231, 1472, 316, 1507], [353, 1473, 539, 1500], [560, 1481, 609, 1500], [626, 1472, 817, 1509], [837, 1481, 867, 1500], [887, 1472, 937, 1500], [955, 1472, 1205, 1509], [232, 1530, 299, 1549], [313, 1521, 349, 1549], [360, 1521, 410, 1549], [424, 1521, 606, 1558], [621, 1525, 737, 1550], [752, 1521, 788, 1549], [799, 1521, 849, 1549], [863, 1521, 961, 1549], [976, 1521, 1037, 1549], [1052, 1530, 1161, 1558], [1174, 1521, 1205, 1549], [231, 1571, 281, 1599], [293, 1571, 478, 1599], [232, 1646, 353, 1675], [374, 1650, 404, 1674], [426, 1646, 623, 1680], [649, 1655, 696, 1674], [717, 1646, 826, 1674], [848, 1646, 1061, 1683], [1082, 1646, 1204, 1674], [231, 1696, 318, 1733], [330, 1696, 377, 1724], [387, 1696, 436, 1724], [446, 1696, 718, 1733], [729, 1696, 858, 1733], [860, 1696, 957, 1733], [970, 1696, 1027, 1724], [1036, 1705, 1091, 1724], [1101, 1696, 1151, 1724], [1160, 1696, 1204, 1724], [231, 1746, 329, 1774], [338, 1746, 572, 1783], [575, 1750, 628, 1774], [638, 1746, 763, 1783], [774, 1755, 790, 1774], [800, 1746, 901, 1774], [911, 1746, 946, 1774], [953, 1746, 1002, 1774], [1012, 1746, 1137, 1783], [1148, 1746, 1205, 1774], [231, 1795, 363, 1824], [378, 1795, 507, 1823], [522, 1795, 558, 1823], [568, 1795, 617, 1823], [630, 1796, 754, 1823], [768, 1795, 990, 1824], [1004, 1795, 1205, 1832], [231, 1854, 357, 1882], [368, 1845, 463, 1880], [466, 1849, 518, 1873], [529, 1845, 576, 1879], [588, 1845, 682, 1880], [694, 1854, 725, 1873], [736, 1845, 903, 1882], [914, 1849, 944, 1873], [955, 1854, 1013, 1873], [1023, 1854, 1042, 1873], [1044, 1845, 1120, 1873], [1121, 1849, 1204, 1873], [231, 1895, 358, 1932], [379, 1899, 472, 1924], [488, 1895, 859, 1932], [874, 1899, 969, 1924], [985, 1895, 1203, 1930], [233, 1949, 327, 1974], [343, 1945, 698, 1980], [712, 1945, 770, 1973], [782, 1949, 878, 1974], [893, 1945, 1061, 1980], [231, 2021, 273, 2048], [274, 2020, 351, 2048], [366, 2020, 581, 2048], [596, 2020, 806, 2057], [827, 2020, 936, 2054], [951, 2020, 1128, 2048], [1145, 2020, 1206, 2055], [231, 2069, 306, 2097], [321, 2069, 482, 2106], [498, 2078, 577, 2097], [590, 2069, 749, 2106], [765, 2069, 895, 2097], [910, 2069, 990, 2097], [1004, 2069, 1054, 2097], [1068, 2069, 1205, 2098], [231, 2128, 349, 2156], [366, 2119, 438, 2147], [453, 2128, 512, 2147], [526, 2119, 603, 2147], [619, 2119, 736, 2154], [751, 2119, 826, 2147], [842, 2128, 873, 2147], [889, 2119, 938, 2147], [953, 2123, 1009, 2147], [1024, 2123, 1068, 2147], [1084, 2119, 1141, 2147], [1156, 2119, 1205, 2147], [230, 2169, 399, 2197], [414, 2169, 535, 2198], [551, 2169, 614, 2197], [630, 2169, 757, 2206], [774, 2173, 832, 2197], [849, 2169, 885, 2197], [898, 2169, 975, 2197], [991, 2169, 1129, 2197], [1148, 2169, 1205, 2198], [232, 2219, 290, 2247], [305, 2219, 422, 2253], [437, 2219, 494, 2247], [506, 2228, 522, 2247], [535, 2223, 677, 2256], [689, 2219, 827, 2247], [838, 2219, 1001, 2248], [1014, 2223, 1057, 2247], [1069, 2219, 1104, 2247], [1117, 2219, 1205, 2253], [231, 2269, 408, 2297], [429, 2269, 504, 2297], [524, 2269, 630, 2306], [650, 2269, 700, 2297], [719, 2269, 930, 2306], [950, 2269, 986, 2297], [1003, 2278, 1057, 2297], [1076, 2269, 1202, 2297], [232, 2318, 322, 2347], [338, 2327, 393, 2346], [409, 2322, 494, 2355], [510, 2318, 628, 2355], [644, 2318, 763, 2346], [781, 2318, 972, 2347], [988, 2322, 1016, 2346], [1033, 2318, 1069, 2352], [1088, 2327, 1135, 2346], [1150, 2327, 1205, 2346], [231, 2368, 281, 2396], [300, 2377, 382, 2396], [399, 2368, 559, 2402], [581, 2368, 710, 2405], [739, 2368, 788, 2396], [806, 2369, 945, 2405], [963, 2368, 1041, 2396], [1059, 2368, 1203, 2402], [230, 2418, 356, 2455], [373, 2418, 539, 2455], [556, 2418, 654, 2446], [672, 2418, 703, 2446], [720, 2418, 769, 2446], [786, 2422, 878, 2455], [895, 2418, 1057, 2446], [1073, 2418, 1113, 2455], [1130, 2418, 1206, 2446], [231, 2472, 311, 2496], [322, 2468, 490, 2505], [503, 2468, 622, 2505], [633, 2468, 716, 2496], [719, 2468, 774, 2496], [785, 2468, 834, 2496], [846, 2477, 952, 2496], [963, 2468, 1134, 2505], [1148, 2468, 1205, 2496], [232, 2527, 248, 2546], [265, 2522, 399, 2555], [411, 2519, 473, 2546], [487, 2518, 623, 2546], [639, 2518, 825, 2555], [841, 2522, 933, 2555], [948, 2518, 1125, 2546], [1142, 2518, 1205, 2546], [231, 2568, 281, 2596], [294, 2577, 400, 2596], [411, 2568, 560, 2605], [571, 2568, 660, 2605], [673, 2577, 709, 2596], [722, 2568, 805, 2597], [818, 2568, 952, 2605], [231, 2642, 351, 2670], [370, 2651, 418, 2670], [435, 2642, 635, 2670], [652, 2642, 682, 2670], [699, 2642, 789, 2670], [809, 2642, 831, 2670], [862, 2643, 895, 2670], [911, 2642, 998, 2670], [1014, 2646, 1044, 2670], [1061, 2642, 1149, 2670], [1166, 2642, 1205, 2670], [230, 2692, 337, 2720], [356, 2692, 557, 2729], [576, 2692, 683, 2720], [702, 2692, 749, 2720], [767, 2692, 806, 2720], [824, 2692, 961, 2720], [980, 2692, 1117, 2729], [1134, 2692, 1205, 2720], [231, 2751, 311, 2770], [328, 2742, 469, 2770], [486, 2742, 575, 2779], [592, 2742, 641, 2770], [660, 2751, 742, 2770], [760, 2742, 942, 2779], [960, 2742, 1205, 2779], [231, 2792, 267, 2820], [281, 2792, 320, 2821], [339, 2792, 396, 2820], [413, 2792, 462, 2820], [479, 2801, 544, 2820], [545, 2792, 706, 2829], [723, 2792, 798, 2820], [829, 2793, 882, 2820], [898, 2801, 952, 2820], [969, 2792, 1018, 2820], [1035, 2792, 1098, 2820], [1114, 2792, 1206, 2821], [231, 2841, 307, 2869], [323, 2841, 359, 2869], [371, 2841, 420, 2869], [435, 2841, 707, 2878], [722, 2841, 866, 2878], [881, 2841, 949, 2869], [963, 2841, 1035, 2869], [1051, 2850, 1082, 2869], [1098, 2850, 1204, 2869], [231, 2891, 345, 2928], [358, 2891, 415, 2919], [425, 2891, 549, 2928], [561, 2891, 688, 2928], [700, 2891, 775, 2919], [792, 2892, 845, 2919], [855, 2900, 910, 2919], [922, 2900, 938, 2919], [949, 2891, 1130, 2928], [1143, 2891, 1205, 2919], [231, 2941, 267, 2969], [279, 2941, 398, 2977], [414, 2941, 461, 2969], [475, 2941, 600, 2978], [615, 2941, 672, 2969], [687, 2941, 806, 2977], [822, 2941, 869, 2969], [883, 2941, 1022, 2970], [1047, 2941, 1137, 2970], [1151, 2950, 1206, 2969], [1282, 292, 1404, 320], [1419, 292, 1444, 320], [1461, 292, 1623, 321], [1639, 301, 1669, 320], [1687, 301, 1703, 320], [1718, 292, 1809, 320], [1823, 292, 1943, 321], [1958, 292, 1994, 320], [2006, 292, 2055, 320], [2070, 292, 2172, 320], [2186, 301, 2254, 329], [1281, 342, 1377, 379], [1391, 342, 1432, 379], [1447, 342, 1638, 371], [1654, 348, 1683, 370], [1698, 342, 1747, 376], [1765, 351, 1812, 370], [1828, 346, 1898, 370], [1913, 342, 1974, 370], [1989, 351, 2036, 370], [2052, 342, 2255, 379], [1282, 392, 1417, 429], [1427, 401, 1489, 429], [1491, 392, 1597, 420], [1606, 392, 1723, 426], [1736, 392, 1827, 420], [1838, 392, 1965, 429], [1977, 392, 2008, 420], [2020, 392, 2037, 421], [2050, 392, 2178, 420], [2191, 401, 2254, 421], [1283, 451, 1331, 470], [1350, 442, 1399, 470], [1416, 442, 1543, 479], [1564, 442, 1600, 471], [1617, 442, 1690, 479], [1709, 442, 1834, 477], [1851, 442, 2003, 477], [2035, 442, 2105, 470], [2124, 442, 2220, 479], [2239, 451, 2255, 470], [1282, 492, 1354, 520], [1366, 492, 1461, 520], [1474, 492, 1500, 528], [1512, 492, 1571, 521], [1586, 492, 1727, 529], [1744, 492, 1815, 520], [1828, 492, 2044, 520], [2058, 492, 2119, 520], [2131, 492, 2180, 520], [2192, 492, 2254, 520], [1282, 541, 1375, 570], [1372, 541, 1472, 569], [1485, 541, 1639, 578], [1649, 541, 1681, 576], [1692, 541, 1717, 569], [1727, 541, 1800, 569], [1812, 550, 1828, 569], [1838, 541, 2255, 578], [1283, 591, 1340, 619], [1353, 600, 1389, 619], [1402, 595, 1538, 619], [1551, 591, 1790, 628], [1802, 591, 1838, 619], [1847, 591, 1897, 619], [1908, 591, 1965, 619], [1976, 591, 2189, 628], [2201, 591, 2254, 619], [1278, 641, 1389, 678], [1401, 641, 1616, 678], [1627, 641, 1668, 678], [1680, 641, 1871, 670], [1884, 641, 2038, 678], [2051, 641, 2091, 676], [1282, 717, 1369, 750], [1381, 725, 1428, 744], [1437, 725, 1579, 753], [1588, 725, 1643, 744], [1652, 716, 1754, 744], [1756, 716, 1815, 744], [1825, 716, 1874, 744], [1884, 720, 2000, 744], [2011, 716, 2255, 744], [1281, 766, 1428, 803], [1441, 766, 1623, 803], [1637, 766, 1784, 794], [1804, 766, 1868, 794], [1881, 770, 1997, 794], [2011, 766, 2255, 794], [1282, 824, 1321, 843], [1336, 815, 1393, 843], [1409, 815, 1475, 843], [1489, 815, 1513, 843], [1530, 815, 1600, 844], [1617, 815, 1740, 850], [1756, 815, 1814, 843], [1829, 815, 1899, 844], [1916, 815, 2039, 850], [2054, 815, 2191, 852], [2205, 824, 2254, 843], [1282, 865, 1333, 902], [1346, 865, 1395, 893], [1408, 865, 1561, 902], [1574, 865, 1801, 893], [1814, 865, 1920, 900], [1934, 865, 2036, 893], [2048, 865, 2089, 902], [2103, 865, 2256, 900], [1282, 919, 1310, 943], [1324, 915, 1370, 949], [1385, 915, 1487, 950], [1507, 916, 1639, 943], [1641, 919, 1701, 943], [1715, 915, 1750, 943], [1766, 915, 1932, 950], [1946, 915, 1975, 944], [1988, 915, 2145, 949], [2160, 915, 2254, 950], [1281, 969, 1379, 1002], [1395, 965, 1466, 994], [1483, 965, 1540, 993], [1556, 965, 1627, 994], [1643, 965, 1715, 993], [1730, 965, 1780, 993], [1795, 965, 1927, 994], [1942, 965, 2052, 993], [2079, 965, 2122, 993], [2140, 965, 2253, 999], [1282, 1024, 1336, 1043], [1347, 1015, 1449, 1043], [1461, 1015, 1661, 1052], [1674, 1015, 1724, 1043], [1736, 1015, 1867, 1044], [1880, 1024, 1919, 1043], [1930, 1015, 1983, 1043], [1984, 1015, 2106, 1049], [2120, 1015, 2178, 1043], [2190, 1019, 2254, 1043], [1281, 1065, 1428, 1102], [1447, 1065, 1542, 1093], [1561, 1074, 1600, 1093], [1618, 1065, 1750, 1094], [1767, 1069, 1798, 1093], [1815, 1065, 1940, 1102], [1958, 1069, 1989, 1093], [2006, 1065, 2087, 1102], [2106, 1074, 2122, 1093], [2139, 1069, 2255, 1093], [1283, 1114, 1527, 1142], [1539, 1114, 1631, 1142], [1645, 1123, 1685, 1142], [1699, 1114, 1759, 1142], [1773, 1114, 1839, 1142], [1852, 1114, 1888, 1142], [1900, 1114, 1981, 1143], [2004, 1114, 2067, 1142], [2080, 1114, 2208, 1142], [2222, 1114, 2258, 1142], [1282, 1173, 1336, 1192], [1352, 1164, 1475, 1192], [1493, 1164, 1558, 1192], [1575, 1173, 1731, 1201], [1750, 1173, 1821, 1201], [1838, 1164, 1994, 1201], [2011, 1168, 2041, 1192], [2059, 1164, 2143, 1192], [2160, 1164, 2254, 1192], [1282, 1214, 1345, 1242], [1369, 1215, 1448, 1242], [1462, 1214, 1523, 1242], [1537, 1223, 1612, 1243], [1626, 1214, 1740, 1251], [1754, 1214, 1803, 1242], [1817, 1214, 1949, 1243], [1964, 1214, 2087, 1242], [2102, 1214, 2210, 1242], [2224, 1214, 2255, 1242], [1281, 1264, 1428, 1301], [1441, 1264, 1480, 1292], [1495, 1273, 1525, 1292], [1541, 1264, 1599, 1292], [1614, 1273, 1647, 1292], [1661, 1264, 1752, 1292], [1765, 1264, 1835, 1292], [1850, 1273, 1904, 1292], [1918, 1264, 2049, 1298], [2066, 1264, 2102, 1292], [2117, 1264, 2255, 1301], [1282, 1314, 1409, 1351], [1421, 1314, 1494, 1342], [1505, 1314, 1558, 1342], [1559, 1314, 1612, 1342], [1627, 1314, 1749, 1351], [1760, 1314, 1866, 1351], [1879, 1314, 1962, 1342], [1974, 1314, 1995, 1342], [2007, 1323, 2068, 1342], [2082, 1314, 2196, 1342], [2208, 1314, 2256, 1342], [1282, 1372, 1365, 1391], [1377, 1363, 1529, 1391], [1542, 1372, 1599, 1392], [1600, 1363, 1674, 1391], [1686, 1363, 1761, 1391], [1282, 1467, 1341, 1496], [1354, 1467, 1500, 1497], [1514, 1468, 1613, 1497], [1625, 1467, 1828, 1497], [1282, 1547, 1319, 1574], [1317, 1546, 1409, 1574], [1419, 1546, 1575, 1575], [1585, 1546, 1634, 1574], [1644, 1546, 1753, 1574], [1754, 1546, 1996, 1583], [2006, 1546, 2204, 1583], [2215, 1555, 2255, 1574], [1282, 1596, 1331, 1624], [1345, 1596, 1428, 1624], [1442, 1596, 1615, 1624], [1630, 1596, 1696, 1624], [1708, 1596, 1783, 1624], [1796, 1596, 1837, 1633], [1851, 1596, 1971, 1624], [1972, 1600, 2034, 1625], [2049, 1596, 2084, 1624], [2102, 1596, 2255, 1631], [1282, 1649, 1310, 1673], [1327, 1645, 1373, 1679], [1391, 1645, 1504, 1680], [1520, 1645, 1609, 1682], [1625, 1645, 1675, 1673], [1690, 1645, 1987, 1682], [2003, 1645, 2140, 1673], [2160, 1638, 2252, 1673], [1282, 1696, 1314, 1723], [1333, 1695, 1389, 1723], [1409, 1695, 1483, 1729], [1504, 1695, 1554, 1723], [1573, 1695, 1691, 1723], [1710, 1695, 1860, 1723], [1878, 1695, 1928, 1723], [1946, 1695, 2002, 1724], [2021, 1699, 2100, 1723], [2118, 1695, 2255, 1732], [1282, 1745, 1379, 1773], [1399, 1745, 1478, 1773], [1496, 1745, 1545, 1773], [1563, 1745, 1700, 1773], [1723, 1745, 1993, 1782], [2011, 1745, 2087, 1779], [2110, 1745, 2167, 1773], [2185, 1745, 2255, 1773], [1281, 1795, 1356, 1823], [1371, 1795, 1421, 1823], [1436, 1795, 1538, 1823], [1553, 1795, 1674, 1832], [1689, 1795, 1840, 1823], [1856, 1795, 1971, 1824], [1987, 1799, 2017, 1823], [2032, 1795, 2133, 1824], [2148, 1795, 2254, 1823], [1282, 1845, 1377, 1873], [1390, 1845, 1430, 1882], [1442, 1845, 1616, 1882], [1628, 1845, 1712, 1873], [1724, 1854, 1830, 1873], [1841, 1845, 1925, 1873], [1927, 1845, 2015, 1873], [2027, 1845, 2077, 1873], [2088, 1849, 2180, 1882], [2192, 1845, 2254, 1873], [1282, 1904, 1379, 1932], [1395, 1895, 1606, 1932], [1621, 1895, 1669, 1923], [1683, 1895, 1808, 1932], [1824, 1895, 1882, 1923], [1898, 1895, 2048, 1932], [2076, 1895, 2165, 1924], [2180, 1895, 2256, 1923], [1282, 1944, 1404, 1972], [1414, 1944, 1545, 1981], [1557, 1944, 1824, 1981], [1836, 1944, 1883, 1972], [1893, 1944, 2029, 1981], [2041, 1944, 2111, 1981], [2120, 1944, 2195, 1972], [2206, 1944, 2255, 1972], [1282, 1994, 1345, 2022], [1359, 1994, 1415, 2023], [1429, 1998, 1508, 2022], [1522, 1994, 1658, 2031], [1672, 1994, 1755, 2022], [1758, 1998, 1815, 2022], [1829, 1994, 1910, 2022], [1924, 1994, 1973, 2022], [1987, 1994, 2178, 2022], [2192, 2003, 2254, 2022], [1282, 2044, 1365, 2078], [1378, 2044, 1435, 2072], [1446, 2044, 1516, 2072], [1526, 2044, 1681, 2073], [1692, 2044, 1767, 2072], [1777, 2044, 1900, 2072], [1910, 2053, 1950, 2072], [1961, 2044, 2010, 2072], [2019, 2044, 2187, 2081], [2201, 2044, 2254, 2072], [1282, 2094, 1379, 2122], [1396, 2094, 1471, 2122], [1488, 2103, 1518, 2122], [1536, 2103, 1552, 2122], [1568, 2098, 1624, 2122], [1641, 2098, 1692, 2122], [1720, 2095, 1761, 2122], [1777, 2094, 1916, 2122], [1932, 2103, 1948, 2122], [1965, 2103, 2071, 2122], [2086, 2094, 2178, 2128], [2197, 2103, 2255, 2122], [1282, 2144, 1359, 2172], [1378, 2144, 1414, 2172], [1433, 2143, 1452, 2172], [1471, 2148, 1587, 2172], [1604, 2144, 1785, 2181], [1804, 2144, 1834, 2172], [1851, 2144, 1901, 2172], [1917, 2148, 2010, 2181], [2027, 2144, 2175, 2181], [2192, 2153, 2254, 2172], [1281, 2193, 1413, 2230], [1429, 2202, 1528, 2230], [1546, 2193, 1603, 2221], [1618, 2193, 1688, 2221], [1703, 2193, 1837, 2222], [1852, 2193, 1901, 2221], [1916, 2193, 2089, 2221], [2103, 2193, 2255, 2230], [1283, 2242, 1343, 2271], [1347, 2242, 1415, 2271], [1434, 2243, 1483, 2271], [1499, 2243, 1626, 2271], [1643, 2243, 1679, 2271], [1693, 2247, 1785, 2280], [1801, 2243, 1990, 2271], [2008, 2243, 2068, 2271], [2086, 2252, 2134, 2271], [2150, 2243, 2255, 2271], [1282, 2293, 1331, 2321], [1347, 2292, 1434, 2330], [1451, 2293, 1549, 2321], [1566, 2293, 1704, 2321], [1719, 2293, 1808, 2330], [1825, 2293, 1874, 2321], [1891, 2293, 2014, 2330], [2031, 2293, 2162, 2321], [2192, 2293, 2256, 2322], [1281, 2343, 1404, 2371], [1421, 2343, 1494, 2371], [1513, 2347, 1564, 2371], [1580, 2343, 1698, 2380], [1714, 2343, 1981, 2380], [2000, 2343, 2047, 2371], [2063, 2343, 2200, 2380], [2221, 2352, 2255, 2371], [1281, 2402, 1328, 2421], [1341, 2393, 1452, 2430], [1464, 2397, 1520, 2421], [1532, 2402, 1571, 2421], [1584, 2393, 1633, 2421], [1646, 2402, 1729, 2421], [1743, 2393, 1756, 2421], [1762, 2393, 1797, 2421], [1810, 2393, 1968, 2430], [1281, 2468, 1334, 2495], [1351, 2476, 1406, 2495], [1425, 2476, 1456, 2495], [1474, 2467, 1624, 2495], [1644, 2467, 1693, 2495], [1712, 2476, 1795, 2495], [1813, 2471, 1873, 2495], [1891, 2467, 2029, 2495], [2049, 2467, 2206, 2495], [2224, 2467, 2255, 2495], [1282, 2517, 1415, 2552], [1417, 2521, 1479, 2546], [1494, 2517, 1540, 2551], [1557, 2517, 1678, 2552], [1702, 2517, 1771, 2546], [1784, 2518, 1930, 2546], [1944, 2517, 2032, 2545], [2048, 2517, 2146, 2545], [2161, 2517, 2255, 2545], [1281, 2576, 1321, 2595], [1332, 2567, 1407, 2595], [1417, 2567, 1635, 2595], [1654, 2567, 1739, 2596], [1750, 2567, 1975, 2596], [1977, 2567, 2028, 2595], [2039, 2567, 2133, 2595], [2144, 2576, 2184, 2595], [2194, 2567, 2254, 2595], [1281, 2617, 1452, 2645], [1464, 2617, 1629, 2654], [1646, 2618, 1703, 2645], [1713, 2617, 1787, 2645], [1799, 2617, 1882, 2645], [1893, 2627, 1931, 2651], [1944, 2626, 1984, 2645], [1986, 2617, 2077, 2645], [2088, 2621, 2253, 2645], [1282, 2676, 1298, 2695], [1312, 2667, 1395, 2695], [1409, 2676, 1643, 2695], [1657, 2671, 1759, 2696], [1772, 2667, 1872, 2695], [1886, 2671, 1991, 2695], [2006, 2667, 2056, 2695], [2069, 2667, 2167, 2695], [2183, 2667, 2255, 2695], [1281, 2716, 1381, 2744], [1392, 2726, 1420, 2744], [1432, 2725, 1590, 2744], [1602, 2716, 1706, 2744], [1718, 2725, 1734, 2744], [1748, 2716, 1882, 2745], [1893, 2716, 1995, 2744], [1996, 2716, 2065, 2744], [2076, 2716, 2125, 2744], [2135, 2725, 2252, 2753], [1281, 2766, 1345, 2794], [1359, 2766, 1549, 2794], [1564, 2770, 1680, 2795], [1697, 2775, 1746, 2794], [1760, 2766, 1830, 2794], [1845, 2766, 1975, 2803], [1990, 2766, 2069, 2794], [2084, 2766, 2133, 2794], [2149, 2775, 2255, 2794], [1281, 2820, 1312, 2844], [1322, 2816, 1372, 2844], [1382, 2820, 1474, 2853], [1484, 2816, 1633, 2853], [1642, 2816, 1731, 2853], [1741, 2816, 1791, 2844], [1801, 2816, 1972, 2853], [1989, 2816, 2111, 2853], [2123, 2816, 2171, 2844], [2180, 2816, 2255, 2844], [1281, 2870, 1338, 2894], [1350, 2866, 1442, 2900], [1457, 2866, 1506, 2894], [1519, 2866, 1602, 2894], [1615, 2866, 1687, 2894], [1700, 2866, 1749, 2894], [1762, 2870, 1841, 2894], [1855, 2866, 1968, 2894], [1980, 2870, 2082, 2895], [2094, 2866, 2125, 2894], [2138, 2866, 2187, 2894], [2200, 2870, 2254, 2894], [1333, 2937, 1971, 2977], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [633, 285, 756, 311], [1173, 284, 1298, 310], [1351, 284, 1476, 310], [0, 0, 2550, 3300], [1528, 284, 1665, 318], [1676, 284, 1740, 310], [1742, 284, 1852, 316], [631, 329, 762, 361], [772, 328, 899, 353], [1204, 327, 1267, 354], [1381, 327, 1445, 354], [1842, 343, 1852, 346], [634, 368, 754, 395], [762, 369, 889, 394], [1205, 368, 1265, 395], [1382, 368, 1445, 395], [1842, 384, 1852, 387], [631, 412, 664, 436], [665, 411, 820, 436], [1205, 410, 1265, 437], [1382, 410, 1446, 437], [1842, 426, 1852, 429], [633, 454, 787, 479], [788, 457, 841, 479], [852, 454, 885, 479], [1205, 453, 1267, 480], [1382, 454, 1443, 479], [1755, 454, 1853, 484], [633, 496, 771, 529], [782, 496, 999, 521], [1012, 496, 1121, 528], [1205, 495, 1268, 521], [1382, 496, 1445, 521], [1770, 496, 1853, 526], [633, 537, 751, 563], [1206, 537, 1267, 562], [1382, 537, 1446, 562], [1821, 537, 1851, 562], [633, 578, 767, 605], [763, 578, 868, 610], [880, 578, 973, 610], [1206, 578, 1266, 605], [1396, 579, 1431, 604], [1836, 578, 1853, 604], [235, 664, 313, 689], [327, 664, 348, 689], [360, 664, 562, 690], [572, 672, 703, 697], [713, 664, 765, 689], [776, 664, 890, 697], [900, 664, 979, 689], [990, 663, 1033, 689], [1042, 664, 1086, 689], [1095, 664, 1232, 697], [1242, 664, 1394, 689], [1404, 664, 1515, 689], [1525, 664, 1671, 697], [1681, 667, 1708, 689], [1719, 664, 1873, 689], [1873, 667, 1926, 689], [1936, 664, 1969, 689], [1982, 664, 2165, 695], [2175, 672, 2190, 689], [2192, 664, 2253, 694], [232, 709, 325, 741], [338, 709, 476, 742], [487, 709, 704, 734], [718, 709, 855, 740], [866, 712, 891, 734], [902, 709, 945, 739], [958, 709, 1051, 741], [1064, 709, 1117, 734], [1128, 709, 1172, 734], [1184, 709, 1302, 735], [1314, 709, 1406, 734], [1418, 709, 1567, 740], [1579, 709, 1605, 734], [1617, 709, 1758, 739], [1771, 709, 1865, 741], [1878, 717, 1914, 734], [1925, 717, 1959, 734], [1970, 712, 2047, 734], [2057, 709, 2159, 742], [2170, 708, 2202, 734], [2211, 709, 2255, 734], [232, 755, 343, 780], [356, 755, 547, 788], [559, 755, 694, 780], [696, 755, 910, 780], [922, 755, 988, 780], [1005, 755, 1093, 780], [1105, 755, 1229, 780], [1241, 763, 1297, 780], [1297, 755, 1360, 780], [1371, 755, 1439, 780], [1450, 758, 1478, 780], [1490, 755, 1588, 780], [1598, 755, 1831, 781], [1842, 754, 2020, 788], [2032, 755, 2112, 788], [2124, 755, 2168, 780], [2181, 763, 2255, 780], [232, 801, 346, 834], [357, 801, 425, 826], [440, 801, 567, 826], [577, 801, 673, 826], [685, 809, 729, 826], [740, 800, 812, 826], [822, 801, 999, 826], [547, 889, 670, 915], [939, 888, 1062, 922], [1074, 888, 1147, 915], [0, 0, 2550, 3300], [1200, 888, 1323, 922], [1335, 888, 1408, 915], [0, 0, 2550, 3300], [1469, 888, 1678, 922], [0, 0, 2550, 3300], [1730, 888, 1939, 922], [546, 933, 608, 958], [618, 933, 748, 958], [1029, 933, 1059, 958], [1290, 933, 1321, 958], [1556, 933, 1592, 958], [1817, 933, 1852, 958], [546, 974, 627, 999], [638, 974, 857, 1000], [1027, 974, 1061, 1000], [1290, 974, 1321, 1000], [1556, 974, 1592, 1000], [1818, 974, 1853, 1000], [545, 1016, 650, 1041], [652, 1021, 704, 1042], [714, 1016, 759, 1046], [771, 1016, 842, 1042], [1027, 1016, 1059, 1041], [1288, 1016, 1320, 1041], [1556, 1015, 1591, 1041], [1817, 1016, 1853, 1041], [547, 1056, 681, 1083], [676, 1056, 782, 1088], [794, 1056, 886, 1088], [989, 1056, 1024, 1082], [1036, 1056, 1097, 1089], [1250, 1056, 1285, 1082], [1297, 1057, 1358, 1089], [1556, 1056, 1591, 1082], [1780, 1057, 1815, 1082], [1828, 1057, 1889, 1089], [235, 1142, 313, 1167], [323, 1142, 348, 1167], [360, 1142, 468, 1167], [481, 1141, 524, 1167], [535, 1142, 579, 1167], [590, 1142, 747, 1167], [759, 1142, 818, 1167], [829, 1142, 971, 1167], [983, 1150, 1011, 1167], [1024, 1142, 1099, 1167], [1111, 1142, 1267, 1167], [1279, 1150, 1409, 1175], [1422, 1142, 1480, 1173], [1492, 1141, 1523, 1167], [1536, 1142, 1595, 1172], [1608, 1142, 1704, 1175], [1715, 1142, 1737, 1167], [1749, 1141, 1845, 1174], [1858, 1142, 1998, 1167], [2010, 1150, 2045, 1167], [2057, 1142, 2101, 1167], [2113, 1142, 2188, 1175], [2203, 1142, 2255, 1167], [232, 1188, 307, 1221], [319, 1188, 407, 1213], [418, 1196, 447, 1213], [457, 1188, 557, 1213], [567, 1187, 603, 1221], [613, 1188, 657, 1213], [667, 1188, 785, 1213], [800, 1188, 1000, 1221], [1010, 1187, 1174, 1221], [1177, 1196, 1243, 1213], [1253, 1188, 1370, 1213], [1380, 1188, 1432, 1213], [1442, 1188, 1563, 1213], [1573, 1188, 1600, 1213], [1611, 1188, 1655, 1213], [1665, 1187, 1816, 1213], [1828, 1196, 1890, 1221], [1893, 1196, 1962, 1213], [1971, 1188, 2039, 1213], [2049, 1191, 2076, 1213], [2088, 1188, 2170, 1213], [2180, 1188, 2255, 1213], [232, 1234, 388, 1259], [397, 1234, 477, 1267], [493, 1237, 540, 1262], [552, 1234, 682, 1259], [694, 1234, 890, 1267], [901, 1234, 928, 1259], [939, 1233, 1062, 1259], [1071, 1234, 1207, 1267], [1218, 1242, 1283, 1259], [1292, 1234, 1336, 1259], [1346, 1234, 1472, 1267], [1484, 1233, 1704, 1259], [1714, 1242, 1750, 1259], [1761, 1234, 1812, 1259], [1823, 1234, 1883, 1259], [1893, 1234, 2013, 1265], [2014, 1237, 2067, 1259], [2077, 1234, 2120, 1264], [2132, 1234, 2242, 1266], [231, 1367, 281, 1400], [293, 1363, 422, 1400], [424, 1363, 477, 1391], [492, 1363, 623, 1391], [636, 1372, 666, 1391], [680, 1363, 716, 1391], [730, 1363, 911, 1391], [231, 1438, 295, 1466], [313, 1438, 420, 1466], [441, 1447, 481, 1466], [501, 1438, 550, 1466], [570, 1438, 841, 1475], [861, 1438, 1034, 1466], [1054, 1438, 1134, 1466], [1157, 1447, 1205, 1466], [232, 1488, 433, 1516], [449, 1488, 479, 1516], [495, 1488, 585, 1516], [600, 1488, 627, 1516], [656, 1489, 708, 1516], [724, 1488, 854, 1516], [870, 1488, 1126, 1517], [1142, 1497, 1204, 1516], [230, 1538, 378, 1575], [397, 1538, 487, 1575], [505, 1538, 555, 1566], [573, 1538, 698, 1575], [718, 1538, 775, 1566], [795, 1538, 923, 1575], [942, 1538, 1126, 1575], [1148, 1538, 1205, 1566], [231, 1587, 375, 1624], [395, 1596, 425, 1615], [445, 1587, 569, 1624], [588, 1587, 663, 1615], [701, 1587, 764, 1616], [782, 1587, 885, 1615], [903, 1587, 1054, 1624], [1074, 1596, 1114, 1615], [1132, 1587, 1205, 1615], [231, 1637, 281, 1665], [292, 1637, 442, 1665], [458, 1637, 515, 1665], [528, 1646, 568, 1665], [579, 1637, 695, 1665], [698, 1647, 743, 1666], [747, 1637, 836, 1665], [850, 1637, 973, 1665], [986, 1646, 1025, 1665], [1037, 1637, 1110, 1665], [1123, 1637, 1203, 1665], [232, 1687, 290, 1715], [309, 1687, 392, 1724], [414, 1696, 430, 1715], [449, 1687, 618, 1715], [637, 1687, 856, 1724], [875, 1687, 906, 1715], [926, 1696, 1070, 1724], [1090, 1687, 1137, 1715], [1156, 1687, 1205, 1715], [232, 1736, 312, 1765], [332, 1737, 507, 1774], [542, 1738, 598, 1765], [615, 1737, 664, 1765], [682, 1737, 807, 1774], [825, 1741, 855, 1765], [874, 1737, 1003, 1774], [1021, 1737, 1203, 1771], [231, 1796, 278, 1815], [293, 1787, 429, 1824], [443, 1787, 581, 1816], [597, 1787, 681, 1816], [694, 1787, 872, 1816], [888, 1797, 1038, 1823], [1051, 1787, 1092, 1824], [1107, 1787, 1125, 1816], [1139, 1796, 1204, 1824], [231, 1841, 307, 1865], [337, 1838, 393, 1865], [409, 1837, 458, 1865], [475, 1837, 604, 1874], [620, 1841, 651, 1865], [667, 1837, 792, 1874], [809, 1837, 883, 1871], [902, 1846, 949, 1865], [965, 1837, 1100, 1874], [1118, 1837, 1204, 1865], [231, 1886, 292, 1914], [311, 1886, 395, 1914], [414, 1886, 588, 1914], [608, 1895, 752, 1923], [771, 1886, 811, 1923], [831, 1886, 849, 1915], [868, 1890, 997, 1923], [1037, 1886, 1107, 1914], [1128, 1886, 1204, 1914], [231, 1940, 311, 1964], [324, 1936, 384, 1964], [395, 1945, 450, 1964], [460, 1936, 550, 1964], [552, 1936, 597, 1964], [610, 1936, 677, 1964], [688, 1940, 718, 1964], [729, 1936, 811, 1964], [821, 1936, 1020, 1973], [1031, 1936, 1205, 1964], [231, 1986, 441, 2023], [456, 1986, 535, 2014], [549, 1986, 598, 2014], [611, 1986, 820, 2023], [833, 1986, 901, 2014], [913, 1986, 954, 2023], [967, 1986, 1056, 2023], [1070, 1986, 1142, 2023], [1156, 1986, 1205, 2014], [230, 2040, 376, 2070], [390, 2036, 667, 2073], [678, 2036, 802, 2073], [813, 2036, 890, 2070], [903, 2036, 1020, 2073], [1031, 2036, 1081, 2064], [1092, 2036, 1161, 2064], [1172, 2036, 1208, 2064], [231, 2086, 408, 2115], [421, 2086, 599, 2123], [612, 2095, 646, 2114], [657, 2086, 785, 2123], [797, 2086, 996, 2114], [231, 2199, 265, 2234], [281, 2199, 504, 2234], [231, 2285, 295, 2313], [311, 2285, 480, 2314], [497, 2285, 599, 2313], [617, 2294, 647, 2313], [665, 2285, 841, 2313], [857, 2285, 888, 2313], [905, 2285, 961, 2313], [979, 2294, 1071, 2322], [1086, 2285, 1203, 2313], [232, 2344, 248, 2363], [263, 2335, 399, 2372], [414, 2335, 455, 2369], [472, 2335, 693, 2372], [708, 2335, 921, 2372], [935, 2335, 1006, 2363], [1029, 2335, 1100, 2363], [1116, 2335, 1140, 2363], [1156, 2335, 1205, 2363], [231, 2385, 313, 2413], [325, 2394, 411, 2413], [414, 2385, 477, 2413], [485, 2385, 534, 2413], [546, 2385, 716, 2422], [728, 2385, 861, 2422], [872, 2394, 944, 2414], [954, 2385, 1003, 2413], [1014, 2385, 1205, 2414], [231, 2435, 342, 2469], [361, 2435, 503, 2472], [518, 2435, 645, 2472], [661, 2439, 691, 2463], [708, 2435, 788, 2463], [803, 2439, 834, 2463], [849, 2444, 918, 2463], [920, 2435, 1050, 2472], [1065, 2435, 1203, 2469], [231, 2485, 331, 2513], [351, 2485, 381, 2513], [401, 2489, 466, 2513], [485, 2485, 581, 2522], [602, 2494, 686, 2513], [706, 2489, 842, 2513], [861, 2485, 998, 2513], [1038, 2486, 1091, 2513], [1110, 2485, 1205, 2513], [231, 2534, 292, 2562], [305, 2534, 355, 2562], [368, 2534, 592, 2571], [607, 2534, 866, 2571], [880, 2534, 1083, 2571], [1097, 2534, 1203, 2571], [230, 2593, 271, 2621], [291, 2584, 419, 2621], [438, 2584, 510, 2612], [530, 2593, 570, 2612], [590, 2584, 759, 2612], [779, 2584, 890, 2621], [910, 2593, 950, 2612], [970, 2584, 1019, 2612], [1038, 2584, 1152, 2621], [1172, 2584, 1208, 2612], [231, 2634, 281, 2662], [295, 2634, 415, 2662], [430, 2634, 637, 2671], [655, 2634, 712, 2662], [726, 2634, 775, 2662], [788, 2634, 912, 2671], [927, 2634, 1135, 2671], [1149, 2634, 1204, 2662], [230, 2693, 338, 2721], [353, 2684, 402, 2712], [417, 2693, 561, 2721], [575, 2684, 611, 2712], [622, 2684, 671, 2712], [685, 2684, 805, 2712], [820, 2684, 957, 2712], [980, 2684, 1103, 2721], [1118, 2693, 1204, 2721], [231, 2734, 366, 2762], [369, 2734, 527, 2771], [545, 2738, 576, 2762], [594, 2734, 678, 2762], [694, 2734, 832, 2771], [850, 2734, 984, 2771], [1002, 2734, 1052, 2762], [1068, 2734, 1203, 2771], [231, 2783, 396, 2820], [416, 2792, 447, 2811], [468, 2783, 517, 2811], [536, 2783, 781, 2820], [800, 2783, 836, 2811], [853, 2783, 902, 2811], [921, 2783, 1119, 2820], [1140, 2787, 1203, 2820], [231, 2833, 331, 2870], [349, 2833, 474, 2861], [487, 2833, 694, 2870], [706, 2833, 794, 2861], [797, 2833, 950, 2870], [962, 2842, 1046, 2861], [1059, 2837, 1203, 2867], [231, 2883, 396, 2920], [412, 2883, 459, 2911], [474, 2883, 524, 2911], [539, 2883, 676, 2920], [692, 2883, 800, 2917], [819, 2883, 876, 2911], [892, 2883, 1041, 2911], [1056, 2887, 1136, 2911], [1153, 2887, 1205, 2911], [231, 2937, 262, 2961], [277, 2933, 316, 2961], [332, 2933, 492, 2970], [506, 2933, 580, 2961], [596, 2933, 626, 2961], [642, 2933, 692, 2961], [707, 2933, 916, 2970], [933, 2933, 990, 2961], [1006, 2933, 1205, 2970], [1282, 1363, 1398, 1400], [1437, 1364, 1490, 1391], [1508, 1363, 1584, 1392], [1603, 1363, 1766, 1392], [1785, 1363, 1834, 1391], [1852, 1372, 1960, 1391], [1979, 1363, 2027, 1391], [2045, 1363, 2095, 1391], [2114, 1363, 2254, 1391], [1281, 1413, 1351, 1450], [1368, 1413, 1476, 1450], [1493, 1422, 1524, 1441], [1540, 1413, 1664, 1450], [1680, 1417, 1710, 1441], [1725, 1422, 1858, 1442], [1874, 1422, 1890, 1441], [1905, 1413, 1999, 1441], [2015, 1413, 2255, 1450], [1281, 1463, 1317, 1491], [1329, 1463, 1379, 1491], [1393, 1463, 1495, 1500], [1511, 1463, 1663, 1500], [1665, 1463, 1829, 1491], [1845, 1463, 1925, 1491], [1939, 1463, 1988, 1491], [2003, 1463, 2151, 1492], [2165, 1463, 2253, 1497], [1282, 1513, 1516, 1542], [1528, 1522, 1785, 1541], [1281, 1587, 1407, 1624], [1420, 1587, 1469, 1615], [1483, 1587, 1625, 1624], [1641, 1587, 1690, 1615], [1703, 1587, 1794, 1615], [1795, 1587, 1843, 1615], [1859, 1587, 1919, 1615], [1932, 1587, 2022, 1615], [2037, 1587, 2145, 1615], [2157, 1591, 2188, 1615], [2200, 1596, 2255, 1615], [1281, 1637, 1351, 1665], [1362, 1637, 1468, 1665], [1479, 1637, 1601, 1665], [1604, 1637, 1689, 1665], [1700, 1637, 1873, 1665], [1884, 1637, 1991, 1665], [2003, 1637, 2136, 1672], [2137, 1646, 2184, 1666], [2185, 1637, 2253, 1671], [1281, 1687, 1394, 1722], [1405, 1696, 1439, 1715], [1447, 1687, 1649, 1724], [1658, 1687, 1742, 1716], [1753, 1687, 1892, 1724], [1903, 1687, 1932, 1716], [1942, 1688, 2032, 1724], [2044, 1687, 2147, 1722], [2163, 1688, 2254, 1715], [1281, 1746, 1357, 1771], [1372, 1737, 1478, 1765], [1494, 1746, 1534, 1765], [1548, 1737, 1597, 1765], [1611, 1737, 1785, 1765], [1799, 1737, 1865, 1765], [1879, 1741, 2001, 1774], [2015, 1737, 2184, 1766], [2199, 1746, 2255, 1765], [1281, 1787, 1363, 1815], [1383, 1787, 1595, 1824], [1616, 1787, 1829, 1824], [1849, 1787, 2059, 1824], [2081, 1787, 2150, 1815], [2171, 1787, 2255, 1815], [1281, 1837, 1429, 1871], [1459, 1837, 1516, 1865], [1540, 1846, 1596, 1865], [1620, 1837, 1695, 1865], [1719, 1846, 1790, 1866], [1814, 1837, 1904, 1865], [1928, 1837, 2023, 1874], [2047, 1837, 2255, 1874], [1281, 1886, 1410, 1914], [1425, 1886, 1495, 1914], [1508, 1886, 1719, 1923], [1733, 1886, 1880, 1914], [1903, 1886, 1931, 1914], [1942, 1886, 1992, 1914], [2005, 1886, 2075, 1923], [2089, 1886, 2114, 1914], [2129, 1890, 2160, 1914], [2174, 1886, 2255, 1914], [1280, 1936, 1483, 1973], [1494, 1936, 1614, 1973], [1624, 1945, 1755, 1973], [1765, 1936, 1912, 1973], [1923, 1936, 2120, 1973], [2124, 1936, 2165, 1970], [2176, 1936, 2200, 1964], [2214, 1936, 2254, 1964], [1281, 1995, 1348, 2023], [1351, 1986, 1536, 2014], [1547, 1990, 1578, 2014], [1589, 1986, 1727, 2023], [1738, 1995, 1822, 2014], [1833, 1986, 1961, 2023], [1972, 1986, 2048, 2020], [2063, 1986, 2120, 2014], [2130, 1986, 2227, 2014], [2239, 1995, 2255, 2014], [1280, 2036, 1388, 2073], [1401, 2036, 1503, 2064], [1516, 2036, 1576, 2064], [1589, 2036, 1758, 2065], [1771, 2036, 1855, 2073], [1857, 2036, 1917, 2064], [1931, 2045, 1947, 2064], [1959, 2036, 2053, 2064], [2065, 2036, 2172, 2064], [2185, 2036, 2255, 2064], [1282, 2095, 1298, 2114], [1309, 2086, 1521, 2123], [1533, 2086, 1693, 2123], [1705, 2086, 1765, 2114], [1777, 2086, 1909, 2115], [1921, 2095, 1955, 2114], [1966, 2086, 2070, 2114], [1281, 2199, 1315, 2234], [1332, 2199, 1568, 2234], [1281, 2286, 1318, 2313], [1317, 2285, 1499, 2313], [1509, 2285, 1678, 2314], [1681, 2294, 1716, 2319], [1726, 2285, 2143, 2322], [2153, 2285, 2255, 2313], [1281, 2335, 1329, 2363], [1342, 2335, 1486, 2372], [1499, 2335, 1646, 2372], [1660, 2335, 1835, 2363], [1849, 2335, 1932, 2363], [1946, 2335, 2195, 2372], [2210, 2335, 2254, 2363], [1280, 2385, 1374, 2422], [1388, 2385, 1468, 2413], [1481, 2385, 1690, 2422], [1703, 2394, 1763, 2413], [1778, 2389, 1838, 2413], [1853, 2385, 1910, 2413], [1925, 2394, 1941, 2413], [1955, 2385, 2071, 2413], [2086, 2389, 2208, 2413], [2222, 2385, 2258, 2413], [1280, 2435, 1404, 2472], [1417, 2435, 1493, 2469], [1508, 2435, 1634, 2463], [1646, 2435, 1797, 2472], [1810, 2435, 2088, 2472], [2102, 2444, 2136, 2463], [2148, 2435, 2254, 2463], [1281, 2485, 1387, 2513], [1406, 2485, 1575, 2514], [1588, 2485, 1744, 2513], [1759, 2485, 1892, 2514], [1894, 2485, 1951, 2513], [1964, 2485, 2091, 2522], [2104, 2485, 2254, 2513], [1281, 2534, 1351, 2571], [1368, 2534, 1452, 2562], [1469, 2534, 1666, 2571], [1685, 2534, 1757, 2562], [1775, 2543, 1791, 2562], [1807, 2534, 1998, 2571], [2015, 2534, 2148, 2562], [2166, 2534, 2255, 2563], [1282, 2584, 1418, 2621], [1433, 2584, 1646, 2621], [1661, 2584, 1818, 2621], [1845, 2584, 1908, 2612], [1922, 2584, 2014, 2612], [2029, 2584, 2053, 2612], [2070, 2584, 2131, 2612], [2146, 2584, 2195, 2612], [2209, 2593, 2254, 2612], [1281, 2634, 1386, 2671], [1400, 2634, 1620, 2671], [1635, 2643, 1688, 2671], [1701, 2634, 1829, 2671], [1844, 2638, 1908, 2671], [1923, 2634, 2018, 2662], [2033, 2634, 2106, 2671], [2120, 2634, 2192, 2662], [2206, 2634, 2255, 2662], [1281, 2684, 1407, 2712], [1424, 2684, 1459, 2712], [1474, 2684, 1572, 2712], [1590, 2684, 1621, 2712], [1638, 2684, 1687, 2712], [1705, 2688, 1870, 2718], [1890, 2684, 2013, 2721], [2030, 2684, 2171, 2721], [2188, 2684, 2254, 2712], [1281, 2734, 1361, 2762], [1376, 2734, 1554, 2771], [1569, 2734, 1782, 2771], [1797, 2734, 1932, 2771], [1960, 2735, 2012, 2762], [2029, 2734, 2151, 2763], [2168, 2738, 2254, 2762], [1281, 2783, 1437, 2811], [1453, 2783, 1559, 2811], [1578, 2783, 1625, 2811], [1642, 2783, 1915, 2820], [1932, 2783, 2145, 2820], [2162, 2783, 2254, 2811], [1281, 2837, 1363, 2861], [1380, 2833, 1595, 2861], [1612, 2833, 1712, 2861], [1728, 2833, 1884, 2870], [1900, 2842, 1940, 2870], [1957, 2837, 1988, 2861], [2005, 2833, 2086, 2861], [2103, 2833, 2204, 2861], [2222, 2833, 2258, 2861], [1281, 2883, 1455, 2920], [1473, 2883, 1615, 2920], [1635, 2883, 1692, 2911], [1709, 2883, 1844, 2920], [1859, 2892, 1942, 2920], [1958, 2883, 2008, 2911], [2023, 2883, 2162, 2920], [2181, 2887, 2255, 2911], [1281, 2942, 1300, 2961], [1302, 2933, 1376, 2961], [1389, 2937, 1430, 2961], [1442, 2933, 1472, 2961], [1485, 2942, 1522, 2961], [1534, 2933, 1804, 2970], [1816, 2933, 2089, 2961], [2101, 2933, 2174, 2961], [603, 199, 758, 226], [762, 200, 848, 225], [859, 199, 1003, 233], [1014, 199, 1194, 226], [1205, 199, 1459, 233], [1471, 199, 1592, 226], [1603, 200, 1692, 226], [1702, 199, 1883, 233], [232, 286, 461, 321], [232, 361, 374, 392], [391, 362, 478, 392], [495, 362, 613, 392], [630, 362, 727, 395], [744, 362, 797, 387], [812, 362, 919, 392], [937, 362, 1042, 387], [1069, 362, 1202, 395], [273, 402, 439, 428], [451, 403, 526, 428], [537, 403, 762, 436], [775, 402, 818, 428], [829, 403, 1011, 436], [1023, 403, 1077, 436], [1098, 403, 1127, 428], [1139, 404, 1204, 428], [273, 444, 402, 478], [411, 445, 445, 478], [447, 445, 491, 470], [500, 445, 677, 471], [687, 445, 854, 478], [864, 454, 899, 470], [910, 445, 1131, 478], [1138, 446, 1204, 471], [274, 486, 333, 511], [348, 487, 495, 519], [512, 487, 656, 519], [674, 494, 718, 519], [739, 486, 873, 516], [893, 486, 975, 516], [995, 486, 1129, 519], [1148, 486, 1204, 511], [273, 531, 334, 561], [349, 528, 430, 554], [447, 528, 621, 553], [637, 527, 680, 553], [694, 528, 914, 561], [928, 528, 1101, 561], [1132, 528, 1205, 553], [274, 569, 1178, 601], [232, 654, 345, 687], [363, 654, 392, 684], [409, 654, 570, 684], [588, 654, 619, 684], [636, 654, 688, 679], [704, 654, 826, 684], [844, 654, 866, 679], [897, 654, 922, 679], [938, 654, 1030, 679], [1044, 653, 1204, 687], [273, 695, 308, 720], [323, 695, 456, 728], [471, 695, 570, 720], [597, 695, 712, 721], [726, 695, 759, 728], [765, 695, 895, 720], [909, 696, 1046, 728], [1059, 695, 1203, 725], [273, 737, 354, 763], [397, 737, 470, 762], [490, 737, 1201, 769], [276, 780, 414, 804], [231, 863, 345, 896], [358, 863, 468, 888], [478, 863, 530, 888], [542, 863, 663, 893], [675, 863, 730, 888], [747, 863, 881, 896], [892, 863, 1058, 896], [1071, 863, 1205, 896], [273, 907, 300, 929], [311, 904, 459, 929], [470, 904, 584, 937], [595, 903, 627, 929], [635, 912, 651, 929], [661, 904, 753, 929], [763, 903, 948, 937], [960, 904, 1093, 937], [1104, 904, 1203, 929], [271, 946, 375, 972], [381, 946, 529, 976], [540, 947, 623, 971], [631, 947, 820, 971], [829, 955, 873, 976], [886, 946, 1112, 978], [1122, 946, 1203, 972], [231, 1030, 338, 1060], [349, 1030, 380, 1060], [391, 1030, 557, 1060], [569, 1030, 610, 1060], [622, 1030, 674, 1055], [684, 1030, 796, 1060], [807, 1030, 832, 1055], [847, 1030, 966, 1055], [976, 1030, 1130, 1063], [1140, 1030, 1205, 1055], [274, 1072, 413, 1097], [426, 1072, 659, 1105], [673, 1072, 801, 1105], [826, 1072, 856, 1097], [870, 1072, 1038, 1105], [1052, 1081, 1087, 1097], [1100, 1073, 1204, 1105], [274, 1113, 328, 1138], [340, 1112, 469, 1138], [484, 1114, 510, 1138], [523, 1113, 639, 1139], [652, 1114, 799, 1146], [814, 1114, 985, 1146], [1003, 1113, 1117, 1146], [1134, 1113, 1204, 1138], [273, 1155, 356, 1185], [368, 1154, 449, 1181], [231, 1239, 363, 1269], [387, 1239, 487, 1269], [509, 1239, 601, 1272], [625, 1239, 763, 1269], [785, 1239, 952, 1269], [975, 1239, 1064, 1272], [1087, 1239, 1203, 1272], [272, 1281, 375, 1306], [391, 1281, 441, 1311], [461, 1281, 603, 1311], [623, 1281, 791, 1311], [811, 1281, 924, 1314], [944, 1281, 1035, 1311], [1055, 1281, 1107, 1306], [1126, 1281, 1203, 1311], [273, 1322, 385, 1347], [410, 1322, 454, 1347], [467, 1322, 649, 1347], [662, 1322, 797, 1355], [810, 1325, 838, 1347], [851, 1322, 972, 1355], [984, 1321, 1117, 1355], [1130, 1322, 1205, 1347], [272, 1364, 505, 1397], [521, 1363, 706, 1397], [716, 1364, 750, 1397], [753, 1364, 833, 1390], [842, 1364, 924, 1394], [936, 1364, 1017, 1390], [231, 1447, 379, 1478], [395, 1448, 435, 1478], [450, 1448, 568, 1478], [583, 1448, 614, 1478], [630, 1448, 738, 1478], [753, 1448, 792, 1478], [808, 1448, 916, 1478], [931, 1448, 981, 1478], [997, 1448, 1203, 1481], [273, 1490, 315, 1520], [330, 1490, 383, 1515], [396, 1490, 497, 1520], [512, 1490, 534, 1515], [556, 1490, 668, 1515], [681, 1490, 814, 1523], [826, 1490, 985, 1523], [999, 1490, 1120, 1522], [1134, 1489, 1205, 1515], [274, 1531, 385, 1556], [423, 1531, 538, 1557], [556, 1531, 589, 1564], [599, 1531, 729, 1556], [747, 1532, 883, 1564], [900, 1531, 1044, 1561], [1068, 1531, 1206, 1557], [273, 1573, 354, 1603], [366, 1573, 447, 1599], [231, 1657, 338, 1682], [359, 1657, 402, 1687], [425, 1657, 485, 1682], [546, 1657, 726, 1690], [747, 1665, 812, 1690], [833, 1657, 943, 1682], [964, 1657, 1126, 1690], [1175, 1657, 1205, 1682], [272, 1698, 457, 1732], [474, 1699, 508, 1732], [519, 1699, 562, 1724], [580, 1699, 645, 1724], [660, 1699, 770, 1724], [785, 1700, 908, 1732], [925, 1699, 959, 1732], [971, 1699, 1014, 1724], [1029, 1699, 1204, 1724], [267, 1740, 316, 1773], [328, 1740, 549, 1773], [560, 1741, 731, 1773], [744, 1740, 919, 1765], [931, 1739, 974, 1765], [984, 1740, 1205, 1773], [272, 1782, 445, 1815], [458, 1782, 538, 1808], [231, 1866, 311, 1899], [326, 1866, 413, 1896], [429, 1866, 603, 1896], [619, 1866, 716, 1896], [732, 1866, 784, 1891], [799, 1866, 893, 1896], [908, 1866, 988, 1891], [1001, 1866, 1034, 1891], [1059, 1866, 1084, 1891], [1099, 1866, 1203, 1899], [273, 1907, 333, 1938], [350, 1908, 402, 1933], [416, 1907, 543, 1933], [556, 1908, 836, 1941], [850, 1907, 882, 1933], [894, 1907, 951, 1933], [965, 1908, 1057, 1933], [1071, 1908, 1096, 1933], [1124, 1908, 1203, 1938], [273, 1949, 354, 1975], [230, 2034, 353, 2067], [368, 2034, 479, 2059], [492, 2034, 544, 2059], [558, 2034, 637, 2067], [652, 2034, 739, 2060], [763, 2034, 918, 2067], [931, 2037, 1024, 2059], [1037, 2042, 1117, 2067], [1130, 2034, 1205, 2059], [272, 2075, 497, 2108], [508, 2075, 589, 2108], [600, 2075, 782, 2108], [793, 2075, 961, 2100], [980, 2075, 1010, 2100], [1020, 2074, 1205, 2108], [273, 2117, 307, 2150], [310, 2117, 401, 2143], [410, 2117, 492, 2147], [504, 2117, 585, 2143], [231, 2200, 378, 2234], [392, 2201, 467, 2226], [479, 2201, 531, 2226], [543, 2201, 623, 2234], [638, 2201, 727, 2226], [748, 2201, 892, 2226], [905, 2201, 1056, 2234], [1075, 2201, 1205, 2234], [273, 2243, 395, 2268], [413, 2246, 439, 2268], [456, 2243, 505, 2268], [524, 2243, 796, 2276], [814, 2242, 1067, 2276], [1085, 2243, 1203, 2268], [273, 2285, 354, 2310], [361, 2285, 486, 2317], [496, 2284, 756, 2314], [769, 2284, 849, 2310], [231, 2369, 377, 2399], [399, 2369, 464, 2394], [482, 2369, 583, 2394], [602, 2369, 654, 2394], [674, 2369, 815, 2399], [837, 2369, 904, 2394], [945, 2369, 1132, 2402], [1150, 2369, 1204, 2394], [273, 2409, 387, 2435], [412, 2410, 637, 2443], [664, 2410, 776, 2435], [802, 2410, 877, 2435], [903, 2410, 1058, 2443], [1123, 2411, 1205, 2436], [269, 2453, 394, 2485], [403, 2453, 495, 2478], [500, 2451, 664, 2482], [676, 2452, 757, 2478], [231, 2536, 408, 2566], [428, 2536, 589, 2566], [608, 2536, 691, 2566], [710, 2536, 782, 2566], [801, 2536, 853, 2561], [870, 2536, 1012, 2566], [1032, 2536, 1129, 2561], [1163, 2536, 1204, 2561], [273, 2577, 373, 2610], [389, 2577, 568, 2610], [585, 2576, 742, 2602], [757, 2577, 982, 2610], [999, 2576, 1031, 2602], [1045, 2577, 1142, 2602], [1175, 2577, 1205, 2602], [272, 2618, 442, 2652], [444, 2619, 499, 2652], [502, 2619, 545, 2644], [554, 2619, 751, 2644], [760, 2619, 928, 2652], [938, 2628, 972, 2644], [983, 2619, 1205, 2652], [272, 2662, 435, 2694], [447, 2661, 614, 2693], [627, 2660, 757, 2694], [770, 2661, 853, 2691], [865, 2660, 1018, 2686], [1028, 2661, 1109, 2687], [231, 2745, 336, 2775], [354, 2745, 468, 2778], [496, 2745, 634, 2778], [658, 2745, 683, 2770], [697, 2745, 809, 2778], [824, 2753, 921, 2778], [937, 2744, 980, 2770], [995, 2745, 1134, 2770], [1148, 2753, 1204, 2770], [273, 2786, 352, 2811], [363, 2786, 527, 2811], [544, 2786, 573, 2811], [582, 2787, 637, 2811], [645, 2787, 759, 2816], [772, 2786, 882, 2811], [893, 2786, 917, 2816], [929, 2794, 973, 2819], [986, 2785, 1086, 2816], [1098, 2786, 1179, 2812], [230, 2871, 328, 2901], [340, 2871, 429, 2896], [438, 2871, 471, 2901], [483, 2871, 566, 2904], [578, 2871, 696, 2904], [708, 2871, 788, 2901], [800, 2871, 874, 2904], [884, 2871, 917, 2901], [928, 2871, 981, 2896], [989, 2871, 1030, 2901], [1040, 2871, 1103, 2896], [1117, 2871, 1202, 2896], [273, 2912, 298, 2937], [313, 2920, 372, 2937], [385, 2911, 552, 2937], [565, 2912, 711, 2937], [725, 2911, 768, 2937], [781, 2915, 835, 2937], [849, 2912, 1058, 2945], [1072, 2912, 1203, 2937], [274, 2954, 326, 2979], [337, 2954, 452, 2980], [463, 2954, 497, 2987], [499, 2954, 629, 2979], [640, 2955, 776, 2987], [786, 2954, 930, 2984], [943, 2953, 1109, 2984], [1122, 2954, 1202, 2980], [1280, 295, 1413, 325], [1432, 295, 1537, 325], [1555, 295, 1602, 325], [1621, 295, 1699, 327], [1717, 295, 1745, 325], [1763, 295, 1815, 320], [1832, 295, 1981, 325], [2001, 295, 2065, 328], [2098, 295, 2255, 328], [1324, 337, 1487, 362], [1502, 345, 1602, 370], [1617, 337, 1764, 370], [1780, 336, 1823, 362], [1836, 337, 1961, 362], [1976, 337, 2140, 362], [2169, 337, 2198, 362], [2212, 338, 2254, 362], [1323, 378, 1488, 403], [1504, 378, 1671, 411], [1687, 387, 1722, 403], [1737, 379, 1873, 411], [1887, 379, 2126, 411], [2142, 378, 2253, 410], [1323, 420, 1420, 446], [1281, 495, 1413, 525], [1424, 495, 1529, 525], [1541, 495, 1690, 525], [1701, 495, 1765, 528], [1776, 495, 1861, 525], [1873, 495, 1932, 525], [1944, 495, 2072, 525], [2083, 495, 2156, 528], [2166, 495, 2192, 525], [2203, 495, 2255, 520], [1323, 536, 1408, 566], [1423, 535, 1486, 561], [1512, 535, 1678, 561], [1691, 536, 1916, 569], [1931, 535, 1963, 561], [1975, 536, 2063, 561], [2078, 536, 2130, 561], [2143, 536, 2254, 569], [1323, 578, 1375, 603], [1386, 578, 1454, 603], [1464, 578, 1718, 611], [1735, 578, 1764, 603], [1772, 577, 1917, 604], [1928, 579, 1954, 603], [1964, 578, 2067, 604], [2077, 578, 2254, 611], [1322, 620, 1486, 652], [1497, 619, 1621, 652], [1633, 627, 1677, 652], [1691, 619, 1864, 649], [1876, 618, 1976, 645], [1281, 694, 1368, 724], [1384, 694, 1488, 727], [1501, 694, 1554, 719], [1567, 694, 1628, 724], [1644, 694, 1699, 719], [1711, 694, 1807, 727], [1831, 694, 1856, 719], [1869, 693, 1922, 719], [1934, 694, 1987, 719], [2001, 694, 2098, 727], [2111, 694, 2255, 727], [1323, 734, 1366, 760], [1377, 735, 1491, 768], [1503, 735, 1595, 760], [1605, 734, 1790, 768], [1803, 735, 1936, 768], [1948, 735, 2061, 760], [2080, 735, 2110, 760], [2120, 734, 2254, 760], [1324, 778, 1384, 810], [1392, 777, 1426, 810], [1429, 777, 1472, 802], [1481, 777, 1546, 803], [1554, 777, 1751, 802], [1761, 777, 1928, 810], [1938, 786, 1972, 802], [1980, 777, 2110, 802], [2118, 778, 2255, 810], [1324, 818, 1443, 850], [1456, 818, 1537, 844], [1282, 893, 1350, 923], [1361, 893, 1445, 918], [1454, 892, 1533, 918], [1541, 893, 1593, 918], [1602, 893, 1669, 926], [1681, 893, 1826, 918], [1841, 893, 1866, 918], [1877, 893, 2031, 926], [2043, 893, 2215, 926], [2225, 892, 2257, 918], [1323, 935, 1430, 960], [1445, 935, 1584, 960], [1597, 935, 1745, 968], [1758, 935, 1872, 960], [1897, 935, 2119, 968], [2131, 936, 2254, 968], [1323, 977, 1381, 1006], [1394, 976, 1584, 1008], [1597, 976, 1678, 1002], [1282, 1051, 1343, 1081], [1356, 1051, 1441, 1076], [1450, 1051, 1531, 1076], [1541, 1051, 1593, 1076], [1604, 1051, 1687, 1084], [1699, 1051, 1797, 1084], [1812, 1051, 1837, 1076], [1849, 1059, 1945, 1084], [1956, 1059, 1991, 1076], [2002, 1050, 2115, 1076], [2125, 1051, 2253, 1084], [1322, 1091, 1488, 1125], [1503, 1091, 1559, 1117], [1569, 1093, 1643, 1117], [1656, 1093, 1845, 1125], [1862, 1093, 1944, 1117], [1957, 1093, 2147, 1117], [2160, 1101, 2203, 1122], [2219, 1092, 2255, 1117], [1324, 1134, 1570, 1166], [1582, 1134, 1663, 1160], [1282, 1209, 1458, 1242], [1482, 1208, 1588, 1242], [1614, 1209, 1721, 1239], [1746, 1209, 1871, 1239], [1895, 1209, 1948, 1234], [1967, 1209, 2109, 1242], [2134, 1209, 2254, 1235], [1322, 1250, 1389, 1283], [1401, 1250, 1434, 1275], [1457, 1250, 1554, 1276], [1574, 1249, 1674, 1276], [1687, 1253, 1792, 1275], [1806, 1249, 1849, 1275], [1861, 1250, 1935, 1275], [1948, 1250, 2166, 1283], [2189, 1251, 2254, 1275], [1323, 1291, 1452, 1325], [1464, 1292, 1497, 1325], [1503, 1292, 1546, 1317], [1557, 1292, 1717, 1325], [1726, 1291, 1855, 1317], [1867, 1293, 1893, 1317], [1903, 1292, 2020, 1318], [2030, 1293, 2177, 1325], [2189, 1293, 2254, 1317], [1323, 1334, 1431, 1366], [1443, 1333, 1576, 1365], [1586, 1333, 1680, 1364], [1695, 1333, 1829, 1363], [1282, 1408, 1385, 1438], [1400, 1408, 1431, 1438], [1446, 1408, 1567, 1438], [1582, 1408, 1621, 1438], [1637, 1408, 1689, 1433], [1702, 1408, 1816, 1441], [1831, 1408, 1860, 1433], [1882, 1408, 1964, 1433], [1976, 1408, 2209, 1441], [2230, 1408, 2255, 1433], [1324, 1449, 1421, 1482], [1436, 1449, 1489, 1474], [1504, 1449, 1612, 1482], [1627, 1449, 1738, 1474], [1753, 1448, 1796, 1474], [1811, 1449, 2051, 1482], [2067, 1449, 2195, 1482], [2225, 1449, 2255, 1474], [1322, 1490, 1507, 1524], [1517, 1491, 1551, 1524], [1556, 1491, 1599, 1516], [1610, 1491, 1676, 1516], [1684, 1491, 1793, 1516], [1802, 1492, 1925, 1524], [1936, 1491, 1969, 1524], [1974, 1491, 2017, 1516], [2026, 1491, 2201, 1516], [2207, 1491, 2256, 1524], [1324, 1532, 1546, 1565], [1553, 1533, 1724, 1565], [1735, 1540, 1779, 1565], [1791, 1532, 1926, 1558], [1937, 1532, 2112, 1557], [2121, 1531, 2164, 1557], [2171, 1532, 2254, 1558], [1322, 1574, 1471, 1607], [1481, 1574, 1654, 1607], [1667, 1574, 1747, 1600], [1281, 1649, 1393, 1679], [1410, 1649, 1528, 1674], [1541, 1649, 1563, 1674], [1593, 1649, 1637, 1674], [1652, 1648, 1772, 1674], [1787, 1649, 1897, 1674], [1912, 1648, 1955, 1674], [1969, 1649, 2125, 1682], [2140, 1649, 2255, 1674], [1322, 1690, 1436, 1715], [1452, 1689, 1583, 1715], [1600, 1690, 1665, 1715], [1681, 1690, 1790, 1723], [1806, 1689, 1998, 1715], [2029, 1690, 2109, 1716], [2125, 1691, 2254, 1715], [1323, 1733, 1394, 1757], [1405, 1741, 1440, 1757], [1450, 1732, 1658, 1757], [1669, 1732, 1797, 1765], [1810, 1732, 1937, 1764], [1951, 1731, 2159, 1764], [2175, 1732, 2253, 1758], [1281, 1806, 1348, 1836], [1359, 1806, 1423, 1831], [1433, 1806, 1461, 1836], [1474, 1806, 1582, 1836], [1594, 1806, 1718, 1836], [1730, 1806, 1789, 1836], [1801, 1806, 1906, 1836], [1918, 1806, 1971, 1831], [1980, 1806, 2122, 1839], [2134, 1806, 2254, 1832], [1322, 1848, 1389, 1881], [1399, 1848, 1432, 1873], [1449, 1848, 1586, 1881], [1597, 1848, 1672, 1873], [1683, 1847, 1861, 1881], [1873, 1847, 1916, 1873], [1925, 1847, 2119, 1881], [2130, 1848, 2255, 1873], [1323, 1889, 1487, 1914], [1503, 1889, 1532, 1914], [1542, 1888, 1727, 1922], [1737, 1889, 1771, 1922], [1775, 1889, 1818, 1914], [1829, 1889, 1902, 1914], [1915, 1889, 2082, 1922], [2094, 1898, 2129, 1914], [2139, 1890, 2254, 1922], [1323, 1931, 1367, 1956], [1375, 1930, 1504, 1956], [1516, 1932, 1541, 1956], [1550, 1931, 1667, 1957], [1676, 1932, 1823, 1964], [1833, 1932, 1997, 1964], [2008, 1931, 2160, 1963], [2172, 1931, 2253, 1957]], "scoresstructures": {"pages": {"version": "1.0", "structure_value": [[0, 590], [590, 1198], [1198, 2006], [2006, 2794], [2794, 3388], [3388, 4119], [4119, 4999], [4999, 5707], [5707, 6310]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 6], [6, 7], [7, 14], [14, 15], [15, 17], [17, 23], [23, 25], [25, 27], [27, 40], [40, 42], [42, 48], [48, 49], [49, 54], [54, 60], [60, 64], [64, 69], [69, 76], [76, 83], [83, 91], [91, 100], [100, 107], [107, 113], [113, 120], [120, 127], [127, 133], [133, 140], [140, 145], [145, 152], [152, 161], [161, 163], [163, 173], [173, 182], [182, 191], [191, 199], [199, 208], [208, 219], [219, 230], [230, 239], [239, 248], [248, 255], [255, 266], [266, 274], [274, 283], [283, 288], [288, 296], [296, 303], [303, 310], [310, 321], [321, 332], [332, 340], [340, 348], [348, 358], [358, 365], [365, 376], [376, 387], [387, 397], [397, 407], [407, 416], [416, 426], [426, 435], [435, 442], [442, 449], [449, 459], [459, 467], [467, 477], [477, 480], [480, 488], [488, 497], [497, 504], [504, 512], [512, 521], [521, 528], [528, 539], [539, 548], [548, 554], [554, 563], [563, 570], [570, 577], [577, 585], [585, 590], [590, 598], [598, 599], [599, 602], [602, 603], [603, 606], [606, 608], [608, 610], [610, 611], [611, 612], [612, 614], [614, 615], [615, 617], [617, 618], [618, 620], [620, 622], [622, 625], [625, 626], [626, 628], [628, 629], [629, 630], [630, 632], [632, 634], [634, 635], [635, 636], [636, 658], [658, 678], [678, 685], [685, 693], [693, 704], [704, 713], [713, 723], [723, 729], [729, 740], [740, 749], [749, 757], [757, 766], [766, 775], [775, 784], [784, 792], [792, 793], [793, 799], [799, 807], [807, 815], [815, 824], [824, 831], [831, 840], [840, 849], [849, 857], [857, 867], [867, 875], [875, 879], [879, 886], [886, 891], [891, 899], [899, 908], [908, 916], [916, 923], [923, 929], [929, 938], [938, 947], [947, 949], [949, 956], [956, 962], [962, 970], [970, 976], [976, 986], [986, 991], [991, 993], [993, 994], [994, 1000], [1000, 1005], [1005, 1011], [1011, 1016], [1016, 1023], [1023, 1032], [1032, 1044], [1044, 1055], [1055, 1065], [1065, 1074], [1074, 1084], [1084, 1093], [1093, 1104], [1104, 1114], [1114, 1123], [1123, 1130], [1130, 1137], [1137, 1147], [1147, 1157], [1157, 1158], [1158, 1168], [1168, 1176], [1176, 1185], [1185, 1196], [1196, 1198], [1198, 1206], [1206, 1213], [1213, 1221], [1221, 1229], [1229, 1238], [1238, 1247], [1247, 1257], [1257, 1265], [1265, 1276], [1276, 1287], [1287, 1295], [1295, 1303], [1303, 1311], [1311, 1319], [1319, 1329], [1329, 1337], [1337, 1344], [1344, 1353], [1353, 1363], [1363, 1372], [1372, 1383], [1383, 1394], [1394, 1405], [1405, 1413], [1413, 1422], [1422, 1431], [1431, 1441], [1441, 1454], [1454, 1462], [1462, 1472], [1472, 1481], [1481, 1491], [1491, 1500], [1500, 1509], [1509, 1517], [1517, 1523], [1523, 1532], [1532, 1540], [1540, 1549], [1549, 1557], [1557, 1569], [1569, 1578], [1578, 1588], [1588, 1600], [1600, 1610], [1610, 1621], [1621, 1632], [1632, 1633], [1633, 1639], [1639, 1647], [1647, 1654], [1654, 1666], [1666, 1676], [1676, 1677], [1677, 1680], [1680, 1682], [1682, 1684], [1684, 1686], [1686, 1688], [1688, 1690], [1690, 1692], [1692, 1701], [1701, 1709], [1709, 1718], [1718, 1726], [1726, 1734], [1734, 1743], [1743, 1755], [1755, 1758], [1758, 1760], [1760, 1761], [1761, 1769], [1769, 1773], [1773, 1776], [1776, 1777], [1777, 1786], [1786, 1793], [1793, 1803], [1803, 1812], [1812, 1820], [1820, 1828], [1828, 1838], [1838, 1847], [1847, 1857], [1857, 1859], [1859, 1860], [1860, 1869], [1869, 1879], [1879, 1889], [1889, 1900], [1900, 1910], [1910, 1918], [1918, 1927], [1927, 1936], [1936, 1947], [1947, 1957], [1957, 1967], [1967, 1977], [1977, 1986], [1986, 1997], [1997, 2006], [2006, 2014], [2014, 2021], [2021, 2030], [2030, 2040], [2040, 2049], [2049, 2061], [2061, 2071], [2071, 2081], [2081, 2088], [2088, 2099], [2099, 2108], [2108, 2119], [2119, 2125], [2125, 2129], [2129, 2138], [2138, 2145], [2145, 2155], [2155, 2164], [2164, 2175], [2175, 2180], [2180, 2189], [2189, 2195], [2195, 2203], [2203, 2214], [2214, 2224], [2224, 2226], [2226, 2237], [2237, 2244], [2244, 2252], [2252, 2257], [2257, 2266], [2266, 2268], [2268, 2275], [2275, 2282], [2282, 2288], [2288, 2296], [2296, 2303], [2303, 2312], [2312, 2320], [2320, 2328], [2328, 2334], [2334, 2341], [2341, 2351], [2351, 2361], [2361, 2369], [2369, 2376], [2376, 2385], [2385, 2395], [2395, 2409], [2409, 2419], [2419, 2428], [2428, 2439], [2439, 2449], [2449, 2457], [2457, 2465], [2465, 2472], [2472, 2480], [2480, 2488], [2488, 2500], [2500, 2508], [2508, 2517], [2517, 2518], [2518, 2523], [2523, 2526], [2526, 2536], [2536, 2546], [2546, 2556], [2556, 2568], [2568, 2577], [2577, 2587], [2587, 2600], [2600, 2612], [2612, 2620], [2620, 2628], [2628, 2629], [2629, 2637], [2637, 2647], [2647, 2658], [2658, 2661], [2661, 2669], [2669, 2670], [2670, 2671], [2671, 2673], [2673, 2682], [2682, 2691], [2691, 2703], [2703, 2714], [2714, 2716], [2716, 2728], [2728, 2733], [2733, 2742], [2742, 2752], [2752, 2761], [2761, 2768], [2768, 2777], [2777, 2785], [2785, 2794], [2794, 2802], [2802, 2804], [2804, 2809], [2809, 2810], [2810, 2811], [2811, 2814], [2814, 2815], [2815, 2816], [2816, 2819], [2819, 2821], [2821, 2823], [2823, 2828], [2828, 2829], [2829, 2830], [2830, 2831], [2831, 2833], [2833, 2835], [2835, 2838], [2838, 2843], [2843, 2847], [2847, 2850], [2850, 2852], [2852, 2873], [2873, 2891], [2891, 2899], [2899, 2909], [2909, 2917], [2917, 2928], [2928, 2935], [2935, 2945], [2945, 2953], [2953, 2963], [2963, 2972], [2972, 2983], [2983, 2992], [2992, 2998], [2998, 3005], [3005, 3014], [3014, 3023], [3023, 3025], [3025, 3036], [3036, 3047], [3047, 3058], [3058, 3067], [3067, 3074], [3074, 3077], [3077, 3082], [3082, 3084], [3084, 3095], [3095, 3106], [3106, 3117], [3117, 3126], [3126, 3136], [3136, 3146], [3146, 3155], [3155, 3163], [3163, 3172], [3172, 3179], [3179, 3180], [3180, 3190], [3190, 3193], [3193, 3194], [3194, 3206], [3206, 3217], [3217, 3227], [3227, 3235], [3235, 3246], [3246, 3257], [3257, 3266], [3266, 3274], [3274, 3281], [3281, 3289], [3289, 3303], [3303, 3308], [3308, 3309], [3309, 3314], [3314, 3322], [3322, 3325], [3325, 3334], [3334, 3344], [3344, 3351], [3351, 3358], [3358, 3368], [3368, 3377], [3377, 3388], [3388, 3396], [3396, 3406], [3406, 3415], [3415, 3422], [3422, 3431], [3431, 3440], [3440, 3451], [3451, 3461], [3461, 3464], [3464, 3470], [3470, 3480], [3480, 3491], [3491, 3499], [3499, 3508], [3508, 3517], [3517, 3526], [3526, 3536], [3536, 3545], [3545, 3553], [3553, 3563], [3563, 3571], [3571, 3582], [3582, 3592], [3592, 3599], [3599, 3607], [3607, 3617], [3617, 3624], [3624, 3635], [3635, 3644], [3644, 3651], [3651, 3657], [3657, 3667], [3667, 3676], [3676, 3687], [3687, 3696], [3696, 3706], [3706, 3714], [3714, 3725], [3725, 3733], [3733, 3740], [3740, 3751], [3751, 3754], [3754, 3759], [3759, 3770], [3770, 3776], [3776, 3785], [3785, 3795], [3795, 3803], [3803, 3813], [3813, 3814], [3814, 3826], [3826, 3836], [3836, 3845], [3845, 3854], [3854, 3858], [3858, 3864], [3864, 3873], [3873, 3874], [3874, 3875], [3875, 3881], [3881, 3890], [3890, 3901], [3901, 3909], [3909, 3918], [3918, 3926], [3926, 3933], [3933, 3942], [3942, 3953], [3953, 3960], [3960, 3970], [3970, 3978], [3978, 3988], [3988, 3994], [3994, 4002], [4002, 4010], [4010, 4018], [4018, 4028], [4028, 4041], [4041, 4047], [4047, 4052], [4052, 4059], [4059, 4066], [4066, 4074], [4074, 4084], [4084, 4092], [4092, 4101], [4101, 4109], [4109, 4119], [4119, 4127], [4127, 4136], [4136, 4145], [4145, 4153], [4153, 4155], [4155, 4164], [4164, 4173], [4173, 4180], [4180, 4188], [4188, 4198], [4198, 4201], [4201, 4205], [4205, 4214], [4214, 4221], [4221, 4230], [4230, 4240], [4240, 4251], [4251, 4259], [4259, 4268], [4268, 4279], [4279, 4290], [4290, 4297], [4297, 4308], [4308, 4310], [4310, 4317], [4317, 4327], [4327, 4337], [4337, 4344], [4344, 4356], [4356, 4361], [4361, 4366], [4366, 4373], [4373, 4381], [4381, 4393], [4393, 4402], [4402, 4412], [4412, 4420], [4420, 4430], [4430, 4438], [4438, 4447], [4447, 4456], [4456, 4464], [4464, 4471], [4471, 4482], [4482, 4490], [4490, 4497], [4497, 4509], [4509, 4518], [4518, 4528], [4528, 4538], [4538, 4549], [4549, 4559], [4559, 4569], [4569, 4579], [4579, 4589], [4589, 4597], [4597, 4606], [4606, 4612], [4612, 4621], [4621, 4627], [4627, 4638], [4638, 4646], [4646, 4656], [4656, 4666], [4666, 4676], [4676, 4686], [4686, 4696], [4696, 4705], [4705, 4715], [4715, 4726], [4726, 4737], [4737, 4742], [4742, 4746], [4746, 4754], [4754, 4764], [4764, 4772], [4772, 4782], [4782, 4790], [4790, 4799], [4799, 4809], [4809, 4817], [4817, 4825], [4825, 4835], [4835, 4845], [4845, 4857], [4857, 4867], [4867, 4875], [4875, 4885], [4885, 4894], [4894, 4902], [4902, 4911], [4911, 4921], [4921, 4930], [4930, 4939], [4939, 4948], [4948, 4957], [4957, 4967], [4967, 4976], [4976, 4986], [4986, 4998], [4998, 4999], [4999, 5007], [5007, 5014], [5014, 5019], [5019, 5024], [5024, 5029], [5029, 5035], [5035, 5041], [5041, 5045], [5045, 5051], [5051, 5071], [5071, 5092], [5092, 5109], [5109, 5116], [5116, 5126], [5126, 5132], [5132, 5138], [5138, 5146], [5146, 5156], [5156, 5179], [5179, 5201], [5201, 5220], [5220, 5227], [5227, 5235], [5235, 5243], [5243, 5251], [5251, 5260], [5260, 5271], [5271, 5280], [5280, 5288], [5288, 5297], [5297, 5307], [5307, 5316], [5316, 5326], [5326, 5335], [5335, 5343], [5343, 5348], [5348, 5350], [5350, 5359], [5359, 5368], [5368, 5377], [5377, 5386], [5386, 5395], [5395, 5401], [5401, 5411], [5411, 5419], [5419, 5428], [5428, 5436], [5436, 5444], [5444, 5451], [5451, 5460], [5460, 5469], [5469, 5478], [5478, 5487], [5487, 5496], [5496, 5498], [5498, 5509], [5509, 5518], [5518, 5527], [5527, 5536], [5536, 5542], [5542, 5550], [5550, 5560], [5560, 5568], [5568, 5578], [5578, 5588], [5588, 5595], [5595, 5597], [5597, 5603], [5603, 5610], [5610, 5620], [5620, 5627], [5627, 5634], [5634, 5642], [5642, 5651], [5651, 5660], [5660, 5669], [5669, 5676], [5676, 5682], [5682, 5691], [5691, 5699], [5699, 5707], [5707, 5715], [5715, 5716], [5716, 5724], [5724, 5732], [5732, 5740], [5740, 5748], [5748, 5755], [5755, 5756], [5756, 5766], [5766, 5774], [5774, 5777], [5777, 5778], [5778, 5786], [5786, 5795], [5795, 5802], [5802, 5812], [5812, 5819], [5819, 5827], [5827, 5829], [5829, 5836], [5836, 5844], [5844, 5852], [5852, 5858], [5858, 5867], [5867, 5876], [5876, 5883], [5883, 5885], [5885, 5893], [5893, 5902], [5902, 5908], [5908, 5910], [5910, 5920], [5920, 5929], [5929, 5930], [5930, 5939], [5939, 5945], [5945, 5949], [5949, 5957], [5957, 5963], [5963, 5967], [5967, 5975], [5975, 5981], [5981, 5985], [5985, 5993], [5993, 6000], [6000, 6007], [6007, 6013], [6013, 6022], [6022, 6032], [6032, 6044], [6044, 6052], [6052, 6060], [6060, 6069], [6069, 6077], [6077, 6083], [6083, 6084], [6084, 6094], [6094, 6102], [6102, 6110], [6110, 6115], [6115, 6126], [6126, 6134], [6134, 6143], [6143, 6145], [6145, 6155], [6155, 6161], [6161, 6164], [6164, 6175], [6175, 6183], [6183, 6185], [6185, 6192], [6192, 6201], [6201, 6210], [6210, 6214], [6214, 6224], [6224, 6232], [6232, 6242], [6242, 6249], [6249, 6252], [6252, 6261], [6261, 6268], [6268, 6275], [6275, 6285], [6285, 6293], [6293, 6302], [6302, 6310]], "positions": [[81, 901, 142, 2110], [83, 2138, 134, 2329], [371, 379, 2114, 432], [1098, 454, 1388, 507], [232, 667, 507, 705], [231, 726, 884, 763], [231, 805, 492, 843], [1791, 668, 2223, 697], [231, 865, 1784, 902], [232, 944, 481, 982], [231, 1004, 884, 1041], [625, 1168, 810, 1203], [315, 1245, 1121, 1282], [317, 1295, 1122, 1332], [315, 1345, 1122, 1382], [314, 1395, 1120, 1432], [315, 1444, 1120, 1481], [316, 1494, 1121, 1531], [315, 1544, 1122, 1581], [315, 1594, 1123, 1631], [316, 1644, 1120, 1681], [316, 1693, 1120, 1730], [315, 1743, 1121, 1780], [315, 1793, 1121, 1830], [315, 1843, 1122, 1880], [315, 1893, 1121, 1930], [314, 1943, 1120, 1980], [315, 1992, 1120, 2029], [315, 2042, 1119, 2070], [233, 2187, 550, 2222], [231, 2274, 1205, 2311], [231, 2324, 1205, 2361], [231, 2374, 1206, 2411], [231, 2424, 1205, 2461], [231, 2473, 1206, 2510], [232, 2523, 1203, 2560], [231, 2573, 1203, 2610], [231, 2623, 1203, 2660], [231, 2673, 1205, 2710], [230, 2722, 1204, 2759], [232, 2772, 1204, 2801], [231, 2842, 1213, 2883], [230, 2892, 1213, 2925], [230, 2932, 638, 2966], [1282, 1174, 2257, 1211], [1280, 1224, 2255, 1261], [1282, 1274, 2253, 1311], [1280, 1324, 2254, 1361], [1281, 1373, 2254, 1410], [1281, 1423, 2254, 1460], [1281, 1473, 2256, 1510], [1281, 1523, 2255, 1560], [1281, 1573, 2255, 1610], [1281, 1623, 2253, 1660], [1281, 1672, 2254, 1709], [1281, 1722, 2252, 1759], [1281, 1772, 2254, 1809], [1281, 1822, 2255, 1859], [1281, 1872, 2255, 1909], [1281, 1921, 2256, 1958], [1282, 1971, 2253, 2008], [1281, 2021, 2254, 2058], [1280, 2071, 2254, 2108], [1282, 2121, 2255, 2158], [1281, 2170, 2255, 2207], [1282, 2220, 1795, 2257], [1281, 2295, 2254, 2332], [1274, 2345, 2255, 2382], [1281, 2395, 2253, 2432], [1281, 2444, 2254, 2481], [1281, 2494, 2254, 2531], [1280, 2544, 2255, 2581], [1281, 2594, 2252, 2631], [1281, 2644, 2254, 2681], [1281, 2694, 2253, 2731], [1282, 2743, 2255, 2772], [1281, 2793, 2255, 2830], [1282, 2843, 2254, 2880], [1281, 2893, 2253, 2930], [1281, 2943, 1762, 2978], [603, 199, 1883, 233], [1166, 339, 1236, 368], [450, 379, 1217, 446], [691, 416, 716, 440], [390, 423, 687, 475], [426, 467, 1105, 510], [743, 499, 1138, 538], [788, 552, 839, 576], [499, 637, 567, 661], [550, 682, 1141, 709], [1116, 732, 1210, 754], [1782, 354, 2025, 409], [1817, 407, 1924, 432], [1416, 443, 1821, 478], [1626, 473, 1824, 511], [1323, 500, 1837, 540], [1999, 536, 2049, 561], [1902, 573, 2075, 602], [1937, 609, 2036, 634], [1687, 560, 1805, 651], [1651, 670, 1848, 699], [1643, 708, 1842, 732], [525, 864, 576, 909], [1851, 864, 1900, 909], [232, 1024, 2255, 1058], [232, 1070, 2196, 1104], [233, 1201, 1204, 1238], [232, 1250, 1203, 1287], [233, 1300, 1203, 1337], [232, 1350, 1205, 1387], [232, 1399, 1205, 1437], [232, 1450, 1205, 1487], [232, 1499, 1205, 1536], [232, 1549, 1205, 1586], [232, 1599, 1206, 1636], [233, 1649, 1205, 1686], [232, 1699, 1205, 1736], [231, 1749, 1205, 1786], [232, 1798, 1204, 1835], [233, 1848, 337, 1883], [232, 1922, 1204, 1960], [232, 1973, 1206, 2010], [232, 2022, 1204, 2059], [233, 2072, 1205, 2109], [232, 2122, 1205, 2159], [232, 2172, 1204, 2209], [232, 2222, 1205, 2259], [233, 2272, 1205, 2309], [233, 2321, 1205, 2358], [233, 2371, 1204, 2408], [232, 2421, 612, 2458], [274, 2552, 1204, 2589], [311, 2602, 1205, 2639], [315, 2652, 1205, 2689], [316, 2702, 1204, 2739], [315, 2752, 1203, 2789], [315, 2801, 1204, 2838], [315, 2851, 1204, 2888], [316, 2901, 1204, 2938], [315, 2951, 1205, 2988], [1365, 1200, 1762, 1238], [1324, 1280, 2255, 1317], [1365, 1329, 2255, 1367], [1365, 1378, 2254, 1416], [1364, 1429, 2254, 1466], [1365, 1479, 2254, 1516], [1365, 1529, 1868, 1566], [1528, 1608, 1707, 1636], [1628, 1651, 1635, 1671], [1324, 1608, 2254, 1645], [1365, 1658, 2256, 1695], [1364, 1708, 2245, 1745], [1281, 1814, 2233, 1858], [1281, 1900, 2253, 1937], [1281, 1950, 2255, 1987], [1281, 2000, 2254, 2037], [1280, 2050, 2255, 2087], [1281, 2100, 2254, 2137], [1281, 2149, 2255, 2186], [1281, 2199, 2255, 2236], [1281, 2249, 2255, 2286], [1281, 2299, 2253, 2328], [1281, 2349, 2254, 2386], [1281, 2398, 2255, 2435], [1281, 2448, 2253, 2485], [1281, 2498, 2255, 2535], [1281, 2548, 2255, 2585], [1281, 2598, 2253, 2635], [1281, 2648, 1384, 2683], [1281, 2722, 2253, 2759], [1281, 2772, 2256, 2809], [1282, 2822, 2254, 2859], [1281, 2872, 2254, 2909], [1337, 2947, 2229, 2986], [603, 199, 1883, 233], [231, 291, 1205, 329], [231, 341, 1204, 379], [231, 392, 1204, 429], [231, 441, 1205, 479], [231, 492, 1204, 529], [231, 541, 1204, 578], [231, 591, 1204, 628], [230, 641, 1206, 678], [231, 691, 1204, 728], [231, 741, 1205, 778], [231, 791, 1188, 828], [233, 864, 1204, 902], [231, 915, 1204, 952], [230, 965, 1204, 1002], [231, 1015, 1205, 1050], [231, 1065, 1201, 1102], [232, 1114, 1204, 1151], [231, 1164, 1204, 1201], [230, 1214, 1204, 1251], [231, 1264, 1205, 1301], [231, 1314, 1204, 1351], [230, 1363, 1204, 1400], [231, 1413, 1204, 1450], [231, 1463, 1205, 1500], [231, 1513, 1205, 1550], [231, 1563, 1205, 1600], [231, 1612, 1204, 1649], [231, 1662, 1204, 1699], [231, 1712, 1205, 1749], [231, 1762, 1204, 1799], [231, 1811, 1203, 1849], [232, 1862, 1205, 1899], [231, 1911, 1205, 1948], [231, 1961, 1202, 1998], [233, 2036, 1205, 2073], [232, 2086, 1205, 2123], [232, 2136, 1203, 2173], [231, 2185, 1204, 2222], [232, 2235, 1204, 2272], [231, 2285, 1205, 2322], [231, 2335, 1204, 2372], [231, 2385, 1203, 2422], [231, 2434, 1204, 2471], [232, 2484, 1205, 2521], [231, 2534, 1205, 2571], [231, 2584, 1204, 2621], [231, 2634, 321, 2669], [232, 2708, 1205, 2745], [225, 2755, 1205, 2796], [231, 2807, 1204, 2845], [231, 2857, 1205, 2895], [232, 2905, 1204, 2946], [1704, 297, 1806, 363], [1656, 427, 1851, 450], [1663, 551, 1857, 570], [1648, 579, 1877, 599], [1622, 612, 1902, 629], [2040, 855, 2198, 876], [1327, 859, 1493, 882], [1698, 858, 1840, 880], [1282, 949, 2254, 983], [1281, 995, 2255, 1029], [1282, 1041, 2255, 1075], [1282, 1086, 2254, 1120], [1281, 1132, 2091, 1166], [1282, 1260, 2255, 1297], [1281, 1309, 2255, 1347], [1281, 1359, 1517, 1396], [1326, 1453, 1482, 1483], [1411, 1488, 1483, 1516], [1522, 1442, 2207, 1500], [1496, 1496, 2117, 1540], [1764, 1529, 2170, 1555], [2209, 1564, 2254, 1599], [1282, 1638, 2255, 1675], [1282, 1688, 2254, 1725], [1282, 1735, 2254, 1776], [1282, 1788, 2255, 1825], [1281, 1838, 2254, 1875], [1282, 1887, 2255, 1924], [1282, 1937, 2255, 1974], [1282, 1987, 2135, 2024], [1283, 2070, 2252, 2128], [1529, 2139, 1739, 2170], [2209, 2179, 2254, 2214], [1282, 2229, 2254, 2266], [1282, 2278, 2255, 2315], [1282, 2328, 2255, 2365], [1282, 2378, 2255, 2415], [1283, 2428, 2255, 2465], [1283, 2475, 2111, 2518], [1282, 2552, 2255, 2589], [1282, 2602, 2255, 2639], [1283, 2652, 2254, 2688], [1281, 2702, 2255, 2739], [1282, 2752, 2255, 2789], [1282, 2801, 2255, 2838], [1282, 2851, 2255, 2888], [1282, 2901, 2254, 2938], [1282, 2951, 2254, 2988], [603, 199, 1883, 233], [232, 292, 1206, 329], [232, 342, 1204, 379], [232, 392, 1204, 429], [232, 442, 1204, 479], [232, 492, 1204, 526], [232, 541, 1205, 578], [231, 591, 1203, 628], [231, 641, 1203, 678], [230, 691, 1205, 728], [232, 741, 1205, 778], [233, 784, 1203, 828], [231, 840, 906, 877], [231, 953, 733, 988], [231, 1039, 1205, 1077], [230, 1090, 1204, 1127], [228, 1140, 1204, 1177], [230, 1190, 1205, 1227], [231, 1239, 1205, 1276], [230, 1289, 729, 1326], [231, 1364, 1203, 1401], [231, 1414, 1205, 1451], [231, 1464, 1204, 1501], [231, 1513, 1205, 1550], [231, 1563, 1205, 1600], [232, 1613, 439, 1648], [267, 1715, 1204, 1752], [315, 1765, 1205, 1802], [314, 1815, 1205, 1852], [315, 1864, 1204, 1902], [315, 1914, 1204, 1951], [315, 1964, 538, 2001], [263, 2044, 1204, 2081], [315, 2094, 1204, 2131], [314, 2144, 1205, 2181], [315, 2193, 1206, 2231], [315, 2244, 1204, 2281], [314, 2293, 1205, 2330], [315, 2343, 1204, 2380], [315, 2387, 1205, 2431], [315, 2443, 825, 2480], [231, 2544, 1096, 2582], [233, 2623, 1205, 2660], [233, 2672, 1205, 2709], [231, 2721, 1205, 2759], [232, 2772, 1205, 2809], [232, 2822, 1204, 2859], [232, 2872, 1204, 2909], [284, 2946, 1202, 2988], [1282, 292, 2255, 329], [1283, 342, 2254, 379], [1282, 392, 2255, 429], [1282, 442, 2254, 479], [1282, 492, 2254, 529], [1282, 541, 2255, 578], [1282, 591, 2255, 628], [1282, 641, 2255, 678], [1282, 691, 2255, 728], [1282, 741, 2256, 778], [1282, 791, 2255, 828], [1282, 840, 2254, 877], [1282, 894, 1368, 918], [1282, 994, 2022, 1032], [1354, 1044, 1769, 1080], [1281, 1122, 2255, 1159], [1281, 1172, 2254, 1209], [1281, 1222, 2255, 1259], [1281, 1271, 2255, 1309], [1281, 1322, 2254, 1359], [1280, 1371, 2255, 1412], [1282, 1421, 2252, 1458], [1281, 1471, 2255, 1508], [1281, 1521, 2254, 1558], [1282, 1571, 2254, 1608], [1280, 1621, 1433, 1658], [1281, 1695, 2255, 1732], [1282, 1742, 2255, 1783], [1281, 1794, 2255, 1832], [1281, 1844, 1626, 1881], [1400, 1932, 2254, 1990], [1764, 2002, 1777, 2027], [1700, 2002, 1709, 2021], [1633, 2047, 2254, 2094], [1282, 2148, 2255, 2186], [1283, 2198, 2253, 2236], [1282, 2242, 2253, 2286], [1282, 2298, 2253, 2335], [1282, 2348, 1627, 2385], [1317, 2457, 2254, 2494], [1365, 2506, 1959, 2544], [1313, 2590, 2255, 2631], [1365, 2642, 2255, 2679], [1365, 2685, 2252, 2730], [1282, 2801, 2254, 2838], [1282, 2851, 2253, 2888], [1283, 2894, 2252, 2938], [1282, 2951, 2254, 2988], [603, 199, 1883, 233], [662, 298, 1050, 326], [588, 459, 1165, 497], [489, 519, 527, 540], [497, 561, 523, 590], [461, 642, 1242, 694], [458, 742, 533, 770], [449, 786, 537, 815], [589, 1039, 1121, 1076], [589, 1084, 974, 1124], [1575, 301, 1926, 329], [1502, 366, 1926, 407], [1599, 421, 1624, 450], [1557, 462, 1637, 491], [1602, 507, 1625, 536], [1382, 547, 1623, 578], [1286, 571, 1622, 618], [1274, 597, 1785, 702], [1277, 684, 1950, 727], [0, 0, 2550, 3300], [1583, 1039, 1941, 1075], [1581, 1084, 1891, 1125], [232, 1240, 2255, 1274], [232, 1286, 2255, 1320], [233, 1332, 1046, 1366], [233, 1462, 1204, 1499], [232, 1511, 1204, 1549], [232, 1562, 1203, 1599], [232, 1612, 1204, 1649], [232, 1662, 1205, 1699], [232, 1711, 1205, 1748], [231, 1761, 1205, 1798], [232, 1811, 1208, 1848], [232, 1858, 1205, 1899], [232, 1911, 1203, 1948], [231, 1960, 1203, 1997], [232, 2010, 1206, 2047], [231, 2060, 1204, 2097], [232, 2110, 1205, 2147], [232, 2160, 438, 2188], [232, 2234, 1205, 2271], [231, 2284, 1205, 2321], [232, 2334, 1204, 2371], [232, 2384, 1204, 2421], [233, 2422, 924, 2479], [344, 2532, 605, 2577], [373, 2538, 851, 2605], [870, 2521, 1204, 2596], [233, 2652, 1205, 2689], [231, 2702, 1205, 2739], [225, 2752, 1205, 2789], [233, 2801, 1205, 2838], [232, 2851, 1205, 2888], [232, 2900, 1204, 2938], [232, 2950, 1204, 2988], [1278, 1462, 2255, 1499], [1282, 1511, 2255, 1549], [1282, 1555, 2255, 1600], [1282, 1612, 1358, 1640], [1295, 1679, 2239, 1764], [1618, 1764, 2037, 1795], [2209, 1804, 2254, 1839], [1281, 1854, 2254, 1891], [1281, 1904, 2255, 1941], [1281, 1946, 2252, 1991], [1281, 2003, 2253, 2040], [1282, 2053, 2254, 2090], [1281, 2103, 2255, 2140], [1282, 2146, 2255, 2190], [1281, 2203, 2253, 2240], [1281, 2252, 2255, 2289], [1282, 2302, 2255, 2339], [1282, 2351, 2254, 2389], [1281, 2401, 2211, 2439], [2010, 2482, 2028, 2495], [1503, 2482, 1953, 2530], [1381, 2503, 2254, 2575], [1744, 2576, 2063, 2608], [1281, 2651, 2254, 2689], [1281, 2702, 2254, 2739], [1281, 2752, 2254, 2789], [1282, 2801, 2252, 2838], [1282, 2851, 2254, 2888], [1282, 2901, 2255, 2938], [1283, 2951, 2254, 2988], [603, 199, 1883, 233], [232, 292, 1203, 329], [232, 342, 1205, 379], [232, 392, 1205, 429], [233, 442, 1205, 479], [232, 492, 1204, 529], [232, 541, 1204, 578], [232, 591, 1205, 632], [233, 641, 605, 681], [231, 745, 980, 783], [231, 824, 1204, 861], [231, 873, 1205, 910], [231, 923, 1202, 963], [232, 973, 1204, 1010], [232, 1023, 1205, 1060], [225, 1073, 1204, 1110], [232, 1122, 1205, 1159], [232, 1172, 1204, 1209], [232, 1222, 1205, 1259], [232, 1272, 1204, 1309], [232, 1322, 1204, 1359], [231, 1372, 1204, 1409], [232, 1421, 1205, 1458], [232, 1471, 1205, 1508], [232, 1521, 1205, 1558], [233, 1571, 1205, 1608], [232, 1621, 1204, 1658], [232, 1670, 1205, 1707], [232, 1720, 1205, 1757], [232, 1770, 1204, 1807], [232, 1820, 956, 1857], [232, 1895, 1204, 1932], [232, 1944, 1204, 1981], [232, 1994, 1205, 2031], [232, 2044, 1205, 2081], [232, 2094, 1205, 2131], [233, 2144, 1205, 2181], [233, 2193, 1204, 2230], [232, 2243, 1204, 2280], [232, 2293, 1205, 2330], [232, 2343, 1205, 2380], [231, 2393, 745, 2430], [232, 2506, 1068, 2550], [232, 2592, 1204, 2629], [231, 2635, 1204, 2679], [232, 2692, 1205, 2729], [232, 2742, 1202, 2779], [232, 2792, 1204, 2829], [232, 2841, 1205, 2878], [284, 2916, 1078, 2956], [1282, 1021, 2254, 1055], [1282, 1066, 2255, 1100], [1282, 1112, 2255, 1146], [1282, 1158, 2254, 1192], [1281, 1204, 1735, 1237], [1283, 1329, 2255, 1366], [1283, 1378, 1938, 1416], [1890, 1454, 1939, 1485], [1862, 1495, 1942, 1542], [1281, 1581, 2255, 1618], [1281, 1631, 2254, 1668], [1281, 1678, 2254, 1719], [1281, 1730, 2256, 1767], [1281, 1780, 2254, 1817], [1281, 1830, 2256, 1867], [1281, 1880, 2255, 1917], [1281, 1930, 2254, 1967], [1281, 1980, 2255, 2017], [1282, 2029, 2255, 2066], [1281, 2079, 2254, 2116], [1281, 2129, 2255, 2166], [1281, 2179, 2255, 2216], [1282, 2229, 2255, 2266], [1281, 2278, 2254, 2315], [1280, 2328, 2254, 2365], [1280, 2378, 2255, 2415], [1282, 2427, 2255, 2465], [1282, 2475, 2253, 2516], [1280, 2528, 1819, 2565], [1592, 1473, 2254, 1520], [1281, 2602, 2254, 2639], [1281, 2652, 2255, 2689], [1282, 2701, 2255, 2739], [1282, 2751, 2254, 2789], [1281, 2801, 2256, 2838], [1281, 2851, 2255, 2888], [1281, 2901, 2255, 2938], [1282, 2951, 2255, 2988], [603, 199, 1883, 233], [232, 292, 1205, 329], [232, 342, 1205, 379], [231, 392, 840, 429], [232, 505, 550, 549], [232, 592, 1205, 629], [231, 642, 1204, 679], [231, 691, 1206, 728], [232, 741, 1204, 778], [232, 791, 1203, 828], [232, 841, 700, 878], [231, 945, 979, 983], [231, 1023, 1205, 1060], [231, 1072, 1205, 1110], [232, 1123, 1205, 1160], [231, 1173, 1205, 1210], [231, 1223, 1204, 1260], [230, 1272, 1205, 1309], [231, 1322, 1204, 1359], [231, 1372, 1205, 1409], [231, 1422, 1204, 1459], [231, 1472, 1205, 1509], [232, 1521, 1205, 1558], [231, 1571, 478, 1599], [232, 1646, 1204, 1683], [231, 1696, 1204, 1733], [231, 1746, 1205, 1783], [231, 1795, 1205, 1832], [231, 1845, 1204, 1882], [231, 1895, 1203, 1932], [233, 1945, 1061, 1980], [231, 2020, 1206, 2057], [231, 2069, 1205, 2106], [231, 2119, 1205, 2156], [230, 2169, 1205, 2206], [232, 2219, 1205, 2256], [231, 2269, 1202, 2306], [232, 2318, 1205, 2355], [231, 2368, 1203, 2405], [230, 2418, 1206, 2455], [231, 2468, 1205, 2505], [232, 2518, 1205, 2555], [231, 2568, 952, 2605], [231, 2642, 1205, 2670], [230, 2692, 1205, 2729], [231, 2742, 1205, 2779], [231, 2792, 1206, 2829], [231, 2841, 1204, 2878], [231, 2891, 1205, 2928], [231, 2941, 1206, 2978], [1282, 292, 2254, 329], [1281, 342, 2255, 379], [1282, 392, 2254, 429], [1283, 442, 2255, 479], [1282, 492, 2254, 529], [1282, 541, 2255, 578], [1283, 591, 2254, 628], [1278, 641, 2091, 678], [1282, 716, 2255, 753], [1281, 766, 2255, 803], [1282, 815, 2254, 852], [1282, 865, 2256, 902], [1282, 915, 2254, 950], [1281, 965, 2253, 1002], [1282, 1015, 2254, 1052], [1281, 1065, 2255, 1102], [1283, 1114, 2258, 1143], [1282, 1164, 2254, 1201], [1282, 1214, 2255, 1251], [1281, 1264, 2255, 1301], [1282, 1314, 2256, 1351], [1282, 1363, 1761, 1392], [1282, 1467, 1828, 1497], [1282, 1546, 2255, 1583], [1282, 1596, 2255, 1633], [1282, 1638, 2252, 1682], [1282, 1695, 2255, 1732], [1282, 1745, 2255, 1782], [1281, 1795, 2254, 1832], [1282, 1845, 2254, 1882], [1282, 1895, 2256, 1932], [1282, 1944, 2255, 1981], [1282, 1994, 2254, 2031], [1282, 2044, 2254, 2081], [1282, 2094, 2255, 2128], [1282, 2143, 2254, 2181], [1281, 2193, 2255, 2230], [1283, 2242, 2255, 2280], [1282, 2292, 2256, 2330], [1281, 2343, 2255, 2380], [1281, 2393, 1968, 2430], [1281, 2467, 2255, 2495], [1282, 2517, 2255, 2552], [1281, 2567, 2254, 2596], [1281, 2617, 2253, 2654], [1282, 2667, 2255, 2696], [1281, 2716, 2252, 2753], [1281, 2766, 2255, 2803], [1281, 2816, 2255, 2853], [1281, 2866, 2254, 2900], [1333, 2937, 1971, 2977], [603, 199, 1883, 233], [0, 0, 2550, 3300], [631, 327, 1852, 361], [634, 368, 1852, 395], [631, 410, 1852, 437], [633, 453, 1853, 484], [633, 495, 1853, 529], [633, 537, 1851, 563], [633, 578, 1853, 610], [235, 663, 2253, 697], [232, 708, 2255, 742], [232, 754, 2255, 788], [232, 800, 999, 834], [0, 0, 2550, 3300], [546, 933, 1852, 958], [546, 974, 1853, 1000], [545, 1015, 1853, 1046], [547, 1056, 1889, 1089], [235, 1141, 2255, 1175], [232, 1187, 2255, 1221], [232, 1233, 2242, 1267], [231, 1363, 911, 1400], [231, 1438, 1205, 1475], [232, 1488, 1204, 1517], [230, 1538, 1205, 1575], [231, 1587, 1205, 1624], [231, 1637, 1203, 1666], [232, 1687, 1205, 1724], [232, 1736, 1203, 1774], [231, 1787, 1204, 1824], [231, 1837, 1204, 1874], [231, 1886, 1204, 1923], [231, 1936, 1205, 1973], [231, 1986, 1205, 2023], [230, 2036, 1208, 2073], [231, 2086, 996, 2123], [231, 2199, 504, 2234], [231, 2285, 1203, 2322], [232, 2335, 1205, 2372], [231, 2385, 1205, 2422], [231, 2435, 1203, 2472], [231, 2485, 1205, 2522], [231, 2534, 1203, 2571], [230, 2584, 1208, 2621], [231, 2634, 1204, 2671], [230, 2684, 1204, 2721], [231, 2734, 1203, 2771], [231, 2783, 1203, 2820], [231, 2833, 1203, 2870], [231, 2883, 1205, 2920], [231, 2933, 1205, 2970], [1282, 1363, 2254, 1400], [1281, 1413, 2255, 1450], [1281, 1463, 2253, 1500], [1282, 1513, 1785, 1542], [1281, 1587, 2255, 1624], [1281, 1637, 2253, 1672], [1281, 1687, 2254, 1724], [1281, 1737, 2255, 1774], [1281, 1787, 2255, 1824], [1281, 1837, 2255, 1874], [1281, 1886, 2255, 1923], [1280, 1936, 2254, 1973], [1281, 1986, 2255, 2023], [1280, 2036, 2255, 2073], [1282, 2086, 2070, 2123], [1281, 2199, 1568, 2234], [1281, 2285, 2255, 2322], [1281, 2335, 2254, 2372], [1280, 2385, 2258, 2422], [1280, 2435, 2254, 2472], [1281, 2485, 2254, 2522], [1281, 2534, 2255, 2571], [1282, 2584, 2254, 2621], [1281, 2634, 2255, 2671], [1281, 2684, 2254, 2721], [1281, 2734, 2254, 2771], [1281, 2783, 2254, 2820], [1281, 2833, 2258, 2870], [1281, 2883, 2255, 2920], [1281, 2933, 2174, 2970], [603, 199, 1883, 233], [232, 286, 461, 321], [232, 361, 1202, 395], [273, 402, 1204, 436], [273, 444, 1204, 478], [274, 486, 1204, 519], [273, 527, 1205, 561], [274, 569, 1178, 601], [232, 653, 1204, 687], [273, 695, 1203, 728], [273, 737, 1201, 769], [276, 780, 414, 804], [231, 863, 1205, 896], [273, 903, 1203, 937], [271, 946, 1203, 978], [231, 1030, 1205, 1063], [274, 1072, 1204, 1105], [274, 1112, 1204, 1146], [273, 1154, 449, 1185], [231, 1239, 1203, 1272], [272, 1281, 1203, 1314], [273, 1321, 1205, 1355], [272, 1363, 1017, 1397], [231, 1447, 1203, 1481], [273, 1489, 1205, 1523], [274, 1531, 1206, 1564], [273, 1573, 447, 1603], [231, 1657, 1205, 1690], [272, 1698, 1204, 1732], [267, 1739, 1205, 1773], [272, 1782, 538, 1815], [231, 1866, 1203, 1899], [273, 1907, 1203, 1941], [273, 1949, 354, 1975], [230, 2034, 1205, 2067], [272, 2074, 1205, 2108], [273, 2117, 585, 2150], [231, 2200, 1205, 2234], [273, 2242, 1203, 2276], [273, 2284, 849, 2317], [231, 2369, 1204, 2402], [273, 2409, 1205, 2443], [269, 2451, 757, 2485], [231, 2536, 1204, 2566], [273, 2576, 1205, 2610], [272, 2618, 1205, 2652], [272, 2660, 1109, 2694], [231, 2744, 1204, 2778], [273, 2785, 1179, 2819], [230, 2871, 1202, 2904], [273, 2911, 1203, 2945], [274, 2953, 1202, 2987], [1280, 295, 2255, 328], [1324, 336, 2254, 370], [1323, 378, 2253, 411], [1323, 420, 1420, 446], [1281, 495, 2255, 528], [1323, 535, 2254, 569], [1323, 577, 2254, 611], [1322, 618, 1976, 652], [1281, 693, 2255, 727], [1323, 734, 2254, 768], [1324, 777, 2255, 810], [1324, 818, 1537, 850], [1282, 892, 2257, 926], [1323, 935, 2254, 968], [1323, 976, 1678, 1008], [1282, 1050, 2253, 1084], [1322, 1091, 2255, 1125], [1324, 1134, 1663, 1166], [1282, 1208, 2254, 1242], [1322, 1249, 2254, 1283], [1323, 1291, 2254, 1325], [1323, 1333, 1829, 1366], [1282, 1408, 2255, 1441], [1324, 1448, 2255, 1482], [1322, 1490, 2256, 1524], [1324, 1531, 2254, 1565], [1322, 1574, 1747, 1607], [1281, 1648, 2255, 1682], [1322, 1689, 2254, 1723], [1323, 1731, 2253, 1765], [1281, 1806, 2254, 1839], [1322, 1847, 2255, 1881], [1323, 1888, 2254, 1922], [1323, 1930, 2253, 1964]]}}}}]}
{"name": "1411.0589v3", "contents": [{"tool_name": "djvu", "text": "Modular proximal optimization for multidimensional total-variation regularization \u0301 Alvaro Barbero alvaro.barbero@inv.uam.es Instituto de Ingenier\u0301\u0131a del Conocimiento and Universidad Aut \u0301onoma de Madrid Francisco Tom \u0301as y Valiente 11, Madrid, Spain Suvrit Sra\u2217 suvrit@mit.edu Laboratory for Information and Decision Systems Massachusetts Institute of Technology (MIT), Cambridge, MA Abstract We study TV regularization, a widely used technique for eliciting structured sparsity. In particular, we propose efficient algorithms for computing prox-operators for `p -norm TV. The most important among these is `1 -norm TV, for whose prox-operator we present a new geometric analysis which unveils a hitherto unknown connection to taut-string methods. This connection turns out to be remarkably useful as it shows how our geometry guided implementation results in efficient weighted and unweighted 1D-TV solvers, surpassing state-of-the-art methods. Our 1D-TV solvers provide the backbone for building more complex (two or higher-dimensional) TV solvers within a modular proximal optimization approach. We review the literature for an array of methods exploiting this strategy, and illustrate the benefits of our modular design through extensive suite of experiments on (i) image denoising, (ii) image deconvolution, (iii) four variants of fused-lasso, and (iv) video denoising. To underscore our claims and permit easy reproducibility, we provide all the reviewed and our new TV solvers in an easy to use multi-threaded C++, Matlab and Python library. 1 Introduction Sparsity impacts the entire data analysis pipeline, touching algorithmic, modeling, as well as practical aspects. Most commonly, sparsity is elicited via `1-norm regularization [20, 84]. However, numerous applications rely on more refined \u201cstructured\u201d notions of sparsity, e.g., groupwise-sparsity [6, 57, 63, 97], hierarchical sparsity [4, 61], gradient sparsity [76, 86, 90], or sparsity over structured \u2018atoms\u2019 [24]. Such regularizers typically arise in optimization problems of the form minx\u2208Rn \u03a6(x) := `(x) + r(x), (1.1) where ` : Rn \u2192 R is a smooth loss function (often convex), while r : Rn \u2192 R \u222a {+\u221e} is a lower semicontinuous, convex, and nonsmooth regularizer that induces sparsity. We focus on instances of (1.1) where r is a weighted anisotropic Total-Variation (TV) regularizer:1 , which, foravectorx\u2208Rnandfixedweightsw\u22650isdefinedas r(x) def =Tv 1 p(w; x) def =  Xn\u22121 j=1 wj |xj+1 \u2212 xj |p 1/p p\u22651. (1.2) More generally, if X is an order-m tensor in R Qm j=1 nj with entries Xi1,i2,...,im (1 \u2264 ij \u2264 nj for 1 \u2264 j \u2264 m); we define the weighted m-dimensional anisotropic TV regularizer as Tv m p (W;X) def = m X k=1 X Ik={i1,...,im}\\ik  nk \u22121 X j=1 wIk ,j |X[k] j+1\u2212X [k] j |pk  1/pk , (1.3) \u2217 An initial version of this work was performed during 2013-14, when the author was with the Max Planck Institute for Intelligent Systems, T \u0308ubingen, Germany, and with Carnegie Mellon University, Pittsburgh. 1We use the term \u201canisotropic\u201d to refer to the specific TV penalties considered in this paper. 1 a r X i v : 1 4 1 1 . 0 5 8 9 v 3 [ s t a t . M L ] 3 0 D e c 2 0 1 7 where X[k] j \u2261 Xi1,...,ik\u22121,j,ik+1,...,im , wIk,j\u22650areweights,andp\u2261[pk\u22651]for1\u2264k\u2264m. IfXisamatrix, expression (1.3) reduces to (note, p, q \u2265 1) Tv 2 p,q(W;X)= n1 X i=1  n2 \u22121 X j=1 w1,j |xi,j +1 \u2212 xi,j |p 1/p + n2 X j=1  n1 \u22121 X i=1 w2,i|xi+1,j \u2212 xi,j |q 1/q , (1.4) These definitions look formidable; already 2D-TV (1.4) or even the simplest 1D-TV (1.2) are fairly complex, which further complicates the overall optimization problem (1.1). Fortunately, this complexity can be \u201clocalized\u201d by invoking prox-operators [65], which are now widely used across machine learning [68, 81]. The main idea of using prox-operators while solving (1.1) is as follows. Suppose \u03a6 is a convex lsc function onasetX\u2282Rn . The prox-operator of \u03a6 is defined as the map prox\u03a6 def =y 7 \u2192 argmin x\u2208X 1 2kx\u2212yk2 2+\u03a6(x) for y\u2208Rn . (1.5) A popular method based on prox-operators is the proximal gradient method (also known as \u2018forward backward splitting\u2019), which performs a gradient (forward) step followed by a proximal (backward) step to iterate xk+1 = prox\u03b7kr(xk \u2212\u03b7k\u2207`(xk)), k =0,1,. ... (1.6) Numerous other proximal methods exist\u2014see e.g ., [13, 27, 46, 66, 79]. To implement the proximal-gradient iteration (1.6) efficiently, we require a subroutine that computes the prox-operator proxr . An additional concern is whether the overall algorithm requires an exact computation of proxr , or merely a moderately inexact computation. This concern is justified: rarely does r admit an exact algorithm for computing proxr . Fortunately, proximal methods easily admit inexactness, e.g., [78\u201380], which allows approximate prox-operators (as long as the approximation is sufficiently accurate). We study both exact and inexact prox-operators in this paper, contingent upon the `p-norm used and on the data dimensionality m. 1.1 Contributions In particular, we review, analyze, implement, and experiment with a variety of fast algorithms. The ensuing contributions of this paper are summarized below. \u2022 Geometric analysis that leads to a new, efficient version of the classic Taut String Method [32], whose origins can be traced back to [10] \u2013 this version turns out to perform better than most of the recently developed TV proximity methods. \u2022 A previously unknown connection between (a variation of) this classic algorithm and Condat\u2019s un- weighted TV method [28]. This connection provides a geometric, more intuitive interpretation and helps us define a hybrid taut-string algorithm that combines the strengths of both methods, while also providing a new efficient algorithm for weighted `1 -norm 1D-TV proximity. \u2022 Efficient prox-operators for general `p-norm (p \u2265 1) 1D-TV. In particular, \u2013 For p = 2, we present a specialized Newton method based on the root-finding strategy of [64], \u2013 For the general p \u2265 1 case we describe both \u201cprojection-free\u201d and projection based first-order methods. \u2022 Scalable proximal-splitting algorithms for computing 2D (1.4) and higher-D TV (1.3) prox-operators. We review an array of methods in the literature that use prox-splitting, and through extensive experi- ments show that a splitting strategy based on alternating reflections is the most effective in practice. Furthermore, this modular construction of 2D and higher-D TV solvers allows reuse of our fast 1D-TV routines and exploitation of the massive parallelization inherent in matrix and tensor TV. 2 \u2022 The final most important contribution of our paper is a well-tuned, multi-threaded open-source C++, Matlab and Python implementation of all the reviewed and developed methods.2 To complement our algorithms, we illustrate several applications of TV prox-operators to: (i) image and video denoising; (ii) image deconvolution; and (iii) four variants of fused-lasso. Note: We have invested great efforts to ensure reproducibility of our results. In particular, given the vast attention that TV problems have received in the literature, we believe it is valuable to both users of TV and other researchers to have access to our code, datasets, and scripts, to independently verify our claims, if desired.3 1.2 Related work The literature on TV is too large to permit a comprehensive review here. Instead, we mention the most directly related work to help place our contributions in perspective. We focus on anisotropic-TV (in the sense of [16]), in contrast to isotropic-TV [76]. Isotropic TV regularization arises frequently in image denoising and signal processing, and quite a few TV-based denoising algorithms exist [98, see e.g .] . The anisotropic TV regularizers Tv 1D 1 and Tv2D 1,1 arise in image denoising and deconvolution [31], in the fused-lasso [86], in logistic fused-lasso [50], in change-point detection [39], in graph-cut based image segmentation [21], in submodular optimization [43]; see also the related work in [89]. This broad applicability and importance of anisotropic TV is the key motivation towards developing carefully tuned proximity operators. There is a rich literature of methods tailored to anisotropic TV, e.g., those developed in the context of fused-lasso [34, 60], graph-cuts [21], ADMM-style approaches [27, 91], or fast methods based on dynamic programming [45] or KKT conditions analysis [28]. However, it seems that anisotropic TV norms other than `1 has not been studied much in the literature, although recognized as a form of Sobolev semi-norms [70]. For 1D-TV and for the particular `1 norm, there exist several direct methods that are exceptionally fast. We treat this problem in detail in Section 2, and hence refer the reader to that section for discussion of closely related work on fast solvers. We note here, however, that in contrast to many of the previous fast solvers, our solvers allow weights, a capability that can be very important in applications [43]. Regarding 2D-TV, Goldstein T. [36] presented a so-called \u201cSplit-Bregman\u201d (SB). It turns out that this method is essentially a variant of the well-known ADMM method. In contrast to the 2D approach presented here, the SB strategy followed by Goldstein T. [36] is to rely on `1 -soft thresholding substeps instead of 1D-TV substeps. From an implementation viewpoint, the SB approach is somewhat simpler, but not necessarily more accurate. Incidentally, sometimes such direct ADMM approaches turn out to be less effective than ADMM methods that rely on more complex 1D-TV prox-operators [71]. It is worth highlighting that it is not just proximal solvers such as FISTA [13], SpaRSA [93], SALSA [1], TwIST [16], T R I P [46], that can benefit from our fast prox-operators. All other 2D and higher-D TV solvers, e.g., [95], as well as the recent ADMM based trend-filtering solvers of Tibshirani [87] immediately benefit, not only in speed but also by gaining the ability to solve weighted problems. 1.3 Summary of the paper The remainder of the paper is organized as follows. In Section 2 we consider prox operators for 1D-TV problems when using the most common `1 norm. The highlight of this section is our analysis on taut-string TV solvers, which lead to the development a new hybrid method and a weighted TV solver (Sections 2.3, 2.4). Thereafter, we discuss variants of 1D-TV (Section 3), including a specialized Tv1D 2 solver, and a more general Tv1D p method based on a projected-Newton strategy. Subsequently, we describe multi-dimensional TV problems and study their prox-operators in Section 4, paying special attention to 2D-TV; for both 2D and multi-D, prox-splitting methods are used. After these theoretical sections, we describe experiments 2 See https://github.com/albarji/proxTV 3 This material shall be made available at: http://suvrit.de/work/soft/tv.html 3 and applications in Section 5. In particular, extensive experiments for 1D-TV are presented in Section 5.1; 2D-TV experiments are in Section 5.3, while an application of multi-D TV is the subject of Section 5.4 . The appendices to the paper include further technical details and additional information about the experimental setup. 2 TV-L1: Fast prox-operators for Tv 1D 1 We begin with the 1D-TV problem (1.2) for an `1 norm choice, for which we review several carefully tuned algorithms. Using such well\u2013tuned algorithms pays off: we can find fast, robust, and low-memory (in fact, in place) algorithms, which are not only of independent value, but also ideal building blocks for scalably solving 2D- and higher-D TV problems. Computation of the `1 -norm TV prox-operator can be compactly written as the problem min x\u2208Rn 1 2kx\u2212yk2 2 + \u03bbkDxk1, (2.1) where D is the differencing matrix, all zeros except dii = \u22121 and di,i+1 = 1 (1 \u2264 i \u2264 n \u2212 1). To solve (2.1) we will analyze an approach based on the line of \u201ctaut-string\u201d methods. We first introduce these methods for the unweighted TV-L1 problem (2.1), before discussing the elementwise weighted TV problem (2.6). Most of the previous fastest methods handle only unweighted-TV. It is often nontrivial to extend them to handle weighted-TV, a problem that is crucial to several applications, e.g ., segmentation [21] and certain submodular optimization problems Jegelka et al. [43]. A remarkably efficient approach to TV-L1 was presented in [28]. We will show Condat\u2019s fast algorithm can be interpreted as a \u201clinearized\u201d version of the taut-string approach, a view that paves the way to obtain an equally fast solver for weighted TV-L1. Before proceeding we note that other than [28], other efficient methods to address unweighted Tv1D 1 proximity have been proposed. Johnson [45] shows how solving Tv1D p proximity is equivalent to computing the data likelihood of an specific Hidden Markov Model (HMM), which suggests a dynamic programming approach based on the well-known Viterbi algorithm for HMMs. The resulting algorithm is very competitive, and guarantees an overall O(n) performance while requiring approximately 8n storage. Another similarly performing algorithm was presented by Kolmogorov et al [51] in the form of a message passing method. We will also consider these algorithms in our experimental comparison in \u00a75.1 . Yet another family of methods is based on projected-Netwon (PN) techniques: we also present in Appendix E a PN approach for its instructive value, and also because it provides key subroutines for solving TV problems with p > 1. Our derivation may also be helpful to readers seeking to implement efficient prox-operators for problems that have structure similar to TV, for instance `1 -trend filtering [47, 87]. Indeed, the PN approach proves to be foundational for the fast \u201cgroup fused-lasso\u201d algorithms of [94]. 2.1 The taut-string method for Tv 1D 1 While taut-string methods seem to be largely unknown in machine learning, they have been widely applied in statistics\u2014see e .g ., [10, 32, 38]. We start by transforming the problem as follows. For TV-L1, elementary manipulations, e.g., using Proposition A.4, yield the dual (re-written as a minimization problem) min u 1 2 kDT uk 2 2\u2212u T Dy, s.t. kuk\u221e \u2264\u03bb. (2.2) Without changing the minimizer, the objective (2.2) can be replaced by kDT u \u2212 yk2 2 , which then unfolds into (u1 \u2212 y1) 2 + Xn\u22121 i=2 (\u2212ui\u22121 + ui \u2212 yi) 2 + (\u2212un\u22121 \u2212 yn) 2 . 4 Introducing the fixed extreme points u0 = un = 0, we can replace the problem (2.2) by min u Xn i=1 (\u2212ui\u22121 + ui \u2212 yi) 2 , s.t.kuk\u221e\u2264\u03bb, u0=un=0. (2.3) Now we perform a change of variables by defining the new set of variables s = r \u2212 u, where ri := Pi k=1 yk is the cumulative sum of input signal values. Thus, (2.3) becomes min s Xn i=1 (\u2212ri\u22121+si\u22121+ri\u2212si\u2212yi) 2 , s.t.ks\u2212rk\u221e\u2264\u03bb, r0\u2212s0=rn\u2212sn=0, which upon simplification becomes min s Xn i=1 (si\u22121 \u2212 si) 2 , s.t. ks\u2212rk\u221e\u2264\u03bb,s0=0, sn =rn. (2.4) Now the key trick: problem (2.4) can be shown to share the same optimum as min s n X i=1 q1 + (si\u22121 \u2212 si) 2 , s.t.ks\u2212rk\u221e\u2264\u03bb, s0=0,sn=rn. (2.5) A proof of this relationship may be found in [82]; for completeness, and also because it will help us generalize to the weighted Tv1D 1 variant, we include an alternative proof in Appendix C. The name \u201ctaut-string\u201d is explained as follows. The objective in (2.5) can be interpreted as the Euclidean length of a polyline through the points (i, si). Thus, (2.5) seeks the minimum length polyline (the taut-string) crossing a tube of height \u03bb with center the cumulative sum r and having the fixed endpoints (s0, sn ). An example illustrating this description is shown in Figure 1. Once the taut string is found, the solution for the original TV problem (2.1) can be recovered by observing that si \u2212 si\u22121 = ri\u2212ui\u2212(ri\u22121 \u2212 ui\u22121) = yi\u2212ui+ui\u22121 = xi, where we used the primal-dual relation x = y \u2212 DT u. Intuitively, the above argument shows that the solution to the TV-L1 proximity problem is obtained as the discrete gradient of the taut string, or as the slope of its segments. 0 1 2 3 4 5 6 7 8 910 \u22126 \u22124 \u22122 0 i s Taut\u2212string solution Figure 1: Example of the taut string method. The cumulative sum r of the input signal values y is shown as the dashed line; the black dots mark the points (i, ri ). The bottom and top of the \u03bb-width tube are shown in red. The taut string solution s is shown as a blue line. 5 Algorithm 1 Taut string algorithm for TV-L1 -proximity 1: Inputs: input signal y of length n, regularizer \u03bb. 2: Initialize i = 0, concmaj or ant = \u2205, conv minorant = \u2205, ri = Pik=1 yk . 3: whilei<ndo 4: Add new segment: concmaj orant = concmaj or ant \u222a ((i \u2212 1, ri\u22121 \u2212 \u03bb)\u2192(i,ri \u2212\u03bb)). 5: while concmaj orant is not concave do 6: Merge the last two segments of concmaj or ant 7: end while 8: Add new segment: conv minor ant = conv minor ant \u222a ((i \u2212 1, ri\u22121 + \u03bb) \u2192 (i, ri + \u03bb)). 9: while convminorant is not convex do 10: Merge the last two segments of conv minorant 11: end while 12: if slope(left-most segment in concmaj orant) > slope(lest-most segment in convminor ant) then 13: break = left-most point where either the majorant or the minorant touched the tube 14: if break \u2208 convminor ant then 15: Remove left-most segment of the minorant, add it to the taut-string solution x. 16: Majorant is recalculated as a straight line from br eak to its last point. 17: end if 18: if break \u2208 concmaj orant then 19: Remove left-most segment of the majorant, add it to the taut-string solution x. 20: Minorant is recalculated as a straight line from br eak to its last point. 21: end if 22: end if 23: i++ 24: end while 25: Add last segment from either the majorant or minorant to the solution x. It remains to describe how to find the taut string. The most widely used approach seems to be the one due to Davies and Kovac [32]. This approach starts from the fixed point s0 = 0, and incrementally computes the greatest convex minorant of the upper bounds on the \u03bb tube, as well as the smallest concave majorant of the lower bounds on the \u03bb tube. When both curves intersect, the left-most point where either the majorant or the minorant touched the tube is used to fix a first segment of the taut string. The procedure is then resumed at the end of the identified segment, and iterated until all taut string segments have been obtained. Pseudocode of this method is presented as Algorithm 1, while an example of this procedure is shown in Figure 2. It is important to note that since we have a discrete number of points in the tube, the greatest convex minorant can be expressed as a piecewise linear function with segments of monotonically increasing slope, while the smallest concave majorant is another piecewise linear function with segments of monotonically decreasing slope. Another relevant fact is that each segment in the tube upper/lower bound enters the minorant/majorant exactly once in the algorithm, and is also removed exactly once. This limits the extent of the inner loops in the algorithm, and in fact an analysis of the computational complexity of this behavior leads to an overall O(n) performance [32]. In spite of this, Condat [28] notes that maintaining the minorant and majorant functions in memory is inefficient, and views a taut-string approach as potentially inferior to his proposed method. To this observation we make two claims: Condat\u2019s method can be interpreted as a linearized version of the taut-string method (see Section 2.2); and that a careful implementation of the taut-string method can be highly competitive in practice. 2.1.1 Efficient implementation of taut-strings We propose now an efficient implementation of the taut-string method. The main idea is to carefully use double-ended queues [49] to store the majorant and minorant information. Therewith, all majorant/minorant operations such as appending a segment or removing segments from either the beginning or the end of the majorant can be performend in constant time. Note however that usual double-ended queue implementations 6 (1) (2) (3) (4) (5) (6) (7) (8) (9) Figure 2: Example of the evolution of the taut string method. The smallest concave majorant (blue) and largest convex minorant (green) are updated are every step. At step (1) the algorithm is initialized. Steps (2) to (4) successfully manage to update majorant and minorant without producing crossings between them. Note how while the concave majorant keeps adding segments without issue, the convex minorant must remove and merge existing segments with new ones to mantain a convex function from the origin to the new points. At step (5) the end of the tube is reached, but the minorant and majorant slopes overlap, and so it is necessary to break the segment at the left-most point where the majorant/minorant touched the tube. Since the left-most touching point is in the concave majorant it\u2019s leftmost segment is removed and placed in the solution, while the convex minorant is updated as a straight line from the detected breakpoint to the last explored point, resulting in (6). The algorithm would then continue adding segments, but since the majorant/minorant slopes are still crossing, the procedure of fixing segments to the solution is repeated through steps (6), (7) and (8). Finally at step (9) the slopes are no longer crossing and the method would continue adding tube segments, but since the end of the tube has already been reached the algorithm stops. use doubly linked lists, dynamic arrays or circular buffers: these approaches require dynamically reallocating memory chunks at some of the insert or remove operations. But in the taut-string algorithm, the maximum number of segments of the majorant/minorant is just the size of the input signal (n), and also the number of segments to be inserted in the queue throughout the algorithm will be n. Making use of these facts we implement a specialized queue based on a contiguous array of fixed length n. New segments are added from the start of the array on, and a couple of pointers are maintained to keep track of the first and last valid segments in the array, much in the way of a circular buffer. This implementation, however, does not require of the usual circular logic. Overall, this double-ended queue requires a single memory allocation at the beginning of the algorithm, keeping the rest of queue operations free from memory management and all but the simplest pointer or index algebra. We also store for each segment the following values: x length of the segment, y length and slope. Slopes might seem as redundant given the other two factors, but given the number of times the algorithm requires comparing slopes between segments (e.g., to preserve convexity/concavity) it pays off to precompute these values. This fact together with other calculation and code optimization details produces our implementation; these can be reviewed in the code itself at https://github.com/albarji/proxTV. 7 2.2 Linearized taut-string method for Tv 1D 1 We now present a variant, linearized version of the taut-string method. Surprisingly, the resulting algorithm turns out to be equivalent to the fast algorithm of Condat [28], though now with a clearer interpretation based on taut-strings. The key idea is to build linear approximations to the greatest convex minorant and smallest concave majorant, producing exactly the same results but significantly reducing the bookkeeping of the method to a handful of simple variables. We therefore replace the greatest convex minorant and smallest convex majorant by a greatest affine minorant and smallest affine majorant. An example of the method is presented in Figure 4. A proof showing that this linearization does not change the resultant taut-string is given in Appendix D. In what follows, we describe the linearized method in depth. Details. Linearized taut-string requires only the following bookkeeping variables: 1. i0: index of the current segment start 2. \u0304 \u03b4: slope of the line joining segment start with majorant at the current point 3. \u0304 \u03b4: slope of the line joining segment start with minorant at the current point 4. \u0304 h: height of majorant w.r.t . the \u03bb-tube center 5. \u0304 h: height of minorant w.r.t. \u03bb-tube center 6. \u0304 i: index of last point where \u0304\u03b4 was updated\u2014potential majorant break point 7. \u0304 i: index of last point where \u0304 \u03b4 was updated\u2014potential minorant break point. Figure 3 gives a geometric interpretation of these variables; we use these variables to detect minorant-majorant intersections, without the need to compute or store them explicitly. Figure 3: Illustration of the geometric concepts involved in the linearized taut string method. The greatest linear minorant (of the tube ceiling) is depicted in green, while the smallest linear majorant (of the tube bottom) is shown in blue. The \u03b4 slopes and h heights are presented updated up to the index shown as i. Algorithm 2 presents full pseudocode of the linearized taut-string method. Broadly, the algorithm proceeds in the same fashion as the classic taut-string method, updating the affine approximations to the majorant and minorant at each step, and introducing a breakpoint whenever the slopes of these two functions cross. More precisely, at each each iteration the method steps one point further through the tube, updating the minorant/majorant slopes ( \u0304 \u03b4, \u0304 \u03b4) as well their heights at the current point ( \u0304 h, \u0304 h). To check for minorant/majorant crossings it suffices to compare the slopes ( \u0304 \u03b4, \u0304 \u03b4), or equivalently, to check whether the height of the minorant \u0304 h falls below the tube bottom (since the minorant follows the tube ceiling) or the height of the majorant \u0304h grows above the tube ceiling (since the majorant follows the tube bottom). We make use of this last variant, 8 Algorithm 2 Linearized taut string algorithm for TV-L1-proximity 1: Initialize i = \u0304 i= \u0304 i= \u0304 h= \u0304 h=0, \u0304 \u03b4=y0+\u03bb, \u0304 \u03b4=y0\u2212\u03bb 2: whilei<ndo 3: Findtubeheight:\u0303\u03bb =\u03bbifi<n\u22121,else\u0303\u03bb =0 4: Update majorant height following current slope: \u0304h = \u0304 h+\u0304\u03b4 \u2212 yi. 5: /* Check for ceiling violation: majorant is above tube ceiling */ 6: if\u0304h>\u0303\u03bbthen 7: Build valid segment up to last majorant breaking point: xi0 +1:\u0304i = \u0304 \u03b4. 8: Start new segment after break: (i0, \u0304 i)= \u0304 i, \u0304 \u03b4=yi+2\u03bb, \u0304 \u03b4=yi, \u0304 h=\u03bb, \u0304 h= \u2212\u03bb,i = \u0304 i+1 9: continue 10: end if 11: Update minorant height following current slope: \u0304 h= \u0304 h+ \u0304 \u03b4\u2212yi. 12: /* Check for bottom violation: minorant is below tube bottom */ 13: if \u0304 h<\u2212 \u0303 \u03bb then 14: Build valid segment up to last minorant breaking point: xi0 +1: \u0304 i= \u0304 \u03b4. 15: Start new segment after break: (i0, \u0304i) = \u0304 i, \u0304 \u03b4=yi, \u0304 \u03b4= \u22122\u03bb+yi, \u0304 h=\u03bb, \u0304 h= \u2212\u03bb,i = \u0304 i+1 16: continue 17: end if 18: /* Check if majorant height is below the floor */ 19: if\u0304h\u2264\u2212 \u0303 \u03bb then 20: Correct slope: \u0304\u03b4 = \u0304 \u03b4+ \u0303 \u03bb\u2212\u0304h i\u2212i0 21: The majorant now touches the floor: \u0304h = \u2212 \u0303 \u03bb 22: This is a possible majorant breaking point: \u0304i = i 23: end if 24: /* Check if minorant height is above the ceiling */ 25: if \u0304 h\u2265\u0303\u03bb then 26: Correct slope: \u0304 \u03b4= \u0304 \u03b4+\u2212 \u0303 \u03bb\u2212 \u0304 h i\u2212i0 27: The minorant now touches the ceiling: \u0304 h= \u0303 \u03bb 28: This is a possible minorant breaking point: \u0304 i=i 29: end if 30: Continue building current segment: i = i + 1 31: end while 32: Build last valid segment: xi0 +1:n = \u0304 \u03b4. since updating heights turns out to be slightly cheaper than updating slopes, and so it is faster to ensure no crossing will take place before performing such updates. When a crossing is detected, we perform similar steps as in the classic taut-string method but with one significant difference: the algorithm is completely restarted at the newly introduced breakpoint. This restart idea is in contrast with the classic method, where we simply re-use the previously computed information about the minorant and majorant to update their estimates and continue working with them. In the linearized version we do not keep enough information to perform such an operation, so all data about minorant and majorant is discarded and the algorithm begins anew. Because of this choice the same tube segment might be reprocessed up to O(n) times in the method, and therefore the overall worst case performance is O(n2 ). This fact was already observed in [28]. In what follows we describe the rationale behind the height update formulae. Height variables. To implement the method described above, the height variables h are not strictly necessary as they can be obtained from the slopes \u03b4. However, explicitly including them leads to efficient updating rules at each iteration, as we show below. 9 Classic Linearized (Condat\u2019s) Worst-case performance O(n) O(n2) In\u2013memory No Yes Other considerations Fast bookkeeping through double- ended queues Very fast iteration, cache friendly Table 1: Comparison of the main features of reviewed taut-string algorithms. Suppose we are updating the heights and slopes from their estimates at step i \u2212 1 to step i. Updating the heights is immediate given the slopes, since hi =hi\u22121+\u03b4\u2212yi. In other words, since we are following a line with slope \u03b4, the change in height from one step to the next is given by precisely such a slope. Note, however, that in this algorithm we do not compute absolute heights but instead relative heights with respect to the \u03bb\u2013tube center. Therefore we need to account for the change in the tube center between steps i \u2212 1 and i, which is given by ri \u2212 ri\u22121 = yi . This completes the update, which is shown in Algorithm 2 as lines 4 and 11. However, it is possible that the new height h runs over or under the tube. This would mean that we cannot continue using the current slope in the majorant or minorant, and a recalculation is needed, which again can be done efficiently by using the height information. Assume without loss of generality that the starting index of the current segment is 0 and the absolute height of the starting point of the segment is given by \u03b1. Then, for adjusting the minorant slope \u0304\u03b4i so that it touches the tube ceiling at the current point, we note that \u0304 \u03b4i= \u03bb+ri\u2212\u03b1 i = \u03bb+(\u0304hi \u2212 \u0304 hi)+ri\u2212\u03b1 i , where we have also added and subtracted the current value of \u0304hi . Observe that this value was computed using the estimate \u03b4i\u22121 of the slope so far, so we can rewrite it as the projection of the initial point in the segment following such a slope, that is, as \u0304 hi=i \u0304 \u03b4i \u2212 ri + \u03b1. Doing so for one of the added heights \u0304hi produces \u0304 \u03b4i= \u03bb + (i\u0304\u03b4i\u22121 \u2212 ri+\u03b1)\u2212 \u0304 hi+ri\u2212\u03b1 i = \u0304 \u03b4i\u22121 + \u03bb\u2212 \u0304 hi i , which generates a simple updating rule. A similar derivation holds for the minorant. The resulting updates are included in the algorithm in lines 20 and 26. After recomputing this slope we need to adjust the corresponding height back to the tube: since the heights are relative to the tube center we can just set \u0304h = \u03bb, \u0304 h= \u2212\u03bb;thisis done in lines 21 and 27. Notice also that the special case of the last point in the tube where the taut-string must meet sn = rn is handled by line 3, where \u0303\u03bb is set to 0 at such a point to enforce this constraint. Overall, one iteration of the method is very efficient, as mostly just additions and subtractions are involved with the sole exception of the division required for the slope updates, which are not performed at every iteration. Moreover, no additional memory is required beyond the constant number of bookkeeping variables, and in-place updates are also possible because yi values for already fixed sections of the taut-string are not required again, so the output x and the input y can both refer to the same memory locations. The resulting algorithm turns out to be equivalent, almost line by line, to the method of Condat [28], even though its theoretical grounds are radically different: while the approach presented here has a strong geometric basis due to its taut-string relationship, [28] is based solely on analysis of KKT conditions. Therefore, we have shown that Condat\u2019s fast TV method is, in fact, a linearized taut-string algorithm. 2.3 Comparison of taut-string methods and a hybrid strategy Table 1 summarizes the main features of the classic and linearized taut-string methods reviewed so far. Although the classic taut-string method has been largely neglected in the machine learning literature, its 10 (1) (2) (3) (4) (5) (6) (7) (8) (9) (10) (11) Figure 4: Example of the evolution of the linearized taut string method. The smallest affine majorant of the tube bottom (blue) and greatest affine minorant of the tube ceiling (green) are updated at every step. At step (1) the algorithm is initialized. Steps (2) to (4) successfully manage to update majorant/minorant without crossings. At step (5), however, the slopes cross, and so it is necessary to break the segment. Since the left-most tube touching point is the one in the majorant, the majorant is broken down at that point and its left-hand side is added to the solution, resulting in (6). The method is then restarted at the break point, with majorant/minorant being updated at step (7), though at step (8) once again a crossing is detected. Hence, at step (9) a breaking point is introduced again and the algorithm is restarted once more. Following this, step (10) manages to update majorant/minorant slopes up to the end of the tube, and so at step (11) the final segment is built using the (now equal) slopes. guarantee in linear performance makes it an attractive choice. Furthermore, although we could not find any references on implementation details of this method, we have empirically seen that a very efficient solver can be produced by making use of a double-ended queue to bookkeep the majorant/minorant information. In contrast to this, the linearized taut-string method (equivalent to [28]) features a much better performance per step in the tube traversal, mainly due to not requiring additional memory and making use of only a small constant number of variables, making the method friendly for CPU cache or registers calculation. As a tradeoff of keeping such scarce information in memory, the method does not guarantee linear performance, falling to a quadratic theoretical runtime in the worst case. This fact was already observed in [28], though such worst case was deemed as pathological, claiming a O(n) performance in all practical situations. We shall review these claims in the experimental sections in this manuscript. 11 The key points of Table 1 show that no taut-string variant is clearly superior. While the classic method provides a safe linear time solution to the problem, the linearized method is potentially faster but riskier in terms of worst case performance. Following these observations we propose here a simple hybrid method combining both approaches: run the linearized algorithm up to a prefixed number of steps nS , S \u2208 (1, 2), and if the solution has not yet been found, we switch to the classic method. We therefore limit the worst-case scenario to O(nS ) + O(n) ' O(nS ), because once the classic method kicks, it will ensure an O(n) performance guarantee. Implementation of this hybrid method is easy upon realizing the similarities between algorithms: a switch\u2013 check is added to the linearized method every time a segment of the taut-string has been identified (Algorithm 2, lines 7, 14). If it is confirmed that the method has already run for nS steps without reaching the solution, the remaining part of the signal for which the taut-string has not yet been found is passed on to the classic method, whose solution is concatenated to the part the linearized method managed to find so far. We also report the empirical performance of this method in the experimental section. 2.4 Taut-string methods for weighted Tv 1D 1 Several applications TV require penalizing the discrete gradients individually, which can be done by solving the weighted TV-L1 problem minx 1 2kx\u2212yk2 2+ Xn\u22121 i=1 wi|xi+1 \u2212 xi|, (2.6) where the weights {wi } n\u22121 i=1 are all positive. To solve (2.6) using a taut-string approach, we again begin with its dual (written as a minimization problem) minu 1 2 kDT uk 2 2\u2212u T Dy s.t. |ui|\u2264wi, 1\u2264i<n. (2.7) Then, we repeat the derivation of the unweighted taut-string method but with a few key modifications. More precisely, we transform (2.7) by introducing u0 = un = 0 to obtain min u Xn i=1 (yi\u2212ui+ui\u22121) 2 s.t.|ui|\u2264wi, 1\u2264i<n. Then, we perform the change of variables s = r \u2212 u, where ri := Pi k=1 yk , and consider min s Xn i=1 (si \u2212 si\u22121) 2 s.t.|si\u2212ri|\u2264wi, 1\u2264i<ns0=0, sn =rn. Finally, applying Theorem C.1 we obtain the equivalent weighted taut-string problem min s Xn i=1 q1+(si\u2212si\u22121) 2 s.t.|si\u2212ri|\u2264wi, 1\u2264i<n, s0=0, sn =rn. (2.8) Problem (2.8) differs from its unweighted counterpart (2.5) in the constraints |si \u2212 ri | \u2264 wi (1 \u2264 i < n), which allow different weights for each component instead of using the same value \u03bb. Our geometric intuition also carries over to the weighted problem, albeit with a slight modification: the tube we are trying to traverse now has varying widths at each step instead of the previous fixed \u03bb width\u2014Figure 5 illustrates this idea. As a consequence of the above derivation and intuition, taut-string methods can be produced to solve the weighted Tv1D 1 problem. The original formulation of the classic taut-string method in [32] defines the limits of the tube through possibly varying bottom and ceiling values (li , ui ) \u2200i, and so this method easily extends to solve the weighted TV problem by assigning li = ri \u2212 wi, ui = ri + wi . In our pseudocode in Algorithm 1 we just need to replace \u03bb by the appropriate wi values. Similar considerations apply for the linearized version (Algorithm 2), in particular, when checking ceiling/floor violations as well as when checking slope recomputations and restarts, we must account for varying tube heights. Algorithm 3 presents the precise modifications that we must make to Algorithm 2 to handle weights. Regarding the convergence of this method, the proof of equivalence with the classic taut-string method still holds in the weighted case (see Appendix D). The very same analysis as portrayed in Table 1 applies here: both the benefits and problems of the two taut-string solvers carry on to the weighted variant of the problem. 12 01 2 3 4 56 7 8 910 0 2 4 6 i s Taut\u2212string solution Figure 5: Example of the weighted taut string method with w = (1.35, 3.03, 0.73, 0.06, 0.71, 0.20, 0.12, 1.49, 1.41). The cumulative sum r of the input signal values y is shown as the dashed line, with the black dots marking the points (i, ri ). The bottom and ceiling of the tube are shown in red, which vary in width at each step following the weights wi . The weighted taut string solution s is shown as a blue line. Algorithm 3 Modified lines for weighted version of Algorithm 2 3: Findtubeheight:\u0303\u03bb =wi+1ifi<n\u22121,else\u0303\u03bb =0 8: Start new segment after break: (i0, \u0304 i)= \u0304 i, \u0304 \u03b4=yi+wi\u22121+wi, \u0304 \u03b4=yi+wi\u22121 \u2212 wi, \u0304 h=wi, \u0304 h= \u2212wi, i= \u0304 i+1 15: Start new segment after break: (i0, \u0304i) = \u0304 i, \u0304 \u03b4=yi+wi\u22121 \u2212 wi, \u0304 \u03b4=yi+wi\u22121+wi, \u0304 h=wi, \u0304 h= \u2212wi, i= \u0304 i+1 3 Other one-dimensional TV variants While more infrequent, replacing the `1 norm of the standard TV regularizer by an `p-norm version can also be useful. In this section we focus first on a specialized solver for p = 2, before discussing a less efficient but more general solver for any `p with p \u2265 1. We also briefly cover the p = \u221e case. 3.1 TV-L2: Proximity for Tv 1D 2 For TV-L2 proximity (p = 2) the dual to the prox-operator for (1.2) reduces to minu \u03c6(u) := 1 2 kDT uk 2 2\u2212u T Dy, s.t. kuk2 \u2264 \u03bb. (3.1) Problem (3.1) is nothing but a version of the well-known trust-region subproblem (TRS), for which a variety of numerical approaches are known [30]. We derive a specialized algorithm based on the classic Mor\u0301e -Sorensen Newton (MSN) method of [64]. This method in general can be quite expensive, but for (3.1) the Hessian is tridiagonal which can be well- exploited (see Appendix E). Curiously, experiments show that for a limited range of \u03bb values, even ordinary gradient-projection (GP) can be competitive. But for overall best performance, a hybrid MSN-GP approach is preferable. Towards solving (3.1), consider its KKT conditions: (DDT + \u03b1I)u = Dy, \u03b1(kuk2\u2212\u03bb)=0, \u03b1\u22650, (3.2) where \u03b1 is a Lagrange multiplier. There are two possible cases: either kuk2 < \u03bb or kuk2 = \u03bb. 13 If kuk2 < \u03bb, then the KKT condition \u03b1(kuk2 \u2212 \u03bb) = 0, implies that \u03b1 = 0 must hold and u can be obtained immediately by solving the linear system DDT u = Dy. This can be done in O(n) time owing to the bidiagonal structure of D. Conversely, if the solution to DD T u = Dy lies in the interior of the ball kuk2 \u2264 \u03bb, then it solves (3.2). Therefore, this case is trivial, and we need to consider only the harder case kuk2 = \u03bb. For any given \u03b1 one can obtain the corresponding vector u as u\u03b1 = (DDT + \u03b1I)\u22121 Dy. Therefore, optimizing for u reduces to the problem of finding the \u201ctrue\u201d value of \u03b1. An obvious approach is to solve ku\u03b1k2 2 = \u03bb2 . Less obvious is the MSN equation h\u03b1:=\u03bb \u22121 \u2212 ku\u03b1k \u22121 2 =0, (3.3) which has the benefit of being almost linear in the search interval, which results in fast convergence [64]. Thus, the task is to find the root of the function h\u03b1 , for which we use Newton\u2019s method, which in this case leads to the iteration \u03b1\u2190\u03b1\u2212h\u03b1/h0 \u03b1. (3.4) Some calculation shows that the derivative h0 can be computed as 1 h0 \u03b1 = ku\u03b1 k3 2 uT \u03b1 (DDT + \u03b1I)\u22121u\u03b1 . (3.5) The key idea in MSN is to eliminate the matrix inverse in (3.5) by using the Cholesky decomposition DDT+\u03b1I=RT \u03b1 R\u03b1 and defining a vector q\u03b1 = (RT \u03b1) \u22121 u, so that kq\u03b1k2 2=uT \u03b1 (DDT + \u03b1I)\u22121u\u03b1. As a result, the Newton iteration (3.4) becomes \u03b1\u2212 h\u03b1 h0 \u03b1 = \u03b1 \u2212 (ku\u03b1k \u22121 2\u2212\u03bb \u22121 )\u00b7 ku\u03b1 k3 2 uT \u03b1 (DDT + \u03b1I)\u22121u\u03b1 , = \u03b1\u2212 ku\u03b1 k2 2\u2212\u03bb \u2212 1ku\u03b1k3 2 kq\u03b1k2 2 , = \u03b1\u2212 ku\u03b1 k2 2 kq\u03b1k2 2  1\u2212 ku\u03b1 k2 \u03bb  , and therefore \u03b1\u2190\u03b1\u2212 ku\u03b1 k2 2 kq\u03b1k2 2  1\u2212 ku\u03b1 k2 \u03bb  . (3.6) As shown for TV-L1 (Appendix E), the tridiagonal structure of (DDT + \u03b1I) allows one to compute both R\u03b1 and q\u03b1 in linear time, so the overall iteration runs in O(n) time. The above ideas are presented as pseudocode in Algorithm 4. As a stopping criterion two conditions are checked: whether the duality gap is small enough, and whether u is close enough to the boundary. This latter check is useful because intermediate solutions could be dual-infeasible, thus making the duality gap an inadequate optimality measure on its own. In practice we use tolerance values  \u03bb = 10\u22126 and  gap = 10\u22125 . Even though Algorithm 4 requires only linear time per iteration, it is fairly sophisticated, and in fact a much simpler method can be devised. This is illustrated here by a gradient-projection method with a fixed stepsize \u03b10, whose iteration is u t+1 = Pk\u00b7k2 \u2264\u03bb(u t \u2212 \u03b10\u2207\u03c6(u t )). (3.7) The theoretically ideal choice for the stepsize \u03b10 is given by the inverse of the Lipschitz constant L of the gradient \u2207\u03c6(u) [13, 66]. Since \u03c6(u) is a convex quadratic, L is simply the largest eigenvalue of the Hessian DDT . Owing to its special structure, the eigenvalues of the Hessian have closed-form expressions, namely\u03bbi =2 \u22122cos  i\u03c0 n+1  (for1\u2264i\u2264n).Thelargestoneis\u03bbn = 2 \u22122cos  (n\u22121)\u03c0 n  , which tends to 4 as n \u2192 \u221e; thus the choice \u03b10 = 1/4 is a good and cheap approximation. Pseudocode showing the whole 14 Algorithm 4 MSN based TV-L2 proximity Initialize: \u03b1 = 0, u\u03b1 = 0. while    ku\u03b1k2 2\u2212\u03bb    > \u03bborgap(u\u03b1)> gapdo Compute Cholesky decomp. DD T + \u03b1I = RT \u03b1 R\u03b1. Obtain u\u03b1 by solving RT \u03b1R\u03b1u\u03b1 = Dy. Obtain q\u03b1 by solving RT \u03b1q\u03b1 = u\u03b1. \u03b1=\u03b1\u2212 ku\u03b1 k 2 2 kq\u03b1 k2 2  1\u2212 ku\u03b1k2 \u03bb  . end while return u\u03b1 Algorithm 5 GP algorithm for TV-L2 proximity Initialize u0 \u2208 RN, t =0. while (\u00ac converged) do Gradient update: vt = ut \u2212 1 4\u2207f(ut). Projection: ut+1 = max(1 \u2212 \u03bb/kvtk2, 0) \u00b7 vt. t\u2190t+1. end while return ut. procedure is presented in Algorithm 5. Combining this with the fact that the projection Pk\u00b7k2\u2264\u03bb is also trivial to compute, the GP iteration (3.7) turns out to be very attractive. Indeed, sometimes it can even outperform the more sophisticated MSN method, though only for a very limited range of \u03bb values. Therefore, in practice we recommend a hybrid of GP and MSN, as suggested by our experiments (see \u00a75.2.1). 3.2 TV-Lp: Proximity for Tv 1D p For TV-Lp proximity (for 1 < p < \u221e) the dual problem becomes min u \u03c6(u) := 1 2 kDT uk 2 2\u2212u T Dy, s.t. kukq \u2264\u03bb, (3.8) where q = 1/(1 \u2212 1/p). Problem (3.8) is not particularly amenable to Newton-type approaches, as neither PN (Appendix E), nor MSN-type methods (\u00a73.1) can be applied easily. It is partially amenable to gradient- projection (GP), for which the same update rule as in (3.7) applies, but unlike the q = 2 case, the projection step here is much more involved. Thus, to complement GP, we may favor the projection-free Frank-Wolfe (FW) method. As expected, the overall best performing approach is actually a hybrid of GP and FW. We summarize both choices below. 3.2.1 Efficient projection onto the `q -ball The problem of projecting onto the `q -norm ball is minw d(w) := 1 2kw\u2212uk 2 2, s.t. kwkq \u2264 \u03bb. (3.9) For this problem, it turns out to be more convenient to address its Fenchel dual minw d \u2217 (w) := 1 2kw\u2212uk 2 2 + \u03bbkwkp, (3.10) which is actually nothing but prox\u03bbk\u00b7kp (u). The optimal solution, say w\u2217 , to (3.9) can be obtained by solving (3.10), by using the Moreau-decomposition (A.6) which yields w \u2217 = u \u2212 prox\u03bbk\u00b7kp (u). 15 Projection (3.9) is computed many times within GP, so it is crucial to solve it rapidly and accurately. To this end, we first turn (3.10) into a differentiable problem and then derive a projected-Newton method following our approach presented in Appendix E. Assume therefore, without loss of generality that u \u2265 0, so that w \u2265 0 also holds (the signs can be restored after solving this problem). Thus, instead of (3.10), we solve minw d \u2217 (w) := 1 2kw\u2212uk 2 2+\u03bb X i w p i  1/p s.t.w\u22650. (3.11) The gradient of d\u2217 may be compactly written as \u2207d\u2217(w)=w \u2212u+\u03bbkwk 1\u2212p pw p\u22121 , (3.12) where wp\u22121 denotes elementwise exponentiation of w. Elementary calculation yields \u22022 \u2202wi\u2202wj d\u2217(w)=\u03b4ij 1+\u03bb(p\u22121) wi kwkp  p\u22122 kwk \u22121 p  +\u03bb(1\u2212p) wi kwkp  p\u22121 wj kwkp  p\u22121 kwk \u22121 p =\u03b4ij1\u2212c\u02c6w p\u22122 i  +c\u0304wi \u0304 wj, where c := \u03bb(1 \u2212 p)kwk\u22121 p,\u02c6 w := w/kwkp, \u0304 w := (w/kwkp)p\u22121 , and \u03b4ij is the Dirac delta. In matrix notation, this Hessian\u2019s diagonal plus rank-1 structure becomes apparent H(w)=Diag1\u2212c\u02c6w p\u22122  +c\u0304w \u00b7 \u0304 w T (3.13) To develop an efficient Newton method it is imperative to exploit this structure. It is not hard to see that for a set of non-active variables \u0304I the reduced Hessian takes the form H\u0304I(w)=Diag 1\u2212c \u02c6w p\u22122 \u0304 I  +c\u0304w \u0304I \u0304 w T \u0304 I. (3.14) Withtheshorthand\u2206=Diag 1\u2212c \u02c6w p\u22122 \u0304 I  , the matrix-inversion lemma yields H\u22121 \u0304 I (w)=\u2206+c\u0304w \u0304I \u0304 w T \u0304 I  \u22121 =\u2206 \u22121 \u2212 \u2206\u22121c \u0304w \u0304I \u0304 wT \u0304 I \u2206\u22121 1+c\u0304wT \u0304 I \u2206\u22121 \u0304 w\u0304I . (3.15) Furthermore, since in PN the inverse of the reduced Hessian always operates on the reduced gradient, we can rearrange the terms in this operation for further efficiency; that is, H\u0304I(w) \u22121 \u2207\u0304If(w) = v  \u2207\u0304If(w)\u2212 v \u0304w \u0304 I  v  \u0304w \u0304 I  T \u2207\u0304If(w) 1/c+\u0304w\u0304Iv \u0304w\u0304I  , (3.16) wherev:= 1\u2212c \u02c6w p\u22122 \u0304 I  \u22121 , and   denotes componentwise product. The relevant point of the above derivations is that the Newton direction, and thus the overall PN iteration can be computed in O(n) time, which results in a highly effective solver. 3.2.2 Frank-Wolfe algorithm for TV-Lp proximity The Frank-Wolfe (FW) algorithm (see e.g ., [42] for a recent overview), also known as the conditional gradient method [15] solves differentiable optimization problems over compact convex sets, and can be quite effective if we have access to a subroutine to solve linear problems over the constraint set. The generic FW iteration is illustrated in Algorithm 6. FW offers an attractive strategy for TV-Lp because both the descent-direction as well as stepsizes can be computed easily. Specifically, to find the descent direction we need to solve mins s T DDT u\u2212Dy  , s.t. kskq \u2264\u03bb. (3.17) This problem can be solved by observing that maxkskq \u22641 sT z is attained by some vector s proportional to z, of the form |s\u2217| \u221d |z|p\u22121 . Therefore, s \u2217 in (3.17) is found by taking z = DDT u \u2212 Dy, computing s = \u2212 sgn(z) |z| p\u22121 and then rescaling s to meet kskq = \u03bb. 16 Algorithm 6 Frank-Wolfe (FW) Inputs: f , compact convex set D. Initialize x0 \u2208 D, t = 0. while stopping criteria not met do Find descent direction: mins s \u00b7 \u2207f (xt ) s.t. s \u2208 D. Determine stepsize: min\u03b3 f (xt + \u03b3(s \u2212 xt)) s.t. \u03b3 \u2208 [0, 1]. Update: xt+1 = xt + \u03b3(s \u2212 xt) t\u2190t+1. end while return xt. The stepsize can also be computed in closed form owing to the objective function being quadratic. Note theupdateinFWtakestheformu+\u03b3(s\u2212u),whichcanberewrittenasu+\u03b3dwithd=s \u2212u. Usingthis notation the optimal stepsize is obtained by solving min\u03b3\u2208[0,1] 1 2kDT(u+\u03b3d)k2 2\u2212(u+\u03b3d)TDy. A brief calculation on the above problem yields \u03b3\u2217 = min{max{\u02c6\u03b3,1},0}, where \u02c6\u03b3 = \u2212(dT DD T u + dT Dy)/(dT DDT d) is the unconstrained optimal stepsize. We note that following [42] we also check a \u201csurrogate duality-gap\u201d g(x)=x T \u2207f(x) \u2212 min s\u2208D s T \u2207f(x)=(x\u2212s \u2217 )T \u2207f (x), at the end of each iteration. If this gap is smaller than the desired tolerance, the real duality gap is computed and checked; if it also meets the tolerance, the algorithm stops. 3.3 Prox operator for TV-L\u221e The final case is Tv 1D \u221e proximity. We mention this case only for completeness. The dual to the prox-operator here is minu 1 2 kDT uk 2 2\u2212u T Dy, s.t.kuk1 \u2264\u03bb. (3.18) This problem can be again easily solved by invoking GP, where the only non-trivial step is projection onto the `1-ball. But the latter is an extremely well-studied operation (see e.g., [48, 58]), and so O(n) time routines for this purpose are readily available. By integrating them in our GP framework an efficient prox solver is obtained. 4 Prox operators for multidimensional TV We now move onto discussing how use the efficient 1D-TV prox operators derived above within a prox-splitting framework to handle multidimensional TV (1.3) proximity. 4.1 Proximity stacking The basic composite objective (1.1) is a special case of the more general class of models where one may have several regularizers, so that we now solve minx f(x) + Xm i=1 ri (x), (4.1) 17 whereeachri(for1\u2264i\u2264m)islscandconvex. Just like the basic problem (1.1), the more complex problem (4.1) can also be tackled via proximal methods. The key to doing so is to use inexact proximal methods along with a technique we should call proximity stacking. Inexact proximal methods allow one to use approximately computed prox operators without impeding overall convergence, while proximity stacking allows one to compute the prox operator for the entire sum r(x) = Pm i=1 ri(x) by \u201cstacking\u201d the individual ri prox operators. This stacking leads to a highly modular design; see Figure 6 for a visualization. In other words, proximity stacking involves computing the prox operator proxr (y) := argmin x 1 2kx\u2212yk2 2+ Xm i=1 ri (x), (4.2) by iteratively invoking the individual prox operators proxri and then combining their outputs. This mixing is done by means of a combiner method, which guarantees convergence to the solution of the overall proxr (y). Proximal method + Proximity combiner ... Proximity operator Proximity operator Proximity operator Gradient operator Figure 6: Design schema in proximal optimization for minimizing the function f (x) + Pm i=1 ri (x). Proximal stacking makes the sum of regularizers appear as a single one to the proximal method, while retaining modularity in the design of each proximity step through the use of a combiner method. For non-smooth f the same schema applies by just replacing the f gradient operator by its corresponding proximity operator. Different proximal combiners can used for computing proxr (4.2). In what follows we briefly describe some of the possibilities. The crux of all of them is that their key steps will be proximity steps over the individual ri terms. Thus, using proximal stacking and combination, any convex machine learning problem with multiple regularizers can be solved in a highly modular proximal framework. After this section we exemplify these ideas by applying them to two- and higher-dimensional TV proximity, which we then use within proximal solvers for addressing a wide array of applications. 4.1.1 Proximal Dykstra (PD) The Proximal Dykstra method [27] solves problems of the form min x 1 2kx\u2212yk2 2 + r1(x) + r2(x), which is a particular case of (4.2) for m = 2. The method follows the procedure detailed in Algorithm 7, which is guaranteed to converge to the desired solution. Using PD for proximal stacking for 2D Total-Variation was previously proposed in [8]. It has also been shown that the application of this method is equivalent to performing alternating projections onto certain dual polytopes [43], a procedure whose effectiveness varies depending on the relative orientation of such polytopes. A more efficient method based on reflections instead of projections is possible, as we will see below. More generally, if more than two regularizers are present (i.e ., m > 2), then it is more fitting to use Parallel-Proximal Dykstra (PPD) [26] (see Alg. 8), a generalization obtained via the \u201cproduct-space trick\u201d of Pierra [69]. This parallel proximal method is attractive because it not only combines an arbitrary number of 18 Algorithm 7 Proximal Dykstra Inputs: r1, r2, input signal y \u2208 Rn . Initializex0=y,p0=q0=0,t =0. while stopping criteria not met do r2 proximity operator: zt = proxr2 (xt + pt). r2step:pt+1=xt+pt\u2212zt. r1 proximity operator: xt+1 = proxr1 (zt + qt). r1step:qt+1=zt+qt\u2212xt+1. t\u2190t+1. end while Return xt . Algorithm 8 Parallel-Proximal Dykstra Inputs:r1,...,rm,inputsignaly\u2208Rn . Initialize x0 = y, zi 0=0,fori=1,...,m;t=0 while stopping criterion not met do fori=1tominparalleldo pi t = proxri (zi t) end for xt+1 = 1 m P ipi t fori=1tominparalleldo zi t+1=xt+1+zi t\u2212pi t end for t\u2190t+1 end while Return xt regularizers, but also allows parallelizing the calls to the individual prox operators. This feature allows us to develop a highly parallel implementation for multidimensional TV proximity (\u00a74.3). 4.1.2 Alternating reflections \u2013 Douglas-Rachford (DR) The Douglas-Rachford (DR) method was originally devised for minimizing the sum of two (nonsmooth) convex functions [27], in the form: min x f1(x) + f2(x), (4.3) such that (ri dom f1) \u2229 (ri dom f2) 6 = \u2205. The method operates by iterating a series of reflections, and in its simplest form can be written as zk+1 = 1 2 [Rf1Rf2 +I]zk, (4.4) where the reflection operator R\u03c6 := 2 prox\u03c6 \u2212I . This method is not cleanly applicable to problem (4.2) because of the squared norm term. Nevertheless in [43] a suitable transformation was proposed by making use of arguments from submodular optimization; a minimal background on this topic is given in Appendix A. We summarize the key ideas from [43] below. Assume m = 2 and r1 , r2 being Lov \u0301asz extensions to some submodular functions (Total-Variation is the Lov \u0301asz extension of a submodular graph-cut problem, see [5]). Defining \u02c6r1(x) = r1 (x) \u2212 xT y, \u02c6 r1isalsoa Lov \u0301asz extension of some submodular function (see Appendix A). Therefore, we may consider the problem proxr (y) := argmin x 1 2 kxk 2 2 + \u02c6r1(x) + r2(x), 19 which can be rewritten (using Proposition A.11) as min a,b ka\u2212bk2, s.t. a\u2208\u2212B \u02c6 r1, b\u2208Br2, (4.5) where Br denotes the base polytope of submodular function corresponding to r (see Appendix A). The original solution can be recovered through x = a \u2212 b . Problem (4.5) is still not in a form amenable to DR (4.3)\u2014nevertheless, if we apply DR to the indicator functions of the sets \u2212B \u02c6 r1 , Br2 , that is, to the problem min x \u03b4\u2212B \u02c6 r1 (x) + \u03b4Br2 (x), it can be shown [12] that the sequence (4.4) generated by DR is divergent, but that after a correction through projection converges to the desired solution of (4.5). Such solution is given by the pair b=\u03a0Br2 (zk), a = \u03a0\u2212B \u02c6 r1 (b). (4.6) Although in this derivation many concepts have been introduced, suprisingly all the operations in the algorithm can be reduced to performing proximity steps. Note first that the projections onto a base polytope required to get a solution (4.6) can be written in terms of proximity operators (Proposition A.12), which in this case implies \u03a0Br2 (z)=z \u2212proxr2 (z), \u03a0\u2212B \u02c6 r1 (z) = z + prox\u02c6r2 (\u2212z) = z + proxr2 (\u2212z + y), where we use the fact that for f (x) = \u03c6(x) + uT x, proxf (x) = prox\u03c6 (x \u2212 u). The reflection operations in which the DR iteration is based (4.4) can also be written in terms of proximity steps, as we are applying DR to the indicator functions \u03b4\u2212B \u02c6 r1 , \u03b4Br2 , and proximity for an indicator function equals projection. This alternating reflections variant of DR is presented in Algorithm 9. Note that in contrast with the original DR method, this variant does not require tuning any hyperparameters, thus enhancing its practicality. Algorithm 9 Alternating reflections \u2013 Douglas Rachford (DR) Inputs: r1, r2 Lov \u0301asz extensions of some submodular function, input signal y \u2208 Rn . Initialize z0 \u2208 Rn ,t=0. Define the following operations: \u03a0\u2212B \u02c6 r1 (z) def = z+proxr1 (\u2212z + y). \u03a0Br2 (z) def = z \u2212proxr2 (z). R\u2212B \u02c6 r1 (z) def = 2\u03a0\u2212B \u02c6 r1 (z)\u2212z. RBr2 (z) def = 2\u03a0Br2 (z)\u2212z. while stopping criteria not met do zt+1 = 1 2  R\u2212B \u02c6 r1 RBr2 +I  zk t\u2190t+1. end while b=\u03a0Br2 (zt), a = \u03a0\u2212B \u02c6 r1 (b). Return x\u2217 =a\u2212b. 4.1.3 Alternating-Direction Method of Multipliers (ADMM) Although many times presented as a particular algorithm for solving problems involving the minimization of a certain objetive f (x) + g(Lx) with L a linear operator [27], the Alternating-Direction Method of Multipliers can be thought as general splitting strategy for solving the unconstrained minimization of a sum of functions. This strategy boils down to transforming a problem in the form minx Pm i=1 fi(x) into a saddle-point problem 20 Algorithm 10 Alternating Direction Method of Multipliers (ADMM) Inputs:r1,...,rm,inputsignaly\u2208Rn . Initialize x0 = zi 0=yfori=1,...,m;t=0 while stopping criterion not met do xt+1 = y+ Pm i=1 (u i t +\u03c1z i t) 1+m\u03c1 . fori=1tominparalleldo zi t = prox\u03bb \u03c1ri (\u2212 1 \u03c1ui t + xt+1) ui t+1 = ut+1 + \u03c1(zi t+1 \u2212 xt+1) end for t\u2190t+1 end while Return xt by introducing consensus constraints and incorporating them into the objective through augmented Lagrange multipliers, min x m X i=1 fi(x) = min x,z1 ,...,zm m X i=1 fi(zi) s.t.z1 =x,...,zm=x, \u2261 min x,z1 ,...,zm max u1,...,um m X i=1  fi(zi) + u T i(zi\u2212x)+ \u03c1 2 kzi \u2212 xk2  . The method then proceeds to solve this problem by alternating steps of minimization on x, minimization on every zi , and a gradient step on every ui . In [95] a proposal using this method was presented to solve m\u2013dimensional anisotropic TV (1.3). This approach applies equally to the more general proximal stacking framework under discussion here (4.2), by the transformation proxr (y) := argmin x 1 2kx\u2212yk2 2+ Xm i=1 ri (x), \u2261 min x,z1,...,zm max u1,...,um 1 2kx\u2212yk2 2+ m X i=1  fi(zi) + u T i(zi\u2212x)+ \u03c1 2 kzi \u2212 xk2  . The steps for obtaining a solution then follow as Algorithm 10. Similar to Parallel Proximal Dykstra, this approach allows computing the prox-operator of each function ri in parallel. 4.1.4 Dual proximity methods Another family of approaches to solve (4.2) is to compute the global proximity operator using the Fenchel duals proxr\u2217 i . This can be advantageous in settings where dual prox-operator is easier to compute than the primal operator; isotropic Total-Variation problems are an instance of such a setting, and thus investigating this approach for their anisotropic variants is worthwhile. Indeed, in the context of image processing a popular splitting approach is given by Chambolle and Pock [22], which consider a problem in the form min x F (Kx) + G(x), for K some linear operator, F , G convex lower-semicontinuous functions. Through a strategy similar to ADMM an equivalent saddle point problem can be obtained, min x max y (Kx) T y+G(x)\u2212F \u2217 (y), 21 with F \u2217 convex conjugate of F . This problem is then solved by alternating maximization on y and minimiza- tion on x through proximity steps, as yt+1 = prox\u03c3F \u2217 (yt + \u03c3K \u0304xt) xt+1 = prox\u03c4G(xt \u2212 \u03c4K \u2217 yt+1) \u0304 xt+1 = xt+1 + \u03b8(xt+1 \u2212 xt), where K \u2217 is the conjugate transpose of K . \u03c3 , \u03c4 and \u03b8 are algorithm parameters that should be either selected under some bounds [22, Algorithm 1] or readjusted every iteration making use of Lipschitz convexity of G [22, Algorithm 2], resulting in an accelerating scheme much in the style of FISTA [13]. The overall procedure can also be shown to be an instance of preconditioned ADMM, where the preconditioning is given by the application of a proximity step for the maximization of y (instead of the usal dual gradient step of ADMM) and the auxiliary point \u0304x. Note also how proximity is computed over the dual F \u2217 instead of the primal proxF . Now, this decomposition strategy can be applied for some instances of proximal stacking (4.2) when the ri terms allow the particular composition m X i=1 ri(x) = F \uf8eb \uf8ec \uf8ed \uf8ee \uf8ef \uf8f0 K1 . . . Km \uf8f9 \uf8fa \uf8fbx \uf8f6 \uf8f7 \uf8f8= F(Kx), which does not hold in general but holds for 2D TV (1.4) when taking the identities F(x) =kxk1,G(x) = 1 2kx\u2212yk2 2, K=  I\u2297D D\u2297I  , with D the differencing matrix as before, \u2297 denotes Kronecker product, and x a vectorization of the 2D input. The iterates above can then be applied easily: proximity over G is trivial and proximity over F \u2217 is also easy upon realizing that proxk\u00b7k \u2217 1 = prox\u03b4k\u00b7k\u221e\u22641 = \u03a0k\u00b7k\u221e\u22641 , which is solved through thresholding. A generalization of this approach is presented by Condat [29], who considers min x f(x) + g(x) + m X i=1 ri (Lix), a problem that cleanly fits into (4.2) with f (x) = 1 2kx\u2212yk2 2,g(x)=0,L =I.Theproceduretofinda solution is proposed as \u0304 x t+1 = prox\u03c4g\u2217 x t \u2212 \u03c4 \u2207f(x t )\u2212\u03c4 m X i=1 L\u2217 iu t i ! xn+1=\u03c1\u0304x t+1+(1\u2212\u03c1)x t \u0304 u t+1 i = prox\u03c3h\u2217 i (u t i+\u03c3Li(2\u0304xt+1\u2212xt)) \u2200i=1,...,m, u t+1 i =\u03c1\u0304u t+1 i +(1\u2212\u03c1)u t i \u2200i=1,...,m, for \u03c4 , \u03c1 parameters of the algorithm. When applying this procedure to 2D TV (m = 2, r1 (x) = proximity over rows, r2 (x) = proximity over columns) an algorithm almost equivalent to Chambolle and Pock [22] is obtained, the only difference being that here the gradient of f is used, instead of the proxG operation. 22 Finally, another related method is the splitting approach of Kolmogorov et al [51], which for m = 2 performs the following splitting: min x 1 2kx\u2212yk2 2 + r1(x) + r2(x), \u2261 min x,x0 kx\u2212yk2 2+r1(x)+r2(x 0 )s.t.x=x 0 , \u2261 min x,x0 max z kx\u2212yk2 2+r1(x)+r2(x 0 )+z T (x\u2212x 0 ), \u2261 min x max z kx\u2212yk2 2+r1(x)\u2212r \u2217 2(z)+x T z. where we have made use of the Fenchel dual r\u2217 2(z) = maxx0 zTx0 \u2212 r2 (x0 ). This problem can be solved through a primal-dual minimization: z t+1 = prox\u03c3tr\u2217 2 z t + \u03c3t(x t + \u03b8t(x t \u2212 x t\u22121 ))  , x t+1 = prox\u03c4 t(k\u00b7\u2212 yk2 2+r1) x t \u2212 \u03c4 t z t+1   . The primal proximity operator over the squared norm term plus r1 can be rewritten in terms of proxr1 as prox \u03c4(r1+ 1 2k\u00b7\u2212yk2 2)(w) = argmin x r1(x) + 1+\u03c4\u22121 2 kx\u2212(1+\u03c4 \u22121 )\u22121 (y+\u03c4 \u22121 w)k 2 2, = prox(1+\u03c4 \u22121 )\u22121 r1 (1+\u03c4 \u22121 )\u22121 (y+\u03c4 \u22121 w)  . Regarding the dual step, in the previously presented methods the decompositions allowed to disentangle the effect of a linear operator Li from each ri . The present decomposition, however, does not take into account this possibility, thus increasing the complexity of computing r\u2217 2 . To address this difficulty the Moreau decomposition (A.3) is helpful, as prox\u03c3r\u2217 2 (w)=w\u2212\u03c3  argmin x r2(x) + \u03c3 2 kx\u2212\u03c3 \u22121 wk 2 2  , = w \u2212 \u03c3 prox\u03c3\u22121r2 (\u03c3 \u22121 w), thus solving the dual proximity operator in terms of the primal proxr2 . Regarding the algorithm parameters \u03b8, \u03c4 and \u03c3 , they can be adjusted at every iteration for greater performance making use of Lipschitz convexity [23]. 4.2 Two-dimensional TV Recall that for a matrix X \u2208 Rn1 \u00d7n2 , the anisotropic 2D-TV regularizer takes the form Tv 2 p,q (X) := Xn1 i=1  Xn2 \u22121 j=1 |xi,j+1 \u2212 xi,j |p 1/p + Xn2 j=1  Xn1 \u22121 i=1 |xi+1,j \u2212 xi,j |q 1/q . (4.7) This regularizer applies a Tv 1D p regularization over each row of X , and a Tv 1D q regularization over each column. Introducing differencing matrices Dn and Dm for the row and column dimensions, the regularizer (4.7) can be rewritten as Tv2D p,q(X) = Xn i=1 kDn xi,: kp + Xm j=1 kDm x:,j kq , (4.8) where xi,: denotes the i-th row of X , and x:,j its j-th column. The corresponding Tv2D p,q -proximity problem is minX 1 2kX\u2212Yk2 F +\u03bbTv2D p,q (X), (4.9) where we use the Frobenius norm kXkF = qP ij x2 i,j = kvec(X)k2 , where vec(X) is the vectorization of X. Using (4.8), problem (4.9) becomes minX 1 2kX\u2212Yk2 F+\u03bb  X i kDn xi,:kp  +\u03bb  X j kDmx:,j kq  , (4.10) 23 where the parentheses make explicit that Tv2D p,q is a combination of two regularizers: one acting over the rows and the other over the columns. Formulation (4.10) fits the model solvable by the strategies presented above, though with an important difference: each of the two regularizers that make up Tv2D p,q is itself composed of a sum of several (n or m) 1D-TV regularizers. Moreover, each of the 1D row (column) regularizers operates on a different row (columns), and can thus be solved independently. 4.3 Higher-dimensional TV Going even beyond Tv2D p,q is the general multidimensional TV (1.3), which we recall below. Let X be an order-m tensor in R Qm j=1 nj , whose components are indexed as Xi1,i2,...,im (1 \u2264 ij \u2264 nj for 1\u2264j\u2264m);wedefineTVforXas Tv m p (X) def = m X k=1 X {i1,...,im}\\ik  nk \u22121 X j=1 |Xi1,...,ik\u22121 ,j+1,ik+1,...,im \u2212 Xi1,...,ik\u22121,j,ik+1,...,im| pk  1/pk , (4.11) where p = [p1, . . . , pm] is a vector of scalars pk \u2265 1. This corresponds to applying a 1D-TV to each of the 1D fibers of X along each of the dimensions. Introducing the multi-index i(k) = (i1 , . . . , ik\u22121 , ik+1, . . . , im), which iterates over every 1-dimensional fiber of X along the k-th dimension, the regularizer (4.11) can be written more compactly as Tv m p(X)= Xm k=1 X i(k) kDnk xi(k)kpk , (4.12) where xi(k) denotes a row of X along the k-th dimension, and Dnk is a differencing matrix of appropriate size for the 1D-fibers along dimension k (of size nk ). The corresponding m-dimensional-TV proximity problem is minX 1 2kX\u2212Yk2 F+\u03bbTv m p (X), (4.13) where \u03bb > 0 is a penalty parameter, and the Frobenius norm for a tensor just denotes the ordinary sum-of- squares norm over the vectorization of such tensor. Problem (4.13) looks very challenging, but it enjoys decomposability as suggested by (4.12) and made more explicit by writing it as a sum of Tv1D terms minX 1 2kX\u2212Yk2 F+ Xm k=1 X i(k) Tv1D pk xi(k)  . (4.14) The proximity task (4.14) can be regarded as the sum of m proximity terms, each of which further decomposes into a number of inner Tv 1D terms. These inner terms are trivial to address since, as in the 2D-TV case, each of the Tv 1D terms operates on different entries of X. Regarding the m major terms, we can handle them by applying any of the combiner strategies presented above for m > 2, which ultimately yield the prox operator for Tv m p by just repeatedly calling Tv1D prox operators. Most importantly, both proximal stacking and the natural decomposition of the problem provide a vast potential for parallel multithreaded computing, which is valuable when dealing with such complex and high-dimensional data. 5 Experiments and Applications We will now demostrate the effectiveness of the various solvers covered in a wide array of experiments, as well as showing many of their practical applications. We will start by focusing on the Tv 1D 1 methods, moving then to other 1D-TV variants, and then to multidimensional TV. All the solvers implemented for this paper were coded in C++ for efficiency. Our publicy available library proxTV includes all these implementations, plus bindings for easy usage in Matlab or Python: https://github.com/albarji/proxTV. Matrix operations have been implented by exploiting the LAPACK (F O R T R A N) library [3]. 24 5.1 Tv 1D 1 experiments and Applications Since the most important components of the presented modular framework are the efficient Tv1D 1 prox operators, let us begin by highlighting their empirical performance. We will do so both on synthetic and natural images data. 5.1.1 Running time results for synthetic data We test the solvers under two scenarios of synthetic signals: I) Increasing input size ranging from n = 101 to n = 107 . A penalty \u03bb \u2208 [0, 50] is chosen at random for each run, and the data vector y with uniformly random entries yi \u2208 [\u22122\u03bb, 2\u03bb] (proportionally scaled to \u03bb). II) Varying penalty parameter \u03bb ranging from 10\u22123 (negligible regularization) to 103 (the TV term domi- nates); here n is set to 1000 and yi is randomly generated in the range [\u22122, 2] (uniformly). Problem size 102 104 106 T i m e ( s ) 10 -4 10 -2 100 TV1 increasing sizes Projected Newton Classic Taut-String Linearized Taut-String Hybrid Taut-String Condat Johnson SLEP Condat Taut-string Kolmogorov (a) Penalty \u03bb 10 -2 100 102 T i m e ( s ) 10 -4 10 -3 10 -2 TV1 increasing penalties (b) Figure 7: Running times (in secs) for proposed and state of the art solvers for Tv 1D 1 -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. We benchmark the performance of the following methods, including both our proposals and state of the art methods found in the literature: \u2022 Our proposed Projected Newton method (Appendix E). \u2022 Our efficient implementation of the classic taut string method. \u2022 Another implementation of the classic taut string method by Condat [28]. \u2022 An implementation of the linearized taut string method. \u2022 Our proposed hybrid taut string approach. \u2022 The FLSA function (C implementation) of the SLEP library of Liu et al. [59] for Tv 1D 1 -proximity [60]. \u2022 The state-of-the-art method of Condat [28], which we have seen to be equivalent to a linearized taut-string method. \u2022 The dynamic programming method of Johnson [45], which guarantees linear running time. \u2022 The message passing method of Kolmogorov et al [51], which allows generalization for computing a Total Variation regularizer on a tree. 25 Another implementation of the classic taut string method, found in the literature, has been added to the benchmark to test whether the implementation we have proposed is on par with the state of the art. We would like to note the surprising lack of widely available implementations of this method: the only working and efficient code we could find was part of the same paper where Condat\u2019s method was proposed. For Projected Newton and SLEP a duality gap of 10\u22125 is used as the stopping criterion. For the hybrid taut-string method the switch parameter is set as S = 1.05 . The rest of algorithms do not have parameters. Timing results are presented in Figure 7 for both experimental scenarios. The following interesting facts are drawn from these results \u2022 Direct methods (Taut string methods, Condat, Johnson, Kolmogorov) prove to be much faster than iterative methods (Projected Newton, SLEP). \u2022 Although Condat\u2019s (and hence linearized taut string) method, has a theoretical worst-case performance of O(n2), the practical performance seems to follow an O(n) behavior, at least for these synthetic signals. \u2022 Even if Johnson and Kolmogorov methods have a guaranteed running time of O(n), they turn out to be slower than the linearized taut string and Condat\u2019s methods. This is in line with our previous observations of the cache-friendly properties of in-memory methods; in contrast Johnson\u2019s method requires an extra \u223c 8n memory storage. Kolmogorov\u2019s method has less memory requirements but nevetheless shows similar behavior. \u2022 The same performance observation applies to the classic taut string method. It is also noticeable that our implementation of this method turns out to be faster than previously available implementations (Condat\u2019s Taut-string), even becoming slightly faster than the state of the art Johnson and Kolmogorov methods. This result is surprising, and shows that the full potential of the classic taut-string method has been largely unexploited by the research community, or at least that proper efficient implementations of this method have not been made readily available so far. 5.1.2 Worst case scenario The point about comparing O(n) and O(n2 ) algorithms deserves more attention. As an illustrative experiment we have generated a signal following the worst case description in Condat [28], and tested again the methods above on it, for increasing signal lengths. Figure 8 plots the results. Condat\u2019s method and consequently the linearized taut string method shows much worse performance than the rest of the direct methods. It is also remarkable how the hybrid method manages to avoid quadratic runtimes in this case. 5.1.3 Running times on natural images In the light of the previous results the following question arises: in practical settings, are the problems to be solved closer to the worst or the average runtime scenario? This fact will determine whether the guaranteed linear time or the more risky quadratic methods are more apt for practical use. To test this we devise the following experiment: we take a large benchmark of natural images and run each solver over all the rows and columns of all the images in the set, counting total running times, for different regularization values. The benchmark is made from images obtained from the datasets detailed in Table 2. We run this benchmark for the methods showing better performance in the experiments above: our implementation of the classic taut-string method, Condat\u2019s method (\u2261 linearized taut-string method), our proposed Hybrid taut-string method, Johnson\u2019s method and Kolmogorov et al\u2019s method. Figure 9 shows runtime results for different penalty values over the whole INRIA holidays dataset [44], while Figure 10 shows similar results for the whole Large Scale Visual Recognition Challenge 2010 validation dataset [77]. The following facts of interest can be observed: \u2022 Condat\u2019s method (linearized taut-string) shows top performance for low penalty values, but bad scaling when moving to higher penalties. This can be explained using the geometric intuition developed above: 26 Figure 8: Running times (in secs) for proposed and state of the art solvers for Tv 1D 1 -proximity in the worst-case scenario for Condat\u2019s method, for increasing input sizes. Both axes are on a log-scale. Table 2: Detail of image datasets used for large-scale Tv 1D 1 experiments. Dataset Images Average image size INRIA holidays [44] 812 1817\u00d72233\u00d73px LSVRC 2010 val set [77] 50000 391 \u00d7 450 \u00d7 3 px for large penalty values the width of the tube is very large, and thus the taut-string will be composed of very long segments. This is troublesome for a linearized taut-string method, as each backtrack will require recomputing a large number of steps. On the contrary for smaller penalties the tube will be narrow, and the taut-string composed of many small segments, thus resulting in very cheap backtracking costs. \u2022 The performance of Classic taut-string, Johnson and Kolmogorov becomes slightly worse for large penalties, but suffers significantly less than the linearized taut-string. Surprisingly, the best performing approach tends to be the classic taut-string method. \u2022 The proposed hybrid strategy closely follows the performance of Condat\u2019s method for the low penalty regime, while adapting to a behaviour akin to Kolmogorov for large penalties, thus resulting in very good performances over the whole regularization spectrum. 27 Figure 9: Running times (in secs) for the top performing proposed and state of the art solvers for Tv 1D 1- proximity over the whole INRIA Holidays dataset, for increasing penalties. 5.1.4 Running time results for weighted TV-L1 An advantage of the solvers proposed in this paper is their flexibility to easily deal with the more difficult, weighted version of the TV-L1 proximity problem. To illustrate this, Figure 11 shows the running times of the Projected Newton and (linearized) Taut String methods when solving both the standard and weighted TV-L1 prox operators. Since for this set of experiments a whole vector of weights w is needed, we have adjusted the experimental scenarios as follows: I) n is generated as in the general setting, penalties w \u2208 [0, 100] are chosen at random for each run, and the data vector y with uniformly random entries yi \u2208 [\u22122\u03bb, 2\u03bb], with \u03bb the mean of w, using also this \u03bb choice for the uniform (unweighted) case. II) \u03bb and n are generated as in the general setting, and the weights vector w is drawn randomly from the uniform distribution wi \u2208 [0.5\u03bb, 1.5\u03bb]. As can be readily observed, performance for both versions of the problem is almost identical, even if the weighted problem is conceptually harder. Conversely, adapting the other reviewed algorithms to address this problem while keeping up with performance is not a straightforward task. We would also like to point out that in the paper [53] a practical application of this method for energy minimization in computer vision is presented, where exactly the code behind this paper has been put to use. 28 Figure 10: Running times (in secs) for the top performing proposed and state of the art solvers for Tv 1D 1- proximity over the whole Large Scale Visual Recognition Challenge 2010 validation dataset, for increasing penalties. 5.2 Experiments for other 1D-TV variants 5.2.1 Running time results for TV-L2 Next we show results for Tv 1D 2 proximity. To our knowledge, this version of TV has not been explicitly treated before, so there do not exist highly-tuned solvers for it. Thus, we show running time results only for the MSN and GP methods. We use a duality gap of 10\u22125 as the stopping criterion; we also add an extra boundary check for MSN with tolerance 10\u22126 to avoid early stopping due to potentially infeasible intermediate iterates. Figure 12 shows results for the two experimental scenarios under test. The results indicate that the performance of MSN and GP differs noticeably in the two experimental scenarios. While the results for the first scenario (Figure 12(a)) might suggest that GP converges faster than MSN for large inputs, it actually does so depending on the size of \u03bb relative to kyk2 . Indeed, the second scenario (Figure 12(b)) shows that although for small values of \u03bb, GP runs faster than MSN, as \u03bb increases, GP\u2019s performance worsens dramatically, so much that for moderately large \u03bb, it is unable to find an acceptable solution even after 10,000 iterations (an upper limit imposed in our implementation). Conversely, MSN finds a solution satisfying the stopping criterion under every situation, thus showing a more robust behavior. These results suggest that it is preferable to employ a hybrid approach that combines the strengths of MSN and GP. Such a hybrid approach is guided using the following (empirically determined) rule of thumb: if \u03bb < kyk2 use GP, otherwise use MSN. Further, as a safeguard, if GP is invoked but fails to find a solution within 50 iterations, the hybrid should switch to MSN. This combination guarantees rapid convergence in 29 10 2 10 4 10 6 10 \u22124 10 \u22122 10 0 10 2 Problem size T i m e ( s ) TV1 increasing sizes Projected Newton (Weighted) Projected Newton (Uniform) Taut String (Weighted) Taut String (Uniform) (a) 10 \u22122 10 0 10 2 10 \u22124 10 \u22123 10 \u22122 10 \u22121 Penalty \u03bb T i m e ( s ) TV1 increasing penalties Projected Newton (Weighted) Projected Newton (Uniform) Taut String (Weighted) Taut String (Uniform) (b) Figure 11: Running times (in secs) for Projected Newton and Taut String solvers for weighted and uniform Tv1D 1 -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. 10 2 10 4 10 6 10 \u22124 10 \u22123 10 \u22122 10 \u22121 10 0 10 1 Problem size T i m e ( s ) TV2 increasing sizes MSN GP MSN+GP (a) 10 \u22122 10 0 10 2 10 \u22124 10 \u22123 10 \u22122 10 \u22121 10 0 Penalty \u03bb T i m e ( s ) TV2 increasing penalties MSN GP MSN+GP (b) Figure 12: Running times (in secs) for MSN, GP and a hybrid MSN+GP approach for Tv 1D 2 -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. practice. Results for this hybrid approach are also included in the plots in Figure 12, and show how it successfully mimics the behavior of the better algorithm amongst MSN and GP. 5.2.2 Running time results for TV-Lp Now we show results for Tv 1D p proximity. Again, to our knowledge efficient solvers for this version of TV are not available; still proposals for solving the `q -ball projection problem do exist, such as the epp function in SLEP library [59], based on a zero finding approach. Consequently, we present here a comparison between this reference projection subroutine and our PN\u2013based projection when embedded in our proposed Gradient Projection solver of \u00a73.2 . The alternative proposal given by the Frank\u2013Wolfe algorithm of \u00a73.2.2 is also present in the comparison. We use a duality gap of 10\u22125 as stopping criterion both for GP and FW. Figure 13 shows results for the two experimental scenarios under test, for p values of 1.5, 1.9 and 3. 30 101 102 103 104 105 106 10\u22124 10\u22122 10 0 102 10 4 Problem size T i m e ( s ) TVp increasing sizes p=1.5 GP\u2212PN GP\u2212SLEP FW GP+FW (a) 101 102 103 104 105 106 10\u22124 10\u22122 10 0 102 10 4 Problem size T i m e ( s ) TVp increasing sizes p=1 .9 GP\u2212PN GP\u2212SLEP FW GP+FW (b) 101 102 103 104 105 106 10\u22124 10\u22122 10 0 102 10 4 Problem size T i m e ( s ) TVp increasing sizes p=3 GP\u2212PN GP\u2212SLEP FW GP+FW (c) Figure 13: Running times (in secs) for GP with PN projection, GP with SLEP\u2019s epp projection, FW and a hybrid GP+FW algorithm, for Tv 1D p -proximity with increasing input sizes and three different choices of p. Both axes are on a log-scale. 10\u22124 10\u22122 100 102 104 10\u221220 10\u221215 10\u221210 10\u22125 100 \u03bb D u a l g a p TVp increasing penalties p=1.5 GP\u2212PN GP\u2212SLEP FW GP+FW (a) 10\u22124 10\u22122 100 102 104 10\u221220 10\u221215 10\u221210 10\u22125 100 105 \u03bb D u a l g a p TVp increasing penalties p=1.9 GP\u2212PN GP\u2212SLEP FW GP+FW (b) 10\u22124 10\u22122 100 102 104 10\u221220 10\u221215 10\u221210 10\u22125 100 \u03bb D u a l g a p TVp increasing penalties p=3 GP\u2212PN GP\u2212SLEP FW GP+FW (c) 10\u22124 10\u22122 100 102 104 10\u22124 10\u22122 10 0 102 104 \u03bb T i m e ( s ) TVp increasing penalties p=1 .5 GP\u2212PN GP\u2212SLEP FW GP+FW (d) 10\u22124 10\u22122 100 102 104 10\u22124 10\u22122 10 0 102 104 \u03bb T i m e ( s ) TVp increasing penalties p=1 .9 GP\u2212PN GP\u2212SLEP FW GP+FW (e) 10\u22124 10\u22122 100 102 104 10\u22124 10\u22122 10 0 102 104 \u03bb T i m e ( s ) TVp increasing penalties p=3 GP\u2212PN GP\u2212SLEP FW GP+FW (f) Figure 14: Attained duality gaps (a-c) and running times (d-f, in secs) for GP with PN projection, GP with SLEP\u2019s epp projection, FW and a hybrid GP+FW algorithm, for Tv 1D p -proximity with increasing penalties and three different choices of p. Both axes are on a log-scale. A number of interesting conclusions can be drawn from the results. First, our Projected Newton `q -ball subroutine is far more efficient than epp when in the context of the GP solver. Two factors seem to be the cause of this: in the first place our Projected Newton approach proves to be faster than the zero finding method used by epp. Secondly, in order for the GP solver to find a solution within the desired duality gap, the projection subroutine must provide very accurate results (about 10\u221212 in terms of duality gap). Given its Newton nature, our `q -ball subroutine scales better in term of running times as a factor of the desired accuracy, which explains he observed differences in performance. 31 It is also of relevance noting that Frank\u2013Wolfe is significantly faster than Projected Newton. This should discourage the use of Projected Newton, but we find it to be extremely useful in the range of \u03bb penalties where \u03bb is large, but not enough to render the problem trivial (w = 0 solution). In this range the two variants of PN and also FW are unable to find a solution within the desired duality gap (10\u22125), getting stuck at suboptimal solutions. We solve this issue by means of a hybrid GP+FW algorithm, in which updates from both methods are interleaved at a ratio of 10 FW updates per 1 GP update, as FW updates are faster. As both algorithms guarantee improvement in each iteration but follow different procedures for doing so, they complement each other nicely, resulting a superior method attaining the objective duality gap and performing faster than GP. 5.2.3 Running time results for TV-L\u221e For completeness we also include results for our Tv 1D \u221e solver based on GP + a standard `1 -projection subroutine. Figure 15 presents running times for the two experimental scenarios under test. Since `1 -projection is an easier problem than the general `q -projection the resultant algorithm converges faster to the solution than the general GP Tv1D p prox solver, as expected. 102 104 106 10 \u22124 10 \u22123 10\u22122 10\u22121 10 0 10 1 102 Problem size T i m e ( s ) TV\u221e increasing sizes GP (a) 10 \u22122 10 0 10 2 10 \u22123 10\u22122 10\u22121 Penalty \u03bb T i m e ( s ) TV\u221e increasing penalties GP (b) Figure 15: Running times (in secs) for GP for Tv 1D \u221e -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. 5.2.4 Application: Proximal optimization for Fused-Lasso We now present a key application that benefits from our TV prox operators: Fused-Lasso (FL) [86], a model that takes the form min x 1 2kAx\u2212yk2 2 + \u03bb1kxk1 + \u03bb2Tv 1D 1 (x). (5.1) The `1 -norm in (5.1) forces many xi to be zero, while Tv 1D 1 favors nonzero components to appear in blocks of equal values xi\u22121 = xi = xi+1 = . . .. The FL model has been successfully applied in several bioinformatics applications [34, 72, 85], as it encodes prior knowledge about consecutive elements in microarrays becoming active at once. Following the ideas presented in Sec. 4, since the FL model uses two regularizers, we can use Proximal Dykstra as the combiner to handle the prox operator. To illustrate the benefits of this framework in terms of reusability, we apply it to several variants of FL. \u2022 Fused-Lasso (FL): Least-squares loss +`1 + Tv 1D 1 as in (5.1) \u2022 `p-Variable Fusion (VF): Least-squares loss +`1 + Tv 1D p . Though Variable Fusion was already studied by Land and Friedman [54], their approach proposed an ` p p-like regularizer in the sense that 32 Fused Lasso Soft-th PN solver FISTA Variable Fusion Soft-th MSN solver FISTA PD Logistic Fused Lasso Soft-th PN solver FISTA Log. Variable Fusion Soft-th MSN solver FISTA PD Figure 16: Fused-Lasso models addressed by proximal splitting. r(x) = Pn\u22121 i=1 |xi+1 \u2212 xi|p is used instead of the TV regularizer Tv 1D p(x)=  Pn\u22121 i=1 |xi+1 \u2212 xi|p 1/p . Using Tvp leads to a more conservative penalty that does not oversmooth the estimates. This FL variant seems to be new. \u2022 Logistic-fused lasso (LFL): Logistic-loss +`1 + Tv 1D 1 , where the loss takes the form `(x, c) = P i log  1 + e\u2212yi(a T i x+c)  , and can be used in a FL formulation to obtain models more appropri- ate for classification on a dataset {(ai, yi)} [50]. \u2022 Logistic + `p-fusion (LVF): Logistic loss +`1 + Tv 1D p. To solve these variants of FL, all that remains is to compute the gradients of the loss functions, but this task is trivial. Each of these four models can be then solved easily by invoking any proximal splitting method by appropriately plugging in gradient and prox operators. Incidentally, the SLEP library [60] includes an implementation of FISTA [13] carefully tuned for Fused Lasso, which we base our experiments on. Figure 16 shows a schematic of the algorithmic modules for solving each FL model. Remark: A further algorithmic improvement can be obtained by realizing that for r(x) = \u03bb1kxk1 + \u03bb2Tv 1D 1 (x) the prox operator proxr \u2261 prox\u03bb1k\u00b7k1 \u25e6 prox\u03bb2Tv1D 1 (\u00b7) . Such a decomposition does not usually hold, but it can be shown to hold for this particular case [73, 86, 96]. Therefore, for FL and LFL we can compute the proximal operator for the combined regularizer r directly, thus removing the need for a combiner algorithm. This is also shown in Figure 16. 5.2.5 Fused-Lasso experiments: simulation The standard FL model has been well-studied in the literature, so a number of practical algorithms addressing it have already been proposed. The aforementioned Fused-Lasso algorithm in the SLEP library can be regarded as the state of the art, making extensive use of an efficient proximity subroutine (FLSA). Our experiments on Tv 1D 1 -proximity (\u00a75.1) have already shown superiority of our prox solvers over FLSA; what remains to be checked is whether this benefit has a significant impact on the overall FL solver. To do so, we compare running times with synthetic data. We generate random matrices A \u2208 Rn\u00d7m with i.i .d. entries drawn from a zero mean, unit variance gaussian. We set the penalties to \u03bb1 = \u03bb2 = 10. We select the vector of responses y using the formula y = sgn(Axt + v), where xt , and v are random vectors whose entries have variances 1 and 0.01, respectively. 33 The numerical results are summarized in Figure 17, which compares out of the box SLEP (version 4.0) [59] against the very same algorithm employing our fast taut\u2013string Tv1D 1 solver instead of the default FLSA subroutine of SLEP. Comparison is done by showing the relative distance to the problem\u2019s optimum versus time. The optimal values in each setting were estimated by running both algorithms for a very large number of iterations. 101 102 10\u22123 10 \u22122 10 \u22121 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 50 x 5000000 SLEP SLEP+Taut\u2212String 100 101 102 10 \u22123 10 \u22122 10\u22121 10 0 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 100 x 2000000 SLEP SLEP+Taut\u2212String 100 101 102 10 \u22123 10\u22122 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 200 x 1000000 SLEP SLEP+Taut\u2212String 100 101 102 10\u22123 10\u22122 10 \u22121 100 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 500 x 500000 SLEP SLEP+Taut\u2212String 100 101 102 10 \u22123 10\u22122 10 \u22121 100 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 1000 x 200000 SLEP SLEP+Taut\u2212String 100 101 102 10 \u22123 10\u22122 10\u22121 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Fused Lasso matrix 2000 x 100000 SLEP SLEP+Taut\u2212String Figure 17: Relative distance to optimum vs time of the Fused Lasso optimizers under comparison, for the different layouts of synthetic matrices. The plots show a clear trend: when the input matrices feature a very large column dimension the use of our taut-string Tv1D 1 solver turns into speedups in optimization times, which however become negligible for matrices with a more balanced rows/columns ratio. This result is reasonable, as the vector x under optimization has size equal to the number of columns of the data matrix A. If A has a large number of columns the cost of solving Tv1D 1 is significant, and thus any improvement in this step has a noticeable impact on the overall algorithm. Conversely, when the number of rows in A is large the cost of computing the gradient of the loss function (\u2207 1 2kAx\u2212yk2 2 = AT (Ax \u2212 y)) dominates, getting limited benefits from such improvements in prox computations. Therefore, it is for data with a very large number of features where our proposed method can provide a useful speedup. 5.2.6 Fused-Lasso Experiments: Microarray classification Now we report results of applying the four FL models on a series of problems from bioinformatics. We test the FL models on binary classification tasks for the following real microarray datasets: ArrayCGH [83], Leukemias [37], Colon [88], Ovarian [75] and Rat [40]. Each dataset was split into three equal parts (ensuring similar proportion of classes in every split) for training, validation and test. The penalty parameters were found by exhaustive grid search in the range \u03bb1, \u03bb2 \u2208 [10\u22124 , 102] to maximize classification accuracy on the validation splits. 34 Table 3: Classification accuracies for the presented Fused\u2013Lasso models on microarray data. For the Variable Fusion models an `2 version of TV was employed. Dataset FL VF-`2 LFL LVF-`2 ArrayCGH 73.6% 73.6% 84.2% 73.6% Leukemias 92.0% 88.0% 92.0% 88.0% Colon 77.2% 77.2% 77.2% 77.2% Ovarian 88.8% 83.3% 83 .3% 83.3% Rat 68.8% 65.5% 72.1% 72.1% Table 3 shows test accuracies. In general, as expected the logistic-loss based FL models yield better classification accuracies than those based on least-squares, as such loss function tends to be more appropriate for classification problems. However the Ovarian dataset proves to be an exception, showing better performance under a squared loss. Regarding the TV-regularizer, the classic Tv 1D 1 -penalty seems to perform better in general, with the Tv 1D 2 -penalty showing competitive results in some settings. 5.3 2D-TV: Experiments and Applications We address now several practical applications that benefit from two-dimensional TV regularization; our results show again how the presented Tv2D p,q prox operators fits in seamlessly into our modular framework to produce efficient proximal splitting solvers. 5.3.1 Image denoising through anisotropic filtering Our first example is related to the classic problem of image denoising, but with the twist that we deal with noise of an anisotropic character. More specifically, suppose that the true image \u03bc \u2208 Rn\u00d7m is contaminated by additive noise N , so that only \u03bc0 = \u03bc + N is observed. The denoising problem estimates \u03bc given just the noisy version \u03bc0 . This problem is highly ill-posed and as such not approachable unless additional assumptions on the noise (or on the underlying image) are made. Isotropic and anisotropic models: an extremely common choice is to simply assume the noise to be gaussian, or some other zero-mean distribution. Under these conditions, a classic method to perform such denoising task is the Rudin-Osher-Fatemi (ROF) model [76], which finds an approximation X to the original image by solving min X kX\u2212\u03bc0k 2 F+\u03bb n X i=2 m X j=2 k\u2202xi,j k2 , (5.2) where \u2202xi,j is the discrete gradient \u2202xi,j =   xi,j \u2212 xi\u22121,j xi,j \u2212 xi,j \u22121  . That is, it is the vector of differences of Xi,j and its neighbors along both axes. The objective of the first term in the ROF model is to penalize any deviation of X from the observed image \u03bc0, while the second term can be readily recognized as a mixed (2, 1)-norm over the discrete gradient of X . This regularizer models caters to some prior knowledge: in natural images sharp discontinuities in intensity between neighboring points only appear in borders of objects, while the rest of the pixels usually show smooth variations in intensity. It makes sense, therefore, to penalize large values of the gradient, as sharp changes have a higher probability of having being produced by noise. Conversely, as the mean of the noise is zero, it is also sensible to maintain the denoised image X close to the observed \u03bc0 . Merging these two goals produces the ROF model (5.2). 35 A closer look at the ROF regularizer reveals that it follows the spirit of the reviewed 2D-TV regularizer which also penalizes sharp variations between neighboring pixels. Indeed, all such regularizers are broadly categorized as TV regularizers within the image processing community. It is clear, though, that the ROF regularizer (5.2) does not coincide with the Tv 2D p,q regularizer used in this paper. Some authors [16] differentiate between these regularizers by naming the ROF approach as isotropic TV and the Tv 2D p,q -style approach as anisotropic TV. This naming comes from the fact that isotropic TV penalizes each component of the discrete gradient \u2202xi,j following an `2 norm, whereas the anisotropic Tv 2D p,q -no rm and in particular Tv 2D 1,1 -norm, penalize rows and columns independently. While image filtering using isotropic TV is generally preferred for natural images denoising [17], in some settings anisotropic filtering can produce better results, and in fact has been favored by some authors in the past [25, 55]. This is specially true on those images that present a \u201cblocky\u201d structure, and thus are better suited to the structure modeled by the Tv 2D p,q -n o r m. Therefore, efficient methods to perform anisotropic filtering are also important. Anisotropic denoising experiments: denoising using the anisotropic Tv 2D p,q -norm reducesto solving min X kX\u2212\u03bc0k 2 F + \u03bbTv2D p,q (X). (5.3) But (5.3) is nothing but the Tv 2D p,q -proximity problem, and hence can be directly solved by applying the 2D-TV prox operators described above. We solve (5.3) below for the choice p = q = 1 (which is common in practice), for the following selection of algorithms: \u2022 Proximal Dykstra (\u00a7 4.1 .1) \u2022 The Douglas-Rachford variant based on alternating projections (\u00a7 4.1 .2) \u2022 The Split Bregman method of Goldstein T. [36], which follows an ADMM\u2013like approach to split the `1 norm apart from the discrete gradient operator, thus not requiring the use of a 1D-TV prox operator. \u2022 Chambolle-Pock\u2019s method applied to 2D TV (\u00a7 4.1 .4). \u2022 Condat\u2019s general splitting method (\u00a7 4.1 .4). \u2022 Kolmogorov et al primal-dual method (\u00a7 4.1 .4). \u2022 Yang\u2019s method (ADMM) (\u00a7 4.1.3) \u2022 The maximum flow approach by Goldfarb and Yin [35], which shows the relationship between the 2D-TV proximity minimization and the maximum flow problem over a grid, and thus applies an efficient maximum flow method to solve a discrete-valued version of 2D-TV. In Proximal Dykstra, Douglas-Rachford and ADMM we use the linearized taut\u2013string strategy presented before as solver for the base proximity operators. All algorithm parameters were set as recommended in their corresponding papers or public implementations, except for Proximal Dykstra and Douglas-Rachford, which are parameter free. For Chambolle-Pock we tried both the scheme with fixed algorithm parameters [22, Algorithm 1] and the scheme with acceleration [22, Algorithm 2]; however the accelerated version did not converge to the desired solution within enough accuracy (relative difference of 10\u22125 ), therefore only the results for the fixed version are reported. For Kolmogorov we follow the recommendations in Chambolle and Pock [23], taking into account the Lipschitz constants of the optimized functions and selecting the parameter updating strategy that produced faster performance in the experiments: \u03b8 t+1 = 1 \u221a 1+\u03c4t,\u03c4 t+1 = \u03b8t+1\u03c4t, \u03c3t+1 = \u03c3 t \u03b8t+1,\u03b80=1,\u03c40= 1 2,\u03c30=1. The images used in the experiments are displayed in Appendix F as Figure 25. To test the filters under a variety of scenarios, different kinds of noise were introduced for each image. Table 4 gives details on this, while the noisy images are shown in Figure 26. All QR barcode images used the same kind and parameters of noise. Noise was introduced using Matlab\u2019s imnoise function. 36 Table 4: Types of noise and parameters for each test image. A \u2205 indicates that such noise was not applied for the image. Gaussian and Speckle correspond to gaussian additive and multiplicative (respectively) noises with zero mean and the indicated variance. Salt & Pepper noise turns into black or white the indicated fraction of image pixels. Poisson regenerates each pixel by drawing a random value from a Poisson distribution with mean equal to the original pixel value, thus producing a more realistic noise. Image Gaussian Speckle Poisson Salt & Pepper randomQR 0.2 0.3 \u2205 \u2205 shape 0.05 \u2205 \u2205 \u2205 trollface \u2205 1 \u2205 \u2205 diagram \u2205 \u2205 X \u2205 text \u2205 \u2205 \u2205 0.1 comic 0.05 \u2205 X \u2205 contour \u2205 \u2205 X 0.4 phantom \u2205 2 X \u2205 Values for the regularization parameter \u03bb were found by maximizing the quality of the reconstruction, measured using Improved Signal-to-Noise Ratio (ISNR) [1]. ISNR is defined as ISNR(X, \u03bc, \u03bc0) = 10 log10 k\u03bc0 \u2212 Xk2 F kX\u2212\u03bck2 F , where \u03bc is the original image, \u03bc0 its noisy variant, and X the reconstruction. To compare the algorithms we run all of them for each image and measured its ISNR and relative distance to the optimal objective value of the current solution at each iteration through their execution. The only exception to this procedure is the method of Goldfarb and Yin, which is non\u2013iterative and thus always returns an exact solution, and so we just measure the time required to finish. The optimal objective value was estimated by running all methods for a very large number of iterations and taking the minimum value of them all. This produced the plots shown in Figures 18\u201319. From them the following observations are of relevance: \u2022 Condat\u2019s method and Chambolle-Pock\u2019s method are reduced to essentially the same algorithm when applied to the particular case of anisotropic 2D TV denoising. Furthermore, they seem to perform slowly when compared to other methods. \u2022 ADMM (Yang\u2019s method) exhibits slow performance at the beginning, but when run for sufficient time is able to achieve a good approximation to the optimum. \u2022 The Split Bregman method, in spite of being an ADMM\u2013like method much like Condat\u2019s or Chambolle- Pock, performs significantly better than those. We attribute this to the very efficient implementation provided by its authors, and to the fact that a fast approximate method is employed to compute the required matrix inversions throughout the method. \u2022 The method by Goldfarb and Yin is slower than other approaches and seems to provide suboptimal solutions. We attribute this to the fact that this method solves a discrete (integer\u2013rounded) approximation to the problem. We acknowledge that other methods exploiting the Total Variation - Minimum-cut relationship have been proposed with varying speed results, e.g . [33], however the suboptimality issues still apply. \u2022 The method by Kolmogorov et al, when properly accelerated by a suitable choice of adaptive stepsizes, seems to be the best choice for finding very accurate solutions, though it is very closely followed by ADMM. \u2022 The parameter free methods PD and DR are the fastest to achieve a mid-quality solution, with Douglas- Rachford performing better than Proximal Dykstra. 37 Time (s) 10 -3 10 -2 10 -1 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: randomQR-0 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -3 10 -2 10 -1 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: randomQR-1 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: randomQR-2 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: randomQR-3 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: randomQR-4 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -3 10 -2 10 -1 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: shape Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 100 Denoising algorithms: trollface Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: diagram Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Denoising algorithms: text Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: comic Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 100 Denoising algorithms: contour Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -5 100 Denoising algorithms: phantom Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Figure 18: Relative distance to optimum vs time of the denoising 2D-TV algorithms under comparison, for the different images considered in the experiments. Considering these facts, the method of choice among the ones considered depends on the desired accuracy. We argue, however, that for the purpose of image processing a mid-quality solution is sufficient. The ISNR plots of Figure 19 certainly seem to support this, as the perceived quality of the reconstruction, roughly approximated by the ISNR, saturates rapidly and no significant improvements are obtained through further optimization. Given this, the proposed methods seem to be the best suited for the considered task. 38 Time (s) 10 -3 10 -2 10 -1 I S N R 0 0.5 1 1.5 2 2.5 Denoising algorithms: randomQR-0 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -3 10 -2 10 -1 I S N R 0 0.5 1 1.5 2 2.5 3 3.5 Denoising algorithms: randomQR-1 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 I S N R 0 1 2 3 4 5 Denoising algorithms: randomQR-2 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 I S N R 0 1 2 3 4 5 6 Denoising algorithms: randomQR-3 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 I S N R 0 0.5 1 1.5 2 2.5 3 3.5 4 Denoising algorithms: randomQR-4 Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -3 10 -2 10 -1 I S N R 0 1 2 3 4 5 6 Denoising algorithms: shape Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 I S N R 0 1 2 3 4 5 6 7 8 Denoising algorithms: trollface Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 I S N R -6 -4 -2 0 2 4 6 Denoising algorithms: diagram Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 I S N R 0 1 2 3 4 5 Denoising algorithms: text Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -2 10 -1 100 I S N R 0 1 2 3 4 5 6 7 Denoising algorithms: comic Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 I S N R 0 2 4 6 8 10 12 Denoising algorithms: contour Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Time (s) 10 -1 100 101 I S N R 0 1 2 3 4 5 6 Denoising algorithms: phantom Split-Bregman Condat Chambolle-Pock Yang Goldfarb-Yin Kolmogorov PD DR Figure 19: Increased Signal to Noise Ratio (ISNR) vs time of the denoising 2D-TV algorithms under comparison, for the different images considered in the experiments. For quick reference, Table 5 presents a summary of key points of the compared methods, along with some recommendations about when to put them to use. 5.3.2 Parallelization experiments In addition to the previous experiments and to illustrate the parallelization potential of the presented anisotropic filtering method, Figure 20 plots running times for the PD algorithm as the number of processor core ranges 39 Table 5: Summary of key points of the compared Tv2D 1,1 proximity (denoising) methods. Method Key points Douglas Rachford + Fast convergence to medium-quality + Embarrassingly parallel \u2212 Slow for higher accuracies \u21d2 Ideal for standard denoising tasks Proximal Dykstra + Attainable accuracies similar to DR \u2212 But slower than DR \u21d2 Use DR instead Split Bregman + Eventually performs similarly to DR \u2212 Slow convergence at first iterations \u21d2 Use DR instead Chambolle\u2013Pock \u2212 Slow \u21d2 Use other method instead Condat + Solves objectives involving a sum of smooth/non\u2013smooth functions with linear operators \u2212 Reduces to Chambolle\u2013Pock when solving basic image denoising \u21d2 Use only when dealing with more complex functionals ADMM (Yang) + More accurate \u2212 Slightly slower than Kolmogorov \u2212 Bad behavior for mid-quality solutions \u21d2 Use Kolmogorov instead Kolmogorov + More accurate \u2212 Slower than DR for low accuracies \u21d2 Useful when extremely accurate solutions are required Goldfarb-Yin + Solves the discrete version of the problem \u2212 Slow \u2212 Poor accuracy for the continuous version \u21d2 Apply only when solving the discrete problem from 1 through 16. We see that for the smaller images, the gains due to more processors essentially flatten out by 8 cores, where synchronization and memory contention offsets potential computational gains (first row). For the larger images, there is steadier speedup as the number of cores increase (in each plot there seems to be a \u201cbump\u201d at 14 processors; we attribute this to a quirk of the multicore machine that we used). From all the plots, however, the message is clear: our TV prox operators exploit parallelization well, and show substantial speedups as more processor cores become available. We should also note in passing that the Split Bregman method, which in the previous experiments showed a reasonable performance, turns out to be much harder to parallelize. This fact was already observed by [92] in the context of isotropic TV. Therefore when several processor cores are available the proposed modular strategy seems to be even more suitable to the task. 40 246810121416 4 6 8 10 12 14 # processor cores T i m e ( m s ) TV\u2212L1 times for image: shape 246810121416 50 100 150 200 250 # processor cores T i m e ( m s ) TV\u2212L1 times for image: trollface 246810121416 10 15 20 25 30 # processor cores T i m e ( m s ) TV\u2212L1 times for image: diagram 246810121416 100 200 300 400 500 600 700 # processor cores T i m e ( m s ) TV\u2212L1 times for image: text 246810121416 50 100 150 200 250 # processor cores T i m e ( m s ) TV\u2212L1 times for image: comic 246810121416 500 1000 1500 2000 2500 # processor cores T i m e ( m s ) TV\u2212L1 times for image: contour 246810121416 1500 2000 2500 3000 3500 4000 4500 # processor cores T i m e ( m s ) TV\u2212L1 times for image: phantom 246810121416 1 1.5 2 2.5 x10 4 # processor cores T i m e ( m s ) TV\u2212L1 times for image: gaudi Figure 20: Multicore speedups on different images (see also Table 6) 5.3.3 Anisotropic image deconvolution Taking a step forward we now confront the problem of image deconvolution (or image deblurring). This setting is more complex since the task of image recovery is made harder by the presence of a convolution kernel K that distorts the image as \u03bc0=K\u2217\u03bc+N, where N is noise as before and \u2217 denotes convolution. To recover the original image \u03bc from the observed \u03bc0, it is common to solve the following deconvolution problem min X 1 2kK\u2217X\u2212\u03bck2 F + \u03bbr(X). (5.4) As before, the regularizer r(X) can be isotropic or anisotropic TV, among others. Here we focus again on the anisotropic TV case to show how the presented solvers can also be used for this image task. Problem (5.4) also fits the proximal splitting framework, and so we employ the popular FISTA [13] method for image processing. The gradient of the loss can be dealt efficiently by exploiting K being a convolution operator, which through the well\u2013known convolution theorem is equivalent to a dot product in the frequencies space, and so the computation is done by means of fast Fourier transforms and products. Several other solvers that explicitly deal with convolution operators are also available [1, 16]. A notable solver specific for the isotropic case is given by the work of Krishnan and Fergus [52], that handles even nonconvex isotropic TV-norms (0 < p < 1). But this approach does not extend to the anisotropic case, so we focus on general proximal splitting. We use the same test images as for our denoising experiments (Figure 25), with identical noise patterns (Table 4) for the QR images, and gaussian noise with variance 0.05 for the rest. In addition, we convolve each image with a different type of kernel to assess the behavior for a variety of convolutions; Table 6 shows the kernels applied. We constructed these kernels using Matlab\u2019s fspecial function; the convolved images are shown in Figure 28. The values for the regularizer \u03bb were determined by maximizing the reconstruction quality measured in ISNR. Since deconvolution is much more expensive than denoising, instead of performing an exhaustive search for the best \u03bb, we used a Focused Grid Search strategy [7, 9] to find the best performing values. 41 Image Convolution Parameters randomQR Motion Length 5, Angle 35o shape Average Size3\u00d73 trollface Disk Radius 5 diagram Motion Length 5, Angle 0o text Average Size1\u00d710 comic Gaussian Size 15, Deviation 2 contour Disk Radius 5 phantom Motion Length 100, Angle 240o Table 6: Convolution kernels used for each test image. Average substitutes each pixel with the average of its surrounding n \u00d7 m neighbors. Disk performs the same operation within a disk-shaped neighborhood of the shown radius. Gaussian uses a n \u00d7 n neighborhood and assigns different weights to each neighbor following the value of a gaussian distribution of the indicated deviation centered at the current pixel. Motion emulates the distortions produced when taking a picture in motion, defining a neighborhood following a vector of the indicated length and angle. Any denoising subroutine can be plugged into the aforementioned deconvolution methods, however for comparison purposes we run our experiments with the best proposed method, Douglas Rachford (Alternating Reflections), and the best competing method among those reviewed from the literature, Kolmogorov et al. A key parameter in deconvolution performance is for how long should these methods be run at each FISTA iteration. To select this, we first run FISTA with 100 iterations of Douglas Rachford per step, for a large number of FISTA steps, and take the final objective value as an estimate of the optimum. Then we find the minimum number of Douglas Rachford and Kolmogorov iterations for which FISTA can achieve a relative distance to such optimum below 10\u22123 . The reason for doing this is that for larger distances the attained ISNR values are still far from convergence. This turned to be 5 iterations for Douglas Rachford an 10 for Kolmogorov. We then run FISTA for such configurations of the inner solvers, and others with a larger number of inner iterations, for comparison purposes. Figures 21-22 show the evolution of objective values and ISNR for all the tested configurations. In general, Douglas Rachford seems to be slightly better at finding more accurate solutions, and also faster at converging to the final ISNR value. We explain this by the fact that the major advantage of Douglas Rachford is its aforementioned ability to find medium\u2013quality solutions in a very small number of iterations: this is why with a small number of inner DR iterates we can converge to good ISRN levels. For reference we also provide the resultant deconvoluted images as Figure 29. 5.3.4 2D Fused-Lasso Signal Approximator The Fused\u2013Lasso Signal Approximator (FLSA) [34] can be regarded as a particular case of Fused-Lasso where the input matrix A is the identity matrix I , i.e ., minx 1 2kx\u2212yk2 2 + \u03bb1kxk1 + \u03bb2Tv 1D 1 (x). This problem can be solved immediately using the methods presented in \u00a75.2.4 . A slightly less trivial problem is the one posed by the 2D variant of FLSA: minX 1 2kX\u2212Yk2 F + \u03bb1kvec(X)k1 + \u03bb2Tv 2D 1,1(X). (5.5) Friedman et al. [34] used this model for denoising images where a large number of pixels are known to be completely black (intensity 0), which aligns well with the structure imposed by the `1 regularizer. Akin to the 1D-case, 2D-FLSA (5.5) can also be solved by decomposing its computation into two prox operators [34]; formally, prox\u03bb1k\u00b7k1+\u03bb2Tv2D 1,1 (\u00b7)(Y ) = prox\u03bb1k\u00b7k1 prox\u03bb2Tv2D 1,1(\u00b7)(Y )  . 42 Time (s) 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: randomQR-0 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: randomQR-1 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: randomQR-2 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: randomQR-3 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: randomQR-4 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Deconvolution algorithms: shape Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Deconvolution algorithms: trollface Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: diagram Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 102 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -4 10 -2 Deconvolution algorithms: text Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Deconvolution algorithms: comic Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 101 102 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Deconvolution algorithms: contour Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 101 102 103 R e l a t i v e d i s t a n c e t o o p t i m u m 10 -6 10 -4 10 -2 Deconvolution algorithms: phantom Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Figure 21: Relative distance to optimum vs time of the deconvolution 2D-TV algorithms under comparison, for the different images considered in the experiments. Thus, to solve (5.5) we merely invoke one of the presented Tv2D 1,1 prox operators and then apply soft- thresholding to the results. Since soft-thresholding is done in closed form, the performance of a 2D-FLSA solver depends only on its ability to compute Tv 2D 1,1 -proximity efficiently. We can then safely claim that the results summarized in table 5 apply equivalently to 2D-FLSA, and so the proposed Douglas Rachford method performs best when reconstruction ISNR is the primary concern. 43 Time (s) 10 -1 100 I S N R 1.2 1.4 1.6 1.8 2 2.2 2.4 Deconvolution algorithms: randomQR-0 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 101 I S N R 1.5 2 2.5 Deconvolution algorithms: randomQR-1 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 101 I S N R 1.8 2 2.2 2.4 2.6 2.8 Deconvolution algorithms: randomQR-2 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 I S N R 1.8 2 2.2 2.4 2.6 2.8 Deconvolution algorithms: randomQR-3 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 I S N R 1.6 1.8 2 2.2 2.4 2.6 Deconvolution algorithms: randomQR-4 Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 10 -1 100 I S N R 2 2.5 3 Deconvolution algorithms: shape Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 I S N R 2 2.5 3 3.5 4 4.5 5 Deconvolution algorithms: trollface Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 I S N R 1.6 1.8 2 2.2 2.4 2.6 2.8 Deconvolution algorithms: diagram Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 102 I S N R 1.6 1.8 2 2.2 2.4 Deconvolution algorithms: text Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 100 101 I S N R 1 1.5 2 2.5 3 Deconvolution algorithms: comic Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 101 102 I S N R 3 4 5 6 7 Deconvolution algorithms: contour Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Time (s) 101 102 103 I S N R 1.5 2 2.5 3 3.5 4 4.5 5 5.5 Deconvolution algorithms: phantom Kolmogorov(10) Kolmogorov(20) Kolmogorov(30) Kolmogorov(50) DR(5) DR(10) DR(20) DR(50) Figure 22: Increased Signal to Noise Ratio (ISNR) vs time of the deconvolution 2D-TV algorithms under comparison, for the different images considered in the experiments. 5.4 Application of higher-dimensional TV We now apply the presented multidimensional TV regularizer to anisotropic filtering for video denoising. The extension to videos from images is natural. Say a video contains f frames of size n \u00d7 m pixels; this video can be viewed as a 3D-tensor X \u2208 Rn\u00d7m\u00d7f , on which a 3D-TV based filter can be effected by minX 1 2kX\u2212U0k 2 F + \u03bbTv3D p1 ,p2 ,p3 (X), (5.6) 44 Sequence Frame resolution Number of frames Total number of pixels salesman 288 \u00d7 352 50 5 million coastguard 176 \u00d7 144 300 7.6 million bicycle 720 \u00d7 576 30 12.4 million Table 7: Size details of video sequences used in the video denoising experiments. where U0 is the observed noisy video, and Tv3D p1 ,p2 ,p3 =Tv 3 p with p = [p1, p2, p3]. Application of the filter (5.6) is nothing but computation of the prox operator, which can be done using the Parallel-Proximal Dykstra (PPD) algorithm presented in Sec. 4 . We apply this idea to the video sequences detailed in Table 7. All of the sequences are made of grayscale pixels. Figure 30 in the Appendix shows some of the frames of the salesman sequence. We noise every frame of these sequences by applying gaussian noise with zero mean and variance 0.01, using Matlab\u2019s imnoise function. Then we solve problem 5.6 for each sequence, adjusting the regularization value so as to maximize ISNR of the reconstructed signal. We test the following algorithms, which have been previously applied in the literature for solving 3D-TV, with the only exception Parallel Proximal Dykstra: \u2022 Parallel Proximal Dykstra (\u00a7 4.1 .1). \u2022 Yang\u2019s method, which is based on ADMM (\u00a7 4.1 .1) \u2022 The maximum flow approach by Goldfarb and Yin [35], which features an implementation for 3D grids, thus solving a discrete-valued version of 3D-TV. For both PPD and ADMM we again make use of linearized taut-string 1D TV solver. We must also point out that other image denoising methods seem amenable for extension into the multidimensional setting, such as Condat\u2019s and Chambolle-Pock methods. However in the light of our image denoising results we do not deem them as good choices for this problem. A more reasonable choice might be to extend Split-Bregman to multiple dimensions, but such an extension has not been implemented or proposed as far as we know. We would also like to note that we have considered extending the Douglas Rachford method to a multidimensional setting, however such task is complex and thus we decided to focus on Parallel Proximal Dykstra. 10 1 10 2 10\u22126 10 \u22124 10\u22122 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Denoising algorithms: salesman Yang Goldfarb\u2212Yin PPD 10 1 10 2 10\u22126 10\u22124 10 \u22122 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Denoising algorithms: coastguard Yang Goldfarb\u2212Yin PPD 10 1 10 2 10\u22126 10 \u22124 10\u22122 Time (s) R e l a t i v e d i s t a n c e t o o p t i m u m Denoising algorithms: bicycle Yang Goldfarb\u2212Yin PPD Figure 23: Relative distance to optimum vs time of the denoising 3D-TV algorithms under comparison, for the different video sequences considered in the experiments. Similarly to our previous image denoising experiments, we ran the algorithms under comparison for each video sequence and measured its ISNR and relative distance to the optimal objective value of the current solution at each iteration through their execution. Again the exception is the Goldfarb-Yin method, which is 45 101 102 0 1 2 3 4 5 Time (s) I S N R Denoising algorithms: salesman Yang Goldfarb\u2212Yin PPD 101 102 0 1 2 3 4 5 6 Time (s) I S N R Denoising algorithms: coastguard Yang Goldfarb\u2212Yin PPD 101 102 0 1 2 3 4 5 Time (s) I S N R Denoising algorithms: bicycle Yang Goldfarb\u2212Yin PPD Figure 24: Increased Signal to Noise Ratio (ISNR) vs time of the denoising 3D-TV algorithms under comparison, for the different video sequences considered in the experiments. non\u2013iterative and so we only report the time required for its termination. The optimal objective value was estimated by running all methods for a very large number of iterations and taking the minimum value of them all. This produced the plots shown in Figures 23\u201324 . From them the following observations are of relevance: \u2022 Following the pattern observed in the image denoising experiments, ADMM (Yang\u2019s method) is best suited for finding very accurate solutions. \u2022 The method by Goldfarb and Yin again provides suboptimal solutions, due to the discrete approximation it uses. \u2022 Parallel Proximal Dykstra is the fastest to achieve a mid-quality solution. \u2022 Intermediate solutions prior to convergence of the PPD run result in better ISNR values for the coastguard and bicycle datasets. This hints that the denoising model used in this experiment may not be optimal for these kind of signals; indeed, more advanced denoising models abound in the signal processing literature. Hence we do not claim novel results in terms of ISNR quality, but just in solving this classic denoising model more efficiently. The ISNR plots in Figure 24 also show how both Parallel Proximal Dykstra and ADMM (Yang\u2019s method) converge to equivalent solutions in practice. Therefore, for the purpose of video denoising PPD seems to be the best choice, unless for some reason a high degree of accuracy is required, for which ADMM should be preferred. Acknowledgments \u0301 AB acknowledges partial financial support from Spain\u2019s grants TIN2010-21575-C02-01, TIN2013-42351-P, S2013/ICE-2845 CASI-CAM-CM, TIN2016-76406-P and TIN2015-70308-REDT (MINECO/FEDER EU) during the long period leading to the writing of this manuscript. We thank R. Tibshirani for bringing [45] to our attention, and S. Jegelka for alerting us to the importance of weighted total-variation problems. References [1] M. V. Afonso, J. M. Bioucas-Dias, and M. A. T. Figueiredo. Fast image recovery using variable splitting and constrained optimization. IEEE Transactions on Image Processing, 19(9), September 2010. [2] C. M . Ala\u0131z, \u0301 A. Barbero, and J. R. Dorronsoro. Group fused lasso. Artificial Neural Networks and Machine Learning\u2013ICANN 2013, page 66, 2013. [3] E. Anderson et al. LAPACK Users\u2019 Guide. Society for Industrial and Applied Mathematics, Philadelphia, PA, third edition, 1999. ISBN 0-89871-447-8 (paperback). 46 [4] F. Bach. Structured sparsity-inducing norms through submodular functions. In NIPS, 2010. [5] Bach, Francis Learning with Submodular Functions: A Convex Optimization Perspective arXiv preprint arXiv:1111.6453 [6] F. Bach, R. Jenatton, J. Mairal, and G. Obozinski. Convex optimization with sparsity-inducing norms. In S. Sra, S. Nowozin, and S. J. Wright, editors, Optimization for Machine Learning. MIT Press, 2011. [7] \u0301A . Barbero, J. L \u0301opez, and J. R. Dorronsoro. Finding Optimal Model Parameters by Discrete Grid Search. In Advances in Soft Computing: Innovations in Hybrid Intelligent Systems 44, pages 120\u2013127. Springer, 2008. [8] Barbero, A., Sra, S. Fast Newton-type methods for total variation regularization. In Proceedings of the 28th International Conference on Machine Learning (ICML-11) (pp. 313 -320). [9] \u0301A . Barbero, J. L \u0301opez, and J. R . Dorronsoro. Finding Optimal Model Parameters by Deterministic and Annealed Focused Grid Search. Neurocomputing, 72(13-15):2824\u20132832, 2009. ISSN 0925-2312. doi: DOI:10.1016/j.neucom .2008.09 .024. [10] Barlow, R. E ., Bartholomew, D. J., Bremner, J. M., Brunk, H. D . Statistical inference under order restrictions: The theory and application of isotonic regression New York: Wiley, 1972 [11] H. H . Bauschke and P. L. Combettes. Convex analysis and monotone operator theory in Hilbert spaces. CMS Books in Mathematics. Springer, 2011. [12] Heinz H. Bauschke, Patrick L. Combettes, D. Russell Luke Finding best approximation pairs relative to two closed convex sets in Hilbert spaces Journal of Approximation Theory 127 (2004) 178\u2013192 [13] A. Beck and M. Teboulle. A Fast Iterative Shrinkage-Thresholding Algorithm for Linear Inverse Problems. SIAM Journal of Imgaging Sciences, 2(1):183\u2013202, 2009. [14] D. P. Bertsekas. Projected newton methods for optimization problems with simple constraints. SIAM Journal on Control and Optimization, 20(2), March 1982. [15] D. P. Bertsekas. Nonlinear Programming. Athena Scientific, 2nd edition, September 1999. [16] J. M. Bioucas-Dias and M. A. T. Figueiredo. A new twist: Two-step iterative shrinkage/thresholding algorithms for image restoration. IEEE Transactions on Image Processing, 16(12):2992\u20133004, December 2007. [17] J. M . Bioucas-Dias, M. A . T. Figueiredo, and J. P. Oliveira. Total variation-based image deconvolution: A majorization-minimization approach. In ICASSP Proceedings, 2006. [18] BM3D. Bm3d software and test sequences, 2013. URL http://www.cs .tut.fi/\u0303foi/ GCF- BM3D/. [19] R. H. Byrd, P. Lu, J. Nocedal, and C. Zhu. A limited memory algorithm for bound constrained optimization. Technical report, Northwestern University, 1994. [20] E. J . Cand `es and T. Tao. Near-optimal signal recovery from random projections: universal encoding strategies. IEEE Trans. Info. Theory, 52:5406\u20135425, 2004. [21] A. Chambolle and J. Darbon. On total variation minimization and surface evolution using parametric maximum flows. International Journal of Computer Vision, 84(3), 2009. [22] A. Chambolle and T. Pock. A first-order primal-dual algorithm for convex problems with applications to imaging. Journal of Mathematical Imaging and Vision, 40(1):120\u2013145, 2011. [23] Chambolle, A., Pock, T. On the ergodic convergence rates of a first-order primal-dual algorithm Mathematical Programming. September 2016, Volume 159, Issue 1, pp 253\u2013287 [24] V. Chandrasekaran, B. Recht, P. A . Parrilo, and A. S. Willsky. The Convex Geometry of Linear Inverse Problems. Foundations of Computational Mathematics, 12(6), 2012. [25] R. Choksi, Y. van Gennip, and A. Oberman. Anisotropic Total Variation Regularized L1-Approximation and Denoising/Deblurring of 2D Bar Codes. Technical report, McGill University, July 2010. [26] P. L . Combettes. Iterative construction of the resolvent of a sum of maximal monotone operators. Journal of Convex Analysis, 16:727\u2013748, 2009. [27] P. L . Combettes and J. -C. Pesquet. Proximal splitting methods in signal processing. arXiv:0912.3522, 2009. 47 [28] L. Condat. A direct algorithm for 1d total variation denoising. Technical report, GREYC laboratory, CNRS-ENSICAEN-Univ. of Caen, 2012. [29] L. Condat. A generic proximal algorithm for convex optimization - application to total variation minimization. IEEE SIGNAL PROC. LETTERS, 21(8):985\u2013989, 2014. [30] A. R . Conn, N. I . M. Gould, and P. L . Toint. Trust-Region Methods. SIAM, 2000. [31] J. Dahl, P. C . Hansen, S. H . Jensen, and T. L . Jensen. Algorithms and software for total variation image reconstruction via first-order methods. Numer Algor, 53:67\u201392, 2010. [32] P. L . Davies and A. Kovac. Local extremes, runs, strings and multiresolution. The Annals of Statistics, 29(1):1\u201365, 2001. [33] Y. Duan and X. -C. Tai. Domain decomposition methods with graph cuts algorithms for total variation minimization. Adv Comput Math, 36:175\u2013199, 2012. doi: 10.1007/s10444-011-9213-4. [34] J. Friedman, T. Hastie, H. H \u0308ofling, and R. Tibshirani. Pathwise coordinate optimization. Annals of Applied Statistics, 1(2):302\u2013332, Aug. 2007. [35] D. Goldfarb and W. Yin. Parametric maximum flow algorithms for fast total variation minimization. SIAM Journal on Scientific Computing, 31(5):3712\u20133743, 2009. [36] O. S . Goldstein T. The Split Bregman Method for L1 Regularized Problems. SIAM Journal on Imaging Sciences, 2(2):323\u2013343, 2009. [37] T. R . Golub et al. Molecular classification of cancer. Science, 286(5439):531\u2013537, October 1999. [38] M. Grasmair. The equivalence of the taut string algorithm and bv-regularization. Journal of Mathematical Imaging and Vision, 27(1):59\u201366, 2007. ISSN 0924-9907. doi: 10.1007/s10851-006-9796-4. URL http://dx.doi.org/10.1007/s10851- 006 -9796- 4 . [39] Z. Harchaoui and C. L \u0301evy-Leduc. Multiple Change-Point Estimation With a Total Variation Penalty. Journal of the American Statistical Association, 105(492):1480\u20131493, 2010. [40] J. Hua, W. D . Tembe, and E. R. Dougherty. Performance of feature-selection methods in the classification of high-dimension data. Pattern Recognition, 42:409\u2013424, 2009. [41] K. Ito and K. Kunisch. An active set strategy based on the augmented lagrangian formulation for image restoration. ESAIM: Mathematical Modelling and Numerical Analysis, 33(1):1\u201321, 1999. URL http://eudml.org/doc/193911. [42] M. Jaggi. Revisiting frank-wolfe: Projection-free sparse convex optimization. In Proceedings of the 30th International Conference on Machine Learning,, 2013. [43] S. Jegelka, F. Bach, and S. Sra. Reflection methods for user-friendly submodular optimization. Advances in Neural Information Processing Systems 2013: 1313\u20131321. [44] Jegou, H., Douze, M., Schmid, C. Hamming Embedding and Weak geometry consistency for large scale image search Proceedings of the 10th European conference on Computer vision, October, 2008 http://lear.inrialpes.fr/\u0303jegou/data.php#holidays [45] N. A . Johnson. A dynamic programming algorithm for the fused Lasso and l0 -segmentation. J. Computational and Graphical Statistics, 2013. [46] D. Kim, S. Sra, and I. Dhillon. A scalable trust-region algorithm with application to mixed-norm regression. In International Conference on Machine Learning, 2010. [47] S. Kim, K. Koh, S. Boyd, and D. Gorinevsky. `1 trend filtering. SIAM Review, 51(2):339\u2013360, 2009. doi: 10.1137/070690274. [48] K. C. Kiwiel. Variable fixing algorithms for the continuous quadratic knapsack problem. J. Optim. Theory Appl., 136:445\u2013458, 2008. [49] Knuth, Donald E. The art of computer programming, volume 1: fundamental algorithms. CA, USA: Addison Wesley Longman Publishing Co., Inc [50] M. Kolar, L. Song, A. Ahmed, and E. Xing. Estimaging time-varying networks. The Annals of Applied Statistics, 4(1):94\u2013123, 2010. [51] Kolmogorov, V., Pock, T., Rolinek, M. Total variation on a tree SIAM J. Imaging Sci., 9(2), 605\u2013636 . 48 [52] D. Krishnan and R. Fergus. Fast image deconvolution using hyper-laplacian priors. In Advances in Neural Information Processing Systems, 2009. [53] Kumar, K.S ., Barbero, A., Jegelka, S., Sra, S., and Bach, F. Convex optimization for parallel energy minimization. arXiv preprint arXiv:1503.01563 . [54] S. R. Land and J. H . Friedman. Variable fusion: A new adaptive signal regression method. Technical Report 656, Department of Statistics, Carnegie Mellon University Pittsburgh, 1997. [55] Y. Li and F. Santosa. A computational algorithm for minimizing total variation in image restoration. IEEE Transactions on Image Processing, 5(6):987\u2013995, 1996. URL http://dblp.uni-trier. de/db/journals/tip/tip5.html#LiS96. [56] C.-J . Lin and J. J . Mor\u0301e . Newton\u2019s method for large bound-constrained optimization problems. SIAM Journal on Optimization, 9(4):1100\u20131127, 1999. [57] H. Liu and J. Zhang. Estimation Consistency of the Group Lasso and its Applications. In Int. Conf. Mach. Learning (ICML), 2009. [58] J. Liu and J. Ye. Efficient Euclidean projections in linear time. In ICML, Jun. 2009. [59] J. Liu, S. Ji, and J. Ye. SLEP: Sparse Learning with Efficient Projections. Arizona State University, 2009. http://www.public.asu.edu/ jye02/Software/SLEP. [60] J. Liu, L. Yuan, and J. Ye. An efficient algorithm for a class of fused lasso problems. In ACM SIGKDD Conference on Knowledge Discovery and Data Mining, 2010. [61] J. Mairal, R. Jenatton, G. Obozinski, and F. Bach. Network Flow Algorithms for Structured Sparsity. In NIPS, 2010. To appear. [62] B. Martinet. R \u0301egularisation d\u2019in \u0301equations variationnelles par approximations successives. Mod \u0301elisation Math \u0301ematique et Analyse Num \u0301erique, 4(R3):154\u2013158, 1970. [63] L. Meier, S. van de Geer, and P. B \u0308uhlmann. The group lasso for logistic regression. J. R . Statist. Soc., 70: 53\u201371, 2008. [64] J. J. Mor \u0301e and D. C . Sorensen. Computing a trust region step. SIAM Journal of Scientific Computing, 4 (3), September 1983. [65] J. J. Moreau. Fonctions convexes duales et points proximaux dans un espace hilbertien. C. R. Acad. Sci. Paris S \u0301er. A Math., 255:2897\u20132899, 1962. [66] Y. Nesterov. Gradient methods for minimizing composite objective function. Technical Report 76, Catholic University of Louvain, CORE, 2007. [67] J. Nocedal and S. J. Wright. Numerical Optimization. Springer Verlag, 2000. [68] N. Parikh, S. Boyd, et al. Proximal algorithms. Foundations and Trends R\r in Optimization, 1(3):127\u2013239, 2014. [69] G. Pierra. Decomposition through formalization in a product space. Mathematical Programming, 28(1): 96\u2013115, 1984. [70] C. Pontow and O. Scherzer. A derivative free approach for total variation regularization. arXiv:0911.1293, 2009. URL http://arxiv.org/abs/0911.1293. [71] A. Ramdas and R. J . Tibshirani. Fast and flexible admm algorithms for trend filtering. arXiv:1406.2082, 2014. [72] F. Rapaport and E. B. J. -P. Vert. Classification of arrayCGH data using fused SVM. Bioinformatics, 24 (13):i375\u2013i382, 2008. [73] A. Rinaldo. Properties and refinements of the fused lasso. Annals of Statistics, 37(5B):2922\u20132952, 2009. [74] R. T. Rockafellar. Monotone operators and hte proximal point algorithm. SIAM J. Control and Opt., 14 (5):877\u2013898, 1976. [75] S. Rogers, M. Girolami, C. Campbell, and R. Breitling. The latent process decomposition of cdna microarray data sets. IEEE/ACM Trans. Comp. Bio. and Bioinformatics, 2(2), April-June 2005. [76] L. I . Rudin, S. Osher, and E. Fatemi. Nonlinear total variation based noise removal algorithms. Physica D, 60:259\u2013268, 1992. 49 [77] Russakovsky, O., Deng, J., Su, H., Krause, J., Satheesh, S., Ma, S., Huang, Z., Karpathy A., Khosla, A., Bernstein, M., Berg, A.C., Fei-Fei, L. ImageNet Large Scale Visual Recognition Challenge International Journal of Computer Vision (IJCV), Year 2015, Volume 115, Number 3, pages 211-252 http:// image- net.org/challenges/LSVRC/2010/download- public [78] S. Salzo and S. Villa. Inexact and accelerated proximal point algorithms. J. Convex Analysis, 19(4), 2012. [79] M. Schmidt, N. L . Roux, and F. Bach. Convergence Rates of Inexact Proximal-Gradient Methods for Convex Optimization. In Advances in Neural Information Processing Systems (NIPS), 2011. [80] S. Sra. Scalable nonconvex inexact proximal splitting. In Advances in Neural Information Processing Systems, 2012. [81] S. Sra, S. Nowozin, and S. Wright, editors. Optimization for machine learning. MIT Press, 2011. [82] G. Steidl, S. Didas, and J. Neumann. Relations between higher order tv regularization and support vector regression. In Scale-Space, pages 515\u2013527, 2005. [83] N. Stransky et al. Regional copy number-independent deregulation of transcription in cancer. Nature Genetics, 38(12):1386\u20131396, December 2006. [84] R. Tibshirani. Regression shrinkage and selection via the lasso. J. R. Statist. Soc., 58(1):267\u2013288, 1996. [85] R. Tibshirani and P. Wang. Spatial smoothing and hot spot detection for CGH data using the fused lasso. Biostatistics, 9(1):18\u201329, 2008. [86] R. Tibshirani, M. Saunders, S. Rosset, J. Zhu, and K. Knight. Sparsity and smoothness via the fused lasso. J. Royal Stat. Soc.: Series B, 67(1):91\u2013108, 2005. [87] R. J. Tibshirani. Adaptive piecewise polynomial estimation via trend filtering. The Annals of Statistics, 42(1):285\u2013323, 02 2014. doi: 10.1214/13-AOS1189. [88] U. Alon et al. Broad patterns of gene expression revealed by clustering analysis of tumor and normal colon tissues probed by oligonucleotide arrays. Proc. Natl. Acad. Sci. USA, 96:6745\u20136750, June 1999. [89] J. -P. Vert and K. Bleakley. Fast detection of multiple change-points shared by many signals using group LARS. In Advances in Neural Information Processing Systems, 2010. [90] C. R. Vogel and M. E . Oman. Iterative methods for total variation denoising. SIAM Journal on Scientific Computing, 17(1):227\u2013238, 1996. [91] B. Wahlberg, S. Boyd, M. Annergren, and Y. Wang. An ADMM Algorithm for a Class of Total Variation Regularized Estimation Problems. In Proceedings 16th IFAC Symposium on System Identification, volume 16, 2012. [92] J. Wang and Q. Li and S. Yang and W. Fan and P. Wonka and J. Ye. A Highly Scalable Parallel Algorithm for Isotropic Total Variation Models In Proceedings of the 31st International Conference on Machine Learning (ICML-14), pages 235-243, 2014. [93] S. J. Wright, R. D . Nowak, and M. A . T. Figueiredo. Sparse reconstruction by separable approximation. IEEE Trans. Sig. Proc., 57(7):2479\u20132493, 2009. [94] M. Wytock, S. Sra, and J. Z . Kolter. Fast Newton Methods for the Group Fused Lasso. In Conference on Uncertainty in Artificial Intelligence, 2014. [95] S. Yang, J. Wang, W. Fan, X. Zhang, P. Wonka, and J. Ye. An Efficient ADMM Algorithm for Multidimensional Anisotropic Total Variation Regularization Problems. In ACM Knowledge Discovery and Data Mining (KDD), Chicago, Illinois, USA, August 2013. [96] Y. Yu. On decomposing the proximal map. In Advances in Neural Information Processing Systems, 2013. [97] M. Yuan and Y. Lin. Model Selection and Estimation in Regression with Grouped Variables. J. R. Statist. Soc. B, 68(1):49\u201367, 2006. [98] M. Zhu and T. Chan. An efficient primal-dual hybrid gradient algorithm for total variation image restoration. Technical report, UCLA CAM, 2008. 50 A Mathematical background We begin by recalling a few basic ideas from convex analysis; we recommend the recent book [11] for more details. Let X \u2282 Rn be any set. A function r : X \u2192 R \u222a {\u2212\u221e, +\u221e} is called lower semicontinuous if for every x \u2208 X and a sequence (xk ) that converges to x, it holds that xk \u2192 x =\u21d2 r(x)\u2264liminfkr(xk). (A.1) The set of proper lsc convex functions on X is denoted by \u03930(X ) (such functions are also called closed convex functions). The indicator function of a set C is defined as \u03b4C:X\u2192[0,\u221e]:x 7 \u2192 (0, ifx\u2208C; \u221e, ifx 6 \u2208C, (A.2) which is lsc if and only if C is closed. The convex conjugate of r is given by r\u2217(z) := supx\u2208dom r hx, zi \u2212 r(x), and a particularly important example is the Fenchel conjugate of a norm k\u00b7k ifr=k\u00b7k, then r \u2217 = \u03b4k\u00b7k\u2217\u22641, (A.3) where the norm k\u00b7k\u2217 is dual to k\u00b7k . Let r and h be proper convex functions. The infimal convolution of r with h is the convex function given by (r   h)(x) := inf y\u2208X r(y) + h(x \u2212 y)). For our purposes, the most important special case is infimal convolution of a convex function with the squared euclidean norm, which yields the Moreau envelope [65]. Proposition A.1 . Let r \u2208 \u03930(X ) and let \u03b3 > 0. The Moreau envelope of r indexed by \u03b3 is E\u03b3 r(\u00b7):=r (1 2\u03b3 k\u00b7k 2 2). (A.4) The Moreau envelope (A.4) is convex, real-valued, and continuous. Proof. See e.g . [11, Prop. 12 .15]. Using the Moreau envelope (A.4), we now formally introduce prox operators. Definition A.2 (Prox operator). Let r \u2208 \u03930(X ), and let y \u2208 X . Then proxr y is the unique point in X that satisfies E 1 r(y)=minx\u2208X(r(x)+1 2kx\u2212yk2 2 ), i.e., proxr (y) := argmin x\u2208X r(x)+1 2kx\u2212yk2 2, (A.5) and the nonlinear map proxr : X \u2192 X is called the prox operator of r. Sometimes the Fenchel conjugate r\u2217 is easier to use than r; similarly, sometimes the operator proxr \u2217 is easier to compute than proxr . The result below shows the connection. Proposition A.3 (Moreau decomposition). Let r \u2208 \u03930(X ), \u03b3 > 0, and y \u2208 X . Then, y = prox\u03b3r y + \u03b3 proxr\u2217/\u03b3(\u03b3\u22121 y). (A.6) Proof. A brief exercise; see e.g ., [11, Thm. 14 .3]. This decomposition provides the necessary tools to exploit useful primal\u2013dual relations. For the sake of clarity we also present an additional result regarding a particular primal-dual relation that plays a key role in our algorithms. 51 Proposition A.4 . Let f \u2208 \u03930(X ) and r \u2208 \u03930(Z). The problems below form a primal-dual pair. inf x\u2208X f(x)+r(Bx) s.t. Bx\u2208Z (A.7) inf u\u2208Z f \u2217(\u2212B T u)+r \u2217 (u). (A.8) Proof. Introduce an extra variable z = B x, so that the dual function is g(u) = inf x\u2208X f(x)+u T Bx+inf z\u2208Z r(z)\u2212u T z, which upon rewriting using Fenchel conjugates yields (A.8). Notions on submodular optimization are also required to introduce some of the decomposition techniques for 2D-TV in this paper. For a more thorough read on this topic we recommend the monograph Bach [5]. Definition A.5 (Submodular function). A set-function F : 2V \u2192 R, for 2V the power set of some set V , is submodular if and only if it fulfills the diminishing returns property, that is, for A \u2286 B \u2286 V and k \u2208 V , k/\u2208Bwehave F(A\u222a{k})\u2212F(A)\u2265F(B\u222a{k})\u2212F(B). Intuitively, a set-function is submodular if adding a new element to the set results in less value as the set grows in size. Definition A.6 (Modular function). A set-function F : 2V \u2192 R, for 2V the power set of some set V , F (\u2205) = 0 is modular (and also submodular) if and only if there exists s \u2208 Rp such that F (A) = P k\u2208A sk. That is, a function is modular if it always assigns the same value for each element added to the set, regardless of the other elements in the set. A common shorthand for modular functions is s(A) = P k\u2208A sk. Submodular functions can be thought as convex functions in the realm of discrete optimization, in the sense that they feature useful properties that allow for efficient optimization. Similarly, modular functions are connected to linear functions. To make such connections explicit we require of the following geometric concepts. Definition A.7 (Base polytope). The base polytope BF of a submodular function F is the polyhedron given by BF={y\u2208Rn :y(A)\u2264F(A)\u2200A\u2286V, y(V)=F(V)}. That is, the base polytope is a polyhedron defined through linear inequality constraints on the values of F for every one of the n elements of the powerset 2V , and an equality constraint for the complete set. This results in a combinatorial number of contraints, but fortunately this polytope will not be used directly. Definition A.8 (Support function). The support function hA for some non-empty closed convex set A \u2208 Rn is given by hA(x) = sup  x T a:x\u2208A \t. The support function is useful when connected with the following definition. Definition A.9 (Lov \u0301asz extension). Suppose a set-function F such that F (\u2205) = 0. Its Lov \u0301asz extension f : Rp \u2192 R is defined through the following mechanism. Take w \u2208 Rp input to f , and order its components indecreasingorderwj1\u2265 ...\u2265wjp, then f(w) = p X k=1 [F({j1,...,jk})\u2212F({j1,...,jk\u22121})]. Other equivalent definitions are possible: see Bach [5] for details. The following result links all the definitions so far. 52 Proposition A.10. For F submodular function such that F (\u2205) = 0 we have \u2022 Its Lov \u0301asz extension f is a convex function. \u2022 The support function of its base polytope is equal to its Lov \u0301asz extension, that is, hBF (x) = f (x). \u2022 The problem minS\u2286V F(S) is dual to minx f(x) + 1 2 kxk2 2, with S\u2217 = {k|x\u2217 k\u22650}. For proofs on these points we refer to Bach [5]. The takeaway from them is that any minimization on a submodular function can be cast into a convex optimization problem. Furthermore, for those convex minimization problems whose objective turns out to be the Lov \u0301asz extension of some other function, we can trace the steps the other way round, obtaining the minimization of a submodular function. Consider now a composite problem minS\u2286V P j Fj (S). The following results hold Proposition A.11. The problem minS\u2286V P j Fj (S) is equivalent to minx P jfj(x)+1 2 kxk2 2, with S\u2217 = {k|x\u2217 k \u2265 0}. Furthermore it is also equivalent to minyj \u2208BFj \u2200j 1 2kP j yjk2 2, with x\u2217 =\u2212 P jy\u2217 j. Proof. The first equivalence is a direct result of the properties of Lov\u0301asz extensions [5], in particular that for F, G set-functions with Lov \u0301asz extensions f, g , the Lov \u0301asz extension of F + G is f + g. For the second equivalence we have: min x X j fj(x) + 1 2 kxk 2 2=min x X j hBFj +1 2 kxk 2 2, = min x X j max yj \u2208BFj yT jx+ 1 2 kxk 2 2, = max yj \u2208BFj \u2200j min x \uf8eb \uf8edX j yT jx+ 1 2 kxk 2 2 \uf8f6 \uf8f8, = min yj \u2208BFj \u2200j 1 2k X j yj k2 2, and the dual relationship x\u2217 =\u2212 P jy\u2217 j comes from solving the inner minx problem for x. Therefore any decomposable submodular minimization, or sum of Lov \u0301asz extensions plus `2 term, can be casted into a geometric problem in terms of the base polytopes. For two functions the resultant problem is of special interest if rewritten as min y1\u2208BF1 y2\u2208BF2 1 2ky1+y2k 2 2= min y1 \u2208BF1 \u2212 y2 \u2208\u2212BF2 1 2ky1\u2212(\u2212y2)k 2 2= min a\u2208BF1 b\u2208\u2212BF2 1 2ka\u2212bk2 2 with a = y1, b = \u2212y2 , as this results in the classic geometric problem of finding the closest points between two convex sets. Many algorithms have been proposed to tackle problems in this form, most of them making use of alternating projection operations onto the two sets. Thus, a legitimate concern is how easy it is to compute such projections for BF1 and \u2212BF2 . Proposition A.12. Given a submodular function F and its base polytope BF , the projections \u03a0BF (z) and \u03a0\u2212BF (z) of a point z onto BF or its negated counterpart can be computed as \u03a0BF (z) = z \u2212 proxf(z), \u03a0\u2212BF (z) = z + proxf (\u2212z), with prox proximity operator of a function, f the Lov \u0301asz extension of F . 53 Proof. We start with the proximity of f and work our way to a relationship with the projection operator, proxf (z) \u2261 min x f(x)+1 2kx\u2212zk 2 2, = max y\u2208BF min x yT x+ 1 2kx\u2212zk 2 2, = max y\u2208BF yT(z\u2212y)+1 2k(z\u2212y)\u2212zk 2 2, = min y\u2208BF 1 2 kyk2 2\u2212y T z, \u2261 min y\u2208BF 1 2ky\u2212zk 2 2=\u03a0BF(z), where solving the inner minimization problem for x gives the primal\u2013dual relationship x\u2217 =z\u2212y \u2217 . Using this we can obtain the solution for the projection problem from the proximity problem, as \u03a0BF (z) = z \u2212 proxf (z). Projection onto the negated base polytope follows from the basic geometric argument \u03a0\u2212BF (z) = \u2212\u03a0BF (\u2212z). B proxTV toolbox All the Total\u2013Variation proximity solvers in this paper have been implemented as the proxTV toolbox for C++, Matlab and Python, available at https://github.com/albarji/proxTV. The toolbox has been designed to be used out of the box in a user friendly way; for instance, the top\u2013level Matlab function TV solves Total\u2013Variation proximity for a given signal under a variety of settings. For instance >> TV(X, lambda) solves Tv1 proximity for a signal X of any dimension and a regularization value lambda. The weighted version of this problem is also seamlessly tackled by just providing a vector of weights of the appropriate length as the lambda parameter. If a third parameter p is provided as >> TV(X,lambda , p) the general Tvp proximity problem is addressed, whereupon an adequate solver is chosen by the library. More advanced uses of the library are possible, allowing to specify which norm p and regularizer lambda values to use for each dimension of the signal, and even applying combinations of several different Tvp regularizers along the same dimension. Please refer to the documentation within the toolbox for further information. C Proof on the equality of taut-string problems Theorem C.1 (Equality of taut-string problems). Given the problems min s n X i=1 (si\u2212si\u22121) 2 , s.t.|si\u2212ri|\u2264wi\u2200i=1,...,n\u22121,s0=0,sn=rn, (C.1) and min \u02c6 s n X i=1 q1+(\u02c6si \u2212 \u02c6 si\u22121 ) 2 , s.t.|\u02c6si \u2212ri|\u2264wi\u2200i=1,...,n\u22121,\u02c6 s0=0,\u02c6 sn=rn, (C.2) for a non-zero vector w, both problems share the same minimum s\u2217 =\u02c6 s\u2217 . 54 Proof. The Lagrangian of problem C.1 takes the form L(s,\u03b1,\u03b2)= n X i=1 (si\u2212si\u22121) 2 + n\u22121 X i=1 \u03b1i(si \u2212 ri \u2212 wi) + n\u22121 X i=1 \u03b2i(\u2212wi \u2212 si + ri), and its Karush-Kuhn-Tucker optimality conditions are given by (si+1\u2212si)\u2212(si\u2212si\u22121)=\u03b1i \u2212\u03b2i, (C.3) |si\u2212ri|\u2264wi, (C.4) \u03b1i,\u03b2i\u22650, (C.5) \u03b1i(si \u2212 ri \u2212 wi)=0, (C.6) \u03b2i(\u2212wi \u2212 si+ri)=0, (C.7) \u2200i=1,...,n \u22121,andwherethefirstequationcomesfromthefactthat \u2202L(s,\u03b1,\u03b2) \u2202s = 0 at the minimum. As the only difference between problems C.1 and C.2 is in the form of the objective, the KKT conditions for problem C.2 take the same form, but for the first one, (\u02c6si+1 \u2212 \u02c6 si) p1+(\u02c6si+1\u2212 \u02c6 si )2 \u2212 (\u02c6si\u2212\u02c6 si\u22121) p1+(\u02c6si \u2212 \u02c6 si\u22121 )2 =\u02c6 \u03b1i\u2212 \u02c6 \u03b2i, (C.8) |\u02c6si \u2212ri|\u2264wi, (C.9) \u02c6 \u03b1i, \u02c6 \u03b2i\u22650, (C.10) \u02c6 \u03b1i(\u02c6si \u2212 ri \u2212 wi)=0, (C.11) \u02c6 \u03b2i(\u2212wi \u2212 \u02c6 si+ri)=0, (C.12) \u2200i = 1, . . . , n \u2212 1, and where we use hat notation for the dual coefficients to tell them apart from those of problem C.1 . Suppose s\u2217 minimizer to problem C.1, hence fulfilling the conditions C.3-C.7. In particular this means that it is feasible to assign values to the dual coefficients \u03b1, \u03b2 in such a way that the conditions above are met. Ifweset\u02c6s =s \u2217 in the conditions C.8 -C .12 the following observations are of relevance \u2022 Condition C.9 becomes the same as condition C.4, and so it is immediately met. \u2022 The operator f (x) = x \u221a 1+x2 is contractive and monotonous. \u2022 The couple (\u03b1i , \u03b2i) cannot be both non\u2013zero at the same time, since \u03b1i > 0 enforces si = ri + wi and\u03b2i >0enforcessi = ri \u2212wi, and wiisnon\u2013zero. \u2022 Hence and because \u03b1i, \u03b2i \u2265 0 and condition C.3 holds, when (si+1 \u2212 si) \u2212 (si \u2212 si \u22121) > 0 then \u03b1i>0,\u03b2i=0,andwhen(si+1\u2212si)\u2212(si\u2212si\u22121)<0then\u03b1i=0,\u03b2i>0. \u2022 f(si+1 \u2212 si) \u2212f(si \u2212 si \u22121) has the same sign as (si+1 \u2212 si) \u2212(si \u2212 si \u22121), since f is monotonous and as such preserves ordering. \u2022 Since f is contractive, condition C.8 can be met by setting ( \u02c6\u03b1i , \u02c6 \u03b2i)=(k\u03b1i,k\u03b2i)forsome0\u2264k<1. Note that this works because (\u03b1i , \u03b2i) cannot be both zero at the same time. \u2022 Condition C.10 is met for those choices of \u02c6\u03b1i , \u02c6 \u03b2i,asC.5wasmetfor\u03b1i,\u03b2iand0\u2264k<1. \u2022 Conditions C.11 and C.12 are also met for those choices of \u02c6\u03b1i , \u02c6 \u03b2i, as \u02c6\u03b1i(si \u2212 ri \u2212 wi) = k\u03b1i(si \u2212 ri\u2212wi)=0and\u02c6\u03b2i(\u2212wi \u2212 si + ri) = k\u03b2i(\u2212wi \u2212 si+ri)=0. 55 Therefore, all of the optimality conditions C.8 -C .12 for problem C.2 are met for s\u2217 solution of problem C.1, and so a minimum of problem C.1 is also a minimum for problem C.2 . The proof can be repeated the other way round by setting s = \u02c6 s\u2217 optimal for problem C.2, defining the operator f \u22121 (x) = x \u221a 1\u2212x2 , and observing that this operator is monotonous and expansive, so we can establish (\u03b1i, \u03b2i) =(k\u02c6\u03b1i, k \u02c6 \u03b2i) for some k \u2265 1 and the optimality conditions C.3-C.7 for problem C.1 are met following a similar reasoning to the one presented above. Thus, a minimum for problem C.2 is also a minimum for problem C.1, which joined with the previous result completes the proof. D Proof on the equivalence of linearized taut-string method Proposition D.1 . Using affine approximations to the greatest convex minorant and the smallest concave majorant does not change the solution of the taut-string method. Proof. Let us note \u2229(f ) as the smallest concave majorant of some function f taking integer values, \u222a(f ) as the greatest concave minorant, \u0304 a(f) as the smallest affine majorant and \u0304 a(f ) as the greatest affine minorant. By definition we have \u0304 a(f(i)) \u2264 \u222a(f(i)) \u2264 f(i) \u2264 \u2229(f(i)) \u2264 \u0304a(f(i)) \u2200i \u2208 Z Consider now the nature of the taut-string problem, where a vertically symmetric tube of radius \u03bbi at each section is modelled by following the majorant of the tube bottom (f \u2212 \u03bb) and the minorant of the tube ceiling (f + \u03bb). We work the inequalities above as: f(i)\u2212\u03bbi\u2264\u2229(f(i)\u2212\u03bbi)\u2264\u0304a(f(i)\u2212\u03bbi) \u0304 a(f(i)+\u03bbi)\u2264\u222a(f(i)+\u03bbi)\u2264f(i)+\u03bbi We will show that an overlap of smallest concave majorant / greatest convex minorant takes place iff the same overlap happens when using the affine approximations. We formally define overlap as the setting where forapointiwehave\u222a(fi+\u03bbi)\u2264\u2229(fi\u2212\u03bbi). One side of the implication is easy: if \u222a(f(i) + \u03bbi) \u2264 \u2229(f (i) \u2212 \u03bb) for some i, then using the relations above we have \u0304 a(f(i) + \u03bbi) \u2264 \u222a(f(i) + \u03bbi) \u2264 \u2229(f(i) \u2212 \u03bbi) \u2264 \u0304a(f(i) \u2212 \u03bbi), and so the affine approximation detects any overlap taking place in the concave/convex counterpart. The opposite requires the key observation that in the taut-string method both majorant and minorant functions are clamped to the same point of origin: f (0) = 0 at the start of the method, or the point where the last segment was fixed after each restart. Let us assume f (0) = 0 without loss of generality. Suppose now that an overlap is detected by the affine approximation. Because of this affine nature the majorant/minorant slopes are constant, i.e. \u0304 \u03b41= \u0304 \u03b42=...= \u0304 \u03b4n= \u0304 \u03b4, \u0304 \u03b41= \u0304 \u03b42=...= \u0304 \u03b4n= \u0304 \u03b4. However, if we consider the convex/concave approximations these slopes can increase/decrease as the segment progresses, that is: \u03b4\u222a 1 \u2264\u03b4\u222a 2 \u2264...\u2264\u03b4\u222a n, \u03b4\u2229 1 \u2265\u03b4\u2229 2 \u2265...\u2265\u03b4\u2229 n. Consider now the majorant/minorant values, expressed through the slopes and taking into account the observa- tion above about the starting point. \u2229(f(i) \u2212 \u03bbi) = i X j=1 \u03b4\u2229 j, \u222a(f(i)+\u03bbi) = i X j=1 \u03b4\u222a j, \u0304 a(f(i)\u2212\u03bbi)=i \u0304 \u03b4, \u0304 a(f(i) + \u03bbi) =i \u0304 \u03b4. 56 Since an overlap has been detected in the affine approximation, we have that for some point i i \u0304 \u03b4= \u0304 a(f(i)+\u03bbi)\u2264\u0304a(f(i)\u2212\u03bbi)=i \u0304 \u03b4, so \u0304 \u03b4 \u2264 \u0304\u03b4 . Consider now the values of the affine minorant/majorant at the point immediately after the origin, \u0304 a(f1\u2212\u03bb1)= \u0304 \u03b4, \u0304 a(f1+\u03bb1)= \u0304 \u03b4. We will show now that the convex/convex counterpart must take exactly the same values at these points. To do so we take into account the following fact: there must exist points x and y, x, y \u2264 i, where \u0304 a(fx+\u03bbx) =fx+\u03bbx = \u222a(fx+\u03bbx), \u0304 a(fy\u2212\u03bby)=fy\u2212\u03bby=\u2229(fy\u2212\u03bby), that is to say, the affine minorant/majorant must touch the tube ceiling/bottom at some point, otherwise we could obtain a greater minorant / smaller majorant by reducing this distance. The equalities to the convex minorant / concave majorant are then obtained by exploiting the inequalities at the beginning of the proof. By the already presented inequalities \u222a(f1 + \u03bb1) \u2265 \u0304 a(f1 + \u03bb1), but let us suppose for a moment \u222a(f1+\u03bb1)> \u0304 a(f1 + \u03bb1). This would imply \u03b4\u222a 1> \u0304 \u03b4. We then would have that at the touching point x fx+\u03bbx = \u0304 a(fx+\u03bbx) =x \u0304 \u03b4<x\u03b4 \u222a 1 \u2264\u222a(f1+\u03bb1), as the slopes in a convex minorant must be monotonically increasing. However, such function would not be a valid convex minorant, as it would grow over f + \u03bb. Therefore \u222a(f1 + \u03bb1) = \u0304 a(f1 + \u03bb1) must hold. Using a symmetric argument, \u2229(f1 \u2212 \u03bb1) = \u0304 a(f1 \u2212 \u03bb1) can also be shown to hold. Joining this with the previous facts we have that \u222a(f1+\u03bb1)= \u0304 a(f1+\u03bb1)= \u0304 \u03b4\u2264\u0304\u03b4=\u0304 a(f1\u2212\u03bb1)=\u2229(f1\u2212\u03bb1), and therefore the overlap detected by the affine approximation is detected through its convex/concave version as well through \u222a(f1 + \u03bb1) \u2264 \u2229(f1 \u2212 \u03bb1). E Projected-newton for weighted Tv1D 1 In this appendix we present details of a projected-Newton (PN) approach to solving the weighted-TV prob- lem (2.6). Although taut-string approaches are empirically superior to this PN approach, the details of this derivation prove to be useful when developing subroutines for handling `p -norm TV prox-operators, but perhaps their greatest use lies in presenting a general method that could be applied to other problems that have structures similar to TV, e.g ., group total-variation [2, 94] and `1 -trend filtering [47, 87]. The weighted-TV dual problem (2.7) is a bound-constrained QP, so it could be solved using a variety of methods such as TRON [56], L-BFGS-B [19], or projected-Newton (PN) [14]. Obviously, these methods will be inefficient if invoked off-the-shelf; exploitation of problem structure is a must for solving (2.7) efficiently. PN lends itself well to such structure exploitation; we describe the details below. PN runs iteratively in three key steps: first it identifies a special subset of active variables and uses these to compute a reduced Hessian. Then, it uses this Hessian to scale the gradient and move in the direction opposite to it, damping with a stepsize, if needed. Finally, the next iterate is obtained by projecting onto the constraints, and the cycle repeats. PN can be regarded as an extension of the gradient-projection method (GP, [15]), where the components of the gradient that make the updating direction infeasible are removed; in PN both the gradient and the Hessian are reduced to guarantee this feasibility. At each iteration PN selects the active variables I:= {i|(ui = \u2212wi and[\u2207\u03c6(u)]i>  ) or (ui = wi and[\u2207\u03c6(u)]i <\u2212 )}, (E.1) 57 where   \u2265 0 is small scalar. This corresponds to the set of variables at a bound, and for which the gradient points inside the feasible region; that is, for these variables to further improve the objective function we would have to step out of bounds. It is thus clear that these variables are of no use for this iteration, so we define the complementary set \u0304I := {1 . . . n} \\I of indices not in I , which are the variables we are interested in updating. From the Hessian H = \u22072\u03c6(u) we extract the reduced Hessian H \u0304I by selecting rows and columns indexed by \u0304I , and in a similar way the reduce gradient [\u2207\u03c6(u)] \u0304I . Using these we perform a Newton\u2013like \u201creduced\u201d update in the form u\u0304I \u2190 P(u\u0304I \u2212 \u03b1H \u22121 \u0304 I [\u2207\u03c6(u)] \u0304I ), (E.2) where \u03b1 is a stepsize, and P denotes projection onto the constraints, which for box\u2013constraints reduces to simple element\u2013wise projection. Note that only the variables in the set \u0304I are updated in this iterate, leaving the rest unchanged. While such update requires computing the inverse of the reduced Hessian H \u0304I , which in the general case can amount to computational costs in the O(n3 ) order, we will see now how exploiting the structure of the problem allows us to perform all the steps above efficiently. First, observe that for (2.7) the Hessian is H=DD T = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed 2\u22121 \u22121 2\u22121 \u22121 2 . . . . . . . . . \u22121 \u22121 2 \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8 \u2208 R(n\u22121)\u00d7(n\u22121) . Next, observe that whatever the active set I , the corresponding reduced Hessian H \u0304I remains symmetric tridiagonal. This observation is crucial because then we can quickly compute the updating direction d \u0304I = H\u22121 \u0304 I [\u2207\u03c6(u)] \u0304I , which can be done by solving the linear system H \u0304I d \u0304I = [\u2207\u03c6(ut )] \u0304I as follows: 1. Compute the Cholesky decomposition H \u0304I = RTR. 2. Solve the linear system RT v = [\u2207\u03c6(u)] \u0304I to obtain v. 3. Solve the linear system Rd \u0304I = v to obtaind\u0304I . Because the reduced Hessian is also tridiagonal, its Cholesky decomposition can be computed in linear time to yield a bidiagonal matrix R, which in turn allows to solve the subsequent linear systems also in linear time. Extremely efficient routines to perform all these tasks are available in the LAPACK libraries [3]. The next crucial ingredient is efficient selection of the stepsize \u03b1. The original PN algorithm Bertsekas [14] recommends Armijo-search along projection arc. However, for our problem this search is inordinately expensive. So we resort to a backtracking strategy using quadratic interpolation [67], which works admirably well. This strategy is as follows: start with an initial stepsize \u03b10 = 1. If the current stepsize \u03b1k does not provide sufficient decrease in \u03c6, build a quadratic model using \u03c6(u), \u03c6(u \u2212 \u03b1k d), and \u2202\u03b1k \u03c6(u). Then, the stepsize \u03b1k+1 is set to the value that minimizes this quadratic model. In the event that at some point of the procedure the new \u03b1k+1 is larger than or too similar to \u03b1k , its value is halved. In this fashion, quadratic approximations of \u03c6 are iterated until a good enough \u03b1 is found. The goodness of a stepsize is measured using the following Armijo-like sufficient descent rule \u03c6(u)\u2212\u03c6(P[u\u2212\u03b1kd])\u2265\u03c3\u00b7\u03b1k \u00b7(\u2207\u03c6(u)\u00b7d), where a tolerance \u03c3 = 0.05 works well practice. Note that the gradient \u2207\u03c6(u) might be misleading in the condition above if u has components at the boundary and d points outside this boundary (because then, due to the subsequent projection no real im- provement would be obtained by stepping outside the feasible region). To address this concern, we modify the computation of the gradient \u2207\u03c6(u), zeroing our the entries that relate to direction components pointing outside the feasible set. 58 Algorithm 11 Stepsize selection for Projected Newton Initialize: \u03b10 = 1, k = 0, d, tolerance parameter \u03c3 while\u03c6(u)\u2212\u03c6(P[u\u2212\u03b1kd])<\u03c3 \u00b7\u03b1k \u00b7(\u2207\u03c6(u)\u00b7d)do Minimize quadratic model: \u03b1k+1 = \u03b1 2 k \u2202\u03b1k \u03c6(u) 2(\u03c6(u)\u2212\u03c6(u\u2212\u03b1k )+\u03b1k \u2202\u03b1k \u03c6(u)) . if\u03b1k+1>\u03b1kor\u03b1k+1'\u03b1k,then\u03b1k+1= 1 2\u03b1k. k\u2190k+1 end while return \u03b1k Algorithm 12 PN algorithm for TV-L1-proximity Let W = Diag(wi); solve DDT W u\u2217 = Dy. if kW\u22121u \u2217 k\u221e \u2264 1, return u\u2217 . u 0=P[u \u2217 ],t =0. while gap(u) >   do Identify set of active constraints I; let \u0304I = {1. .. n} \\ I. Construct reduced Hessian H \u0304I . Solve H\u0304Id\u0304I = [\u2207\u03c6(ut )] \u0304I . Compute stepsize \u03b1 using backtracking + interpolation (Alg. 11). Update u t+1 \u0304 I = P[ut \u0304 I \u2212 \u03b1d\u0304I]. t\u2190t+1. end while return ut. The whole stepsize selection procedure is shown in Algorithm 11. The costliest operation in this procedure is the evaluation of \u03c6, which, nevertheless can be done in linear time. Furthermore, in practice a few iterations more than suffice to obtain a good stepsize. Overall, a full PN iteration as described above runs at O(n) cost. Thus, by exploiting the structure of the problem, we manage to reduce the O(n3 ) cost per iteration of a general PN algorithm to a linear-cost method. The pseudocode of the resulting method is shown as Algorithm 12. Note that in the special case when the weights W := Diag(wi) are so large that the unconstrained optimum coincides with the constrained one, we can obtain u\u2217 directly via solving DDT W u\u2217 = Dy (which can also be done at O(n) cost). The duality gap of the current solution is used as a stopping criterion, where we use a tolerance of   = 10\u22125 in practice. F Testing images and videos, and experimental results The images used in the experiments are displayed in what follows, along with their noisy/denoised and convoluted/deconvoluted versions for each algorithm tested. QR barcode images were generated by encoding random text using Google chart API4 . Images shape and phantom 5 are publicly available and frequently used in image processing. trollface and comic 6 are also publicly available. gaudi, used in the multicore experiments, is a high resolution 3197 \u00d7 3361 photograph of Gaudi\u2019s Casa Batll \u0301o7 . The rest of the images were originally created by the authors. For the video experiments, the salesman, coastguard and bicycle sequences were used, which are publicly available at [18]. As an example, frames from the first video are displayed in what follows, along with their noisy/denoised versions. 4http://code.google.com/intl/en- EN/apis/chart/ 5Extracted from http://en.wikipedia.org/wiki/File:Shepp_logan.png 6Author: Francisco Molina. http://www.afrikislife.net/english/ 7Extracted from http://www.flickr.com/photos/jeffschwartz/202423023/ randomQR-0 (100 \u00d7 100) randomQR-1 (175 \u00d7 175) randomQR-2 (300 \u00d7 300) randomQR-3 (375 \u00d7 375) randomQR-4 (500 \u00d7 500) shape (128 \u00d7 128) trollface (388 \u00d7 388) diagram (259 \u00d7 259) text (665 \u00d7 665) comic (402 \u00d7 402) contour (1000 \u00d7 1000) phantom (1713 \u00d7 1713) Figure 25: Test images used in the experiments together with their sizes in pixels. Images displayed have been scaled down to fit in page. randomQR-0 (100 \u00d7 100) randomQR-1 (175 \u00d7 175) randomQR-2 (300 \u00d7 300) randomQR-3 (375 \u00d7 375) randomQR-4 (500 \u00d7 500) shape (128 \u00d7 128) trollface (388 \u00d7 388) diagram (259 \u00d7 259) text (665 \u00d7 665) comic (402 \u00d7 402) contour (1000 \u00d7 1000) phantom (1713 \u00d7 1713) Figure 26: Noisy versions of images used in the experiments. randomQR-0 (100 \u00d7 100) randomQR-1 (175 \u00d7 175) randomQR-2 (300 \u00d7 300) randomQR-3 (375 \u00d7 375) randomQR-4 (500 \u00d7 500) shape (128 \u00d7 128) trollface (388 \u00d7 388) diagram (259 \u00d7 259) text (665 \u00d7 665) comic (402 \u00d7 402) contour (1000 \u00d7 1000) phantom (1713 \u00d7 1713) Figure 27: Denoising results for the test images. randomQR-0 (100 \u00d7 100) randomQR-1 (175 \u00d7 175) randomQR-2 (300 \u00d7 300) randomQR-3 (375 \u00d7 375) randomQR-4 (500 \u00d7 500) shape (128 \u00d7 128) trollface (388 \u00d7 388) diagram (259 \u00d7 259) text (665 \u00d7 665) comic (402 \u00d7 402) contour (1000 \u00d7 1000) phantom (1713 \u00d7 1713) Figure 28: Noisy and convoluted versions of images used in the experiments. randomQR-0 (100 \u00d7 100) randomQR-1 (175 \u00d7 175) randomQR-2 (300 \u00d7 300) randomQR-3 (375 \u00d7 375) randomQR-4 (500 \u00d7 500) shape (128 \u00d7 128) trollface (388 \u00d7 388) diagram (259 \u00d7 259) text (665 \u00d7 665) comic (402 \u00d7 402) contour (1000 \u00d7 1000) phantom (1713 \u00d7 1713) Figure 29: Deconvolution results for the test images. Figure 30: A selection of frames from the salesman video sequence. Figure 31: Noisy frames from the salesman video sequence. Figure 32: Denoised frames from the salesman video sequence.", "common_format": {"doc_id": "./1411.0589v3.hocr", "tokens": ["Modular", "proximal", "optimization", "for", "multidimensional", "total-variation", "regularization", "\u0301", "Alvaro", "Barbero", "alvaro.barbero@inv.uam.es", "Instituto", "de", "Ingenier\u0301\u0131a", "del", "Conocimiento", "and", "Universidad", "Aut", "\u0301onoma", "de", "Madrid", "Francisco", "Tom", "\u0301as", "y", "Valiente", "11,", "Madrid,", "Spain", "Suvrit", "Sra\u2217", "suvrit@mit.edu", "Laboratory", "for", "Information", "and", "Decision", "Systems", "Massachusetts", "Institute", "of", "Technology", "(MIT),", "Cambridge,", "MA", "Abstract", "We", "study", "TV", "regularization,", "a", "widely", "used", "technique", "for", "eliciting", "structured", "sparsity.", "In", "particular,", "we", "propose", "efficient", "algorithms", "for", "computing", "prox-operators", "for", "`p", "-norm", "TV.", "The", "most", "important", "among", "these", "is", "`1", "-norm", "TV,", "for", "whose", "prox-operator", "we", "present", "a", "new", "geometric", "analysis", "which", "unveils", "a", "hitherto", "unknown", "connection", "to", "taut-string", "methods.", "This", "connection", "turns", "out", "to", "be", "remarkably", "useful", "as", "it", "shows", "how", "our", "geometry", "guided", "implementation", "results", "in", "efficient", "weighted", "and", "unweighted", "1D-TV", "solvers,", "surpassing", "state-of-the-art", "methods.", "Our", "1D-TV", "solvers", "provide", "the", "backbone", "for", "building", "more", "complex", "(two", "or", "higher-dimensional)", "TV", "solvers", "within", "a", "modular", "proximal", "optimization", "approach.", "We", "review", "the", "literature", "for", "an", "array", "of", "methods", "exploiting", "this", "strategy,", "and", "illustrate", "the", "benefits", "of", "our", "modular", "design", "through", "extensive", "suite", "of", "experiments", "on", "(i)", "image", "denoising,", "(ii)", "image", "deconvolution,", "(iii)", "four", "variants", "of", "fused-lasso,", "and", "(iv)", "video", "denoising.", "To", "underscore", "our", "claims", "and", "permit", "easy", "reproducibility,", "we", "provide", "all", "the", "reviewed", "and", "our", "new", "TV", "solvers", "in", "an", "easy", "to", "use", "multi-threaded", "C++,", "Matlab", "and", "Python", "library.", "1", "Introduction", "Sparsity", "impacts", "the", "entire", "data", "analysis", "pipeline,", "touching", "algorithmic,", "modeling,", "as", "well", "as", "practical", "aspects.", "Most", "commonly,", "sparsity", "is", "elicited", "via", "`1-norm", "regularization", "[20,", "84].", "However,", "numerous", "applications", "rely", "on", "more", "refined", "\u201cstructured\u201d", "notions", "of", "sparsity,", "e.g.,", "groupwise-sparsity", "[6,", "57,", "63,", "97],", "hierarchical", "sparsity", "[4,", "61],", "gradient", "sparsity", "[76,", "86,", "90],", "or", "sparsity", "over", "structured", "\u2018atoms\u2019", "[24].", "Such", "regularizers", "typically", "arise", "in", "optimization", "problems", "of", "the", "form", "minx\u2208Rn", "\u03a6(x)", ":=", "`(x)", "+", "r(x),", "(1.1)", "where", "`", ":", "Rn", "\u2192", "R", "is", "a", "smooth", "loss", "function", "(often", "convex),", "while", "r", ":", "Rn", "\u2192", "R", "\u222a", "{+\u221e}", "is", "a", "lower", "semicontinuous,", "convex,", "and", "nonsmooth", "regularizer", "that", "induces", "sparsity.", "We", "focus", "on", "instances", "of", "(1.1)", "where", "r", "is", "a", "weighted", "anisotropic", "Total-Variation", "(TV)", "regularizer:1", ",", "which,", "foravectorx\u2208Rnandfixedweightsw\u22650isdefinedas", "r(x)", "def", "=Tv", "1", "p(w;", "x)", "def", "=", " Xn\u22121", "j=1", "wj", "|xj+1", "\u2212", "xj", "|p 1/p", "p\u22651.", "(1.2)", "More", "generally,", "if", "X", "is", "an", "order-m", "tensor", "in", "R", "Qm", "j=1", "nj", "with", "entries", "Xi1,i2,...,im", "(1", "\u2264", "ij", "\u2264", "nj", "for", "1", "\u2264", "j", "\u2264", "m);", "we", "define", "the", "weighted", "m-dimensional", "anisotropic", "TV", "regularizer", "as", "Tv", "m", "p", "(W;X)", "def", "=", "m", "X", "k=1", "X", "Ik={i1,...,im}\\ik", " nk", "\u22121", "X", "j=1", "wIk", ",j", "|X[k]", "j+1\u2212X", "[k]", "j", "|pk", " 1/pk", ",", "(1.3)", "\u2217", "An", "initial", "version", "of", "this", "work", "was", "performed", "during", "2013-14,", "when", "the", "author", "was", "with", "the", "Max", "Planck", "Institute", "for", "Intelligent", "Systems,", "T", "\u0308ubingen,", "Germany,", "and", "with", "Carnegie", "Mellon", "University,", "Pittsburgh.", "1We", "use", "the", "term", "\u201canisotropic\u201d", "to", "refer", "to", "the", "specific", "TV", "penalties", "considered", "in", "this", "paper.", "1", "a", "r", "X", "i", "v", ":", "1", "4", "1", "1", ".", "0", "5", "8", "9", "v", "3", "[", "s", "t", "a", "t", ".", "M", "L", "]", "3", "0", "D", "e", "c", "2", "0", "1", "7", "where", "X[k]", "j", "\u2261", "Xi1,...,ik\u22121,j,ik+1,...,im", ",", "wIk,j\u22650areweights,andp\u2261[pk\u22651]for1\u2264k\u2264m.", "IfXisamatrix,", "expression", "(1.3)", "reduces", "to", "(note,", "p,", "q", "\u2265", "1)", "Tv", "2", "p,q(W;X)=", "n1", "X", "i=1", " n2", "\u22121", "X", "j=1", "w1,j", "|xi,j", "+1", "\u2212", "xi,j", "|p 1/p", "+", "n2", "X", "j=1", " n1", "\u22121", "X", "i=1", "w2,i|xi+1,j", "\u2212", "xi,j", "|q 1/q", ",", "(1.4)", "These", "definitions", "look", "formidable;", "already", "2D-TV", "(1.4)", "or", "even", "the", "simplest", "1D-TV", "(1.2)", "are", "fairly", "complex,", "which", "further", "complicates", "the", "overall", "optimization", "problem", "(1.1).", "Fortunately,", "this", "complexity", "can", "be", "\u201clocalized\u201d", "by", "invoking", "prox-operators", "[65],", "which", "are", "now", "widely", "used", "across", "machine", "learning", "[68,", "81].", "The", "main", "idea", "of", "using", "prox-operators", "while", "solving", "(1.1)", "is", "as", "follows.", "Suppose", "\u03a6", "is", "a", "convex", "lsc", "function", "onasetX\u2282Rn", ".", "The", "prox-operator", "of", "\u03a6", "is", "defined", "as", "the", "map", "prox\u03a6", "def", "=y", "7", "\u2192", "argmin", "x\u2208X", "1", "2kx\u2212yk2", "2+\u03a6(x)", "for", "y\u2208Rn", ".", "(1.5)", "A", "popular", "method", "based", "on", "prox-operators", "is", "the", "proximal", "gradient", "method", "(also", "known", "as", "\u2018forward", "backward", "splitting\u2019),", "which", "performs", "a", "gradient", "(forward)", "step", "followed", "by", "a", "proximal", "(backward)", "step", "to", "iterate", "xk+1", "=", "prox\u03b7kr(xk", "\u2212\u03b7k\u2207`(xk)),", "k", "=0,1,.", "...", "(1.6)", "Numerous", "other", "proximal", "methods", "exist\u2014see", "e.g", ".,", "[13,", "27,", "46,", "66,", "79].", "To", "implement", "the", "proximal-gradient", "iteration", "(1.6)", "efficiently,", "we", "require", "a", "subroutine", "that", "computes", "the", "prox-operator", "proxr", ".", "An", "additional", "concern", "is", "whether", "the", "overall", "algorithm", "requires", "an", "exact", "computation", "of", "proxr", ",", "or", "merely", "a", "moderately", "inexact", "computation.", "This", "concern", "is", "justified:", "rarely", "does", "r", "admit", "an", "exact", "algorithm", "for", "computing", "proxr", ".", "Fortunately,", "proximal", "methods", "easily", "admit", "inexactness,", "e.g.,", "[78\u201380],", "which", "allows", "approximate", "prox-operators", "(as", "long", "as", "the", "approximation", "is", "sufficiently", "accurate).", "We", "study", "both", "exact", "and", "inexact", "prox-operators", "in", "this", "paper,", "contingent", "upon", "the", "`p-norm", "used", "and", "on", "the", "data", "dimensionality", "m.", "1.1", "Contributions", "In", "particular,", "we", "review,", "analyze,", "implement,", "and", "experiment", "with", "a", "variety", "of", "fast", "algorithms.", "The", "ensuing", "contributions", "of", "this", "paper", "are", "summarized", "below.", "\u2022", "Geometric", "analysis", "that", "leads", "to", "a", "new,", "efficient", "version", "of", "the", "classic", "Taut", "String", "Method", "[32],", "whose", "origins", "can", "be", "traced", "back", "to", "[10]", "\u2013", "this", "version", "turns", "out", "to", "perform", "better", "than", "most", "of", "the", "recently", "developed", "TV", "proximity", "methods.", "\u2022", "A", "previously", "unknown", "connection", "between", "(a", "variation", "of)", "this", "classic", "algorithm", "and", "Condat\u2019s", "un-", "weighted", "TV", "method", "[28].", "This", "connection", "provides", "a", "geometric,", "more", "intuitive", "interpretation", "and", "helps", "us", "define", "a", "hybrid", "taut-string", "algorithm", "that", "combines", "the", "strengths", "of", "both", "methods,", "while", "also", "providing", "a", "new", "efficient", "algorithm", "for", "weighted", "`1", "-norm", "1D-TV", "proximity.", "\u2022", "Efficient", "prox-operators", "for", "general", "`p-norm", "(p", "\u2265", "1)", "1D-TV.", "In", "particular,", "\u2013", "For", "p", "=", "2,", "we", "present", "a", "specialized", "Newton", "method", "based", "on", "the", "root-finding", "strategy", "of", "[64],", "\u2013", "For", "the", "general", "p", "\u2265", "1", "case", "we", "describe", "both", "\u201cprojection-free\u201d", "and", "projection", "based", "first-order", "methods.", "\u2022", "Scalable", "proximal-splitting", "algorithms", "for", "computing", "2D", "(1.4)", "and", "higher-D", "TV", "(1.3)", "prox-operators.", "We", "review", "an", "array", "of", "methods", "in", "the", "literature", "that", "use", "prox-splitting,", "and", "through", "extensive", "experi-", "ments", "show", "that", "a", "splitting", "strategy", "based", "on", "alternating", "reflections", "is", "the", "most", "effective", "in", "practice.", "Furthermore,", "this", "modular", "construction", "of", "2D", "and", "higher-D", "TV", "solvers", "allows", "reuse", "of", "our", "fast", "1D-TV", "routines", "and", "exploitation", "of", "the", "massive", "parallelization", "inherent", "in", "matrix", "and", "tensor", "TV.", "2", "\u2022", "The", "final", "most", "important", "contribution", "of", "our", "paper", "is", "a", "well-tuned,", "multi-threaded", "open-source", "C++,", "Matlab", "and", "Python", "implementation", "of", "all", "the", "reviewed", "and", "developed", "methods.2", "To", "complement", "our", "algorithms,", "we", "illustrate", "several", "applications", "of", "TV", "prox-operators", "to:", "(i)", "image", "and", "video", "denoising;", "(ii)", "image", "deconvolution;", "and", "(iii)", "four", "variants", "of", "fused-lasso.", "Note:", "We", "have", "invested", "great", "efforts", "to", "ensure", "reproducibility", "of", "our", "results.", "In", "particular,", "given", "the", "vast", "attention", "that", "TV", "problems", "have", "received", "in", "the", "literature,", "we", "believe", "it", "is", "valuable", "to", "both", "users", "of", "TV", "and", "other", "researchers", "to", "have", "access", "to", "our", "code,", "datasets,", "and", "scripts,", "to", "independently", "verify", "our", "claims,", "if", "desired.3", "1.2", "Related", "work", "The", "literature", "on", "TV", "is", "too", "large", "to", "permit", "a", "comprehensive", "review", "here.", "Instead,", "we", "mention", "the", "most", "directly", "related", "work", "to", "help", "place", "our", "contributions", "in", "perspective.", "We", "focus", "on", "anisotropic-TV", "(in", "the", "sense", "of", "[16]),", "in", "contrast", "to", "isotropic-TV", "[76].", "Isotropic", "TV", "regularization", "arises", "frequently", "in", "image", "denoising", "and", "signal", "processing,", "and", "quite", "a", "few", "TV-based", "denoising", "algorithms", "exist", "[98,", "see", "e.g", ".]", ".", "The", "anisotropic", "TV", "regularizers", "Tv", "1D", "1", "and", "Tv2D", "1,1", "arise", "in", "image", "denoising", "and", "deconvolution", "[31],", "in", "the", "fused-lasso", "[86],", "in", "logistic", "fused-lasso", "[50],", "in", "change-point", "detection", "[39],", "in", "graph-cut", "based", "image", "segmentation", "[21],", "in", "submodular", "optimization", "[43];", "see", "also", "the", "related", "work", "in", "[89].", "This", "broad", "applicability", "and", "importance", "of", "anisotropic", "TV", "is", "the", "key", "motivation", "towards", "developing", "carefully", "tuned", "proximity", "operators.", "There", "is", "a", "rich", "literature", "of", "methods", "tailored", "to", "anisotropic", "TV,", "e.g.,", "those", "developed", "in", "the", "context", "of", "fused-lasso", "[34,", "60],", "graph-cuts", "[21],", "ADMM-style", "approaches", "[27,", "91],", "or", "fast", "methods", "based", "on", "dynamic", "programming", "[45]", "or", "KKT", "conditions", "analysis", "[28].", "However,", "it", "seems", "that", "anisotropic", "TV", "norms", "other", "than", "`1", "has", "not", "been", "studied", "much", "in", "the", "literature,", "although", "recognized", "as", "a", "form", "of", "Sobolev", "semi-norms", "[70].", "For", "1D-TV", "and", "for", "the", "particular", "`1", "norm,", "there", "exist", "several", "direct", "methods", "that", "are", "exceptionally", "fast.", "We", "treat", "this", "problem", "in", "detail", "in", "Section", "2,", "and", "hence", "refer", "the", "reader", "to", "that", "section", "for", "discussion", "of", "closely", "related", "work", "on", "fast", "solvers.", "We", "note", "here,", "however,", "that", "in", "contrast", "to", "many", "of", "the", "previous", "fast", "solvers,", "our", "solvers", "allow", "weights,", "a", "capability", "that", "can", "be", "very", "important", "in", "applications", "[43].", "Regarding", "2D-TV,", "Goldstein", "T.", "[36]", "presented", "a", "so-called", "\u201cSplit-Bregman\u201d", "(SB).", "It", "turns", "out", "that", "this", "method", "is", "essentially", "a", "variant", "of", "the", "well-known", "ADMM", "method.", "In", "contrast", "to", "the", "2D", "approach", "presented", "here,", "the", "SB", "strategy", "followed", "by", "Goldstein", "T.", "[36]", "is", "to", "rely", "on", "`1", "-soft", "thresholding", "substeps", "instead", "of", "1D-TV", "substeps.", "From", "an", "implementation", "viewpoint,", "the", "SB", "approach", "is", "somewhat", "simpler,", "but", "not", "necessarily", "more", "accurate.", "Incidentally,", "sometimes", "such", "direct", "ADMM", "approaches", "turn", "out", "to", "be", "less", "effective", "than", "ADMM", "methods", "that", "rely", "on", "more", "complex", "1D-TV", "prox-operators", "[71].", "It", "is", "worth", "highlighting", "that", "it", "is", "not", "just", "proximal", "solvers", "such", "as", "FISTA", "[13],", "SpaRSA", "[93],", "SALSA", "[1],", "TwIST", "[16],", "T", "R", "I", "P", "[46],", "that", "can", "benefit", "from", "our", "fast", "prox-operators.", "All", "other", "2D", "and", "higher-D", "TV", "solvers,", "e.g.,", "[95],", "as", "well", "as", "the", "recent", "ADMM", "based", "trend-filtering", "solvers", "of", "Tibshirani", "[87]", "immediately", "benefit,", "not", "only", "in", "speed", "but", "also", "by", "gaining", "the", "ability", "to", "solve", "weighted", "problems.", "1.3", "Summary", "of", "the", "paper", "The", "remainder", "of", "the", "paper", "is", "organized", "as", "follows.", "In", "Section", "2", "we", "consider", "prox", "operators", "for", "1D-TV", "problems", "when", "using", "the", "most", "common", "`1", "norm.", "The", "highlight", "of", "this", "section", "is", "our", "analysis", "on", "taut-string", "TV", "solvers,", "which", "lead", "to", "the", "development", "a", "new", "hybrid", "method", "and", "a", "weighted", "TV", "solver", "(Sections", "2.3,", "2.4).", "Thereafter,", "we", "discuss", "variants", "of", "1D-TV", "(Section", "3),", "including", "a", "specialized", "Tv1D", "2", "solver,", "and", "a", "more", "general", "Tv1D", "p", "method", "based", "on", "a", "projected-Newton", "strategy.", "Subsequently,", "we", "describe", "multi-dimensional", "TV", "problems", "and", "study", "their", "prox-operators", "in", "Section", "4,", "paying", "special", "attention", "to", "2D-TV;", "for", "both", "2D", "and", "multi-D,", "prox-splitting", "methods", "are", "used.", "After", "these", "theoretical", "sections,", "we", "describe", "experiments", "2", "See", "https://github.com/albarji/proxTV", "3", "This", "material", "shall", "be", "made", "available", "at:", "http://suvrit.de/work/soft/tv.html", "3", "and", "applications", "in", "Section", "5.", "In", "particular,", "extensive", "experiments", "for", "1D-TV", "are", "presented", "in", "Section", "5.1;", "2D-TV", "experiments", "are", "in", "Section", "5.3,", "while", "an", "application", "of", "multi-D", "TV", "is", "the", "subject", "of", "Section", "5.4", ".", "The", "appendices", "to", "the", "paper", "include", "further", "technical", "details", "and", "additional", "information", "about", "the", "experimental", "setup.", "2", "TV-L1:", "Fast", "prox-operators", "for", "Tv", "1D", "1", "We", "begin", "with", "the", "1D-TV", "problem", "(1.2)", "for", "an", "`1", "norm", "choice,", "for", "which", "we", "review", "several", "carefully", "tuned", "algorithms.", "Using", "such", "well\u2013tuned", "algorithms", "pays", "off:", "we", "can", "find", "fast,", "robust,", "and", "low-memory", "(in", "fact,", "in", "place)", "algorithms,", "which", "are", "not", "only", "of", "independent", "value,", "but", "also", "ideal", "building", "blocks", "for", "scalably", "solving", "2D-", "and", "higher-D", "TV", "problems.", "Computation", "of", "the", "`1", "-norm", "TV", "prox-operator", "can", "be", "compactly", "written", "as", "the", "problem", "min", "x\u2208Rn", "1", "2kx\u2212yk2", "2", "+", "\u03bbkDxk1,", "(2.1)", "where", "D", "is", "the", "differencing", "matrix,", "all", "zeros", "except", "dii", "=", "\u22121", "and", "di,i+1", "=", "1", "(1", "\u2264", "i", "\u2264", "n", "\u2212", "1).", "To", "solve", "(2.1)", "we", "will", "analyze", "an", "approach", "based", "on", "the", "line", "of", "\u201ctaut-string\u201d", "methods.", "We", "first", "introduce", "these", "methods", "for", "the", "unweighted", "TV-L1", "problem", "(2.1),", "before", "discussing", "the", "elementwise", "weighted", "TV", "problem", "(2.6).", "Most", "of", "the", "previous", "fastest", "methods", "handle", "only", "unweighted-TV.", "It", "is", "often", "nontrivial", "to", "extend", "them", "to", "handle", "weighted-TV,", "a", "problem", "that", "is", "crucial", "to", "several", "applications,", "e.g", ".,", "segmentation", "[21]", "and", "certain", "submodular", "optimization", "problems", "Jegelka", "et", "al.", "[43].", "A", "remarkably", "efficient", "approach", "to", "TV-L1", "was", "presented", "in", "[28].", "We", "will", "show", "Condat\u2019s", "fast", "algorithm", "can", "be", "interpreted", "as", "a", "\u201clinearized\u201d", "version", "of", "the", "taut-string", "approach,", "a", "view", "that", "paves", "the", "way", "to", "obtain", "an", "equally", "fast", "solver", "for", "weighted", "TV-L1.", "Before", "proceeding", "we", "note", "that", "other", "than", "[28],", "other", "efficient", "methods", "to", "address", "unweighted", "Tv1D", "1", "proximity", "have", "been", "proposed.", "Johnson", "[45]", "shows", "how", "solving", "Tv1D", "p", "proximity", "is", "equivalent", "to", "computing", "the", "data", "likelihood", "of", "an", "specific", "Hidden", "Markov", "Model", "(HMM),", "which", "suggests", "a", "dynamic", "programming", "approach", "based", "on", "the", "well-known", "Viterbi", "algorithm", "for", "HMMs.", "The", "resulting", "algorithm", "is", "very", "competitive,", "and", "guarantees", "an", "overall", "O(n)", "performance", "while", "requiring", "approximately", "8n", "storage.", "Another", "similarly", "performing", "algorithm", "was", "presented", "by", "Kolmogorov", "et", "al", "[51]", "in", "the", "form", "of", "a", "message", "passing", "method.", "We", "will", "also", "consider", "these", "algorithms", "in", "our", "experimental", "comparison", "in", "\u00a75.1", ".", "Yet", "another", "family", "of", "methods", "is", "based", "on", "projected-Netwon", "(PN)", "techniques:", "we", "also", "present", "in", "Appendix", "E", "a", "PN", "approach", "for", "its", "instructive", "value,", "and", "also", "because", "it", "provides", "key", "subroutines", "for", "solving", "TV", "problems", "with", "p", ">", "1.", "Our", "derivation", "may", "also", "be", "helpful", "to", "readers", "seeking", "to", "implement", "efficient", "prox-operators", "for", "problems", "that", "have", "structure", "similar", "to", "TV,", "for", "instance", "`1", "-trend", "filtering", "[47,", "87].", "Indeed,", "the", "PN", "approach", "proves", "to", "be", "foundational", "for", "the", "fast", "\u201cgroup", "fused-lasso\u201d", "algorithms", "of", "[94].", "2.1", "The", "taut-string", "method", "for", "Tv", "1D", "1", "While", "taut-string", "methods", "seem", "to", "be", "largely", "unknown", "in", "machine", "learning,", "they", "have", "been", "widely", "applied", "in", "statistics\u2014see", "e", ".g", ".,", "[10,", "32,", "38].", "We", "start", "by", "transforming", "the", "problem", "as", "follows.", "For", "TV-L1,", "elementary", "manipulations,", "e.g.,", "using", "Proposition", "A.4,", "yield", "the", "dual", "(re-written", "as", "a", "minimization", "problem)", "min", "u", "1", "2", "kDT", "uk", "2", "2\u2212u", "T", "Dy,", "s.t.", "kuk\u221e", "\u2264\u03bb.", "(2.2)", "Without", "changing", "the", "minimizer,", "the", "objective", "(2.2)", "can", "be", "replaced", "by", "kDT", "u", "\u2212", "yk2", "2", ",", "which", "then", "unfolds", "into", "(u1", "\u2212", "y1)", "2", "+", "Xn\u22121", "i=2", "(\u2212ui\u22121", "+", "ui", "\u2212", "yi)", "2", "+", "(\u2212un\u22121", "\u2212", "yn)", "2", ".", "4", "Introducing", "the", "fixed", "extreme", "points", "u0", "=", "un", "=", "0,", "we", "can", "replace", "the", "problem", "(2.2)", "by", "min", "u", "Xn", "i=1", "(\u2212ui\u22121", "+", "ui", "\u2212", "yi)", "2", ",", "s.t.kuk\u221e\u2264\u03bb,", "u0=un=0.", "(2.3)", "Now", "we", "perform", "a", "change", "of", "variables", "by", "defining", "the", "new", "set", "of", "variables", "s", "=", "r", "\u2212", "u,", "where", "ri", ":=", "Pi", "k=1", "yk", "is", "the", "cumulative", "sum", "of", "input", "signal", "values.", "Thus,", "(2.3)", "becomes", "min", "s", "Xn", "i=1", "(\u2212ri\u22121+si\u22121+ri\u2212si\u2212yi)", "2", ",", "s.t.ks\u2212rk\u221e\u2264\u03bb,", "r0\u2212s0=rn\u2212sn=0,", "which", "upon", "simplification", "becomes", "min", "s", "Xn", "i=1", "(si\u22121", "\u2212", "si)", "2", ",", "s.t.", "ks\u2212rk\u221e\u2264\u03bb,s0=0,", "sn", "=rn.", "(2.4)", "Now", "the", "key", "trick:", "problem", "(2.4)", "can", "be", "shown", "to", "share", "the", "same", "optimum", "as", "min", "s", "n", "X", "i=1", "q1", "+", "(si\u22121", "\u2212", "si)", "2", ",", "s.t.ks\u2212rk\u221e\u2264\u03bb,", "s0=0,sn=rn.", "(2.5)", "A", "proof", "of", "this", "relationship", "may", "be", "found", "in", "[82];", "for", "completeness,", "and", "also", "because", "it", "will", "help", "us", "generalize", "to", "the", "weighted", "Tv1D", "1", "variant,", "we", "include", "an", "alternative", "proof", "in", "Appendix", "C.", "The", "name", "\u201ctaut-string\u201d", "is", "explained", "as", "follows.", "The", "objective", "in", "(2.5)", "can", "be", "interpreted", "as", "the", "Euclidean", "length", "of", "a", "polyline", "through", "the", "points", "(i,", "si).", "Thus,", "(2.5)", "seeks", "the", "minimum", "length", "polyline", "(the", "taut-string)", "crossing", "a", "tube", "of", "height", "\u03bb", "with", "center", "the", "cumulative", "sum", "r", "and", "having", "the", "fixed", "endpoints", "(s0,", "sn", ").", "An", "example", "illustrating", "this", "description", "is", "shown", "in", "Figure", "1.", "Once", "the", "taut", "string", "is", "found,", "the", "solution", "for", "the", "original", "TV", "problem", "(2.1)", "can", "be", "recovered", "by", "observing", "that", "si", "\u2212", "si\u22121", "=", "ri\u2212ui\u2212(ri\u22121", "\u2212", "ui\u22121)", "=", "yi\u2212ui+ui\u22121", "=", "xi,", "where", "we", "used", "the", "primal-dual", "relation", "x", "=", "y", "\u2212", "DT", "u.", "Intuitively,", "the", "above", "argument", "shows", "that", "the", "solution", "to", "the", "TV-L1", "proximity", "problem", "is", "obtained", "as", "the", "discrete", "gradient", "of", "the", "taut", "string,", "or", "as", "the", "slope", "of", "its", "segments.", "0", "1", "2", "3", "4", "5", "6", "7", "8", "910", "\u22126", "\u22124", "\u22122", "0", "i", "s", "Taut\u2212string", "solution", "Figure", "1:", "Example", "of", "the", "taut", "string", "method.", "The", "cumulative", "sum", "r", "of", "the", "input", "signal", "values", "y", "is", "shown", "as", "the", "dashed", "line;", "the", "black", "dots", "mark", "the", "points", "(i,", "ri", ").", "The", "bottom", "and", "top", "of", "the", "\u03bb-width", "tube", "are", "shown", "in", "red.", "The", "taut", "string", "solution", "s", "is", "shown", "as", "a", "blue", "line.", "5", "Algorithm", "1", "Taut", "string", "algorithm", "for", "TV-L1", "-proximity", "1:", "Inputs:", "input", "signal", "y", "of", "length", "n,", "regularizer", "\u03bb.", "2:", "Initialize", "i", "=", "0,", "concmaj", "or", "ant", "=", "\u2205,", "conv", "minorant", "=", "\u2205,", "ri", "=", "Pik=1", "yk", ".", "3:", "whilei<ndo", "4:", "Add", "new", "segment:", "concmaj", "orant", "=", "concmaj", "or", "ant", "\u222a", "((i", "\u2212", "1,", "ri\u22121", "\u2212", "\u03bb)\u2192(i,ri", "\u2212\u03bb)).", "5:", "while", "concmaj", "orant", "is", "not", "concave", "do", "6:", "Merge", "the", "last", "two", "segments", "of", "concmaj", "or", "ant", "7:", "end", "while", "8:", "Add", "new", "segment:", "conv", "minor", "ant", "=", "conv", "minor", "ant", "\u222a", "((i", "\u2212", "1,", "ri\u22121", "+", "\u03bb)", "\u2192", "(i,", "ri", "+", "\u03bb)).", "9:", "while", "convminorant", "is", "not", "convex", "do", "10:", "Merge", "the", "last", "two", "segments", "of", "conv", "minorant", "11:", "end", "while", "12:", "if", "slope(left-most", "segment", "in", "concmaj", "orant)", ">", "slope(lest-most", "segment", "in", "convminor", "ant)", "then", "13:", "break", "=", "left-most", "point", "where", "either", "the", "majorant", "or", "the", "minorant", "touched", "the", "tube", "14:", "if", "break", "\u2208", "convminor", "ant", "then", "15:", "Remove", "left-most", "segment", "of", "the", "minorant,", "add", "it", "to", "the", "taut-string", "solution", "x.", "16:", "Majorant", "is", "recalculated", "as", "a", "straight", "line", "from", "br", "eak", "to", "its", "last", "point.", "17:", "end", "if", "18:", "if", "break", "\u2208", "concmaj", "orant", "then", "19:", "Remove", "left-most", "segment", "of", "the", "majorant,", "add", "it", "to", "the", "taut-string", "solution", "x.", "20:", "Minorant", "is", "recalculated", "as", "a", "straight", "line", "from", "br", "eak", "to", "its", "last", "point.", "21:", "end", "if", "22:", "end", "if", "23:", "i++", "24:", "end", "while", "25:", "Add", "last", "segment", "from", "either", "the", "majorant", "or", "minorant", "to", "the", "solution", "x.", "It", "remains", "to", "describe", "how", "to", "find", "the", "taut", "string.", "The", "most", "widely", "used", "approach", "seems", "to", "be", "the", "one", "due", "to", "Davies", "and", "Kovac", "[32].", "This", "approach", "starts", "from", "the", "fixed", "point", "s0", "=", "0,", "and", "incrementally", "computes", "the", "greatest", "convex", "minorant", "of", "the", "upper", "bounds", "on", "the", "\u03bb", "tube,", "as", "well", "as", "the", "smallest", "concave", "majorant", "of", "the", "lower", "bounds", "on", "the", "\u03bb", "tube.", "When", "both", "curves", "intersect,", "the", "left-most", "point", "where", "either", "the", "majorant", "or", "the", "minorant", "touched", "the", "tube", "is", "used", "to", "fix", "a", "first", "segment", "of", "the", "taut", "string.", "The", "procedure", "is", "then", "resumed", "at", "the", "end", "of", "the", "identified", "segment,", "and", "iterated", "until", "all", "taut", "string", "segments", "have", "been", "obtained.", "Pseudocode", "of", "this", "method", "is", "presented", "as", "Algorithm", "1,", "while", "an", "example", "of", "this", "procedure", "is", "shown", "in", "Figure", "2.", "It", "is", "important", "to", "note", "that", "since", "we", "have", "a", "discrete", "number", "of", "points", "in", "the", "tube,", "the", "greatest", "convex", "minorant", "can", "be", "expressed", "as", "a", "piecewise", "linear", "function", "with", "segments", "of", "monotonically", "increasing", "slope,", "while", "the", "smallest", "concave", "majorant", "is", "another", "piecewise", "linear", "function", "with", "segments", "of", "monotonically", "decreasing", "slope.", "Another", "relevant", "fact", "is", "that", "each", "segment", "in", "the", "tube", "upper/lower", "bound", "enters", "the", "minorant/majorant", "exactly", "once", "in", "the", "algorithm,", "and", "is", "also", "removed", "exactly", "once.", "This", "limits", "the", "extent", "of", "the", "inner", "loops", "in", "the", "algorithm,", "and", "in", "fact", "an", "analysis", "of", "the", "computational", "complexity", "of", "this", "behavior", "leads", "to", "an", "overall", "O(n)", "performance", "[32].", "In", "spite", "of", "this,", "Condat", "[28]", "notes", "that", "maintaining", "the", "minorant", "and", "majorant", "functions", "in", "memory", "is", "inefficient,", "and", "views", "a", "taut-string", "approach", "as", "potentially", "inferior", "to", "his", "proposed", "method.", "To", "this", "observation", "we", "make", "two", "claims:", "Condat\u2019s", "method", "can", "be", "interpreted", "as", "a", "linearized", "version", "of", "the", "taut-string", "method", "(see", "Section", "2.2);", "and", "that", "a", "careful", "implementation", "of", "the", "taut-string", "method", "can", "be", "highly", "competitive", "in", "practice.", "2.1.1", "Efficient", "implementation", "of", "taut-strings", "We", "propose", "now", "an", "efficient", "implementation", "of", "the", "taut-string", "method.", "The", "main", "idea", "is", "to", "carefully", "use", "double-ended", "queues", "[49]", "to", "store", "the", "majorant", "and", "minorant", "information.", "Therewith,", "all", "majorant/minorant", "operations", "such", "as", "appending", "a", "segment", "or", "removing", "segments", "from", "either", "the", "beginning", "or", "the", "end", "of", "the", "majorant", "can", "be", "performend", "in", "constant", "time.", "Note", "however", "that", "usual", "double-ended", "queue", "implementations", "6", "(1)", "(2)", "(3)", "(4)", "(5)", "(6)", "(7)", "(8)", "(9)", "Figure", "2:", "Example", "of", "the", "evolution", "of", "the", "taut", "string", "method.", "The", "smallest", "concave", "majorant", "(blue)", "and", "largest", "convex", "minorant", "(green)", "are", "updated", "are", "every", "step.", "At", "step", "(1)", "the", "algorithm", "is", "initialized.", "Steps", "(2)", "to", "(4)", "successfully", "manage", "to", "update", "majorant", "and", "minorant", "without", "producing", "crossings", "between", "them.", "Note", "how", "while", "the", "concave", "majorant", "keeps", "adding", "segments", "without", "issue,", "the", "convex", "minorant", "must", "remove", "and", "merge", "existing", "segments", "with", "new", "ones", "to", "mantain", "a", "convex", "function", "from", "the", "origin", "to", "the", "new", "points.", "At", "step", "(5)", "the", "end", "of", "the", "tube", "is", "reached,", "but", "the", "minorant", "and", "majorant", "slopes", "overlap,", "and", "so", "it", "is", "necessary", "to", "break", "the", "segment", "at", "the", "left-most", "point", "where", "the", "majorant/minorant", "touched", "the", "tube.", "Since", "the", "left-most", "touching", "point", "is", "in", "the", "concave", "majorant", "it\u2019s", "leftmost", "segment", "is", "removed", "and", "placed", "in", "the", "solution,", "while", "the", "convex", "minorant", "is", "updated", "as", "a", "straight", "line", "from", "the", "detected", "breakpoint", "to", "the", "last", "explored", "point,", "resulting", "in", "(6).", "The", "algorithm", "would", "then", "continue", "adding", "segments,", "but", "since", "the", "majorant/minorant", "slopes", "are", "still", "crossing,", "the", "procedure", "of", "fixing", "segments", "to", "the", "solution", "is", "repeated", "through", "steps", "(6),", "(7)", "and", "(8).", "Finally", "at", "step", "(9)", "the", "slopes", "are", "no", "longer", "crossing", "and", "the", "method", "would", "continue", "adding", "tube", "segments,", "but", "since", "the", "end", "of", "the", "tube", "has", "already", "been", "reached", "the", "algorithm", "stops.", "use", "doubly", "linked", "lists,", "dynamic", "arrays", "or", "circular", "buffers:", "these", "approaches", "require", "dynamically", "reallocating", "memory", "chunks", "at", "some", "of", "the", "insert", "or", "remove", "operations.", "But", "in", "the", "taut-string", "algorithm,", "the", "maximum", "number", "of", "segments", "of", "the", "majorant/minorant", "is", "just", "the", "size", "of", "the", "input", "signal", "(n),", "and", "also", "the", "number", "of", "segments", "to", "be", "inserted", "in", "the", "queue", "throughout", "the", "algorithm", "will", "be", "n.", "Making", "use", "of", "these", "facts", "we", "implement", "a", "specialized", "queue", "based", "on", "a", "contiguous", "array", "of", "fixed", "length", "n.", "New", "segments", "are", "added", "from", "the", "start", "of", "the", "array", "on,", "and", "a", "couple", "of", "pointers", "are", "maintained", "to", "keep", "track", "of", "the", "first", "and", "last", "valid", "segments", "in", "the", "array,", "much", "in", "the", "way", "of", "a", "circular", "buffer.", "This", "implementation,", "however,", "does", "not", "require", "of", "the", "usual", "circular", "logic.", "Overall,", "this", "double-ended", "queue", "requires", "a", "single", "memory", "allocation", "at", "the", "beginning", "of", "the", "algorithm,", "keeping", "the", "rest", "of", "queue", "operations", "free", "from", "memory", "management", "and", "all", "but", "the", "simplest", "pointer", "or", "index", "algebra.", "We", "also", "store", "for", "each", "segment", "the", "following", "values:", "x", "length", "of", "the", "segment,", "y", "length", "and", "slope.", "Slopes", "might", "seem", "as", "redundant", "given", "the", "other", "two", "factors,", "but", "given", "the", "number", "of", "times", "the", "algorithm", "requires", "comparing", "slopes", "between", "segments", "(e.g.,", "to", "preserve", "convexity/concavity)", "it", "pays", "off", "to", "precompute", "these", "values.", "This", "fact", "together", "with", "other", "calculation", "and", "code", "optimization", "details", "produces", "our", "implementation;", "these", "can", "be", "reviewed", "in", "the", "code", "itself", "at", "https://github.com/albarji/proxTV.", "7", "2.2", "Linearized", "taut-string", "method", "for", "Tv", "1D", "1", "We", "now", "present", "a", "variant,", "linearized", "version", "of", "the", "taut-string", "method.", "Surprisingly,", "the", "resulting", "algorithm", "turns", "out", "to", "be", "equivalent", "to", "the", "fast", "algorithm", "of", "Condat", "[28],", "though", "now", "with", "a", "clearer", "interpretation", "based", "on", "taut-strings.", "The", "key", "idea", "is", "to", "build", "linear", "approximations", "to", "the", "greatest", "convex", "minorant", "and", "smallest", "concave", "majorant,", "producing", "exactly", "the", "same", "results", "but", "significantly", "reducing", "the", "bookkeeping", "of", "the", "method", "to", "a", "handful", "of", "simple", "variables.", "We", "therefore", "replace", "the", "greatest", "convex", "minorant", "and", "smallest", "convex", "majorant", "by", "a", "greatest", "affine", "minorant", "and", "smallest", "affine", "majorant.", "An", "example", "of", "the", "method", "is", "presented", "in", "Figure", "4.", "A", "proof", "showing", "that", "this", "linearization", "does", "not", "change", "the", "resultant", "taut-string", "is", "given", "in", "Appendix", "D.", "In", "what", "follows,", "we", "describe", "the", "linearized", "method", "in", "depth.", "Details.", "Linearized", "taut-string", "requires", "only", "the", "following", "bookkeeping", "variables:", "1.", "i0:", "index", "of", "the", "current", "segment", "start", "2.", "\u0304", "\u03b4:", "slope", "of", "the", "line", "joining", "segment", "start", "with", "majorant", "at", "the", "current", "point", "3.", "\u0304", "\u03b4:", "slope", "of", "the", "line", "joining", "segment", "start", "with", "minorant", "at", "the", "current", "point", "4.", "\u0304", "h:", "height", "of", "majorant", "w.r.t", ".", "the", "\u03bb-tube", "center", "5.", "\u0304", "h:", "height", "of", "minorant", "w.r.t.", "\u03bb-tube", "center", "6.", "\u0304", "i:", "index", "of", "last", "point", "where", "\u0304\u03b4", "was", "updated\u2014potential", "majorant", "break", "point", "7.", "\u0304", "i:", "index", "of", "last", "point", "where", "\u0304", "\u03b4", "was", "updated\u2014potential", "minorant", "break", "point.", "Figure", "3", "gives", "a", "geometric", "interpretation", "of", "these", "variables;", "we", "use", "these", "variables", "to", "detect", "minorant-majorant", "intersections,", "without", "the", "need", "to", "compute", "or", "store", "them", "explicitly.", "Figure", "3:", "Illustration", "of", "the", "geometric", "concepts", "involved", "in", "the", "linearized", "taut", "string", "method.", "The", "greatest", "linear", "minorant", "(of", "the", "tube", "ceiling)", "is", "depicted", "in", "green,", "while", "the", "smallest", "linear", "majorant", "(of", "the", "tube", "bottom)", "is", "shown", "in", "blue.", "The", "\u03b4", "slopes", "and", "h", "heights", "are", "presented", "updated", "up", "to", "the", "index", "shown", "as", "i.", "Algorithm", "2", "presents", "full", "pseudocode", "of", "the", "linearized", "taut-string", "method.", "Broadly,", "the", "algorithm", "proceeds", "in", "the", "same", "fashion", "as", "the", "classic", "taut-string", "method,", "updating", "the", "affine", "approximations", "to", "the", "majorant", "and", "minorant", "at", "each", "step,", "and", "introducing", "a", "breakpoint", "whenever", "the", "slopes", "of", "these", "two", "functions", "cross.", "More", "precisely,", "at", "each", "each", "iteration", "the", "method", "steps", "one", "point", "further", "through", "the", "tube,", "updating", "the", "minorant/majorant", "slopes", "(", "\u0304", "\u03b4,", "\u0304", "\u03b4)", "as", "well", "their", "heights", "at", "the", "current", "point", "(", "\u0304", "h,", "\u0304", "h).", "To", "check", "for", "minorant/majorant", "crossings", "it", "suffices", "to", "compare", "the", "slopes", "(", "\u0304", "\u03b4,", "\u0304", "\u03b4),", "or", "equivalently,", "to", "check", "whether", "the", "height", "of", "the", "minorant", "\u0304", "h", "falls", "below", "the", "tube", "bottom", "(since", "the", "minorant", "follows", "the", "tube", "ceiling)", "or", "the", "height", "of", "the", "majorant", "\u0304h", "grows", "above", "the", "tube", "ceiling", "(since", "the", "majorant", "follows", "the", "tube", "bottom).", "We", "make", "use", "of", "this", "last", "variant,", "8", "Algorithm", "2", "Linearized", "taut", "string", "algorithm", "for", "TV-L1-proximity", "1:", "Initialize", "i", "=", "\u0304", "i=", "\u0304", "i=", "\u0304", "h=", "\u0304", "h=0,", "\u0304", "\u03b4=y0+\u03bb,", "\u0304", "\u03b4=y0\u2212\u03bb", "2:", "whilei<ndo", "3:", "Findtubeheight:\u0303\u03bb", "=\u03bbifi<n\u22121,else\u0303\u03bb", "=0", "4:", "Update", "majorant", "height", "following", "current", "slope:", "\u0304h", "=", "\u0304", "h+\u0304\u03b4", "\u2212", "yi.", "5:", "/*", "Check", "for", "ceiling", "violation:", "majorant", "is", "above", "tube", "ceiling", "*/", "6:", "if\u0304h>\u0303\u03bbthen", "7:", "Build", "valid", "segment", "up", "to", "last", "majorant", "breaking", "point:", "xi0", "+1:\u0304i", "=", "\u0304", "\u03b4.", "8:", "Start", "new", "segment", "after", "break:", "(i0,", "\u0304", "i)=", "\u0304", "i,", "\u0304", "\u03b4=yi+2\u03bb,", "\u0304", "\u03b4=yi,", "\u0304", "h=\u03bb,", "\u0304", "h=", "\u2212\u03bb,i", "=", "\u0304", "i+1", "9:", "continue", "10:", "end", "if", "11:", "Update", "minorant", "height", "following", "current", "slope:", "\u0304", "h=", "\u0304", "h+", "\u0304", "\u03b4\u2212yi.", "12:", "/*", "Check", "for", "bottom", "violation:", "minorant", "is", "below", "tube", "bottom", "*/", "13:", "if", "\u0304", "h<\u2212", "\u0303", "\u03bb", "then", "14:", "Build", "valid", "segment", "up", "to", "last", "minorant", "breaking", "point:", "xi0", "+1:", "\u0304", "i=", "\u0304", "\u03b4.", "15:", "Start", "new", "segment", "after", "break:", "(i0,", "\u0304i)", "=", "\u0304", "i,", "\u0304", "\u03b4=yi,", "\u0304", "\u03b4=", "\u22122\u03bb+yi,", "\u0304", "h=\u03bb,", "\u0304", "h=", "\u2212\u03bb,i", "=", "\u0304", "i+1", "16:", "continue", "17:", "end", "if", "18:", "/*", "Check", "if", "majorant", "height", "is", "below", "the", "floor", "*/", "19:", "if\u0304h\u2264\u2212", "\u0303", "\u03bb", "then", "20:", "Correct", "slope:", "\u0304\u03b4", "=", "\u0304", "\u03b4+", "\u0303", "\u03bb\u2212\u0304h", "i\u2212i0", "21:", "The", "majorant", "now", "touches", "the", "floor:", "\u0304h", "=", "\u2212", "\u0303", "\u03bb", "22:", "This", "is", "a", "possible", "majorant", "breaking", "point:", "\u0304i", "=", "i", "23:", "end", "if", "24:", "/*", "Check", "if", "minorant", "height", "is", "above", "the", "ceiling", "*/", "25:", "if", "\u0304", "h\u2265\u0303\u03bb", "then", "26:", "Correct", "slope:", "\u0304", "\u03b4=", "\u0304", "\u03b4+\u2212", "\u0303", "\u03bb\u2212", "\u0304", "h", "i\u2212i0", "27:", "The", "minorant", "now", "touches", "the", "ceiling:", "\u0304", "h=", "\u0303", "\u03bb", "28:", "This", "is", "a", "possible", "minorant", "breaking", "point:", "\u0304", "i=i", "29:", "end", "if", "30:", "Continue", "building", "current", "segment:", "i", "=", "i", "+", "1", "31:", "end", "while", "32:", "Build", "last", "valid", "segment:", "xi0", "+1:n", "=", "\u0304", "\u03b4.", "since", "updating", "heights", "turns", "out", "to", "be", "slightly", "cheaper", "than", "updating", "slopes,", "and", "so", "it", "is", "faster", "to", "ensure", "no", "crossing", "will", "take", "place", "before", "performing", "such", "updates.", "When", "a", "crossing", "is", "detected,", "we", "perform", "similar", "steps", "as", "in", "the", "classic", "taut-string", "method", "but", "with", "one", "significant", "difference:", "the", "algorithm", "is", "completely", "restarted", "at", "the", "newly", "introduced", "breakpoint.", "This", "restart", "idea", "is", "in", "contrast", "with", "the", "classic", "method,", "where", "we", "simply", "re-use", "the", "previously", "computed", "information", "about", "the", "minorant", "and", "majorant", "to", "update", "their", "estimates", "and", "continue", "working", "with", "them.", "In", "the", "linearized", "version", "we", "do", "not", "keep", "enough", "information", "to", "perform", "such", "an", "operation,", "so", "all", "data", "about", "minorant", "and", "majorant", "is", "discarded", "and", "the", "algorithm", "begins", "anew.", "Because", "of", "this", "choice", "the", "same", "tube", "segment", "might", "be", "reprocessed", "up", "to", "O(n)", "times", "in", "the", "method,", "and", "therefore", "the", "overall", "worst", "case", "performance", "is", "O(n2", ").", "This", "fact", "was", "already", "observed", "in", "[28].", "In", "what", "follows", "we", "describe", "the", "rationale", "behind", "the", "height", "update", "formulae.", "Height", "variables.", "To", "implement", "the", "method", "described", "above,", "the", "height", "variables", "h", "are", "not", "strictly", "necessary", "as", "they", "can", "be", "obtained", "from", "the", "slopes", "\u03b4.", "However,", "explicitly", "including", "them", "leads", "to", "efficient", "updating", "rules", "at", "each", "iteration,", "as", "we", "show", "below.", "9", "Classic", "Linearized", "(Condat\u2019s)", "Worst-case", "performance", "O(n)", "O(n2)", "In\u2013memory", "No", "Yes", "Other", "considerations", "Fast", "bookkeeping", "through", "double-", "ended", "queues", "Very", "fast", "iteration,", "cache", "friendly", "Table", "1:", "Comparison", "of", "the", "main", "features", "of", "reviewed", "taut-string", "algorithms.", "Suppose", "we", "are", "updating", "the", "heights", "and", "slopes", "from", "their", "estimates", "at", "step", "i", "\u2212", "1", "to", "step", "i.", "Updating", "the", "heights", "is", "immediate", "given", "the", "slopes,", "since", "hi", "=hi\u22121+\u03b4\u2212yi.", "In", "other", "words,", "since", "we", "are", "following", "a", "line", "with", "slope", "\u03b4,", "the", "change", "in", "height", "from", "one", "step", "to", "the", "next", "is", "given", "by", "precisely", "such", "a", "slope.", "Note,", "however,", "that", "in", "this", "algorithm", "we", "do", "not", "compute", "absolute", "heights", "but", "instead", "relative", "heights", "with", "respect", "to", "the", "\u03bb\u2013tube", "center.", "Therefore", "we", "need", "to", "account", "for", "the", "change", "in", "the", "tube", "center", "between", "steps", "i", "\u2212", "1", "and", "i,", "which", "is", "given", "by", "ri", "\u2212", "ri\u22121", "=", "yi", ".", "This", "completes", "the", "update,", "which", "is", "shown", "in", "Algorithm", "2", "as", "lines", "4", "and", "11.", "However,", "it", "is", "possible", "that", "the", "new", "height", "h", "runs", "over", "or", "under", "the", "tube.", "This", "would", "mean", "that", "we", "cannot", "continue", "using", "the", "current", "slope", "in", "the", "majorant", "or", "minorant,", "and", "a", "recalculation", "is", "needed,", "which", "again", "can", "be", "done", "efficiently", "by", "using", "the", "height", "information.", "Assume", "without", "loss", "of", "generality", "that", "the", "starting", "index", "of", "the", "current", "segment", "is", "0", "and", "the", "absolute", "height", "of", "the", "starting", "point", "of", "the", "segment", "is", "given", "by", "\u03b1.", "Then,", "for", "adjusting", "the", "minorant", "slope", "\u0304\u03b4i", "so", "that", "it", "touches", "the", "tube", "ceiling", "at", "the", "current", "point,", "we", "note", "that", "\u0304", "\u03b4i=", "\u03bb+ri\u2212\u03b1", "i", "=", "\u03bb+(\u0304hi", "\u2212", "\u0304", "hi)+ri\u2212\u03b1", "i", ",", "where", "we", "have", "also", "added", "and", "subtracted", "the", "current", "value", "of", "\u0304hi", ".", "Observe", "that", "this", "value", "was", "computed", "using", "the", "estimate", "\u03b4i\u22121", "of", "the", "slope", "so", "far,", "so", "we", "can", "rewrite", "it", "as", "the", "projection", "of", "the", "initial", "point", "in", "the", "segment", "following", "such", "a", "slope,", "that", "is,", "as", "\u0304", "hi=i", "\u0304", "\u03b4i", "\u2212", "ri", "+", "\u03b1.", "Doing", "so", "for", "one", "of", "the", "added", "heights", "\u0304hi", "produces", "\u0304", "\u03b4i=", "\u03bb", "+", "(i\u0304\u03b4i\u22121", "\u2212", "ri+\u03b1)\u2212", "\u0304", "hi+ri\u2212\u03b1", "i", "=", "\u0304", "\u03b4i\u22121", "+", "\u03bb\u2212", "\u0304", "hi", "i", ",", "which", "generates", "a", "simple", "updating", "rule.", "A", "similar", "derivation", "holds", "for", "the", "minorant.", "The", "resulting", "updates", "are", "included", "in", "the", "algorithm", "in", "lines", "20", "and", "26.", "After", "recomputing", "this", "slope", "we", "need", "to", "adjust", "the", "corresponding", "height", "back", "to", "the", "tube:", "since", "the", "heights", "are", "relative", "to", "the", "tube", "center", "we", "can", "just", "set", "\u0304h", "=", "\u03bb,", "\u0304", "h=", "\u2212\u03bb;thisis", "done", "in", "lines", "21", "and", "27.", "Notice", "also", "that", "the", "special", "case", "of", "the", "last", "point", "in", "the", "tube", "where", "the", "taut-string", "must", "meet", "sn", "=", "rn", "is", "handled", "by", "line", "3,", "where", "\u0303\u03bb", "is", "set", "to", "0", "at", "such", "a", "point", "to", "enforce", "this", "constraint.", "Overall,", "one", "iteration", "of", "the", "method", "is", "very", "efficient,", "as", "mostly", "just", "additions", "and", "subtractions", "are", "involved", "with", "the", "sole", "exception", "of", "the", "division", "required", "for", "the", "slope", "updates,", "which", "are", "not", "performed", "at", "every", "iteration.", "Moreover,", "no", "additional", "memory", "is", "required", "beyond", "the", "constant", "number", "of", "bookkeeping", "variables,", "and", "in-place", "updates", "are", "also", "possible", "because", "yi", "values", "for", "already", "fixed", "sections", "of", "the", "taut-string", "are", "not", "required", "again,", "so", "the", "output", "x", "and", "the", "input", "y", "can", "both", "refer", "to", "the", "same", "memory", "locations.", "The", "resulting", "algorithm", "turns", "out", "to", "be", "equivalent,", "almost", "line", "by", "line,", "to", "the", "method", "of", "Condat", "[28],", "even", "though", "its", "theoretical", "grounds", "are", "radically", "different:", "while", "the", "approach", "presented", "here", "has", "a", "strong", "geometric", "basis", "due", "to", "its", "taut-string", "relationship,", "[28]", "is", "based", "solely", "on", "analysis", "of", "KKT", "conditions.", "Therefore,", "we", "have", "shown", "that", "Condat\u2019s", "fast", "TV", "method", "is,", "in", "fact,", "a", "linearized", "taut-string", "algorithm.", "2.3", "Comparison", "of", "taut-string", "methods", "and", "a", "hybrid", "strategy", "Table", "1", "summarizes", "the", "main", "features", "of", "the", "classic", "and", "linearized", "taut-string", "methods", "reviewed", "so", "far.", "Although", "the", "classic", "taut-string", "method", "has", "been", "largely", "neglected", "in", "the", "machine", "learning", "literature,", "its", "10", "(1)", "(2)", "(3)", "(4)", "(5)", "(6)", "(7)", "(8)", "(9)", "(10)", "(11)", "Figure", "4:", "Example", "of", "the", "evolution", "of", "the", "linearized", "taut", "string", "method.", "The", "smallest", "affine", "majorant", "of", "the", "tube", "bottom", "(blue)", "and", "greatest", "affine", "minorant", "of", "the", "tube", "ceiling", "(green)", "are", "updated", "at", "every", "step.", "At", "step", "(1)", "the", "algorithm", "is", "initialized.", "Steps", "(2)", "to", "(4)", "successfully", "manage", "to", "update", "majorant/minorant", "without", "crossings.", "At", "step", "(5),", "however,", "the", "slopes", "cross,", "and", "so", "it", "is", "necessary", "to", "break", "the", "segment.", "Since", "the", "left-most", "tube", "touching", "point", "is", "the", "one", "in", "the", "majorant,", "the", "majorant", "is", "broken", "down", "at", "that", "point", "and", "its", "left-hand", "side", "is", "added", "to", "the", "solution,", "resulting", "in", "(6).", "The", "method", "is", "then", "restarted", "at", "the", "break", "point,", "with", "majorant/minorant", "being", "updated", "at", "step", "(7),", "though", "at", "step", "(8)", "once", "again", "a", "crossing", "is", "detected.", "Hence,", "at", "step", "(9)", "a", "breaking", "point", "is", "introduced", "again", "and", "the", "algorithm", "is", "restarted", "once", "more.", "Following", "this,", "step", "(10)", "manages", "to", "update", "majorant/minorant", "slopes", "up", "to", "the", "end", "of", "the", "tube,", "and", "so", "at", "step", "(11)", "the", "final", "segment", "is", "built", "using", "the", "(now", "equal)", "slopes.", "guarantee", "in", "linear", "performance", "makes", "it", "an", "attractive", "choice.", "Furthermore,", "although", "we", "could", "not", "find", "any", "references", "on", "implementation", "details", "of", "this", "method,", "we", "have", "empirically", "seen", "that", "a", "very", "efficient", "solver", "can", "be", "produced", "by", "making", "use", "of", "a", "double-ended", "queue", "to", "bookkeep", "the", "majorant/minorant", "information.", "In", "contrast", "to", "this,", "the", "linearized", "taut-string", "method", "(equivalent", "to", "[28])", "features", "a", "much", "better", "performance", "per", "step", "in", "the", "tube", "traversal,", "mainly", "due", "to", "not", "requiring", "additional", "memory", "and", "making", "use", "of", "only", "a", "small", "constant", "number", "of", "variables,", "making", "the", "method", "friendly", "for", "CPU", "cache", "or", "registers", "calculation.", "As", "a", "tradeoff", "of", "keeping", "such", "scarce", "information", "in", "memory,", "the", "method", "does", "not", "guarantee", "linear", "performance,", "falling", "to", "a", "quadratic", "theoretical", "runtime", "in", "the", "worst", "case.", "This", "fact", "was", "already", "observed", "in", "[28],", "though", "such", "worst", "case", "was", "deemed", "as", "pathological,", "claiming", "a", "O(n)", "performance", "in", "all", "practical", "situations.", "We", "shall", "review", "these", "claims", "in", "the", "experimental", "sections", "in", "this", "manuscript.", "11", "The", "key", "points", "of", "Table", "1", "show", "that", "no", "taut-string", "variant", "is", "clearly", "superior.", "While", "the", "classic", "method", "provides", "a", "safe", "linear", "time", "solution", "to", "the", "problem,", "the", "linearized", "method", "is", "potentially", "faster", "but", "riskier", "in", "terms", "of", "worst", "case", "performance.", "Following", "these", "observations", "we", "propose", "here", "a", "simple", "hybrid", "method", "combining", "both", "approaches:", "run", "the", "linearized", "algorithm", "up", "to", "a", "prefixed", "number", "of", "steps", "nS", ",", "S", "\u2208", "(1,", "2),", "and", "if", "the", "solution", "has", "not", "yet", "been", "found,", "we", "switch", "to", "the", "classic", "method.", "We", "therefore", "limit", "the", "worst-case", "scenario", "to", "O(nS", ")", "+", "O(n)", "'", "O(nS", "),", "because", "once", "the", "classic", "method", "kicks,", "it", "will", "ensure", "an", "O(n)", "performance", "guarantee.", "Implementation", "of", "this", "hybrid", "method", "is", "easy", "upon", "realizing", "the", "similarities", "between", "algorithms:", "a", "switch\u2013", "check", "is", "added", "to", "the", "linearized", "method", "every", "time", "a", "segment", "of", "the", "taut-string", "has", "been", "identified", "(Algorithm", "2,", "lines", "7,", "14).", "If", "it", "is", "confirmed", "that", "the", "method", "has", "already", "run", "for", "nS", "steps", "without", "reaching", "the", "solution,", "the", "remaining", "part", "of", "the", "signal", "for", "which", "the", "taut-string", "has", "not", "yet", "been", "found", "is", "passed", "on", "to", "the", "classic", "method,", "whose", "solution", "is", "concatenated", "to", "the", "part", "the", "linearized", "method", "managed", "to", "find", "so", "far.", "We", "also", "report", "the", "empirical", "performance", "of", "this", "method", "in", "the", "experimental", "section.", "2.4", "Taut-string", "methods", "for", "weighted", "Tv", "1D", "1", "Several", "applications", "TV", "require", "penalizing", "the", "discrete", "gradients", "individually,", "which", "can", "be", "done", "by", "solving", "the", "weighted", "TV-L1", "problem", "minx", "1", "2kx\u2212yk2", "2+", "Xn\u22121", "i=1", "wi|xi+1", "\u2212", "xi|,", "(2.6)", "where", "the", "weights", "{wi", "}", "n\u22121", "i=1", "are", "all", "positive.", "To", "solve", "(2.6)", "using", "a", "taut-string", "approach,", "we", "again", "begin", "with", "its", "dual", "(written", "as", "a", "minimization", "problem)", "minu", "1", "2", "kDT", "uk", "2", "2\u2212u", "T", "Dy", "s.t.", "|ui|\u2264wi,", "1\u2264i<n.", "(2.7)", "Then,", "we", "repeat", "the", "derivation", "of", "the", "unweighted", "taut-string", "method", "but", "with", "a", "few", "key", "modifications.", "More", "precisely,", "we", "transform", "(2.7)", "by", "introducing", "u0", "=", "un", "=", "0", "to", "obtain", "min", "u", "Xn", "i=1", "(yi\u2212ui+ui\u22121)", "2", "s.t.|ui|\u2264wi,", "1\u2264i<n.", "Then,", "we", "perform", "the", "change", "of", "variables", "s", "=", "r", "\u2212", "u,", "where", "ri", ":=", "Pi", "k=1", "yk", ",", "and", "consider", "min", "s", "Xn", "i=1", "(si", "\u2212", "si\u22121)", "2", "s.t.|si\u2212ri|\u2264wi,", "1\u2264i<ns0=0,", "sn", "=rn.", "Finally,", "applying", "Theorem", "C.1", "we", "obtain", "the", "equivalent", "weighted", "taut-string", "problem", "min", "s", "Xn", "i=1", "q1+(si\u2212si\u22121)", "2", "s.t.|si\u2212ri|\u2264wi,", "1\u2264i<n,", "s0=0,", "sn", "=rn.", "(2.8)", "Problem", "(2.8)", "differs", "from", "its", "unweighted", "counterpart", "(2.5)", "in", "the", "constraints", "|si", "\u2212", "ri", "|", "\u2264", "wi", "(1", "\u2264", "i", "<", "n),", "which", "allow", "different", "weights", "for", "each", "component", "instead", "of", "using", "the", "same", "value", "\u03bb.", "Our", "geometric", "intuition", "also", "carries", "over", "to", "the", "weighted", "problem,", "albeit", "with", "a", "slight", "modification:", "the", "tube", "we", "are", "trying", "to", "traverse", "now", "has", "varying", "widths", "at", "each", "step", "instead", "of", "the", "previous", "fixed", "\u03bb", "width\u2014Figure", "5", "illustrates", "this", "idea.", "As", "a", "consequence", "of", "the", "above", "derivation", "and", "intuition,", "taut-string", "methods", "can", "be", "produced", "to", "solve", "the", "weighted", "Tv1D", "1", "problem.", "The", "original", "formulation", "of", "the", "classic", "taut-string", "method", "in", "[32]", "defines", "the", "limits", "of", "the", "tube", "through", "possibly", "varying", "bottom", "and", "ceiling", "values", "(li", ",", "ui", ")", "\u2200i,", "and", "so", "this", "method", "easily", "extends", "to", "solve", "the", "weighted", "TV", "problem", "by", "assigning", "li", "=", "ri", "\u2212", "wi,", "ui", "=", "ri", "+", "wi", ".", "In", "our", "pseudocode", "in", "Algorithm", "1", "we", "just", "need", "to", "replace", "\u03bb", "by", "the", "appropriate", "wi", "values.", "Similar", "considerations", "apply", "for", "the", "linearized", "version", "(Algorithm", "2),", "in", "particular,", "when", "checking", "ceiling/floor", "violations", "as", "well", "as", "when", "checking", "slope", "recomputations", "and", "restarts,", "we", "must", "account", "for", "varying", "tube", "heights.", "Algorithm", "3", "presents", "the", "precise", "modifications", "that", "we", "must", "make", "to", "Algorithm", "2", "to", "handle", "weights.", "Regarding", "the", "convergence", "of", "this", "method,", "the", "proof", "of", "equivalence", "with", "the", "classic", "taut-string", "method", "still", "holds", "in", "the", "weighted", "case", "(see", "Appendix", "D).", "The", "very", "same", "analysis", "as", "portrayed", "in", "Table", "1", "applies", "here:", "both", "the", "benefits", "and", "problems", "of", "the", "two", "taut-string", "solvers", "carry", "on", "to", "the", "weighted", "variant", "of", "the", "problem.", "12", "01", "2", "3", "4", "56", "7", "8", "910", "0", "2", "4", "6", "i", "s", "Taut\u2212string", "solution", "Figure", "5:", "Example", "of", "the", "weighted", "taut", "string", "method", "with", "w", "=", "(1.35,", "3.03,", "0.73,", "0.06,", "0.71,", "0.20,", "0.12,", "1.49,", "1.41).", "The", "cumulative", "sum", "r", "of", "the", "input", "signal", "values", "y", "is", "shown", "as", "the", "dashed", "line,", "with", "the", "black", "dots", "marking", "the", "points", "(i,", "ri", ").", "The", "bottom", "and", "ceiling", "of", "the", "tube", "are", "shown", "in", "red,", "which", "vary", "in", "width", "at", "each", "step", "following", "the", "weights", "wi", ".", "The", "weighted", "taut", "string", "solution", "s", "is", "shown", "as", "a", "blue", "line.", "Algorithm", "3", "Modified", "lines", "for", "weighted", "version", "of", "Algorithm", "2", "3:", "Findtubeheight:\u0303\u03bb", "=wi+1ifi<n\u22121,else\u0303\u03bb", "=0", "8:", "Start", "new", "segment", "after", "break:", "(i0,", "\u0304", "i)=", "\u0304", "i,", "\u0304", "\u03b4=yi+wi\u22121+wi,", "\u0304", "\u03b4=yi+wi\u22121", "\u2212", "wi,", "\u0304", "h=wi,", "\u0304", "h=", "\u2212wi,", "i=", "\u0304", "i+1", "15:", "Start", "new", "segment", "after", "break:", "(i0,", "\u0304i)", "=", "\u0304", "i,", "\u0304", "\u03b4=yi+wi\u22121", "\u2212", "wi,", "\u0304", "\u03b4=yi+wi\u22121+wi,", "\u0304", "h=wi,", "\u0304", "h=", "\u2212wi,", "i=", "\u0304", "i+1", "3", "Other", "one-dimensional", "TV", "variants", "While", "more", "infrequent,", "replacing", "the", "`1", "norm", "of", "the", "standard", "TV", "regularizer", "by", "an", "`p-norm", "version", "can", "also", "be", "useful.", "In", "this", "section", "we", "focus", "first", "on", "a", "specialized", "solver", "for", "p", "=", "2,", "before", "discussing", "a", "less", "efficient", "but", "more", "general", "solver", "for", "any", "`p", "with", "p", "\u2265", "1.", "We", "also", "briefly", "cover", "the", "p", "=", "\u221e", "case.", "3.1", "TV-L2:", "Proximity", "for", "Tv", "1D", "2", "For", "TV-L2", "proximity", "(p", "=", "2)", "the", "dual", "to", "the", "prox-operator", "for", "(1.2)", "reduces", "to", "minu", "\u03c6(u)", ":=", "1", "2", "kDT", "uk", "2", "2\u2212u", "T", "Dy,", "s.t.", "kuk2", "\u2264", "\u03bb.", "(3.1)", "Problem", "(3.1)", "is", "nothing", "but", "a", "version", "of", "the", "well-known", "trust-region", "subproblem", "(TRS),", "for", "which", "a", "variety", "of", "numerical", "approaches", "are", "known", "[30].", "We", "derive", "a", "specialized", "algorithm", "based", "on", "the", "classic", "Mor\u0301e", "-Sorensen", "Newton", "(MSN)", "method", "of", "[64].", "This", "method", "in", "general", "can", "be", "quite", "expensive,", "but", "for", "(3.1)", "the", "Hessian", "is", "tridiagonal", "which", "can", "be", "well-", "exploited", "(see", "Appendix", "E).", "Curiously,", "experiments", "show", "that", "for", "a", "limited", "range", "of", "\u03bb", "values,", "even", "ordinary", "gradient-projection", "(GP)", "can", "be", "competitive.", "But", "for", "overall", "best", "performance,", "a", "hybrid", "MSN-GP", "approach", "is", "preferable.", "Towards", "solving", "(3.1),", "consider", "its", "KKT", "conditions:", "(DDT", "+", "\u03b1I)u", "=", "Dy,", "\u03b1(kuk2\u2212\u03bb)=0,", "\u03b1\u22650,", "(3.2)", "where", "\u03b1", "is", "a", "Lagrange", "multiplier.", "There", "are", "two", "possible", "cases:", "either", "kuk2", "<", "\u03bb", "or", "kuk2", "=", "\u03bb.", "13", "If", "kuk2", "<", "\u03bb,", "then", "the", "KKT", "condition", "\u03b1(kuk2", "\u2212", "\u03bb)", "=", "0,", "implies", "that", "\u03b1", "=", "0", "must", "hold", "and", "u", "can", "be", "obtained", "immediately", "by", "solving", "the", "linear", "system", "DDT", "u", "=", "Dy.", "This", "can", "be", "done", "in", "O(n)", "time", "owing", "to", "the", "bidiagonal", "structure", "of", "D.", "Conversely,", "if", "the", "solution", "to", "DD", "T", "u", "=", "Dy", "lies", "in", "the", "interior", "of", "the", "ball", "kuk2", "\u2264", "\u03bb,", "then", "it", "solves", "(3.2).", "Therefore,", "this", "case", "is", "trivial,", "and", "we", "need", "to", "consider", "only", "the", "harder", "case", "kuk2", "=", "\u03bb.", "For", "any", "given", "\u03b1", "one", "can", "obtain", "the", "corresponding", "vector", "u", "as", "u\u03b1", "=", "(DDT", "+", "\u03b1I)\u22121", "Dy.", "Therefore,", "optimizing", "for", "u", "reduces", "to", "the", "problem", "of", "finding", "the", "\u201ctrue\u201d", "value", "of", "\u03b1.", "An", "obvious", "approach", "is", "to", "solve", "ku\u03b1k2", "2", "=", "\u03bb2", ".", "Less", "obvious", "is", "the", "MSN", "equation", "h\u03b1:=\u03bb", "\u22121", "\u2212", "ku\u03b1k", "\u22121", "2", "=0,", "(3.3)", "which", "has", "the", "benefit", "of", "being", "almost", "linear", "in", "the", "search", "interval,", "which", "results", "in", "fast", "convergence", "[64].", "Thus,", "the", "task", "is", "to", "find", "the", "root", "of", "the", "function", "h\u03b1", ",", "for", "which", "we", "use", "Newton\u2019s", "method,", "which", "in", "this", "case", "leads", "to", "the", "iteration", "\u03b1\u2190\u03b1\u2212h\u03b1/h0", "\u03b1.", "(3.4)", "Some", "calculation", "shows", "that", "the", "derivative", "h0", "can", "be", "computed", "as", "1", "h0", "\u03b1", "=", "ku\u03b1", "k3", "2", "uT", "\u03b1", "(DDT", "+", "\u03b1I)\u22121u\u03b1", ".", "(3.5)", "The", "key", "idea", "in", "MSN", "is", "to", "eliminate", "the", "matrix", "inverse", "in", "(3.5)", "by", "using", "the", "Cholesky", "decomposition", "DDT+\u03b1I=RT", "\u03b1", "R\u03b1", "and", "defining", "a", "vector", "q\u03b1", "=", "(RT", "\u03b1)", "\u22121", "u,", "so", "that", "kq\u03b1k2", "2=uT", "\u03b1", "(DDT", "+", "\u03b1I)\u22121u\u03b1.", "As", "a", "result,", "the", "Newton", "iteration", "(3.4)", "becomes", "\u03b1\u2212", "h\u03b1", "h0", "\u03b1", "=", "\u03b1", "\u2212", "(ku\u03b1k", "\u22121", "2\u2212\u03bb", "\u22121", ")\u00b7", "ku\u03b1", "k3", "2", "uT", "\u03b1", "(DDT", "+", "\u03b1I)\u22121u\u03b1", ",", "=", "\u03b1\u2212", "ku\u03b1", "k2", "2\u2212\u03bb", "\u2212", "1ku\u03b1k3", "2", "kq\u03b1k2", "2", ",", "=", "\u03b1\u2212", "ku\u03b1", "k2", "2", "kq\u03b1k2", "2", " 1\u2212", "ku\u03b1", "k2", "\u03bb", " ,", "and", "therefore", "\u03b1\u2190\u03b1\u2212", "ku\u03b1", "k2", "2", "kq\u03b1k2", "2", " 1\u2212", "ku\u03b1", "k2", "\u03bb", " .", "(3.6)", "As", "shown", "for", "TV-L1", "(Appendix", "E),", "the", "tridiagonal", "structure", "of", "(DDT", "+", "\u03b1I)", "allows", "one", "to", "compute", "both", "R\u03b1", "and", "q\u03b1", "in", "linear", "time,", "so", "the", "overall", "iteration", "runs", "in", "O(n)", "time.", "The", "above", "ideas", "are", "presented", "as", "pseudocode", "in", "Algorithm", "4.", "As", "a", "stopping", "criterion", "two", "conditions", "are", "checked:", "whether", "the", "duality", "gap", "is", "small", "enough,", "and", "whether", "u", "is", "close", "enough", "to", "the", "boundary.", "This", "latter", "check", "is", "useful", "because", "intermediate", "solutions", "could", "be", "dual-infeasible,", "thus", "making", "the", "duality", "gap", "an", "inadequate", "optimality", "measure", "on", "its", "own.", "In", "practice", "we", "use", "tolerance", "values", " \u03bb", "=", "10\u22126", "and", " gap", "=", "10\u22125", ".", "Even", "though", "Algorithm", "4", "requires", "only", "linear", "time", "per", "iteration,", "it", "is", "fairly", "sophisticated,", "and", "in", "fact", "a", "much", "simpler", "method", "can", "be", "devised.", "This", "is", "illustrated", "here", "by", "a", "gradient-projection", "method", "with", "a", "fixed", "stepsize", "\u03b10,", "whose", "iteration", "is", "u", "t+1", "=", "Pk\u00b7k2", "\u2264\u03bb(u", "t", "\u2212", "\u03b10\u2207\u03c6(u", "t", ")).", "(3.7)", "The", "theoretically", "ideal", "choice", "for", "the", "stepsize", "\u03b10", "is", "given", "by", "the", "inverse", "of", "the", "Lipschitz", "constant", "L", "of", "the", "gradient", "\u2207\u03c6(u)", "[13,", "66].", "Since", "\u03c6(u)", "is", "a", "convex", "quadratic,", "L", "is", "simply", "the", "largest", "eigenvalue", "of", "the", "Hessian", "DDT", ".", "Owing", "to", "its", "special", "structure,", "the", "eigenvalues", "of", "the", "Hessian", "have", "closed-form", "expressions,", "namely\u03bbi", "=2", "\u22122cos", " i\u03c0", "n+1", " (for1\u2264i\u2264n).Thelargestoneis\u03bbn", "=", "2", "\u22122cos", " (n\u22121)\u03c0", "n", " ,", "which", "tends", "to", "4", "as", "n", "\u2192", "\u221e;", "thus", "the", "choice", "\u03b10", "=", "1/4", "is", "a", "good", "and", "cheap", "approximation.", "Pseudocode", "showing", "the", "whole", "14", "Algorithm", "4", "MSN", "based", "TV-L2", "proximity", "Initialize:", "\u03b1", "=", "0,", "u\u03b1", "=", "0.", "while", " ", " ku\u03b1k2", "2\u2212\u03bb", " ", " > \u03bborgap(u\u03b1)> gapdo", "Compute", "Cholesky", "decomp.", "DD", "T", "+", "\u03b1I", "=", "RT", "\u03b1", "R\u03b1.", "Obtain", "u\u03b1", "by", "solving", "RT", "\u03b1R\u03b1u\u03b1", "=", "Dy.", "Obtain", "q\u03b1", "by", "solving", "RT", "\u03b1q\u03b1", "=", "u\u03b1.", "\u03b1=\u03b1\u2212", "ku\u03b1", "k", "2", "2", "kq\u03b1", "k2", "2", " 1\u2212", "ku\u03b1k2", "\u03bb", " .", "end", "while", "return", "u\u03b1", "Algorithm", "5", "GP", "algorithm", "for", "TV-L2", "proximity", "Initialize", "u0", "\u2208", "RN,", "t", "=0.", "while", "(\u00ac", "converged)", "do", "Gradient", "update:", "vt", "=", "ut", "\u2212", "1", "4\u2207f(ut).", "Projection:", "ut+1", "=", "max(1", "\u2212", "\u03bb/kvtk2,", "0)", "\u00b7", "vt.", "t\u2190t+1.", "end", "while", "return", "ut.", "procedure", "is", "presented", "in", "Algorithm", "5.", "Combining", "this", "with", "the", "fact", "that", "the", "projection", "Pk\u00b7k2\u2264\u03bb", "is", "also", "trivial", "to", "compute,", "the", "GP", "iteration", "(3.7)", "turns", "out", "to", "be", "very", "attractive.", "Indeed,", "sometimes", "it", "can", "even", "outperform", "the", "more", "sophisticated", "MSN", "method,", "though", "only", "for", "a", "very", "limited", "range", "of", "\u03bb", "values.", "Therefore,", "in", "practice", "we", "recommend", "a", "hybrid", "of", "GP", "and", "MSN,", "as", "suggested", "by", "our", "experiments", "(see", "\u00a75.2.1).", "3.2", "TV-Lp:", "Proximity", "for", "Tv", "1D", "p", "For", "TV-Lp", "proximity", "(for", "1", "<", "p", "<", "\u221e)", "the", "dual", "problem", "becomes", "min", "u", "\u03c6(u)", ":=", "1", "2", "kDT", "uk", "2", "2\u2212u", "T", "Dy,", "s.t.", "kukq", "\u2264\u03bb,", "(3.8)", "where", "q", "=", "1/(1", "\u2212", "1/p).", "Problem", "(3.8)", "is", "not", "particularly", "amenable", "to", "Newton-type", "approaches,", "as", "neither", "PN", "(Appendix", "E),", "nor", "MSN-type", "methods", "(\u00a73.1)", "can", "be", "applied", "easily.", "It", "is", "partially", "amenable", "to", "gradient-", "projection", "(GP),", "for", "which", "the", "same", "update", "rule", "as", "in", "(3.7)", "applies,", "but", "unlike", "the", "q", "=", "2", "case,", "the", "projection", "step", "here", "is", "much", "more", "involved.", "Thus,", "to", "complement", "GP,", "we", "may", "favor", "the", "projection-free", "Frank-Wolfe", "(FW)", "method.", "As", "expected,", "the", "overall", "best", "performing", "approach", "is", "actually", "a", "hybrid", "of", "GP", "and", "FW.", "We", "summarize", "both", "choices", "below.", "3.2.1", "Efficient", "projection", "onto", "the", "`q", "-ball", "The", "problem", "of", "projecting", "onto", "the", "`q", "-norm", "ball", "is", "minw", "d(w)", ":=", "1", "2kw\u2212uk", "2", "2,", "s.t.", "kwkq", "\u2264", "\u03bb.", "(3.9)", "For", "this", "problem,", "it", "turns", "out", "to", "be", "more", "convenient", "to", "address", "its", "Fenchel", "dual", "minw", "d", "\u2217", "(w)", ":=", "1", "2kw\u2212uk", "2", "2", "+", "\u03bbkwkp,", "(3.10)", "which", "is", "actually", "nothing", "but", "prox\u03bbk\u00b7kp", "(u).", "The", "optimal", "solution,", "say", "w\u2217", ",", "to", "(3.9)", "can", "be", "obtained", "by", "solving", "(3.10),", "by", "using", "the", "Moreau-decomposition", "(A.6)", "which", "yields", "w", "\u2217", "=", "u", "\u2212", "prox\u03bbk\u00b7kp", "(u).", "15", "Projection", "(3.9)", "is", "computed", "many", "times", "within", "GP,", "so", "it", "is", "crucial", "to", "solve", "it", "rapidly", "and", "accurately.", "To", "this", "end,", "we", "first", "turn", "(3.10)", "into", "a", "differentiable", "problem", "and", "then", "derive", "a", "projected-Newton", "method", "following", "our", "approach", "presented", "in", "Appendix", "E.", "Assume", "therefore,", "without", "loss", "of", "generality", "that", "u", "\u2265", "0,", "so", "that", "w", "\u2265", "0", "also", "holds", "(the", "signs", "can", "be", "restored", "after", "solving", "this", "problem).", "Thus,", "instead", "of", "(3.10),", "we", "solve", "minw", "d", "\u2217", "(w)", ":=", "1", "2kw\u2212uk", "2", "2+\u03bb", "X", "i", "w", "p", "i", " 1/p", "s.t.w\u22650.", "(3.11)", "The", "gradient", "of", "d\u2217", "may", "be", "compactly", "written", "as", "\u2207d\u2217(w)=w", "\u2212u+\u03bbkwk", "1\u2212p", "pw", "p\u22121", ",", "(3.12)", "where", "wp\u22121", "denotes", "elementwise", "exponentiation", "of", "w.", "Elementary", "calculation", "yields", "\u22022", "\u2202wi\u2202wj", "d\u2217(w)=\u03b4ij", "1+\u03bb(p\u22121)", "wi", "kwkp", " p\u22122", "kwk", "\u22121", "p", " +\u03bb(1\u2212p)", "wi", "kwkp", " p\u22121", "wj", "kwkp", " p\u22121", "kwk", "\u22121", "p", "=\u03b4ij1\u2212c\u02c6w", "p\u22122", "i", " +c\u0304wi", "\u0304", "wj,", "where", "c", ":=", "\u03bb(1", "\u2212", "p)kwk\u22121", "p,\u02c6", "w", ":=", "w/kwkp,", "\u0304", "w", ":=", "(w/kwkp)p\u22121", ",", "and", "\u03b4ij", "is", "the", "Dirac", "delta.", "In", "matrix", "notation,", "this", "Hessian\u2019s", "diagonal", "plus", "rank-1", "structure", "becomes", "apparent", "H(w)=Diag1\u2212c\u02c6w", "p\u22122", " +c\u0304w", "\u00b7", "\u0304", "w", "T", "(3.13)", "To", "develop", "an", "efficient", "Newton", "method", "it", "is", "imperative", "to", "exploit", "this", "structure.", "It", "is", "not", "hard", "to", "see", "that", "for", "a", "set", "of", "non-active", "variables", "\u0304I", "the", "reduced", "Hessian", "takes", "the", "form", "H\u0304I(w)=Diag", "1\u2212c", "\u02c6w", "p\u22122", "\u0304", "I", " +c\u0304w", "\u0304I", "\u0304", "w", "T", "\u0304", "I.", "(3.14)", "Withtheshorthand\u2206=Diag", "1\u2212c", "\u02c6w", "p\u22122", "\u0304", "I", " ,", "the", "matrix-inversion", "lemma", "yields", "H\u22121", "\u0304", "I", "(w)=\u2206+c\u0304w", "\u0304I", "\u0304", "w", "T", "\u0304", "I", " \u22121", "=\u2206", "\u22121", "\u2212", "\u2206\u22121c", "\u0304w", "\u0304I", "\u0304", "wT", "\u0304", "I", "\u2206\u22121", "1+c\u0304wT", "\u0304", "I", "\u2206\u22121", "\u0304", "w\u0304I", ".", "(3.15)", "Furthermore,", "since", "in", "PN", "the", "inverse", "of", "the", "reduced", "Hessian", "always", "operates", "on", "the", "reduced", "gradient,", "we", "can", "rearrange", "the", "terms", "in", "this", "operation", "for", "further", "efficiency;", "that", "is,", "H\u0304I(w)", "\u22121", "\u2207\u0304If(w)", "=", "v", " \u2207\u0304If(w)\u2212", "v \u0304w", "\u0304", "I", " v ", "\u0304w", "\u0304", "I", " T", "\u2207\u0304If(w)", "1/c+\u0304w\u0304Iv \u0304w\u0304I", " ,", "(3.16)", "wherev:=", "1\u2212c", "\u02c6w", "p\u22122", "\u0304", "I", " \u22121", ",", "and", " ", "denotes", "componentwise", "product.", "The", "relevant", "point", "of", "the", "above", "derivations", "is", "that", "the", "Newton", "direction,", "and", "thus", "the", "overall", "PN", "iteration", "can", "be", "computed", "in", "O(n)", "time,", "which", "results", "in", "a", "highly", "effective", "solver.", "3.2.2", "Frank-Wolfe", "algorithm", "for", "TV-Lp", "proximity", "The", "Frank-Wolfe", "(FW)", "algorithm", "(see", "e.g", ".,", "[42]", "for", "a", "recent", "overview),", "also", "known", "as", "the", "conditional", "gradient", "method", "[15]", "solves", "differentiable", "optimization", "problems", "over", "compact", "convex", "sets,", "and", "can", "be", "quite", "effective", "if", "we", "have", "access", "to", "a", "subroutine", "to", "solve", "linear", "problems", "over", "the", "constraint", "set.", "The", "generic", "FW", "iteration", "is", "illustrated", "in", "Algorithm", "6.", "FW", "offers", "an", "attractive", "strategy", "for", "TV-Lp", "because", "both", "the", "descent-direction", "as", "well", "as", "stepsizes", "can", "be", "computed", "easily.", "Specifically,", "to", "find", "the", "descent", "direction", "we", "need", "to", "solve", "mins", "s", "T", "DDT", "u\u2212Dy", " ,", "s.t.", "kskq", "\u2264\u03bb.", "(3.17)", "This", "problem", "can", "be", "solved", "by", "observing", "that", "maxkskq", "\u22641", "sT", "z", "is", "attained", "by", "some", "vector", "s", "proportional", "to", "z,", "of", "the", "form", "|s\u2217|", "\u221d", "|z|p\u22121", ".", "Therefore,", "s", "\u2217", "in", "(3.17)", "is", "found", "by", "taking", "z", "=", "DDT", "u", "\u2212", "Dy,", "computing", "s", "=", "\u2212", "sgn(z) |z|", "p\u22121", "and", "then", "rescaling", "s", "to", "meet", "kskq", "=", "\u03bb.", "16", "Algorithm", "6", "Frank-Wolfe", "(FW)", "Inputs:", "f", ",", "compact", "convex", "set", "D.", "Initialize", "x0", "\u2208", "D,", "t", "=", "0.", "while", "stopping", "criteria", "not", "met", "do", "Find", "descent", "direction:", "mins", "s", "\u00b7", "\u2207f", "(xt", ")", "s.t.", "s", "\u2208", "D.", "Determine", "stepsize:", "min\u03b3", "f", "(xt", "+", "\u03b3(s", "\u2212", "xt))", "s.t.", "\u03b3", "\u2208", "[0,", "1].", "Update:", "xt+1", "=", "xt", "+", "\u03b3(s", "\u2212", "xt)", "t\u2190t+1.", "end", "while", "return", "xt.", "The", "stepsize", "can", "also", "be", "computed", "in", "closed", "form", "owing", "to", "the", "objective", "function", "being", "quadratic.", "Note", "theupdateinFWtakestheformu+\u03b3(s\u2212u),whichcanberewrittenasu+\u03b3dwithd=s", "\u2212u.", "Usingthis", "notation", "the", "optimal", "stepsize", "is", "obtained", "by", "solving", "min\u03b3\u2208[0,1]", "1", "2kDT(u+\u03b3d)k2", "2\u2212(u+\u03b3d)TDy.", "A", "brief", "calculation", "on", "the", "above", "problem", "yields", "\u03b3\u2217", "=", "min{max{\u02c6\u03b3,1},0},", "where", "\u02c6\u03b3", "=", "\u2212(dT", "DD", "T", "u", "+", "dT", "Dy)/(dT", "DDT", "d)", "is", "the", "unconstrained", "optimal", "stepsize.", "We", "note", "that", "following", "[42]", "we", "also", "check", "a", "\u201csurrogate", "duality-gap\u201d", "g(x)=x", "T", "\u2207f(x)", "\u2212", "min", "s\u2208D", "s", "T", "\u2207f(x)=(x\u2212s", "\u2217", ")T", "\u2207f", "(x),", "at", "the", "end", "of", "each", "iteration.", "If", "this", "gap", "is", "smaller", "than", "the", "desired", "tolerance,", "the", "real", "duality", "gap", "is", "computed", "and", "checked;", "if", "it", "also", "meets", "the", "tolerance,", "the", "algorithm", "stops.", "3.3", "Prox", "operator", "for", "TV-L\u221e", "The", "final", "case", "is", "Tv", "1D", "\u221e", "proximity.", "We", "mention", "this", "case", "only", "for", "completeness.", "The", "dual", "to", "the", "prox-operator", "here", "is", "minu", "1", "2", "kDT", "uk", "2", "2\u2212u", "T", "Dy,", "s.t.kuk1", "\u2264\u03bb.", "(3.18)", "This", "problem", "can", "be", "again", "easily", "solved", "by", "invoking", "GP,", "where", "the", "only", "non-trivial", "step", "is", "projection", "onto", "the", "`1-ball.", "But", "the", "latter", "is", "an", "extremely", "well-studied", "operation", "(see", "e.g.,", "[48,", "58]),", "and", "so", "O(n)", "time", "routines", "for", "this", "purpose", "are", "readily", "available.", "By", "integrating", "them", "in", "our", "GP", "framework", "an", "efficient", "prox", "solver", "is", "obtained.", "4", "Prox", "operators", "for", "multidimensional", "TV", "We", "now", "move", "onto", "discussing", "how", "use", "the", "efficient", "1D-TV", "prox", "operators", "derived", "above", "within", "a", "prox-splitting", "framework", "to", "handle", "multidimensional", "TV", "(1.3)", "proximity.", "4.1", "Proximity", "stacking", "The", "basic", "composite", "objective", "(1.1)", "is", "a", "special", "case", "of", "the", "more", "general", "class", "of", "models", "where", "one", "may", "have", "several", "regularizers,", "so", "that", "we", "now", "solve", "minx", "f(x)", "+", "Xm", "i=1", "ri", "(x),", "(4.1)", "17", "whereeachri(for1\u2264i\u2264m)islscandconvex.", "Just", "like", "the", "basic", "problem", "(1.1),", "the", "more", "complex", "problem", "(4.1)", "can", "also", "be", "tackled", "via", "proximal", "methods.", "The", "key", "to", "doing", "so", "is", "to", "use", "inexact", "proximal", "methods", "along", "with", "a", "technique", "we", "should", "call", "proximity", "stacking.", "Inexact", "proximal", "methods", "allow", "one", "to", "use", "approximately", "computed", "prox", "operators", "without", "impeding", "overall", "convergence,", "while", "proximity", "stacking", "allows", "one", "to", "compute", "the", "prox", "operator", "for", "the", "entire", "sum", "r(x)", "=", "Pm", "i=1", "ri(x)", "by", "\u201cstacking\u201d", "the", "individual", "ri", "prox", "operators.", "This", "stacking", "leads", "to", "a", "highly", "modular", "design;", "see", "Figure", "6", "for", "a", "visualization.", "In", "other", "words,", "proximity", "stacking", "involves", "computing", "the", "prox", "operator", "proxr", "(y)", ":=", "argmin", "x", "1", "2kx\u2212yk2", "2+", "Xm", "i=1", "ri", "(x),", "(4.2)", "by", "iteratively", "invoking", "the", "individual", "prox", "operators", "proxri", "and", "then", "combining", "their", "outputs.", "This", "mixing", "is", "done", "by", "means", "of", "a", "combiner", "method,", "which", "guarantees", "convergence", "to", "the", "solution", "of", "the", "overall", "proxr", "(y).", "Proximal", "method", "+", "Proximity", "combiner", "...", "Proximity", "operator", "Proximity", "operator", "Proximity", "operator", "Gradient", "operator", "Figure", "6:", "Design", "schema", "in", "proximal", "optimization", "for", "minimizing", "the", "function", "f", "(x)", "+", "Pm", "i=1", "ri", "(x).", "Proximal", "stacking", "makes", "the", "sum", "of", "regularizers", "appear", "as", "a", "single", "one", "to", "the", "proximal", "method,", "while", "retaining", "modularity", "in", "the", "design", "of", "each", "proximity", "step", "through", "the", "use", "of", "a", "combiner", "method.", "For", "non-smooth", "f", "the", "same", "schema", "applies", "by", "just", "replacing", "the", "f", "gradient", "operator", "by", "its", "corresponding", "proximity", "operator.", "Different", "proximal", "combiners", "can", "used", "for", "computing", "proxr", "(4.2).", "In", "what", "follows", "we", "briefly", "describe", "some", "of", "the", "possibilities.", "The", "crux", "of", "all", "of", "them", "is", "that", "their", "key", "steps", "will", "be", "proximity", "steps", "over", "the", "individual", "ri", "terms.", "Thus,", "using", "proximal", "stacking", "and", "combination,", "any", "convex", "machine", "learning", "problem", "with", "multiple", "regularizers", "can", "be", "solved", "in", "a", "highly", "modular", "proximal", "framework.", "After", "this", "section", "we", "exemplify", "these", "ideas", "by", "applying", "them", "to", "two-", "and", "higher-dimensional", "TV", "proximity,", "which", "we", "then", "use", "within", "proximal", "solvers", "for", "addressing", "a", "wide", "array", "of", "applications.", "4.1.1", "Proximal", "Dykstra", "(PD)", "The", "Proximal", "Dykstra", "method", "[27]", "solves", "problems", "of", "the", "form", "min", "x", "1", "2kx\u2212yk2", "2", "+", "r1(x)", "+", "r2(x),", "which", "is", "a", "particular", "case", "of", "(4.2)", "for", "m", "=", "2.", "The", "method", "follows", "the", "procedure", "detailed", "in", "Algorithm", "7,", "which", "is", "guaranteed", "to", "converge", "to", "the", "desired", "solution.", "Using", "PD", "for", "proximal", "stacking", "for", "2D", "Total-Variation", "was", "previously", "proposed", "in", "[8].", "It", "has", "also", "been", "shown", "that", "the", "application", "of", "this", "method", "is", "equivalent", "to", "performing", "alternating", "projections", "onto", "certain", "dual", "polytopes", "[43],", "a", "procedure", "whose", "effectiveness", "varies", "depending", "on", "the", "relative", "orientation", "of", "such", "polytopes.", "A", "more", "efficient", "method", "based", "on", "reflections", "instead", "of", "projections", "is", "possible,", "as", "we", "will", "see", "below.", "More", "generally,", "if", "more", "than", "two", "regularizers", "are", "present", "(i.e", ".,", "m", ">", "2),", "then", "it", "is", "more", "fitting", "to", "use", "Parallel-Proximal", "Dykstra", "(PPD)", "[26]", "(see", "Alg.", "8),", "a", "generalization", "obtained", "via", "the", "\u201cproduct-space", "trick\u201d", "of", "Pierra", "[69].", "This", "parallel", "proximal", "method", "is", "attractive", "because", "it", "not", "only", "combines", "an", "arbitrary", "number", "of", "18", "Algorithm", "7", "Proximal", "Dykstra", "Inputs:", "r1,", "r2,", "input", "signal", "y", "\u2208", "Rn", ".", "Initializex0=y,p0=q0=0,t", "=0.", "while", "stopping", "criteria", "not", "met", "do", "r2", "proximity", "operator:", "zt", "=", "proxr2", "(xt", "+", "pt).", "r2step:pt+1=xt+pt\u2212zt.", "r1", "proximity", "operator:", "xt+1", "=", "proxr1", "(zt", "+", "qt).", "r1step:qt+1=zt+qt\u2212xt+1.", "t\u2190t+1.", "end", "while", "Return", "xt", ".", "Algorithm", "8", "Parallel-Proximal", "Dykstra", "Inputs:r1,...,rm,inputsignaly\u2208Rn", ".", "Initialize", "x0", "=", "y,", "zi", "0=0,fori=1,...,m;t=0", "while", "stopping", "criterion", "not", "met", "do", "fori=1tominparalleldo", "pi", "t", "=", "proxri", "(zi", "t)", "end", "for", "xt+1", "=", "1", "m", "P", "ipi", "t", "fori=1tominparalleldo", "zi", "t+1=xt+1+zi", "t\u2212pi", "t", "end", "for", "t\u2190t+1", "end", "while", "Return", "xt", "regularizers,", "but", "also", "allows", "parallelizing", "the", "calls", "to", "the", "individual", "prox", "operators.", "This", "feature", "allows", "us", "to", "develop", "a", "highly", "parallel", "implementation", "for", "multidimensional", "TV", "proximity", "(\u00a74.3).", "4.1.2", "Alternating", "reflections", "\u2013", "Douglas-Rachford", "(DR)", "The", "Douglas-Rachford", "(DR)", "method", "was", "originally", "devised", "for", "minimizing", "the", "sum", "of", "two", "(nonsmooth)", "convex", "functions", "[27],", "in", "the", "form:", "min", "x", "f1(x)", "+", "f2(x),", "(4.3)", "such", "that", "(ri", "dom", "f1)", "\u2229", "(ri", "dom", "f2)", "6", "=", "\u2205.", "The", "method", "operates", "by", "iterating", "a", "series", "of", "reflections,", "and", "in", "its", "simplest", "form", "can", "be", "written", "as", "zk+1", "=", "1", "2", "[Rf1Rf2", "+I]zk,", "(4.4)", "where", "the", "reflection", "operator", "R\u03c6", ":=", "2", "prox\u03c6", "\u2212I", ".", "This", "method", "is", "not", "cleanly", "applicable", "to", "problem", "(4.2)", "because", "of", "the", "squared", "norm", "term.", "Nevertheless", "in", "[43]", "a", "suitable", "transformation", "was", "proposed", "by", "making", "use", "of", "arguments", "from", "submodular", "optimization;", "a", "minimal", "background", "on", "this", "topic", "is", "given", "in", "Appendix", "A.", "We", "summarize", "the", "key", "ideas", "from", "[43]", "below.", "Assume", "m", "=", "2", "and", "r1", ",", "r2", "being", "Lov", "\u0301asz", "extensions", "to", "some", "submodular", "functions", "(Total-Variation", "is", "the", "Lov", "\u0301asz", "extension", "of", "a", "submodular", "graph-cut", "problem,", "see", "[5]).", "Defining", "\u02c6r1(x)", "=", "r1", "(x)", "\u2212", "xT", "y,", "\u02c6", "r1isalsoa", "Lov", "\u0301asz", "extension", "of", "some", "submodular", "function", "(see", "Appendix", "A).", "Therefore,", "we", "may", "consider", "the", "problem", "proxr", "(y)", ":=", "argmin", "x", "1", "2", "kxk", "2", "2", "+", "\u02c6r1(x)", "+", "r2(x),", "19", "which", "can", "be", "rewritten", "(using", "Proposition", "A.11)", "as", "min", "a,b", "ka\u2212bk2,", "s.t.", "a\u2208\u2212B", "\u02c6", "r1,", "b\u2208Br2,", "(4.5)", "where", "Br", "denotes", "the", "base", "polytope", "of", "submodular", "function", "corresponding", "to", "r", "(see", "Appendix", "A).", "The", "original", "solution", "can", "be", "recovered", "through", "x", "=", "a", "\u2212", "b", ".", "Problem", "(4.5)", "is", "still", "not", "in", "a", "form", "amenable", "to", "DR", "(4.3)\u2014nevertheless,", "if", "we", "apply", "DR", "to", "the", "indicator", "functions", "of", "the", "sets", "\u2212B", "\u02c6", "r1", ",", "Br2", ",", "that", "is,", "to", "the", "problem", "min", "x", "\u03b4\u2212B", "\u02c6", "r1", "(x)", "+", "\u03b4Br2", "(x),", "it", "can", "be", "shown", "[12]", "that", "the", "sequence", "(4.4)", "generated", "by", "DR", "is", "divergent,", "but", "that", "after", "a", "correction", "through", "projection", "converges", "to", "the", "desired", "solution", "of", "(4.5).", "Such", "solution", "is", "given", "by", "the", "pair", "b=\u03a0Br2", "(zk),", "a", "=", "\u03a0\u2212B", "\u02c6", "r1", "(b).", "(4.6)", "Although", "in", "this", "derivation", "many", "concepts", "have", "been", "introduced,", "suprisingly", "all", "the", "operations", "in", "the", "algorithm", "can", "be", "reduced", "to", "performing", "proximity", "steps.", "Note", "first", "that", "the", "projections", "onto", "a", "base", "polytope", "required", "to", "get", "a", "solution", "(4.6)", "can", "be", "written", "in", "terms", "of", "proximity", "operators", "(Proposition", "A.12),", "which", "in", "this", "case", "implies", "\u03a0Br2", "(z)=z", "\u2212proxr2", "(z),", "\u03a0\u2212B", "\u02c6", "r1", "(z)", "=", "z", "+", "prox\u02c6r2", "(\u2212z)", "=", "z", "+", "proxr2", "(\u2212z", "+", "y),", "where", "we", "use", "the", "fact", "that", "for", "f", "(x)", "=", "\u03c6(x)", "+", "uT", "x,", "proxf", "(x)", "=", "prox\u03c6", "(x", "\u2212", "u).", "The", "reflection", "operations", "in", "which", "the", "DR", "iteration", "is", "based", "(4.4)", "can", "also", "be", "written", "in", "terms", "of", "proximity", "steps,", "as", "we", "are", "applying", "DR", "to", "the", "indicator", "functions", "\u03b4\u2212B", "\u02c6", "r1", ",", "\u03b4Br2", ",", "and", "proximity", "for", "an", "indicator", "function", "equals", "projection.", "This", "alternating", "reflections", "variant", "of", "DR", "is", "presented", "in", "Algorithm", "9.", "Note", "that", "in", "contrast", "with", "the", "original", "DR", "method,", "this", "variant", "does", "not", "require", "tuning", "any", "hyperparameters,", "thus", "enhancing", "its", "practicality.", "Algorithm", "9", "Alternating", "reflections", "\u2013", "Douglas", "Rachford", "(DR)", "Inputs:", "r1,", "r2", "Lov", "\u0301asz", "extensions", "of", "some", "submodular", "function,", "input", "signal", "y", "\u2208", "Rn", ".", "Initialize", "z0", "\u2208", "Rn", ",t=0.", "Define", "the", "following", "operations:", "\u03a0\u2212B", "\u02c6", "r1", "(z)", "def", "=", "z+proxr1", "(\u2212z", "+", "y).", "\u03a0Br2", "(z)", "def", "=", "z", "\u2212proxr2", "(z).", "R\u2212B", "\u02c6", "r1", "(z)", "def", "=", "2\u03a0\u2212B", "\u02c6", "r1", "(z)\u2212z.", "RBr2", "(z)", "def", "=", "2\u03a0Br2", "(z)\u2212z.", "while", "stopping", "criteria", "not", "met", "do", "zt+1", "=", "1", "2", " R\u2212B", "\u02c6", "r1", "RBr2", "+I", " zk", "t\u2190t+1.", "end", "while", "b=\u03a0Br2", "(zt),", "a", "=", "\u03a0\u2212B", "\u02c6", "r1", "(b).", "Return", "x\u2217", "=a\u2212b.", "4.1.3", "Alternating-Direction", "Method", "of", "Multipliers", "(ADMM)", "Although", "many", "times", "presented", "as", "a", "particular", "algorithm", "for", "solving", "problems", "involving", "the", "minimization", "of", "a", "certain", "objetive", "f", "(x)", "+", "g(Lx)", "with", "L", "a", "linear", "operator", "[27],", "the", "Alternating-Direction", "Method", "of", "Multipliers", "can", "be", "thought", "as", "general", "splitting", "strategy", "for", "solving", "the", "unconstrained", "minimization", "of", "a", "sum", "of", "functions.", "This", "strategy", "boils", "down", "to", "transforming", "a", "problem", "in", "the", "form", "minx", "Pm", "i=1", "fi(x)", "into", "a", "saddle-point", "problem", "20", "Algorithm", "10", "Alternating", "Direction", "Method", "of", "Multipliers", "(ADMM)", "Inputs:r1,...,rm,inputsignaly\u2208Rn", ".", "Initialize", "x0", "=", "zi", "0=yfori=1,...,m;t=0", "while", "stopping", "criterion", "not", "met", "do", "xt+1", "=", "y+", "Pm", "i=1", "(u", "i", "t", "+\u03c1z", "i", "t)", "1+m\u03c1", ".", "fori=1tominparalleldo", "zi", "t", "=", "prox\u03bb", "\u03c1ri", "(\u2212", "1", "\u03c1ui", "t", "+", "xt+1)", "ui", "t+1", "=", "ut+1", "+", "\u03c1(zi", "t+1", "\u2212", "xt+1)", "end", "for", "t\u2190t+1", "end", "while", "Return", "xt", "by", "introducing", "consensus", "constraints", "and", "incorporating", "them", "into", "the", "objective", "through", "augmented", "Lagrange", "multipliers,", "min", "x", "m", "X", "i=1", "fi(x)", "=", "min", "x,z1", ",...,zm", "m", "X", "i=1", "fi(zi)", "s.t.z1", "=x,...,zm=x,", "\u2261", "min", "x,z1", ",...,zm", "max", "u1,...,um", "m", "X", "i=1", " fi(zi)", "+", "u", "T", "i(zi\u2212x)+", "\u03c1", "2", "kzi", "\u2212", "xk2", " .", "The", "method", "then", "proceeds", "to", "solve", "this", "problem", "by", "alternating", "steps", "of", "minimization", "on", "x,", "minimization", "on", "every", "zi", ",", "and", "a", "gradient", "step", "on", "every", "ui", ".", "In", "[95]", "a", "proposal", "using", "this", "method", "was", "presented", "to", "solve", "m\u2013dimensional", "anisotropic", "TV", "(1.3).", "This", "approach", "applies", "equally", "to", "the", "more", "general", "proximal", "stacking", "framework", "under", "discussion", "here", "(4.2),", "by", "the", "transformation", "proxr", "(y)", ":=", "argmin", "x", "1", "2kx\u2212yk2", "2+", "Xm", "i=1", "ri", "(x),", "\u2261", "min", "x,z1,...,zm", "max", "u1,...,um", "1", "2kx\u2212yk2", "2+", "m", "X", "i=1", " fi(zi)", "+", "u", "T", "i(zi\u2212x)+", "\u03c1", "2", "kzi", "\u2212", "xk2", " .", "The", "steps", "for", "obtaining", "a", "solution", "then", "follow", "as", "Algorithm", "10.", "Similar", "to", "Parallel", "Proximal", "Dykstra,", "this", "approach", "allows", "computing", "the", "prox-operator", "of", "each", "function", "ri", "in", "parallel.", "4.1.4", "Dual", "proximity", "methods", "Another", "family", "of", "approaches", "to", "solve", "(4.2)", "is", "to", "compute", "the", "global", "proximity", "operator", "using", "the", "Fenchel", "duals", "proxr\u2217", "i", ".", "This", "can", "be", "advantageous", "in", "settings", "where", "dual", "prox-operator", "is", "easier", "to", "compute", "than", "the", "primal", "operator;", "isotropic", "Total-Variation", "problems", "are", "an", "instance", "of", "such", "a", "setting,", "and", "thus", "investigating", "this", "approach", "for", "their", "anisotropic", "variants", "is", "worthwhile.", "Indeed,", "in", "the", "context", "of", "image", "processing", "a", "popular", "splitting", "approach", "is", "given", "by", "Chambolle", "and", "Pock", "[22],", "which", "consider", "a", "problem", "in", "the", "form", "min", "x", "F", "(Kx)", "+", "G(x),", "for", "K", "some", "linear", "operator,", "F", ",", "G", "convex", "lower-semicontinuous", "functions.", "Through", "a", "strategy", "similar", "to", "ADMM", "an", "equivalent", "saddle", "point", "problem", "can", "be", "obtained,", "min", "x", "max", "y", "(Kx)", "T", "y+G(x)\u2212F", "\u2217", "(y),", "21", "with", "F", "\u2217", "convex", "conjugate", "of", "F", ".", "This", "problem", "is", "then", "solved", "by", "alternating", "maximization", "on", "y", "and", "minimiza-", "tion", "on", "x", "through", "proximity", "steps,", "as", "yt+1", "=", "prox\u03c3F", "\u2217", "(yt", "+", "\u03c3K", "\u0304xt)", "xt+1", "=", "prox\u03c4G(xt", "\u2212", "\u03c4K", "\u2217", "yt+1)", "\u0304", "xt+1", "=", "xt+1", "+", "\u03b8(xt+1", "\u2212", "xt),", "where", "K", "\u2217", "is", "the", "conjugate", "transpose", "of", "K", ".", "\u03c3", ",", "\u03c4", "and", "\u03b8", "are", "algorithm", "parameters", "that", "should", "be", "either", "selected", "under", "some", "bounds", "[22,", "Algorithm", "1]", "or", "readjusted", "every", "iteration", "making", "use", "of", "Lipschitz", "convexity", "of", "G", "[22,", "Algorithm", "2],", "resulting", "in", "an", "accelerating", "scheme", "much", "in", "the", "style", "of", "FISTA", "[13].", "The", "overall", "procedure", "can", "also", "be", "shown", "to", "be", "an", "instance", "of", "preconditioned", "ADMM,", "where", "the", "preconditioning", "is", "given", "by", "the", "application", "of", "a", "proximity", "step", "for", "the", "maximization", "of", "y", "(instead", "of", "the", "usal", "dual", "gradient", "step", "of", "ADMM)", "and", "the", "auxiliary", "point", "\u0304x.", "Note", "also", "how", "proximity", "is", "computed", "over", "the", "dual", "F", "\u2217", "instead", "of", "the", "primal", "proxF", ".", "Now,", "this", "decomposition", "strategy", "can", "be", "applied", "for", "some", "instances", "of", "proximal", "stacking", "(4.2)", "when", "the", "ri", "terms", "allow", "the", "particular", "composition", "m", "X", "i=1", "ri(x)", "=", "F", "\uf8eb", "\uf8ec", "\uf8ed", "\uf8ee", "\uf8ef", "\uf8f0", "K1", ".", ".", ".", "Km", "\uf8f9", "\uf8fa", "\uf8fbx", "\uf8f6", "\uf8f7", "\uf8f8=", "F(Kx),", "which", "does", "not", "hold", "in", "general", "but", "holds", "for", "2D", "TV", "(1.4)", "when", "taking", "the", "identities", "F(x)", "=kxk1,G(x)", "=", "1", "2kx\u2212yk2", "2,", "K=", " I\u2297D", "D\u2297I", " ,", "with", "D", "the", "differencing", "matrix", "as", "before,", "\u2297", "denotes", "Kronecker", "product,", "and", "x", "a", "vectorization", "of", "the", "2D", "input.", "The", "iterates", "above", "can", "then", "be", "applied", "easily:", "proximity", "over", "G", "is", "trivial", "and", "proximity", "over", "F", "\u2217", "is", "also", "easy", "upon", "realizing", "that", "proxk\u00b7k", "\u2217", "1", "=", "prox\u03b4k\u00b7k\u221e\u22641", "=", "\u03a0k\u00b7k\u221e\u22641", ",", "which", "is", "solved", "through", "thresholding.", "A", "generalization", "of", "this", "approach", "is", "presented", "by", "Condat", "[29],", "who", "considers", "min", "x", "f(x)", "+", "g(x)", "+", "m", "X", "i=1", "ri", "(Lix),", "a", "problem", "that", "cleanly", "fits", "into", "(4.2)", "with", "f", "(x)", "=", "1", "2kx\u2212yk2", "2,g(x)=0,L", "=I.Theproceduretofinda", "solution", "is", "proposed", "as", "\u0304", "x", "t+1", "=", "prox\u03c4g\u2217", "x", "t", "\u2212", "\u03c4", "\u2207f(x", "t", ")\u2212\u03c4", "m", "X", "i=1", "L\u2217", "iu", "t", "i", "!", "xn+1=\u03c1\u0304x", "t+1+(1\u2212\u03c1)x", "t", "\u0304", "u", "t+1", "i", "=", "prox\u03c3h\u2217", "i", "(u", "t", "i+\u03c3Li(2\u0304xt+1\u2212xt))", "\u2200i=1,...,m,", "u", "t+1", "i", "=\u03c1\u0304u", "t+1", "i", "+(1\u2212\u03c1)u", "t", "i", "\u2200i=1,...,m,", "for", "\u03c4", ",", "\u03c1", "parameters", "of", "the", "algorithm.", "When", "applying", "this", "procedure", "to", "2D", "TV", "(m", "=", "2,", "r1", "(x)", "=", "proximity", "over", "rows,", "r2", "(x)", "=", "proximity", "over", "columns)", "an", "algorithm", "almost", "equivalent", "to", "Chambolle", "and", "Pock", "[22]", "is", "obtained,", "the", "only", "difference", "being", "that", "here", "the", "gradient", "of", "f", "is", "used,", "instead", "of", "the", "proxG", "operation.", "22", "Finally,", "another", "related", "method", "is", "the", "splitting", "approach", "of", "Kolmogorov", "et", "al", "[51],", "which", "for", "m", "=", "2", "performs", "the", "following", "splitting:", "min", "x", "1", "2kx\u2212yk2", "2", "+", "r1(x)", "+", "r2(x),", "\u2261", "min", "x,x0", "kx\u2212yk2", "2+r1(x)+r2(x", "0", ")s.t.x=x", "0", ",", "\u2261", "min", "x,x0", "max", "z", "kx\u2212yk2", "2+r1(x)+r2(x", "0", ")+z", "T", "(x\u2212x", "0", "),", "\u2261", "min", "x", "max", "z", "kx\u2212yk2", "2+r1(x)\u2212r", "\u2217", "2(z)+x", "T", "z.", "where", "we", "have", "made", "use", "of", "the", "Fenchel", "dual", "r\u2217", "2(z)", "=", "maxx0", "zTx0", "\u2212", "r2", "(x0", ").", "This", "problem", "can", "be", "solved", "through", "a", "primal-dual", "minimization:", "z", "t+1", "=", "prox\u03c3tr\u2217", "2", "z", "t", "+", "\u03c3t(x", "t", "+", "\u03b8t(x", "t", "\u2212", "x", "t\u22121", "))", " ,", "x", "t+1", "=", "prox\u03c4", "t(k\u00b7\u2212", "yk2", "2+r1)", "x", "t", "\u2212", "\u03c4", "t", "z", "t+1", " ", ".", "The", "primal", "proximity", "operator", "over", "the", "squared", "norm", "term", "plus", "r1", "can", "be", "rewritten", "in", "terms", "of", "proxr1", "as", "prox", "\u03c4(r1+", "1", "2k\u00b7\u2212yk2", "2)(w)", "=", "argmin", "x", "r1(x)", "+", "1+\u03c4\u22121", "2", "kx\u2212(1+\u03c4", "\u22121", ")\u22121", "(y+\u03c4", "\u22121", "w)k", "2", "2,", "=", "prox(1+\u03c4", "\u22121", ")\u22121", "r1", "(1+\u03c4", "\u22121", ")\u22121", "(y+\u03c4", "\u22121", "w) ", ".", "Regarding", "the", "dual", "step,", "in", "the", "previously", "presented", "methods", "the", "decompositions", "allowed", "to", "disentangle", "the", "effect", "of", "a", "linear", "operator", "Li", "from", "each", "ri", ".", "The", "present", "decomposition,", "however,", "does", "not", "take", "into", "account", "this", "possibility,", "thus", "increasing", "the", "complexity", "of", "computing", "r\u2217", "2", ".", "To", "address", "this", "difficulty", "the", "Moreau", "decomposition", "(A.3)", "is", "helpful,", "as", "prox\u03c3r\u2217", "2", "(w)=w\u2212\u03c3", " argmin", "x", "r2(x)", "+", "\u03c3", "2", "kx\u2212\u03c3", "\u22121", "wk", "2", "2", " ,", "=", "w", "\u2212", "\u03c3", "prox\u03c3\u22121r2", "(\u03c3", "\u22121", "w),", "thus", "solving", "the", "dual", "proximity", "operator", "in", "terms", "of", "the", "primal", "proxr2", ".", "Regarding", "the", "algorithm", "parameters", "\u03b8,", "\u03c4", "and", "\u03c3", ",", "they", "can", "be", "adjusted", "at", "every", "iteration", "for", "greater", "performance", "making", "use", "of", "Lipschitz", "convexity", "[23].", "4.2", "Two-dimensional", "TV", "Recall", "that", "for", "a", "matrix", "X", "\u2208", "Rn1", "\u00d7n2", ",", "the", "anisotropic", "2D-TV", "regularizer", "takes", "the", "form", "Tv", "2", "p,q", "(X)", ":=", "Xn1", "i=1", " Xn2", "\u22121", "j=1", "|xi,j+1", "\u2212", "xi,j", "|p 1/p", "+", "Xn2", "j=1", " Xn1", "\u22121", "i=1", "|xi+1,j", "\u2212", "xi,j", "|q 1/q", ".", "(4.7)", "This", "regularizer", "applies", "a", "Tv", "1D", "p", "regularization", "over", "each", "row", "of", "X", ",", "and", "a", "Tv", "1D", "q", "regularization", "over", "each", "column.", "Introducing", "differencing", "matrices", "Dn", "and", "Dm", "for", "the", "row", "and", "column", "dimensions,", "the", "regularizer", "(4.7)", "can", "be", "rewritten", "as", "Tv2D", "p,q(X)", "=", "Xn", "i=1", "kDn", "xi,:", "kp", "+", "Xm", "j=1", "kDm", "x:,j", "kq", ",", "(4.8)", "where", "xi,:", "denotes", "the", "i-th", "row", "of", "X", ",", "and", "x:,j", "its", "j-th", "column.", "The", "corresponding", "Tv2D", "p,q", "-proximity", "problem", "is", "minX", "1", "2kX\u2212Yk2", "F", "+\u03bbTv2D", "p,q", "(X),", "(4.9)", "where", "we", "use", "the", "Frobenius", "norm", "kXkF", "=", "qP", "ij", "x2", "i,j", "=", "kvec(X)k2", ",", "where", "vec(X)", "is", "the", "vectorization", "of", "X.", "Using", "(4.8),", "problem", "(4.9)", "becomes", "minX", "1", "2kX\u2212Yk2", "F+\u03bb", " X", "i", "kDn", "xi,:kp", " +\u03bb", " X", "j", "kDmx:,j", "kq", " ,", "(4.10)", "23", "where", "the", "parentheses", "make", "explicit", "that", "Tv2D", "p,q", "is", "a", "combination", "of", "two", "regularizers:", "one", "acting", "over", "the", "rows", "and", "the", "other", "over", "the", "columns.", "Formulation", "(4.10)", "fits", "the", "model", "solvable", "by", "the", "strategies", "presented", "above,", "though", "with", "an", "important", "difference:", "each", "of", "the", "two", "regularizers", "that", "make", "up", "Tv2D", "p,q", "is", "itself", "composed", "of", "a", "sum", "of", "several", "(n", "or", "m)", "1D-TV", "regularizers.", "Moreover,", "each", "of", "the", "1D", "row", "(column)", "regularizers", "operates", "on", "a", "different", "row", "(columns),", "and", "can", "thus", "be", "solved", "independently.", "4.3", "Higher-dimensional", "TV", "Going", "even", "beyond", "Tv2D", "p,q", "is", "the", "general", "multidimensional", "TV", "(1.3),", "which", "we", "recall", "below.", "Let", "X", "be", "an", "order-m", "tensor", "in", "R", "Qm", "j=1", "nj", ",", "whose", "components", "are", "indexed", "as", "Xi1,i2,...,im", "(1", "\u2264", "ij", "\u2264", "nj", "for", "1\u2264j\u2264m);wedefineTVforXas", "Tv", "m", "p", "(X)", "def", "=", "m", "X", "k=1", "X", "{i1,...,im}\\ik", " nk", "\u22121", "X", "j=1", "|Xi1,...,ik\u22121", ",j+1,ik+1,...,im", "\u2212", "Xi1,...,ik\u22121,j,ik+1,...,im|", "pk", " 1/pk", ",", "(4.11)", "where", "p", "=", "[p1,", ".", ".", ".", ",", "pm]", "is", "a", "vector", "of", "scalars", "pk", "\u2265", "1.", "This", "corresponds", "to", "applying", "a", "1D-TV", "to", "each", "of", "the", "1D", "fibers", "of", "X", "along", "each", "of", "the", "dimensions.", "Introducing", "the", "multi-index", "i(k)", "=", "(i1", ",", ".", ".", ".", ",", "ik\u22121", ",", "ik+1,", ".", ".", ".", ",", "im),", "which", "iterates", "over", "every", "1-dimensional", "fiber", "of", "X", "along", "the", "k-th", "dimension,", "the", "regularizer", "(4.11)", "can", "be", "written", "more", "compactly", "as", "Tv", "m", "p(X)=", "Xm", "k=1", "X", "i(k)", "kDnk", "xi(k)kpk", ",", "(4.12)", "where", "xi(k)", "denotes", "a", "row", "of", "X", "along", "the", "k-th", "dimension,", "and", "Dnk", "is", "a", "differencing", "matrix", "of", "appropriate", "size", "for", "the", "1D-fibers", "along", "dimension", "k", "(of", "size", "nk", ").", "The", "corresponding", "m-dimensional-TV", "proximity", "problem", "is", "minX", "1", "2kX\u2212Yk2", "F+\u03bbTv", "m", "p", "(X),", "(4.13)", "where", "\u03bb", ">", "0", "is", "a", "penalty", "parameter,", "and", "the", "Frobenius", "norm", "for", "a", "tensor", "just", "denotes", "the", "ordinary", "sum-of-", "squares", "norm", "over", "the", "vectorization", "of", "such", "tensor.", "Problem", "(4.13)", "looks", "very", "challenging,", "but", "it", "enjoys", "decomposability", "as", "suggested", "by", "(4.12)", "and", "made", "more", "explicit", "by", "writing", "it", "as", "a", "sum", "of", "Tv1D", "terms", "minX", "1", "2kX\u2212Yk2", "F+", "Xm", "k=1", "X", "i(k)", "Tv1D", "pk", "xi(k)", " .", "(4.14)", "The", "proximity", "task", "(4.14)", "can", "be", "regarded", "as", "the", "sum", "of", "m", "proximity", "terms,", "each", "of", "which", "further", "decomposes", "into", "a", "number", "of", "inner", "Tv", "1D", "terms.", "These", "inner", "terms", "are", "trivial", "to", "address", "since,", "as", "in", "the", "2D-TV", "case,", "each", "of", "the", "Tv", "1D", "terms", "operates", "on", "different", "entries", "of", "X.", "Regarding", "the", "m", "major", "terms,", "we", "can", "handle", "them", "by", "applying", "any", "of", "the", "combiner", "strategies", "presented", "above", "for", "m", ">", "2,", "which", "ultimately", "yield", "the", "prox", "operator", "for", "Tv", "m", "p", "by", "just", "repeatedly", "calling", "Tv1D", "prox", "operators.", "Most", "importantly,", "both", "proximal", "stacking", "and", "the", "natural", "decomposition", "of", "the", "problem", "provide", "a", "vast", "potential", "for", "parallel", "multithreaded", "computing,", "which", "is", "valuable", "when", "dealing", "with", "such", "complex", "and", "high-dimensional", "data.", "5", "Experiments", "and", "Applications", "We", "will", "now", "demostrate", "the", "effectiveness", "of", "the", "various", "solvers", "covered", "in", "a", "wide", "array", "of", "experiments,", "as", "well", "as", "showing", "many", "of", "their", "practical", "applications.", "We", "will", "start", "by", "focusing", "on", "the", "Tv", "1D", "1", "methods,", "moving", "then", "to", "other", "1D-TV", "variants,", "and", "then", "to", "multidimensional", "TV.", "All", "the", "solvers", "implemented", "for", "this", "paper", "were", "coded", "in", "C++", "for", "efficiency.", "Our", "publicy", "available", "library", "proxTV", "includes", "all", "these", "implementations,", "plus", "bindings", "for", "easy", "usage", "in", "Matlab", "or", "Python:", "https://github.com/albarji/proxTV.", "Matrix", "operations", "have", "been", "implented", "by", "exploiting", "the", "LAPACK", "(F", "O", "R", "T", "R", "A", "N)", "library", "[3].", "24", "5.1", "Tv", "1D", "1", "experiments", "and", "Applications", "Since", "the", "most", "important", "components", "of", "the", "presented", "modular", "framework", "are", "the", "efficient", "Tv1D", "1", "prox", "operators,", "let", "us", "begin", "by", "highlighting", "their", "empirical", "performance.", "We", "will", "do", "so", "both", "on", "synthetic", "and", "natural", "images", "data.", "5.1.1", "Running", "time", "results", "for", "synthetic", "data", "We", "test", "the", "solvers", "under", "two", "scenarios", "of", "synthetic", "signals:", "I)", "Increasing", "input", "size", "ranging", "from", "n", "=", "101", "to", "n", "=", "107", ".", "A", "penalty", "\u03bb", "\u2208", "[0,", "50]", "is", "chosen", "at", "random", "for", "each", "run,", "and", "the", "data", "vector", "y", "with", "uniformly", "random", "entries", "yi", "\u2208", "[\u22122\u03bb,", "2\u03bb]", "(proportionally", "scaled", "to", "\u03bb).", "II)", "Varying", "penalty", "parameter", "\u03bb", "ranging", "from", "10\u22123", "(negligible", "regularization)", "to", "103", "(the", "TV", "term", "domi-", "nates);", "here", "n", "is", "set", "to", "1000", "and", "yi", "is", "randomly", "generated", "in", "the", "range", "[\u22122,", "2]", "(uniformly).", "Problem", "size", "102", "104", "106", "T", "i", "m", "e", "(", "s", ")", "10", "-4", "10", "-2", "100", "TV1", "increasing", "sizes", "Projected", "Newton", "Classic", "Taut-String", "Linearized", "Taut-String", "Hybrid", "Taut-String", "Condat", "Johnson", "SLEP", "Condat", "Taut-string", "Kolmogorov", "(a)", "Penalty", "\u03bb", "10", "-2", "100", "102", "T", "i", "m", "e", "(", "s", ")", "10", "-4", "10", "-3", "10", "-2", "TV1", "increasing", "penalties", "(b)", "Figure", "7:", "Running", "times", "(in", "secs)", "for", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tv", "1D", "1", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "We", "benchmark", "the", "performance", "of", "the", "following", "methods,", "including", "both", "our", "proposals", "and", "state", "of", "the", "art", "methods", "found", "in", "the", "literature:", "\u2022", "Our", "proposed", "Projected", "Newton", "method", "(Appendix", "E).", "\u2022", "Our", "efficient", "implementation", "of", "the", "classic", "taut", "string", "method.", "\u2022", "Another", "implementation", "of", "the", "classic", "taut", "string", "method", "by", "Condat", "[28].", "\u2022", "An", "implementation", "of", "the", "linearized", "taut", "string", "method.", "\u2022", "Our", "proposed", "hybrid", "taut", "string", "approach.", "\u2022", "The", "FLSA", "function", "(C", "implementation)", "of", "the", "SLEP", "library", "of", "Liu", "et", "al.", "[59]", "for", "Tv", "1D", "1", "-proximity", "[60].", "\u2022", "The", "state-of-the-art", "method", "of", "Condat", "[28],", "which", "we", "have", "seen", "to", "be", "equivalent", "to", "a", "linearized", "taut-string", "method.", "\u2022", "The", "dynamic", "programming", "method", "of", "Johnson", "[45],", "which", "guarantees", "linear", "running", "time.", "\u2022", "The", "message", "passing", "method", "of", "Kolmogorov", "et", "al", "[51],", "which", "allows", "generalization", "for", "computing", "a", "Total", "Variation", "regularizer", "on", "a", "tree.", "25", "Another", "implementation", "of", "the", "classic", "taut", "string", "method,", "found", "in", "the", "literature,", "has", "been", "added", "to", "the", "benchmark", "to", "test", "whether", "the", "implementation", "we", "have", "proposed", "is", "on", "par", "with", "the", "state", "of", "the", "art.", "We", "would", "like", "to", "note", "the", "surprising", "lack", "of", "widely", "available", "implementations", "of", "this", "method:", "the", "only", "working", "and", "efficient", "code", "we", "could", "find", "was", "part", "of", "the", "same", "paper", "where", "Condat\u2019s", "method", "was", "proposed.", "For", "Projected", "Newton", "and", "SLEP", "a", "duality", "gap", "of", "10\u22125", "is", "used", "as", "the", "stopping", "criterion.", "For", "the", "hybrid", "taut-string", "method", "the", "switch", "parameter", "is", "set", "as", "S", "=", "1.05", ".", "The", "rest", "of", "algorithms", "do", "not", "have", "parameters.", "Timing", "results", "are", "presented", "in", "Figure", "7", "for", "both", "experimental", "scenarios.", "The", "following", "interesting", "facts", "are", "drawn", "from", "these", "results", "\u2022", "Direct", "methods", "(Taut", "string", "methods,", "Condat,", "Johnson,", "Kolmogorov)", "prove", "to", "be", "much", "faster", "than", "iterative", "methods", "(Projected", "Newton,", "SLEP).", "\u2022", "Although", "Condat\u2019s", "(and", "hence", "linearized", "taut", "string)", "method,", "has", "a", "theoretical", "worst-case", "performance", "of", "O(n2),", "the", "practical", "performance", "seems", "to", "follow", "an", "O(n)", "behavior,", "at", "least", "for", "these", "synthetic", "signals.", "\u2022", "Even", "if", "Johnson", "and", "Kolmogorov", "methods", "have", "a", "guaranteed", "running", "time", "of", "O(n),", "they", "turn", "out", "to", "be", "slower", "than", "the", "linearized", "taut", "string", "and", "Condat\u2019s", "methods.", "This", "is", "in", "line", "with", "our", "previous", "observations", "of", "the", "cache-friendly", "properties", "of", "in-memory", "methods;", "in", "contrast", "Johnson\u2019s", "method", "requires", "an", "extra", "\u223c", "8n", "memory", "storage.", "Kolmogorov\u2019s", "method", "has", "less", "memory", "requirements", "but", "nevetheless", "shows", "similar", "behavior.", "\u2022", "The", "same", "performance", "observation", "applies", "to", "the", "classic", "taut", "string", "method.", "It", "is", "also", "noticeable", "that", "our", "implementation", "of", "this", "method", "turns", "out", "to", "be", "faster", "than", "previously", "available", "implementations", "(Condat\u2019s", "Taut-string),", "even", "becoming", "slightly", "faster", "than", "the", "state", "of", "the", "art", "Johnson", "and", "Kolmogorov", "methods.", "This", "result", "is", "surprising,", "and", "shows", "that", "the", "full", "potential", "of", "the", "classic", "taut-string", "method", "has", "been", "largely", "unexploited", "by", "the", "research", "community,", "or", "at", "least", "that", "proper", "efficient", "implementations", "of", "this", "method", "have", "not", "been", "made", "readily", "available", "so", "far.", "5.1.2", "Worst", "case", "scenario", "The", "point", "about", "comparing", "O(n)", "and", "O(n2", ")", "algorithms", "deserves", "more", "attention.", "As", "an", "illustrative", "experiment", "we", "have", "generated", "a", "signal", "following", "the", "worst", "case", "description", "in", "Condat", "[28],", "and", "tested", "again", "the", "methods", "above", "on", "it,", "for", "increasing", "signal", "lengths.", "Figure", "8", "plots", "the", "results.", "Condat\u2019s", "method", "and", "consequently", "the", "linearized", "taut", "string", "method", "shows", "much", "worse", "performance", "than", "the", "rest", "of", "the", "direct", "methods.", "It", "is", "also", "remarkable", "how", "the", "hybrid", "method", "manages", "to", "avoid", "quadratic", "runtimes", "in", "this", "case.", "5.1.3", "Running", "times", "on", "natural", "images", "In", "the", "light", "of", "the", "previous", "results", "the", "following", "question", "arises:", "in", "practical", "settings,", "are", "the", "problems", "to", "be", "solved", "closer", "to", "the", "worst", "or", "the", "average", "runtime", "scenario?", "This", "fact", "will", "determine", "whether", "the", "guaranteed", "linear", "time", "or", "the", "more", "risky", "quadratic", "methods", "are", "more", "apt", "for", "practical", "use.", "To", "test", "this", "we", "devise", "the", "following", "experiment:", "we", "take", "a", "large", "benchmark", "of", "natural", "images", "and", "run", "each", "solver", "over", "all", "the", "rows", "and", "columns", "of", "all", "the", "images", "in", "the", "set,", "counting", "total", "running", "times,", "for", "different", "regularization", "values.", "The", "benchmark", "is", "made", "from", "images", "obtained", "from", "the", "datasets", "detailed", "in", "Table", "2.", "We", "run", "this", "benchmark", "for", "the", "methods", "showing", "better", "performance", "in", "the", "experiments", "above:", "our", "implementation", "of", "the", "classic", "taut-string", "method,", "Condat\u2019s", "method", "(\u2261", "linearized", "taut-string", "method),", "our", "proposed", "Hybrid", "taut-string", "method,", "Johnson\u2019s", "method", "and", "Kolmogorov", "et", "al\u2019s", "method.", "Figure", "9", "shows", "runtime", "results", "for", "different", "penalty", "values", "over", "the", "whole", "INRIA", "holidays", "dataset", "[44],", "while", "Figure", "10", "shows", "similar", "results", "for", "the", "whole", "Large", "Scale", "Visual", "Recognition", "Challenge", "2010", "validation", "dataset", "[77].", "The", "following", "facts", "of", "interest", "can", "be", "observed:", "\u2022", "Condat\u2019s", "method", "(linearized", "taut-string)", "shows", "top", "performance", "for", "low", "penalty", "values,", "but", "bad", "scaling", "when", "moving", "to", "higher", "penalties.", "This", "can", "be", "explained", "using", "the", "geometric", "intuition", "developed", "above:", "26", "Figure", "8:", "Running", "times", "(in", "secs)", "for", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tv", "1D", "1", "-proximity", "in", "the", "worst-case", "scenario", "for", "Condat\u2019s", "method,", "for", "increasing", "input", "sizes.", "Both", "axes", "are", "on", "a", "log-scale.", "Table", "2:", "Detail", "of", "image", "datasets", "used", "for", "large-scale", "Tv", "1D", "1", "experiments.", "Dataset", "Images", "Average", "image", "size", "INRIA", "holidays", "[44]", "812", "1817\u00d72233\u00d73px", "LSVRC", "2010", "val", "set", "[77]", "50000", "391", "\u00d7", "450", "\u00d7", "3", "px", "for", "large", "penalty", "values", "the", "width", "of", "the", "tube", "is", "very", "large,", "and", "thus", "the", "taut-string", "will", "be", "composed", "of", "very", "long", "segments.", "This", "is", "troublesome", "for", "a", "linearized", "taut-string", "method,", "as", "each", "backtrack", "will", "require", "recomputing", "a", "large", "number", "of", "steps.", "On", "the", "contrary", "for", "smaller", "penalties", "the", "tube", "will", "be", "narrow,", "and", "the", "taut-string", "composed", "of", "many", "small", "segments,", "thus", "resulting", "in", "very", "cheap", "backtracking", "costs.", "\u2022", "The", "performance", "of", "Classic", "taut-string,", "Johnson", "and", "Kolmogorov", "becomes", "slightly", "worse", "for", "large", "penalties,", "but", "suffers", "significantly", "less", "than", "the", "linearized", "taut-string.", "Surprisingly,", "the", "best", "performing", "approach", "tends", "to", "be", "the", "classic", "taut-string", "method.", "\u2022", "The", "proposed", "hybrid", "strategy", "closely", "follows", "the", "performance", "of", "Condat\u2019s", "method", "for", "the", "low", "penalty", "regime,", "while", "adapting", "to", "a", "behaviour", "akin", "to", "Kolmogorov", "for", "large", "penalties,", "thus", "resulting", "in", "very", "good", "performances", "over", "the", "whole", "regularization", "spectrum.", "27", "Figure", "9:", "Running", "times", "(in", "secs)", "for", "the", "top", "performing", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tv", "1D", "1-", "proximity", "over", "the", "whole", "INRIA", "Holidays", "dataset,", "for", "increasing", "penalties.", "5.1.4", "Running", "time", "results", "for", "weighted", "TV-L1", "An", "advantage", "of", "the", "solvers", "proposed", "in", "this", "paper", "is", "their", "flexibility", "to", "easily", "deal", "with", "the", "more", "difficult,", "weighted", "version", "of", "the", "TV-L1", "proximity", "problem.", "To", "illustrate", "this,", "Figure", "11", "shows", "the", "running", "times", "of", "the", "Projected", "Newton", "and", "(linearized)", "Taut", "String", "methods", "when", "solving", "both", "the", "standard", "and", "weighted", "TV-L1", "prox", "operators.", "Since", "for", "this", "set", "of", "experiments", "a", "whole", "vector", "of", "weights", "w", "is", "needed,", "we", "have", "adjusted", "the", "experimental", "scenarios", "as", "follows:", "I)", "n", "is", "generated", "as", "in", "the", "general", "setting,", "penalties", "w", "\u2208", "[0,", "100]", "are", "chosen", "at", "random", "for", "each", "run,", "and", "the", "data", "vector", "y", "with", "uniformly", "random", "entries", "yi", "\u2208", "[\u22122\u03bb,", "2\u03bb],", "with", "\u03bb", "the", "mean", "of", "w,", "using", "also", "this", "\u03bb", "choice", "for", "the", "uniform", "(unweighted)", "case.", "II)", "\u03bb", "and", "n", "are", "generated", "as", "in", "the", "general", "setting,", "and", "the", "weights", "vector", "w", "is", "drawn", "randomly", "from", "the", "uniform", "distribution", "wi", "\u2208", "[0.5\u03bb,", "1.5\u03bb].", "As", "can", "be", "readily", "observed,", "performance", "for", "both", "versions", "of", "the", "problem", "is", "almost", "identical,", "even", "if", "the", "weighted", "problem", "is", "conceptually", "harder.", "Conversely,", "adapting", "the", "other", "reviewed", "algorithms", "to", "address", "this", "problem", "while", "keeping", "up", "with", "performance", "is", "not", "a", "straightforward", "task.", "We", "would", "also", "like", "to", "point", "out", "that", "in", "the", "paper", "[53]", "a", "practical", "application", "of", "this", "method", "for", "energy", "minimization", "in", "computer", "vision", "is", "presented,", "where", "exactly", "the", "code", "behind", "this", "paper", "has", "been", "put", "to", "use.", "28", "Figure", "10:", "Running", "times", "(in", "secs)", "for", "the", "top", "performing", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tv", "1D", "1-", "proximity", "over", "the", "whole", "Large", "Scale", "Visual", "Recognition", "Challenge", "2010", "validation", "dataset,", "for", "increasing", "penalties.", "5.2", "Experiments", "for", "other", "1D-TV", "variants", "5.2.1", "Running", "time", "results", "for", "TV-L2", "Next", "we", "show", "results", "for", "Tv", "1D", "2", "proximity.", "To", "our", "knowledge,", "this", "version", "of", "TV", "has", "not", "been", "explicitly", "treated", "before,", "so", "there", "do", "not", "exist", "highly-tuned", "solvers", "for", "it.", "Thus,", "we", "show", "running", "time", "results", "only", "for", "the", "MSN", "and", "GP", "methods.", "We", "use", "a", "duality", "gap", "of", "10\u22125", "as", "the", "stopping", "criterion;", "we", "also", "add", "an", "extra", "boundary", "check", "for", "MSN", "with", "tolerance", "10\u22126", "to", "avoid", "early", "stopping", "due", "to", "potentially", "infeasible", "intermediate", "iterates.", "Figure", "12", "shows", "results", "for", "the", "two", "experimental", "scenarios", "under", "test.", "The", "results", "indicate", "that", "the", "performance", "of", "MSN", "and", "GP", "differs", "noticeably", "in", "the", "two", "experimental", "scenarios.", "While", "the", "results", "for", "the", "first", "scenario", "(Figure", "12(a))", "might", "suggest", "that", "GP", "converges", "faster", "than", "MSN", "for", "large", "inputs,", "it", "actually", "does", "so", "depending", "on", "the", "size", "of", "\u03bb", "relative", "to", "kyk2", ".", "Indeed,", "the", "second", "scenario", "(Figure", "12(b))", "shows", "that", "although", "for", "small", "values", "of", "\u03bb,", "GP", "runs", "faster", "than", "MSN,", "as", "\u03bb", "increases,", "GP\u2019s", "performance", "worsens", "dramatically,", "so", "much", "that", "for", "moderately", "large", "\u03bb,", "it", "is", "unable", "to", "find", "an", "acceptable", "solution", "even", "after", "10,000", "iterations", "(an", "upper", "limit", "imposed", "in", "our", "implementation).", "Conversely,", "MSN", "finds", "a", "solution", "satisfying", "the", "stopping", "criterion", "under", "every", "situation,", "thus", "showing", "a", "more", "robust", "behavior.", "These", "results", "suggest", "that", "it", "is", "preferable", "to", "employ", "a", "hybrid", "approach", "that", "combines", "the", "strengths", "of", "MSN", "and", "GP.", "Such", "a", "hybrid", "approach", "is", "guided", "using", "the", "following", "(empirically", "determined)", "rule", "of", "thumb:", "if", "\u03bb", "<", "kyk2", "use", "GP,", "otherwise", "use", "MSN.", "Further,", "as", "a", "safeguard,", "if", "GP", "is", "invoked", "but", "fails", "to", "find", "a", "solution", "within", "50", "iterations,", "the", "hybrid", "should", "switch", "to", "MSN.", "This", "combination", "guarantees", "rapid", "convergence", "in", "29", "10", "2", "10", "4", "10", "6", "10", "\u22124", "10", "\u22122", "10", "0", "10", "2", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TV1", "increasing", "sizes", "Projected", "Newton", "(Weighted)", "Projected", "Newton", "(Uniform)", "Taut", "String", "(Weighted)", "Taut", "String", "(Uniform)", "(a)", "10", "\u22122", "10", "0", "10", "2", "10", "\u22124", "10", "\u22123", "10", "\u22122", "10", "\u22121", "Penalty", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TV1", "increasing", "penalties", "Projected", "Newton", "(Weighted)", "Projected", "Newton", "(Uniform)", "Taut", "String", "(Weighted)", "Taut", "String", "(Uniform)", "(b)", "Figure", "11:", "Running", "times", "(in", "secs)", "for", "Projected", "Newton", "and", "Taut", "String", "solvers", "for", "weighted", "and", "uniform", "Tv1D", "1", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "10", "2", "10", "4", "10", "6", "10", "\u22124", "10", "\u22123", "10", "\u22122", "10", "\u22121", "10", "0", "10", "1", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TV2", "increasing", "sizes", "MSN", "GP", "MSN+GP", "(a)", "10", "\u22122", "10", "0", "10", "2", "10", "\u22124", "10", "\u22123", "10", "\u22122", "10", "\u22121", "10", "0", "Penalty", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TV2", "increasing", "penalties", "MSN", "GP", "MSN+GP", "(b)", "Figure", "12:", "Running", "times", "(in", "secs)", "for", "MSN,", "GP", "and", "a", "hybrid", "MSN+GP", "approach", "for", "Tv", "1D", "2", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "practice.", "Results", "for", "this", "hybrid", "approach", "are", "also", "included", "in", "the", "plots", "in", "Figure", "12,", "and", "show", "how", "it", "successfully", "mimics", "the", "behavior", "of", "the", "better", "algorithm", "amongst", "MSN", "and", "GP.", "5.2.2", "Running", "time", "results", "for", "TV-Lp", "Now", "we", "show", "results", "for", "Tv", "1D", "p", "proximity.", "Again,", "to", "our", "knowledge", "efficient", "solvers", "for", "this", "version", "of", "TV", "are", "not", "available;", "still", "proposals", "for", "solving", "the", "`q", "-ball", "projection", "problem", "do", "exist,", "such", "as", "the", "epp", "function", "in", "SLEP", "library", "[59],", "based", "on", "a", "zero", "finding", "approach.", "Consequently,", "we", "present", "here", "a", "comparison", "between", "this", "reference", "projection", "subroutine", "and", "our", "PN\u2013based", "projection", "when", "embedded", "in", "our", "proposed", "Gradient", "Projection", "solver", "of", "\u00a73.2", ".", "The", "alternative", "proposal", "given", "by", "the", "Frank\u2013Wolfe", "algorithm", "of", "\u00a73.2.2", "is", "also", "present", "in", "the", "comparison.", "We", "use", "a", "duality", "gap", "of", "10\u22125", "as", "stopping", "criterion", "both", "for", "GP", "and", "FW.", "Figure", "13", "shows", "results", "for", "the", "two", "experimental", "scenarios", "under", "test,", "for", "p", "values", "of", "1.5,", "1.9", "and", "3.", "30", "101", "102", "103", "104", "105", "106", "10\u22124", "10\u22122", "10", "0", "102", "10", "4", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "sizes", "p=1.5", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(a)", "101", "102", "103", "104", "105", "106", "10\u22124", "10\u22122", "10", "0", "102", "10", "4", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "sizes", "p=1", ".9", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(b)", "101", "102", "103", "104", "105", "106", "10\u22124", "10\u22122", "10", "0", "102", "10", "4", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "sizes", "p=3", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(c)", "Figure", "13:", "Running", "times", "(in", "secs)", "for", "GP", "with", "PN", "projection,", "GP", "with", "SLEP\u2019s", "epp", "projection,", "FW", "and", "a", "hybrid", "GP+FW", "algorithm,", "for", "Tv", "1D", "p", "-proximity", "with", "increasing", "input", "sizes", "and", "three", "different", "choices", "of", "p.", "Both", "axes", "are", "on", "a", "log-scale.", "10\u22124", "10\u22122", "100", "102", "104", "10\u221220", "10\u221215", "10\u221210", "10\u22125", "100", "\u03bb", "D", "u", "a", "l", "g", "a", "p", "TVp", "increasing", "penalties", "p=1.5", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(a)", "10\u22124", "10\u22122", "100", "102", "104", "10\u221220", "10\u221215", "10\u221210", "10\u22125", "100", "105", "\u03bb", "D", "u", "a", "l", "g", "a", "p", "TVp", "increasing", "penalties", "p=1.9", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(b)", "10\u22124", "10\u22122", "100", "102", "104", "10\u221220", "10\u221215", "10\u221210", "10\u22125", "100", "\u03bb", "D", "u", "a", "l", "g", "a", "p", "TVp", "increasing", "penalties", "p=3", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(c)", "10\u22124", "10\u22122", "100", "102", "104", "10\u22124", "10\u22122", "10", "0", "102", "104", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "penalties", "p=1", ".5", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(d)", "10\u22124", "10\u22122", "100", "102", "104", "10\u22124", "10\u22122", "10", "0", "102", "104", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "penalties", "p=1", ".9", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(e)", "10\u22124", "10\u22122", "100", "102", "104", "10\u22124", "10\u22122", "10", "0", "102", "104", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TVp", "increasing", "penalties", "p=3", "GP\u2212PN", "GP\u2212SLEP", "FW", "GP+FW", "(f)", "Figure", "14:", "Attained", "duality", "gaps", "(a-c)", "and", "running", "times", "(d-f,", "in", "secs)", "for", "GP", "with", "PN", "projection,", "GP", "with", "SLEP\u2019s", "epp", "projection,", "FW", "and", "a", "hybrid", "GP+FW", "algorithm,", "for", "Tv", "1D", "p", "-proximity", "with", "increasing", "penalties", "and", "three", "different", "choices", "of", "p.", "Both", "axes", "are", "on", "a", "log-scale.", "A", "number", "of", "interesting", "conclusions", "can", "be", "drawn", "from", "the", "results.", "First,", "our", "Projected", "Newton", "`q", "-ball", "subroutine", "is", "far", "more", "efficient", "than", "epp", "when", "in", "the", "context", "of", "the", "GP", "solver.", "Two", "factors", "seem", "to", "be", "the", "cause", "of", "this:", "in", "the", "first", "place", "our", "Projected", "Newton", "approach", "proves", "to", "be", "faster", "than", "the", "zero", "finding", "method", "used", "by", "epp.", "Secondly,", "in", "order", "for", "the", "GP", "solver", "to", "find", "a", "solution", "within", "the", "desired", "duality", "gap,", "the", "projection", "subroutine", "must", "provide", "very", "accurate", "results", "(about", "10\u221212", "in", "terms", "of", "duality", "gap).", "Given", "its", "Newton", "nature,", "our", "`q", "-ball", "subroutine", "scales", "better", "in", "term", "of", "running", "times", "as", "a", "factor", "of", "the", "desired", "accuracy,", "which", "explains", "he", "observed", "differences", "in", "performance.", "31", "It", "is", "also", "of", "relevance", "noting", "that", "Frank\u2013Wolfe", "is", "significantly", "faster", "than", "Projected", "Newton.", "This", "should", "discourage", "the", "use", "of", "Projected", "Newton,", "but", "we", "find", "it", "to", "be", "extremely", "useful", "in", "the", "range", "of", "\u03bb", "penalties", "where", "\u03bb", "is", "large,", "but", "not", "enough", "to", "render", "the", "problem", "trivial", "(w", "=", "0", "solution).", "In", "this", "range", "the", "two", "variants", "of", "PN", "and", "also", "FW", "are", "unable", "to", "find", "a", "solution", "within", "the", "desired", "duality", "gap", "(10\u22125),", "getting", "stuck", "at", "suboptimal", "solutions.", "We", "solve", "this", "issue", "by", "means", "of", "a", "hybrid", "GP+FW", "algorithm,", "in", "which", "updates", "from", "both", "methods", "are", "interleaved", "at", "a", "ratio", "of", "10", "FW", "updates", "per", "1", "GP", "update,", "as", "FW", "updates", "are", "faster.", "As", "both", "algorithms", "guarantee", "improvement", "in", "each", "iteration", "but", "follow", "different", "procedures", "for", "doing", "so,", "they", "complement", "each", "other", "nicely,", "resulting", "a", "superior", "method", "attaining", "the", "objective", "duality", "gap", "and", "performing", "faster", "than", "GP.", "5.2.3", "Running", "time", "results", "for", "TV-L\u221e", "For", "completeness", "we", "also", "include", "results", "for", "our", "Tv", "1D", "\u221e", "solver", "based", "on", "GP", "+", "a", "standard", "`1", "-projection", "subroutine.", "Figure", "15", "presents", "running", "times", "for", "the", "two", "experimental", "scenarios", "under", "test.", "Since", "`1", "-projection", "is", "an", "easier", "problem", "than", "the", "general", "`q", "-projection", "the", "resultant", "algorithm", "converges", "faster", "to", "the", "solution", "than", "the", "general", "GP", "Tv1D", "p", "prox", "solver,", "as", "expected.", "102", "104", "106", "10", "\u22124", "10", "\u22123", "10\u22122", "10\u22121", "10", "0", "10", "1", "102", "Problem", "size", "T", "i", "m", "e", "(", "s", ")", "TV\u221e", "increasing", "sizes", "GP", "(a)", "10", "\u22122", "10", "0", "10", "2", "10", "\u22123", "10\u22122", "10\u22121", "Penalty", "\u03bb", "T", "i", "m", "e", "(", "s", ")", "TV\u221e", "increasing", "penalties", "GP", "(b)", "Figure", "15:", "Running", "times", "(in", "secs)", "for", "GP", "for", "Tv", "1D", "\u221e", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "5.2.4", "Application:", "Proximal", "optimization", "for", "Fused-Lasso", "We", "now", "present", "a", "key", "application", "that", "benefits", "from", "our", "TV", "prox", "operators:", "Fused-Lasso", "(FL)", "[86],", "a", "model", "that", "takes", "the", "form", "min", "x", "1", "2kAx\u2212yk2", "2", "+", "\u03bb1kxk1", "+", "\u03bb2Tv", "1D", "1", "(x).", "(5.1)", "The", "`1", "-norm", "in", "(5.1)", "forces", "many", "xi", "to", "be", "zero,", "while", "Tv", "1D", "1", "favors", "nonzero", "components", "to", "appear", "in", "blocks", "of", "equal", "values", "xi\u22121", "=", "xi", "=", "xi+1", "=", ".", ".", "..", "The", "FL", "model", "has", "been", "successfully", "applied", "in", "several", "bioinformatics", "applications", "[34,", "72,", "85],", "as", "it", "encodes", "prior", "knowledge", "about", "consecutive", "elements", "in", "microarrays", "becoming", "active", "at", "once.", "Following", "the", "ideas", "presented", "in", "Sec.", "4,", "since", "the", "FL", "model", "uses", "two", "regularizers,", "we", "can", "use", "Proximal", "Dykstra", "as", "the", "combiner", "to", "handle", "the", "prox", "operator.", "To", "illustrate", "the", "benefits", "of", "this", "framework", "in", "terms", "of", "reusability,", "we", "apply", "it", "to", "several", "variants", "of", "FL.", "\u2022", "Fused-Lasso", "(FL):", "Least-squares", "loss", "+`1", "+", "Tv", "1D", "1", "as", "in", "(5.1)", "\u2022", "`p-Variable", "Fusion", "(VF):", "Least-squares", "loss", "+`1", "+", "Tv", "1D", "p", ".", "Though", "Variable", "Fusion", "was", "already", "studied", "by", "Land", "and", "Friedman", "[54],", "their", "approach", "proposed", "an", "`", "p", "p-like", "regularizer", "in", "the", "sense", "that", "32", "Fused", "Lasso", "Soft-th", "PN", "solver", "FISTA", "Variable", "Fusion", "Soft-th", "MSN", "solver", "FISTA", "PD", "Logistic", "Fused", "Lasso", "Soft-th", "PN", "solver", "FISTA", "Log.", "Variable", "Fusion", "Soft-th", "MSN", "solver", "FISTA", "PD", "Figure", "16:", "Fused-Lasso", "models", "addressed", "by", "proximal", "splitting.", "r(x)", "=", "Pn\u22121", "i=1", "|xi+1", "\u2212", "xi|p", "is", "used", "instead", "of", "the", "TV", "regularizer", "Tv", "1D", "p(x)=", " Pn\u22121", "i=1", "|xi+1", "\u2212", "xi|p 1/p", ".", "Using", "Tvp", "leads", "to", "a", "more", "conservative", "penalty", "that", "does", "not", "oversmooth", "the", "estimates.", "This", "FL", "variant", "seems", "to", "be", "new.", "\u2022", "Logistic-fused", "lasso", "(LFL):", "Logistic-loss", "+`1", "+", "Tv", "1D", "1", ",", "where", "the", "loss", "takes", "the", "form", "`(x,", "c)", "=", "P", "i", "log", " 1", "+", "e\u2212yi(a", "T", "i", "x+c)", " ,", "and", "can", "be", "used", "in", "a", "FL", "formulation", "to", "obtain", "models", "more", "appropri-", "ate", "for", "classification", "on", "a", "dataset", "{(ai,", "yi)}", "[50].", "\u2022", "Logistic", "+", "`p-fusion", "(LVF):", "Logistic", "loss", "+`1", "+", "Tv", "1D", "p.", "To", "solve", "these", "variants", "of", "FL,", "all", "that", "remains", "is", "to", "compute", "the", "gradients", "of", "the", "loss", "functions,", "but", "this", "task", "is", "trivial.", "Each", "of", "these", "four", "models", "can", "be", "then", "solved", "easily", "by", "invoking", "any", "proximal", "splitting", "method", "by", "appropriately", "plugging", "in", "gradient", "and", "prox", "operators.", "Incidentally,", "the", "SLEP", "library", "[60]", "includes", "an", "implementation", "of", "FISTA", "[13]", "carefully", "tuned", "for", "Fused", "Lasso,", "which", "we", "base", "our", "experiments", "on.", "Figure", "16", "shows", "a", "schematic", "of", "the", "algorithmic", "modules", "for", "solving", "each", "FL", "model.", "Remark:", "A", "further", "algorithmic", "improvement", "can", "be", "obtained", "by", "realizing", "that", "for", "r(x)", "=", "\u03bb1kxk1", "+", "\u03bb2Tv", "1D", "1", "(x)", "the", "prox", "operator", "proxr", "\u2261", "prox\u03bb1k\u00b7k1", "\u25e6", "prox\u03bb2Tv1D", "1", "(\u00b7)", ".", "Such", "a", "decomposition", "does", "not", "usually", "hold,", "but", "it", "can", "be", "shown", "to", "hold", "for", "this", "particular", "case", "[73,", "86,", "96].", "Therefore,", "for", "FL", "and", "LFL", "we", "can", "compute", "the", "proximal", "operator", "for", "the", "combined", "regularizer", "r", "directly,", "thus", "removing", "the", "need", "for", "a", "combiner", "algorithm.", "This", "is", "also", "shown", "in", "Figure", "16.", "5.2.5", "Fused-Lasso", "experiments:", "simulation", "The", "standard", "FL", "model", "has", "been", "well-studied", "in", "the", "literature,", "so", "a", "number", "of", "practical", "algorithms", "addressing", "it", "have", "already", "been", "proposed.", "The", "aforementioned", "Fused-Lasso", "algorithm", "in", "the", "SLEP", "library", "can", "be", "regarded", "as", "the", "state", "of", "the", "art,", "making", "extensive", "use", "of", "an", "efficient", "proximity", "subroutine", "(FLSA).", "Our", "experiments", "on", "Tv", "1D", "1", "-proximity", "(\u00a75.1)", "have", "already", "shown", "superiority", "of", "our", "prox", "solvers", "over", "FLSA;", "what", "remains", "to", "be", "checked", "is", "whether", "this", "benefit", "has", "a", "significant", "impact", "on", "the", "overall", "FL", "solver.", "To", "do", "so,", "we", "compare", "running", "times", "with", "synthetic", "data.", "We", "generate", "random", "matrices", "A", "\u2208", "Rn\u00d7m", "with", "i.i", ".d.", "entries", "drawn", "from", "a", "zero", "mean,", "unit", "variance", "gaussian.", "We", "set", "the", "penalties", "to", "\u03bb1", "=", "\u03bb2", "=", "10.", "We", "select", "the", "vector", "of", "responses", "y", "using", "the", "formula", "y", "=", "sgn(Axt", "+", "v),", "where", "xt", ",", "and", "v", "are", "random", "vectors", "whose", "entries", "have", "variances", "1", "and", "0.01,", "respectively.", "33", "The", "numerical", "results", "are", "summarized", "in", "Figure", "17,", "which", "compares", "out", "of", "the", "box", "SLEP", "(version", "4.0)", "[59]", "against", "the", "very", "same", "algorithm", "employing", "our", "fast", "taut\u2013string", "Tv1D", "1", "solver", "instead", "of", "the", "default", "FLSA", "subroutine", "of", "SLEP.", "Comparison", "is", "done", "by", "showing", "the", "relative", "distance", "to", "the", "problem\u2019s", "optimum", "versus", "time.", "The", "optimal", "values", "in", "each", "setting", "were", "estimated", "by", "running", "both", "algorithms", "for", "a", "very", "large", "number", "of", "iterations.", "101", "102", "10\u22123", "10", "\u22122", "10", "\u22121", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "50", "x", "5000000", "SLEP", "SLEP+Taut\u2212String", "100", "101", "102", "10", "\u22123", "10", "\u22122", "10\u22121", "10", "0", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "100", "x", "2000000", "SLEP", "SLEP+Taut\u2212String", "100", "101", "102", "10", "\u22123", "10\u22122", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "200", "x", "1000000", "SLEP", "SLEP+Taut\u2212String", "100", "101", "102", "10\u22123", "10\u22122", "10", "\u22121", "100", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "500", "x", "500000", "SLEP", "SLEP+Taut\u2212String", "100", "101", "102", "10", "\u22123", "10\u22122", "10", "\u22121", "100", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "1000", "x", "200000", "SLEP", "SLEP+Taut\u2212String", "100", "101", "102", "10", "\u22123", "10\u22122", "10\u22121", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Fused", "Lasso", "matrix", "2000", "x", "100000", "SLEP", "SLEP+Taut\u2212String", "Figure", "17:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "Fused", "Lasso", "optimizers", "under", "comparison,", "for", "the", "different", "layouts", "of", "synthetic", "matrices.", "The", "plots", "show", "a", "clear", "trend:", "when", "the", "input", "matrices", "feature", "a", "very", "large", "column", "dimension", "the", "use", "of", "our", "taut-string", "Tv1D", "1", "solver", "turns", "into", "speedups", "in", "optimization", "times,", "which", "however", "become", "negligible", "for", "matrices", "with", "a", "more", "balanced", "rows/columns", "ratio.", "This", "result", "is", "reasonable,", "as", "the", "vector", "x", "under", "optimization", "has", "size", "equal", "to", "the", "number", "of", "columns", "of", "the", "data", "matrix", "A.", "If", "A", "has", "a", "large", "number", "of", "columns", "the", "cost", "of", "solving", "Tv1D", "1", "is", "significant,", "and", "thus", "any", "improvement", "in", "this", "step", "has", "a", "noticeable", "impact", "on", "the", "overall", "algorithm.", "Conversely,", "when", "the", "number", "of", "rows", "in", "A", "is", "large", "the", "cost", "of", "computing", "the", "gradient", "of", "the", "loss", "function", "(\u2207", "1", "2kAx\u2212yk2", "2", "=", "AT", "(Ax", "\u2212", "y))", "dominates,", "getting", "limited", "benefits", "from", "such", "improvements", "in", "prox", "computations.", "Therefore,", "it", "is", "for", "data", "with", "a", "very", "large", "number", "of", "features", "where", "our", "proposed", "method", "can", "provide", "a", "useful", "speedup.", "5.2.6", "Fused-Lasso", "Experiments:", "Microarray", "classification", "Now", "we", "report", "results", "of", "applying", "the", "four", "FL", "models", "on", "a", "series", "of", "problems", "from", "bioinformatics.", "We", "test", "the", "FL", "models", "on", "binary", "classification", "tasks", "for", "the", "following", "real", "microarray", "datasets:", "ArrayCGH", "[83],", "Leukemias", "[37],", "Colon", "[88],", "Ovarian", "[75]", "and", "Rat", "[40].", "Each", "dataset", "was", "split", "into", "three", "equal", "parts", "(ensuring", "similar", "proportion", "of", "classes", "in", "every", "split)", "for", "training,", "validation", "and", "test.", "The", "penalty", "parameters", "were", "found", "by", "exhaustive", "grid", "search", "in", "the", "range", "\u03bb1,", "\u03bb2", "\u2208", "[10\u22124", ",", "102]", "to", "maximize", "classification", "accuracy", "on", "the", "validation", "splits.", "34", "Table", "3:", "Classification", "accuracies", "for", "the", "presented", "Fused\u2013Lasso", "models", "on", "microarray", "data.", "For", "the", "Variable", "Fusion", "models", "an", "`2", "version", "of", "TV", "was", "employed.", "Dataset", "FL", "VF-`2", "LFL", "LVF-`2", "ArrayCGH", "73.6%", "73.6%", "84.2%", "73.6%", "Leukemias", "92.0%", "88.0%", "92.0%", "88.0%", "Colon", "77.2%", "77.2%", "77.2%", "77.2%", "Ovarian", "88.8%", "83.3%", "83", ".3%", "83.3%", "Rat", "68.8%", "65.5%", "72.1%", "72.1%", "Table", "3", "shows", "test", "accuracies.", "In", "general,", "as", "expected", "the", "logistic-loss", "based", "FL", "models", "yield", "better", "classification", "accuracies", "than", "those", "based", "on", "least-squares,", "as", "such", "loss", "function", "tends", "to", "be", "more", "appropriate", "for", "classification", "problems.", "However", "the", "Ovarian", "dataset", "proves", "to", "be", "an", "exception,", "showing", "better", "performance", "under", "a", "squared", "loss.", "Regarding", "the", "TV-regularizer,", "the", "classic", "Tv", "1D", "1", "-penalty", "seems", "to", "perform", "better", "in", "general,", "with", "the", "Tv", "1D", "2", "-penalty", "showing", "competitive", "results", "in", "some", "settings.", "5.3", "2D-TV:", "Experiments", "and", "Applications", "We", "address", "now", "several", "practical", "applications", "that", "benefit", "from", "two-dimensional", "TV", "regularization;", "our", "results", "show", "again", "how", "the", "presented", "Tv2D", "p,q", "prox", "operators", "fits", "in", "seamlessly", "into", "our", "modular", "framework", "to", "produce", "efficient", "proximal", "splitting", "solvers.", "5.3.1", "Image", "denoising", "through", "anisotropic", "filtering", "Our", "first", "example", "is", "related", "to", "the", "classic", "problem", "of", "image", "denoising,", "but", "with", "the", "twist", "that", "we", "deal", "with", "noise", "of", "an", "anisotropic", "character.", "More", "specifically,", "suppose", "that", "the", "true", "image", "\u03bc", "\u2208", "Rn\u00d7m", "is", "contaminated", "by", "additive", "noise", "N", ",", "so", "that", "only", "\u03bc0", "=", "\u03bc", "+", "N", "is", "observed.", "The", "denoising", "problem", "estimates", "\u03bc", "given", "just", "the", "noisy", "version", "\u03bc0", ".", "This", "problem", "is", "highly", "ill-posed", "and", "as", "such", "not", "approachable", "unless", "additional", "assumptions", "on", "the", "noise", "(or", "on", "the", "underlying", "image)", "are", "made.", "Isotropic", "and", "anisotropic", "models:", "an", "extremely", "common", "choice", "is", "to", "simply", "assume", "the", "noise", "to", "be", "gaussian,", "or", "some", "other", "zero-mean", "distribution.", "Under", "these", "conditions,", "a", "classic", "method", "to", "perform", "such", "denoising", "task", "is", "the", "Rudin-Osher-Fatemi", "(ROF)", "model", "[76],", "which", "finds", "an", "approximation", "X", "to", "the", "original", "image", "by", "solving", "min", "X", "kX\u2212\u03bc0k", "2", "F+\u03bb", "n", "X", "i=2", "m", "X", "j=2", "k\u2202xi,j", "k2", ",", "(5.2)", "where", "\u2202xi,j", "is", "the", "discrete", "gradient", "\u2202xi,j", "=", " ", "xi,j", "\u2212", "xi\u22121,j", "xi,j", "\u2212", "xi,j", "\u22121", " .", "That", "is,", "it", "is", "the", "vector", "of", "differences", "of", "Xi,j", "and", "its", "neighbors", "along", "both", "axes.", "The", "objective", "of", "the", "first", "term", "in", "the", "ROF", "model", "is", "to", "penalize", "any", "deviation", "of", "X", "from", "the", "observed", "image", "\u03bc0,", "while", "the", "second", "term", "can", "be", "readily", "recognized", "as", "a", "mixed", "(2,", "1)-norm", "over", "the", "discrete", "gradient", "of", "X", ".", "This", "regularizer", "models", "caters", "to", "some", "prior", "knowledge:", "in", "natural", "images", "sharp", "discontinuities", "in", "intensity", "between", "neighboring", "points", "only", "appear", "in", "borders", "of", "objects,", "while", "the", "rest", "of", "the", "pixels", "usually", "show", "smooth", "variations", "in", "intensity.", "It", "makes", "sense,", "therefore,", "to", "penalize", "large", "values", "of", "the", "gradient,", "as", "sharp", "changes", "have", "a", "higher", "probability", "of", "having", "being", "produced", "by", "noise.", "Conversely,", "as", "the", "mean", "of", "the", "noise", "is", "zero,", "it", "is", "also", "sensible", "to", "maintain", "the", "denoised", "image", "X", "close", "to", "the", "observed", "\u03bc0", ".", "Merging", "these", "two", "goals", "produces", "the", "ROF", "model", "(5.2).", "35", "A", "closer", "look", "at", "the", "ROF", "regularizer", "reveals", "that", "it", "follows", "the", "spirit", "of", "the", "reviewed", "2D-TV", "regularizer", "which", "also", "penalizes", "sharp", "variations", "between", "neighboring", "pixels.", "Indeed,", "all", "such", "regularizers", "are", "broadly", "categorized", "as", "TV", "regularizers", "within", "the", "image", "processing", "community.", "It", "is", "clear,", "though,", "that", "the", "ROF", "regularizer", "(5.2)", "does", "not", "coincide", "with", "the", "Tv", "2D", "p,q", "regularizer", "used", "in", "this", "paper.", "Some", "authors", "[16]", "differentiate", "between", "these", "regularizers", "by", "naming", "the", "ROF", "approach", "as", "isotropic", "TV", "and", "the", "Tv", "2D", "p,q", "-style", "approach", "as", "anisotropic", "TV.", "This", "naming", "comes", "from", "the", "fact", "that", "isotropic", "TV", "penalizes", "each", "component", "of", "the", "discrete", "gradient", "\u2202xi,j", "following", "an", "`2", "norm,", "whereas", "the", "anisotropic", "Tv", "2D", "p,q", "-no", "rm", "and", "in", "particular", "Tv", "2D", "1,1", "-norm,", "penalize", "rows", "and", "columns", "independently.", "While", "image", "filtering", "using", "isotropic", "TV", "is", "generally", "preferred", "for", "natural", "images", "denoising", "[17],", "in", "some", "settings", "anisotropic", "filtering", "can", "produce", "better", "results,", "and", "in", "fact", "has", "been", "favored", "by", "some", "authors", "in", "the", "past", "[25,", "55].", "This", "is", "specially", "true", "on", "those", "images", "that", "present", "a", "\u201cblocky\u201d", "structure,", "and", "thus", "are", "better", "suited", "to", "the", "structure", "modeled", "by", "the", "Tv", "2D", "p,q", "-n", "o", "r", "m.", "Therefore,", "efficient", "methods", "to", "perform", "anisotropic", "filtering", "are", "also", "important.", "Anisotropic", "denoising", "experiments:", "denoising", "using", "the", "anisotropic", "Tv", "2D", "p,q", "-norm", "reducesto", "solving", "min", "X", "kX\u2212\u03bc0k", "2", "F", "+", "\u03bbTv2D", "p,q", "(X).", "(5.3)", "But", "(5.3)", "is", "nothing", "but", "the", "Tv", "2D", "p,q", "-proximity", "problem,", "and", "hence", "can", "be", "directly", "solved", "by", "applying", "the", "2D-TV", "prox", "operators", "described", "above.", "We", "solve", "(5.3)", "below", "for", "the", "choice", "p", "=", "q", "=", "1", "(which", "is", "common", "in", "practice),", "for", "the", "following", "selection", "of", "algorithms:", "\u2022", "Proximal", "Dykstra", "(\u00a7", "4.1", ".1)", "\u2022", "The", "Douglas-Rachford", "variant", "based", "on", "alternating", "projections", "(\u00a7", "4.1", ".2)", "\u2022", "The", "Split", "Bregman", "method", "of", "Goldstein", "T.", "[36],", "which", "follows", "an", "ADMM\u2013like", "approach", "to", "split", "the", "`1", "norm", "apart", "from", "the", "discrete", "gradient", "operator,", "thus", "not", "requiring", "the", "use", "of", "a", "1D-TV", "prox", "operator.", "\u2022", "Chambolle-Pock\u2019s", "method", "applied", "to", "2D", "TV", "(\u00a7", "4.1", ".4).", "\u2022", "Condat\u2019s", "general", "splitting", "method", "(\u00a7", "4.1", ".4).", "\u2022", "Kolmogorov", "et", "al", "primal-dual", "method", "(\u00a7", "4.1", ".4).", "\u2022", "Yang\u2019s", "method", "(ADMM)", "(\u00a7", "4.1.3)", "\u2022", "The", "maximum", "flow", "approach", "by", "Goldfarb", "and", "Yin", "[35],", "which", "shows", "the", "relationship", "between", "the", "2D-TV", "proximity", "minimization", "and", "the", "maximum", "flow", "problem", "over", "a", "grid,", "and", "thus", "applies", "an", "efficient", "maximum", "flow", "method", "to", "solve", "a", "discrete-valued", "version", "of", "2D-TV.", "In", "Proximal", "Dykstra,", "Douglas-Rachford", "and", "ADMM", "we", "use", "the", "linearized", "taut\u2013string", "strategy", "presented", "before", "as", "solver", "for", "the", "base", "proximity", "operators.", "All", "algorithm", "parameters", "were", "set", "as", "recommended", "in", "their", "corresponding", "papers", "or", "public", "implementations,", "except", "for", "Proximal", "Dykstra", "and", "Douglas-Rachford,", "which", "are", "parameter", "free.", "For", "Chambolle-Pock", "we", "tried", "both", "the", "scheme", "with", "fixed", "algorithm", "parameters", "[22,", "Algorithm", "1]", "and", "the", "scheme", "with", "acceleration", "[22,", "Algorithm", "2];", "however", "the", "accelerated", "version", "did", "not", "converge", "to", "the", "desired", "solution", "within", "enough", "accuracy", "(relative", "difference", "of", "10\u22125", "),", "therefore", "only", "the", "results", "for", "the", "fixed", "version", "are", "reported.", "For", "Kolmogorov", "we", "follow", "the", "recommendations", "in", "Chambolle", "and", "Pock", "[23],", "taking", "into", "account", "the", "Lipschitz", "constants", "of", "the", "optimized", "functions", "and", "selecting", "the", "parameter", "updating", "strategy", "that", "produced", "faster", "performance", "in", "the", "experiments:", "\u03b8", "t+1", "=", "1", "\u221a", "1+\u03c4t,\u03c4", "t+1", "=", "\u03b8t+1\u03c4t,", "\u03c3t+1", "=", "\u03c3", "t", "\u03b8t+1,\u03b80=1,\u03c40=", "1", "2,\u03c30=1.", "The", "images", "used", "in", "the", "experiments", "are", "displayed", "in", "Appendix", "F", "as", "Figure", "25.", "To", "test", "the", "filters", "under", "a", "variety", "of", "scenarios,", "different", "kinds", "of", "noise", "were", "introduced", "for", "each", "image.", "Table", "4", "gives", "details", "on", "this,", "while", "the", "noisy", "images", "are", "shown", "in", "Figure", "26.", "All", "QR", "barcode", "images", "used", "the", "same", "kind", "and", "parameters", "of", "noise.", "Noise", "was", "introduced", "using", "Matlab\u2019s", "imnoise", "function.", "36", "Table", "4:", "Types", "of", "noise", "and", "parameters", "for", "each", "test", "image.", "A", "\u2205", "indicates", "that", "such", "noise", "was", "not", "applied", "for", "the", "image.", "Gaussian", "and", "Speckle", "correspond", "to", "gaussian", "additive", "and", "multiplicative", "(respectively)", "noises", "with", "zero", "mean", "and", "the", "indicated", "variance.", "Salt", "&", "Pepper", "noise", "turns", "into", "black", "or", "white", "the", "indicated", "fraction", "of", "image", "pixels.", "Poisson", "regenerates", "each", "pixel", "by", "drawing", "a", "random", "value", "from", "a", "Poisson", "distribution", "with", "mean", "equal", "to", "the", "original", "pixel", "value,", "thus", "producing", "a", "more", "realistic", "noise.", "Image", "Gaussian", "Speckle", "Poisson", "Salt", "&", "Pepper", "randomQR", "0.2", "0.3", "\u2205", "\u2205", "shape", "0.05", "\u2205", "\u2205", "\u2205", "trollface", "\u2205", "1", "\u2205", "\u2205", "diagram", "\u2205", "\u2205", "X", "\u2205", "text", "\u2205", "\u2205", "\u2205", "0.1", "comic", "0.05", "\u2205", "X", "\u2205", "contour", "\u2205", "\u2205", "X", "0.4", "phantom", "\u2205", "2", "X", "\u2205", "Values", "for", "the", "regularization", "parameter", "\u03bb", "were", "found", "by", "maximizing", "the", "quality", "of", "the", "reconstruction,", "measured", "using", "Improved", "Signal-to-Noise", "Ratio", "(ISNR)", "[1].", "ISNR", "is", "defined", "as", "ISNR(X,", "\u03bc,", "\u03bc0)", "=", "10", "log10", "k\u03bc0", "\u2212", "Xk2", "F", "kX\u2212\u03bck2", "F", ",", "where", "\u03bc", "is", "the", "original", "image,", "\u03bc0", "its", "noisy", "variant,", "and", "X", "the", "reconstruction.", "To", "compare", "the", "algorithms", "we", "run", "all", "of", "them", "for", "each", "image", "and", "measured", "its", "ISNR", "and", "relative", "distance", "to", "the", "optimal", "objective", "value", "of", "the", "current", "solution", "at", "each", "iteration", "through", "their", "execution.", "The", "only", "exception", "to", "this", "procedure", "is", "the", "method", "of", "Goldfarb", "and", "Yin,", "which", "is", "non\u2013iterative", "and", "thus", "always", "returns", "an", "exact", "solution,", "and", "so", "we", "just", "measure", "the", "time", "required", "to", "finish.", "The", "optimal", "objective", "value", "was", "estimated", "by", "running", "all", "methods", "for", "a", "very", "large", "number", "of", "iterations", "and", "taking", "the", "minimum", "value", "of", "them", "all.", "This", "produced", "the", "plots", "shown", "in", "Figures", "18\u201319.", "From", "them", "the", "following", "observations", "are", "of", "relevance:", "\u2022", "Condat\u2019s", "method", "and", "Chambolle-Pock\u2019s", "method", "are", "reduced", "to", "essentially", "the", "same", "algorithm", "when", "applied", "to", "the", "particular", "case", "of", "anisotropic", "2D", "TV", "denoising.", "Furthermore,", "they", "seem", "to", "perform", "slowly", "when", "compared", "to", "other", "methods.", "\u2022", "ADMM", "(Yang\u2019s", "method)", "exhibits", "slow", "performance", "at", "the", "beginning,", "but", "when", "run", "for", "sufficient", "time", "is", "able", "to", "achieve", "a", "good", "approximation", "to", "the", "optimum.", "\u2022", "The", "Split", "Bregman", "method,", "in", "spite", "of", "being", "an", "ADMM\u2013like", "method", "much", "like", "Condat\u2019s", "or", "Chambolle-", "Pock,", "performs", "significantly", "better", "than", "those.", "We", "attribute", "this", "to", "the", "very", "efficient", "implementation", "provided", "by", "its", "authors,", "and", "to", "the", "fact", "that", "a", "fast", "approximate", "method", "is", "employed", "to", "compute", "the", "required", "matrix", "inversions", "throughout", "the", "method.", "\u2022", "The", "method", "by", "Goldfarb", "and", "Yin", "is", "slower", "than", "other", "approaches", "and", "seems", "to", "provide", "suboptimal", "solutions.", "We", "attribute", "this", "to", "the", "fact", "that", "this", "method", "solves", "a", "discrete", "(integer\u2013rounded)", "approximation", "to", "the", "problem.", "We", "acknowledge", "that", "other", "methods", "exploiting", "the", "Total", "Variation", "-", "Minimum-cut", "relationship", "have", "been", "proposed", "with", "varying", "speed", "results,", "e.g", ".", "[33],", "however", "the", "suboptimality", "issues", "still", "apply.", "\u2022", "The", "method", "by", "Kolmogorov", "et", "al,", "when", "properly", "accelerated", "by", "a", "suitable", "choice", "of", "adaptive", "stepsizes,", "seems", "to", "be", "the", "best", "choice", "for", "finding", "very", "accurate", "solutions,", "though", "it", "is", "very", "closely", "followed", "by", "ADMM.", "\u2022", "The", "parameter", "free", "methods", "PD", "and", "DR", "are", "the", "fastest", "to", "achieve", "a", "mid-quality", "solution,", "with", "Douglas-", "Rachford", "performing", "better", "than", "Proximal", "Dykstra.", "37", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "randomQR-0", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "randomQR-1", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "randomQR-2", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "randomQR-3", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "randomQR-4", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "shape", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "100", "Denoising", "algorithms:", "trollface", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "diagram", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Denoising", "algorithms:", "text", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "comic", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "100", "Denoising", "algorithms:", "contour", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-5", "100", "Denoising", "algorithms:", "phantom", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Figure", "18:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "denoising", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "Considering", "these", "facts,", "the", "method", "of", "choice", "among", "the", "ones", "considered", "depends", "on", "the", "desired", "accuracy.", "We", "argue,", "however,", "that", "for", "the", "purpose", "of", "image", "processing", "a", "mid-quality", "solution", "is", "sufficient.", "The", "ISNR", "plots", "of", "Figure", "19", "certainly", "seem", "to", "support", "this,", "as", "the", "perceived", "quality", "of", "the", "reconstruction,", "roughly", "approximated", "by", "the", "ISNR,", "saturates", "rapidly", "and", "no", "significant", "improvements", "are", "obtained", "through", "further", "optimization.", "Given", "this,", "the", "proposed", "methods", "seem", "to", "be", "the", "best", "suited", "for", "the", "considered", "task.", "38", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "I", "S", "N", "R", "0", "0.5", "1", "1.5", "2", "2.5", "Denoising", "algorithms:", "randomQR-0", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "I", "S", "N", "R", "0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "Denoising", "algorithms:", "randomQR-1", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "Denoising", "algorithms:", "randomQR-2", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "6", "Denoising", "algorithms:", "randomQR-3", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "I", "S", "N", "R", "0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "Denoising", "algorithms:", "randomQR-4", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-3", "10", "-2", "10", "-1", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "6", "Denoising", "algorithms:", "shape", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "6", "7", "8", "Denoising", "algorithms:", "trollface", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "I", "S", "N", "R", "-6", "-4", "-2", "0", "2", "4", "6", "Denoising", "algorithms:", "diagram", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "Denoising", "algorithms:", "text", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-2", "10", "-1", "100", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "6", "7", "Denoising", "algorithms:", "comic", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "I", "S", "N", "R", "0", "2", "4", "6", "8", "10", "12", "Denoising", "algorithms:", "contour", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Time", "(s)", "10", "-1", "100", "101", "I", "S", "N", "R", "0", "1", "2", "3", "4", "5", "6", "Denoising", "algorithms:", "phantom", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Goldfarb-Yin", "Kolmogorov", "PD", "DR", "Figure", "19:", "Increased", "Signal", "to", "Noise", "Ratio", "(ISNR)", "vs", "time", "of", "the", "denoising", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "For", "quick", "reference,", "Table", "5", "presents", "a", "summary", "of", "key", "points", "of", "the", "compared", "methods,", "along", "with", "some", "recommendations", "about", "when", "to", "put", "them", "to", "use.", "5.3.2", "Parallelization", "experiments", "In", "addition", "to", "the", "previous", "experiments", "and", "to", "illustrate", "the", "parallelization", "potential", "of", "the", "presented", "anisotropic", "filtering", "method,", "Figure", "20", "plots", "running", "times", "for", "the", "PD", "algorithm", "as", "the", "number", "of", "processor", "core", "ranges", "39", "Table", "5:", "Summary", "of", "key", "points", "of", "the", "compared", "Tv2D", "1,1", "proximity", "(denoising)", "methods.", "Method", "Key", "points", "Douglas", "Rachford", "+", "Fast", "convergence", "to", "medium-quality", "+", "Embarrassingly", "parallel", "\u2212", "Slow", "for", "higher", "accuracies", "\u21d2", "Ideal", "for", "standard", "denoising", "tasks", "Proximal", "Dykstra", "+", "Attainable", "accuracies", "similar", "to", "DR", "\u2212", "But", "slower", "than", "DR", "\u21d2", "Use", "DR", "instead", "Split", "Bregman", "+", "Eventually", "performs", "similarly", "to", "DR", "\u2212", "Slow", "convergence", "at", "first", "iterations", "\u21d2", "Use", "DR", "instead", "Chambolle\u2013Pock", "\u2212", "Slow", "\u21d2", "Use", "other", "method", "instead", "Condat", "+", "Solves", "objectives", "involving", "a", "sum", "of", "smooth/non\u2013smooth", "functions", "with", "linear", "operators", "\u2212", "Reduces", "to", "Chambolle\u2013Pock", "when", "solving", "basic", "image", "denoising", "\u21d2", "Use", "only", "when", "dealing", "with", "more", "complex", "functionals", "ADMM", "(Yang)", "+", "More", "accurate", "\u2212", "Slightly", "slower", "than", "Kolmogorov", "\u2212", "Bad", "behavior", "for", "mid-quality", "solutions", "\u21d2", "Use", "Kolmogorov", "instead", "Kolmogorov", "+", "More", "accurate", "\u2212", "Slower", "than", "DR", "for", "low", "accuracies", "\u21d2", "Useful", "when", "extremely", "accurate", "solutions", "are", "required", "Goldfarb-Yin", "+", "Solves", "the", "discrete", "version", "of", "the", "problem", "\u2212", "Slow", "\u2212", "Poor", "accuracy", "for", "the", "continuous", "version", "\u21d2", "Apply", "only", "when", "solving", "the", "discrete", "problem", "from", "1", "through", "16.", "We", "see", "that", "for", "the", "smaller", "images,", "the", "gains", "due", "to", "more", "processors", "essentially", "flatten", "out", "by", "8", "cores,", "where", "synchronization", "and", "memory", "contention", "offsets", "potential", "computational", "gains", "(first", "row).", "For", "the", "larger", "images,", "there", "is", "steadier", "speedup", "as", "the", "number", "of", "cores", "increase", "(in", "each", "plot", "there", "seems", "to", "be", "a", "\u201cbump\u201d", "at", "14", "processors;", "we", "attribute", "this", "to", "a", "quirk", "of", "the", "multicore", "machine", "that", "we", "used).", "From", "all", "the", "plots,", "however,", "the", "message", "is", "clear:", "our", "TV", "prox", "operators", "exploit", "parallelization", "well,", "and", "show", "substantial", "speedups", "as", "more", "processor", "cores", "become", "available.", "We", "should", "also", "note", "in", "passing", "that", "the", "Split", "Bregman", "method,", "which", "in", "the", "previous", "experiments", "showed", "a", "reasonable", "performance,", "turns", "out", "to", "be", "much", "harder", "to", "parallelize.", "This", "fact", "was", "already", "observed", "by", "[92]", "in", "the", "context", "of", "isotropic", "TV.", "Therefore", "when", "several", "processor", "cores", "are", "available", "the", "proposed", "modular", "strategy", "seems", "to", "be", "even", "more", "suitable", "to", "the", "task.", "40", "246810121416", "4", "6", "8", "10", "12", "14", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "shape", "246810121416", "50", "100", "150", "200", "250", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "trollface", "246810121416", "10", "15", "20", "25", "30", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "diagram", "246810121416", "100", "200", "300", "400", "500", "600", "700", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "text", "246810121416", "50", "100", "150", "200", "250", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "comic", "246810121416", "500", "1000", "1500", "2000", "2500", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "contour", "246810121416", "1500", "2000", "2500", "3000", "3500", "4000", "4500", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "phantom", "246810121416", "1", "1.5", "2", "2.5", "x10", "4", "#", "processor", "cores", "T", "i", "m", "e", "(", "m", "s", ")", "TV\u2212L1", "times", "for", "image:", "gaudi", "Figure", "20:", "Multicore", "speedups", "on", "different", "images", "(see", "also", "Table", "6)", "5.3.3", "Anisotropic", "image", "deconvolution", "Taking", "a", "step", "forward", "we", "now", "confront", "the", "problem", "of", "image", "deconvolution", "(or", "image", "deblurring).", "This", "setting", "is", "more", "complex", "since", "the", "task", "of", "image", "recovery", "is", "made", "harder", "by", "the", "presence", "of", "a", "convolution", "kernel", "K", "that", "distorts", "the", "image", "as", "\u03bc0=K\u2217\u03bc+N,", "where", "N", "is", "noise", "as", "before", "and", "\u2217", "denotes", "convolution.", "To", "recover", "the", "original", "image", "\u03bc", "from", "the", "observed", "\u03bc0,", "it", "is", "common", "to", "solve", "the", "following", "deconvolution", "problem", "min", "X", "1", "2kK\u2217X\u2212\u03bck2", "F", "+", "\u03bbr(X).", "(5.4)", "As", "before,", "the", "regularizer", "r(X)", "can", "be", "isotropic", "or", "anisotropic", "TV,", "among", "others.", "Here", "we", "focus", "again", "on", "the", "anisotropic", "TV", "case", "to", "show", "how", "the", "presented", "solvers", "can", "also", "be", "used", "for", "this", "image", "task.", "Problem", "(5.4)", "also", "fits", "the", "proximal", "splitting", "framework,", "and", "so", "we", "employ", "the", "popular", "FISTA", "[13]", "method", "for", "image", "processing.", "The", "gradient", "of", "the", "loss", "can", "be", "dealt", "efficiently", "by", "exploiting", "K", "being", "a", "convolution", "operator,", "which", "through", "the", "well\u2013known", "convolution", "theorem", "is", "equivalent", "to", "a", "dot", "product", "in", "the", "frequencies", "space,", "and", "so", "the", "computation", "is", "done", "by", "means", "of", "fast", "Fourier", "transforms", "and", "products.", "Several", "other", "solvers", "that", "explicitly", "deal", "with", "convolution", "operators", "are", "also", "available", "[1,", "16].", "A", "notable", "solver", "specific", "for", "the", "isotropic", "case", "is", "given", "by", "the", "work", "of", "Krishnan", "and", "Fergus", "[52],", "that", "handles", "even", "nonconvex", "isotropic", "TV-norms", "(0", "<", "p", "<", "1).", "But", "this", "approach", "does", "not", "extend", "to", "the", "anisotropic", "case,", "so", "we", "focus", "on", "general", "proximal", "splitting.", "We", "use", "the", "same", "test", "images", "as", "for", "our", "denoising", "experiments", "(Figure", "25),", "with", "identical", "noise", "patterns", "(Table", "4)", "for", "the", "QR", "images,", "and", "gaussian", "noise", "with", "variance", "0.05", "for", "the", "rest.", "In", "addition,", "we", "convolve", "each", "image", "with", "a", "different", "type", "of", "kernel", "to", "assess", "the", "behavior", "for", "a", "variety", "of", "convolutions;", "Table", "6", "shows", "the", "kernels", "applied.", "We", "constructed", "these", "kernels", "using", "Matlab\u2019s", "fspecial", "function;", "the", "convolved", "images", "are", "shown", "in", "Figure", "28.", "The", "values", "for", "the", "regularizer", "\u03bb", "were", "determined", "by", "maximizing", "the", "reconstruction", "quality", "measured", "in", "ISNR.", "Since", "deconvolution", "is", "much", "more", "expensive", "than", "denoising,", "instead", "of", "performing", "an", "exhaustive", "search", "for", "the", "best", "\u03bb,", "we", "used", "a", "Focused", "Grid", "Search", "strategy", "[7,", "9]", "to", "find", "the", "best", "performing", "values.", "41", "Image", "Convolution", "Parameters", "randomQR", "Motion", "Length", "5,", "Angle", "35o", "shape", "Average", "Size3\u00d73", "trollface", "Disk", "Radius", "5", "diagram", "Motion", "Length", "5,", "Angle", "0o", "text", "Average", "Size1\u00d710", "comic", "Gaussian", "Size", "15,", "Deviation", "2", "contour", "Disk", "Radius", "5", "phantom", "Motion", "Length", "100,", "Angle", "240o", "Table", "6:", "Convolution", "kernels", "used", "for", "each", "test", "image.", "Average", "substitutes", "each", "pixel", "with", "the", "average", "of", "its", "surrounding", "n", "\u00d7", "m", "neighbors.", "Disk", "performs", "the", "same", "operation", "within", "a", "disk-shaped", "neighborhood", "of", "the", "shown", "radius.", "Gaussian", "uses", "a", "n", "\u00d7", "n", "neighborhood", "and", "assigns", "different", "weights", "to", "each", "neighbor", "following", "the", "value", "of", "a", "gaussian", "distribution", "of", "the", "indicated", "deviation", "centered", "at", "the", "current", "pixel.", "Motion", "emulates", "the", "distortions", "produced", "when", "taking", "a", "picture", "in", "motion,", "defining", "a", "neighborhood", "following", "a", "vector", "of", "the", "indicated", "length", "and", "angle.", "Any", "denoising", "subroutine", "can", "be", "plugged", "into", "the", "aforementioned", "deconvolution", "methods,", "however", "for", "comparison", "purposes", "we", "run", "our", "experiments", "with", "the", "best", "proposed", "method,", "Douglas", "Rachford", "(Alternating", "Reflections),", "and", "the", "best", "competing", "method", "among", "those", "reviewed", "from", "the", "literature,", "Kolmogorov", "et", "al.", "A", "key", "parameter", "in", "deconvolution", "performance", "is", "for", "how", "long", "should", "these", "methods", "be", "run", "at", "each", "FISTA", "iteration.", "To", "select", "this,", "we", "first", "run", "FISTA", "with", "100", "iterations", "of", "Douglas", "Rachford", "per", "step,", "for", "a", "large", "number", "of", "FISTA", "steps,", "and", "take", "the", "final", "objective", "value", "as", "an", "estimate", "of", "the", "optimum.", "Then", "we", "find", "the", "minimum", "number", "of", "Douglas", "Rachford", "and", "Kolmogorov", "iterations", "for", "which", "FISTA", "can", "achieve", "a", "relative", "distance", "to", "such", "optimum", "below", "10\u22123", ".", "The", "reason", "for", "doing", "this", "is", "that", "for", "larger", "distances", "the", "attained", "ISNR", "values", "are", "still", "far", "from", "convergence.", "This", "turned", "to", "be", "5", "iterations", "for", "Douglas", "Rachford", "an", "10", "for", "Kolmogorov.", "We", "then", "run", "FISTA", "for", "such", "configurations", "of", "the", "inner", "solvers,", "and", "others", "with", "a", "larger", "number", "of", "inner", "iterations,", "for", "comparison", "purposes.", "Figures", "21-22", "show", "the", "evolution", "of", "objective", "values", "and", "ISNR", "for", "all", "the", "tested", "configurations.", "In", "general,", "Douglas", "Rachford", "seems", "to", "be", "slightly", "better", "at", "finding", "more", "accurate", "solutions,", "and", "also", "faster", "at", "converging", "to", "the", "final", "ISNR", "value.", "We", "explain", "this", "by", "the", "fact", "that", "the", "major", "advantage", "of", "Douglas", "Rachford", "is", "its", "aforementioned", "ability", "to", "find", "medium\u2013quality", "solutions", "in", "a", "very", "small", "number", "of", "iterations:", "this", "is", "why", "with", "a", "small", "number", "of", "inner", "DR", "iterates", "we", "can", "converge", "to", "good", "ISRN", "levels.", "For", "reference", "we", "also", "provide", "the", "resultant", "deconvoluted", "images", "as", "Figure", "29.", "5.3.4", "2D", "Fused-Lasso", "Signal", "Approximator", "The", "Fused\u2013Lasso", "Signal", "Approximator", "(FLSA)", "[34]", "can", "be", "regarded", "as", "a", "particular", "case", "of", "Fused-Lasso", "where", "the", "input", "matrix", "A", "is", "the", "identity", "matrix", "I", ",", "i.e", ".,", "minx", "1", "2kx\u2212yk2", "2", "+", "\u03bb1kxk1", "+", "\u03bb2Tv", "1D", "1", "(x).", "This", "problem", "can", "be", "solved", "immediately", "using", "the", "methods", "presented", "in", "\u00a75.2.4", ".", "A", "slightly", "less", "trivial", "problem", "is", "the", "one", "posed", "by", "the", "2D", "variant", "of", "FLSA:", "minX", "1", "2kX\u2212Yk2", "F", "+", "\u03bb1kvec(X)k1", "+", "\u03bb2Tv", "2D", "1,1(X).", "(5.5)", "Friedman", "et", "al.", "[34]", "used", "this", "model", "for", "denoising", "images", "where", "a", "large", "number", "of", "pixels", "are", "known", "to", "be", "completely", "black", "(intensity", "0),", "which", "aligns", "well", "with", "the", "structure", "imposed", "by", "the", "`1", "regularizer.", "Akin", "to", "the", "1D-case,", "2D-FLSA", "(5.5)", "can", "also", "be", "solved", "by", "decomposing", "its", "computation", "into", "two", "prox", "operators", "[34];", "formally,", "prox\u03bb1k\u00b7k1+\u03bb2Tv2D", "1,1", "(\u00b7)(Y", ")", "=", "prox\u03bb1k\u00b7k1", "prox\u03bb2Tv2D", "1,1(\u00b7)(Y", ")", " .", "42", "Time", "(s)", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "randomQR-0", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "randomQR-1", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "randomQR-2", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "randomQR-3", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "randomQR-4", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "shape", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "trollface", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "diagram", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "102", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "text", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "comic", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "101", "102", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "contour", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "101", "102", "103", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "10", "-6", "10", "-4", "10", "-2", "Deconvolution", "algorithms:", "phantom", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Figure", "21:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "deconvolution", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "Thus,", "to", "solve", "(5.5)", "we", "merely", "invoke", "one", "of", "the", "presented", "Tv2D", "1,1", "prox", "operators", "and", "then", "apply", "soft-", "thresholding", "to", "the", "results.", "Since", "soft-thresholding", "is", "done", "in", "closed", "form,", "the", "performance", "of", "a", "2D-FLSA", "solver", "depends", "only", "on", "its", "ability", "to", "compute", "Tv", "2D", "1,1", "-proximity", "efficiently.", "We", "can", "then", "safely", "claim", "that", "the", "results", "summarized", "in", "table", "5", "apply", "equivalently", "to", "2D-FLSA,", "and", "so", "the", "proposed", "Douglas", "Rachford", "method", "performs", "best", "when", "reconstruction", "ISNR", "is", "the", "primary", "concern.", "43", "Time", "(s)", "10", "-1", "100", "I", "S", "N", "R", "1.2", "1.4", "1.6", "1.8", "2", "2.2", "2.4", "Deconvolution", "algorithms:", "randomQR-0", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "101", "I", "S", "N", "R", "1.5", "2", "2.5", "Deconvolution", "algorithms:", "randomQR-1", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "101", "I", "S", "N", "R", "1.8", "2", "2.2", "2.4", "2.6", "2.8", "Deconvolution", "algorithms:", "randomQR-2", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "I", "S", "N", "R", "1.8", "2", "2.2", "2.4", "2.6", "2.8", "Deconvolution", "algorithms:", "randomQR-3", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "I", "S", "N", "R", "1.6", "1.8", "2", "2.2", "2.4", "2.6", "Deconvolution", "algorithms:", "randomQR-4", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "10", "-1", "100", "I", "S", "N", "R", "2", "2.5", "3", "Deconvolution", "algorithms:", "shape", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "I", "S", "N", "R", "2", "2.5", "3", "3.5", "4", "4.5", "5", "Deconvolution", "algorithms:", "trollface", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "I", "S", "N", "R", "1.6", "1.8", "2", "2.2", "2.4", "2.6", "2.8", "Deconvolution", "algorithms:", "diagram", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "102", "I", "S", "N", "R", "1.6", "1.8", "2", "2.2", "2.4", "Deconvolution", "algorithms:", "text", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "100", "101", "I", "S", "N", "R", "1", "1.5", "2", "2.5", "3", "Deconvolution", "algorithms:", "comic", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "101", "102", "I", "S", "N", "R", "3", "4", "5", "6", "7", "Deconvolution", "algorithms:", "contour", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Time", "(s)", "101", "102", "103", "I", "S", "N", "R", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "Deconvolution", "algorithms:", "phantom", "Kolmogorov(10)", "Kolmogorov(20)", "Kolmogorov(30)", "Kolmogorov(50)", "DR(5)", "DR(10)", "DR(20)", "DR(50)", "Figure", "22:", "Increased", "Signal", "to", "Noise", "Ratio", "(ISNR)", "vs", "time", "of", "the", "deconvolution", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "5.4", "Application", "of", "higher-dimensional", "TV", "We", "now", "apply", "the", "presented", "multidimensional", "TV", "regularizer", "to", "anisotropic", "filtering", "for", "video", "denoising.", "The", "extension", "to", "videos", "from", "images", "is", "natural.", "Say", "a", "video", "contains", "f", "frames", "of", "size", "n", "\u00d7", "m", "pixels;", "this", "video", "can", "be", "viewed", "as", "a", "3D-tensor", "X", "\u2208", "Rn\u00d7m\u00d7f", ",", "on", "which", "a", "3D-TV", "based", "filter", "can", "be", "effected", "by", "minX", "1", "2kX\u2212U0k", "2", "F", "+", "\u03bbTv3D", "p1", ",p2", ",p3", "(X),", "(5.6)", "44", "Sequence", "Frame", "resolution", "Number", "of", "frames", "Total", "number", "of", "pixels", "salesman", "288", "\u00d7", "352", "50", "5", "million", "coastguard", "176", "\u00d7", "144", "300", "7.6", "million", "bicycle", "720", "\u00d7", "576", "30", "12.4", "million", "Table", "7:", "Size", "details", "of", "video", "sequences", "used", "in", "the", "video", "denoising", "experiments.", "where", "U0", "is", "the", "observed", "noisy", "video,", "and", "Tv3D", "p1", ",p2", ",p3", "=Tv", "3", "p", "with", "p", "=", "[p1,", "p2,", "p3].", "Application", "of", "the", "filter", "(5.6)", "is", "nothing", "but", "computation", "of", "the", "prox", "operator,", "which", "can", "be", "done", "using", "the", "Parallel-Proximal", "Dykstra", "(PPD)", "algorithm", "presented", "in", "Sec.", "4", ".", "We", "apply", "this", "idea", "to", "the", "video", "sequences", "detailed", "in", "Table", "7.", "All", "of", "the", "sequences", "are", "made", "of", "grayscale", "pixels.", "Figure", "30", "in", "the", "Appendix", "shows", "some", "of", "the", "frames", "of", "the", "salesman", "sequence.", "We", "noise", "every", "frame", "of", "these", "sequences", "by", "applying", "gaussian", "noise", "with", "zero", "mean", "and", "variance", "0.01,", "using", "Matlab\u2019s", "imnoise", "function.", "Then", "we", "solve", "problem", "5.6", "for", "each", "sequence,", "adjusting", "the", "regularization", "value", "so", "as", "to", "maximize", "ISNR", "of", "the", "reconstructed", "signal.", "We", "test", "the", "following", "algorithms,", "which", "have", "been", "previously", "applied", "in", "the", "literature", "for", "solving", "3D-TV,", "with", "the", "only", "exception", "Parallel", "Proximal", "Dykstra:", "\u2022", "Parallel", "Proximal", "Dykstra", "(\u00a7", "4.1", ".1).", "\u2022", "Yang\u2019s", "method,", "which", "is", "based", "on", "ADMM", "(\u00a7", "4.1", ".1)", "\u2022", "The", "maximum", "flow", "approach", "by", "Goldfarb", "and", "Yin", "[35],", "which", "features", "an", "implementation", "for", "3D", "grids,", "thus", "solving", "a", "discrete-valued", "version", "of", "3D-TV.", "For", "both", "PPD", "and", "ADMM", "we", "again", "make", "use", "of", "linearized", "taut-string", "1D", "TV", "solver.", "We", "must", "also", "point", "out", "that", "other", "image", "denoising", "methods", "seem", "amenable", "for", "extension", "into", "the", "multidimensional", "setting,", "such", "as", "Condat\u2019s", "and", "Chambolle-Pock", "methods.", "However", "in", "the", "light", "of", "our", "image", "denoising", "results", "we", "do", "not", "deem", "them", "as", "good", "choices", "for", "this", "problem.", "A", "more", "reasonable", "choice", "might", "be", "to", "extend", "Split-Bregman", "to", "multiple", "dimensions,", "but", "such", "an", "extension", "has", "not", "been", "implemented", "or", "proposed", "as", "far", "as", "we", "know.", "We", "would", "also", "like", "to", "note", "that", "we", "have", "considered", "extending", "the", "Douglas", "Rachford", "method", "to", "a", "multidimensional", "setting,", "however", "such", "task", "is", "complex", "and", "thus", "we", "decided", "to", "focus", "on", "Parallel", "Proximal", "Dykstra.", "10", "1", "10", "2", "10\u22126", "10", "\u22124", "10\u22122", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Denoising", "algorithms:", "salesman", "Yang", "Goldfarb\u2212Yin", "PPD", "10", "1", "10", "2", "10\u22126", "10\u22124", "10", "\u22122", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Denoising", "algorithms:", "coastguard", "Yang", "Goldfarb\u2212Yin", "PPD", "10", "1", "10", "2", "10\u22126", "10", "\u22124", "10\u22122", "Time", "(s)", "R", "e", "l", "a", "t", "i", "v", "e", "d", "i", "s", "t", "a", "n", "c", "e", "t", "o", "o", "p", "t", "i", "m", "u", "m", "Denoising", "algorithms:", "bicycle", "Yang", "Goldfarb\u2212Yin", "PPD", "Figure", "23:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "denoising", "3D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "video", "sequences", "considered", "in", "the", "experiments.", "Similarly", "to", "our", "previous", "image", "denoising", "experiments,", "we", "ran", "the", "algorithms", "under", "comparison", "for", "each", "video", "sequence", "and", "measured", "its", "ISNR", "and", "relative", "distance", "to", "the", "optimal", "objective", "value", "of", "the", "current", "solution", "at", "each", "iteration", "through", "their", "execution.", "Again", "the", "exception", "is", "the", "Goldfarb-Yin", "method,", "which", "is", "45", "101", "102", "0", "1", "2", "3", "4", "5", "Time", "(s)", "I", "S", "N", "R", "Denoising", "algorithms:", "salesman", "Yang", "Goldfarb\u2212Yin", "PPD", "101", "102", "0", "1", "2", "3", "4", "5", "6", "Time", "(s)", "I", "S", "N", "R", "Denoising", "algorithms:", "coastguard", "Yang", "Goldfarb\u2212Yin", "PPD", "101", "102", "0", "1", "2", "3", "4", "5", "Time", "(s)", "I", "S", "N", "R", "Denoising", "algorithms:", "bicycle", "Yang", "Goldfarb\u2212Yin", "PPD", "Figure", "24:", "Increased", "Signal", "to", "Noise", "Ratio", "(ISNR)", "vs", "time", "of", "the", "denoising", "3D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "video", "sequences", "considered", "in", "the", "experiments.", "non\u2013iterative", "and", "so", "we", "only", "report", "the", "time", "required", "for", "its", "termination.", "The", "optimal", "objective", "value", "was", "estimated", "by", "running", "all", "methods", "for", "a", "very", "large", "number", "of", "iterations", "and", "taking", "the", "minimum", "value", "of", "them", "all.", "This", "produced", "the", "plots", "shown", "in", "Figures", "23\u201324", ".", "From", "them", "the", "following", "observations", "are", "of", "relevance:", "\u2022", "Following", "the", "pattern", "observed", "in", "the", "image", "denoising", "experiments,", "ADMM", "(Yang\u2019s", "method)", "is", "best", "suited", "for", "finding", "very", "accurate", "solutions.", "\u2022", "The", "method", "by", "Goldfarb", "and", "Yin", "again", "provides", "suboptimal", "solutions,", "due", "to", "the", "discrete", "approximation", "it", "uses.", "\u2022", "Parallel", "Proximal", "Dykstra", "is", "the", "fastest", "to", "achieve", "a", "mid-quality", "solution.", "\u2022", "Intermediate", "solutions", "prior", "to", "convergence", "of", "the", "PPD", "run", "result", "in", "better", "ISNR", "values", "for", "the", "coastguard", "and", "bicycle", "datasets.", "This", "hints", "that", "the", "denoising", "model", "used", "in", "this", "experiment", "may", "not", "be", "optimal", "for", "these", "kind", "of", "signals;", "indeed,", "more", "advanced", "denoising", "models", "abound", "in", "the", "signal", "processing", "literature.", "Hence", "we", "do", "not", "claim", "novel", "results", "in", "terms", "of", "ISNR", "quality,", "but", "just", "in", "solving", "this", "classic", "denoising", "model", "more", "efficiently.", "The", "ISNR", "plots", "in", "Figure", "24", "also", "show", "how", "both", "Parallel", "Proximal", "Dykstra", "and", "ADMM", "(Yang\u2019s", "method)", "converge", "to", "equivalent", "solutions", "in", "practice.", "Therefore,", "for", "the", "purpose", "of", "video", "denoising", "PPD", "seems", "to", "be", "the", "best", "choice,", "unless", "for", "some", "reason", "a", "high", "degree", "of", "accuracy", "is", "required,", "for", "which", "ADMM", "should", "be", "preferred.", "Acknowledgments", "\u0301", "AB", "acknowledges", "partial", "financial", "support", "from", "Spain\u2019s", "grants", "TIN2010-21575-C02-01,", "TIN2013-42351-P,", "S2013/ICE-2845", "CASI-CAM-CM,", "TIN2016-76406-P", "and", "TIN2015-70308-REDT", "(MINECO/FEDER", "EU)", "during", "the", "long", "period", "leading", "to", "the", "writing", "of", "this", "manuscript.", "We", "thank", "R.", "Tibshirani", "for", "bringing", "[45]", "to", "our", "attention,", "and", "S.", "Jegelka", "for", "alerting", "us", "to", "the", "importance", "of", "weighted", "total-variation", "problems.", "References", "[1]", "M.", "V.", "Afonso,", "J.", "M.", "Bioucas-Dias,", "and", "M.", "A.", "T.", "Figueiredo.", "Fast", "image", "recovery", "using", "variable", "splitting", "and", "constrained", "optimization.", "IEEE", "Transactions", "on", "Image", "Processing,", "19(9),", "September", "2010.", "[2]", "C.", "M", ".", "Ala\u0131z,", "\u0301", "A.", "Barbero,", "and", "J.", "R.", "Dorronsoro.", "Group", "fused", "lasso.", "Artificial", "Neural", "Networks", "and", "Machine", "Learning\u2013ICANN", "2013,", "page", "66,", "2013.", "[3]", "E.", "Anderson", "et", "al.", "LAPACK", "Users\u2019", "Guide.", "Society", "for", "Industrial", "and", "Applied", "Mathematics,", "Philadelphia,", "PA,", "third", "edition,", "1999.", "ISBN", "0-89871-447-8", "(paperback).", "46", "[4]", "F.", "Bach.", "Structured", "sparsity-inducing", "norms", "through", "submodular", "functions.", "In", "NIPS,", "2010.", "[5]", "Bach,", "Francis", "Learning", "with", "Submodular", "Functions:", "A", "Convex", "Optimization", "Perspective", "arXiv", "preprint", "arXiv:1111.6453", "[6]", "F.", "Bach,", "R.", "Jenatton,", "J.", "Mairal,", "and", "G.", "Obozinski.", "Convex", "optimization", "with", "sparsity-inducing", "norms.", "In", "S.", "Sra,", "S.", "Nowozin,", "and", "S.", "J.", "Wright,", "editors,", "Optimization", "for", "Machine", "Learning.", "MIT", "Press,", "2011.", "[7]", "\u0301A", ".", "Barbero,", "J.", "L", "\u0301opez,", "and", "J.", "R.", "Dorronsoro.", "Finding", "Optimal", "Model", "Parameters", "by", "Discrete", "Grid", "Search.", "In", "Advances", "in", "Soft", "Computing:", "Innovations", "in", "Hybrid", "Intelligent", "Systems", "44,", "pages", "120\u2013127.", "Springer,", "2008.", "[8]", "Barbero,", "A.,", "Sra,", "S.", "Fast", "Newton-type", "methods", "for", "total", "variation", "regularization.", "In", "Proceedings", "of", "the", "28th", "International", "Conference", "on", "Machine", "Learning", "(ICML-11)", "(pp.", "313", "-320).", "[9]", "\u0301A", ".", "Barbero,", "J.", "L", "\u0301opez,", "and", "J.", "R", ".", "Dorronsoro.", "Finding", "Optimal", "Model", "Parameters", "by", "Deterministic", "and", "Annealed", "Focused", "Grid", "Search.", "Neurocomputing,", "72(13-15):2824\u20132832,", "2009.", "ISSN", "0925-2312.", "doi:", "DOI:10.1016/j.neucom", ".2008.09", ".024.", "[10]", "Barlow,", "R.", "E", ".,", "Bartholomew,", "D.", "J.,", "Bremner,", "J.", "M.,", "Brunk,", "H.", "D", ".", "Statistical", "inference", "under", "order", "restrictions:", "The", "theory", "and", "application", "of", "isotonic", "regression", "New", "York:", "Wiley,", "1972", "[11]", "H.", "H", ".", "Bauschke", "and", "P.", "L.", "Combettes.", "Convex", "analysis", "and", "monotone", "operator", "theory", "in", "Hilbert", "spaces.", "CMS", "Books", "in", "Mathematics.", "Springer,", "2011.", "[12]", "Heinz", "H.", "Bauschke,", "Patrick", "L.", "Combettes,", "D.", "Russell", "Luke", "Finding", "best", "approximation", "pairs", "relative", "to", "two", "closed", "convex", "sets", "in", "Hilbert", "spaces", "Journal", "of", "Approximation", "Theory", "127", "(2004)", "178\u2013192", "[13]", "A.", "Beck", "and", "M.", "Teboulle.", "A", "Fast", "Iterative", "Shrinkage-Thresholding", "Algorithm", "for", "Linear", "Inverse", "Problems.", "SIAM", "Journal", "of", "Imgaging", "Sciences,", "2(1):183\u2013202,", "2009.", "[14]", "D.", "P.", "Bertsekas.", "Projected", "newton", "methods", "for", "optimization", "problems", "with", "simple", "constraints.", "SIAM", "Journal", "on", "Control", "and", "Optimization,", "20(2),", "March", "1982.", "[15]", "D.", "P.", "Bertsekas.", "Nonlinear", "Programming.", "Athena", "Scientific,", "2nd", "edition,", "September", "1999.", "[16]", "J.", "M.", "Bioucas-Dias", "and", "M.", "A.", "T.", "Figueiredo.", "A", "new", "twist:", "Two-step", "iterative", "shrinkage/thresholding", "algorithms", "for", "image", "restoration.", "IEEE", "Transactions", "on", "Image", "Processing,", "16(12):2992\u20133004,", "December", "2007.", "[17]", "J.", "M", ".", "Bioucas-Dias,", "M.", "A", ".", "T.", "Figueiredo,", "and", "J.", "P.", "Oliveira.", "Total", "variation-based", "image", "deconvolution:", "A", "majorization-minimization", "approach.", "In", "ICASSP", "Proceedings,", "2006.", "[18]", "BM3D.", "Bm3d", "software", "and", "test", "sequences,", "2013.", "URL", "http://www.cs", ".tut.fi/\u0303foi/", "GCF-", "BM3D/.", "[19]", "R.", "H.", "Byrd,", "P.", "Lu,", "J.", "Nocedal,", "and", "C.", "Zhu.", "A", "limited", "memory", "algorithm", "for", "bound", "constrained", "optimization.", "Technical", "report,", "Northwestern", "University,", "1994.", "[20]", "E.", "J", ".", "Cand", "`es", "and", "T.", "Tao.", "Near-optimal", "signal", "recovery", "from", "random", "projections:", "universal", "encoding", "strategies.", "IEEE", "Trans.", "Info.", "Theory,", "52:5406\u20135425,", "2004.", "[21]", "A.", "Chambolle", "and", "J.", "Darbon.", "On", "total", "variation", "minimization", "and", "surface", "evolution", "using", "parametric", "maximum", "flows.", "International", "Journal", "of", "Computer", "Vision,", "84(3),", "2009.", "[22]", "A.", "Chambolle", "and", "T.", "Pock.", "A", "first-order", "primal-dual", "algorithm", "for", "convex", "problems", "with", "applications", "to", "imaging.", "Journal", "of", "Mathematical", "Imaging", "and", "Vision,", "40(1):120\u2013145,", "2011.", "[23]", "Chambolle,", "A.,", "Pock,", "T.", "On", "the", "ergodic", "convergence", "rates", "of", "a", "first-order", "primal-dual", "algorithm", "Mathematical", "Programming.", "September", "2016,", "Volume", "159,", "Issue", "1,", "pp", "253\u2013287", "[24]", "V.", "Chandrasekaran,", "B.", "Recht,", "P.", "A", ".", "Parrilo,", "and", "A.", "S.", "Willsky.", "The", "Convex", "Geometry", "of", "Linear", "Inverse", "Problems.", "Foundations", "of", "Computational", "Mathematics,", "12(6),", "2012.", "[25]", "R.", "Choksi,", "Y.", "van", "Gennip,", "and", "A.", "Oberman.", "Anisotropic", "Total", "Variation", "Regularized", "L1-Approximation", "and", "Denoising/Deblurring", "of", "2D", "Bar", "Codes.", "Technical", "report,", "McGill", "University,", "July", "2010.", "[26]", "P.", "L", ".", "Combettes.", "Iterative", "construction", "of", "the", "resolvent", "of", "a", "sum", "of", "maximal", "monotone", "operators.", "Journal", "of", "Convex", "Analysis,", "16:727\u2013748,", "2009.", "[27]", "P.", "L", ".", "Combettes", "and", "J.", "-C.", "Pesquet.", "Proximal", "splitting", "methods", "in", "signal", "processing.", "arXiv:0912.3522,", "2009.", "47", "[28]", "L.", "Condat.", "A", "direct", "algorithm", "for", "1d", "total", "variation", "denoising.", "Technical", "report,", "GREYC", "laboratory,", "CNRS-ENSICAEN-Univ.", "of", "Caen,", "2012.", "[29]", "L.", "Condat.", "A", "generic", "proximal", "algorithm", "for", "convex", "optimization", "-", "application", "to", "total", "variation", "minimization.", "IEEE", "SIGNAL", "PROC.", "LETTERS,", "21(8):985\u2013989,", "2014.", "[30]", "A.", "R", ".", "Conn,", "N.", "I", ".", "M.", "Gould,", "and", "P.", "L", ".", "Toint.", "Trust-Region", "Methods.", "SIAM,", "2000.", "[31]", "J.", "Dahl,", "P.", "C", ".", "Hansen,", "S.", "H", ".", "Jensen,", "and", "T.", "L", ".", "Jensen.", "Algorithms", "and", "software", "for", "total", "variation", "image", "reconstruction", "via", "first-order", "methods.", "Numer", "Algor,", "53:67\u201392,", "2010.", "[32]", "P.", "L", ".", "Davies", "and", "A.", "Kovac.", "Local", "extremes,", "runs,", "strings", "and", "multiresolution.", "The", "Annals", "of", "Statistics,", "29(1):1\u201365,", "2001.", "[33]", "Y.", "Duan", "and", "X.", "-C.", "Tai.", "Domain", "decomposition", "methods", "with", "graph", "cuts", "algorithms", "for", "total", "variation", "minimization.", "Adv", "Comput", "Math,", "36:175\u2013199,", "2012.", "doi:", "10.1007/s10444-011-9213-4.", "[34]", "J.", "Friedman,", "T.", "Hastie,", "H.", "H", "\u0308ofling,", "and", "R.", "Tibshirani.", "Pathwise", "coordinate", "optimization.", "Annals", "of", "Applied", "Statistics,", "1(2):302\u2013332,", "Aug.", "2007.", "[35]", "D.", "Goldfarb", "and", "W.", "Yin.", "Parametric", "maximum", "flow", "algorithms", "for", "fast", "total", "variation", "minimization.", "SIAM", "Journal", "on", "Scientific", "Computing,", "31(5):3712\u20133743,", "2009.", "[36]", "O.", "S", ".", "Goldstein", "T.", "The", "Split", "Bregman", "Method", "for", "L1", "Regularized", "Problems.", "SIAM", "Journal", "on", "Imaging", "Sciences,", "2(2):323\u2013343,", "2009.", "[37]", "T.", "R", ".", "Golub", "et", "al.", "Molecular", "classification", "of", "cancer.", "Science,", "286(5439):531\u2013537,", "October", "1999.", "[38]", "M.", "Grasmair.", "The", "equivalence", "of", "the", "taut", "string", "algorithm", "and", "bv-regularization.", "Journal", "of", "Mathematical", "Imaging", "and", "Vision,", "27(1):59\u201366,", "2007.", "ISSN", "0924-9907.", "doi:", "10.1007/s10851-006-9796-4.", "URL", "http://dx.doi.org/10.1007/s10851-", "006", "-9796-", "4", ".", "[39]", "Z.", "Harchaoui", "and", "C.", "L", "\u0301evy-Leduc.", "Multiple", "Change-Point", "Estimation", "With", "a", "Total", "Variation", "Penalty.", "Journal", "of", "the", "American", "Statistical", "Association,", "105(492):1480\u20131493,", "2010.", "[40]", "J.", "Hua,", "W.", "D", ".", "Tembe,", "and", "E.", "R.", "Dougherty.", "Performance", "of", "feature-selection", "methods", "in", "the", "classification", "of", "high-dimension", "data.", "Pattern", "Recognition,", "42:409\u2013424,", "2009.", "[41]", "K.", "Ito", "and", "K.", "Kunisch.", "An", "active", "set", "strategy", "based", "on", "the", "augmented", "lagrangian", "formulation", "for", "image", "restoration.", "ESAIM:", "Mathematical", "Modelling", "and", "Numerical", "Analysis,", "33(1):1\u201321,", "1999.", "URL", "http://eudml.org/doc/193911.", "[42]", "M.", "Jaggi.", "Revisiting", "frank-wolfe:", "Projection-free", "sparse", "convex", "optimization.", "In", "Proceedings", "of", "the", "30th", "International", "Conference", "on", "Machine", "Learning,,", "2013.", "[43]", "S.", "Jegelka,", "F.", "Bach,", "and", "S.", "Sra.", "Reflection", "methods", "for", "user-friendly", "submodular", "optimization.", "Advances", "in", "Neural", "Information", "Processing", "Systems", "2013:", "1313\u20131321.", "[44]", "Jegou,", "H.,", "Douze,", "M.,", "Schmid,", "C.", "Hamming", "Embedding", "and", "Weak", "geometry", "consistency", "for", "large", "scale", "image", "search", "Proceedings", "of", "the", "10th", "European", "conference", "on", "Computer", "vision,", "October,", "2008", "http://lear.inrialpes.fr/\u0303jegou/data.php#holidays", "[45]", "N.", "A", ".", "Johnson.", "A", "dynamic", "programming", "algorithm", "for", "the", "fused", "Lasso", "and", "l0", "-segmentation.", "J.", "Computational", "and", "Graphical", "Statistics,", "2013.", "[46]", "D.", "Kim,", "S.", "Sra,", "and", "I.", "Dhillon.", "A", "scalable", "trust-region", "algorithm", "with", "application", "to", "mixed-norm", "regression.", "In", "International", "Conference", "on", "Machine", "Learning,", "2010.", "[47]", "S.", "Kim,", "K.", "Koh,", "S.", "Boyd,", "and", "D.", "Gorinevsky.", "`1", "trend", "filtering.", "SIAM", "Review,", "51(2):339\u2013360,", "2009.", "doi:", "10.1137/070690274.", "[48]", "K.", "C.", "Kiwiel.", "Variable", "fixing", "algorithms", "for", "the", "continuous", "quadratic", "knapsack", "problem.", "J.", "Optim.", "Theory", "Appl.,", "136:445\u2013458,", "2008.", "[49]", "Knuth,", "Donald", "E.", "The", "art", "of", "computer", "programming,", "volume", "1:", "fundamental", "algorithms.", "CA,", "USA:", "Addison", "Wesley", "Longman", "Publishing", "Co.,", "Inc", "[50]", "M.", "Kolar,", "L.", "Song,", "A.", "Ahmed,", "and", "E.", "Xing.", "Estimaging", "time-varying", "networks.", "The", "Annals", "of", "Applied", "Statistics,", "4(1):94\u2013123,", "2010.", "[51]", "Kolmogorov,", "V.,", "Pock,", "T.,", "Rolinek,", "M.", "Total", "variation", "on", "a", "tree", "SIAM", "J.", "Imaging", "Sci.,", "9(2),", "605\u2013636", ".", "48", "[52]", "D.", "Krishnan", "and", "R.", "Fergus.", "Fast", "image", "deconvolution", "using", "hyper-laplacian", "priors.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2009.", "[53]", "Kumar,", "K.S", ".,", "Barbero,", "A.,", "Jegelka,", "S.,", "Sra,", "S.,", "and", "Bach,", "F.", "Convex", "optimization", "for", "parallel", "energy", "minimization.", "arXiv", "preprint", "arXiv:1503.01563", ".", "[54]", "S.", "R.", "Land", "and", "J.", "H", ".", "Friedman.", "Variable", "fusion:", "A", "new", "adaptive", "signal", "regression", "method.", "Technical", "Report", "656,", "Department", "of", "Statistics,", "Carnegie", "Mellon", "University", "Pittsburgh,", "1997.", "[55]", "Y.", "Li", "and", "F.", "Santosa.", "A", "computational", "algorithm", "for", "minimizing", "total", "variation", "in", "image", "restoration.", "IEEE", "Transactions", "on", "Image", "Processing,", "5(6):987\u2013995,", "1996.", "URL", "http://dblp.uni-trier.", "de/db/journals/tip/tip5.html#LiS96.", "[56]", "C.-J", ".", "Lin", "and", "J.", "J", ".", "Mor\u0301e", ".", "Newton\u2019s", "method", "for", "large", "bound-constrained", "optimization", "problems.", "SIAM", "Journal", "on", "Optimization,", "9(4):1100\u20131127,", "1999.", "[57]", "H.", "Liu", "and", "J.", "Zhang.", "Estimation", "Consistency", "of", "the", "Group", "Lasso", "and", "its", "Applications.", "In", "Int.", "Conf.", "Mach.", "Learning", "(ICML),", "2009.", "[58]", "J.", "Liu", "and", "J.", "Ye.", "Efficient", "Euclidean", "projections", "in", "linear", "time.", "In", "ICML,", "Jun.", "2009.", "[59]", "J.", "Liu,", "S.", "Ji,", "and", "J.", "Ye.", "SLEP:", "Sparse", "Learning", "with", "Efficient", "Projections.", "Arizona", "State", "University,", "2009.", "http://www.public.asu.edu/", "jye02/Software/SLEP.", "[60]", "J.", "Liu,", "L.", "Yuan,", "and", "J.", "Ye.", "An", "efficient", "algorithm", "for", "a", "class", "of", "fused", "lasso", "problems.", "In", "ACM", "SIGKDD", "Conference", "on", "Knowledge", "Discovery", "and", "Data", "Mining,", "2010.", "[61]", "J.", "Mairal,", "R.", "Jenatton,", "G.", "Obozinski,", "and", "F.", "Bach.", "Network", "Flow", "Algorithms", "for", "Structured", "Sparsity.", "In", "NIPS,", "2010.", "To", "appear.", "[62]", "B.", "Martinet.", "R", "\u0301egularisation", "d\u2019in", "\u0301equations", "variationnelles", "par", "approximations", "successives.", "Mod", "\u0301elisation", "Math", "\u0301ematique", "et", "Analyse", "Num", "\u0301erique,", "4(R3):154\u2013158,", "1970.", "[63]", "L.", "Meier,", "S.", "van", "de", "Geer,", "and", "P.", "B", "\u0308uhlmann.", "The", "group", "lasso", "for", "logistic", "regression.", "J.", "R", ".", "Statist.", "Soc.,", "70:", "53\u201371,", "2008.", "[64]", "J.", "J.", "Mor", "\u0301e", "and", "D.", "C", ".", "Sorensen.", "Computing", "a", "trust", "region", "step.", "SIAM", "Journal", "of", "Scientific", "Computing,", "4", "(3),", "September", "1983.", "[65]", "J.", "J.", "Moreau.", "Fonctions", "convexes", "duales", "et", "points", "proximaux", "dans", "un", "espace", "hilbertien.", "C.", "R.", "Acad.", "Sci.", "Paris", "S", "\u0301er.", "A", "Math.,", "255:2897\u20132899,", "1962.", "[66]", "Y.", "Nesterov.", "Gradient", "methods", "for", "minimizing", "composite", "objective", "function.", "Technical", "Report", "76,", "Catholic", "University", "of", "Louvain,", "CORE,", "2007.", "[67]", "J.", "Nocedal", "and", "S.", "J.", "Wright.", "Numerical", "Optimization.", "Springer", "Verlag,", "2000.", "[68]", "N.", "Parikh,", "S.", "Boyd,", "et", "al.", "Proximal", "algorithms.", "Foundations", "and", "Trends", "R\r", "in", "Optimization,", "1(3):127\u2013239,", "2014.", "[69]", "G.", "Pierra.", "Decomposition", "through", "formalization", "in", "a", "product", "space.", "Mathematical", "Programming,", "28(1):", "96\u2013115,", "1984.", "[70]", "C.", "Pontow", "and", "O.", "Scherzer.", "A", "derivative", "free", "approach", "for", "total", "variation", "regularization.", "arXiv:0911.1293,", "2009.", "URL", "http://arxiv.org/abs/0911.1293.", "[71]", "A.", "Ramdas", "and", "R.", "J", ".", "Tibshirani.", "Fast", "and", "flexible", "admm", "algorithms", "for", "trend", "filtering.", "arXiv:1406.2082,", "2014.", "[72]", "F.", "Rapaport", "and", "E.", "B.", "J.", "-P.", "Vert.", "Classification", "of", "arrayCGH", "data", "using", "fused", "SVM.", "Bioinformatics,", "24", "(13):i375\u2013i382,", "2008.", "[73]", "A.", "Rinaldo.", "Properties", "and", "refinements", "of", "the", "fused", "lasso.", "Annals", "of", "Statistics,", "37(5B):2922\u20132952,", "2009.", "[74]", "R.", "T.", "Rockafellar.", "Monotone", "operators", "and", "hte", "proximal", "point", "algorithm.", "SIAM", "J.", "Control", "and", "Opt.,", "14", "(5):877\u2013898,", "1976.", "[75]", "S.", "Rogers,", "M.", "Girolami,", "C.", "Campbell,", "and", "R.", "Breitling.", "The", "latent", "process", "decomposition", "of", "cdna", "microarray", "data", "sets.", "IEEE/ACM", "Trans.", "Comp.", "Bio.", "and", "Bioinformatics,", "2(2),", "April-June", "2005.", "[76]", "L.", "I", ".", "Rudin,", "S.", "Osher,", "and", "E.", "Fatemi.", "Nonlinear", "total", "variation", "based", "noise", "removal", "algorithms.", "Physica", "D,", "60:259\u2013268,", "1992.", "49", "[77]", "Russakovsky,", "O.,", "Deng,", "J.,", "Su,", "H.,", "Krause,", "J.,", "Satheesh,", "S.,", "Ma,", "S.,", "Huang,", "Z.,", "Karpathy", "A.,", "Khosla,", "A.,", "Bernstein,", "M.,", "Berg,", "A.C.,", "Fei-Fei,", "L.", "ImageNet", "Large", "Scale", "Visual", "Recognition", "Challenge", "International", "Journal", "of", "Computer", "Vision", "(IJCV),", "Year", "2015,", "Volume", "115,", "Number", "3,", "pages", "211-252", "http://", "image-", "net.org/challenges/LSVRC/2010/download-", "public", "[78]", "S.", "Salzo", "and", "S.", "Villa.", "Inexact", "and", "accelerated", "proximal", "point", "algorithms.", "J.", "Convex", "Analysis,", "19(4),", "2012.", "[79]", "M.", "Schmidt,", "N.", "L", ".", "Roux,", "and", "F.", "Bach.", "Convergence", "Rates", "of", "Inexact", "Proximal-Gradient", "Methods", "for", "Convex", "Optimization.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems", "(NIPS),", "2011.", "[80]", "S.", "Sra.", "Scalable", "nonconvex", "inexact", "proximal", "splitting.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2012.", "[81]", "S.", "Sra,", "S.", "Nowozin,", "and", "S.", "Wright,", "editors.", "Optimization", "for", "machine", "learning.", "MIT", "Press,", "2011.", "[82]", "G.", "Steidl,", "S.", "Didas,", "and", "J.", "Neumann.", "Relations", "between", "higher", "order", "tv", "regularization", "and", "support", "vector", "regression.", "In", "Scale-Space,", "pages", "515\u2013527,", "2005.", "[83]", "N.", "Stransky", "et", "al.", "Regional", "copy", "number-independent", "deregulation", "of", "transcription", "in", "cancer.", "Nature", "Genetics,", "38(12):1386\u20131396,", "December", "2006.", "[84]", "R.", "Tibshirani.", "Regression", "shrinkage", "and", "selection", "via", "the", "lasso.", "J.", "R.", "Statist.", "Soc.,", "58(1):267\u2013288,", "1996.", "[85]", "R.", "Tibshirani", "and", "P.", "Wang.", "Spatial", "smoothing", "and", "hot", "spot", "detection", "for", "CGH", "data", "using", "the", "fused", "lasso.", "Biostatistics,", "9(1):18\u201329,", "2008.", "[86]", "R.", "Tibshirani,", "M.", "Saunders,", "S.", "Rosset,", "J.", "Zhu,", "and", "K.", "Knight.", "Sparsity", "and", "smoothness", "via", "the", "fused", "lasso.", "J.", "Royal", "Stat.", "Soc.:", "Series", "B,", "67(1):91\u2013108,", "2005.", "[87]", "R.", "J.", "Tibshirani.", "Adaptive", "piecewise", "polynomial", "estimation", "via", "trend", "filtering.", "The", "Annals", "of", "Statistics,", "42(1):285\u2013323,", "02", "2014.", "doi:", "10.1214/13-AOS1189.", "[88]", "U.", "Alon", "et", "al.", "Broad", "patterns", "of", "gene", "expression", "revealed", "by", "clustering", "analysis", "of", "tumor", "and", "normal", "colon", "tissues", "probed", "by", "oligonucleotide", "arrays.", "Proc.", "Natl.", "Acad.", "Sci.", "USA,", "96:6745\u20136750,", "June", "1999.", "[89]", "J.", "-P.", "Vert", "and", "K.", "Bleakley.", "Fast", "detection", "of", "multiple", "change-points", "shared", "by", "many", "signals", "using", "group", "LARS.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2010.", "[90]", "C.", "R.", "Vogel", "and", "M.", "E", ".", "Oman.", "Iterative", "methods", "for", "total", "variation", "denoising.", "SIAM", "Journal", "on", "Scientific", "Computing,", "17(1):227\u2013238,", "1996.", "[91]", "B.", "Wahlberg,", "S.", "Boyd,", "M.", "Annergren,", "and", "Y.", "Wang.", "An", "ADMM", "Algorithm", "for", "a", "Class", "of", "Total", "Variation", "Regularized", "Estimation", "Problems.", "In", "Proceedings", "16th", "IFAC", "Symposium", "on", "System", "Identification,", "volume", "16,", "2012.", "[92]", "J.", "Wang", "and", "Q.", "Li", "and", "S.", "Yang", "and", "W.", "Fan", "and", "P.", "Wonka", "and", "J.", "Ye.", "A", "Highly", "Scalable", "Parallel", "Algorithm", "for", "Isotropic", "Total", "Variation", "Models", "In", "Proceedings", "of", "the", "31st", "International", "Conference", "on", "Machine", "Learning", "(ICML-14),", "pages", "235-243,", "2014.", "[93]", "S.", "J.", "Wright,", "R.", "D", ".", "Nowak,", "and", "M.", "A", ".", "T.", "Figueiredo.", "Sparse", "reconstruction", "by", "separable", "approximation.", "IEEE", "Trans.", "Sig.", "Proc.,", "57(7):2479\u20132493,", "2009.", "[94]", "M.", "Wytock,", "S.", "Sra,", "and", "J.", "Z", ".", "Kolter.", "Fast", "Newton", "Methods", "for", "the", "Group", "Fused", "Lasso.", "In", "Conference", "on", "Uncertainty", "in", "Artificial", "Intelligence,", "2014.", "[95]", "S.", "Yang,", "J.", "Wang,", "W.", "Fan,", "X.", "Zhang,", "P.", "Wonka,", "and", "J.", "Ye.", "An", "Efficient", "ADMM", "Algorithm", "for", "Multidimensional", "Anisotropic", "Total", "Variation", "Regularization", "Problems.", "In", "ACM", "Knowledge", "Discovery", "and", "Data", "Mining", "(KDD),", "Chicago,", "Illinois,", "USA,", "August", "2013.", "[96]", "Y.", "Yu.", "On", "decomposing", "the", "proximal", "map.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2013.", "[97]", "M.", "Yuan", "and", "Y.", "Lin.", "Model", "Selection", "and", "Estimation", "in", "Regression", "with", "Grouped", "Variables.", "J.", "R.", "Statist.", "Soc.", "B,", "68(1):49\u201367,", "2006.", "[98]", "M.", "Zhu", "and", "T.", "Chan.", "An", "efficient", "primal-dual", "hybrid", "gradient", "algorithm", "for", "total", "variation", "image", "restoration.", "Technical", "report,", "UCLA", "CAM,", "2008.", "50", "A", "Mathematical", "background", "We", "begin", "by", "recalling", "a", "few", "basic", "ideas", "from", "convex", "analysis;", "we", "recommend", "the", "recent", "book", "[11]", "for", "more", "details.", "Let", "X", "\u2282", "Rn", "be", "any", "set.", "A", "function", "r", ":", "X", "\u2192", "R", "\u222a", "{\u2212\u221e,", "+\u221e}", "is", "called", "lower", "semicontinuous", "if", "for", "every", "x", "\u2208", "X", "and", "a", "sequence", "(xk", ")", "that", "converges", "to", "x,", "it", "holds", "that", "xk", "\u2192", "x", "=\u21d2", "r(x)\u2264liminfkr(xk).", "(A.1)", "The", "set", "of", "proper", "lsc", "convex", "functions", "on", "X", "is", "denoted", "by", "\u03930(X", ")", "(such", "functions", "are", "also", "called", "closed", "convex", "functions).", "The", "indicator", "function", "of", "a", "set", "C", "is", "defined", "as", "\u03b4C:X\u2192[0,\u221e]:x", "7", "\u2192", "(0,", "ifx\u2208C;", "\u221e,", "ifx", "6", "\u2208C,", "(A.2)", "which", "is", "lsc", "if", "and", "only", "if", "C", "is", "closed.", "The", "convex", "conjugate", "of", "r", "is", "given", "by", "r\u2217(z)", ":=", "supx\u2208dom", "r", "hx,", "zi", "\u2212", "r(x),", "and", "a", "particularly", "important", "example", "is", "the", "Fenchel", "conjugate", "of", "a", "norm", "k\u00b7k", "ifr=k\u00b7k,", "then", "r", "\u2217", "=", "\u03b4k\u00b7k\u2217\u22641,", "(A.3)", "where", "the", "norm", "k\u00b7k\u2217", "is", "dual", "to", "k\u00b7k", ".", "Let", "r", "and", "h", "be", "proper", "convex", "functions.", "The", "infimal", "convolution", "of", "r", "with", "h", "is", "the", "convex", "function", "given", "by", "(r", " ", "h)(x)", ":=", "inf", "y\u2208X", "r(y)", "+", "h(x", "\u2212", "y)).", "For", "our", "purposes,", "the", "most", "important", "special", "case", "is", "infimal", "convolution", "of", "a", "convex", "function", "with", "the", "squared", "euclidean", "norm,", "which", "yields", "the", "Moreau", "envelope", "[65].", "Proposition", "A.1", ".", "Let", "r", "\u2208", "\u03930(X", ")", "and", "let", "\u03b3", ">", "0.", "The", "Moreau", "envelope", "of", "r", "indexed", "by", "\u03b3", "is", "E\u03b3", "r(\u00b7):=r (1", "2\u03b3", "k\u00b7k", "2", "2).", "(A.4)", "The", "Moreau", "envelope", "(A.4)", "is", "convex,", "real-valued,", "and", "continuous.", "Proof.", "See", "e.g", ".", "[11,", "Prop.", "12", ".15].", "Using", "the", "Moreau", "envelope", "(A.4),", "we", "now", "formally", "introduce", "prox", "operators.", "Definition", "A.2", "(Prox", "operator).", "Let", "r", "\u2208", "\u03930(X", "),", "and", "let", "y", "\u2208", "X", ".", "Then", "proxr", "y", "is", "the", "unique", "point", "in", "X", "that", "satisfies", "E", "1", "r(y)=minx\u2208X(r(x)+1", "2kx\u2212yk2", "2", "),", "i.e.,", "proxr", "(y)", ":=", "argmin", "x\u2208X", "r(x)+1", "2kx\u2212yk2", "2,", "(A.5)", "and", "the", "nonlinear", "map", "proxr", ":", "X", "\u2192", "X", "is", "called", "the", "prox", "operator", "of", "r.", "Sometimes", "the", "Fenchel", "conjugate", "r\u2217", "is", "easier", "to", "use", "than", "r;", "similarly,", "sometimes", "the", "operator", "proxr", "\u2217", "is", "easier", "to", "compute", "than", "proxr", ".", "The", "result", "below", "shows", "the", "connection.", "Proposition", "A.3", "(Moreau", "decomposition).", "Let", "r", "\u2208", "\u03930(X", "),", "\u03b3", ">", "0,", "and", "y", "\u2208", "X", ".", "Then,", "y", "=", "prox\u03b3r", "y", "+", "\u03b3", "proxr\u2217/\u03b3(\u03b3\u22121", "y).", "(A.6)", "Proof.", "A", "brief", "exercise;", "see", "e.g", ".,", "[11,", "Thm.", "14", ".3].", "This", "decomposition", "provides", "the", "necessary", "tools", "to", "exploit", "useful", "primal\u2013dual", "relations.", "For", "the", "sake", "of", "clarity", "we", "also", "present", "an", "additional", "result", "regarding", "a", "particular", "primal-dual", "relation", "that", "plays", "a", "key", "role", "in", "our", "algorithms.", "51", "Proposition", "A.4", ".", "Let", "f", "\u2208", "\u03930(X", ")", "and", "r", "\u2208", "\u03930(Z).", "The", "problems", "below", "form", "a", "primal-dual", "pair.", "inf", "x\u2208X", "f(x)+r(Bx)", "s.t.", "Bx\u2208Z", "(A.7)", "inf", "u\u2208Z", "f", "\u2217(\u2212B", "T", "u)+r", "\u2217", "(u).", "(A.8)", "Proof.", "Introduce", "an", "extra", "variable", "z", "=", "B", "x,", "so", "that", "the", "dual", "function", "is", "g(u)", "=", "inf", "x\u2208X", "f(x)+u", "T", "Bx+inf", "z\u2208Z", "r(z)\u2212u", "T", "z,", "which", "upon", "rewriting", "using", "Fenchel", "conjugates", "yields", "(A.8).", "Notions", "on", "submodular", "optimization", "are", "also", "required", "to", "introduce", "some", "of", "the", "decomposition", "techniques", "for", "2D-TV", "in", "this", "paper.", "For", "a", "more", "thorough", "read", "on", "this", "topic", "we", "recommend", "the", "monograph", "Bach", "[5].", "Definition", "A.5", "(Submodular", "function).", "A", "set-function", "F", ":", "2V", "\u2192", "R,", "for", "2V", "the", "power", "set", "of", "some", "set", "V", ",", "is", "submodular", "if", "and", "only", "if", "it", "fulfills", "the", "diminishing", "returns", "property,", "that", "is,", "for", "A", "\u2286", "B", "\u2286", "V", "and", "k", "\u2208", "V", ",", "k/\u2208Bwehave", "F(A\u222a{k})\u2212F(A)\u2265F(B\u222a{k})\u2212F(B).", "Intuitively,", "a", "set-function", "is", "submodular", "if", "adding", "a", "new", "element", "to", "the", "set", "results", "in", "less", "value", "as", "the", "set", "grows", "in", "size.", "Definition", "A.6", "(Modular", "function).", "A", "set-function", "F", ":", "2V", "\u2192", "R,", "for", "2V", "the", "power", "set", "of", "some", "set", "V", ",", "F", "(\u2205)", "=", "0", "is", "modular", "(and", "also", "submodular)", "if", "and", "only", "if", "there", "exists", "s", "\u2208", "Rp", "such", "that", "F", "(A)", "=", "P", "k\u2208A", "sk.", "That", "is,", "a", "function", "is", "modular", "if", "it", "always", "assigns", "the", "same", "value", "for", "each", "element", "added", "to", "the", "set,", "regardless", "of", "the", "other", "elements", "in", "the", "set.", "A", "common", "shorthand", "for", "modular", "functions", "is", "s(A)", "=", "P", "k\u2208A", "sk.", "Submodular", "functions", "can", "be", "thought", "as", "convex", "functions", "in", "the", "realm", "of", "discrete", "optimization,", "in", "the", "sense", "that", "they", "feature", "useful", "properties", "that", "allow", "for", "efficient", "optimization.", "Similarly,", "modular", "functions", "are", "connected", "to", "linear", "functions.", "To", "make", "such", "connections", "explicit", "we", "require", "of", "the", "following", "geometric", "concepts.", "Definition", "A.7", "(Base", "polytope).", "The", "base", "polytope", "BF", "of", "a", "submodular", "function", "F", "is", "the", "polyhedron", "given", "by", "BF={y\u2208Rn", ":y(A)\u2264F(A)\u2200A\u2286V,", "y(V)=F(V)}.", "That", "is,", "the", "base", "polytope", "is", "a", "polyhedron", "defined", "through", "linear", "inequality", "constraints", "on", "the", "values", "of", "F", "for", "every", "one", "of", "the", "n", "elements", "of", "the", "powerset", "2V", ",", "and", "an", "equality", "constraint", "for", "the", "complete", "set.", "This", "results", "in", "a", "combinatorial", "number", "of", "contraints,", "but", "fortunately", "this", "polytope", "will", "not", "be", "used", "directly.", "Definition", "A.8", "(Support", "function).", "The", "support", "function", "hA", "for", "some", "non-empty", "closed", "convex", "set", "A", "\u2208", "Rn", "is", "given", "by", "hA(x)", "=", "sup", " x", "T", "a:x\u2208A", "\t.", "The", "support", "function", "is", "useful", "when", "connected", "with", "the", "following", "definition.", "Definition", "A.9", "(Lov", "\u0301asz", "extension).", "Suppose", "a", "set-function", "F", "such", "that", "F", "(\u2205)", "=", "0.", "Its", "Lov", "\u0301asz", "extension", "f", ":", "Rp", "\u2192", "R", "is", "defined", "through", "the", "following", "mechanism.", "Take", "w", "\u2208", "Rp", "input", "to", "f", ",", "and", "order", "its", "components", "indecreasingorderwj1\u2265", "...\u2265wjp,", "then", "f(w)", "=", "p", "X", "k=1", "[F({j1,...,jk})\u2212F({j1,...,jk\u22121})].", "Other", "equivalent", "definitions", "are", "possible:", "see", "Bach", "[5]", "for", "details.", "The", "following", "result", "links", "all", "the", "definitions", "so", "far.", "52", "Proposition", "A.10.", "For", "F", "submodular", "function", "such", "that", "F", "(\u2205)", "=", "0", "we", "have", "\u2022", "Its", "Lov", "\u0301asz", "extension", "f", "is", "a", "convex", "function.", "\u2022", "The", "support", "function", "of", "its", "base", "polytope", "is", "equal", "to", "its", "Lov", "\u0301asz", "extension,", "that", "is,", "hBF", "(x)", "=", "f", "(x).", "\u2022", "The", "problem", "minS\u2286V", "F(S)", "is", "dual", "to", "minx", "f(x)", "+", "1", "2", "kxk2", "2,", "with", "S\u2217", "=", "{k|x\u2217", "k\u22650}.", "For", "proofs", "on", "these", "points", "we", "refer", "to", "Bach", "[5].", "The", "takeaway", "from", "them", "is", "that", "any", "minimization", "on", "a", "submodular", "function", "can", "be", "cast", "into", "a", "convex", "optimization", "problem.", "Furthermore,", "for", "those", "convex", "minimization", "problems", "whose", "objective", "turns", "out", "to", "be", "the", "Lov", "\u0301asz", "extension", "of", "some", "other", "function,", "we", "can", "trace", "the", "steps", "the", "other", "way", "round,", "obtaining", "the", "minimization", "of", "a", "submodular", "function.", "Consider", "now", "a", "composite", "problem", "minS\u2286V", "P", "j", "Fj", "(S).", "The", "following", "results", "hold", "Proposition", "A.11.", "The", "problem", "minS\u2286V", "P", "j", "Fj", "(S)", "is", "equivalent", "to", "minx", "P", "jfj(x)+1", "2", "kxk2", "2,", "with", "S\u2217", "=", "{k|x\u2217", "k", "\u2265", "0}.", "Furthermore", "it", "is", "also", "equivalent", "to", "minyj", "\u2208BFj", "\u2200j", "1", "2kP", "j", "yjk2", "2,", "with", "x\u2217", "=\u2212", "P", "jy\u2217", "j.", "Proof.", "The", "first", "equivalence", "is", "a", "direct", "result", "of", "the", "properties", "of", "Lov\u0301asz", "extensions", "[5],", "in", "particular", "that", "for", "F,", "G", "set-functions", "with", "Lov", "\u0301asz", "extensions", "f,", "g", ",", "the", "Lov", "\u0301asz", "extension", "of", "F", "+", "G", "is", "f", "+", "g.", "For", "the", "second", "equivalence", "we", "have:", "min", "x", "X", "j", "fj(x)", "+", "1", "2", "kxk", "2", "2=min", "x", "X", "j", "hBFj", "+1", "2", "kxk", "2", "2,", "=", "min", "x", "X", "j", "max", "yj", "\u2208BFj", "yT", "jx+", "1", "2", "kxk", "2", "2,", "=", "max", "yj", "\u2208BFj", "\u2200j", "min", "x", "\uf8eb", "\uf8edX", "j", "yT", "jx+", "1", "2", "kxk", "2", "2", "\uf8f6", "\uf8f8,", "=", "min", "yj", "\u2208BFj", "\u2200j", "1", "2k", "X", "j", "yj", "k2", "2,", "and", "the", "dual", "relationship", "x\u2217", "=\u2212", "P", "jy\u2217", "j", "comes", "from", "solving", "the", "inner", "minx", "problem", "for", "x.", "Therefore", "any", "decomposable", "submodular", "minimization,", "or", "sum", "of", "Lov", "\u0301asz", "extensions", "plus", "`2", "term,", "can", "be", "casted", "into", "a", "geometric", "problem", "in", "terms", "of", "the", "base", "polytopes.", "For", "two", "functions", "the", "resultant", "problem", "is", "of", "special", "interest", "if", "rewritten", "as", "min", "y1\u2208BF1", "y2\u2208BF2", "1", "2ky1+y2k", "2", "2=", "min", "y1", "\u2208BF1", "\u2212", "y2", "\u2208\u2212BF2", "1", "2ky1\u2212(\u2212y2)k", "2", "2=", "min", "a\u2208BF1", "b\u2208\u2212BF2", "1", "2ka\u2212bk2", "2", "with", "a", "=", "y1,", "b", "=", "\u2212y2", ",", "as", "this", "results", "in", "the", "classic", "geometric", "problem", "of", "finding", "the", "closest", "points", "between", "two", "convex", "sets.", "Many", "algorithms", "have", "been", "proposed", "to", "tackle", "problems", "in", "this", "form,", "most", "of", "them", "making", "use", "of", "alternating", "projection", "operations", "onto", "the", "two", "sets.", "Thus,", "a", "legitimate", "concern", "is", "how", "easy", "it", "is", "to", "compute", "such", "projections", "for", "BF1", "and", "\u2212BF2", ".", "Proposition", "A.12.", "Given", "a", "submodular", "function", "F", "and", "its", "base", "polytope", "BF", ",", "the", "projections", "\u03a0BF", "(z)", "and", "\u03a0\u2212BF", "(z)", "of", "a", "point", "z", "onto", "BF", "or", "its", "negated", "counterpart", "can", "be", "computed", "as", "\u03a0BF", "(z)", "=", "z", "\u2212", "proxf(z),", "\u03a0\u2212BF", "(z)", "=", "z", "+", "proxf", "(\u2212z),", "with", "prox", "proximity", "operator", "of", "a", "function,", "f", "the", "Lov", "\u0301asz", "extension", "of", "F", ".", "53", "Proof.", "We", "start", "with", "the", "proximity", "of", "f", "and", "work", "our", "way", "to", "a", "relationship", "with", "the", "projection", "operator,", "proxf", "(z)", "\u2261", "min", "x", "f(x)+1", "2kx\u2212zk", "2", "2,", "=", "max", "y\u2208BF", "min", "x", "yT", "x+", "1", "2kx\u2212zk", "2", "2,", "=", "max", "y\u2208BF", "yT(z\u2212y)+1", "2k(z\u2212y)\u2212zk", "2", "2,", "=", "min", "y\u2208BF", "1", "2", "kyk2", "2\u2212y", "T", "z,", "\u2261", "min", "y\u2208BF", "1", "2ky\u2212zk", "2", "2=\u03a0BF(z),", "where", "solving", "the", "inner", "minimization", "problem", "for", "x", "gives", "the", "primal\u2013dual", "relationship", "x\u2217", "=z\u2212y", "\u2217", ".", "Using", "this", "we", "can", "obtain", "the", "solution", "for", "the", "projection", "problem", "from", "the", "proximity", "problem,", "as", "\u03a0BF", "(z)", "=", "z", "\u2212", "proxf", "(z).", "Projection", "onto", "the", "negated", "base", "polytope", "follows", "from", "the", "basic", "geometric", "argument", "\u03a0\u2212BF", "(z)", "=", "\u2212\u03a0BF", "(\u2212z).", "B", "proxTV", "toolbox", "All", "the", "Total\u2013Variation", "proximity", "solvers", "in", "this", "paper", "have", "been", "implemented", "as", "the", "proxTV", "toolbox", "for", "C++,", "Matlab", "and", "Python,", "available", "at", "https://github.com/albarji/proxTV.", "The", "toolbox", "has", "been", "designed", "to", "be", "used", "out", "of", "the", "box", "in", "a", "user", "friendly", "way;", "for", "instance,", "the", "top\u2013level", "Matlab", "function", "TV", "solves", "Total\u2013Variation", "proximity", "for", "a", "given", "signal", "under", "a", "variety", "of", "settings.", "For", "instance", ">>", "TV(X,", "lambda)", "solves", "Tv1", "proximity", "for", "a", "signal", "X", "of", "any", "dimension", "and", "a", "regularization", "value", "lambda.", "The", "weighted", "version", "of", "this", "problem", "is", "also", "seamlessly", "tackled", "by", "just", "providing", "a", "vector", "of", "weights", "of", "the", "appropriate", "length", "as", "the", "lambda", "parameter.", "If", "a", "third", "parameter", "p", "is", "provided", "as", ">>", "TV(X,lambda", ",", "p)", "the", "general", "Tvp", "proximity", "problem", "is", "addressed,", "whereupon", "an", "adequate", "solver", "is", "chosen", "by", "the", "library.", "More", "advanced", "uses", "of", "the", "library", "are", "possible,", "allowing", "to", "specify", "which", "norm", "p", "and", "regularizer", "lambda", "values", "to", "use", "for", "each", "dimension", "of", "the", "signal,", "and", "even", "applying", "combinations", "of", "several", "different", "Tvp", "regularizers", "along", "the", "same", "dimension.", "Please", "refer", "to", "the", "documentation", "within", "the", "toolbox", "for", "further", "information.", "C", "Proof", "on", "the", "equality", "of", "taut-string", "problems", "Theorem", "C.1", "(Equality", "of", "taut-string", "problems).", "Given", "the", "problems", "min", "s", "n", "X", "i=1", "(si\u2212si\u22121)", "2", ",", "s.t.|si\u2212ri|\u2264wi\u2200i=1,...,n\u22121,s0=0,sn=rn,", "(C.1)", "and", "min", "\u02c6", "s", "n", "X", "i=1", "q1+(\u02c6si", "\u2212", "\u02c6", "si\u22121", ")", "2", ",", "s.t.|\u02c6si", "\u2212ri|\u2264wi\u2200i=1,...,n\u22121,\u02c6", "s0=0,\u02c6", "sn=rn,", "(C.2)", "for", "a", "non-zero", "vector", "w,", "both", "problems", "share", "the", "same", "minimum", "s\u2217", "=\u02c6", "s\u2217", ".", "54", "Proof.", "The", "Lagrangian", "of", "problem", "C.1", "takes", "the", "form", "L(s,\u03b1,\u03b2)=", "n", "X", "i=1", "(si\u2212si\u22121)", "2", "+", "n\u22121", "X", "i=1", "\u03b1i(si", "\u2212", "ri", "\u2212", "wi)", "+", "n\u22121", "X", "i=1", "\u03b2i(\u2212wi", "\u2212", "si", "+", "ri),", "and", "its", "Karush-Kuhn-Tucker", "optimality", "conditions", "are", "given", "by", "(si+1\u2212si)\u2212(si\u2212si\u22121)=\u03b1i", "\u2212\u03b2i,", "(C.3)", "|si\u2212ri|\u2264wi,", "(C.4)", "\u03b1i,\u03b2i\u22650,", "(C.5)", "\u03b1i(si", "\u2212", "ri", "\u2212", "wi)=0,", "(C.6)", "\u03b2i(\u2212wi", "\u2212", "si+ri)=0,", "(C.7)", "\u2200i=1,...,n", "\u22121,andwherethefirstequationcomesfromthefactthat", "\u2202L(s,\u03b1,\u03b2)", "\u2202s", "=", "0", "at", "the", "minimum.", "As", "the", "only", "difference", "between", "problems", "C.1", "and", "C.2", "is", "in", "the", "form", "of", "the", "objective,", "the", "KKT", "conditions", "for", "problem", "C.2", "take", "the", "same", "form,", "but", "for", "the", "first", "one,", "(\u02c6si+1", "\u2212", "\u02c6", "si)", "p1+(\u02c6si+1\u2212", "\u02c6", "si", ")2", "\u2212", "(\u02c6si\u2212\u02c6", "si\u22121)", "p1+(\u02c6si", "\u2212", "\u02c6", "si\u22121", ")2", "=\u02c6", "\u03b1i\u2212", "\u02c6", "\u03b2i,", "(C.8)", "|\u02c6si", "\u2212ri|\u2264wi,", "(C.9)", "\u02c6", "\u03b1i,", "\u02c6", "\u03b2i\u22650,", "(C.10)", "\u02c6", "\u03b1i(\u02c6si", "\u2212", "ri", "\u2212", "wi)=0,", "(C.11)", "\u02c6", "\u03b2i(\u2212wi", "\u2212", "\u02c6", "si+ri)=0,", "(C.12)", "\u2200i", "=", "1,", ".", ".", ".", ",", "n", "\u2212", "1,", "and", "where", "we", "use", "hat", "notation", "for", "the", "dual", "coefficients", "to", "tell", "them", "apart", "from", "those", "of", "problem", "C.1", ".", "Suppose", "s\u2217", "minimizer", "to", "problem", "C.1,", "hence", "fulfilling", "the", "conditions", "C.3-C.7.", "In", "particular", "this", "means", "that", "it", "is", "feasible", "to", "assign", "values", "to", "the", "dual", "coefficients", "\u03b1,", "\u03b2", "in", "such", "a", "way", "that", "the", "conditions", "above", "are", "met.", "Ifweset\u02c6s", "=s", "\u2217", "in", "the", "conditions", "C.8", "-C", ".12", "the", "following", "observations", "are", "of", "relevance", "\u2022", "Condition", "C.9", "becomes", "the", "same", "as", "condition", "C.4,", "and", "so", "it", "is", "immediately", "met.", "\u2022", "The", "operator", "f", "(x)", "=", "x", "\u221a", "1+x2", "is", "contractive", "and", "monotonous.", "\u2022", "The", "couple", "(\u03b1i", ",", "\u03b2i)", "cannot", "be", "both", "non\u2013zero", "at", "the", "same", "time,", "since", "\u03b1i", ">", "0", "enforces", "si", "=", "ri", "+", "wi", "and\u03b2i", ">0enforcessi", "=", "ri", "\u2212wi,", "and", "wiisnon\u2013zero.", "\u2022", "Hence", "and", "because", "\u03b1i,", "\u03b2i", "\u2265", "0", "and", "condition", "C.3", "holds,", "when", "(si+1", "\u2212", "si)", "\u2212", "(si", "\u2212", "si", "\u22121)", ">", "0", "then", "\u03b1i>0,\u03b2i=0,andwhen(si+1\u2212si)\u2212(si\u2212si\u22121)<0then\u03b1i=0,\u03b2i>0.", "\u2022", "f(si+1", "\u2212", "si)", "\u2212f(si", "\u2212", "si", "\u22121)", "has", "the", "same", "sign", "as", "(si+1", "\u2212", "si)", "\u2212(si", "\u2212", "si", "\u22121),", "since", "f", "is", "monotonous", "and", "as", "such", "preserves", "ordering.", "\u2022", "Since", "f", "is", "contractive,", "condition", "C.8", "can", "be", "met", "by", "setting", "(", "\u02c6\u03b1i", ",", "\u02c6", "\u03b2i)=(k\u03b1i,k\u03b2i)forsome0\u2264k<1.", "Note", "that", "this", "works", "because", "(\u03b1i", ",", "\u03b2i)", "cannot", "be", "both", "zero", "at", "the", "same", "time.", "\u2022", "Condition", "C.10", "is", "met", "for", "those", "choices", "of", "\u02c6\u03b1i", ",", "\u02c6", "\u03b2i,asC.5wasmetfor\u03b1i,\u03b2iand0\u2264k<1.", "\u2022", "Conditions", "C.11", "and", "C.12", "are", "also", "met", "for", "those", "choices", "of", "\u02c6\u03b1i", ",", "\u02c6", "\u03b2i,", "as", "\u02c6\u03b1i(si", "\u2212", "ri", "\u2212", "wi)", "=", "k\u03b1i(si", "\u2212", "ri\u2212wi)=0and\u02c6\u03b2i(\u2212wi", "\u2212", "si", "+", "ri)", "=", "k\u03b2i(\u2212wi", "\u2212", "si+ri)=0.", "55", "Therefore,", "all", "of", "the", "optimality", "conditions", "C.8", "-C", ".12", "for", "problem", "C.2", "are", "met", "for", "s\u2217", "solution", "of", "problem", "C.1,", "and", "so", "a", "minimum", "of", "problem", "C.1", "is", "also", "a", "minimum", "for", "problem", "C.2", ".", "The", "proof", "can", "be", "repeated", "the", "other", "way", "round", "by", "setting", "s", "=", "\u02c6", "s\u2217", "optimal", "for", "problem", "C.2,", "defining", "the", "operator", "f", "\u22121", "(x)", "=", "x", "\u221a", "1\u2212x2", ",", "and", "observing", "that", "this", "operator", "is", "monotonous", "and", "expansive,", "so", "we", "can", "establish", "(\u03b1i,", "\u03b2i)", "=(k\u02c6\u03b1i,", "k", "\u02c6", "\u03b2i)", "for", "some", "k", "\u2265", "1", "and", "the", "optimality", "conditions", "C.3-C.7", "for", "problem", "C.1", "are", "met", "following", "a", "similar", "reasoning", "to", "the", "one", "presented", "above.", "Thus,", "a", "minimum", "for", "problem", "C.2", "is", "also", "a", "minimum", "for", "problem", "C.1,", "which", "joined", "with", "the", "previous", "result", "completes", "the", "proof.", "D", "Proof", "on", "the", "equivalence", "of", "linearized", "taut-string", "method", "Proposition", "D.1", ".", "Using", "affine", "approximations", "to", "the", "greatest", "convex", "minorant", "and", "the", "smallest", "concave", "majorant", "does", "not", "change", "the", "solution", "of", "the", "taut-string", "method.", "Proof.", "Let", "us", "note", "\u2229(f", ")", "as", "the", "smallest", "concave", "majorant", "of", "some", "function", "f", "taking", "integer", "values,", "\u222a(f", ")", "as", "the", "greatest", "concave", "minorant,", "\u0304", "a(f)", "as", "the", "smallest", "affine", "majorant", "and", "\u0304", "a(f", ")", "as", "the", "greatest", "affine", "minorant.", "By", "definition", "we", "have", "\u0304", "a(f(i))", "\u2264", "\u222a(f(i))", "\u2264", "f(i)", "\u2264", "\u2229(f(i))", "\u2264", "\u0304a(f(i))", "\u2200i", "\u2208", "Z", "Consider", "now", "the", "nature", "of", "the", "taut-string", "problem,", "where", "a", "vertically", "symmetric", "tube", "of", "radius", "\u03bbi", "at", "each", "section", "is", "modelled", "by", "following", "the", "majorant", "of", "the", "tube", "bottom", "(f", "\u2212", "\u03bb)", "and", "the", "minorant", "of", "the", "tube", "ceiling", "(f", "+", "\u03bb).", "We", "work", "the", "inequalities", "above", "as:", "f(i)\u2212\u03bbi\u2264\u2229(f(i)\u2212\u03bbi)\u2264\u0304a(f(i)\u2212\u03bbi)", "\u0304", "a(f(i)+\u03bbi)\u2264\u222a(f(i)+\u03bbi)\u2264f(i)+\u03bbi", "We", "will", "show", "that", "an", "overlap", "of", "smallest", "concave", "majorant", "/", "greatest", "convex", "minorant", "takes", "place", "iff", "the", "same", "overlap", "happens", "when", "using", "the", "affine", "approximations.", "We", "formally", "define", "overlap", "as", "the", "setting", "where", "forapointiwehave\u222a(fi+\u03bbi)\u2264\u2229(fi\u2212\u03bbi).", "One", "side", "of", "the", "implication", "is", "easy:", "if", "\u222a(f(i)", "+", "\u03bbi)", "\u2264", "\u2229(f", "(i)", "\u2212", "\u03bb)", "for", "some", "i,", "then", "using", "the", "relations", "above", "we", "have", "\u0304", "a(f(i)", "+", "\u03bbi)", "\u2264", "\u222a(f(i)", "+", "\u03bbi)", "\u2264", "\u2229(f(i)", "\u2212", "\u03bbi)", "\u2264", "\u0304a(f(i)", "\u2212", "\u03bbi),", "and", "so", "the", "affine", "approximation", "detects", "any", "overlap", "taking", "place", "in", "the", "concave/convex", "counterpart.", "The", "opposite", "requires", "the", "key", "observation", "that", "in", "the", "taut-string", "method", "both", "majorant", "and", "minorant", "functions", "are", "clamped", "to", "the", "same", "point", "of", "origin:", "f", "(0)", "=", "0", "at", "the", "start", "of", "the", "method,", "or", "the", "point", "where", "the", "last", "segment", "was", "fixed", "after", "each", "restart.", "Let", "us", "assume", "f", "(0)", "=", "0", "without", "loss", "of", "generality.", "Suppose", "now", "that", "an", "overlap", "is", "detected", "by", "the", "affine", "approximation.", "Because", "of", "this", "affine", "nature", "the", "majorant/minorant", "slopes", "are", "constant,", "i.e.", "\u0304", "\u03b41=", "\u0304", "\u03b42=...=", "\u0304", "\u03b4n=", "\u0304", "\u03b4,", "\u0304", "\u03b41=", "\u0304", "\u03b42=...=", "\u0304", "\u03b4n=", "\u0304", "\u03b4.", "However,", "if", "we", "consider", "the", "convex/concave", "approximations", "these", "slopes", "can", "increase/decrease", "as", "the", "segment", "progresses,", "that", "is:", "\u03b4\u222a", "1", "\u2264\u03b4\u222a", "2", "\u2264...\u2264\u03b4\u222a", "n,", "\u03b4\u2229", "1", "\u2265\u03b4\u2229", "2", "\u2265...\u2265\u03b4\u2229", "n.", "Consider", "now", "the", "majorant/minorant", "values,", "expressed", "through", "the", "slopes", "and", "taking", "into", "account", "the", "observa-", "tion", "above", "about", "the", "starting", "point.", "\u2229(f(i)", "\u2212", "\u03bbi)", "=", "i", "X", "j=1", "\u03b4\u2229", "j,", "\u222a(f(i)+\u03bbi)", "=", "i", "X", "j=1", "\u03b4\u222a", "j,", "\u0304", "a(f(i)\u2212\u03bbi)=i", "\u0304", "\u03b4,", "\u0304", "a(f(i)", "+", "\u03bbi)", "=i", "\u0304", "\u03b4.", "56", "Since", "an", "overlap", "has", "been", "detected", "in", "the", "affine", "approximation,", "we", "have", "that", "for", "some", "point", "i", "i", "\u0304", "\u03b4=", "\u0304", "a(f(i)+\u03bbi)\u2264\u0304a(f(i)\u2212\u03bbi)=i", "\u0304", "\u03b4,", "so", "\u0304", "\u03b4", "\u2264", "\u0304\u03b4", ".", "Consider", "now", "the", "values", "of", "the", "affine", "minorant/majorant", "at", "the", "point", "immediately", "after", "the", "origin,", "\u0304", "a(f1\u2212\u03bb1)=", "\u0304", "\u03b4,", "\u0304", "a(f1+\u03bb1)=", "\u0304", "\u03b4.", "We", "will", "show", "now", "that", "the", "convex/convex", "counterpart", "must", "take", "exactly", "the", "same", "values", "at", "these", "points.", "To", "do", "so", "we", "take", "into", "account", "the", "following", "fact:", "there", "must", "exist", "points", "x", "and", "y,", "x,", "y", "\u2264", "i,", "where", "\u0304", "a(fx+\u03bbx)", "=fx+\u03bbx", "=", "\u222a(fx+\u03bbx),", "\u0304", "a(fy\u2212\u03bby)=fy\u2212\u03bby=\u2229(fy\u2212\u03bby),", "that", "is", "to", "say,", "the", "affine", "minorant/majorant", "must", "touch", "the", "tube", "ceiling/bottom", "at", "some", "point,", "otherwise", "we", "could", "obtain", "a", "greater", "minorant", "/", "smaller", "majorant", "by", "reducing", "this", "distance.", "The", "equalities", "to", "the", "convex", "minorant", "/", "concave", "majorant", "are", "then", "obtained", "by", "exploiting", "the", "inequalities", "at", "the", "beginning", "of", "the", "proof.", "By", "the", "already", "presented", "inequalities", "\u222a(f1", "+", "\u03bb1)", "\u2265", "\u0304", "a(f1", "+", "\u03bb1),", "but", "let", "us", "suppose", "for", "a", "moment", "\u222a(f1+\u03bb1)>", "\u0304", "a(f1", "+", "\u03bb1).", "This", "would", "imply", "\u03b4\u222a", "1>", "\u0304", "\u03b4.", "We", "then", "would", "have", "that", "at", "the", "touching", "point", "x", "fx+\u03bbx", "=", "\u0304", "a(fx+\u03bbx)", "=x", "\u0304", "\u03b4<x\u03b4", "\u222a", "1", "\u2264\u222a(f1+\u03bb1),", "as", "the", "slopes", "in", "a", "convex", "minorant", "must", "be", "monotonically", "increasing.", "However,", "such", "function", "would", "not", "be", "a", "valid", "convex", "minorant,", "as", "it", "would", "grow", "over", "f", "+", "\u03bb.", "Therefore", "\u222a(f1", "+", "\u03bb1)", "=", "\u0304", "a(f1", "+", "\u03bb1)", "must", "hold.", "Using", "a", "symmetric", "argument,", "\u2229(f1", "\u2212", "\u03bb1)", "=", "\u0304", "a(f1", "\u2212", "\u03bb1)", "can", "also", "be", "shown", "to", "hold.", "Joining", "this", "with", "the", "previous", "facts", "we", "have", "that", "\u222a(f1+\u03bb1)=", "\u0304", "a(f1+\u03bb1)=", "\u0304", "\u03b4\u2264\u0304\u03b4=\u0304", "a(f1\u2212\u03bb1)=\u2229(f1\u2212\u03bb1),", "and", "therefore", "the", "overlap", "detected", "by", "the", "affine", "approximation", "is", "detected", "through", "its", "convex/concave", "version", "as", "well", "through", "\u222a(f1", "+", "\u03bb1)", "\u2264", "\u2229(f1", "\u2212", "\u03bb1).", "E", "Projected-newton", "for", "weighted", "Tv1D", "1", "In", "this", "appendix", "we", "present", "details", "of", "a", "projected-Newton", "(PN)", "approach", "to", "solving", "the", "weighted-TV", "prob-", "lem", "(2.6).", "Although", "taut-string", "approaches", "are", "empirically", "superior", "to", "this", "PN", "approach,", "the", "details", "of", "this", "derivation", "prove", "to", "be", "useful", "when", "developing", "subroutines", "for", "handling", "`p", "-norm", "TV", "prox-operators,", "but", "perhaps", "their", "greatest", "use", "lies", "in", "presenting", "a", "general", "method", "that", "could", "be", "applied", "to", "other", "problems", "that", "have", "structures", "similar", "to", "TV,", "e.g", ".,", "group", "total-variation", "[2,", "94]", "and", "`1", "-trend", "filtering", "[47,", "87].", "The", "weighted-TV", "dual", "problem", "(2.7)", "is", "a", "bound-constrained", "QP,", "so", "it", "could", "be", "solved", "using", "a", "variety", "of", "methods", "such", "as", "TRON", "[56],", "L-BFGS-B", "[19],", "or", "projected-Newton", "(PN)", "[14].", "Obviously,", "these", "methods", "will", "be", "inefficient", "if", "invoked", "off-the-shelf;", "exploitation", "of", "problem", "structure", "is", "a", "must", "for", "solving", "(2.7)", "efficiently.", "PN", "lends", "itself", "well", "to", "such", "structure", "exploitation;", "we", "describe", "the", "details", "below.", "PN", "runs", "iteratively", "in", "three", "key", "steps:", "first", "it", "identifies", "a", "special", "subset", "of", "active", "variables", "and", "uses", "these", "to", "compute", "a", "reduced", "Hessian.", "Then,", "it", "uses", "this", "Hessian", "to", "scale", "the", "gradient", "and", "move", "in", "the", "direction", "opposite", "to", "it,", "damping", "with", "a", "stepsize,", "if", "needed.", "Finally,", "the", "next", "iterate", "is", "obtained", "by", "projecting", "onto", "the", "constraints,", "and", "the", "cycle", "repeats.", "PN", "can", "be", "regarded", "as", "an", "extension", "of", "the", "gradient-projection", "method", "(GP,", "[15]),", "where", "the", "components", "of", "the", "gradient", "that", "make", "the", "updating", "direction", "infeasible", "are", "removed;", "in", "PN", "both", "the", "gradient", "and", "the", "Hessian", "are", "reduced", "to", "guarantee", "this", "feasibility.", "At", "each", "iteration", "PN", "selects", "the", "active", "variables", "I:=", "{i|(ui", "=", "\u2212wi", "and[\u2207\u03c6(u)]i>", " )", "or", "(ui", "=", "wi", "and[\u2207\u03c6(u)]i", "<\u2212 )},", "(E.1)", "57", "where", " ", "\u2265", "0", "is", "small", "scalar.", "This", "corresponds", "to", "the", "set", "of", "variables", "at", "a", "bound,", "and", "for", "which", "the", "gradient", "points", "inside", "the", "feasible", "region;", "that", "is,", "for", "these", "variables", "to", "further", "improve", "the", "objective", "function", "we", "would", "have", "to", "step", "out", "of", "bounds.", "It", "is", "thus", "clear", "that", "these", "variables", "are", "of", "no", "use", "for", "this", "iteration,", "so", "we", "define", "the", "complementary", "set", "\u0304I", ":=", "{1", ".", ".", ".", "n}", "\\I", "of", "indices", "not", "in", "I", ",", "which", "are", "the", "variables", "we", "are", "interested", "in", "updating.", "From", "the", "Hessian", "H", "=", "\u22072\u03c6(u)", "we", "extract", "the", "reduced", "Hessian", "H", "\u0304I", "by", "selecting", "rows", "and", "columns", "indexed", "by", "\u0304I", ",", "and", "in", "a", "similar", "way", "the", "reduce", "gradient", "[\u2207\u03c6(u)]", "\u0304I", ".", "Using", "these", "we", "perform", "a", "Newton\u2013like", "\u201creduced\u201d", "update", "in", "the", "form", "u\u0304I", "\u2190", "P(u\u0304I", "\u2212", "\u03b1H", "\u22121", "\u0304", "I", "[\u2207\u03c6(u)]", "\u0304I", "),", "(E.2)", "where", "\u03b1", "is", "a", "stepsize,", "and", "P", "denotes", "projection", "onto", "the", "constraints,", "which", "for", "box\u2013constraints", "reduces", "to", "simple", "element\u2013wise", "projection.", "Note", "that", "only", "the", "variables", "in", "the", "set", "\u0304I", "are", "updated", "in", "this", "iterate,", "leaving", "the", "rest", "unchanged.", "While", "such", "update", "requires", "computing", "the", "inverse", "of", "the", "reduced", "Hessian", "H", "\u0304I", ",", "which", "in", "the", "general", "case", "can", "amount", "to", "computational", "costs", "in", "the", "O(n3", ")", "order,", "we", "will", "see", "now", "how", "exploiting", "the", "structure", "of", "the", "problem", "allows", "us", "to", "perform", "all", "the", "steps", "above", "efficiently.", "First,", "observe", "that", "for", "(2.7)", "the", "Hessian", "is", "H=DD", "T", "=", "\uf8eb", "\uf8ec", "\uf8ec", "\uf8ec", "\uf8ec", "\uf8ec", "\uf8ec", "\uf8ed", "2\u22121", "\u22121", "2\u22121", "\u22121", "2", ".", ".", ".", ".", ".", ".", ".", ".", ".", "\u22121", "\u22121", "2", "\uf8f6", "\uf8f7", "\uf8f7", "\uf8f7", "\uf8f7", "\uf8f7", "\uf8f7", "\uf8f8", "\u2208", "R(n\u22121)\u00d7(n\u22121)", ".", "Next,", "observe", "that", "whatever", "the", "active", "set", "I", ",", "the", "corresponding", "reduced", "Hessian", "H", "\u0304I", "remains", "symmetric", "tridiagonal.", "This", "observation", "is", "crucial", "because", "then", "we", "can", "quickly", "compute", "the", "updating", "direction", "d", "\u0304I", "=", "H\u22121", "\u0304", "I", "[\u2207\u03c6(u)]", "\u0304I", ",", "which", "can", "be", "done", "by", "solving", "the", "linear", "system", "H", "\u0304I", "d", "\u0304I", "=", "[\u2207\u03c6(ut", ")]", "\u0304I", "as", "follows:", "1.", "Compute", "the", "Cholesky", "decomposition", "H", "\u0304I", "=", "RTR.", "2.", "Solve", "the", "linear", "system", "RT", "v", "=", "[\u2207\u03c6(u)]", "\u0304I", "to", "obtain", "v.", "3.", "Solve", "the", "linear", "system", "Rd", "\u0304I", "=", "v", "to", "obtaind\u0304I", ".", "Because", "the", "reduced", "Hessian", "is", "also", "tridiagonal,", "its", "Cholesky", "decomposition", "can", "be", "computed", "in", "linear", "time", "to", "yield", "a", "bidiagonal", "matrix", "R,", "which", "in", "turn", "allows", "to", "solve", "the", "subsequent", "linear", "systems", "also", "in", "linear", "time.", "Extremely", "efficient", "routines", "to", "perform", "all", "these", "tasks", "are", "available", "in", "the", "LAPACK", "libraries", "[3].", "The", "next", "crucial", "ingredient", "is", "efficient", "selection", "of", "the", "stepsize", "\u03b1.", "The", "original", "PN", "algorithm", "Bertsekas", "[14]", "recommends", "Armijo-search", "along", "projection", "arc.", "However,", "for", "our", "problem", "this", "search", "is", "inordinately", "expensive.", "So", "we", "resort", "to", "a", "backtracking", "strategy", "using", "quadratic", "interpolation", "[67],", "which", "works", "admirably", "well.", "This", "strategy", "is", "as", "follows:", "start", "with", "an", "initial", "stepsize", "\u03b10", "=", "1.", "If", "the", "current", "stepsize", "\u03b1k", "does", "not", "provide", "sufficient", "decrease", "in", "\u03c6,", "build", "a", "quadratic", "model", "using", "\u03c6(u),", "\u03c6(u", "\u2212", "\u03b1k", "d),", "and", "\u2202\u03b1k", "\u03c6(u).", "Then,", "the", "stepsize", "\u03b1k+1", "is", "set", "to", "the", "value", "that", "minimizes", "this", "quadratic", "model.", "In", "the", "event", "that", "at", "some", "point", "of", "the", "procedure", "the", "new", "\u03b1k+1", "is", "larger", "than", "or", "too", "similar", "to", "\u03b1k", ",", "its", "value", "is", "halved.", "In", "this", "fashion,", "quadratic", "approximations", "of", "\u03c6", "are", "iterated", "until", "a", "good", "enough", "\u03b1", "is", "found.", "The", "goodness", "of", "a", "stepsize", "is", "measured", "using", "the", "following", "Armijo-like", "sufficient", "descent", "rule", "\u03c6(u)\u2212\u03c6(P[u\u2212\u03b1kd])\u2265\u03c3\u00b7\u03b1k", "\u00b7(\u2207\u03c6(u)\u00b7d),", "where", "a", "tolerance", "\u03c3", "=", "0.05", "works", "well", "practice.", "Note", "that", "the", "gradient", "\u2207\u03c6(u)", "might", "be", "misleading", "in", "the", "condition", "above", "if", "u", "has", "components", "at", "the", "boundary", "and", "d", "points", "outside", "this", "boundary", "(because", "then,", "due", "to", "the", "subsequent", "projection", "no", "real", "im-", "provement", "would", "be", "obtained", "by", "stepping", "outside", "the", "feasible", "region).", "To", "address", "this", "concern,", "we", "modify", "the", "computation", "of", "the", "gradient", "\u2207\u03c6(u),", "zeroing", "our", "the", "entries", "that", "relate", "to", "direction", "components", "pointing", "outside", "the", "feasible", "set.", "58", "Algorithm", "11", "Stepsize", "selection", "for", "Projected", "Newton", "Initialize:", "\u03b10", "=", "1,", "k", "=", "0,", "d,", "tolerance", "parameter", "\u03c3", "while\u03c6(u)\u2212\u03c6(P[u\u2212\u03b1kd])<\u03c3", "\u00b7\u03b1k", "\u00b7(\u2207\u03c6(u)\u00b7d)do", "Minimize", "quadratic", "model:", "\u03b1k+1", "=", "\u03b1", "2", "k", "\u2202\u03b1k", "\u03c6(u)", "2(\u03c6(u)\u2212\u03c6(u\u2212\u03b1k", ")+\u03b1k", "\u2202\u03b1k", "\u03c6(u))", ".", "if\u03b1k+1>\u03b1kor\u03b1k+1'\u03b1k,then\u03b1k+1=", "1", "2\u03b1k.", "k\u2190k+1", "end", "while", "return", "\u03b1k", "Algorithm", "12", "PN", "algorithm", "for", "TV-L1-proximity", "Let", "W", "=", "Diag(wi);", "solve", "DDT", "W", "u\u2217", "=", "Dy.", "if", "kW\u22121u", "\u2217", "k\u221e", "\u2264", "1,", "return", "u\u2217", ".", "u", "0=P[u", "\u2217", "],t", "=0.", "while", "gap(u)", ">", " ", "do", "Identify", "set", "of", "active", "constraints", "I;", "let", "\u0304I", "=", "{1.", "..", "n}", "\\", "I.", "Construct", "reduced", "Hessian", "H", "\u0304I", ".", "Solve", "H\u0304Id\u0304I", "=", "[\u2207\u03c6(ut", ")]", "\u0304I", ".", "Compute", "stepsize", "\u03b1", "using", "backtracking", "+", "interpolation", "(Alg.", "11).", "Update", "u", "t+1", "\u0304", "I", "=", "P[ut", "\u0304", "I", "\u2212", "\u03b1d\u0304I].", "t\u2190t+1.", "end", "while", "return", "ut.", "The", "whole", "stepsize", "selection", "procedure", "is", "shown", "in", "Algorithm", "11.", "The", "costliest", "operation", "in", "this", "procedure", "is", "the", "evaluation", "of", "\u03c6,", "which,", "nevertheless", "can", "be", "done", "in", "linear", "time.", "Furthermore,", "in", "practice", "a", "few", "iterations", "more", "than", "suffice", "to", "obtain", "a", "good", "stepsize.", "Overall,", "a", "full", "PN", "iteration", "as", "described", "above", "runs", "at", "O(n)", "cost.", "Thus,", "by", "exploiting", "the", "structure", "of", "the", "problem,", "we", "manage", "to", "reduce", "the", "O(n3", ")", "cost", "per", "iteration", "of", "a", "general", "PN", "algorithm", "to", "a", "linear-cost", "method.", "The", "pseudocode", "of", "the", "resulting", "method", "is", "shown", "as", "Algorithm", "12.", "Note", "that", "in", "the", "special", "case", "when", "the", "weights", "W", ":=", "Diag(wi)", "are", "so", "large", "that", "the", "unconstrained", "optimum", "coincides", "with", "the", "constrained", "one,", "we", "can", "obtain", "u\u2217", "directly", "via", "solving", "DDT", "W", "u\u2217", "=", "Dy", "(which", "can", "also", "be", "done", "at", "O(n)", "cost).", "The", "duality", "gap", "of", "the", "current", "solution", "is", "used", "as", "a", "stopping", "criterion,", "where", "we", "use", "a", "tolerance", "of", " ", "=", "10\u22125", "in", "practice.", "F", "Testing", "images", "and", "videos,", "and", "experimental", "results", "The", "images", "used", "in", "the", "experiments", "are", "displayed", "in", "what", "follows,", "along", "with", "their", "noisy/denoised", "and", "convoluted/deconvoluted", "versions", "for", "each", "algorithm", "tested.", "QR", "barcode", "images", "were", "generated", "by", "encoding", "random", "text", "using", "Google", "chart", "API4", ".", "Images", "shape", "and", "phantom", "5", "are", "publicly", "available", "and", "frequently", "used", "in", "image", "processing.", "trollface", "and", "comic", "6", "are", "also", "publicly", "available.", "gaudi,", "used", "in", "the", "multicore", "experiments,", "is", "a", "high", "resolution", "3197", "\u00d7", "3361", "photograph", "of", "Gaudi\u2019s", "Casa", "Batll", "\u0301o7", ".", "The", "rest", "of", "the", "images", "were", "originally", "created", "by", "the", "authors.", "For", "the", "video", "experiments,", "the", "salesman,", "coastguard", "and", "bicycle", "sequences", "were", "used,", "which", "are", "publicly", "available", "at", "[18].", "As", "an", "example,", "frames", "from", "the", "first", "video", "are", "displayed", "in", "what", "follows,", "along", "with", "their", "noisy/denoised", "versions.", "4http://code.google.com/intl/en-", "EN/apis/chart/", "5Extracted", "from", "http://en.wikipedia.org/wiki/File:Shepp_logan.png", "6Author:", "Francisco", "Molina.", "http://www.afrikislife.net/english/", "7Extracted", "from", "http://www.flickr.com/photos/jeffschwartz/202423023/", "randomQR-0", "(100", "\u00d7", "100)", "randomQR-1", "(175", "\u00d7", "175)", "randomQR-2", "(300", "\u00d7", "300)", "randomQR-3", "(375", "\u00d7", "375)", "randomQR-4", "(500", "\u00d7", "500)", "shape", "(128", "\u00d7", "128)", "trollface", "(388", "\u00d7", "388)", "diagram", "(259", "\u00d7", "259)", "text", "(665", "\u00d7", "665)", "comic", "(402", "\u00d7", "402)", "contour", "(1000", "\u00d7", "1000)", "phantom", "(1713", "\u00d7", "1713)", "Figure", "25:", "Test", "images", "used", "in", "the", "experiments", "together", "with", "their", "sizes", "in", "pixels.", "Images", "displayed", "have", "been", "scaled", "down", "to", "fit", "in", "page.", "randomQR-0", "(100", "\u00d7", "100)", "randomQR-1", "(175", "\u00d7", "175)", "randomQR-2", "(300", "\u00d7", "300)", "randomQR-3", "(375", "\u00d7", "375)", "randomQR-4", "(500", "\u00d7", "500)", "shape", "(128", "\u00d7", "128)", "trollface", "(388", "\u00d7", "388)", "diagram", "(259", "\u00d7", "259)", "text", "(665", "\u00d7", "665)", "comic", "(402", "\u00d7", "402)", "contour", "(1000", "\u00d7", "1000)", "phantom", "(1713", "\u00d7", "1713)", "Figure", "26:", "Noisy", "versions", "of", "images", "used", "in", "the", "experiments.", "randomQR-0", "(100", "\u00d7", "100)", "randomQR-1", "(175", "\u00d7", "175)", "randomQR-2", "(300", "\u00d7", "300)", "randomQR-3", "(375", "\u00d7", "375)", "randomQR-4", "(500", "\u00d7", "500)", "shape", "(128", "\u00d7", "128)", "trollface", "(388", "\u00d7", "388)", "diagram", "(259", "\u00d7", "259)", "text", "(665", "\u00d7", "665)", "comic", "(402", "\u00d7", "402)", "contour", "(1000", "\u00d7", "1000)", "phantom", "(1713", "\u00d7", "1713)", "Figure", "27:", "Denoising", "results", "for", "the", "test", "images.", "randomQR-0", "(100", "\u00d7", "100)", "randomQR-1", "(175", "\u00d7", "175)", "randomQR-2", "(300", "\u00d7", "300)", "randomQR-3", "(375", "\u00d7", "375)", "randomQR-4", "(500", "\u00d7", "500)", "shape", "(128", "\u00d7", "128)", "trollface", "(388", "\u00d7", "388)", "diagram", "(259", "\u00d7", "259)", "text", "(665", "\u00d7", "665)", "comic", "(402", "\u00d7", "402)", "contour", "(1000", "\u00d7", "1000)", "phantom", "(1713", "\u00d7", "1713)", "Figure", "28:", "Noisy", "and", "convoluted", "versions", "of", "images", "used", "in", "the", "experiments.", "randomQR-0", "(100", "\u00d7", "100)", "randomQR-1", "(175", "\u00d7", "175)", "randomQR-2", "(300", "\u00d7", "300)", "randomQR-3", "(375", "\u00d7", "375)", "randomQR-4", "(500", "\u00d7", "500)", "shape", "(128", "\u00d7", "128)", "trollface", "(388", "\u00d7", "388)", "diagram", "(259", "\u00d7", "259)", "text", "(665", "\u00d7", "665)", "comic", "(402", "\u00d7", "402)", "contour", "(1000", "\u00d7", "1000)", "phantom", "(1713", "\u00d7", "1713)", "Figure", "29:", "Deconvolution", "results", "for", "the", "test", "images.", "Figure", "30:", "A", "selection", "of", "frames", "from", "the", "salesman", "video", "sequence.", "Figure", "31:", "Noisy", "frames", "from", "the", "salesman", "video", "sequence.", "Figure", "32:", "Denoised", "frames", "from", "the", "salesman", "video", "sequence."], "positions": [[512, 270, 759, 320], [776, 270, 1033, 335], [1055, 270, 1415, 335], [1435, 270, 1518, 320], [1536, 270, 2036, 320], [866, 363, 1268, 413], [1287, 363, 1684, 428], [387, 502, 396, 510], [375, 513, 495, 543], [507, 514, 652, 543], [1617, 519, 2171, 544], [374, 565, 497, 589], [509, 563, 541, 589], [552, 564, 707, 597], [718, 563, 762, 589], [774, 564, 980, 590], [992, 563, 1048, 589], [1060, 563, 1242, 590], [1248, 564, 1302, 589], [1302, 564, 1402, 589], [1413, 563, 1446, 589], [1456, 563, 1570, 589], [372, 611, 519, 635], [532, 611, 592, 635], [594, 610, 626, 635], [635, 619, 652, 643], [665, 609, 781, 636], [794, 610, 834, 640], [847, 609, 965, 640], [979, 610, 1063, 643], [375, 681, 485, 711], [497, 681, 572, 711], [1865, 687, 2172, 712], [373, 735, 543, 769], [547, 736, 597, 769], [605, 736, 783, 769], [794, 735, 851, 761], [859, 737, 991, 761], [1002, 736, 1119, 769], [372, 786, 590, 812], [600, 788, 721, 812], [732, 787, 766, 820], [772, 786, 939, 820], [951, 787, 1043, 819], [1059, 786, 1229, 820], [1242, 787, 1295, 812], [1205, 874, 1344, 901], [534, 944, 583, 969], [595, 943, 674, 977], [686, 945, 731, 970], [739, 943, 957, 977], [970, 952, 986, 969], [996, 943, 1097, 977], [1107, 943, 1177, 969], [1187, 943, 1332, 977], [1343, 943, 1386, 969], [1396, 943, 1518, 977], [1530, 943, 1679, 969], [1690, 943, 1810, 977], [1825, 944, 1855, 969], [1865, 943, 2015, 977], [2028, 952, 2070, 970], [478, 999, 598, 1024], [612, 990, 735, 1016], [747, 990, 907, 1024], [922, 990, 966, 1016], [978, 990, 1139, 1024], [1152, 994, 1374, 1024], [1389, 990, 1433, 1016], [1444, 990, 1475, 1025], [1479, 999, 1572, 1016], [1584, 991, 1636, 1016], [1651, 990, 1709, 1016], [1722, 994, 1796, 1016], [1808, 990, 1956, 1024], [1968, 999, 2070, 1024], [478, 1036, 554, 1062], [565, 1036, 587, 1062], [598, 1036, 627, 1066], [632, 1045, 722, 1062], [732, 1037, 783, 1067], [795, 1036, 837, 1062], [848, 1036, 941, 1063], [951, 1040, 1154, 1070], [1165, 1045, 1207, 1063], [1217, 1040, 1323, 1070], [1334, 1045, 1349, 1062], [1360, 1045, 1419, 1063], [1430, 1036, 1576, 1070], [1588, 1036, 1705, 1070], [1716, 1036, 1805, 1063], [1815, 1036, 1919, 1063], [1931, 1045, 1946, 1062], [1955, 1036, 2069, 1062], [478, 1083, 616, 1110], [627, 1083, 790, 1109], [800, 1087, 829, 1109], [839, 1083, 992, 1117], [1004, 1083, 1137, 1109], [1152, 1083, 1216, 1109], [1228, 1083, 1391, 1109], [1401, 1087, 1474, 1109], [1486, 1087, 1533, 1109], [1543, 1087, 1571, 1109], [1581, 1083, 1616, 1109], [1626, 1083, 1796, 1117], [1806, 1083, 1897, 1109], [1908, 1092, 1937, 1109], [1949, 1083, 1968, 1109], [1980, 1083, 2069, 1110], [478, 1129, 541, 1156], [556, 1138, 606, 1155], [618, 1133, 760, 1163], [774, 1129, 877, 1163], [890, 1129, 1127, 1163], [1140, 1129, 1238, 1155], [1252, 1129, 1280, 1155], [1294, 1129, 1417, 1155], [1429, 1129, 1568, 1163], [1581, 1129, 1635, 1155], [1647, 1129, 1825, 1163], [1841, 1130, 1946, 1155], [1960, 1129, 2073, 1160], [480, 1176, 637, 1210], [649, 1176, 872, 1202], [882, 1176, 1016, 1202], [1031, 1177, 1090, 1203], [1102, 1177, 1206, 1202], [1219, 1176, 1322, 1203], [1333, 1176, 1447, 1210], [1458, 1176, 1503, 1202], [1513, 1176, 1657, 1202], [1668, 1176, 1711, 1202], [1720, 1176, 1845, 1210], [1856, 1185, 1932, 1202], [1943, 1176, 2071, 1210], [479, 1223, 545, 1255], [556, 1231, 587, 1248], [596, 1222, 899, 1256], [911, 1223, 959, 1248], [972, 1222, 1074, 1249], [1086, 1222, 1181, 1249], [1192, 1231, 1208, 1248], [1218, 1222, 1343, 1248], [1352, 1222, 1487, 1256], [1498, 1222, 1687, 1256], [1698, 1222, 1842, 1256], [1856, 1223, 1905, 1248], [1915, 1222, 2014, 1249], [2026, 1222, 2070, 1248], [479, 1269, 614, 1295], [625, 1269, 668, 1295], [678, 1278, 712, 1295], [723, 1278, 799, 1303], [810, 1269, 842, 1295], [851, 1269, 976, 1295], [988, 1269, 1139, 1303], [1150, 1269, 1202, 1295], [1215, 1273, 1337, 1303], [1350, 1269, 1403, 1295], [1414, 1269, 1544, 1295], [1555, 1269, 1599, 1295], [1610, 1269, 1725, 1295], [1737, 1269, 1769, 1295], [1778, 1278, 1828, 1295], [1838, 1269, 1963, 1295], [1973, 1269, 2070, 1303], [478, 1316, 592, 1350], [603, 1316, 737, 1343], [749, 1316, 816, 1342], [827, 1316, 858, 1342], [866, 1316, 1043, 1350], [1054, 1325, 1089, 1342], [1101, 1316, 1131, 1349], [1144, 1316, 1232, 1350], [1243, 1316, 1391, 1350], [1405, 1316, 1445, 1349], [1458, 1316, 1546, 1350], [1557, 1316, 1770, 1347], [1783, 1316, 1834, 1349], [1847, 1316, 1906, 1342], [1917, 1316, 2030, 1343], [2041, 1316, 2073, 1342], [479, 1362, 652, 1393], [664, 1362, 716, 1388], [728, 1362, 777, 1395], [789, 1362, 868, 1389], [880, 1362, 1030, 1396], [1044, 1363, 1080, 1388], [1091, 1362, 1253, 1388], [1263, 1371, 1311, 1388], [1322, 1362, 1416, 1388], [1428, 1362, 1480, 1388], [1489, 1362, 1586, 1396], [1596, 1371, 1660, 1396], [1670, 1362, 1894, 1396], [1907, 1371, 1949, 1389], [1958, 1362, 2070, 1396], [479, 1409, 515, 1435], [525, 1409, 570, 1435], [580, 1409, 714, 1436], [725, 1409, 778, 1435], [789, 1418, 838, 1435], [848, 1418, 907, 1436], [918, 1410, 966, 1435], [979, 1409, 1080, 1436], [1092, 1409, 1120, 1435], [1131, 1418, 1164, 1435], [1175, 1418, 1240, 1443], [1250, 1413, 1278, 1435], [1288, 1418, 1338, 1435], [1348, 1409, 1567, 1435], [1578, 1410, 1651, 1440], [1663, 1409, 1767, 1435], [1779, 1409, 1831, 1435], [1842, 1409, 1946, 1443], [1957, 1409, 2060, 1443], [379, 1535, 401, 1576], [465, 1535, 787, 1577], [377, 1642, 507, 1679], [520, 1642, 644, 1679], [658, 1642, 706, 1670], [718, 1642, 809, 1670], [822, 1642, 889, 1670], [901, 1642, 1029, 1679], [1042, 1642, 1181, 1679], [1195, 1642, 1336, 1679], [1350, 1642, 1544, 1679], [1558, 1642, 1720, 1679], [1734, 1651, 1764, 1670], [1778, 1642, 1847, 1671], [1860, 1651, 1890, 1670], [1902, 1642, 2043, 1679], [2055, 1646, 2179, 1679], [376, 1694, 462, 1721], [474, 1693, 660, 1730], [677, 1693, 805, 1730], [819, 1693, 845, 1721], [859, 1693, 983, 1721], [996, 1693, 1047, 1722], [1058, 1692, 1198, 1727], [1210, 1693, 1444, 1730], [1460, 1693, 1520, 1727], [1536, 1693, 1598, 1727], [1618, 1694, 1776, 1727], [1792, 1702, 1957, 1721], [1972, 1693, 2173, 1730], [375, 1744, 439, 1781], [453, 1753, 495, 1772], [508, 1753, 593, 1772], [606, 1744, 723, 1772], [738, 1744, 941, 1772], [956, 1744, 1078, 1772], [1093, 1744, 1129, 1772], [1141, 1744, 1276, 1781], [1292, 1753, 1360, 1781], [1377, 1744, 1697, 1781], [1714, 1744, 1753, 1778], [1768, 1743, 1817, 1778], [1833, 1744, 1881, 1778], [1897, 1744, 1959, 1778], [1975, 1744, 2174, 1772], [377, 1795, 503, 1832], [518, 1795, 557, 1829], [570, 1795, 633, 1829], [646, 1795, 782, 1832], [794, 1795, 920, 1832], [935, 1795, 995, 1829], [1009, 1795, 1057, 1829], [1071, 1795, 1133, 1829], [1147, 1804, 1181, 1823], [1193, 1795, 1319, 1832], [1331, 1804, 1403, 1824], [1415, 1795, 1578, 1823], [1595, 1795, 1712, 1823], [1731, 1795, 1804, 1829], [439, 1845, 519, 1874], [530, 1845, 723, 1882], [737, 1845, 880, 1882], [894, 1845, 969, 1873], [981, 1845, 1012, 1873], [1024, 1845, 1232, 1882], [1243, 1845, 1396, 1882], [1409, 1845, 1445, 1873], [1454, 1845, 1503, 1873], [1515, 1845, 1595, 1873], [985, 1938, 1134, 1974], [1191, 1935, 1275, 1976], [1294, 1948, 1332, 1966], [1346, 1935, 1419, 1976], [1434, 1942, 1462, 1969], [1474, 1935, 1561, 1976], [2097, 1938, 2173, 1973], [374, 2030, 476, 2059], [492, 2029, 509, 2058], [533, 2040, 537, 2058], [562, 2030, 610, 2058], [636, 2037, 673, 2058], [697, 2030, 725, 2058], [742, 2030, 768, 2058], [787, 2039, 804, 2058], [821, 2030, 943, 2058], [959, 2030, 1023, 2058], [1040, 2030, 1180, 2058], [1198, 2030, 1297, 2065], [1313, 2030, 1454, 2065], [1473, 2030, 1566, 2059], [1583, 2040, 1600, 2058], [1626, 2040, 1630, 2058], [1655, 2030, 1703, 2058], [1729, 2037, 1766, 2058], [1790, 2030, 1818, 2058], [1834, 2033, 1857, 2059], [1875, 2027, 1985, 2068], [2003, 2030, 2029, 2058], [2048, 2039, 2065, 2058], [2081, 2030, 2175, 2059], [377, 2081, 643, 2115], [657, 2090, 781, 2115], [796, 2081, 853, 2109], [865, 2081, 1048, 2109], [1059, 2081, 1238, 2118], [1249, 2081, 1311, 2109], [1322, 2081, 1446, 2109], [1460, 2081, 1593, 2118], [437, 2133, 489, 2160], [501, 2132, 586, 2160], [599, 2141, 638, 2160], [650, 2132, 796, 2160], [809, 2132, 844, 2160], [854, 2132, 929, 2167], [942, 2132, 1039, 2161], [1052, 2142, 1069, 2160], [1081, 2132, 1106, 2160], [1119, 2141, 1135, 2160], [1147, 2132, 1294, 2169], [1306, 2133, 1487, 2169], [1500, 2132, 1744, 2161], [1757, 2132, 1835, 2167], [1846, 2125, 2044, 2169], [2052, 2156, 2058, 2166], [2071, 2132, 2178, 2166], [376, 2182, 1344, 2219], [741, 2293, 815, 2334], [842, 2281, 880, 2301], [846, 2297, 946, 2325], [949, 2288, 960, 2307], [946, 2293, 1025, 2341], [1038, 2293, 1075, 2334], [1102, 2281, 1140, 2301], [1106, 2309, 1134, 2318], [1167, 2272, 1305, 2351], [1245, 2330, 1300, 2355], [1318, 2306, 1360, 2337], [1369, 2293, 1454, 2337], [1471, 2313, 1497, 2314], [1511, 2306, 1546, 2337], [1556, 2265, 1656, 2351], [1700, 2296, 1806, 2332], [2097, 2296, 2173, 2331], [376, 2413, 465, 2440], [478, 2412, 640, 2449], [654, 2412, 681, 2440], [691, 2411, 717, 2440], [729, 2412, 755, 2440], [770, 2421, 807, 2440], [819, 2412, 956, 2440], [969, 2416, 1072, 2440], [1083, 2412, 1115, 2440], [1127, 2412, 1155, 2440], [1158, 2401, 1211, 2430], [1188, 2418, 1234, 2436], [1245, 2409, 1276, 2431], [1294, 2412, 1368, 2441], [1380, 2412, 1490, 2440], [1504, 2411, 1681, 2452], [1700, 2412, 1728, 2447], [1745, 2416, 1769, 2446], [1785, 2415, 1809, 2449], [1827, 2416, 1851, 2446], [1867, 2423, 1901, 2449], [1917, 2412, 1965, 2440], [1979, 2415, 1992, 2440], [2010, 2416, 2034, 2446], [2048, 2415, 2063, 2448], [2080, 2416, 2104, 2446], [2119, 2412, 2175, 2447], [374, 2472, 421, 2492], [433, 2463, 533, 2491], [545, 2463, 594, 2491], [606, 2463, 756, 2500], [768, 2463, 1021, 2492], [1032, 2464, 1218, 2500], [1231, 2464, 1281, 2492], [1291, 2463, 1470, 2500], [1482, 2472, 1512, 2491], [682, 2594, 727, 2622], [728, 2591, 755, 2604], [728, 2618, 746, 2637], [763, 2590, 873, 2631], [900, 2578, 937, 2598], [903, 2606, 931, 2615], [974, 2556, 1001, 2569], [960, 2582, 1016, 2640], [960, 2651, 1016, 2671], [1125, 2582, 1181, 2640], [1027, 2651, 1277, 2680], [1290, 2556, 1346, 2661], [1353, 2550, 1390, 2569], [1324, 2582, 1380, 2640], [1323, 2651, 1378, 2676], [1401, 2603, 1458, 2632], [1465, 2608, 1485, 2633], [1495, 2578, 1562, 2631], [1529, 2592, 1666, 2639], [1671, 2578, 1699, 2607], [1667, 2614, 1680, 2639], [1711, 2590, 1749, 2631], [1756, 2549, 1850, 2661], [1860, 2617, 1864, 2629], [2097, 2593, 2173, 2628], [421, 2725, 431, 2736], [435, 2727, 475, 2749], [485, 2726, 563, 2749], [573, 2726, 670, 2749], [681, 2726, 710, 2749], [716, 2726, 764, 2749], [775, 2726, 843, 2749], [853, 2734, 903, 2749], [913, 2726, 1054, 2756], [1063, 2726, 1150, 2756], [1160, 2727, 1279, 2754], [1290, 2726, 1362, 2749], [1371, 2726, 1412, 2749], [1422, 2726, 1508, 2749], [1517, 2734, 1568, 2749], [1578, 2726, 1638, 2749], [1646, 2726, 1687, 2749], [1696, 2727, 1757, 2749], [1768, 2726, 1859, 2749], [1869, 2726, 1978, 2749], [1988, 2726, 2026, 2749], [2036, 2726, 2174, 2756], [376, 2767, 491, 2796], [503, 2767, 522, 2789], [522, 2766, 635, 2796], [647, 2767, 773, 2796], [784, 2766, 831, 2789], [840, 2766, 898, 2789], [908, 2766, 1025, 2796], [1035, 2766, 1130, 2789], [1139, 2766, 1281, 2796], [1293, 2766, 1433, 2796], [423, 2801, 477, 2830], [486, 2815, 530, 2830], [539, 2807, 578, 2830], [587, 2811, 649, 2830], [658, 2807, 832, 2837], [842, 2811, 867, 2830], [876, 2807, 939, 2830], [947, 2811, 972, 2830], [981, 2807, 1021, 2830], [1032, 2807, 1131, 2837], [1141, 2808, 1183, 2830], [1192, 2807, 1310, 2837], [1320, 2807, 1462, 2830], [1472, 2807, 1496, 2830], [1505, 2807, 1552, 2830], [1561, 2815, 1639, 2837], [1269, 2935, 1280, 2963], [97, 2307, 134, 2350], [97, 2277, 133, 2314], [83, 2230, 133, 2288], [83, 2204, 133, 2226], [98, 2159, 133, 2206], [103, 2144, 134, 2155], [82, 2100, 133, 2131], [82, 2050, 133, 2096], [82, 2016, 133, 2047], [82, 1975, 133, 2006], [125, 1955, 134, 1966], [82, 1906, 134, 1947], [83, 1865, 134, 1905], [82, 1823, 134, 1864], [82, 1781, 134, 1823], [98, 1740, 133, 1787], [82, 1698, 134, 1739], [81, 1636, 142, 1655], [97, 1596, 134, 1629], [87, 1568, 134, 1599], [97, 1531, 134, 1574], [87, 1508, 134, 1539], [125, 1499, 134, 1510], [83, 1416, 133, 1493], [83, 1370, 133, 1418], [81, 1347, 142, 1366], [82, 1256, 134, 1297], [82, 1214, 134, 1255], [83, 1137, 133, 1194], [97, 1094, 134, 1135], [97, 1059, 134, 1098], [82, 999, 133, 1038], [82, 955, 134, 996], [82, 919, 133, 950], [83, 872, 133, 912], [374, 243, 471, 272], [483, 228, 543, 271], [510, 264, 523, 289], [563, 252, 591, 269], [606, 242, 960, 285], [967, 267, 973, 277], [986, 240, 1908, 284], [1925, 242, 2178, 277], [376, 294, 551, 331], [564, 294, 640, 329], [652, 294, 776, 322], [790, 298, 820, 322], [834, 294, 925, 329], [937, 304, 966, 330], [979, 304, 996, 330], [1011, 296, 1037, 328], [1056, 294, 1085, 329], [492, 425, 536, 453], [539, 416, 552, 435], [537, 421, 742, 468], [769, 387, 800, 404], [758, 413, 814, 471], [760, 482, 810, 501], [823, 387, 873, 479], [881, 381, 918, 400], [852, 413, 908, 471], [852, 482, 907, 507], [928, 434, 996, 464], [1006, 421, 1070, 464], [1075, 439, 1112, 461], [1129, 441, 1155, 442], [1169, 434, 1226, 464], [1236, 393, 1336, 479], [1350, 428, 1378, 455], [1402, 387, 1434, 404], [1392, 413, 1448, 471], [1391, 482, 1446, 507], [1456, 387, 1507, 479], [1514, 381, 1551, 400], [1486, 413, 1542, 471], [1488, 482, 1538, 501], [1561, 421, 1742, 464], [1759, 441, 1785, 442], [1798, 434, 1856, 464], [1865, 393, 1963, 479], [1971, 448, 1975, 460], [2097, 426, 2173, 461], [438, 557, 537, 585], [554, 557, 730, 585], [747, 557, 821, 585], [837, 557, 1031, 591], [1053, 557, 1174, 594], [1191, 557, 1312, 585], [1329, 557, 1405, 592], [1422, 566, 1457, 585], [1472, 566, 1550, 586], [1565, 557, 1615, 585], [1633, 557, 1772, 594], [1792, 557, 1909, 585], [1926, 557, 2002, 592], [2020, 566, 2069, 585], [2086, 557, 2175, 594], [376, 608, 525, 645], [539, 608, 639, 637], [651, 608, 763, 636], [774, 608, 970, 645], [983, 608, 1033, 636], [1044, 608, 1157, 637], [1169, 608, 1377, 645], [1389, 608, 1527, 645], [1540, 608, 1625, 643], [1641, 608, 1837, 645], [1850, 608, 1907, 636], [1921, 608, 2106, 645], [2118, 617, 2174, 636], [375, 659, 412, 687], [426, 659, 608, 687], [619, 659, 660, 696], [672, 659, 813, 696], [822, 664, 1071, 696], [1086, 658, 1159, 693], [1173, 659, 1272, 688], [1285, 668, 1332, 687], [1344, 668, 1412, 688], [1425, 659, 1535, 696], [1546, 659, 1621, 687], [1634, 668, 1733, 687], [1746, 659, 1883, 687], [1896, 659, 2028, 696], [2044, 659, 2104, 693], [2118, 659, 2178, 693], [438, 709, 499, 737], [511, 709, 591, 737], [601, 709, 668, 737], [679, 709, 714, 737], [721, 709, 808, 746], [819, 713, 1056, 746], [1068, 709, 1157, 738], [1169, 709, 1286, 746], [1299, 709, 1374, 744], [1387, 709, 1411, 737], [1424, 718, 1454, 737], [1467, 709, 1594, 738], [1611, 709, 1746, 746], [1759, 709, 1785, 737], [1797, 709, 1821, 737], [1835, 718, 1851, 737], [1861, 718, 1974, 738], [1985, 709, 2028, 737], [2040, 709, 2174, 737], [376, 760, 652, 790], [658, 784, 663, 788], [680, 760, 743, 788], [750, 765, 987, 797], [999, 760, 1034, 788], [1044, 760, 1070, 788], [1084, 760, 1108, 788], [1122, 760, 1242, 788], [1255, 769, 1286, 788], [1299, 760, 1349, 788], [1361, 769, 1430, 797], [747, 871, 849, 900], [876, 847, 913, 867], [879, 871, 958, 898], [973, 872, 976, 887], [973, 869, 1010, 890], [1026, 862, 1150, 899], [1053, 905, 1122, 927], [1208, 855, 1219, 874], [1207, 854, 1387, 905], [1374, 859, 1527, 901], [1573, 862, 1621, 890], [1663, 860, 1788, 898], [1795, 886, 1799, 890], [2097, 861, 2173, 897], [374, 978, 402, 1006], [412, 978, 537, 1015], [548, 978, 668, 1006], [679, 978, 771, 1006], [783, 987, 822, 1006], [832, 982, 1070, 1015], [1083, 978, 1107, 1006], [1120, 978, 1168, 1006], [1176, 978, 1323, 1015], [1334, 978, 1472, 1015], [1481, 978, 1602, 1007], [1614, 978, 1690, 1013], [1701, 978, 1811, 1007], [1823, 987, 1853, 1006], [1870, 978, 2006, 1007], [2017, 978, 2174, 1007], [377, 1028, 546, 1065], [560, 1028, 660, 1057], [671, 1028, 819, 1065], [833, 1037, 849, 1056], [861, 1028, 996, 1065], [1008, 1028, 1163, 1063], [1177, 1032, 1241, 1065], [1254, 1028, 1398, 1057], [1409, 1028, 1450, 1065], [1463, 1037, 1479, 1056], [1490, 1028, 1640, 1065], [1652, 1028, 1837, 1063], [1851, 1032, 1915, 1065], [1928, 1032, 1958, 1056], [1970, 1028, 2073, 1056], [843, 1130, 926, 1158], [944, 1134, 972, 1143], [987, 1118, 1180, 1165], [1197, 1118, 1432, 1159], [1486, 1120, 1505, 1149], [1521, 1121, 1649, 1157], [1664, 1145, 1704, 1149], [2097, 1121, 2173, 1156], [375, 1214, 545, 1241], [559, 1213, 643, 1241], [653, 1213, 803, 1250], [815, 1213, 952, 1241], [966, 1213, 1137, 1241], [1149, 1222, 1196, 1250], [1200, 1237, 1215, 1247], [1232, 1213, 1292, 1247], [1305, 1213, 1354, 1247], [1368, 1213, 1416, 1247], [1430, 1213, 1478, 1247], [1492, 1213, 1554, 1247], [438, 1265, 479, 1292], [491, 1264, 669, 1301], [680, 1264, 729, 1292], [740, 1264, 1042, 1301], [1053, 1264, 1190, 1292], [1203, 1264, 1279, 1299], [1292, 1264, 1465, 1301], [1478, 1273, 1526, 1293], [1536, 1264, 1654, 1301], [1667, 1273, 1683, 1292], [1696, 1264, 1869, 1292], [1881, 1264, 1943, 1292], [1954, 1268, 2112, 1301], [2125, 1264, 2174, 1292], [375, 1319, 600, 1352], [611, 1324, 706, 1353], [712, 1339, 716, 1343], [733, 1315, 782, 1343], [794, 1315, 955, 1343], [967, 1324, 1095, 1343], [1107, 1315, 1131, 1343], [1145, 1315, 1276, 1344], [1287, 1315, 1334, 1343], [1347, 1315, 1458, 1344], [1471, 1315, 1628, 1352], [1638, 1315, 1768, 1352], [1782, 1324, 1818, 1343], [1830, 1320, 1915, 1343], [1927, 1315, 2130, 1352], [2141, 1315, 2177, 1343], [376, 1374, 470, 1404], [476, 1389, 482, 1399], [496, 1374, 530, 1393], [542, 1365, 657, 1402], [671, 1374, 688, 1393], [700, 1365, 888, 1402], [902, 1366, 1022, 1393], [1034, 1365, 1252, 1402], [1270, 1365, 1342, 1393], [1356, 1374, 1488, 1393], [1500, 1365, 1526, 1393], [1535, 1365, 1683, 1402], [1700, 1365, 1797, 1402], [1810, 1365, 1885, 1393], [1899, 1375, 1916, 1393], [1930, 1365, 2025, 1393], [2037, 1374, 2075, 1393], [2087, 1369, 2175, 1393], [377, 1416, 534, 1453], [545, 1416, 592, 1444], [603, 1416, 776, 1453], [789, 1425, 884, 1454], [890, 1440, 894, 1444], [911, 1416, 1104, 1453], [1117, 1416, 1264, 1453], [1276, 1416, 1412, 1444], [1425, 1416, 1519, 1453], [1532, 1416, 1623, 1444], [1635, 1416, 1830, 1450], [1844, 1425, 1910, 1453], [1927, 1416, 2062, 1450], [2075, 1416, 2174, 1445], [377, 1467, 480, 1496], [494, 1467, 699, 1504], [710, 1471, 952, 1504], [967, 1467, 1011, 1502], [1025, 1467, 1097, 1504], [1110, 1476, 1140, 1495], [1154, 1467, 1203, 1495], [1216, 1467, 1455, 1504], [1467, 1467, 1492, 1495], [1506, 1467, 1689, 1504], [1703, 1467, 1861, 1502], [437, 1519, 489, 1546], [502, 1518, 587, 1555], [598, 1518, 670, 1546], [682, 1522, 766, 1546], [778, 1518, 834, 1546], [846, 1518, 961, 1546], [972, 1522, 1210, 1555], [1223, 1518, 1253, 1546], [1264, 1518, 1320, 1546], [1332, 1527, 1429, 1555], [1442, 1518, 1613, 1555], [1623, 1527, 1704, 1555], [1716, 1518, 1763, 1546], [1774, 1517, 1911, 1558], [1920, 1518, 1995, 1546], [2007, 1518, 2064, 1546], [2075, 1527, 2114, 1546], [2126, 1518, 2173, 1546], [376, 1569, 443, 1597], [455, 1569, 700, 1606], [712, 1579, 756, 1597], [378, 1683, 434, 1718], [489, 1683, 783, 1718], [376, 1768, 408, 1795], [420, 1767, 587, 1804], [601, 1776, 648, 1796], [659, 1767, 777, 1801], [792, 1767, 926, 1804], [940, 1767, 1127, 1804], [1141, 1767, 1200, 1795], [1211, 1767, 1399, 1804], [1410, 1767, 1483, 1796], [1496, 1776, 1513, 1795], [1524, 1767, 1638, 1804], [1650, 1767, 1686, 1795], [1695, 1767, 1755, 1795], [1767, 1767, 1953, 1804], [1969, 1767, 2033, 1795], [2045, 1767, 2173, 1804], [376, 1818, 591, 1846], [604, 1818, 640, 1846], [649, 1818, 706, 1846], [718, 1827, 811, 1855], [823, 1827, 871, 1846], [884, 1818, 1084, 1846], [1095, 1818, 1201, 1847], [439, 1921, 455, 1937], [479, 1911, 653, 1940], [667, 1911, 798, 1948], [810, 1911, 872, 1939], [883, 1911, 966, 1939], [979, 1915, 1010, 1939], [1023, 1920, 1039, 1939], [1051, 1920, 1123, 1945], [1137, 1911, 1272, 1939], [1283, 1911, 1403, 1940], [1415, 1911, 1451, 1939], [1461, 1911, 1510, 1939], [1522, 1911, 1630, 1939], [1643, 1912, 1716, 1939], [1728, 1911, 1827, 1948], [1839, 1911, 1967, 1939], [1982, 1911, 2055, 1945], [2069, 1911, 2174, 1940], [479, 1961, 594, 1998], [608, 1970, 665, 1989], [676, 1961, 715, 1989], [728, 1961, 830, 1989], [841, 1961, 921, 1989], [933, 1965, 964, 1989], [980, 1961, 1042, 1995], [1056, 1979, 1077, 1981], [1089, 1961, 1148, 1989], [1161, 1961, 1284, 1990], [1296, 1965, 1379, 1989], [1392, 1965, 1445, 1989], [1457, 1965, 1488, 1989], [1500, 1961, 1636, 1998], [1647, 1961, 1743, 1989], [1755, 1961, 1827, 1989], [1839, 1965, 1920, 1989], [1932, 1961, 1968, 1989], [1978, 1961, 2028, 1989], [2040, 1961, 2175, 1998], [479, 2012, 646, 2049], [659, 2013, 712, 2040], [723, 2012, 886, 2049], [898, 2012, 1046, 2040], [439, 2085, 455, 2101], [479, 2075, 508, 2103], [522, 2075, 699, 2112], [713, 2075, 870, 2104], [884, 2075, 1069, 2103], [1082, 2075, 1223, 2104], [1238, 2075, 1270, 2110], [1284, 2075, 1432, 2104], [1446, 2075, 1493, 2110], [1509, 2075, 1568, 2103], [1583, 2075, 1694, 2103], [1711, 2075, 1873, 2112], [1889, 2075, 1948, 2103], [1962, 2075, 2110, 2104], [2127, 2085, 2179, 2103], [479, 2126, 632, 2163], [646, 2127, 701, 2154], [715, 2126, 841, 2154], [857, 2126, 931, 2160], [954, 2126, 1027, 2154], [1042, 2126, 1226, 2154], [1239, 2126, 1383, 2163], [1399, 2135, 1416, 2154], [1429, 2126, 1605, 2163], [1622, 2135, 1707, 2154], [1722, 2126, 1859, 2155], [1874, 2126, 2101, 2163], [2115, 2126, 2174, 2154], [478, 2177, 565, 2214], [577, 2186, 613, 2205], [626, 2177, 727, 2205], [740, 2186, 757, 2205], [767, 2177, 876, 2214], [887, 2177, 1058, 2214], [1071, 2177, 1231, 2214], [1243, 2177, 1306, 2205], [1317, 2177, 1475, 2205], [1488, 2177, 1537, 2205], [1550, 2177, 1699, 2214], [1711, 2177, 1747, 2205], [1756, 2177, 1829, 2205], [1841, 2177, 1991, 2211], [2004, 2177, 2096, 2206], [2109, 2177, 2174, 2205], [478, 2228, 638, 2265], [651, 2237, 667, 2256], [679, 2237, 745, 2257], [758, 2228, 892, 2256], [904, 2228, 1063, 2265], [1075, 2228, 1123, 2256], [1134, 2228, 1284, 2265], [1294, 2227, 1325, 2262], [1332, 2237, 1431, 2256], [1447, 2228, 1561, 2256], [1572, 2228, 1741, 2265], [439, 2301, 455, 2317], [479, 2291, 621, 2319], [631, 2295, 873, 2328], [886, 2291, 934, 2319], [945, 2291, 1066, 2328], [1077, 2290, 1214, 2331], [1227, 2291, 1259, 2327], [1274, 2293, 1300, 2325], [1319, 2291, 1348, 2326], [1365, 2291, 1483, 2319], [1496, 2292, 1529, 2319], [1540, 2291, 1706, 2328], [528, 2376, 549, 2379], [571, 2360, 627, 2387], [636, 2369, 657, 2395], [671, 2372, 699, 2381], [715, 2359, 742, 2393], [756, 2368, 803, 2388], [814, 2363, 934, 2396], [946, 2368, 962, 2387], [975, 2359, 1156, 2396], [1168, 2360, 1297, 2388], [1309, 2359, 1432, 2387], [1443, 2359, 1537, 2387], [1549, 2368, 1589, 2387], [1601, 2359, 1650, 2387], [1661, 2359, 1859, 2396], [1872, 2363, 2000, 2396], [2012, 2359, 2048, 2387], [2060, 2359, 2133, 2393], [528, 2431, 549, 2434], [571, 2415, 628, 2442], [641, 2414, 691, 2442], [704, 2414, 827, 2451], [839, 2424, 860, 2450], [878, 2416, 904, 2448], [925, 2414, 938, 2442], [955, 2423, 1026, 2442], [1040, 2423, 1087, 2443], [1101, 2414, 1240, 2442], [1253, 2414, 1328, 2442], [1342, 2414, 1627, 2451], [1643, 2414, 1702, 2442], [1714, 2414, 1886, 2451], [1898, 2414, 1994, 2442], [2007, 2414, 2175, 2442], [571, 2464, 718, 2492], [439, 2554, 455, 2570], [480, 2544, 620, 2573], [631, 2544, 933, 2581], [947, 2544, 1123, 2581], [1136, 2544, 1184, 2572], [1195, 2544, 1373, 2581], [1385, 2544, 1434, 2572], [1448, 2544, 1523, 2579], [1538, 2544, 1596, 2572], [1607, 2544, 1756, 2581], [1769, 2545, 1822, 2572], [1836, 2544, 1912, 2579], [1924, 2548, 2179, 2581], [476, 2596, 531, 2623], [543, 2595, 654, 2624], [669, 2604, 706, 2623], [719, 2604, 803, 2632], [816, 2595, 852, 2623], [862, 2595, 1003, 2623], [1016, 2595, 1048, 2623], [1060, 2595, 1110, 2623], [1123, 2595, 1274, 2623], [1287, 2595, 1349, 2623], [1360, 2604, 1415, 2623], [1427, 2595, 1666, 2632], [1681, 2595, 1740, 2623], [1752, 2595, 1883, 2632], [1895, 2595, 2050, 2624], [2063, 2595, 2179, 2632], [479, 2650, 578, 2674], [593, 2646, 678, 2675], [693, 2646, 755, 2674], [769, 2655, 786, 2674], [800, 2646, 935, 2683], [950, 2650, 1080, 2683], [1094, 2646, 1190, 2674], [1203, 2655, 1244, 2674], [1258, 2646, 1436, 2683], [1449, 2646, 1624, 2674], [1638, 2646, 1664, 2674], [1678, 2646, 1728, 2674], [1742, 2650, 1823, 2674], [1836, 2646, 1980, 2675], [1993, 2646, 2025, 2674], [2037, 2646, 2179, 2683], [478, 2697, 692, 2731], [706, 2697, 763, 2725], [776, 2697, 913, 2725], [924, 2697, 1126, 2725], [1138, 2697, 1174, 2725], [1183, 2697, 1230, 2725], [1245, 2697, 1302, 2725], [1313, 2697, 1459, 2734], [1472, 2698, 1525, 2725], [1538, 2697, 1650, 2726], [1665, 2697, 1767, 2726], [1780, 2706, 1866, 2725], [1878, 2697, 1914, 2725], [1923, 2706, 1977, 2725], [1988, 2697, 2047, 2725], [2062, 2697, 2175, 2725], [478, 2747, 610, 2775], [624, 2747, 682, 2775], [694, 2747, 890, 2784], [902, 2747, 938, 2775], [947, 2747, 996, 2775], [1008, 2747, 1139, 2776], [1149, 2747, 1386, 2784], [1398, 2747, 1534, 2775], [1545, 2747, 1575, 2775], [1587, 2747, 1694, 2775], [1707, 2747, 1764, 2775], [1776, 2751, 1877, 2775], [1888, 2748, 1945, 2775], [1265, 2935, 1284, 2963], [439, 252, 455, 268], [479, 242, 543, 270], [556, 242, 629, 270], [642, 246, 723, 270], [735, 242, 899, 279], [910, 242, 1115, 270], [1127, 242, 1164, 270], [1173, 251, 1229, 270], [1240, 251, 1333, 279], [1345, 242, 1371, 270], [1385, 251, 1402, 270], [1414, 242, 1602, 276], [1616, 242, 1865, 270], [1876, 251, 2082, 279], [2094, 242, 2177, 276], [479, 292, 594, 320], [608, 292, 665, 320], [678, 292, 793, 329], [806, 292, 1064, 329], [1077, 292, 1112, 320], [1123, 292, 1162, 320], [1173, 292, 1223, 320], [1234, 292, 1383, 321], [1396, 292, 1453, 320], [1465, 292, 1632, 329], [1645, 285, 1809, 320], [374, 386, 414, 413], [427, 385, 627, 422], [639, 394, 692, 413], [704, 385, 885, 422], [898, 394, 944, 414], [956, 385, 1097, 413], [1110, 385, 1221, 414], [1235, 385, 1428, 422], [1441, 385, 1476, 413], [1485, 386, 1537, 413], [1549, 389, 1787, 422], [1801, 389, 1839, 413], [1858, 385, 1893, 420], [1906, 385, 2003, 422], [2017, 385, 2073, 413], [2085, 385, 2173, 414], [376, 436, 545, 473], [560, 436, 607, 471], [620, 436, 720, 473], [732, 436, 975, 470], [990, 436, 1047, 464], [1060, 436, 1119, 471], [1132, 436, 1200, 464], [1211, 436, 1338, 465], [1352, 436, 1388, 464], [1397, 436, 1591, 464], [376, 511, 467, 540], [488, 512, 543, 539], [556, 511, 634, 540], [648, 511, 786, 540], [799, 515, 883, 548], [896, 511, 1003, 539], [1018, 515, 1049, 539], [1064, 520, 1172, 539], [1186, 511, 1436, 548], [1451, 511, 1487, 539], [1498, 520, 1554, 539], [1566, 511, 1685, 539], [1707, 512, 1742, 539], [1754, 511, 1923, 548], [1939, 511, 2031, 548], [2044, 511, 2094, 539], [2108, 515, 2175, 540], [377, 562, 522, 590], [534, 562, 596, 590], [607, 563, 661, 590], [673, 562, 829, 599], [841, 562, 918, 591], [930, 562, 1071, 591], [1082, 562, 1114, 590], [1126, 562, 1175, 590], [1188, 562, 1347, 596], [1361, 571, 1409, 591], [1420, 562, 1539, 591], [1551, 562, 1574, 590], [1585, 562, 1611, 590], [1624, 562, 1764, 591], [1776, 566, 1807, 590], [1819, 562, 1894, 590], [1904, 571, 1989, 590], [2002, 562, 2038, 590], [2048, 563, 2102, 590], [2115, 562, 2174, 590], [376, 613, 461, 641], [475, 613, 664, 641], [680, 617, 711, 641], [725, 613, 803, 642], [819, 622, 924, 641], [940, 617, 971, 641], [987, 622, 1042, 641], [1056, 613, 1143, 647], [1161, 613, 1302, 647], [1321, 613, 1380, 641], [1396, 613, 1512, 650], [1530, 617, 1561, 641], [1577, 613, 1815, 650], [1830, 613, 1929, 650], [1944, 622, 2000, 641], [2014, 613, 2132, 647], [2150, 613, 2176, 641], [376, 657, 518, 692], [378, 778, 436, 813], [488, 778, 649, 813], [663, 778, 772, 813], [374, 863, 435, 891], [448, 863, 593, 891], [605, 872, 644, 891], [656, 864, 708, 891], [720, 863, 745, 891], [758, 867, 807, 891], [820, 863, 898, 900], [911, 867, 940, 891], [952, 863, 1058, 900], [1070, 872, 1086, 891], [1097, 863, 1340, 900], [1351, 863, 1459, 892], [1470, 863, 1547, 891], [1564, 863, 1689, 897], [1702, 872, 1747, 892], [1760, 863, 1892, 891], [1903, 863, 1951, 891], [1963, 867, 2041, 891], [2053, 863, 2175, 900], [375, 913, 487, 941], [499, 913, 583, 942], [594, 917, 625, 941], [636, 913, 706, 950], [718, 913, 805, 950], [817, 922, 871, 941], [882, 913, 1097, 941], [1111, 913, 1141, 941], [1153, 913, 1348, 950], [437, 965, 491, 992], [510, 964, 599, 992], [618, 973, 659, 992], [676, 965, 936, 1001], [955, 964, 1000, 999], [1018, 964, 1068, 992], [1087, 973, 1176, 992], [1194, 964, 1230, 992], [1249, 964, 1336, 999], [1358, 964, 1390, 992], [1407, 968, 1540, 992], [1558, 968, 1588, 992], [1608, 965, 1825, 1001], [1846, 964, 1919, 998], [1954, 964, 2101, 1001], [2121, 965, 2175, 992], [375, 1015, 600, 1052], [613, 1015, 702, 1043], [716, 1015, 881, 1052], [894, 1015, 924, 1043], [936, 1015, 1034, 1052], [1046, 1015, 1203, 1052], [1217, 1015, 1273, 1043], [1286, 1015, 1381, 1052], [1392, 1015, 1575, 1052], [1590, 1015, 1646, 1043], [1658, 1015, 1738, 1052], [1751, 1024, 1767, 1043], [1779, 1015, 1836, 1044], [1849, 1015, 2005, 1043], [2017, 1015, 2173, 1052], [377, 1066, 550, 1103], [563, 1066, 641, 1094], [655, 1066, 714, 1100], [729, 1075, 779, 1094], [791, 1075, 839, 1103], [843, 1067, 860, 1100], [867, 1090, 872, 1094], [438, 1117, 502, 1145], [519, 1117, 703, 1154], [720, 1118, 775, 1145], [789, 1117, 987, 1154], [1003, 1118, 1048, 1146], [1052, 1107, 1083, 1127], [1052, 1136, 1063, 1155], [1102, 1117, 1161, 1145], [1176, 1107, 1256, 1146], [1224, 1136, 1262, 1161], [1282, 1117, 1360, 1145], [1375, 1117, 1407, 1145], [1422, 1117, 1524, 1154], [1540, 1117, 1702, 1154], [1719, 1117, 1778, 1145], [1794, 1117, 2032, 1146], [2050, 1117, 2124, 1151], [2143, 1117, 2174, 1145], [376, 1167, 425, 1195], [439, 1167, 627, 1195], [644, 1167, 718, 1201], [733, 1167, 765, 1195], [778, 1167, 900, 1204], [914, 1167, 1103, 1195], [1120, 1166, 1193, 1201], [1209, 1167, 1241, 1195], [1253, 1167, 1474, 1204], [1486, 1167, 1640, 1195], [1656, 1167, 1730, 1201], [1745, 1167, 1777, 1195], [1790, 1167, 1951, 1204], [1963, 1167, 2059, 1195], [2072, 1167, 2174, 1204], [377, 1218, 590, 1255], [605, 1218, 678, 1252], [691, 1218, 722, 1246], [734, 1218, 925, 1246], [936, 1218, 1140, 1255], [1155, 1218, 1228, 1252], [1243, 1227, 1292, 1246], [1305, 1218, 1367, 1246], [1380, 1218, 1428, 1246], [1439, 1218, 1549, 1246], [1561, 1218, 1644, 1247], [1654, 1218, 1685, 1246], [1699, 1218, 1771, 1252], [1788, 1218, 1857, 1246], [1870, 1218, 1962, 1246], [1975, 1218, 2175, 1255], [377, 1269, 433, 1297], [443, 1269, 624, 1306], [635, 1269, 670, 1297], [679, 1269, 857, 1306], [867, 1270, 919, 1297], [931, 1269, 955, 1297], [967, 1269, 1014, 1297], [1024, 1269, 1081, 1306], [1092, 1269, 1265, 1298], [1275, 1269, 1399, 1298], [1411, 1269, 1588, 1306], [1599, 1269, 1741, 1306], [1753, 1269, 1842, 1297], [1851, 1269, 2010, 1306], [2021, 1273, 2179, 1306], [438, 1320, 535, 1348], [549, 1320, 574, 1348], [590, 1329, 607, 1348], [619, 1320, 684, 1348], [697, 1320, 849, 1348], [862, 1320, 899, 1348], [910, 1320, 1051, 1348], [1065, 1320, 1193, 1348], [1207, 1324, 1237, 1348], [1253, 1320, 1437, 1357], [1452, 1321, 1510, 1354], [1525, 1329, 1594, 1357], [1610, 1320, 1697, 1348], [1711, 1320, 1882, 1357], [1895, 1320, 1927, 1348], [1940, 1320, 1990, 1348], [2004, 1324, 2127, 1348], [2140, 1320, 2176, 1348], [376, 1371, 563, 1399], [579, 1371, 638, 1405], [652, 1371, 715, 1405], [729, 1371, 904, 1408], [920, 1371, 994, 1405], [1008, 1371, 1236, 1408], [1249, 1371, 1435, 1408], [1451, 1371, 1511, 1405], [1525, 1371, 1587, 1405], [1601, 1380, 1635, 1399], [1647, 1371, 1707, 1399], [1718, 1371, 1858, 1399], [1870, 1371, 1966, 1399], [1978, 1380, 2018, 1399], [2030, 1371, 2173, 1408], [375, 1421, 598, 1458], [614, 1420, 675, 1455], [691, 1430, 724, 1449], [735, 1422, 819, 1449], [831, 1421, 1000, 1449], [1015, 1421, 1144, 1458], [1160, 1421, 1234, 1455], [1250, 1422, 1404, 1455], [1418, 1421, 1440, 1449], [1452, 1430, 1549, 1449], [1563, 1421, 1624, 1449], [1636, 1421, 1817, 1458], [1829, 1422, 1883, 1449], [1895, 1430, 1995, 1449], [2009, 1421, 2093, 1449], [2104, 1421, 2174, 1449], [375, 1471, 406, 1506], [421, 1472, 474, 1500], [488, 1476, 540, 1500], [550, 1472, 628, 1500], [641, 1472, 758, 1500], [770, 1472, 860, 1500], [873, 1472, 903, 1500], [915, 1472, 965, 1500], [976, 1472, 1133, 1506], [1148, 1472, 1291, 1509], [1302, 1472, 1483, 1509], [1496, 1481, 1527, 1500], [1541, 1481, 1557, 1500], [1569, 1472, 1648, 1500], [1660, 1472, 1696, 1500], [1706, 1472, 1838, 1501], [1851, 1472, 2043, 1500], [2060, 1472, 2133, 1506], [438, 1524, 495, 1551], [510, 1523, 627, 1551], [640, 1523, 699, 1551], [711, 1523, 759, 1551], [771, 1523, 821, 1551], [832, 1523, 994, 1560], [1005, 1522, 1036, 1557], [1052, 1532, 1149, 1557], [1163, 1523, 1245, 1551], [1258, 1523, 1336, 1551], [1349, 1523, 1464, 1552], [1476, 1523, 1572, 1551], [1583, 1523, 1724, 1551], [1737, 1523, 1800, 1551], [1812, 1532, 1861, 1551], [1873, 1523, 2099, 1560], [2111, 1523, 2179, 1551], [373, 1575, 425, 1602], [438, 1578, 509, 1602], [521, 1574, 577, 1602], [590, 1574, 726, 1611], [738, 1574, 768, 1602], [780, 1574, 870, 1602], [882, 1574, 912, 1602], [925, 1574, 1046, 1603], [1057, 1574, 1085, 1608], [1100, 1574, 1156, 1602], [1167, 1574, 1262, 1602], [1273, 1574, 1351, 1602], [1362, 1574, 1410, 1602], [1422, 1574, 1525, 1602], [1536, 1578, 1565, 1602], [1578, 1574, 1638, 1602], [1651, 1574, 1765, 1602], [1776, 1574, 1824, 1602], [1835, 1574, 2004, 1602], [2016, 1574, 2052, 1602], [2061, 1574, 2175, 1611], [375, 1625, 487, 1653], [499, 1625, 583, 1654], [594, 1634, 634, 1653], [646, 1625, 705, 1653], [717, 1625, 840, 1654], [855, 1626, 909, 1653], [920, 1629, 990, 1653], [1001, 1625, 1081, 1659], [1093, 1625, 1240, 1659], [1254, 1625, 1315, 1653], [1326, 1625, 1357, 1653], [1369, 1629, 1500, 1653], [1511, 1629, 1540, 1653], [1553, 1634, 1643, 1662], [1655, 1625, 1691, 1653], [1700, 1625, 1749, 1653], [1760, 1625, 1900, 1662], [1913, 1625, 1972, 1653], [1984, 1625, 2107, 1659], [2121, 1634, 2175, 1653], [377, 1675, 489, 1704], [504, 1675, 592, 1704], [604, 1675, 741, 1712], [755, 1684, 771, 1703], [783, 1675, 945, 1712], [957, 1675, 1019, 1703], [1030, 1684, 1086, 1703], [1097, 1675, 1136, 1703], [1147, 1684, 1219, 1712], [1231, 1675, 1392, 1712], [1403, 1675, 1433, 1703], [1446, 1675, 1643, 1712], [1659, 1675, 1733, 1709], [438, 1726, 611, 1763], [625, 1726, 749, 1760], [765, 1726, 928, 1755], [941, 1727, 971, 1754], [990, 1726, 1051, 1760], [1067, 1726, 1229, 1763], [1243, 1735, 1260, 1754], [1274, 1726, 1424, 1754], [1439, 1726, 1721, 1763], [1737, 1726, 1823, 1761], [1838, 1727, 1863, 1754], [1876, 1730, 1958, 1754], [1973, 1730, 2026, 1754], [2039, 1726, 2102, 1754], [2114, 1726, 2173, 1754], [376, 1777, 500, 1805], [511, 1777, 537, 1805], [549, 1777, 724, 1814], [737, 1786, 753, 1805], [765, 1777, 879, 1806], [890, 1777, 926, 1805], [935, 1777, 985, 1805], [997, 1777, 1193, 1806], [1205, 1777, 1338, 1805], [1350, 1777, 1483, 1805], [1499, 1778, 1532, 1805], [1544, 1781, 1676, 1805], [1687, 1781, 1717, 1805], [1729, 1777, 1779, 1805], [1791, 1777, 1840, 1805], [1853, 1777, 2003, 1814], [2014, 1777, 2175, 1814], [375, 1828, 453, 1862], [465, 1828, 513, 1856], [525, 1828, 570, 1857], [584, 1832, 709, 1865], [721, 1828, 863, 1857], [873, 1828, 912, 1865], [924, 1828, 1081, 1857], [1092, 1829, 1119, 1856], [1136, 1828, 1197, 1862], [1211, 1828, 1236, 1856], [1248, 1832, 1277, 1856], [1288, 1828, 1350, 1865], [1362, 1837, 1401, 1856], [1411, 1827, 1442, 1862], [1449, 1828, 1521, 1856], [1532, 1828, 1733, 1865], [1745, 1828, 1879, 1865], [1892, 1828, 2006, 1856], [2016, 1828, 2052, 1856], [2064, 1828, 2175, 1856], [377, 1879, 520, 1916], [537, 1880, 626, 1907], [638, 1888, 674, 1907], [686, 1879, 942, 1916], [954, 1879, 1124, 1916], [1137, 1879, 1185, 1907], [1199, 1879, 1243, 1908], [1259, 1879, 1407, 1916], [1419, 1879, 1443, 1907], [1457, 1879, 1620, 1908], [1633, 1879, 1760, 1916], [1773, 1879, 1824, 1907], [1836, 1883, 1887, 1907], [1899, 1879, 2078, 1916], [2091, 1888, 2173, 1907], [377, 1934, 523, 1958], [540, 1930, 746, 1967], [760, 1930, 938, 1958], [951, 1930, 1027, 1958], [1038, 1930, 1134, 1958], [1145, 1930, 1278, 1958], [1292, 1930, 1478, 1967], [1491, 1934, 1557, 1958], [1570, 1934, 1623, 1958], [1634, 1934, 1665, 1958], [1676, 1930, 1715, 1958], [1727, 1930, 1788, 1958], [1801, 1930, 1944, 1959], [1956, 1930, 2027, 1958], [2039, 1930, 2173, 1958], [376, 1980, 513, 2008], [527, 1980, 588, 2008], [598, 1980, 662, 2017], [674, 1989, 714, 2008], [726, 1989, 810, 2008], [822, 1980, 962, 2017], [978, 1980, 1092, 2008], [1104, 1984, 1346, 2017], [1362, 1980, 1436, 2014], [438, 2032, 463, 2059], [473, 2031, 498, 2059], [511, 2031, 606, 2060], [617, 2031, 818, 2068], [831, 2031, 892, 2059], [903, 2031, 926, 2059], [937, 2031, 961, 2059], [975, 2035, 1027, 2059], [1034, 2031, 1097, 2068], [1107, 2031, 1256, 2068], [1269, 2031, 1382, 2060], [1396, 2031, 1469, 2059], [1482, 2040, 1513, 2059], [1526, 2031, 1636, 2060], [1651, 2031, 1724, 2065], [1739, 2031, 1878, 2068], [1894, 2031, 1967, 2065], [1982, 2031, 2110, 2060], [2125, 2031, 2177, 2065], [374, 2082, 485, 2111], [501, 2082, 574, 2116], [592, 2083, 615, 2110], [623, 2088, 644, 2110], [651, 2088, 660, 2110], [668, 2088, 685, 2110], [703, 2082, 776, 2116], [790, 2082, 850, 2110], [862, 2091, 917, 2110], [928, 2082, 1040, 2110], [1052, 2082, 1131, 2110], [1142, 2091, 1196, 2110], [1207, 2082, 1265, 2110], [1276, 2086, 1525, 2119], [1542, 2082, 1594, 2110], [1605, 2082, 1689, 2110], [1700, 2082, 1748, 2110], [1762, 2082, 1819, 2110], [1830, 2082, 1976, 2119], [1989, 2083, 2042, 2110], [2055, 2082, 2177, 2116], [376, 2142, 444, 2170], [460, 2132, 534, 2167], [549, 2142, 581, 2161], [594, 2133, 665, 2162], [678, 2142, 710, 2161], [722, 2133, 772, 2161], [783, 2137, 887, 2161], [898, 2133, 1032, 2161], [1044, 2133, 1140, 2161], [1151, 2133, 1384, 2170], [1397, 2133, 1513, 2162], [1526, 2133, 1562, 2161], [1571, 2133, 1742, 2161], [1757, 2133, 1818, 2167], [1833, 2133, 2043, 2170], [2054, 2133, 2177, 2167], [376, 2188, 428, 2212], [439, 2184, 511, 2221], [523, 2184, 554, 2212], [567, 2184, 659, 2221], [670, 2184, 722, 2212], [734, 2184, 798, 2212], [810, 2184, 850, 2221], [862, 2184, 985, 2221], [997, 2184, 1046, 2212], [1059, 2184, 1163, 2221], [1175, 2188, 1205, 2212], [1218, 2184, 1303, 2213], [1315, 2184, 1465, 2221], [1476, 2184, 1639, 2221], [378, 2298, 435, 2333], [489, 2298, 696, 2342], [710, 2298, 753, 2333], [764, 2298, 829, 2333], [843, 2308, 967, 2342], [374, 2382, 438, 2410], [452, 2382, 624, 2410], [638, 2382, 675, 2410], [687, 2382, 737, 2410], [751, 2391, 845, 2419], [859, 2382, 885, 2410], [901, 2382, 1066, 2419], [1081, 2391, 1113, 2410], [1129, 2382, 1262, 2411], [1287, 2383, 1321, 2410], [1337, 2382, 1462, 2411], [1476, 2382, 1495, 2410], [1511, 2391, 1558, 2411], [1573, 2382, 1716, 2410], [1729, 2391, 1806, 2419], [1821, 2386, 1976, 2419], [1992, 2382, 2040, 2410], [2059, 2382, 2175, 2410], [375, 2433, 530, 2470], [542, 2433, 631, 2462], [643, 2433, 733, 2470], [745, 2433, 795, 2461], [807, 2437, 888, 2461], [899, 2442, 1044, 2461], [1056, 2432, 1087, 2467], [1103, 2442, 1199, 2461], [1215, 2433, 1279, 2461], [1290, 2433, 1442, 2470], [1453, 2433, 1489, 2461], [1499, 2433, 1557, 2461], [1571, 2433, 1687, 2461], [1699, 2433, 1725, 2461], [1738, 2442, 1793, 2461], [1805, 2433, 1937, 2470], [1950, 2442, 1990, 2461], [2003, 2433, 2173, 2470], [374, 2485, 426, 2512], [440, 2484, 561, 2518], [575, 2484, 673, 2513], [685, 2484, 752, 2512], [763, 2488, 793, 2512], [806, 2484, 853, 2512], [866, 2484, 1074, 2521], [1087, 2493, 1103, 2512], [1114, 2493, 1179, 2513], [1191, 2484, 1297, 2521], [1308, 2484, 1430, 2512], [1442, 2484, 1499, 2512], [1512, 2493, 1528, 2512], [1539, 2484, 1688, 2521], [1699, 2485, 1751, 2512], [1765, 2484, 1863, 2513], [1875, 2484, 2023, 2519], [2036, 2484, 2094, 2518], [2108, 2484, 2179, 2519], [374, 2535, 556, 2569], [576, 2544, 624, 2564], [641, 2535, 761, 2563], [779, 2535, 910, 2564], [928, 2535, 964, 2563], [983, 2535, 1099, 2563], [1117, 2535, 1256, 2570], [1274, 2535, 1315, 2570], [1336, 2535, 1494, 2572], [1512, 2544, 1529, 2563], [1547, 2535, 1733, 2572], [1749, 2525, 1829, 2564], [1797, 2554, 1810, 2573], [1850, 2535, 1957, 2569], [1978, 2535, 2037, 2563], [2055, 2544, 2072, 2563], [2088, 2544, 2174, 2563], [376, 2586, 498, 2623], [511, 2576, 591, 2615], [556, 2611, 572, 2630], [606, 2586, 732, 2614], [743, 2586, 839, 2614], [851, 2595, 892, 2614], [905, 2595, 922, 2614], [933, 2586, 1238, 2623], [1251, 2590, 1387, 2623], [1407, 2586, 1638, 2623], [1653, 2595, 1700, 2615], [1713, 2586, 1852, 2614], [1865, 2586, 2174, 2614], [374, 2637, 429, 2664], [442, 2636, 598, 2673], [614, 2636, 672, 2664], [687, 2636, 775, 2673], [790, 2636, 866, 2664], [878, 2640, 1126, 2673], [1141, 2636, 1173, 2664], [1187, 2636, 1312, 2665], [1325, 2636, 1353, 2670], [1368, 2636, 1482, 2673], [1498, 2636, 1612, 2673], [1627, 2636, 1773, 2664], [1787, 2640, 1817, 2664], [1832, 2636, 1959, 2670], [1975, 2636, 2023, 2664], [2035, 2636, 2110, 2664], [2124, 2636, 2173, 2664], [377, 2687, 435, 2715], [451, 2687, 592, 2721], [609, 2687, 838, 2724], [854, 2687, 995, 2715], [1013, 2696, 1062, 2715], [1077, 2687, 1163, 2715], [1191, 2687, 1279, 2715], [1294, 2687, 1379, 2715], [1395, 2687, 1572, 2715], [1589, 2687, 1732, 2721], [1750, 2696, 1798, 2716], [1814, 2687, 1953, 2715], [1969, 2687, 2173, 2724], [421, 2762, 432, 2779], [435, 2768, 481, 2790], [491, 2767, 939, 2797], [421, 2802, 431, 2819], [435, 2808, 492, 2831], [503, 2808, 610, 2831], [621, 2808, 681, 2831], [690, 2808, 720, 2831], [730, 2808, 801, 2831], [811, 2808, 927, 2831], [937, 2812, 966, 2831], [980, 2808, 1413, 2838], [1266, 2935, 1282, 2964], [377, 242, 435, 270], [448, 242, 650, 279], [663, 242, 695, 270], [708, 242, 832, 271], [844, 241, 873, 271], [890, 243, 924, 270], [935, 242, 1104, 279], [1118, 242, 1274, 271], [1287, 242, 1491, 279], [1504, 242, 1552, 270], [1568, 242, 1685, 270], [1698, 251, 1747, 270], [1759, 242, 1921, 279], [1933, 242, 1964, 270], [1977, 242, 2102, 271], [2114, 241, 2175, 276], [376, 292, 493, 320], [506, 292, 705, 329], [719, 301, 768, 320], [779, 292, 810, 320], [823, 292, 945, 321], [957, 291, 1016, 326], [1030, 292, 1120, 321], [1133, 301, 1170, 320], [1183, 292, 1364, 329], [1376, 292, 1412, 320], [1421, 292, 1550, 320], [1563, 293, 1617, 320], [1629, 292, 1654, 320], [1667, 292, 1716, 320], [1729, 292, 1845, 329], [1856, 292, 1892, 320], [1902, 292, 2024, 321], [2036, 291, 2086, 321], [2090, 316, 2095, 320], [2111, 292, 2174, 320], [377, 343, 561, 380], [574, 347, 605, 371], [617, 343, 667, 371], [678, 352, 772, 380], [783, 343, 906, 371], [918, 343, 1032, 371], [1044, 343, 1195, 371], [1207, 343, 1315, 371], [1329, 343, 1388, 371], [1400, 343, 1567, 371], [1579, 343, 1777, 371], [1790, 343, 1882, 371], [1893, 343, 1943, 371], [1955, 343, 2174, 380], [377, 398, 470, 431], [376, 523, 404, 564], [466, 523, 647, 565], [672, 524, 779, 565], [795, 526, 1177, 576], [1194, 523, 1267, 565], [1285, 524, 1352, 565], [1355, 510, 1402, 539], [1356, 550, 1369, 578], [373, 630, 427, 657], [438, 629, 529, 666], [541, 629, 614, 658], [626, 629, 676, 657], [692, 629, 806, 657], [818, 629, 957, 666], [970, 629, 1046, 664], [1059, 629, 1107, 657], [1119, 638, 1156, 657], [1167, 628, 1198, 664], [1214, 638, 1301, 657], [1313, 629, 1429, 663], [1443, 629, 1491, 657], [1502, 629, 1602, 658], [1615, 638, 1662, 658], [1673, 629, 1784, 658], [1797, 629, 1911, 658], [1923, 629, 2070, 666], [2083, 629, 2175, 657], [377, 680, 558, 717], [575, 680, 671, 717], [685, 680, 758, 708], [770, 680, 952, 709], [965, 680, 1138, 717], [1150, 689, 1224, 717], [1237, 680, 1291, 708], [1309, 689, 1355, 709], [1367, 689, 1423, 708], [1435, 680, 1497, 708], [1509, 680, 1576, 714], [1588, 680, 1699, 714], [1713, 680, 1770, 708], [1782, 680, 1993, 717], [2006, 680, 2049, 715], [2061, 680, 2130, 714], [2143, 680, 2174, 708], [375, 731, 473, 768], [487, 731, 668, 768], [682, 731, 780, 760], [793, 740, 840, 759], [852, 735, 903, 759], [915, 731, 985, 768], [998, 731, 1034, 759], [1042, 731, 1241, 768], [1253, 731, 1348, 765], [1360, 731, 1411, 759], [1424, 731, 1486, 759], [1499, 731, 1577, 759], [1588, 731, 1722, 768], [1734, 731, 1839, 759], [1852, 731, 1900, 759], [1911, 731, 2042, 768], [2056, 731, 2173, 768], [376, 782, 437, 810], [451, 782, 509, 810], [520, 782, 667, 819], [680, 783, 734, 810], [745, 782, 907, 819], [438, 833, 653, 870], [665, 833, 701, 861], [710, 833, 759, 861], [770, 832, 801, 867], [808, 842, 907, 861], [919, 834, 972, 861], [983, 837, 1212, 870], [1223, 842, 1279, 861], [1290, 833, 1329, 861], [1341, 833, 1512, 870], [1524, 833, 1640, 862], [1653, 842, 1683, 861], [1697, 833, 1746, 861], [1757, 833, 1895, 870], [1014, 925, 1081, 953], [1006, 960, 1086, 982], [1147, 918, 1158, 937], [1146, 917, 1326, 967], [1313, 944, 1326, 963], [1341, 929, 1369, 956], [1382, 922, 1540, 963], [2097, 925, 2173, 960], [374, 1033, 474, 1062], [487, 1033, 523, 1061], [536, 1033, 561, 1061], [575, 1033, 624, 1061], [636, 1033, 832, 1070], [844, 1034, 960, 1067], [974, 1033, 1013, 1061], [1025, 1042, 1110, 1061], [1123, 1037, 1230, 1070], [1242, 1032, 1284, 1067], [1301, 1046, 1329, 1055], [1346, 1033, 1392, 1061], [1408, 1033, 1466, 1061], [1479, 1032, 1571, 1073], [1589, 1046, 1617, 1055], [1635, 1033, 1648, 1061], [1664, 1033, 1692, 1068], [1709, 1037, 1733, 1067], [1747, 1036, 1757, 1061], [1773, 1037, 1797, 1067], [1812, 1044, 1833, 1061], [1845, 1051, 1869, 1052], [1884, 1033, 1922, 1068], [438, 1085, 479, 1112], [492, 1084, 577, 1113], [589, 1084, 665, 1119], [678, 1093, 725, 1113], [737, 1084, 800, 1113], [813, 1084, 937, 1121], [950, 1093, 987, 1112], [1000, 1084, 1149, 1121], [1160, 1084, 1254, 1112], [1266, 1093, 1306, 1112], [1318, 1084, 1368, 1112], [1379, 1084, 1440, 1112], [1452, 1084, 1488, 1112], [1498, 1084, 1702, 1121], [1715, 1084, 1863, 1112], [1878, 1085, 1932, 1112], [1944, 1084, 2008, 1112], [2019, 1084, 2174, 1112], [376, 1134, 461, 1162], [476, 1134, 617, 1162], [633, 1134, 681, 1162], [696, 1134, 746, 1162], [760, 1134, 957, 1171], [974, 1134, 1073, 1163], [1090, 1134, 1231, 1171], [1247, 1134, 1332, 1169], [1349, 1134, 1456, 1162], [1472, 1134, 1646, 1171], [1662, 1134, 1712, 1162], [1727, 1134, 1937, 1163], [1952, 1134, 2106, 1171], [2121, 1135, 2175, 1162], [375, 1185, 516, 1222], [530, 1185, 616, 1220], [640, 1186, 726, 1213], [740, 1185, 776, 1213], [788, 1185, 838, 1213], [851, 1185, 995, 1222], [1010, 1185, 1117, 1213], [1130, 1185, 1271, 1213], [1286, 1185, 1398, 1213], [1412, 1185, 1485, 1222], [1499, 1185, 1770, 1222], [1787, 1186, 1812, 1213], [1825, 1185, 1851, 1213], [1866, 1185, 1952, 1213], [1966, 1185, 2128, 1214], [2143, 1189, 2173, 1213], [376, 1236, 484, 1264], [496, 1236, 578, 1264], [590, 1240, 620, 1264], [631, 1236, 742, 1264], [754, 1236, 977, 1273], [992, 1245, 1008, 1264], [1019, 1236, 1157, 1273], [1169, 1236, 1230, 1264], [1241, 1236, 1266, 1264], [1279, 1236, 1391, 1264], [1403, 1240, 1434, 1264], [1447, 1236, 1560, 1265], [1573, 1236, 1780, 1273], [1794, 1245, 1842, 1273], [1846, 1260, 1861, 1270], [1876, 1236, 2094, 1273], [2109, 1236, 2171, 1270], [377, 1287, 434, 1315], [446, 1287, 557, 1315], [570, 1287, 764, 1315], [776, 1287, 984, 1324], [995, 1287, 1147, 1324], [1160, 1287, 1283, 1324], [1295, 1291, 1324, 1315], [1336, 1287, 1372, 1315], [1389, 1287, 1462, 1321], [438, 1338, 467, 1366], [478, 1338, 668, 1375], [681, 1338, 817, 1366], [829, 1338, 981, 1375], [992, 1342, 1023, 1366], [1035, 1338, 1143, 1366], [1159, 1347, 1221, 1367], [1233, 1338, 1394, 1375], [1406, 1338, 1436, 1366], [1452, 1338, 1525, 1372], [1541, 1339, 1595, 1366], [1607, 1338, 1671, 1367], [1684, 1338, 1768, 1367], [1781, 1338, 1928, 1367], [1941, 1338, 2001, 1366], [2013, 1338, 2175, 1375], [376, 1397, 431, 1416], [442, 1388, 479, 1416], [492, 1388, 669, 1425], [682, 1397, 712, 1416], [726, 1397, 742, 1416], [755, 1388, 949, 1416], [963, 1388, 1082, 1417], [1094, 1388, 1129, 1416], [1138, 1388, 1186, 1416], [1199, 1388, 1365, 1425], [1379, 1388, 1536, 1425], [1551, 1397, 1567, 1416], [1578, 1388, 1655, 1417], [1667, 1388, 1728, 1416], [1739, 1397, 1829, 1425], [1842, 1388, 1890, 1416], [1903, 1397, 1969, 1425], [1981, 1392, 2011, 1416], [2024, 1388, 2125, 1416], [2138, 1397, 2174, 1416], [376, 1439, 496, 1476], [508, 1439, 567, 1467], [579, 1439, 678, 1468], [689, 1439, 737, 1467], [748, 1439, 898, 1476], [911, 1439, 1029, 1467], [438, 1490, 551, 1518], [566, 1490, 753, 1527], [769, 1499, 817, 1519], [833, 1494, 904, 1518], [920, 1490, 983, 1518], [998, 1490, 1084, 1518], [1099, 1490, 1171, 1518], [1189, 1490, 1263, 1524], [1281, 1490, 1367, 1518], [1382, 1490, 1519, 1518], [1534, 1490, 1675, 1518], [1692, 1494, 1723, 1518], [1740, 1490, 1863, 1518], [1879, 1490, 2076, 1527], [2092, 1481, 2171, 1519], [2140, 1509, 2151, 1528], [375, 1541, 539, 1578], [550, 1541, 627, 1570], [638, 1541, 716, 1569], [728, 1541, 889, 1578], [905, 1541, 1041, 1570], [1056, 1540, 1118, 1575], [1134, 1541, 1234, 1570], [1246, 1541, 1316, 1570], [1330, 1541, 1450, 1578], [1462, 1531, 1542, 1570], [1507, 1566, 1523, 1585], [1555, 1541, 1720, 1578], [1732, 1541, 1758, 1569], [1770, 1541, 1942, 1578], [1953, 1545, 1984, 1569], [1996, 1541, 2174, 1578], [376, 1592, 425, 1620], [438, 1592, 507, 1620], [519, 1592, 689, 1620], [701, 1592, 737, 1620], [747, 1601, 785, 1620], [798, 1592, 923, 1629], [937, 1592, 1060, 1620], [1072, 1592, 1203, 1621], [1215, 1592, 1324, 1620], [1337, 1592, 1477, 1627], [1491, 1592, 1594, 1621], [1606, 1596, 1746, 1629], [1760, 1601, 1777, 1620], [1789, 1592, 1932, 1629], [1944, 1592, 2173, 1629], [377, 1642, 525, 1679], [536, 1642, 629, 1670], [641, 1651, 681, 1670], [693, 1642, 742, 1670], [754, 1642, 948, 1671], [960, 1642, 1072, 1670], [1086, 1642, 1244, 1679], [1256, 1642, 1303, 1670], [1314, 1643, 1439, 1670], [1456, 1642, 1519, 1670], [1530, 1642, 1673, 1679], [1687, 1642, 1845, 1679], [1856, 1642, 1881, 1670], [1894, 1651, 1965, 1679], [1977, 1642, 2177, 1679], [377, 1693, 435, 1721], [448, 1697, 626, 1730], [641, 1702, 679, 1721], [691, 1693, 806, 1722], [819, 1690, 903, 1731], [919, 1693, 1132, 1730], [1145, 1693, 1237, 1722], [1249, 1693, 1403, 1730], [1417, 1693, 1659, 1730], [1673, 1693, 1716, 1722], [1730, 1697, 1858, 1730], [1877, 1693, 2014, 1721], [2027, 1693, 2175, 1730], [375, 1744, 559, 1781], [573, 1744, 732, 1781], [744, 1753, 805, 1773], [817, 1744, 976, 1781], [987, 1744, 1027, 1781], [1040, 1744, 1248, 1781], [1260, 1748, 1289, 1772], [1301, 1744, 1328, 1772], [1343, 1743, 1405, 1778], [1420, 1744, 1450, 1772], [1462, 1744, 1512, 1772], [1523, 1744, 1603, 1772], [1614, 1744, 1650, 1772], [1660, 1753, 1676, 1772], [1688, 1753, 1827, 1781], [1838, 1744, 1961, 1781], [1974, 1744, 2105, 1772], [2120, 1745, 2174, 1772], [374, 1795, 437, 1824], [450, 1795, 514, 1823], [526, 1795, 666, 1823], [677, 1795, 761, 1823], [774, 1795, 947, 1832], [961, 1795, 991, 1823], [1004, 1804, 1058, 1823], [1069, 1795, 1284, 1832], [1296, 1795, 1488, 1832], [1500, 1795, 1530, 1823], [1544, 1794, 1607, 1832], [1615, 1819, 1620, 1823], [438, 1847, 491, 1874], [503, 1846, 623, 1874], [633, 1846, 737, 1883], [748, 1846, 784, 1874], [792, 1846, 927, 1874], [939, 1846, 963, 1874], [974, 1846, 1067, 1874], [1077, 1855, 1117, 1874], [1127, 1846, 1420, 1883], [1431, 1846, 1507, 1881], [1519, 1846, 1700, 1883], [1716, 1855, 1762, 1875], [1774, 1846, 1836, 1874], [1847, 1850, 1964, 1883], [1975, 1846, 2005, 1874], [2016, 1846, 2175, 1883], [375, 1897, 399, 1924], [411, 1905, 427, 1924], [437, 1897, 488, 1924], [500, 1896, 646, 1933], [657, 1896, 704, 1924], [714, 1896, 750, 1924], [762, 1896, 930, 1925], [941, 1896, 1035, 1930], [1049, 1896, 1106, 1924], [1117, 1896, 1179, 1924], [1190, 1896, 1318, 1924], [1329, 1896, 1351, 1924], [1360, 1896, 1498, 1933], [1509, 1896, 1566, 1933], [1578, 1896, 1762, 1924], [1774, 1896, 1821, 1924], [1832, 1896, 1949, 1933], [1960, 1897, 2012, 1924], [2023, 1896, 2173, 1933], [374, 1947, 447, 1976], [457, 1957, 478, 1983], [494, 1953, 520, 1977], [538, 1947, 563, 1975], [580, 1947, 644, 1976], [655, 1947, 822, 1976], [834, 1956, 905, 1984], [918, 1947, 983, 1975], [994, 1947, 1033, 1975], [1044, 1947, 1163, 1984], [1175, 1951, 1206, 1975], [1217, 1947, 1337, 1975], [1351, 1947, 1476, 1984], [1489, 1951, 1519, 1975], [1532, 1947, 1711, 1984], [1722, 1947, 1858, 1975], [1868, 1951, 2114, 1984], [2127, 1947, 2175, 1975], [375, 1998, 530, 2035], [543, 1998, 605, 2026], [615, 1998, 693, 2027], [706, 2002, 851, 2026], [864, 1998, 979, 2026], [990, 2002, 1021, 2026], [1033, 1999, 1091, 2032], [1105, 1998, 1153, 2026], [1165, 1998, 1301, 2026], [1312, 1997, 1343, 2032], [1350, 1998, 1449, 2026], [1460, 1998, 1591, 2035], [1607, 1998, 1666, 2032], [1681, 1998, 1743, 2032], [1759, 1998, 1881, 2032], [1895, 1998, 1945, 2026], [1957, 1999, 2009, 2026], [2022, 1998, 2174, 2035], [375, 2058, 482, 2086], [495, 2053, 526, 2077], [537, 2049, 576, 2077], [588, 2049, 796, 2077], [808, 2049, 855, 2077], [867, 2049, 916, 2077], [928, 2049, 987, 2077], [999, 2049, 1111, 2086], [1123, 2049, 1326, 2077], [1340, 2049, 1513, 2086], [1527, 2049, 1562, 2077], [1575, 2049, 1648, 2083], [376, 2163, 434, 2198], [489, 2163, 569, 2198], [583, 2163, 808, 2207], [822, 2163, 981, 2198], [995, 2163, 1057, 2198], [1071, 2163, 1126, 2198], [1129, 2154, 1167, 2177], [1130, 2187, 1142, 2209], [373, 2248, 472, 2276], [484, 2248, 651, 2285], [664, 2248, 800, 2276], [815, 2257, 897, 2276], [909, 2252, 938, 2276], [950, 2248, 988, 2276], [1000, 2248, 1112, 2285], [1123, 2248, 1275, 2277], [1287, 2248, 1317, 2276], [1329, 2248, 1466, 2276], [1479, 2248, 1621, 2285], [1634, 2248, 1703, 2285], [1714, 2248, 1789, 2277], [1801, 2248, 1878, 2276], [1890, 2248, 2000, 2285], [2013, 2248, 2132, 2285], [2143, 2248, 2174, 2276], [377, 2299, 612, 2327], [623, 2308, 640, 2327], [644, 2308, 671, 2336], [675, 2323, 690, 2333], [707, 2299, 766, 2333], [781, 2299, 829, 2333], [843, 2299, 905, 2333], [437, 2350, 491, 2377], [509, 2353, 580, 2377], [594, 2349, 635, 2386], [651, 2349, 868, 2386], [884, 2349, 934, 2377], [949, 2349, 1091, 2386], [1107, 2358, 1139, 2377], [1155, 2349, 1288, 2378], [1317, 2350, 1374, 2377], [1389, 2349, 1510, 2383], [1528, 2349, 1714, 2386], [1731, 2349, 1978, 2386], [1997, 2358, 2065, 2386], [2083, 2349, 2173, 2386], [376, 2400, 565, 2437], [577, 2400, 645, 2434], [659, 2400, 740, 2437], [753, 2400, 802, 2428], [814, 2400, 884, 2428], [897, 2400, 1071, 2435], [1084, 2409, 1115, 2428], [1129, 2409, 1145, 2428], [1157, 2400, 1377, 2428], [1388, 2400, 1538, 2437], [913, 2492, 980, 2520], [936, 2532, 957, 2545], [1006, 2485, 1017, 2504], [1005, 2516, 1018, 2535], [1030, 2483, 1109, 2530], [1113, 2489, 1155, 2530], [1163, 2484, 1176, 2503], [1163, 2501, 1257, 2531], [1260, 2483, 1282, 2503], [1287, 2492, 1359, 2528], [1382, 2496, 1426, 2520], [1446, 2489, 1542, 2530], [1561, 2491, 1634, 2526], [2097, 2492, 2173, 2527], [373, 2602, 504, 2630], [515, 2602, 662, 2639], [674, 2602, 722, 2630], [734, 2602, 906, 2636], [920, 2602, 967, 2630], [979, 2602, 1125, 2639], [1138, 2602, 1213, 2637], [1226, 2611, 1281, 2630], [1291, 2602, 1329, 2630], [1340, 2602, 1477, 2639], [1488, 2602, 1527, 2639], [1543, 2595, 1622, 2640], [1626, 2611, 1652, 2630], [1666, 2619, 1692, 2620], [1705, 2596, 1766, 2640], [1753, 2621, 1766, 2640], [1772, 2626, 1778, 2636], [1791, 2602, 1889, 2631], [1900, 2602, 1969, 2630], [1979, 2602, 2099, 2630], [2112, 2602, 2173, 2630], [760, 2707, 810, 2748], [827, 2727, 853, 2728], [866, 2707, 916, 2748], [922, 2698, 935, 2717], [950, 2714, 978, 2741], [992, 2686, 1110, 2757], [1051, 2744, 1102, 2763], [1126, 2707, 1246, 2748], [1261, 2714, 1289, 2741], [1302, 2720, 1335, 2744], [1351, 2727, 1377, 2728], [1390, 2707, 1435, 2748], [1442, 2698, 1455, 2717], [1469, 2714, 1497, 2741], [1513, 2707, 1642, 2748], [1658, 2727, 1684, 2728], [1698, 2707, 1752, 2748], [1758, 2698, 1771, 2717], [1786, 2734, 1790, 2738], [1265, 2935, 1284, 2963], [376, 242, 567, 279], [580, 242, 629, 270], [641, 242, 721, 270], [733, 246, 865, 270], [876, 242, 975, 279], [989, 252, 1027, 277], [1044, 255, 1072, 264], [1087, 252, 1128, 276], [1145, 255, 1173, 264], [1189, 242, 1216, 276], [1230, 251, 1277, 271], [1289, 251, 1344, 270], [1356, 242, 1475, 279], [1487, 242, 1536, 270], [1547, 242, 1685, 279], [1698, 242, 1773, 277], [1785, 242, 1826, 279], [716, 342, 783, 370], [739, 382, 760, 395], [804, 324, 880, 389], [862, 376, 913, 395], [928, 339, 1048, 380], [1064, 346, 1092, 373], [1104, 352, 1137, 376], [1153, 359, 1179, 360], [1193, 339, 1238, 380], [1244, 330, 1257, 349], [1272, 366, 1276, 378], [1298, 339, 1550, 380], [1603, 342, 1830, 377], [2097, 342, 2173, 377], [375, 458, 451, 486], [464, 466, 510, 486], [521, 457, 653, 494], [665, 466, 681, 485], [693, 457, 807, 494], [819, 457, 855, 485], [864, 457, 1007, 486], [1020, 457, 1059, 494], [1072, 457, 1203, 494], [1216, 457, 1264, 485], [1277, 466, 1341, 486], [1355, 461, 1398, 485], [1410, 457, 1445, 485], [1454, 457, 1598, 486], [1612, 466, 1630, 485], [1646, 470, 1674, 479], [1689, 466, 1709, 485], [1723, 474, 1749, 475], [1763, 466, 1798, 491], [1812, 457, 1910, 486], [1922, 467, 1950, 491], [1969, 467, 2007, 485], [2023, 445, 2074, 496], [2066, 477, 2122, 497], [2135, 467, 2170, 494], [376, 508, 400, 536], [414, 508, 463, 536], [475, 508, 656, 537], [669, 517, 736, 536], [747, 508, 783, 536], [792, 508, 877, 545], [889, 508, 986, 545], [998, 508, 1110, 537], [1126, 508, 1216, 542], [1231, 508, 1306, 543], [1319, 508, 1462, 536], [496, 608, 563, 636], [523, 648, 536, 661], [584, 590, 661, 655], [643, 642, 693, 661], [708, 605, 1219, 646], [1225, 596, 1238, 615], [1252, 632, 1256, 644], [1279, 605, 1599, 646], [1652, 608, 2050, 644], [374, 711, 474, 740], [485, 720, 567, 748], [580, 711, 806, 748], [817, 711, 960, 739], [705, 812, 772, 840], [732, 852, 745, 865], [793, 793, 870, 858], [852, 846, 902, 865], [917, 809, 1001, 850], [1017, 829, 1043, 830], [1058, 809, 1101, 850], [1107, 800, 1120, 819], [1135, 836, 1139, 848], [1193, 816, 1237, 840], [1286, 809, 1674, 850], [1697, 822, 1733, 846], [1750, 822, 1841, 846], [2097, 812, 2173, 847], [375, 916, 453, 944], [466, 915, 515, 943], [526, 915, 584, 952], [596, 915, 679, 943], [695, 915, 833, 952], [846, 915, 922, 950], [935, 924, 991, 943], [1002, 915, 1041, 943], [1054, 915, 1158, 944], [1170, 919, 1201, 943], [1214, 915, 1299, 943], [1311, 915, 1360, 943], [1373, 924, 1456, 943], [1468, 915, 1616, 952], [1629, 924, 1660, 943], [689, 1038, 756, 1066], [716, 1078, 729, 1091], [795, 1001, 813, 1014], [777, 1027, 833, 1085], [779, 1096, 829, 1115], [846, 1010, 900, 1085], [915, 1042, 943, 1069], [958, 1035, 1042, 1076], [1059, 1055, 1085, 1056], [1099, 1035, 1142, 1076], [1149, 1026, 1162, 1045], [1169, 1062, 1173, 1074], [1196, 1035, 1516, 1076], [1570, 1038, 1857, 1074], [2097, 1037, 2173, 1073], [374, 1165, 402, 1193], [413, 1165, 503, 1202], [512, 1165, 547, 1193], [556, 1165, 612, 1193], [624, 1165, 815, 1202], [828, 1174, 895, 1202], [907, 1165, 944, 1193], [957, 1165, 1050, 1193], [1062, 1165, 1092, 1193], [1107, 1165, 1180, 1199], [1194, 1165, 1241, 1193], [1252, 1165, 1478, 1202], [1492, 1165, 1549, 1193], [1561, 1165, 1623, 1193], [1635, 1165, 1763, 1193], [1775, 1165, 1796, 1193], [1808, 1165, 1869, 1194], [1881, 1165, 1949, 1202], [1961, 1174, 1995, 1193], [2008, 1165, 2173, 1202], [376, 1220, 406, 1244], [418, 1216, 467, 1244], [479, 1216, 630, 1253], [642, 1206, 721, 1245], [690, 1235, 701, 1254], [736, 1216, 857, 1250], [871, 1225, 918, 1245], [930, 1216, 1050, 1244], [1063, 1225, 1100, 1244], [1113, 1216, 1284, 1245], [1295, 1216, 1387, 1253], [1396, 1216, 1427, 1244], [1439, 1216, 1601, 1253], [1613, 1216, 1648, 1245], [438, 1267, 501, 1295], [513, 1276, 601, 1295], [613, 1267, 817, 1304], [830, 1267, 854, 1295], [868, 1267, 1026, 1304], [1039, 1276, 1070, 1295], [1083, 1267, 1213, 1296], [1230, 1267, 1293, 1295], [1304, 1267, 1453, 1304], [1465, 1267, 1495, 1295], [1508, 1266, 1584, 1302], [1597, 1276, 1653, 1295], [1664, 1267, 1703, 1295], [1715, 1267, 1892, 1304], [1905, 1276, 1936, 1295], [1949, 1267, 1998, 1295], [2010, 1267, 2174, 1295], [376, 1317, 476, 1354], [488, 1317, 524, 1345], [534, 1326, 550, 1345], [560, 1317, 693, 1354], [706, 1317, 832, 1354], [844, 1317, 892, 1345], [903, 1317, 1001, 1354], [1018, 1314, 1052, 1355], [1064, 1314, 1121, 1355], [1139, 1317, 1228, 1351], [1242, 1316, 1318, 1352], [1332, 1317, 1417, 1345], [1430, 1317, 1478, 1345], [1490, 1317, 1649, 1345], [1660, 1317, 1761, 1354], [1772, 1317, 1905, 1354], [1919, 1317, 1979, 1352], [1993, 1317, 2176, 1354], [376, 1368, 514, 1405], [530, 1377, 547, 1396], [560, 1368, 631, 1396], [645, 1368, 681, 1396], [691, 1368, 798, 1405], [811, 1367, 832, 1397], [847, 1368, 921, 1397], [934, 1372, 1037, 1396], [1050, 1368, 1100, 1396], [1114, 1368, 1299, 1397], [1314, 1377, 1382, 1396], [1395, 1377, 1415, 1396], [1432, 1368, 1491, 1396], [1503, 1368, 1617, 1405], [1631, 1368, 1681, 1396], [1695, 1368, 1778, 1396], [1791, 1368, 1953, 1405], [1969, 1368, 2027, 1404], [2040, 1378, 2076, 1403], [2081, 1368, 2102, 1403], [2124, 1368, 2174, 1396], [376, 1419, 514, 1456], [526, 1419, 704, 1456], [716, 1419, 773, 1447], [787, 1419, 969, 1456], [981, 1419, 1006, 1447], [1020, 1419, 1125, 1448], [1137, 1419, 1168, 1447], [1180, 1419, 1287, 1456], [1303, 1419, 1326, 1447], [438, 1470, 522, 1499], [534, 1470, 582, 1498], [594, 1474, 654, 1498], [667, 1470, 756, 1507], [769, 1470, 793, 1498], [806, 1470, 908, 1504], [922, 1470, 969, 1498], [983, 1470, 1112, 1498], [1123, 1470, 1170, 1498], [1181, 1470, 1229, 1498], [1241, 1470, 1365, 1507], [1378, 1471, 1430, 1498], [1442, 1470, 1578, 1507], [1590, 1470, 1666, 1505], [1679, 1479, 1734, 1498], [1745, 1470, 1782, 1498], [1793, 1470, 1952, 1499], [1963, 1470, 2002, 1507], [2015, 1470, 2173, 1507], [376, 1521, 437, 1549], [633, 1623, 660, 1647], [677, 1630, 703, 1631], [717, 1623, 786, 1647], [846, 1626, 874, 1635], [930, 1610, 1187, 1651], [1204, 1630, 1230, 1631], [1244, 1610, 1335, 1651], [1394, 1626, 1422, 1635], [1478, 1617, 1726, 1650], [1786, 1626, 1814, 1635], [1870, 1623, 1914, 1649], [374, 1705, 471, 1734], [483, 1714, 529, 1734], [539, 1705, 614, 1733], [625, 1705, 672, 1733], [683, 1705, 872, 1742], [883, 1705, 1007, 1733], [1019, 1714, 1042, 1733], [1058, 1718, 1086, 1727], [1101, 1714, 1124, 1741], [1136, 1722, 1162, 1723], [1174, 1698, 1235, 1733], [1239, 1714, 1274, 1733], [1291, 1705, 1463, 1742], [1476, 1705, 1523, 1733], [1536, 1705, 1629, 1734], [1642, 1709, 1793, 1742], [1805, 1705, 1901, 1734], [1914, 1705, 1974, 1733], [1985, 1705, 2033, 1733], [2045, 1705, 2174, 1733], [376, 1760, 406, 1784], [419, 1756, 469, 1784], [482, 1756, 590, 1784], [605, 1756, 771, 1793], [783, 1756, 924, 1793], [936, 1756, 962, 1784], [975, 1756, 1120, 1784], [1133, 1765, 1165, 1784], [1178, 1756, 1228, 1784], [1241, 1756, 1371, 1784], [1383, 1756, 1521, 1793], [1533, 1756, 1569, 1784], [1579, 1756, 1629, 1784], [1642, 1760, 1704, 1784], [1717, 1756, 1820, 1793], [1834, 1765, 1868, 1784], [1881, 1765, 1913, 1784], [1926, 1756, 1976, 1784], [1990, 1756, 2077, 1793], [2089, 1756, 2126, 1784], [2135, 1756, 2173, 1784], [377, 1811, 536, 1844], [534, 2461, 561, 2502], [696, 2461, 710, 2501], [850, 2461, 877, 2501], [1008, 2461, 1035, 2502], [1167, 2461, 1194, 2501], [1325, 2461, 1352, 2502], [1483, 2461, 1510, 2502], [1642, 2461, 1668, 2501], [1799, 2461, 1826, 2502], [1957, 2461, 2159, 2502], [475, 2415, 535, 2456], [475, 2310, 535, 2350], [475, 2204, 535, 2244], [508, 2099, 535, 2140], [1335, 2517, 1341, 2564], [409, 2216, 444, 2243], [1064, 1925, 1379, 1986], [1403, 1925, 1616, 1973], [376, 2699, 483, 2736], [499, 2699, 522, 2727], [539, 2701, 671, 2735], [682, 2701, 714, 2727], [722, 2701, 767, 2727], [777, 2705, 833, 2727], [845, 2701, 927, 2735], [938, 2701, 1057, 2727], [1072, 2701, 1128, 2727], [1139, 2701, 1303, 2728], [1315, 2710, 1375, 2727], [1386, 2710, 1405, 2727], [1417, 2701, 1448, 2727], [1456, 2701, 1501, 2727], [1512, 2701, 1588, 2735], [1600, 2701, 1687, 2735], [1698, 2701, 1790, 2728], [1802, 2710, 1823, 2735], [1835, 2701, 1858, 2727], [1870, 2701, 1965, 2728], [1976, 2710, 2004, 2727], [2015, 2701, 2060, 2727], [2071, 2701, 2174, 2727], [376, 2748, 440, 2779], [455, 2748, 499, 2774], [511, 2748, 594, 2774], [605, 2748, 666, 2774], [680, 2748, 757, 2774], [769, 2748, 814, 2774], [825, 2748, 917, 2782], [933, 2746, 965, 2783], [975, 2757, 1002, 2778], [1007, 2746, 1027, 2783], [1046, 2748, 1104, 2774], [1115, 2748, 1224, 2774], [1235, 2748, 1289, 2774], [1301, 2752, 1348, 2782], [1360, 2748, 1393, 2774], [1403, 2748, 1448, 2774], [1461, 2748, 1581, 2775], [1593, 2748, 1657, 2774], [1669, 2757, 1714, 2774], [1728, 2748, 1823, 2775], [1836, 2748, 1864, 2774], [1876, 2748, 1931, 2774], [1951, 2748, 2008, 2774], [2021, 2752, 2077, 2774], [2090, 2748, 2173, 2782], [377, 2794, 494, 2820], [506, 2803, 522, 2820], [535, 2794, 557, 2820], [570, 2794, 664, 2821], [675, 2803, 704, 2820], [716, 2803, 732, 2820], [741, 2794, 804, 2820], [815, 2794, 877, 2820], [1265, 2934, 1282, 2964], [373, 239, 557, 277], [571, 239, 586, 268], [600, 243, 664, 268], [676, 242, 758, 276], [769, 242, 913, 276], [924, 242, 967, 268], [977, 243, 1072, 268], [1077, 242, 1235, 276], [397, 299, 416, 321], [439, 296, 549, 329], [565, 295, 640, 329], [652, 295, 739, 329], [750, 304, 771, 329], [783, 295, 815, 321], [823, 295, 915, 329], [926, 304, 955, 326], [967, 295, 1129, 329], [1140, 295, 1167, 321], [394, 346, 416, 368], [439, 342, 579, 369], [589, 343, 599, 368], [614, 354, 640, 363], [655, 343, 679, 373], [693, 343, 835, 376], [840, 351, 873, 368], [877, 345, 931, 368], [945, 354, 971, 363], [985, 346, 1019, 373], [1033, 351, 1107, 368], [1110, 343, 1273, 368], [1287, 354, 1313, 363], [1327, 346, 1361, 373], [1374, 351, 1403, 372], [1419, 354, 1445, 363], [1460, 333, 1551, 379], [1563, 351, 1600, 376], [1607, 364, 1611, 368], [394, 392, 416, 414], [439, 388, 668, 416], [393, 439, 416, 461], [495, 435, 558, 461], [569, 444, 628, 462], [640, 439, 769, 469], [786, 436, 928, 469], [933, 438, 1025, 461], [1038, 447, 1064, 456], [1079, 436, 1221, 469], [1226, 444, 1259, 461], [1263, 438, 1317, 461], [1329, 439, 1350, 462], [1365, 433, 1402, 470], [1415, 451, 1439, 452], [1454, 436, 1478, 468], [1488, 444, 1556, 465], [1571, 451, 1595, 452], [1609, 433, 1779, 470], [1794, 433, 1889, 470], [394, 484, 416, 507], [495, 481, 579, 508], [590, 482, 733, 515], [737, 484, 829, 507], [840, 481, 863, 507], [874, 485, 921, 507], [932, 490, 1051, 508], [1062, 482, 1100, 508], [394, 531, 416, 554], [550, 529, 646, 562], [656, 528, 701, 554], [712, 528, 763, 554], [772, 532, 827, 555], [840, 532, 974, 562], [986, 528, 1018, 554], [1028, 529, 1170, 562], [1175, 537, 1208, 554], [1212, 531, 1266, 554], [394, 578, 416, 600], [495, 575, 551, 601], [563, 574, 646, 601], [395, 625, 416, 647], [495, 621, 558, 647], [569, 630, 628, 648], [640, 625, 769, 655], [786, 630, 861, 647], [864, 622, 968, 647], [972, 624, 1026, 647], [1040, 633, 1066, 642], [1080, 630, 1155, 647], [1158, 622, 1262, 647], [1266, 624, 1320, 647], [1332, 625, 1353, 648], [1368, 619, 1405, 656], [1418, 637, 1442, 638], [1457, 622, 1481, 654], [1491, 630, 1559, 651], [1573, 625, 1599, 650], [1612, 619, 1643, 656], [1660, 628, 1694, 647], [1711, 619, 1743, 656], [1753, 630, 1782, 651], [1796, 625, 1822, 650], [1835, 619, 1892, 656], [394, 672, 416, 695], [495, 668, 579, 695], [590, 669, 830, 694], [842, 668, 864, 694], [876, 672, 922, 694], [933, 677, 1037, 695], [1048, 669, 1085, 695], [381, 718, 416, 740], [550, 715, 646, 748], [656, 714, 701, 740], [712, 714, 763, 740], [772, 718, 827, 741], [840, 718, 974, 748], [986, 714, 1018, 740], [1028, 723, 1102, 740], [1105, 715, 1268, 740], [381, 765, 416, 787], [495, 762, 551, 788], [563, 761, 646, 788], [381, 811, 416, 833], [495, 807, 519, 833], [528, 807, 752, 841], [764, 811, 885, 841], [896, 807, 923, 833], [935, 808, 1078, 841], [1082, 808, 1186, 840], [1200, 812, 1224, 835], [1238, 807, 1464, 841], [1475, 811, 1597, 841], [1608, 807, 1635, 833], [1647, 808, 1829, 833], [1833, 808, 1899, 840], [1911, 808, 1980, 834], [381, 858, 416, 880], [552, 854, 642, 880], [655, 866, 674, 876], [685, 854, 818, 880], [828, 854, 905, 888], [915, 854, 1005, 881], [1016, 854, 1101, 880], [1109, 854, 1154, 880], [1165, 854, 1297, 888], [1308, 863, 1338, 880], [1347, 854, 1392, 880], [1403, 854, 1537, 880], [1546, 854, 1664, 880], [1674, 854, 1719, 880], [1729, 854, 1793, 880], [381, 904, 416, 926], [551, 900, 575, 926], [584, 900, 674, 926], [690, 905, 709, 928], [725, 901, 907, 926], [911, 903, 965, 926], [976, 901, 1045, 927], [381, 950, 416, 973], [607, 948, 729, 974], [740, 947, 873, 973], [885, 951, 1007, 981], [1017, 947, 1049, 973], [1057, 947, 1102, 973], [1113, 947, 1254, 978], [1266, 947, 1319, 973], [1330, 947, 1349, 973], [1359, 951, 1387, 973], [1397, 947, 1442, 973], [1452, 947, 1605, 981], [1617, 947, 1735, 973], [1747, 956, 1777, 973], [381, 997, 416, 1020], [606, 994, 743, 1028], [753, 994, 776, 1020], [787, 994, 967, 1020], [978, 1003, 1006, 1020], [1018, 1003, 1034, 1020], [1045, 994, 1155, 1028], [1165, 994, 1220, 1020], [1231, 994, 1302, 1020], [1314, 994, 1345, 1020], [1349, 994, 1404, 1020], [1415, 998, 1444, 1020], [1455, 994, 1487, 1020], [1499, 994, 1550, 1020], [1559, 994, 1643, 1028], [381, 1044, 416, 1066], [551, 1041, 607, 1067], [619, 1040, 643, 1066], [381, 1091, 416, 1113], [551, 1087, 575, 1113], [584, 1087, 674, 1113], [690, 1092, 709, 1115], [725, 1088, 867, 1121], [872, 1090, 964, 1113], [975, 1088, 1044, 1114], [381, 1137, 416, 1160], [607, 1134, 729, 1160], [740, 1133, 873, 1159], [885, 1137, 1007, 1167], [1017, 1133, 1049, 1159], [1057, 1133, 1102, 1159], [1113, 1133, 1252, 1167], [1264, 1133, 1317, 1159], [1328, 1133, 1347, 1159], [1357, 1137, 1385, 1159], [1395, 1133, 1440, 1159], [1450, 1133, 1603, 1167], [1615, 1133, 1733, 1159], [1745, 1142, 1775, 1159], [378, 1184, 416, 1206], [606, 1180, 745, 1206], [756, 1180, 778, 1206], [789, 1180, 969, 1206], [980, 1189, 1008, 1206], [1020, 1189, 1036, 1206], [1047, 1180, 1157, 1214], [1167, 1180, 1222, 1206], [1233, 1180, 1304, 1206], [1316, 1180, 1347, 1206], [1351, 1180, 1406, 1206], [1417, 1184, 1446, 1206], [1457, 1180, 1489, 1206], [1501, 1180, 1552, 1206], [1562, 1180, 1645, 1214], [378, 1230, 416, 1252], [551, 1227, 607, 1253], [619, 1226, 643, 1252], [378, 1277, 416, 1299], [495, 1274, 551, 1300], [563, 1273, 587, 1299], [378, 1324, 416, 1346], [495, 1321, 582, 1349], [378, 1370, 416, 1392], [439, 1367, 495, 1393], [506, 1366, 590, 1393], [378, 1416, 416, 1439], [439, 1413, 502, 1439], [513, 1413, 563, 1439], [575, 1417, 696, 1447], [707, 1413, 779, 1439], [789, 1413, 874, 1439], [883, 1413, 928, 1439], [939, 1413, 1070, 1447], [1081, 1422, 1111, 1439], [1121, 1413, 1255, 1439], [1264, 1417, 1293, 1439], [1303, 1413, 1348, 1439], [1360, 1413, 1478, 1439], [1490, 1422, 1520, 1439], [438, 1562, 461, 1589], [472, 1561, 600, 1589], [614, 1565, 643, 1589], [656, 1561, 791, 1589], [802, 1561, 872, 1590], [884, 1565, 913, 1589], [926, 1561, 988, 1589], [1000, 1561, 1048, 1589], [1061, 1565, 1121, 1589], [1134, 1561, 1233, 1598], [1250, 1561, 1311, 1589], [1324, 1565, 1403, 1589], [1414, 1561, 1525, 1598], [1536, 1561, 1610, 1589], [1623, 1561, 1771, 1598], [1784, 1570, 1881, 1589], [1894, 1565, 1924, 1589], [1936, 1561, 1973, 1589], [1986, 1561, 2034, 1589], [2046, 1570, 2104, 1589], [2116, 1561, 2173, 1589], [376, 1616, 406, 1640], [418, 1612, 530, 1641], [544, 1612, 602, 1640], [614, 1613, 717, 1641], [733, 1612, 806, 1646], [822, 1612, 893, 1640], [908, 1612, 1058, 1649], [1071, 1616, 1154, 1640], [1168, 1612, 1248, 1640], [1259, 1612, 1309, 1640], [1321, 1612, 1402, 1640], [1413, 1612, 1499, 1649], [1511, 1622, 1543, 1647], [1560, 1625, 1588, 1634], [1604, 1612, 1631, 1646], [1646, 1612, 1703, 1640], [1715, 1612, 1942, 1649], [1955, 1616, 2111, 1649], [2125, 1612, 2174, 1640], [375, 1667, 508, 1699], [519, 1672, 631, 1691], [642, 1663, 794, 1690], [806, 1662, 841, 1690], [851, 1662, 900, 1690], [911, 1671, 1006, 1699], [1016, 1662, 1135, 1690], [1148, 1671, 1188, 1690], [1200, 1662, 1250, 1690], [1262, 1661, 1283, 1691], [1296, 1662, 1375, 1696], [1390, 1671, 1421, 1690], [1434, 1662, 1504, 1691], [1517, 1671, 1548, 1690], [1561, 1662, 1610, 1690], [1622, 1662, 1758, 1691], [1769, 1672, 1903, 1691], [1916, 1663, 2068, 1699], [2079, 1662, 2115, 1690], [2125, 1662, 2174, 1690], [376, 1713, 468, 1742], [479, 1713, 598, 1741], [610, 1722, 650, 1741], [662, 1713, 712, 1741], [725, 1712, 746, 1742], [758, 1713, 837, 1741], [852, 1713, 951, 1741], [962, 1713, 1035, 1741], [1048, 1722, 1154, 1742], [1166, 1713, 1314, 1747], [1328, 1713, 1378, 1741], [1390, 1713, 1535, 1750], [1545, 1713, 1631, 1750], [1642, 1713, 1743, 1742], [1754, 1713, 1849, 1741], [1860, 1713, 1909, 1741], [1921, 1713, 2069, 1750], [2079, 1722, 2113, 1741], [2125, 1713, 2174, 1741], [376, 1764, 521, 1792], [533, 1764, 661, 1792], [673, 1764, 720, 1792], [733, 1764, 801, 1792], [813, 1764, 838, 1792], [850, 1764, 924, 1792], [936, 1768, 965, 1792], [978, 1764, 1020, 1792], [1033, 1773, 1049, 1792], [1060, 1764, 1122, 1792], [1135, 1768, 1268, 1801], [1280, 1764, 1315, 1792], [1324, 1764, 1372, 1792], [1384, 1768, 1444, 1792], [1457, 1764, 1555, 1801], [1572, 1764, 1633, 1792], [1645, 1764, 1807, 1801], [1819, 1764, 1843, 1792], [1857, 1764, 1926, 1792], [1936, 1764, 2074, 1792], [2087, 1768, 2114, 1792], [2126, 1764, 2173, 1792], [376, 1815, 435, 1843], [447, 1815, 483, 1843], [492, 1815, 542, 1843], [554, 1815, 713, 1843], [725, 1819, 871, 1852], [886, 1815, 945, 1843], [956, 1815, 1082, 1843], [1092, 1815, 1169, 1843], [1182, 1815, 1222, 1843], [1234, 1819, 1296, 1843], [1308, 1815, 1401, 1852], [1415, 1819, 1568, 1852], [1580, 1815, 1657, 1844], [1668, 1815, 1747, 1843], [1759, 1815, 1912, 1843], [1928, 1815, 2128, 1843], [2140, 1815, 2176, 1843], [376, 1866, 432, 1894], [446, 1866, 569, 1894], [581, 1866, 605, 1894], [618, 1866, 776, 1903], [789, 1875, 820, 1894], [833, 1866, 1005, 1903], [1021, 1866, 1044, 1900], [1058, 1866, 1149, 1895], [1162, 1875, 1198, 1894], [1210, 1866, 1349, 1903], [1361, 1866, 1396, 1894], [1406, 1866, 1462, 1894], [1475, 1866, 1641, 1903], [1652, 1866, 1677, 1894], [1691, 1866, 1796, 1895], [1808, 1866, 1839, 1894], [1851, 1866, 1958, 1903], [1970, 1866, 1997, 1894], [438, 1918, 463, 1945], [477, 1917, 502, 1945], [518, 1917, 682, 1954], [695, 1921, 726, 1945], [741, 1921, 812, 1945], [827, 1917, 890, 1945], [904, 1917, 989, 1945], [1003, 1926, 1051, 1946], [1065, 1917, 1142, 1946], [1158, 1926, 1175, 1945], [1189, 1917, 1319, 1945], [1333, 1917, 1462, 1945], [1476, 1917, 1512, 1945], [1523, 1917, 1625, 1954], [1640, 1917, 1672, 1945], [1686, 1917, 1736, 1945], [1751, 1917, 1831, 1951], [1848, 1917, 1898, 1945], [1913, 1921, 2043, 1954], [2057, 1926, 2174, 1946], [376, 1967, 527, 1995], [539, 1976, 596, 1995], [607, 1967, 646, 1995], [658, 1967, 823, 2004], [836, 1976, 867, 1995], [881, 1976, 898, 1995], [908, 1967, 1073, 2004], [1085, 1967, 1181, 1995], [1192, 1967, 1332, 1995], [1343, 1967, 1417, 1996], [1430, 1971, 1583, 2004], [1596, 1967, 1632, 1995], [1642, 1967, 1884, 2004], [1897, 1967, 2068, 2004], [2082, 1967, 2177, 2004], [374, 2018, 466, 2047], [480, 2018, 530, 2046], [545, 2018, 682, 2046], [695, 2027, 831, 2047], [845, 2018, 995, 2055], [1008, 2018, 1034, 2046], [1049, 2018, 1174, 2046], [1187, 2018, 1352, 2055], [1366, 2018, 1461, 2046], [1475, 2018, 1614, 2046], [1628, 2018, 1702, 2047], [1716, 2022, 1870, 2055], [1885, 2018, 1921, 2046], [1932, 2018, 2175, 2055], [376, 2069, 554, 2106], [574, 2069, 669, 2106], [702, 2069, 840, 2097], [856, 2069, 990, 2098], [1007, 2069, 1069, 2097], [1086, 2069, 1112, 2097], [1130, 2069, 1193, 2097], [1210, 2069, 1286, 2097], [1304, 2073, 1443, 2106], [1460, 2069, 1492, 2097], [1509, 2069, 1559, 2097], [1576, 2069, 1648, 2097], [1664, 2069, 1868, 2106], [1884, 2069, 1990, 2097], [2007, 2073, 2105, 2097], [2124, 2069, 2174, 2097], [376, 2120, 686, 2157], [697, 2120, 815, 2157], [827, 2129, 904, 2148], [916, 2120, 947, 2148], [959, 2120, 1008, 2148], [1021, 2120, 1190, 2157], [1205, 2120, 1263, 2148], [1274, 2120, 1300, 2148], [1313, 2120, 1378, 2148], [1389, 2120, 1534, 2149], [1545, 2120, 1663, 2157], [1675, 2129, 1761, 2148], [1778, 2120, 1850, 2148], [1862, 2120, 1955, 2148], [1968, 2120, 2017, 2148], [2029, 2124, 2130, 2148], [2141, 2120, 2177, 2148], [376, 2171, 423, 2199], [436, 2171, 519, 2199], [530, 2171, 616, 2208], [629, 2171, 659, 2199], [671, 2171, 719, 2199], [732, 2171, 897, 2208], [911, 2171, 968, 2199], [980, 2171, 1010, 2199], [1022, 2171, 1081, 2199], [1094, 2180, 1130, 2199], [1143, 2171, 1271, 2208], [1284, 2171, 1319, 2199], [1328, 2171, 1376, 2199], [1388, 2171, 1620, 2208], [1632, 2171, 1813, 2208], [1826, 2171, 1861, 2199], [1870, 2171, 1926, 2199], [1938, 2171, 2081, 2200], [2092, 2171, 2173, 2199], [376, 2225, 406, 2249], [419, 2230, 456, 2249], [468, 2221, 580, 2250], [593, 2218, 677, 2259], [692, 2221, 901, 2258], [916, 2221, 989, 2255], [438, 2273, 472, 2300], [486, 2272, 563, 2309], [577, 2272, 613, 2300], [624, 2272, 693, 2306], [708, 2272, 830, 2301], [846, 2272, 907, 2306], [924, 2276, 1011, 2300], [1025, 2272, 1088, 2300], [1101, 2272, 1301, 2309], [1315, 2272, 1365, 2300], [1379, 2272, 1531, 2300], [1545, 2272, 1604, 2300], [1617, 2272, 1767, 2309], [1780, 2272, 1935, 2300], [1949, 2272, 1981, 2300], [1994, 2281, 2133, 2309], [2147, 2272, 2173, 2300], [376, 2323, 546, 2357], [561, 2323, 617, 2351], [629, 2323, 720, 2352], [735, 2332, 751, 2351], [762, 2323, 927, 2360], [941, 2323, 1087, 2360], [1100, 2332, 1130, 2351], [1143, 2323, 1315, 2360], [1328, 2323, 1449, 2351], [1460, 2327, 1490, 2351], [1502, 2323, 1547, 2351], [1559, 2323, 1708, 2360], [1720, 2323, 1848, 2351], [1865, 2324, 1905, 2351], [1917, 2323, 1973, 2351], [1987, 2323, 2174, 2352], [374, 2383, 419, 2403], [432, 2374, 518, 2402], [530, 2378, 588, 2403], [601, 2374, 714, 2402], [732, 2374, 874, 2403], [887, 2374, 1008, 2402], [1019, 2383, 1074, 2402], [1085, 2374, 1123, 2402], [1135, 2374, 1310, 2411], [1323, 2383, 1353, 2402], [1367, 2383, 1383, 2402], [1395, 2374, 1554, 2402], [1566, 2374, 1683, 2403], [1695, 2374, 1731, 2402], [1739, 2374, 1787, 2402], [1800, 2374, 1965, 2411], [1977, 2374, 2098, 2402], [2111, 2374, 2173, 2409], [377, 2425, 497, 2454], [508, 2425, 581, 2460], [596, 2425, 652, 2453], [664, 2425, 724, 2453], [736, 2434, 752, 2453], [764, 2425, 875, 2453], [887, 2425, 1142, 2462], [1154, 2425, 1189, 2453], [1198, 2425, 1246, 2453], [1259, 2425, 1424, 2462], [1437, 2425, 1558, 2453], [1569, 2434, 1625, 2453], [1635, 2425, 1673, 2453], [1684, 2425, 1787, 2462], [1800, 2425, 1989, 2462], [2001, 2425, 2032, 2453], [2042, 2425, 2179, 2462], [376, 2535, 455, 2565], [500, 2535, 649, 2565], [660, 2535, 937, 2573], [950, 2535, 985, 2565], [995, 2535, 1198, 2573], [373, 2616, 427, 2643], [441, 2624, 574, 2652], [588, 2624, 658, 2644], [674, 2624, 712, 2643], [725, 2615, 862, 2643], [876, 2615, 1140, 2652], [1154, 2615, 1190, 2643], [1202, 2615, 1252, 2643], [1267, 2615, 1438, 2652], [1453, 2615, 1587, 2643], [1611, 2615, 1675, 2643], [1689, 2615, 1772, 2643], [1786, 2615, 1856, 2643], [1869, 2615, 1895, 2643], [1910, 2619, 1941, 2643], [1956, 2615, 2104, 2652], [2118, 2624, 2174, 2643], [376, 2666, 600, 2694], [612, 2675, 725, 2703], [741, 2666, 803, 2700], [818, 2670, 849, 2694], [862, 2670, 940, 2694], [952, 2666, 1001, 2694], [1013, 2666, 1161, 2703], [1173, 2666, 1230, 2694], [1242, 2666, 1392, 2694], [1403, 2666, 1606, 2694], [1623, 2666, 1800, 2700], [1815, 2666, 1854, 2694], [1866, 2666, 2175, 2703], [376, 2717, 549, 2754], [564, 2717, 639, 2745], [652, 2726, 684, 2745], [699, 2717, 872, 2754], [886, 2726, 903, 2745], [916, 2721, 1055, 2754], [1066, 2726, 1101, 2745], [1112, 2717, 1272, 2754], [1286, 2721, 1440, 2754], [1453, 2717, 1535, 2745], [1547, 2717, 1642, 2745], [1654, 2717, 1704, 2745], [1716, 2717, 1883, 2754], [1896, 2726, 1931, 2745], [1943, 2717, 1993, 2745], [2005, 2717, 2065, 2745], [2077, 2717, 2114, 2745], [2124, 2717, 2174, 2745], [376, 2767, 522, 2804], [533, 2776, 589, 2795], [600, 2767, 639, 2795], [650, 2767, 842, 2804], [854, 2767, 885, 2795], [897, 2771, 1034, 2795], [1045, 2767, 1126, 2795], [1142, 2768, 1222, 2795], [1232, 2767, 1372, 2796], [1384, 2767, 1445, 2795], [1455, 2767, 1542, 2795], [1554, 2767, 1778, 2795], [1790, 2776, 1888, 2804], [1899, 2767, 2172, 2804], [1265, 2935, 1283, 2964], [233, 288, 302, 337], [855, 288, 924, 337], [1472, 288, 1541, 337], [233, 674, 302, 723], [855, 674, 924, 723], [1472, 674, 1541, 723], [233, 1051, 302, 1100], [855, 1051, 924, 1100], [1472, 1051, 1541, 1100], [376, 1440, 483, 1477], [495, 1440, 523, 1468], [540, 1442, 673, 1476], [684, 1442, 716, 1468], [725, 1442, 769, 1468], [780, 1442, 919, 1469], [930, 1442, 962, 1468], [971, 1442, 1016, 1468], [1027, 1446, 1083, 1468], [1094, 1442, 1177, 1476], [1188, 1442, 1307, 1468], [1322, 1442, 1379, 1468], [1391, 1442, 1513, 1468], [1523, 1451, 1643, 1469], [1654, 1442, 1788, 1476], [1799, 1442, 1885, 1475], [1897, 1442, 1951, 1468], [1961, 1442, 2060, 1476], [2070, 1451, 2175, 1469], [376, 1488, 507, 1514], [518, 1489, 619, 1522], [632, 1497, 675, 1514], [685, 1488, 800, 1522], [811, 1497, 854, 1514], [865, 1497, 942, 1522], [955, 1492, 1019, 1522], [1034, 1489, 1069, 1514], [1080, 1492, 1136, 1522], [1149, 1489, 1187, 1521], [1198, 1488, 1243, 1514], [1253, 1488, 1394, 1522], [1405, 1488, 1427, 1514], [1439, 1488, 1591, 1514], [1607, 1489, 1683, 1522], [1695, 1489, 1734, 1521], [1745, 1492, 1772, 1514], [1785, 1489, 1823, 1521], [1837, 1488, 2012, 1522], [2024, 1497, 2137, 1522], [2146, 1492, 2173, 1514], [375, 1535, 475, 1569], [486, 1535, 620, 1569], [629, 1535, 683, 1561], [693, 1535, 829, 1561], [839, 1535, 954, 1562], [963, 1535, 1116, 1569], [1127, 1535, 1265, 1569], [1276, 1535, 1401, 1562], [1412, 1535, 1494, 1561], [1508, 1536, 1581, 1561], [1591, 1535, 1654, 1562], [1665, 1535, 1747, 1562], [1759, 1535, 1803, 1561], [1814, 1544, 1935, 1562], [1946, 1535, 2080, 1569], [2089, 1535, 2173, 1569], [376, 1581, 473, 1615], [485, 1585, 618, 1615], [629, 1581, 739, 1608], [749, 1581, 829, 1612], [840, 1581, 884, 1607], [895, 1590, 996, 1608], [1007, 1581, 1138, 1607], [1148, 1585, 1218, 1607], [1227, 1590, 1335, 1608], [1345, 1581, 1397, 1607], [1407, 1590, 1497, 1615], [1507, 1581, 1620, 1615], [1632, 1585, 1765, 1615], [1776, 1581, 1840, 1608], [1850, 1590, 1908, 1608], [1919, 1590, 1984, 1607], [1994, 1585, 2021, 1607], [2032, 1581, 2149, 1607], [2159, 1590, 2174, 1607], [376, 1637, 477, 1655], [488, 1628, 608, 1654], [619, 1628, 689, 1654], [698, 1628, 743, 1654], [753, 1628, 839, 1662], [849, 1632, 876, 1654], [886, 1628, 931, 1654], [941, 1637, 999, 1655], [1009, 1628, 1106, 1662], [1120, 1629, 1156, 1654], [1167, 1632, 1223, 1662], [1235, 1628, 1274, 1661], [1285, 1628, 1329, 1654], [1340, 1628, 1391, 1654], [1402, 1628, 1433, 1654], [1440, 1628, 1485, 1654], [1494, 1628, 1557, 1654], [1567, 1628, 1590, 1654], [1600, 1628, 1721, 1659], [1732, 1628, 1778, 1654], [1787, 1628, 1832, 1654], [1842, 1628, 1973, 1654], [1983, 1628, 2035, 1654], [2045, 1628, 2174, 1662], [377, 1674, 466, 1708], [477, 1674, 593, 1708], [606, 1674, 658, 1700], [670, 1683, 699, 1700], [711, 1674, 730, 1700], [741, 1674, 763, 1700], [775, 1683, 917, 1708], [927, 1678, 955, 1700], [966, 1674, 1048, 1700], [1057, 1674, 1102, 1700], [1114, 1678, 1234, 1708], [1245, 1678, 1270, 1700], [1280, 1674, 1325, 1700], [1336, 1674, 1468, 1700], [1478, 1674, 1554, 1708], [1564, 1674, 1653, 1701], [1663, 1674, 1708, 1700], [1719, 1674, 1993, 1708], [2003, 1674, 2119, 1700], [2129, 1674, 2174, 1700], [376, 1721, 447, 1747], [466, 1721, 548, 1748], [560, 1721, 604, 1747], [616, 1721, 753, 1747], [764, 1721, 895, 1755], [907, 1721, 985, 1755], [996, 1721, 1019, 1747], [1032, 1721, 1059, 1747], [1072, 1721, 1116, 1747], [1128, 1730, 1250, 1748], [1262, 1721, 1397, 1755], [1408, 1721, 1452, 1747], [1465, 1721, 1589, 1747], [1601, 1725, 1726, 1755], [1736, 1721, 1759, 1747], [1771, 1721, 1903, 1748], [1914, 1721, 1968, 1747], [1978, 1721, 2078, 1755], [2089, 1721, 2117, 1747], [2129, 1721, 2174, 1747], [377, 1768, 504, 1799], [517, 1768, 599, 1795], [610, 1768, 655, 1794], [666, 1777, 771, 1795], [782, 1768, 918, 1794], [928, 1768, 951, 1794], [962, 1768, 1082, 1802], [1092, 1777, 1121, 1794], [1133, 1777, 1149, 1794], [1160, 1768, 1273, 1802], [1283, 1768, 1338, 1794], [1349, 1768, 1421, 1794], [1432, 1768, 1476, 1794], [1488, 1768, 1613, 1794], [1622, 1768, 1785, 1802], [1795, 1772, 1822, 1794], [1834, 1768, 1878, 1794], [1889, 1768, 1941, 1794], [1951, 1768, 2082, 1802], [2092, 1768, 2177, 1802], [375, 1814, 507, 1848], [519, 1814, 547, 1840], [561, 1814, 610, 1847], [629, 1814, 686, 1840], [699, 1814, 846, 1848], [857, 1814, 951, 1841], [963, 1814, 1026, 1840], [1039, 1814, 1168, 1840], [1181, 1814, 1282, 1848], [1296, 1818, 1442, 1848], [1456, 1814, 1504, 1840], [1516, 1814, 1592, 1840], [1604, 1814, 1649, 1840], [1661, 1814, 1944, 1848], [1956, 1814, 2048, 1848], [2061, 1823, 2106, 1840], [2119, 1814, 2174, 1840], [376, 1861, 509, 1895], [522, 1861, 567, 1887], [578, 1861, 730, 1895], [742, 1861, 775, 1887], [784, 1861, 871, 1895], [884, 1865, 1021, 1895], [1034, 1865, 1062, 1887], [1074, 1861, 1119, 1887], [1132, 1861, 1252, 1887], [1264, 1861, 1286, 1887], [1298, 1861, 1427, 1895], [1439, 1861, 1556, 1895], [1568, 1865, 1641, 1895], [1655, 1861, 1704, 1894], [1719, 1862, 1760, 1894], [1773, 1861, 1827, 1887], [1839, 1862, 1888, 1894], [1905, 1861, 2012, 1895], [2024, 1865, 2051, 1887], [2063, 1865, 2121, 1895], [2135, 1862, 2175, 1894], [375, 1907, 420, 1933], [431, 1907, 521, 1941], [533, 1916, 577, 1933], [588, 1916, 624, 1933], [635, 1907, 730, 1941], [740, 1907, 863, 1941], [874, 1907, 926, 1933], [936, 1907, 981, 1933], [992, 1907, 1102, 1933], [1113, 1907, 1205, 1934], [1216, 1907, 1343, 1933], [1354, 1907, 1454, 1941], [1464, 1907, 1528, 1933], [1540, 1911, 1683, 1941], [1695, 1907, 1741, 1933], [1753, 1907, 1827, 1933], [1837, 1907, 1882, 1933], [1893, 1907, 1945, 1933], [1957, 1907, 1988, 1933], [1996, 1907, 2041, 1933], [2051, 1907, 2115, 1933], [2125, 1907, 2173, 1933], [376, 1954, 484, 1988], [494, 1954, 564, 1980], [574, 1954, 689, 1980], [699, 1954, 744, 1980], [755, 1954, 899, 1988], [911, 1958, 993, 1988], [375, 2093, 428, 2112], [441, 2084, 554, 2121], [566, 2084, 667, 2112], [679, 2084, 752, 2118], [766, 2084, 905, 2121], [919, 2093, 1016, 2121], [1029, 2093, 1063, 2112], [1074, 2084, 1199, 2112], [1209, 2084, 1332, 2112], [1349, 2084, 1431, 2112], [1445, 2084, 1626, 2121], [1639, 2084, 1754, 2121], [1767, 2084, 1969, 2121], [1980, 2084, 2173, 2121], [376, 2144, 514, 2172], [527, 2135, 645, 2163], [659, 2139, 687, 2163], [700, 2144, 786, 2163], [799, 2135, 835, 2163], [844, 2135, 894, 2163], [907, 2135, 1000, 2163], [1011, 2144, 1045, 2163], [1056, 2144, 1181, 2164], [1193, 2135, 1377, 2172], [1394, 2136, 1454, 2163], [1465, 2135, 1497, 2163], [1509, 2135, 1559, 2163], [1571, 2135, 1743, 2172], [1757, 2135, 1927, 2172], [1941, 2135, 1991, 2163], [2004, 2135, 2175, 2163], [376, 2186, 504, 2214], [517, 2186, 553, 2214], [566, 2190, 719, 2223], [734, 2186, 770, 2214], [781, 2186, 831, 2214], [845, 2186, 1160, 2223], [1173, 2186, 1198, 2214], [1209, 2186, 1274, 2223], [1287, 2186, 1336, 2214], [1351, 2186, 1415, 2214], [1429, 2186, 1465, 2214], [1476, 2186, 1526, 2214], [1540, 2186, 1626, 2223], [1640, 2186, 1739, 2223], [1754, 2186, 1813, 2221], [1830, 2186, 1889, 2214], [1903, 2186, 1968, 2214], [1983, 2186, 2033, 2214], [2047, 2186, 2175, 2214], [376, 2237, 412, 2265], [424, 2241, 577, 2274], [592, 2241, 622, 2265], [635, 2237, 675, 2265], [688, 2237, 821, 2265], [834, 2237, 866, 2265], [879, 2237, 929, 2265], [943, 2246, 1042, 2274], [1056, 2237, 1241, 2274], [1254, 2237, 1304, 2265], [1318, 2237, 1481, 2274], [1494, 2237, 1558, 2266], [1571, 2237, 1610, 2265], [1624, 2247, 1655, 2265], [1677, 2237, 1806, 2274], [1819, 2246, 1875, 2265], [1889, 2237, 1925, 2265], [1936, 2237, 2021, 2265], [2035, 2237, 2112, 2265], [2126, 2246, 2174, 2266], [376, 2288, 553, 2325], [565, 2297, 581, 2316], [593, 2288, 775, 2325], [787, 2297, 885, 2325], [896, 2288, 990, 2316], [1002, 2297, 1042, 2316], [1055, 2297, 1071, 2316], [1083, 2288, 1262, 2325], [1277, 2297, 1359, 2325], [1371, 2288, 1407, 2316], [1416, 2288, 1497, 2316], [1509, 2288, 1611, 2325], [1624, 2298, 1655, 2316], [1672, 2289, 1747, 2317], [1761, 2292, 1910, 2325], [1925, 2297, 1973, 2316], [1986, 2288, 2083, 2316], [2095, 2288, 2174, 2316], [376, 2339, 425, 2367], [442, 2343, 513, 2367], [528, 2339, 564, 2367], [577, 2339, 627, 2367], [643, 2348, 727, 2376], [743, 2348, 792, 2373], [812, 2339, 871, 2367], [887, 2348, 904, 2367], [918, 2339, 1029, 2376], [1045, 2339, 1081, 2367], [1093, 2339, 1228, 2376], [1245, 2348, 1294, 2367], [1310, 2339, 1497, 2367], [1512, 2343, 1542, 2367], [1557, 2339, 1636, 2376], [1652, 2339, 1735, 2367], [1750, 2339, 1786, 2367], [1799, 2339, 1849, 2367], [1865, 2339, 1930, 2367], [1945, 2339, 2004, 2367], [2019, 2339, 2077, 2367], [2092, 2339, 2174, 2368], [377, 2393, 524, 2426], [537, 2389, 568, 2417], [580, 2389, 627, 2417], [641, 2398, 728, 2426], [742, 2389, 831, 2417], [843, 2389, 873, 2417], [885, 2389, 933, 2417], [945, 2398, 1011, 2426], [1023, 2389, 1059, 2417], [1069, 2398, 1085, 2417], [1096, 2389, 1221, 2417], [1231, 2389, 1333, 2417], [1350, 2389, 1420, 2417], [1433, 2389, 1697, 2426], [1710, 2389, 1854, 2423], [1867, 2389, 1939, 2417], [1953, 2393, 2004, 2417], [2014, 2389, 2129, 2426], [2141, 2389, 2177, 2417], [376, 2440, 423, 2468], [434, 2440, 519, 2468], [532, 2440, 655, 2468], [666, 2440, 753, 2477], [770, 2440, 899, 2474], [912, 2440, 968, 2468], [981, 2440, 1201, 2468], [1213, 2449, 1308, 2477], [1319, 2440, 1449, 2477], [1463, 2449, 1479, 2468], [1491, 2440, 1585, 2477], [1597, 2449, 1731, 2477], [1744, 2440, 1902, 2468], [1915, 2444, 1942, 2468], [1953, 2440, 2001, 2468], [2012, 2440, 2173, 2477], [376, 2491, 411, 2519], [420, 2491, 468, 2519], [481, 2491, 647, 2528], [660, 2491, 788, 2528], [800, 2491, 848, 2519], [860, 2495, 919, 2519], [930, 2491, 966, 2519], [975, 2500, 1071, 2528], [1083, 2491, 1251, 2528], [1264, 2491, 1326, 2519], [1338, 2491, 1417, 2519], [1429, 2500, 1563, 2528], [1576, 2495, 1784, 2528], [1796, 2491, 1853, 2519], [1866, 2491, 1905, 2519], [1915, 2491, 1967, 2519], [1978, 2491, 2026, 2519], [2040, 2491, 2174, 2528], [375, 2542, 492, 2579], [503, 2551, 537, 2570], [548, 2542, 638, 2570], [651, 2542, 780, 2579], [437, 2594, 491, 2621], [503, 2593, 566, 2621], [581, 2597, 659, 2621], [671, 2593, 718, 2621], [729, 2593, 804, 2621], [817, 2597, 953, 2630], [964, 2593, 1013, 2621], [1025, 2593, 1182, 2630], [1195, 2593, 1307, 2622], [1325, 2603, 1346, 2621], [1359, 2593, 1461, 2630], [1473, 2593, 1509, 2621], [1518, 2593, 1567, 2621], [1580, 2597, 1724, 2630], [1737, 2603, 1756, 2630], [1770, 2593, 1872, 2630], [1885, 2593, 1942, 2621], [1955, 2593, 2049, 2630], [2066, 2593, 2172, 2630], [376, 2643, 474, 2680], [486, 2652, 571, 2671], [584, 2652, 616, 2671], [628, 2643, 798, 2671], [809, 2643, 900, 2680], [912, 2643, 962, 2671], [975, 2643, 1061, 2671], [1073, 2647, 1133, 2672], [1146, 2643, 1268, 2677], [1282, 2643, 1335, 2671], [1347, 2643, 1438, 2680], [1450, 2643, 1500, 2671], [1512, 2643, 1641, 2671], [1653, 2643, 1689, 2671], [1699, 2643, 1788, 2671], [1801, 2643, 1851, 2671], [1865, 2643, 2027, 2680], [2038, 2643, 2173, 2680], [376, 2694, 554, 2731], [567, 2694, 670, 2731], [681, 2694, 821, 2723], [835, 2698, 988, 2731], [1001, 2694, 1082, 2731], [1096, 2698, 1127, 2722], [1139, 2703, 1280, 2731], [1292, 2694, 1642, 2731], [1656, 2694, 1678, 2722], [1688, 2703, 1764, 2731], [1777, 2694, 1826, 2722], [1836, 2698, 1867, 2722], [1878, 2698, 2077, 2731], [2089, 2694, 2174, 2722], [374, 2745, 487, 2774], [503, 2745, 574, 2773], [587, 2745, 649, 2773], [660, 2745, 795, 2782], [807, 2745, 879, 2774], [891, 2745, 976, 2773], [987, 2745, 1168, 2773], [1181, 2745, 1238, 2773], [1251, 2745, 1328, 2773], [1339, 2745, 1548, 2782], [1560, 2745, 1666, 2773], [1678, 2745, 1827, 2782], [1840, 2754, 1895, 2773], [1906, 2745, 2175, 2782], [376, 2796, 459, 2824], [471, 2805, 527, 2824], [538, 2796, 577, 2824], [588, 2796, 737, 2825], [749, 2796, 780, 2824], [792, 2796, 841, 2824], [853, 2796, 930, 2824], [942, 2796, 1026, 2824], [1036, 2800, 1065, 2824], [1076, 2796, 1904, 2832], [1265, 2936, 1283, 2963], [376, 237, 436, 272], [488, 237, 716, 272], [730, 237, 955, 281], [969, 237, 1128, 272], [1142, 237, 1203, 272], [1218, 237, 1273, 272], [1276, 228, 1314, 251], [1277, 262, 1289, 284], [373, 323, 427, 350], [439, 331, 508, 351], [520, 326, 641, 359], [653, 331, 670, 350], [681, 322, 804, 356], [818, 322, 983, 350], [994, 322, 1115, 351], [1127, 322, 1163, 350], [1173, 322, 1222, 350], [1235, 322, 1405, 359], [1418, 322, 1551, 350], [1568, 322, 1779, 359], [1793, 322, 1843, 350], [1854, 322, 2000, 359], [2013, 322, 2175, 359], [376, 377, 455, 401], [468, 377, 519, 401], [531, 377, 561, 401], [573, 373, 610, 401], [623, 373, 791, 410], [803, 377, 832, 401], [845, 373, 893, 401], [906, 373, 964, 401], [976, 373, 1134, 410], [1146, 373, 1182, 401], [1191, 373, 1308, 402], [1323, 373, 1396, 407], [1410, 373, 1523, 410], [1535, 382, 1603, 402], [1615, 373, 1686, 402], [1699, 382, 1715, 401], [1727, 373, 1838, 401], [1849, 373, 2070, 410], [2081, 373, 2174, 401], [376, 433, 415, 452], [427, 424, 621, 461], [438, 475, 502, 503], [516, 475, 575, 512], [591, 475, 661, 503], [676, 475, 702, 503], [718, 479, 749, 503], [764, 475, 850, 503], [865, 475, 960, 503], [976, 475, 1236, 512], [1253, 479, 1283, 503], [1299, 475, 1349, 503], [1365, 479, 1496, 512], [1511, 484, 1628, 504], [1644, 475, 1796, 503], [1812, 475, 1871, 503], [1887, 475, 2024, 503], [2038, 484, 2174, 504], [376, 525, 532, 562], [545, 525, 715, 562], [728, 525, 847, 562], [859, 525, 909, 553], [922, 534, 1006, 553], [1017, 525, 1126, 553], [1138, 525, 1191, 553], [1203, 525, 1409, 562], [1420, 525, 1567, 562], [1579, 525, 1629, 553], [1640, 525, 1857, 562], [1869, 525, 1905, 553], [1915, 525, 1964, 553], [1977, 525, 2102, 553], [2114, 529, 2144, 553], [2158, 534, 2175, 553], [375, 576, 500, 604], [512, 576, 548, 604], [558, 576, 665, 613], [677, 576, 831, 605], [847, 577, 901, 604], [912, 576, 1060, 604], [1071, 576, 1190, 613], [1201, 576, 1250, 604], [1262, 580, 1390, 613], [1401, 585, 1515, 605], [1527, 576, 1676, 604], [1688, 576, 1745, 604], [1758, 576, 1891, 604], [1902, 585, 2017, 605], [2029, 576, 2175, 613], [375, 627, 415, 664], [428, 636, 444, 655], [455, 632, 588, 664], [599, 627, 688, 664], [701, 628, 852, 655], [864, 627, 922, 655], [934, 627, 1069, 656], [1080, 627, 1169, 664], [1182, 628, 1341, 664], [438, 678, 486, 706], [497, 678, 632, 715], [644, 678, 679, 706], [687, 678, 735, 706], [746, 678, 867, 706], [878, 678, 902, 706], [914, 678, 1069, 715], [1080, 678, 1110, 706], [1120, 678, 1225, 715], [1236, 678, 1263, 706], [1280, 678, 1308, 706], [1318, 678, 1409, 715], [1418, 678, 1551, 715], [1563, 678, 1623, 706], [1633, 678, 1689, 706], [1702, 678, 1904, 706], [1915, 678, 1986, 706], [1999, 682, 2049, 706], [2060, 678, 2173, 715], [376, 729, 425, 757], [436, 729, 579, 757], [590, 729, 759, 766], [771, 729, 796, 757], [809, 729, 898, 766], [910, 729, 941, 757], [953, 729, 1115, 766], [1127, 730, 1164, 757], [1177, 730, 1210, 757], [1222, 729, 1303, 758], [1314, 729, 1444, 763], [1458, 738, 1505, 758], [1517, 729, 1653, 757], [1665, 729, 1715, 757], [1726, 729, 1888, 757], [1900, 729, 2023, 757], [2035, 729, 2066, 757], [2078, 729, 2177, 766], [376, 799, 506, 829], [521, 800, 697, 828], [709, 800, 878, 837], [889, 800, 1020, 837], [1034, 800, 1106, 837], [1118, 800, 1167, 828], [1179, 800, 1338, 837], [1349, 800, 1562, 837], [1574, 800, 1730, 829], [431, 876, 455, 904], [479, 877, 519, 911], [537, 876, 626, 904], [639, 876, 674, 904], [684, 876, 733, 904], [745, 880, 862, 904], [874, 880, 1010, 913], [1022, 880, 1092, 904], [427, 935, 455, 963], [483, 927, 498, 929], [480, 933, 506, 963], [525, 935, 610, 972], [622, 935, 657, 963], [667, 935, 716, 963], [728, 935, 789, 963], [796, 935, 916, 972], [929, 939, 1066, 972], [1078, 939, 1147, 963], [1158, 935, 1230, 964], [1243, 935, 1390, 972], [1402, 939, 1430, 963], [1441, 935, 1490, 963], [1502, 939, 1619, 963], [1629, 935, 1715, 972], [428, 994, 455, 1023], [478, 1025, 493, 1027], [480, 992, 506, 1022], [525, 994, 610, 1031], [622, 994, 657, 1022], [667, 994, 716, 1022], [728, 994, 789, 1022], [796, 994, 916, 1031], [929, 998, 1066, 1031], [1078, 998, 1147, 1022], [1158, 994, 1230, 1023], [1243, 994, 1392, 1022], [1404, 998, 1432, 1022], [1443, 994, 1493, 1022], [1504, 998, 1621, 1022], [1631, 994, 1717, 1031], [427, 1053, 455, 1081], [482, 1045, 497, 1047], [480, 1052, 510, 1081], [527, 1053, 631, 1090], [642, 1053, 678, 1081], [687, 1053, 834, 1090], [845, 1057, 915, 1082], [918, 1077, 923, 1081], [937, 1053, 986, 1081], [999, 1052, 1106, 1082], [1118, 1057, 1218, 1081], [427, 1111, 455, 1141], [481, 1144, 496, 1146], [480, 1111, 510, 1140], [527, 1112, 631, 1149], [642, 1112, 678, 1140], [687, 1112, 836, 1140], [847, 1116, 925, 1141], [940, 1111, 1047, 1141], [1059, 1116, 1159, 1140], [427, 1171, 455, 1200], [478, 1165, 493, 1167], [479, 1172, 501, 1199], [518, 1171, 608, 1199], [620, 1171, 656, 1199], [665, 1171, 722, 1199], [732, 1171, 818, 1208], [829, 1171, 929, 1200], [941, 1164, 959, 1199], [971, 1180, 1032, 1200], [1044, 1171, 1362, 1208], [1374, 1171, 1521, 1208], [1531, 1171, 1623, 1199], [1634, 1171, 1719, 1208], [427, 1232, 455, 1259], [476, 1262, 491, 1264], [479, 1232, 501, 1259], [518, 1231, 608, 1259], [620, 1231, 656, 1259], [665, 1231, 722, 1259], [732, 1231, 818, 1268], [829, 1231, 929, 1260], [939, 1262, 954, 1264], [941, 1229, 958, 1259], [971, 1240, 1032, 1260], [1044, 1231, 1362, 1268], [1374, 1231, 1523, 1259], [1533, 1231, 1626, 1259], [1636, 1231, 1729, 1268], [375, 1315, 480, 1352], [493, 1315, 509, 1344], [522, 1315, 603, 1352], [617, 1324, 633, 1343], [644, 1315, 805, 1352], [817, 1315, 1035, 1352], [1046, 1315, 1081, 1343], [1090, 1315, 1171, 1343], [1183, 1315, 1337, 1349], [1351, 1324, 1396, 1344], [1407, 1324, 1460, 1343], [1472, 1315, 1554, 1343], [1566, 1315, 1709, 1344], [1722, 1319, 1751, 1343], [1763, 1315, 1859, 1343], [1870, 1315, 2174, 1352], [376, 1365, 592, 1399], [606, 1365, 732, 1394], [743, 1365, 793, 1393], [804, 1365, 881, 1393], [893, 1369, 924, 1393], [936, 1369, 1077, 1402], [1089, 1374, 1123, 1393], [1135, 1369, 1213, 1393], [1225, 1365, 1307, 1393], [1319, 1365, 1479, 1402], [375, 2225, 480, 2262], [493, 2225, 519, 2254], [537, 2227, 696, 2253], [707, 2227, 738, 2253], [745, 2227, 790, 2253], [800, 2227, 945, 2261], [956, 2231, 1082, 2261], [1094, 2227, 1218, 2254], [1228, 2227, 1255, 2253], [1265, 2227, 1309, 2253], [1320, 2227, 1463, 2253], [1473, 2231, 1527, 2253], [1539, 2227, 1619, 2261], [1631, 2227, 1746, 2253], [1761, 2227, 1817, 2253], [1827, 2231, 1940, 2261], [1951, 2227, 2033, 2253], [2043, 2227, 2174, 2253], [375, 2273, 419, 2306], [428, 2273, 472, 2299], [483, 2273, 546, 2299], [557, 2273, 669, 2307], [681, 2273, 704, 2299], [716, 2273, 841, 2307], [853, 2273, 880, 2299], [891, 2282, 981, 2307], [993, 2273, 1075, 2300], [1086, 2273, 1131, 2299], [1143, 2273, 1265, 2299], [1274, 2273, 1360, 2299], [1369, 2273, 1503, 2307], [1514, 2273, 1557, 2306], [1566, 2273, 1610, 2299], [1621, 2273, 1684, 2299], [1694, 2273, 1812, 2306], [1824, 2273, 1846, 2299], [1859, 2273, 1954, 2300], [1965, 2273, 1992, 2299], [2002, 2273, 2074, 2299], [2089, 2273, 2146, 2299], [2158, 2272, 2173, 2299], [377, 2320, 466, 2354], [478, 2320, 531, 2346], [543, 2320, 562, 2346], [572, 2320, 678, 2354], [690, 2329, 734, 2346], [744, 2320, 887, 2354], [897, 2320, 1014, 2354], [1024, 2329, 1061, 2354], [1071, 2324, 1099, 2346], [1109, 2320, 1155, 2346], [1165, 2320, 1246, 2346], [1258, 2320, 1352, 2347], [1363, 2329, 1392, 2346], [1404, 2320, 1420, 2346], [438, 2417, 607, 2454], [617, 2417, 635, 2445], [646, 2421, 778, 2454], [791, 2417, 845, 2445], [856, 2417, 1047, 2454], [1059, 2417, 1094, 2445], [1103, 2417, 1150, 2445], [1162, 2417, 1321, 2445], [1333, 2417, 1498, 2454], [1510, 2417, 1638, 2445], [1655, 2417, 1790, 2454], [1803, 2417, 1851, 2445], [1864, 2417, 2020, 2454], [2030, 2417, 2173, 2454], [376, 2468, 406, 2496], [418, 2468, 468, 2496], [481, 2477, 564, 2496], [575, 2468, 696, 2496], [709, 2477, 739, 2496], [753, 2468, 802, 2496], [814, 2468, 923, 2496], [936, 2468, 1105, 2505], [1117, 2468, 1249, 2502], [1262, 2468, 1406, 2505], [1419, 2468, 1468, 2496], [1481, 2468, 1572, 2496], [1585, 2468, 1840, 2505], [1853, 2472, 1884, 2496], [1896, 2468, 1945, 2496], [1957, 2468, 2104, 2505], [2116, 2468, 2174, 2496], [376, 2519, 525, 2547], [537, 2523, 565, 2547], [576, 2519, 650, 2547], [664, 2523, 736, 2556], [751, 2519, 808, 2547], [820, 2519, 1010, 2556], [1023, 2528, 1039, 2547], [1050, 2519, 1228, 2556], [1239, 2519, 1398, 2548], [1409, 2519, 1458, 2547], [1471, 2519, 1571, 2556], [1584, 2519, 1620, 2547], [1629, 2519, 1713, 2547], [1725, 2523, 1785, 2548], [1797, 2519, 1949, 2547], [1962, 2528, 2054, 2547], [438, 2571, 528, 2598], [539, 2570, 697, 2607], [712, 2574, 741, 2598], [752, 2570, 828, 2598], [840, 2570, 916, 2598], [927, 2570, 1067, 2598], [1079, 2570, 1129, 2598], [1141, 2570, 1267, 2598], [1279, 2574, 1360, 2607], [1373, 2579, 1432, 2598], [1444, 2570, 1531, 2607], [1542, 2570, 1656, 2598], [1667, 2570, 1798, 2607], [1809, 2570, 1859, 2598], [1872, 2570, 1951, 2604], [1964, 2570, 2111, 2607], [2124, 2570, 2174, 2598], [376, 2621, 677, 2658], [689, 2621, 787, 2658], [800, 2621, 810, 2656], [811, 2652, 826, 2654], [813, 2619, 839, 2655], [856, 2613, 871, 2615], [853, 2619, 883, 2656], [896, 2630, 926, 2649], [938, 2621, 1006, 2650], [1017, 2621, 1091, 2649], [1100, 2621, 1216, 2658], [1229, 2625, 1256, 2649], [1267, 2621, 1314, 2649], [1326, 2625, 1440, 2649], [1449, 2621, 1533, 2658], [1544, 2621, 1554, 2656], [1558, 2652, 1573, 2654], [1558, 2620, 1588, 2655], [1603, 2613, 1618, 2615], [1601, 2620, 1644, 2656], [1661, 2622, 1700, 2649], [1712, 2621, 1806, 2649], [1816, 2621, 1863, 2649], [1873, 2621, 2174, 2658], [376, 2671, 526, 2708], [540, 2671, 562, 2699], [574, 2671, 695, 2699], [709, 2675, 738, 2699], [751, 2680, 892, 2708], [904, 2671, 953, 2699], [966, 2671, 1065, 2708], [1080, 2671, 1091, 2706], [1091, 2703, 1106, 2705], [1093, 2669, 1120, 2705], [1137, 2664, 1152, 2666], [1134, 2669, 1174, 2706], [1188, 2680, 1221, 2699], [1233, 2671, 1439, 2708], [1453, 2675, 1482, 2699], [1495, 2671, 1591, 2699], [1602, 2671, 1735, 2700], [1746, 2671, 1795, 2699], [1806, 2671, 1910, 2708], [1920, 2671, 1956, 2699], [1965, 2671, 2014, 2699], [2026, 2671, 2175, 2699], [377, 2754, 392, 2756], [377, 2721, 398, 2750], [411, 2722, 481, 2750], [494, 2722, 595, 2751], [609, 2722, 658, 2750], [672, 2722, 743, 2750], [755, 2722, 875, 2750], [888, 2722, 987, 2757], [1000, 2722, 1050, 2750], [1063, 2722, 1215, 2750], [1227, 2722, 1351, 2751], [1365, 2722, 1415, 2750], [1428, 2722, 1499, 2750], [1512, 2722, 1638, 2759], [1653, 2731, 1687, 2750], [1700, 2722, 1749, 2750], [1762, 2722, 1868, 2759], [1880, 2722, 1916, 2750], [1927, 2722, 1976, 2750], [1990, 2722, 2139, 2759], [2153, 2714, 2174, 2750], [376, 2782, 475, 2810], [489, 2773, 585, 2802], [597, 2773, 647, 2801], [659, 2773, 730, 2801], [742, 2773, 854, 2810], [868, 2773, 965, 2808], [978, 2773, 1027, 2801], [1039, 2773, 1188, 2810], [1199, 2773, 1322, 2802], [1335, 2773, 1384, 2801], [1397, 2773, 1467, 2801], [1478, 2773, 1620, 2808], [1635, 2774, 1689, 2801], [1701, 2773, 1790, 2801], [1802, 2782, 1857, 2801], [1869, 2773, 1905, 2801], [1914, 2773, 1973, 2801], [1986, 2773, 2043, 2801], [2054, 2773, 2177, 2807], [1266, 2935, 1282, 2964], [373, 239, 557, 277], [569, 239, 588, 268], [599, 242, 758, 268], [768, 246, 824, 268], [835, 242, 918, 276], [929, 242, 1073, 276], [1084, 242, 1127, 268], [1136, 242, 1395, 276], [397, 304, 416, 326], [439, 300, 570, 326], [581, 301, 591, 326], [606, 312, 632, 321], [644, 296, 658, 297], [646, 301, 696, 326], [707, 330, 721, 331], [710, 301, 761, 326], [777, 294, 791, 295], [775, 300, 834, 326], [849, 330, 863, 331], [848, 300, 946, 331], [958, 330, 972, 331], [960, 299, 1140, 334], [1156, 294, 1170, 295], [1154, 299, 1325, 334], [394, 351, 416, 373], [439, 347, 668, 375], [394, 397, 416, 419], [494, 384, 782, 427], [796, 384, 1159, 424], [1173, 394, 1230, 420], [393, 444, 416, 466], [495, 440, 601, 474], [612, 440, 744, 474], [753, 440, 846, 474], [857, 440, 1000, 474], [1011, 444, 1115, 466], [1127, 440, 1211, 474], [1228, 434, 1247, 466], [1261, 452, 1287, 461], [1303, 434, 1317, 435], [1301, 434, 1387, 469], [1398, 456, 1422, 457], [1435, 449, 1473, 474], [394, 490, 416, 513], [494, 488, 520, 514], [533, 487, 628, 514], [638, 487, 681, 513], [691, 487, 791, 521], [802, 487, 941, 514], [957, 487, 1088, 521], [1099, 487, 1122, 513], [1133, 487, 1220, 514], [1230, 487, 1294, 513], [1305, 487, 1405, 521], [1418, 488, 1444, 514], [394, 536, 416, 559], [495, 524, 710, 561], [394, 584, 416, 606], [551, 580, 632, 606], [643, 580, 716, 607], [728, 584, 849, 614], [859, 589, 896, 614], [906, 584, 934, 606], [945, 580, 996, 606], [1006, 580, 1138, 614], [1147, 580, 1277, 614], [1287, 580, 1371, 614], [1388, 589, 1435, 618], [1441, 592, 1497, 616], [1512, 592, 1538, 601], [1555, 574, 1569, 575], [1553, 579, 1576, 606], [395, 630, 416, 652], [552, 627, 620, 653], [631, 635, 690, 653], [703, 630, 824, 660], [835, 626, 903, 652], [912, 626, 1002, 652], [1021, 624, 1070, 661], [1077, 656, 1091, 657], [1080, 624, 1146, 661], [1158, 622, 1172, 623], [1159, 627, 1179, 657], [1190, 656, 1204, 657], [1192, 625, 1387, 660], [1404, 620, 1418, 621], [1401, 625, 1508, 660], [1522, 656, 1536, 657], [1522, 626, 1622, 657], [1637, 620, 1651, 621], [1636, 626, 1695, 652], [1710, 626, 1789, 657], [1804, 638, 1830, 647], [1842, 622, 1856, 623], [1844, 627, 1919, 655], [394, 677, 416, 700], [551, 673, 687, 700], [381, 723, 416, 745], [495, 720, 551, 746], [563, 719, 587, 745], [381, 770, 416, 792], [495, 766, 601, 800], [612, 766, 746, 792], [756, 766, 849, 800], [859, 766, 1002, 800], [1013, 770, 1117, 792], [1129, 766, 1213, 800], [1230, 795, 1244, 796], [1230, 766, 1289, 792], [1304, 795, 1318, 796], [1303, 766, 1360, 795], [1370, 795, 1384, 796], [1372, 765, 1475, 800], [381, 817, 416, 839], [494, 814, 520, 840], [533, 813, 628, 840], [638, 813, 681, 839], [690, 813, 796, 839], [806, 813, 945, 840], [961, 813, 1095, 839], [1105, 813, 1128, 839], [1139, 813, 1228, 840], [1238, 813, 1302, 839], [1312, 813, 1418, 839], [1430, 814, 1457, 840], [381, 863, 416, 885], [495, 859, 519, 885], [538, 889, 552, 890], [538, 859, 636, 887], [643, 850, 656, 854], [641, 859, 660, 885], [671, 860, 740, 886], [381, 910, 416, 932], [551, 906, 632, 932], [643, 906, 716, 933], [728, 910, 849, 940], [859, 915, 896, 940], [906, 910, 934, 932], [945, 906, 996, 932], [1006, 906, 1140, 932], [1149, 906, 1280, 940], [1290, 906, 1373, 940], [1390, 915, 1437, 941], [1443, 919, 1485, 939], [1486, 939, 1497, 940], [1490, 918, 1540, 936], [1552, 935, 1566, 936], [1555, 905, 1578, 932], [381, 955, 416, 978], [552, 953, 620, 979], [631, 961, 690, 979], [703, 956, 824, 986], [835, 952, 903, 978], [912, 952, 1002, 978], [1021, 950, 1070, 987], [1079, 948, 1103, 987], [1120, 964, 1146, 973], [1156, 982, 1170, 983], [1159, 953, 1179, 983], [1190, 982, 1204, 983], [1192, 951, 1299, 986], [1315, 946, 1329, 947], [1313, 951, 1368, 978], [1383, 952, 1538, 986], [1552, 982, 1566, 983], [1551, 952, 1652, 983], [1667, 946, 1681, 947], [1666, 952, 1725, 978], [1740, 952, 1819, 983], [1834, 964, 1860, 973], [1870, 982, 1884, 983], [1873, 953, 1948, 981], [381, 1002, 416, 1025], [551, 999, 687, 1026], [381, 1049, 416, 1071], [495, 1046, 551, 1072], [563, 1045, 587, 1071], [381, 1096, 416, 1118], [494, 1093, 520, 1119], [533, 1092, 628, 1119], [638, 1092, 662, 1118], [670, 1092, 802, 1126], [812, 1092, 905, 1126], [915, 1092, 938, 1118], [949, 1092, 1038, 1119], [1048, 1092, 1093, 1118], [1104, 1092, 1174, 1118], [1186, 1093, 1213, 1119], [381, 1143, 416, 1166], [495, 1133, 636, 1171], [643, 1130, 656, 1134], [641, 1139, 660, 1165], [681, 1140, 750, 1166], [378, 1189, 416, 1211], [551, 1186, 662, 1212], [673, 1185, 757, 1219], [774, 1179, 791, 1211], [803, 1197, 829, 1206], [847, 1179, 861, 1180], [844, 1184, 897, 1214], [918, 1172, 927, 1175], [915, 1174, 973, 1196], [914, 1207, 970, 1229], [378, 1246, 416, 1268], [551, 1242, 608, 1268], [619, 1242, 750, 1276], [761, 1251, 822, 1269], [832, 1242, 945, 1268], [956, 1242, 1001, 1268], [1012, 1242, 1088, 1268], [1105, 1236, 1124, 1268], [1138, 1254, 1164, 1263], [1180, 1258, 1204, 1259], [1211, 1233, 1224, 1237], [1209, 1242, 1228, 1268], [378, 1292, 416, 1314], [551, 1288, 615, 1314], [627, 1288, 649, 1314], [661, 1297, 677, 1314], [686, 1288, 808, 1322], [819, 1288, 950, 1322], [960, 1288, 1090, 1322], [1100, 1288, 1184, 1322], [1199, 1284, 1213, 1314], [1225, 1300, 1251, 1309], [1264, 1289, 1274, 1314], [378, 1339, 416, 1361], [495, 1336, 551, 1362], [563, 1335, 587, 1361], [378, 1385, 416, 1407], [494, 1382, 520, 1408], [533, 1381, 628, 1408], [638, 1381, 662, 1407], [670, 1381, 804, 1407], [814, 1381, 907, 1415], [917, 1381, 940, 1407], [952, 1381, 1038, 1408], [1048, 1381, 1093, 1407], [1104, 1381, 1204, 1415], [1217, 1382, 1244, 1408], [378, 1431, 416, 1454], [495, 1428, 519, 1454], [538, 1457, 552, 1458], [538, 1419, 630, 1460], [651, 1429, 720, 1455], [378, 1485, 416, 1508], [551, 1483, 662, 1509], [673, 1482, 757, 1516], [772, 1512, 786, 1513], [774, 1481, 829, 1508], [842, 1512, 856, 1513], [844, 1481, 933, 1511], [941, 1465, 950, 1468], [938, 1472, 976, 1489], [980, 1493, 991, 1494], [981, 1472, 996, 1489], [925, 1504, 981, 1526], [378, 1543, 416, 1565], [551, 1539, 608, 1565], [619, 1539, 752, 1565], [763, 1548, 824, 1566], [835, 1539, 947, 1565], [958, 1539, 1003, 1565], [1014, 1539, 1122, 1573], [1139, 1568, 1153, 1569], [1139, 1539, 1197, 1565], [1215, 1530, 1228, 1534], [1212, 1539, 1231, 1565], [378, 1589, 416, 1611], [551, 1585, 615, 1611], [627, 1585, 649, 1611], [661, 1594, 677, 1611], [686, 1585, 808, 1619], [819, 1585, 952, 1611], [962, 1585, 1092, 1619], [1102, 1585, 1186, 1619], [1199, 1615, 1213, 1616], [1202, 1586, 1276, 1611], [378, 1636, 416, 1659], [495, 1633, 551, 1659], [563, 1632, 587, 1658], [378, 1683, 416, 1705], [495, 1679, 630, 1706], [640, 1679, 764, 1713], [775, 1683, 879, 1705], [891, 1683, 1020, 1713], [1036, 1680, 1046, 1705], [1060, 1691, 1086, 1700], [1100, 1680, 1110, 1705], [1123, 1683, 1149, 1708], [1162, 1680, 1175, 1705], [378, 1729, 416, 1751], [439, 1726, 495, 1752], [506, 1725, 590, 1752], [378, 1776, 416, 1798], [439, 1772, 520, 1798], [531, 1772, 582, 1798], [593, 1772, 665, 1799], [677, 1776, 806, 1806], [823, 1781, 869, 1807], [875, 1785, 939, 1805], [955, 1784, 981, 1793], [998, 1766, 1012, 1767], [995, 1771, 1018, 1798], [377, 1921, 461, 1949], [472, 1921, 619, 1958], [631, 1921, 752, 1958], [765, 1925, 848, 1949], [861, 1925, 914, 1949], [926, 1925, 956, 1949], [968, 1921, 1008, 1949], [1021, 1921, 1145, 1958], [1158, 1921, 1288, 1958], [1300, 1921, 1372, 1949], [1383, 1921, 1530, 1958], [1544, 1921, 1656, 1958], [1671, 1921, 1730, 1949], [1743, 1930, 1778, 1949], [1790, 1921, 1813, 1949], [1825, 1921, 1851, 1949], [1864, 1921, 1956, 1949], [1968, 1925, 1999, 1949], [2012, 1930, 2121, 1949], [2133, 1930, 2173, 1949], [376, 1971, 512, 2008], [524, 1971, 587, 2000], [599, 1971, 667, 1999], [677, 1971, 764, 2008], [775, 1971, 881, 1999], [892, 1971, 1078, 2008], [1091, 1971, 1164, 1999], [1175, 1971, 1310, 2008], [437, 2022, 538, 2050], [551, 2031, 568, 2050], [579, 2022, 718, 2059], [731, 2022, 757, 2050], [771, 2022, 919, 2056], [933, 2031, 981, 2051], [992, 2022, 1129, 2059], [1142, 2022, 1257, 2050], [1270, 2026, 1351, 2059], [1366, 2031, 1398, 2050], [1411, 2022, 1443, 2050], [1455, 2022, 1505, 2050], [1517, 2022, 1628, 2050], [1641, 2022, 1813, 2059], [1826, 2022, 1952, 2050], [1963, 2022, 2017, 2050], [2028, 2022, 2102, 2051], [2114, 2031, 2174, 2050], [377, 2073, 550, 2110], [561, 2073, 736, 2101], [754, 2073, 804, 2101], [817, 2073, 977, 2110], [989, 2073, 1015, 2101], [1028, 2073, 1212, 2110], [1223, 2073, 1368, 2101], [1380, 2077, 1409, 2101], [1420, 2073, 1469, 2101], [1481, 2073, 1581, 2110], [1593, 2073, 1772, 2101], [1782, 2073, 1969, 2110], [1986, 2073, 2058, 2101], [2070, 2077, 2175, 2101], [376, 2124, 442, 2152], [453, 2124, 478, 2152], [491, 2124, 521, 2152], [532, 2128, 660, 2152], [671, 2124, 742, 2153], [754, 2124, 801, 2152], [813, 2124, 920, 2152], [932, 2124, 1061, 2158], [1074, 2124, 1172, 2153], [1184, 2133, 1229, 2153], [1242, 2124, 1350, 2161], [1361, 2133, 1460, 2152], [1472, 2124, 1519, 2152], [1531, 2124, 1700, 2161], [1712, 2124, 1871, 2161], [1883, 2124, 2074, 2152], [2086, 2124, 2174, 2152], [376, 2175, 423, 2203], [436, 2175, 582, 2203], [594, 2175, 651, 2203], [663, 2175, 806, 2212], [818, 2179, 847, 2203], [859, 2175, 967, 2212], [979, 2175, 1053, 2203], [1064, 2175, 1213, 2203], [1228, 2175, 1284, 2203], [1296, 2175, 1434, 2203], [1447, 2175, 1580, 2212], [1593, 2175, 1664, 2204], [1676, 2175, 1763, 2203], [1780, 2176, 1813, 2203], [1825, 2175, 1872, 2203], [1885, 2175, 2044, 2203], [2056, 2175, 2174, 2204], [374, 2234, 421, 2254], [433, 2225, 473, 2253], [485, 2229, 537, 2253], [547, 2225, 625, 2262], [637, 2225, 757, 2262], [770, 2225, 964, 2253], [976, 2229, 1007, 2253], [1018, 2225, 1151, 2262], [1164, 2225, 1238, 2253], [1251, 2234, 1287, 2253], [1299, 2225, 1463, 2262], [1478, 2234, 1512, 2253], [1525, 2225, 1564, 2253], [1576, 2225, 1644, 2253], [1657, 2225, 1748, 2253], [1759, 2225, 1908, 2253], [1920, 2225, 1977, 2253], [1990, 2225, 2137, 2262], [2148, 2225, 2172, 2253], [376, 2276, 531, 2304], [544, 2276, 601, 2304], [613, 2276, 661, 2304], [674, 2276, 832, 2313], [842, 2276, 946, 2313], [961, 2285, 1049, 2305], [1066, 2277, 1200, 2304], [1213, 2276, 1248, 2304], [1257, 2276, 1314, 2304], [1327, 2276, 1432, 2304], [1444, 2276, 1492, 2304], [1506, 2285, 1587, 2304], [1599, 2276, 1668, 2304], [1681, 2280, 1815, 2313], [1827, 2276, 1921, 2313], [1932, 2276, 1969, 2304], [1981, 2276, 2174, 2313], [375, 2336, 416, 2364], [429, 2331, 460, 2355], [474, 2324, 558, 2365], [575, 2327, 664, 2355], [678, 2327, 709, 2355], [722, 2327, 772, 2355], [785, 2327, 919, 2361], [935, 2327, 994, 2355], [1006, 2327, 1157, 2355], [1170, 2327, 1220, 2355], [1233, 2327, 1348, 2356], [1361, 2331, 1454, 2356], [1466, 2336, 1537, 2355], [1549, 2327, 1762, 2364], [1775, 2327, 1801, 2355], [1816, 2321, 1902, 2365], [1908, 2324, 1930, 2365], [1949, 2327, 2022, 2355], [2036, 2327, 2098, 2355], [2110, 2336, 2173, 2356], [377, 2378, 496, 2415], [508, 2378, 656, 2407], [668, 2378, 698, 2406], [713, 2378, 786, 2412], [438, 2430, 471, 2457], [483, 2429, 563, 2458], [574, 2429, 694, 2458], [708, 2438, 755, 2458], [766, 2429, 903, 2457], [915, 2429, 964, 2457], [975, 2429, 1120, 2457], [1131, 2429, 1243, 2457], [1255, 2429, 1305, 2457], [1315, 2429, 1420, 2466], [1429, 2429, 1540, 2466], [1552, 2429, 1708, 2457], [376, 2539, 495, 2577], [504, 2539, 673, 2569], [717, 2541, 757, 2568], [768, 2540, 941, 2577], [951, 2540, 999, 2568], [1010, 2540, 1130, 2568], [1141, 2540, 1295, 2568], [1306, 2540, 1408, 2574], [1421, 2540, 1468, 2568], [1478, 2540, 1580, 2577], [1590, 2540, 1733, 2569], [1746, 2539, 1767, 2568], [1778, 2549, 1825, 2568], [1836, 2544, 1887, 2568], [1898, 2540, 2008, 2577], [2019, 2549, 2175, 2577], [377, 2600, 407, 2619], [420, 2591, 487, 2628], [500, 2600, 556, 2619], [566, 2591, 604, 2619], [616, 2591, 756, 2619], [768, 2591, 847, 2619], [858, 2591, 906, 2619], [919, 2591, 1018, 2628], [1032, 2589, 1057, 2619], [1074, 2592, 1227, 2625], [1240, 2591, 1392, 2628], [1405, 2591, 1557, 2628], [1570, 2591, 1651, 2619], [1662, 2591, 1743, 2619], [1757, 2595, 1786, 2619], [1799, 2591, 1931, 2619], [1941, 2591, 2083, 2628], [2095, 2591, 2173, 2619], [377, 2646, 405, 2670], [416, 2642, 490, 2670], [502, 2642, 648, 2676], [662, 2651, 693, 2670], [706, 2651, 753, 2671], [766, 2642, 850, 2671], [861, 2642, 967, 2671], [1265, 2935, 1283, 2964], [856, 235, 979, 265], [1529, 235, 1718, 265], [1732, 235, 1915, 271], [399, 289, 582, 316], [593, 288, 803, 325], [856, 285, 940, 326], [1530, 282, 1632, 326], [400, 342, 592, 378], [855, 342, 904, 369], [1529, 342, 1586, 369], [400, 393, 494, 422], [505, 393, 742, 421], [855, 394, 925, 421], [951, 393, 1168, 430], [1197, 393, 1327, 430], [1355, 393, 1481, 421], [855, 444, 953, 472], [965, 453, 1077, 481], [1529, 394, 1605, 430], [1617, 393, 1676, 421], [1687, 393, 1833, 427], [1847, 393, 1940, 421], [1951, 393, 2081, 430], [638, 556, 727, 584], [743, 556, 767, 584], [784, 556, 986, 593], [998, 556, 1033, 584], [1043, 556, 1092, 584], [1104, 556, 1185, 584], [1197, 556, 1325, 584], [1339, 556, 1375, 584], [1383, 556, 1532, 585], [1544, 556, 1713, 593], [1726, 556, 1910, 593], [439, 680, 578, 717], [589, 689, 636, 709], [649, 689, 698, 708], [709, 680, 854, 717], [866, 680, 915, 708], [926, 680, 1045, 717], [1059, 680, 1116, 708], [1130, 680, 1231, 717], [1243, 680, 1323, 708], [1335, 680, 1410, 708], [1421, 680, 1574, 708], [1588, 684, 1616, 708], [1628, 684, 1693, 717], [1705, 681, 1716, 708], [1730, 697, 1756, 698], [1773, 680, 1786, 708], [1801, 684, 1832, 708], [1845, 684, 1909, 717], [1921, 681, 1943, 708], [1959, 680, 2112, 717], [2125, 680, 2174, 708], [375, 731, 492, 768], [506, 731, 530, 759], [544, 731, 718, 759], [730, 731, 818, 768], [830, 731, 880, 759], [893, 731, 1002, 768], [1017, 731, 1100, 759], [1106, 811, 1138, 846], [1156, 810, 1441, 849], [376, 893, 410, 920], [421, 892, 507, 920], [518, 892, 628, 926], [643, 892, 728, 920], [740, 901, 787, 921], [801, 901, 849, 920], [862, 892, 1023, 929], [1036, 901, 1053, 920], [1065, 892, 1126, 920], [1138, 892, 1213, 921], [1225, 892, 1312, 929], [1325, 890, 1351, 926], [1365, 892, 1415, 920], [1427, 892, 1545, 929], [1557, 892, 1589, 920], [1599, 892, 1705, 929], [1717, 892, 1798, 920], [1809, 901, 1869, 920], [1882, 896, 1947, 929], [1959, 896, 1990, 920], [2003, 892, 2052, 920], [2065, 896, 2136, 920], [2147, 892, 2173, 920], [376, 943, 464, 980], [475, 943, 515, 980], [526, 943, 674, 980], [687, 943, 760, 971], [772, 952, 788, 971], [801, 943, 893, 980], [909, 944, 997, 977], [1010, 943, 1155, 977], [1168, 943, 1229, 971], [1240, 943, 1271, 971], [1283, 943, 1339, 971], [1354, 943, 1511, 980], [1523, 952, 1568, 972], [1581, 943, 1620, 971], [1633, 947, 1684, 971], [1695, 947, 1835, 980], [1848, 943, 1982, 971], [1994, 943, 2110, 980], [2123, 943, 2174, 971], [376, 994, 491, 1022], [502, 994, 625, 1023], [635, 994, 753, 1031], [767, 994, 839, 1023], [850, 998, 968, 1031], [979, 998, 1008, 1022], [1021, 994, 1070, 1022], [1083, 993, 1197, 1023], [1209, 998, 1315, 1022], [1331, 994, 1493, 1022], [1505, 1003, 1552, 1023], [1564, 994, 1640, 1022], [1653, 998, 1682, 1022], [1696, 998, 1824, 1022], [1835, 994, 1882, 1022], [1893, 994, 1943, 1022], [1954, 994, 2070, 1031], [2082, 994, 2113, 1022], [2125, 994, 2174, 1022], [376, 1045, 445, 1073], [457, 1049, 557, 1073], [567, 1045, 704, 1074], [717, 1049, 796, 1082], [809, 1046, 820, 1073], [835, 1062, 861, 1063], [877, 1045, 890, 1073], [907, 1045, 964, 1073], [976, 1046, 997, 1079], [1011, 1045, 1110, 1074], [1122, 1045, 1146, 1073], [1160, 1045, 1248, 1082], [1259, 1045, 1300, 1082], [1312, 1055, 1340, 1079], [1356, 1062, 1382, 1063], [1395, 1055, 1465, 1079], [1483, 1058, 1511, 1067], [1526, 1055, 1555, 1082], [1562, 1069, 1566, 1073], [1583, 1045, 1654, 1073], [1667, 1045, 1831, 1082], [1845, 1045, 1894, 1073], [1905, 1045, 2023, 1082], [2037, 1045, 2136, 1074], [2148, 1045, 2172, 1073], [377, 1096, 481, 1125], [493, 1096, 524, 1124], [536, 1096, 708, 1133], [719, 1096, 738, 1124], [751, 1105, 782, 1124], [795, 1096, 871, 1124], [884, 1096, 903, 1124], [916, 1096, 973, 1124], [990, 1096, 1034, 1124], [438, 1148, 591, 1181], [604, 1147, 626, 1175], [637, 1147, 662, 1175], [674, 1147, 807, 1184], [820, 1147, 880, 1175], [891, 1147, 939, 1175], [952, 1156, 1017, 1176], [1029, 1147, 1131, 1184], [1143, 1146, 1164, 1175], [1176, 1156, 1244, 1175], [1257, 1156, 1328, 1176], [1339, 1156, 1373, 1175], [1383, 1147, 1477, 1175], [1488, 1147, 1535, 1175], [1548, 1147, 1625, 1175], [1642, 1147, 1712, 1175], [1725, 1147, 1825, 1176], [1837, 1156, 1924, 1175], [1936, 1147, 1996, 1175], [2008, 1156, 2054, 1176], [2066, 1151, 2174, 1175], [376, 1197, 514, 1225], [525, 1197, 612, 1234], [624, 1197, 672, 1225], [684, 1201, 798, 1225], [810, 1197, 893, 1234], [905, 1197, 936, 1225], [947, 1197, 995, 1225], [1007, 1197, 1150, 1234], [1162, 1206, 1195, 1225], [1206, 1197, 1359, 1231], [1374, 1197, 1430, 1225], [1443, 1206, 1459, 1225], [1469, 1197, 1679, 1225], [1690, 1197, 1714, 1225], [1727, 1197, 1850, 1231], [1863, 1197, 1961, 1226], [1973, 1197, 2059, 1234], [2070, 1206, 2126, 1225], [2136, 1197, 2173, 1225], [376, 1248, 455, 1276], [467, 1248, 632, 1285], [643, 1248, 684, 1285], [695, 1248, 785, 1285], [797, 1248, 846, 1276], [857, 1248, 961, 1285], [972, 1248, 1175, 1276], [1192, 1248, 1324, 1276], [1336, 1248, 1462, 1277], [1473, 1248, 1535, 1276], [1548, 1248, 1584, 1276], [1593, 1248, 1758, 1285], [1770, 1248, 1832, 1276], [1843, 1248, 1892, 1276], [1905, 1248, 2027, 1285], [2039, 1248, 2129, 1276], [2141, 1248, 2177, 1276], [376, 1299, 425, 1327], [437, 1303, 555, 1327], [567, 1303, 704, 1336], [715, 1299, 741, 1327], [755, 1299, 772, 1328], [786, 1299, 844, 1327], [856, 1299, 905, 1327], [918, 1299, 1055, 1327], [1066, 1299, 1171, 1336], [1182, 1299, 1218, 1327], [1228, 1299, 1277, 1327], [1290, 1299, 1413, 1336], [1424, 1299, 1511, 1336], [1522, 1299, 1558, 1327], [1567, 1299, 1617, 1327], [1630, 1303, 1767, 1336], [1778, 1299, 1804, 1327], [1816, 1299, 1906, 1336], [1917, 1299, 1958, 1336], [1971, 1309, 2004, 1327], [2020, 1299, 2114, 1333], [2127, 1299, 2175, 1327], [377, 1350, 526, 1387], [538, 1350, 587, 1378], [599, 1350, 749, 1378], [760, 1350, 846, 1387], [858, 1342, 885, 1384], [901, 1359, 935, 1378], [947, 1350, 1009, 1378], [1020, 1350, 1043, 1378], [1054, 1350, 1177, 1378], [1191, 1350, 1240, 1378], [1252, 1350, 1322, 1378], [1334, 1350, 1445, 1387], [1458, 1354, 1486, 1378], [1497, 1350, 1547, 1378], [1558, 1354, 1676, 1378], [1685, 1350, 1779, 1387], [1793, 1359, 1839, 1379], [1851, 1354, 1921, 1378], [1933, 1350, 1995, 1378], [903, 1448, 918, 1450], [900, 1454, 972, 1490], [992, 1426, 1174, 1462], [1077, 1485, 1088, 1512], [1194, 1469, 1222, 1478], [1243, 1420, 1366, 1465], [1382, 1444, 1408, 1445], [1424, 1420, 1439, 1422], [1422, 1424, 1633, 1465], [1432, 1485, 1443, 1512], [1644, 1480, 1648, 1492], [374, 1553, 472, 1582], [485, 1562, 530, 1582], [542, 1553, 617, 1582], [630, 1553, 693, 1581], [707, 1553, 802, 1581], [815, 1553, 872, 1581], [885, 1553, 1051, 1581], [1063, 1553, 1111, 1581], [1124, 1557, 1238, 1581], [1250, 1553, 1336, 1582], [1349, 1553, 1384, 1581], [1394, 1545, 1426, 1587], [1433, 1577, 1437, 1581], [1454, 1553, 1588, 1582], [1601, 1553, 1661, 1581], [1672, 1553, 1729, 1581], [1742, 1553, 1828, 1582], [1840, 1562, 1901, 1582], [1914, 1553, 2075, 1590], [2086, 1553, 2173, 1590], [376, 1604, 425, 1632], [437, 1604, 576, 1632], [589, 1602, 657, 1638], [673, 1604, 709, 1632], [718, 1604, 768, 1632], [781, 1604, 867, 1641], [880, 1613, 915, 1632], [927, 1604, 979, 1638], [993, 1613, 1028, 1632], [1040, 1613, 1088, 1633], [1100, 1613, 1156, 1632], [1167, 1604, 1285, 1633], [1297, 1604, 1319, 1632], [1332, 1613, 1363, 1632], [1376, 1604, 1426, 1632], [1437, 1604, 1606, 1641], [1619, 1604, 1655, 1632], [1664, 1604, 1714, 1632], [1726, 1604, 1822, 1632], [1833, 1604, 1920, 1641], [1931, 1604, 1962, 1632], [1974, 1604, 2024, 1632], [2037, 1608, 2175, 1641], [376, 1654, 534, 1691], [547, 1654, 621, 1682], [634, 1663, 650, 1682], [663, 1654, 756, 1691], [770, 1654, 832, 1682], [843, 1654, 877, 1688], [892, 1663, 922, 1682], [938, 1646, 953, 1648], [937, 1653, 1040, 1689], [1047, 1646, 1062, 1648], [1044, 1652, 1071, 1689], [1087, 1671, 1113, 1672], [1126, 1664, 1154, 1689], [1169, 1658, 1197, 1685], [1211, 1664, 1243, 1682], [1260, 1654, 1362, 1691], [1375, 1663, 1409, 1682], [1421, 1654, 1469, 1682], [1480, 1663, 1538, 1682], [1550, 1654, 1586, 1682], [1595, 1654, 1644, 1682], [1657, 1654, 1754, 1682], [1765, 1654, 1882, 1691], [1897, 1646, 1929, 1689], [1943, 1654, 2091, 1691], [770, 1752, 785, 1754], [767, 1758, 839, 1794], [860, 1731, 881, 1761], [893, 1736, 921, 1763], [937, 1724, 1033, 1770], [1050, 1749, 1076, 1750], [1090, 1729, 1253, 1770], [1269, 1724, 1284, 1726], [1267, 1731, 1462, 1766], [1155, 1790, 1166, 1817], [1482, 1773, 1510, 1782], [1529, 1752, 1544, 1754], [1526, 1758, 1594, 1794], [1610, 1764, 1638, 1791], [1657, 1731, 1717, 1761], [1733, 1724, 1748, 1726], [1732, 1731, 1764, 1766], [1705, 1790, 1716, 1817], [1776, 1784, 1780, 1796], [374, 1851, 472, 1880], [484, 1855, 636, 1888], [650, 1860, 666, 1879], [679, 1851, 784, 1888], [796, 1851, 938, 1888], [949, 1851, 1020, 1879], [1037, 1851, 1065, 1879], [1078, 1851, 1190, 1879], [1201, 1851, 1363, 1880], [1374, 1851, 1461, 1879], [1474, 1851, 1521, 1879], [1532, 1851, 1580, 1879], [1592, 1851, 1746, 1879], [1763, 1851, 1824, 1879], [1836, 1851, 1978, 1888], [1989, 1851, 2112, 1888], [2127, 1860, 2173, 1879], [376, 1902, 514, 1930], [526, 1902, 556, 1930], [568, 1902, 616, 1930], [629, 1902, 786, 1939], [797, 1902, 827, 1930], [839, 1902, 913, 1930], [926, 1902, 964, 1931], [978, 1902, 1035, 1930], [1046, 1902, 1093, 1931], [1110, 1902, 1195, 1930], [1205, 1902, 1410, 1939], [1422, 1902, 1478, 1930], [1493, 1902, 1575, 1939], [1588, 1911, 1633, 1931], [1646, 1902, 1721, 1930], [1733, 1906, 1762, 1930], [1776, 1902, 1871, 1939], [1883, 1902, 1930, 1930], [1943, 1902, 2173, 1939], [375, 1953, 477, 1990], [488, 1953, 566, 1981], [576, 1957, 606, 1981], [619, 1953, 667, 1981], [679, 1953, 757, 1981], [775, 1953, 856, 1981], [869, 1953, 917, 1981], [929, 1953, 1045, 1990], [1060, 1962, 1106, 1981], [1118, 1953, 1238, 1982], [1251, 1957, 1280, 1981], [1293, 1953, 1341, 1981], [1354, 1953, 1422, 1981], [1435, 1957, 1534, 1981], [1545, 1962, 1591, 1982], [1604, 1962, 1659, 1981], [1667, 1953, 1729, 1990], [1742, 1957, 1785, 1981], [1798, 1945, 1819, 1981], [1833, 1966, 1861, 1975], [1877, 1952, 1907, 1987], [1922, 1984, 1937, 1986], [1922, 1952, 1985, 1981], [2002, 1952, 2173, 1987], [376, 2004, 455, 2032], [467, 2004, 497, 2032], [509, 2004, 585, 2032], [598, 2004, 634, 2032], [651, 2004, 708, 2032], [720, 2004, 769, 2032], [438, 2054, 549, 2082], [562, 2054, 627, 2082], [640, 2054, 703, 2082], [714, 2054, 764, 2082], [777, 2054, 892, 2091], [904, 2063, 975, 2082], [987, 2054, 1024, 2082], [1033, 2054, 1083, 2082], [1095, 2054, 1153, 2082], [1164, 2054, 1251, 2091], [1262, 2054, 1294, 2082], [1306, 2054, 1356, 2082], [1368, 2054, 1439, 2082], [1451, 2054, 1553, 2083], [1565, 2054, 1615, 2082], [1627, 2054, 1799, 2091], [1812, 2058, 1894, 2082], [1905, 2058, 1986, 2082], [1999, 2064, 2035, 2089], [2052, 2067, 2080, 2076], [2095, 2064, 2132, 2089], [2147, 2054, 2173, 2082], [375, 2105, 508, 2133], [519, 2105, 560, 2142], [573, 2105, 635, 2133], [648, 2105, 675, 2139], [689, 2105, 791, 2134], [804, 2094, 825, 2134], [838, 2105, 863, 2133], [877, 2109, 923, 2133], [934, 2109, 965, 2133], [978, 2105, 995, 2134], [1009, 2109, 1038, 2133], [1050, 2105, 1126, 2133], [1139, 2114, 1156, 2133], [1166, 2105, 1253, 2142], [1264, 2109, 1295, 2133], [1308, 2105, 1433, 2133], [1445, 2105, 1504, 2133], [1517, 2105, 1691, 2133], [1707, 2105, 1841, 2139], [1855, 2114, 1914, 2133], [1926, 2105, 2066, 2133], [2078, 2105, 2114, 2133], [2124, 2105, 2174, 2133], [376, 2156, 498, 2184], [511, 2156, 535, 2184], [549, 2165, 620, 2193], [632, 2156, 774, 2190], [789, 2165, 820, 2184], [833, 2156, 945, 2193], [953, 2156, 1016, 2193], [1028, 2156, 1176, 2184], [1191, 2156, 1248, 2184], [1261, 2156, 1458, 2184], [1473, 2165, 1521, 2184], [1533, 2156, 1673, 2185], [1686, 2156, 1758, 2185], [1770, 2156, 1819, 2184], [1832, 2156, 1896, 2184], [1908, 2156, 2068, 2193], [2080, 2156, 2115, 2184], [2125, 2156, 2174, 2184], [376, 2207, 508, 2236], [519, 2207, 659, 2244], [671, 2207, 719, 2235], [730, 2207, 780, 2235], [793, 2207, 879, 2244], [890, 2207, 1027, 2244], [1040, 2207, 1141, 2236], [1155, 2216, 1203, 2235], [1215, 2211, 1268, 2235], [1278, 2207, 1453, 2244], [1466, 2211, 1494, 2235], [1506, 2216, 1595, 2244], [1608, 2207, 1755, 2235], [1771, 2208, 1941, 2241], [1955, 2216, 1995, 2235], [2008, 2207, 2174, 2235], [376, 2267, 514, 2295], [529, 2258, 555, 2286], [570, 2258, 710, 2295], [724, 2258, 847, 2295], [861, 2258, 911, 2286], [926, 2262, 1066, 2286], [1080, 2258, 1208, 2286], [1222, 2258, 1258, 2286], [1269, 2258, 1486, 2295], [1501, 2258, 1660, 2292], [1678, 2258, 1737, 2286], [1751, 2258, 1886, 2295], [1900, 2258, 2027, 2295], [2044, 2267, 2093, 2286], [2108, 2258, 2173, 2286], [375, 2308, 510, 2345], [521, 2308, 652, 2336], [664, 2318, 693, 2345], [708, 2308, 810, 2337], [824, 2308, 871, 2336], [884, 2308, 1003, 2345], [1015, 2308, 1096, 2336], [1109, 2308, 1239, 2336], [1252, 2308, 1288, 2336], [1297, 2308, 1346, 2336], [1358, 2308, 1527, 2345], [1540, 2317, 1589, 2336], [1600, 2312, 1653, 2336], [1663, 2308, 1801, 2345], [1814, 2308, 1909, 2345], [1924, 2317, 1958, 2336], [1971, 2308, 2020, 2336], [2032, 2312, 2137, 2345], [2149, 2317, 2172, 2336], [377, 2359, 434, 2387], [446, 2359, 495, 2387], [507, 2359, 592, 2396], [603, 2368, 626, 2395], [639, 2368, 695, 2387], [706, 2359, 779, 2387], [790, 2359, 869, 2387], [880, 2363, 910, 2387], [923, 2359, 972, 2387], [985, 2368, 1068, 2387], [1079, 2368, 1216, 2396], [1228, 2359, 1385, 2387], [438, 2410, 499, 2438], [511, 2410, 653, 2447], [667, 2410, 825, 2447], [837, 2414, 916, 2438], [929, 2414, 980, 2438], [992, 2414, 1021, 2438], [1033, 2410, 1071, 2438], [1084, 2410, 1260, 2447], [1274, 2410, 1382, 2438], [1393, 2410, 1453, 2438], [1464, 2410, 1505, 2447], [1517, 2410, 1586, 2444], [1599, 2414, 1629, 2438], [1642, 2410, 1690, 2438], [1702, 2410, 1824, 2438], [1836, 2410, 1872, 2438], [1881, 2410, 1998, 2439], [2013, 2410, 2086, 2444], [2100, 2419, 2174, 2439], [376, 2461, 487, 2498], [498, 2461, 534, 2489], [547, 2461, 716, 2489], [728, 2461, 857, 2498], [870, 2470, 917, 2489], [928, 2461, 1069, 2498], [1081, 2461, 1227, 2489], [1244, 2461, 1333, 2490], [1345, 2461, 1392, 2489], [1405, 2461, 1552, 2498], [1562, 2461, 1718, 2498], [1728, 2461, 1797, 2489], [1808, 2461, 1860, 2489], [1874, 2470, 1890, 2489], [1902, 2465, 2001, 2498], [2013, 2461, 2173, 2498], [375, 2512, 454, 2540], [467, 2512, 524, 2540], [536, 2516, 565, 2540], [577, 2512, 613, 2540], [626, 2512, 791, 2549], [802, 2512, 1002, 2549], [1018, 2512, 1079, 2546], [1094, 2512, 1118, 2540], [1130, 2512, 1222, 2540], [1234, 2512, 1328, 2549], [1341, 2521, 1380, 2540], [1392, 2512, 1519, 2549], [1532, 2512, 1568, 2540], [1576, 2513, 1658, 2540], [1670, 2512, 1845, 2540], [1862, 2512, 2030, 2546], [2043, 2521, 2088, 2541], [2099, 2512, 2173, 2541], [377, 2563, 481, 2592], [493, 2563, 555, 2591], [566, 2563, 710, 2592], [724, 2563, 783, 2591], [794, 2564, 847, 2591], [859, 2563, 982, 2591], [994, 2563, 1029, 2597], [1043, 2563, 1073, 2591], [1086, 2563, 1154, 2597], [1169, 2572, 1185, 2591], [1197, 2563, 1359, 2591], [1371, 2563, 1540, 2600], [1553, 2563, 1720, 2600], [376, 2674, 435, 2709], [489, 2674, 749, 2718], [763, 2674, 806, 2709], [817, 2674, 1042, 2718], [1056, 2674, 1234, 2709], [1249, 2674, 1327, 2709], [1341, 2684, 1364, 2709], [1379, 2674, 1520, 2718], [1534, 2677, 1704, 2718], [374, 2759, 466, 2787], [487, 2759, 499, 2787], [520, 2759, 719, 2787], [737, 2759, 787, 2787], [804, 2759, 887, 2787], [904, 2759, 1036, 2787], [1053, 2759, 1089, 2787], [1104, 2759, 1154, 2787], [1171, 2759, 1281, 2787], [1300, 2759, 1359, 2787], [1376, 2759, 1542, 2787], [1558, 2759, 1730, 2796], [1748, 2759, 1889, 2787], [1905, 2759, 2058, 2788], [2076, 2768, 2110, 2787], [2128, 2759, 2179, 2787], [374, 2810, 533, 2847], [548, 2810, 597, 2838], [613, 2810, 723, 2838], [739, 2810, 911, 2847], [927, 2810, 1053, 2838], [1066, 2810, 1121, 2838], [1136, 2810, 1216, 2838], [1231, 2810, 1346, 2847], [1361, 2810, 1522, 2847], [1537, 2810, 1568, 2838], [1583, 2810, 1633, 2838], [1648, 2810, 1790, 2838], [1805, 2810, 1942, 2847], [1958, 2810, 2118, 2844], [2135, 2810, 2173, 2838], [1259, 2935, 1295, 2964], [265, 323, 301, 348], [874, 323, 910, 348], [1485, 323, 1521, 348], [265, 713, 301, 738], [874, 713, 910, 738], [1485, 713, 1521, 738], [265, 1105, 301, 1130], [874, 1105, 910, 1130], [1485, 1105, 1521, 1130], [485, 1480, 539, 1505], [1210, 1480, 1264, 1505], [376, 1843, 482, 1880], [494, 1843, 522, 1871], [538, 1845, 670, 1879], [681, 1845, 712, 1871], [720, 1845, 765, 1871], [776, 1845, 913, 1872], [924, 1845, 956, 1871], [964, 1845, 1009, 1871], [1019, 1845, 1165, 1871], [1175, 1849, 1230, 1871], [1242, 1845, 1324, 1879], [1335, 1845, 1453, 1871], [1468, 1845, 1524, 1871], [1536, 1845, 1656, 1871], [1666, 1845, 1749, 1871], [1760, 1845, 1891, 1879], [1901, 1845, 1933, 1871], [1941, 1845, 1986, 1871], [1995, 1845, 2059, 1871], [2069, 1845, 2175, 1871], [375, 1892, 463, 1925], [477, 1892, 531, 1918], [544, 1896, 662, 1926], [674, 1892, 758, 1918], [772, 1892, 909, 1918], [921, 1892, 954, 1918], [965, 1892, 1009, 1918], [1023, 1892, 1087, 1918], [1100, 1892, 1202, 1926], [1217, 1893, 1323, 1926], [1338, 1901, 1382, 1918], [1395, 1892, 1516, 1926], [1528, 1896, 1555, 1918], [1568, 1901, 1649, 1926], [1664, 1896, 1730, 1926], [1752, 1893, 1790, 1918], [1803, 1896, 1862, 1926], [1877, 1893, 1917, 1925], [1932, 1892, 1976, 1918], [1990, 1892, 2138, 1926], [2150, 1892, 2173, 1918], [376, 1938, 530, 1964], [546, 1939, 623, 1972], [636, 1939, 676, 1971], [687, 1942, 714, 1964], [727, 1939, 767, 1971], [780, 1938, 959, 1972], [970, 1947, 1084, 1972], [1094, 1942, 1121, 1964], [1132, 1938, 1231, 1972], [1241, 1938, 1517, 1972], [1527, 1938, 1640, 1965], [1650, 1938, 1795, 1972], [1810, 1939, 1845, 1964], [1857, 1942, 1913, 1972], [1926, 1938, 1975, 1971], [1986, 1938, 2117, 1969], [2129, 1938, 2174, 1964], [377, 1985, 465, 2019], [477, 1994, 558, 2016], [571, 1985, 622, 2011], [634, 1994, 663, 2011], [675, 1985, 694, 2011], [705, 1985, 727, 2011], [738, 1994, 879, 2019], [889, 1989, 917, 2011], [927, 1985, 1010, 2011], [1018, 1985, 1063, 2011], [1074, 1989, 1201, 2019], [1217, 1985, 1296, 2012], [1306, 1985, 1350, 2011], [1361, 1985, 1492, 2011], [1502, 1985, 1565, 2011], [1574, 1985, 1702, 2019], [1712, 1985, 1788, 2019], [1798, 1985, 1820, 2011], [1831, 1985, 1875, 2011], [1886, 1994, 1938, 2011], [1948, 1985, 1976, 2011], [1985, 1985, 2030, 2011], [2041, 1985, 2177, 2019], [375, 2031, 419, 2057], [429, 2031, 558, 2065], [568, 2031, 591, 2057], [601, 2031, 702, 2057], [712, 2031, 791, 2058], [801, 2035, 827, 2057], [836, 2031, 890, 2057], [900, 2031, 975, 2065], [985, 2031, 1036, 2057], [1047, 2031, 1079, 2057], [1090, 2031, 1221, 2057], [1232, 2031, 1289, 2057], [1299, 2031, 1322, 2057], [1333, 2031, 1419, 2057], [1428, 2035, 1455, 2057], [1466, 2031, 1510, 2057], [1521, 2031, 1644, 2062], [1656, 2031, 1782, 2065], [1794, 2031, 1821, 2057], [1832, 2031, 1880, 2064], [1894, 2031, 1950, 2057], [1960, 2031, 2069, 2057], [2079, 2031, 2101, 2057], [2111, 2031, 2174, 2057], [375, 2078, 503, 2104], [514, 2082, 540, 2104], [549, 2078, 594, 2104], [604, 2078, 688, 2104], [697, 2078, 781, 2112], [794, 2078, 859, 2105], [870, 2078, 1147, 2112], [1157, 2078, 1240, 2112], [1250, 2078, 1368, 2112], [1379, 2082, 1404, 2104], [1416, 2082, 1474, 2112], [1486, 2079, 1534, 2111], [1546, 2078, 1650, 2112], [1661, 2082, 1686, 2104], [1698, 2082, 1756, 2112], [1768, 2079, 1808, 2111], [1820, 2087, 1889, 2104], [1900, 2078, 1979, 2112], [1990, 2087, 2006, 2104], [2016, 2078, 2139, 2112], [2151, 2078, 2173, 2104], [376, 2125, 505, 2151], [520, 2126, 621, 2156], [634, 2129, 660, 2151], [671, 2129, 728, 2159], [740, 2126, 780, 2158], [792, 2134, 807, 2151], [817, 2125, 946, 2159], [957, 2125, 1033, 2159], [1043, 2125, 1066, 2151], [1078, 2125, 1235, 2151], [1246, 2125, 1325, 2159], [1336, 2125, 1388, 2151], [1398, 2125, 1443, 2151], [1454, 2125, 1597, 2159], [1608, 2125, 1630, 2151], [1641, 2125, 1768, 2151], [1779, 2134, 1848, 2151], [1859, 2134, 1941, 2151], [1955, 2125, 2105, 2159], [2116, 2125, 2177, 2156], [377, 2175, 435, 2205], [447, 2172, 507, 2204], [519, 2180, 649, 2205], [661, 2175, 689, 2197], [699, 2171, 799, 2205], [811, 2171, 1093, 2205], [1104, 2171, 1195, 2205], [1206, 2180, 1243, 2205], [1255, 2175, 1282, 2197], [1293, 2171, 1338, 2197], [1349, 2171, 1403, 2197], [1413, 2171, 1446, 2197], [1454, 2171, 1499, 2197], [1510, 2171, 1582, 2202], [1595, 2171, 1648, 2197], [1660, 2180, 1691, 2197], [1702, 2175, 1729, 2197], [1740, 2175, 1798, 2205], [1810, 2172, 1870, 2204], [1882, 2171, 1927, 2197], [1938, 2171, 2004, 2197], [2016, 2175, 2140, 2205], [2150, 2171, 2173, 2197], [375, 2218, 442, 2244], [452, 2218, 532, 2252], [542, 2218, 587, 2244], [599, 2219, 672, 2251], [683, 2218, 774, 2252], [787, 2218, 885, 2252], [376, 2352, 538, 2385], [550, 2348, 580, 2376], [593, 2348, 688, 2376], [698, 2348, 911, 2385], [923, 2348, 1028, 2376], [1040, 2348, 1063, 2376], [1075, 2357, 1112, 2376], [1125, 2348, 1278, 2377], [1290, 2348, 1407, 2376], [1423, 2348, 1641, 2382], [1656, 2348, 1802, 2385], [1813, 2357, 1860, 2377], [1872, 2348, 1965, 2376], [1977, 2352, 2030, 2376], [2041, 2348, 2105, 2376], [2118, 2357, 2175, 2385], [375, 2399, 542, 2427], [555, 2408, 595, 2427], [607, 2399, 864, 2436], [876, 2399, 980, 2427], [994, 2399, 1029, 2427], [1039, 2399, 1095, 2427], [1108, 2399, 1239, 2433], [1253, 2408, 1299, 2428], [1310, 2399, 1385, 2428], [1398, 2399, 1584, 2436], [1597, 2408, 1668, 2427], [1680, 2399, 1741, 2427], [1753, 2408, 1769, 2427], [1780, 2408, 1851, 2436], [1863, 2399, 1997, 2427], [2009, 2399, 2107, 2428], [2118, 2408, 2174, 2427], [375, 2450, 413, 2478], [424, 2450, 578, 2487], [589, 2450, 630, 2487], [642, 2450, 765, 2487], [776, 2459, 831, 2478], [842, 2450, 878, 2478], [888, 2459, 904, 2478], [916, 2450, 1140, 2478], [1152, 2459, 1250, 2487], [1262, 2454, 1293, 2478], [1304, 2450, 1464, 2487], [1476, 2450, 1525, 2478], [1537, 2450, 1846, 2487], [1857, 2450, 2060, 2478], [438, 2502, 470, 2529], [481, 2505, 609, 2529], [620, 2505, 649, 2529], [661, 2501, 727, 2535], [740, 2501, 787, 2529], [799, 2501, 958, 2529], [969, 2501, 1134, 2538], [1146, 2501, 1267, 2529], [1279, 2501, 1457, 2538], [1468, 2505, 1498, 2529], [1513, 2501, 1589, 2536], [1601, 2501, 1727, 2529], [1741, 2510, 1757, 2529], [1768, 2501, 1857, 2529], [1867, 2501, 1960, 2529], [1969, 2501, 2173, 2538], [375, 2561, 428, 2589], [440, 2556, 504, 2589], [516, 2552, 547, 2580], [559, 2552, 608, 2580], [620, 2552, 690, 2580], [702, 2552, 851, 2586], [865, 2552, 978, 2589], [991, 2552, 1049, 2580], [1061, 2556, 1092, 2580], [1104, 2556, 1156, 2580], [1166, 2552, 1318, 2589], [1331, 2552, 1495, 2580], [1507, 2561, 1644, 2589], [1657, 2552, 1714, 2580], [1726, 2552, 1849, 2589], [1860, 2561, 1915, 2580], [1927, 2552, 1963, 2580], [1972, 2552, 2044, 2589], [2058, 2561, 2074, 2580], [2086, 2552, 2174, 2580], [376, 2606, 510, 2630], [521, 2602, 645, 2630], [655, 2602, 690, 2630], [698, 2602, 851, 2636], [864, 2602, 984, 2639], [996, 2602, 1043, 2630], [1055, 2602, 1176, 2630], [1187, 2602, 1313, 2639], [1325, 2602, 1372, 2630], [1382, 2602, 1460, 2631], [1471, 2602, 1562, 2630], [1573, 2611, 1607, 2630], [1616, 2602, 1751, 2639], [1764, 2602, 1948, 2630], [1965, 2602, 2008, 2630], [2021, 2611, 2037, 2630], [2048, 2602, 2177, 2630], [376, 2653, 411, 2681], [419, 2653, 547, 2690], [560, 2653, 633, 2681], [646, 2662, 745, 2681], [757, 2653, 949, 2681], [961, 2653, 991, 2681], [1003, 2662, 1143, 2690], [1157, 2653, 1205, 2681], [1217, 2653, 1339, 2681], [1350, 2653, 1422, 2681], [1436, 2657, 1487, 2681], [1498, 2657, 1655, 2690], [1668, 2653, 1760, 2681], [1770, 2653, 1985, 2690], [1998, 2653, 2102, 2690], [2115, 2657, 2145, 2681], [2158, 2662, 2174, 2681], [376, 2704, 525, 2741], [537, 2704, 707, 2732], [718, 2704, 844, 2732], [856, 2704, 887, 2732], [898, 2704, 946, 2732], [958, 2708, 1047, 2733], [1059, 2713, 1135, 2732], [1152, 2704, 1221, 2732], [1235, 2704, 1294, 2732], [1306, 2713, 1366, 2733], [1380, 2704, 1496, 2741], [1509, 2704, 1654, 2733], [1666, 2704, 1696, 2732], [1711, 2704, 1783, 2738], [1797, 2704, 1908, 2741], [1921, 2704, 1993, 2732], [2005, 2708, 2094, 2733], [2106, 2713, 2173, 2732], [374, 2764, 437, 2784], [449, 2755, 579, 2783], [592, 2764, 623, 2783], [635, 2755, 851, 2792], [865, 2755, 1010, 2792], [1024, 2764, 1041, 2783], [1053, 2752, 1137, 2793], [1151, 2755, 1363, 2792], [1375, 2755, 1406, 2783], [1419, 2755, 1459, 2783], [1470, 2755, 1614, 2792], [1627, 2755, 1794, 2783], [1810, 2756, 1864, 2783], [1877, 2755, 1954, 2783], [1965, 2755, 2076, 2784], [2089, 2755, 2174, 2783], [376, 2806, 481, 2834], [494, 2806, 525, 2834], [537, 2806, 586, 2834], [598, 2806, 813, 2843], [826, 2806, 955, 2834], [969, 2806, 999, 2834], [1011, 2806, 1068, 2834], [1082, 2806, 1273, 2843], [1259, 2935, 1291, 2963], [438, 242, 502, 270], [513, 242, 572, 279], [584, 242, 687, 279], [700, 242, 736, 270], [746, 242, 837, 270], [854, 242, 866, 270], [883, 242, 968, 271], [981, 242, 1044, 270], [1056, 251, 1096, 270], [1109, 242, 1281, 279], [1294, 242, 1410, 271], [1421, 242, 1447, 270], [1460, 242, 1573, 279], [1587, 242, 1730, 279], [1747, 242, 1849, 270], [1862, 242, 1912, 270], [1925, 242, 2035, 270], [2048, 242, 2174, 270], [375, 292, 518, 329], [532, 301, 549, 320], [562, 292, 627, 320], [639, 292, 735, 320], [746, 292, 820, 320], [833, 292, 968, 320], [979, 296, 1010, 320], [1023, 292, 1073, 320], [1084, 292, 1233, 329], [1248, 292, 1298, 320], [1310, 292, 1476, 320], [1488, 292, 1613, 320], [1625, 292, 1651, 320], [1663, 292, 1843, 329], [1856, 292, 1948, 320], [1959, 292, 2012, 320], [2023, 292, 2131, 320], [2143, 292, 2174, 320], [376, 347, 467, 371], [482, 343, 518, 371], [530, 347, 623, 372], [636, 352, 707, 371], [720, 343, 942, 380], [965, 343, 1135, 380], [1150, 343, 1235, 371], [1250, 343, 1460, 372], [1475, 352, 1523, 372], [1536, 352, 1669, 380], [1683, 343, 1755, 371], [1770, 352, 1787, 371], [1801, 343, 1911, 380], [1925, 343, 2035, 380], [2048, 343, 2174, 371], [376, 394, 547, 431], [557, 394, 629, 422], [640, 394, 829, 431], [844, 403, 898, 422], [908, 394, 956, 422], [967, 394, 1126, 422], [1137, 394, 1293, 431], [1301, 403, 1341, 431], [1352, 398, 1381, 422], [1393, 403, 1409, 422], [1418, 394, 1550, 431], [1560, 394, 1684, 422], [1693, 394, 1728, 422], [1736, 398, 1814, 431], [1825, 387, 1870, 422], [1875, 418, 1881, 428], [1894, 393, 1919, 423], [1935, 400, 1956, 424], [1975, 391, 2016, 432], [2028, 391, 2071, 432], [2084, 394, 2141, 422], [2151, 394, 2177, 422], [376, 445, 423, 473], [435, 445, 564, 473], [574, 445, 626, 473], [638, 449, 689, 473], [700, 449, 748, 482], [758, 445, 834, 473], [845, 445, 946, 479], [959, 454, 1005, 474], [1017, 445, 1121, 474], [1131, 449, 1161, 473], [1172, 445, 1220, 473], [1231, 445, 1338, 473], [1349, 445, 1477, 473], [1493, 446, 1545, 473], [1556, 445, 1701, 473], [1712, 445, 1788, 473], [1798, 445, 1846, 473], [1857, 449, 2029, 474], [2041, 445, 2173, 473], [376, 500, 406, 524], [422, 489, 515, 534], [520, 493, 530, 534], [548, 500, 576, 527], [591, 493, 675, 534], [697, 505, 725, 522], [746, 489, 839, 534], [844, 493, 866, 534], [882, 496, 1015, 524], [1030, 505, 1108, 524], [1123, 496, 1173, 524], [1188, 496, 1298, 524], [1313, 496, 1439, 524], [1452, 496, 1550, 530], [1567, 496, 1590, 524], [1603, 496, 1668, 525], [1682, 505, 1791, 524], [1807, 505, 1844, 524], [1860, 493, 1943, 534], [1961, 496, 2174, 533], [376, 550, 544, 583], [438, 597, 694, 634], [706, 597, 741, 625], [750, 597, 806, 625], [818, 597, 924, 634], [935, 597, 1056, 625], [1068, 597, 1092, 625], [1105, 606, 1175, 634], [1187, 606, 1268, 634], [1278, 597, 1419, 634], [1432, 597, 1479, 625], [1493, 597, 1670, 625], [1682, 597, 1817, 626], [1830, 597, 2010, 634], [2028, 606, 2044, 625], [2056, 597, 2180, 626], [376, 648, 470, 676], [481, 648, 506, 676], [520, 648, 615, 676], [627, 652, 656, 676], [669, 648, 717, 676], [729, 648, 889, 676], [901, 648, 1022, 676], [1034, 657, 1121, 685], [1133, 648, 1204, 676], [1218, 657, 1234, 676], [1246, 652, 1379, 685], [1391, 648, 1426, 676], [1435, 648, 1483, 676], [1496, 648, 1661, 685], [1673, 648, 1726, 676], [1738, 648, 1815, 676], [1827, 648, 1980, 676], [1992, 648, 2175, 685], [376, 699, 403, 733], [416, 699, 490, 727], [503, 700, 530, 733], [547, 699, 604, 734], [621, 699, 649, 727], [658, 699, 679, 727], [690, 699, 714, 727], [727, 699, 891, 727], [902, 699, 962, 727], [973, 699, 1021, 727], [1033, 699, 1154, 727], [1164, 699, 1216, 727], [1230, 699, 1346, 736], [1358, 708, 1412, 727], [1423, 699, 1470, 727], [1480, 692, 1525, 727], [1540, 703, 1618, 736], [1631, 699, 1754, 728], [1764, 699, 1902, 736], [1915, 699, 1962, 727], [1975, 699, 2113, 733], [2126, 699, 2173, 727], [375, 750, 538, 787], [550, 754, 613, 787], [624, 750, 660, 778], [669, 750, 716, 778], [730, 750, 823, 787], [836, 750, 883, 778], [894, 750, 992, 779], [1004, 750, 1051, 778], [1064, 750, 1229, 787], [1240, 750, 1293, 778], [1306, 754, 1356, 778], [1368, 754, 1416, 787], [1427, 750, 1504, 778], [1515, 750, 1609, 778], [1620, 750, 1645, 778], [1657, 750, 1765, 787], [1777, 759, 1816, 778], [1828, 754, 1857, 778], [1870, 750, 1917, 778], [1930, 750, 2036, 778], [2048, 750, 2178, 784], [374, 801, 480, 830], [494, 801, 628, 829], [640, 801, 665, 829], [678, 801, 898, 829], [910, 805, 940, 829], [953, 801, 1003, 829], [1014, 805, 1080, 838], [1092, 801, 1141, 829], [1154, 801, 1319, 829], [1331, 801, 1457, 829], [1469, 801, 1620, 838], [1632, 805, 1663, 829], [1675, 801, 1740, 829], [1753, 810, 1787, 829], [1800, 801, 1851, 829], [1867, 802, 1921, 829], [1935, 801, 2000, 829], [2011, 805, 2113, 838], [2124, 801, 2174, 829], [376, 851, 531, 888], [542, 851, 751, 888], [763, 851, 799, 879], [808, 851, 865, 879], [878, 851, 1001, 879], [1013, 851, 1044, 879], [1056, 851, 1105, 879], [1117, 851, 1331, 888], [1344, 851, 1468, 879], [376, 962, 436, 997], [489, 962, 725, 1006], [739, 962, 916, 997], [931, 962, 993, 997], [1006, 962, 1195, 1006], [1211, 962, 1266, 997], [1269, 953, 1306, 976], [1270, 986, 1282, 1008], [377, 1047, 497, 1076], [510, 1047, 707, 1084], [720, 1048, 774, 1075], [785, 1047, 903, 1084], [913, 1047, 1086, 1084], [1098, 1047, 1147, 1075], [1159, 1047, 1287, 1075], [1299, 1047, 1448, 1084], [1462, 1047, 1666, 1084], [1680, 1047, 1780, 1076], [1792, 1056, 1848, 1075], [1859, 1047, 1898, 1075], [1910, 1047, 1989, 1075], [2000, 1047, 2041, 1084], [2054, 1047, 2174, 1084], [376, 1098, 425, 1126], [437, 1098, 587, 1135], [598, 1098, 696, 1127], [710, 1098, 848, 1135], [895, 1185, 982, 1219], [1043, 1178, 1054, 1197], [1042, 1177, 1222, 1228], [1209, 1189, 1265, 1223], [1279, 1161, 1397, 1232], [1338, 1219, 1388, 1238], [1410, 1182, 1539, 1223], [1556, 1202, 1582, 1203], [1595, 1182, 1651, 1223], [2097, 1185, 2173, 1220], [374, 1273, 474, 1302], [486, 1273, 536, 1301], [547, 1273, 674, 1310], [689, 1270, 747, 1311], [754, 1270, 769, 1311], [772, 1265, 832, 1284], [772, 1294, 823, 1313], [849, 1282, 897, 1301], [910, 1273, 949, 1301], [960, 1273, 1098, 1310], [1115, 1274, 1156, 1301], [1169, 1273, 1254, 1302], [1267, 1273, 1342, 1308], [1354, 1273, 1444, 1310], [1457, 1282, 1473, 1301], [1485, 1273, 1654, 1310], [1667, 1273, 1826, 1310], [1840, 1282, 1887, 1302], [1900, 1273, 1987, 1310], [1998, 1273, 2089, 1310], [2101, 1273, 2174, 1302], [376, 1324, 412, 1352], [425, 1324, 495, 1352], [508, 1324, 637, 1359], [650, 1333, 680, 1352], [695, 1333, 711, 1352], [723, 1324, 942, 1352], [953, 1324, 1104, 1361], [761, 1397, 851, 1432], [911, 1390, 922, 1409], [910, 1421, 923, 1440], [934, 1388, 1013, 1435], [1017, 1394, 1060, 1435], [1068, 1389, 1081, 1408], [1068, 1406, 1162, 1436], [1164, 1388, 1186, 1408], [1191, 1397, 1254, 1433], [1299, 1401, 1343, 1425], [1392, 1394, 1555, 1435], [1611, 1397, 1785, 1431], [2097, 1397, 2173, 1432], [374, 1471, 467, 1505], [481, 1480, 528, 1500], [539, 1475, 641, 1508], [652, 1471, 701, 1499], [713, 1471, 878, 1500], [890, 1471, 926, 1499], [935, 1471, 985, 1499], [995, 1471, 1189, 1508], [1201, 1471, 1370, 1508], [1383, 1471, 1506, 1499], [1517, 1471, 1570, 1499], [1581, 1471, 1653, 1500], [1666, 1480, 1682, 1499], [1694, 1471, 1753, 1500], [1765, 1471, 1823, 1508], [1835, 1471, 2069, 1499], [2085, 1472, 2174, 1499], [375, 1522, 530, 1559], [543, 1531, 590, 1551], [602, 1522, 762, 1550], [775, 1522, 851, 1557], [863, 1522, 904, 1559], [916, 1522, 1105, 1559], [1118, 1532, 1155, 1557], [1172, 1535, 1200, 1544], [1215, 1532, 1257, 1556], [1274, 1535, 1302, 1544], [1318, 1522, 1335, 1551], [1348, 1526, 1379, 1550], [1391, 1522, 1493, 1550], [761, 1603, 828, 1631], [784, 1643, 805, 1656], [848, 1585, 925, 1650], [907, 1637, 958, 1656], [973, 1600, 1251, 1641], [1257, 1591, 1270, 1610], [1324, 1600, 1555, 1641], [1611, 1603, 1786, 1637], [374, 1699, 467, 1733], [480, 1708, 527, 1728], [538, 1699, 671, 1736], [683, 1699, 732, 1727], [744, 1699, 860, 1736], [872, 1699, 908, 1727], [917, 1699, 1063, 1728], [1077, 1708, 1095, 1727], [1111, 1712, 1139, 1721], [1154, 1708, 1174, 1727], [1188, 1716, 1214, 1717], [1228, 1708, 1263, 1733], [1277, 1699, 1377, 1728], [1389, 1709, 1416, 1733], [1436, 1709, 1473, 1727], [1489, 1687, 1541, 1738], [1533, 1719, 1589, 1739], [1601, 1709, 1637, 1736], [1643, 1723, 1649, 1733], [1664, 1699, 1721, 1727], [1733, 1699, 1873, 1727], [631, 1784, 698, 1812], [658, 1824, 671, 1837], [708, 1765, 785, 1830], [767, 1818, 817, 1837], [833, 1781, 874, 1822], [890, 1801, 916, 1802], [931, 1781, 1016, 1822], [1023, 1772, 1036, 1791], [1090, 1781, 1393, 1822], [1449, 1784, 1748, 1820], [1771, 1794, 1807, 1818], [1825, 1794, 1916, 1818], [376, 1868, 497, 1905], [512, 1868, 655, 1905], [667, 1868, 815, 1896], [827, 1868, 880, 1897], [896, 1877, 943, 1897], [955, 1868, 1057, 1896], [1069, 1868, 1119, 1896], [1130, 1868, 1301, 1905], [1312, 1868, 1462, 1905], [1473, 1869, 1645, 1905], [1657, 1868, 1795, 1905], [584, 1961, 651, 1989], [611, 2001, 624, 2014], [661, 1943, 738, 2008], [720, 1995, 770, 2014], [787, 1933, 1083, 2008], [1089, 1949, 1102, 1968], [1149, 1958, 1452, 1999], [1477, 1961, 1652, 1997], [1675, 1961, 1795, 1997], [1818, 1971, 1854, 1995], [1871, 1971, 1962, 1995], [2097, 1961, 2173, 1996], [438, 2048, 577, 2076], [590, 2048, 665, 2083], [679, 2048, 783, 2076], [796, 2048, 875, 2076], [887, 2048, 923, 2076], [936, 2048, 1128, 2085], [1140, 2052, 1329, 2085], [1341, 2047, 1416, 2083], [1430, 2048, 1460, 2076], [1472, 2048, 1521, 2076], [1533, 2048, 1710, 2076], [1727, 2045, 1763, 2086], [1779, 2065, 1805, 2066], [1819, 2058, 1846, 2082], [1855, 2045, 1857, 2086], [1876, 2050, 1902, 2082], [1918, 2058, 1957, 2082], [1973, 2048, 2002, 2083], [2020, 2050, 2046, 2082], [2062, 2049, 2073, 2076], [2090, 2054, 2116, 2078], [2132, 2048, 2177, 2083], [374, 2099, 473, 2128], [486, 2099, 574, 2128], [586, 2099, 725, 2127], [737, 2099, 862, 2136], [876, 2099, 923, 2127], [934, 2099, 1008, 2127], [1020, 2103, 1201, 2136], [1213, 2099, 1328, 2127], [1340, 2099, 1376, 2127], [1384, 2099, 1472, 2136], [1485, 2099, 1533, 2127], [1546, 2108, 1628, 2127], [1640, 2099, 1726, 2128], [1740, 2098, 1769, 2128], [1786, 2099, 1850, 2128], [1861, 2099, 2023, 2136], [2036, 2099, 2174, 2127], [377, 2150, 439, 2178], [453, 2150, 560, 2178], [573, 2159, 645, 2179], [656, 2154, 686, 2178], [699, 2150, 748, 2178], [760, 2150, 910, 2187], [921, 2150, 1067, 2187], [1081, 2150, 1172, 2178], [1183, 2150, 1255, 2179], [1268, 2159, 1284, 2178], [1297, 2150, 1387, 2187], [1398, 2150, 1614, 2178], [1632, 2150, 1681, 2178], [1693, 2150, 1763, 2178], [1774, 2159, 1821, 2179], [1834, 2159, 1882, 2178], [1894, 2150, 1990, 2187], [2003, 2154, 2033, 2178], [2046, 2154, 2174, 2179], [376, 2209, 444, 2229], [455, 2200, 509, 2228], [522, 2200, 646, 2237], [658, 2200, 766, 2229], [780, 2204, 809, 2228], [820, 2200, 894, 2228], [907, 2204, 971, 2237], [983, 2200, 1099, 2228], [1111, 2200, 1147, 2228], [1156, 2200, 1206, 2228], [1216, 2200, 1356, 2237], [1370, 2200, 1450, 2228], [1463, 2199, 1484, 2229], [1497, 2200, 1740, 2237], [1752, 2199, 1769, 2229], [1783, 2200, 1941, 2228], [1955, 2200, 2012, 2228], [2025, 2200, 2101, 2228], [438, 2251, 481, 2279], [495, 2260, 511, 2279], [523, 2260, 734, 2288], [746, 2251, 782, 2279], [791, 2251, 840, 2279], [853, 2251, 949, 2280], [960, 2251, 1125, 2280], [1138, 2251, 1195, 2279], [1208, 2251, 1356, 2285], [1369, 2251, 1538, 2288], [1551, 2251, 1688, 2279], [1702, 2260, 1758, 2279], [1769, 2251, 1808, 2279], [1818, 2251, 1972, 2288], [1985, 2255, 2015, 2279], [2028, 2251, 2113, 2280], [2125, 2251, 2174, 2279], [374, 2302, 522, 2339], [533, 2293, 613, 2331], [582, 2321, 593, 2340], [627, 2302, 769, 2339], [786, 2302, 847, 2330], [860, 2302, 984, 2339], [997, 2302, 1187, 2330], [1199, 2302, 1234, 2330], [1243, 2302, 1291, 2330], [1303, 2302, 1410, 2330], [1422, 2302, 1587, 2339], [1600, 2302, 1720, 2330], [1732, 2302, 1762, 2330], [1777, 2302, 1838, 2336], [1853, 2302, 1965, 2330], [1979, 2302, 2026, 2330], [2039, 2302, 2128, 2330], [2142, 2302, 2177, 2330], [376, 2353, 425, 2381], [437, 2353, 508, 2381], [520, 2353, 648, 2390], [659, 2353, 798, 2390], [810, 2353, 935, 2390], [947, 2353, 1065, 2381], [1078, 2353, 1136, 2381], [1148, 2353, 1260, 2390], [1272, 2353, 1376, 2382], [1391, 2350, 1426, 2391], [1434, 2377, 1438, 2389], [1449, 2363, 1482, 2387], [1488, 2350, 1498, 2391], [1512, 2352, 1558, 2387], [1573, 2353, 1631, 2381], [1643, 2362, 1678, 2381], [1690, 2353, 1748, 2381], [1761, 2353, 1886, 2381], [1897, 2353, 1993, 2390], [2005, 2353, 2130, 2381], [2143, 2357, 2174, 2381], [377, 2404, 462, 2433], [474, 2404, 523, 2432], [535, 2404, 688, 2441], [700, 2405, 753, 2432], [765, 2404, 904, 2441], [915, 2404, 956, 2441], [969, 2404, 1125, 2441], [1138, 2403, 1158, 2438], [1176, 2417, 1204, 2426], [1219, 2414, 1246, 2438], [1262, 2421, 1288, 2422], [1302, 2414, 1352, 2438], [1366, 2414, 1399, 2438], [1417, 2417, 1445, 2426], [1459, 2414, 1487, 2438], [1502, 2408, 1530, 2435], [1543, 2414, 1581, 2438], [1588, 2428, 1593, 2432], [1610, 2405, 1643, 2432], [1655, 2413, 1710, 2432], [1720, 2404, 1918, 2441], [1930, 2404, 1960, 2432], [1973, 2404, 2146, 2441], [2162, 2404, 2174, 2432], [374, 2463, 421, 2483], [429, 2454, 492, 2491], [503, 2454, 580, 2482], [592, 2458, 622, 2482], [634, 2454, 753, 2491], [766, 2453, 787, 2483], [798, 2454, 839, 2491], [851, 2454, 901, 2482], [913, 2454, 1100, 2491], [1112, 2464, 1151, 2489], [1166, 2454, 1278, 2483], [439, 2505, 561, 2534], [579, 2505, 821, 2533], [840, 2505, 931, 2542], [950, 2505, 998, 2533], [1015, 2505, 1065, 2533], [1083, 2505, 1249, 2533], [1266, 2505, 1389, 2534], [1408, 2505, 1596, 2542], [1613, 2505, 1656, 2540], [1677, 2505, 1709, 2533], [1725, 2505, 1894, 2542], [1915, 2505, 2005, 2534], [2023, 2505, 2173, 2542], [376, 2556, 581, 2593], [595, 2556, 760, 2585], [776, 2565, 808, 2584], [824, 2556, 895, 2585], [910, 2565, 942, 2584], [958, 2556, 1048, 2585], [1062, 2556, 1213, 2593], [1229, 2556, 1316, 2593], [1329, 2556, 1589, 2593], [1605, 2556, 1664, 2584], [1677, 2560, 1808, 2590], [1825, 2565, 1872, 2585], [1887, 2560, 1969, 2584], [1983, 2560, 2113, 2584], [2127, 2556, 2175, 2584], [374, 2607, 501, 2644], [514, 2607, 585, 2635], [597, 2607, 727, 2644], [745, 2607, 920, 2644], [933, 2607, 949, 2636], [963, 2611, 1101, 2644], [1114, 2607, 1164, 2635], [1176, 2607, 1295, 2644], [1308, 2607, 1536, 2635], [1549, 2607, 1612, 2635], [1623, 2616, 1671, 2636], [1684, 2611, 1765, 2635], [1777, 2607, 1867, 2635], [1879, 2611, 1910, 2635], [1923, 2607, 2099, 2644], [2110, 2607, 2129, 2635], [2143, 2611, 2173, 2635], [375, 2658, 482, 2686], [494, 2658, 626, 2695], [643, 2658, 809, 2695], [821, 2658, 869, 2686], [881, 2667, 1081, 2695], [1093, 2658, 1128, 2686], [1136, 2658, 1192, 2686], [1205, 2658, 1334, 2692], [1347, 2658, 1394, 2686], [1405, 2658, 1495, 2695], [1504, 2658, 1539, 2686], [1547, 2658, 1737, 2695], [1749, 2658, 1820, 2687], [1831, 2658, 1878, 2686], [1890, 2658, 1997, 2686], [2008, 2658, 2173, 2695], [376, 2708, 498, 2736], [511, 2708, 571, 2736], [582, 2708, 670, 2736], [683, 2708, 714, 2736], [726, 2708, 775, 2736], [787, 2708, 938, 2745], [950, 2717, 1020, 2736], [1033, 2708, 1097, 2743], [1109, 2708, 1271, 2745], [1283, 2708, 1334, 2743], [438, 2759, 502, 2787], [514, 2768, 587, 2796], [601, 2768, 685, 2787], [699, 2759, 832, 2796], [846, 2768, 878, 2787], [890, 2759, 1052, 2796], [1064, 2759, 1096, 2787], [1108, 2759, 1199, 2787], [1215, 2759, 1227, 2787], [1244, 2759, 1361, 2796], [1373, 2759, 1454, 2787], [1471, 2759, 1547, 2787], [1558, 2759, 1608, 2787], [1620, 2759, 1750, 2787], [1765, 2759, 1824, 2787], [1834, 2759, 1991, 2796], [2004, 2759, 2040, 2787], [2050, 2759, 2100, 2787], [2112, 2763, 2173, 2788], [376, 2810, 544, 2847], [558, 2810, 670, 2839], [684, 2819, 767, 2847], [780, 2819, 819, 2838], [831, 2814, 862, 2838], [874, 2810, 923, 2838], [935, 2810, 1086, 2847], [1098, 2810, 1211, 2839], [1222, 2810, 1258, 2838], [1267, 2810, 1317, 2838], [1327, 2810, 1474, 2847], [1259, 2935, 1295, 2963], [505, 799, 683, 841], [827, 799, 855, 840], [987, 799, 1014, 841], [1148, 799, 1176, 840], [1310, 799, 1498, 841], [1633, 799, 1660, 840], [1792, 799, 1820, 841], [1954, 799, 2158, 841], [478, 670, 505, 712], [478, 563, 506, 604], [478, 456, 506, 497], [478, 348, 506, 390], [1320, 857, 1326, 904], [410, 552, 447, 580], [1043, 261, 1365, 322], [1389, 261, 1607, 309], [376, 1039, 484, 1076], [496, 1038, 524, 1068], [541, 1041, 675, 1075], [686, 1041, 719, 1067], [727, 1041, 771, 1067], [783, 1041, 921, 1075], [931, 1045, 988, 1067], [998, 1041, 1082, 1075], [1093, 1041, 1206, 1067], [1217, 1041, 1282, 1068], [1293, 1050, 1323, 1067], [1338, 1053, 1364, 1062], [1381, 1039, 1467, 1076], [1481, 1042, 1554, 1072], [1568, 1042, 1641, 1072], [1655, 1042, 1728, 1072], [1742, 1042, 1815, 1072], [1829, 1042, 1902, 1072], [1916, 1042, 1989, 1072], [2004, 1042, 2077, 1072], [2091, 1039, 2179, 1076], [374, 1087, 432, 1113], [444, 1087, 609, 1114], [622, 1096, 684, 1113], [695, 1096, 714, 1113], [726, 1087, 759, 1113], [768, 1087, 813, 1113], [825, 1087, 902, 1121], [914, 1087, 1002, 1121], [1014, 1087, 1107, 1114], [1120, 1096, 1141, 1121], [1154, 1087, 1177, 1113], [1191, 1087, 1286, 1114], [1298, 1096, 1327, 1113], [1340, 1087, 1384, 1113], [1396, 1087, 1501, 1113], [1512, 1087, 1575, 1118], [1589, 1087, 1655, 1114], [1666, 1087, 1711, 1113], [1722, 1087, 1804, 1113], [1815, 1087, 1876, 1113], [1889, 1087, 2014, 1121], [2026, 1087, 2070, 1113], [2081, 1087, 2173, 1121], [374, 1132, 406, 1169], [416, 1143, 446, 1164], [451, 1132, 471, 1169], [486, 1134, 543, 1160], [553, 1134, 660, 1160], [671, 1134, 725, 1160], [735, 1134, 837, 1168], [848, 1134, 881, 1160], [889, 1134, 934, 1160], [945, 1134, 1008, 1160], [1020, 1143, 1064, 1160], [1076, 1134, 1171, 1161], [1183, 1134, 1210, 1160], [1221, 1134, 1276, 1165], [1289, 1134, 1381, 1161], [1391, 1143, 1456, 1168], [1467, 1134, 1495, 1160], [1506, 1134, 1591, 1161], [1602, 1138, 1629, 1160], [1639, 1134, 1707, 1160], [1718, 1138, 1777, 1168], [1788, 1134, 1933, 1168], [1944, 1134, 1989, 1160], [2000, 1134, 2115, 1168], [2127, 1143, 2168, 1164], [2175, 1156, 2179, 1160], [374, 1181, 431, 1207], [442, 1181, 577, 1215], [587, 1185, 643, 1207], [654, 1181, 737, 1215], [749, 1181, 867, 1207], [879, 1190, 895, 1207], [907, 1181, 930, 1207], [943, 1181, 1037, 1208], [1048, 1190, 1076, 1207], [1088, 1190, 1104, 1207], [1113, 1181, 1177, 1207], [1188, 1181, 1250, 1207], [373, 1272, 557, 1310], [569, 1272, 587, 1302], [599, 1275, 735, 1301], [746, 1275, 814, 1301], [826, 1275, 869, 1301], [879, 1275, 1014, 1309], [1025, 1275, 1133, 1302], [1144, 1275, 1176, 1301], [1185, 1275, 1339, 1309], [1350, 1276, 1367, 1301], [394, 1341, 416, 1363], [488, 1328, 776, 1371], [790, 1328, 1210, 1370], [1224, 1338, 1280, 1364], [395, 1387, 416, 1409], [490, 1384, 560, 1410], [573, 1392, 633, 1410], [648, 1387, 773, 1417], [785, 1383, 854, 1409], [866, 1383, 957, 1409], [981, 1381, 1030, 1418], [1037, 1413, 1051, 1414], [1041, 1381, 1111, 1418], [1128, 1379, 1142, 1380], [1129, 1384, 1148, 1414], [1163, 1413, 1177, 1414], [1165, 1382, 1502, 1417], [1522, 1378, 1536, 1379], [1519, 1382, 1754, 1417], [1772, 1399, 1796, 1400], [1810, 1392, 1857, 1414], [1874, 1413, 1888, 1414], [1874, 1383, 2002, 1414], [2020, 1378, 2034, 1379], [2019, 1383, 2082, 1409], [2102, 1392, 2177, 1414], [439, 1431, 490, 1456], [502, 1425, 516, 1426], [503, 1431, 578, 1459], [381, 1480, 416, 1503], [490, 1478, 560, 1504], [573, 1486, 633, 1504], [648, 1481, 773, 1511], [785, 1477, 854, 1503], [866, 1477, 957, 1503], [981, 1475, 1030, 1512], [1040, 1472, 1064, 1512], [1085, 1489, 1111, 1498], [1126, 1506, 1140, 1507], [1129, 1478, 1148, 1508], [1163, 1506, 1177, 1507], [1165, 1476, 1400, 1511], [1418, 1493, 1442, 1494], [1456, 1486, 1502, 1508], [1522, 1471, 1536, 1472], [1519, 1476, 1857, 1511], [1874, 1506, 1888, 1507], [1874, 1477, 2002, 1508], [2020, 1471, 2034, 1472], [2019, 1477, 2082, 1503], [2102, 1486, 2177, 1508], [439, 1524, 490, 1549], [500, 1553, 514, 1554], [503, 1524, 578, 1552], [376, 1651, 403, 1693], [466, 1651, 616, 1693], [634, 1651, 1049, 1693], [1067, 1652, 1147, 1693], [1164, 1651, 1371, 1693], [373, 1758, 474, 1786], [486, 1767, 570, 1786], [582, 1758, 760, 1795], [772, 1758, 927, 1795], [939, 1758, 988, 1786], [999, 1757, 1030, 1792], [1046, 1767, 1133, 1786], [1144, 1758, 1180, 1786], [1189, 1758, 1239, 1786], [1252, 1758, 1390, 1786], [1402, 1759, 1455, 1786], [1467, 1758, 1647, 1795], [1657, 1758, 1698, 1795], [1711, 1767, 1747, 1786], [1758, 1757, 1896, 1798], [1908, 1758, 2028, 1787], [2040, 1767, 2096, 1786], [2109, 1758, 2174, 1786], [375, 1809, 412, 1837], [424, 1809, 531, 1837], [548, 1810, 581, 1837], [593, 1809, 650, 1837], [664, 1809, 778, 1837], [790, 1818, 835, 1838], [848, 1809, 934, 1837], [948, 1809, 1010, 1837], [1022, 1818, 1062, 1837], [1075, 1818, 1091, 1837], [1103, 1809, 1283, 1846], [1296, 1809, 1395, 1838], [1406, 1809, 1453, 1837], [1462, 1819, 1483, 1845], [1497, 1822, 1525, 1831], [1541, 1809, 1568, 1843], [1581, 1809, 1684, 1837], [1697, 1809, 1866, 1846], [1880, 1818, 1896, 1837], [1908, 1809, 1966, 1837], [1980, 1809, 2112, 1837], [2123, 1809, 2174, 1837], [376, 1868, 459, 1887], [471, 1859, 592, 1896], [605, 1859, 704, 1888], [715, 1859, 763, 1887], [775, 1868, 831, 1896], [842, 1858, 876, 1900], [890, 1859, 962, 1888], [972, 1869, 993, 1895], [1009, 1861, 1035, 1893], [1054, 1859, 1078, 1887], [1094, 1860, 1148, 1887], [1160, 1859, 1224, 1887], [1236, 1859, 1343, 1896], [1355, 1868, 1446, 1888], [1457, 1859, 1506, 1887], [1516, 1869, 1537, 1895], [1551, 1872, 1579, 1881], [1595, 1869, 1632, 1887], [1646, 1868, 1724, 1887], [376, 1972, 434, 2007], [489, 1972, 640, 2007], [660, 1972, 870, 2016], [884, 1972, 946, 2007], [960, 1972, 1015, 2007], [1018, 1962, 1056, 1985], [1018, 1996, 1032, 2018], [376, 2058, 432, 2085], [443, 2057, 552, 2085], [563, 2057, 726, 2094], [740, 2057, 771, 2093], [786, 2070, 814, 2079], [830, 2057, 860, 2092], [874, 2057, 923, 2085], [935, 2057, 1005, 2085], [1017, 2061, 1047, 2085], [1059, 2057, 1108, 2085], [1119, 2061, 1348, 2094], [1359, 2057, 1406, 2085], [1419, 2057, 1494, 2092], [1507, 2057, 1631, 2085], [1645, 2061, 1675, 2085], [829, 2140, 919, 2175], [941, 2137, 1020, 2178], [1040, 2150, 1077, 2168], [1099, 2133, 1110, 2152], [1098, 2164, 1111, 2183], [1123, 2131, 1202, 2178], [1206, 2137, 1248, 2178], [1256, 2132, 1269, 2151], [1256, 2149, 1350, 2179], [1352, 2131, 1374, 2151], [1380, 2140, 1452, 2176], [1485, 2144, 1529, 2168], [1547, 2137, 1627, 2178], [1645, 2142, 1671, 2174], [1688, 2139, 1718, 2169], [2097, 2140, 2173, 2175], [376, 2224, 515, 2252], [528, 2224, 603, 2259], [616, 2224, 641, 2252], [655, 2224, 780, 2261], [791, 2224, 843, 2252], [855, 2233, 871, 2252], [883, 2224, 1003, 2253], [1015, 2224, 1051, 2252], [1060, 2224, 1109, 2252], [1121, 2224, 1317, 2253], [1329, 2224, 1520, 2261], [1533, 2224, 1727, 2261], [1740, 2224, 1850, 2259], [1863, 2224, 1911, 2252], [1922, 2224, 2022, 2253], [2035, 2233, 2051, 2252], [2063, 2224, 2175, 2261], [376, 2275, 411, 2303], [420, 2275, 585, 2303], [598, 2275, 780, 2312], [795, 2284, 843, 2303], [854, 2275, 965, 2304], [980, 2275, 1053, 2309], [437, 2327, 491, 2354], [504, 2326, 607, 2355], [620, 2335, 637, 2354], [650, 2326, 836, 2363], [849, 2326, 1012, 2363], [1023, 2326, 1119, 2354], [1131, 2335, 1172, 2354], [1185, 2326, 1235, 2354], [1247, 2326, 1357, 2354], [1371, 2326, 1461, 2354], [1464, 2326, 1631, 2355], [1643, 2327, 1775, 2355], [1788, 2326, 1904, 2361], [1918, 2326, 2044, 2354], [2056, 2326, 2092, 2354], [2105, 2326, 2179, 2360], [374, 2377, 447, 2405], [462, 2377, 587, 2405], [601, 2377, 633, 2405], [646, 2377, 769, 2414], [783, 2386, 840, 2405], [852, 2377, 892, 2405], [905, 2377, 988, 2414], [1002, 2377, 1176, 2414], [1191, 2377, 1245, 2405], [1258, 2377, 1306, 2405], [1320, 2377, 1396, 2412], [1411, 2377, 1461, 2405], [1475, 2377, 1608, 2405], [1621, 2377, 1647, 2405], [1661, 2377, 1843, 2414], [1857, 2377, 1959, 2406], [1972, 2386, 2030, 2405], [2042, 2377, 2081, 2405], [2095, 2377, 2179, 2406], [376, 2428, 530, 2465], [542, 2428, 607, 2463], [618, 2428, 781, 2465], [794, 2428, 840, 2463], [854, 2428, 1023, 2465], [1037, 2428, 1238, 2465], [1252, 2428, 1336, 2457], [1348, 2428, 1411, 2456], [1421, 2428, 1469, 2456], [1482, 2437, 1498, 2456], [1509, 2428, 1627, 2456], [1637, 2437, 1730, 2465], [1741, 2428, 1777, 2456], [1788, 2427, 1809, 2457], [1821, 2428, 1934, 2462], [1948, 2437, 2023, 2457], [2035, 2428, 2175, 2465], [376, 2478, 688, 2515], [701, 2478, 777, 2513], [790, 2487, 846, 2506], [856, 2478, 894, 2506], [906, 2478, 1105, 2515], [1122, 2479, 1179, 2506], [1191, 2478, 1238, 2506], [1249, 2478, 1361, 2507], [1371, 2478, 1437, 2506], [1448, 2478, 1663, 2515], [1678, 2487, 1694, 2506], [1704, 2478, 1810, 2515], [1821, 2478, 1975, 2507], [1989, 2478, 2136, 2515], [2148, 2478, 2173, 2506], [375, 2529, 551, 2566], [438, 2580, 575, 2609], [590, 2580, 709, 2617], [722, 2580, 808, 2615], [822, 2580, 961, 2608], [973, 2580, 1009, 2608], [1022, 2581, 1106, 2608], [1118, 2580, 1298, 2608], [1042, 2654, 1158, 2701], [1172, 2667, 1200, 2694], [1214, 2660, 1306, 2701], [1321, 2676, 1349, 2685], [1365, 2663, 1437, 2699], [1040, 2724, 1345, 2765], [1399, 2727, 1507, 2763], [2097, 2694, 2173, 2729], [374, 2810, 474, 2839], [487, 2820, 510, 2838], [523, 2810, 547, 2838], [562, 2819, 578, 2838], [590, 2811, 745, 2847], [757, 2810, 925, 2847], [942, 2810, 1037, 2838], [1050, 2819, 1098, 2838], [1110, 2814, 1170, 2839], [1181, 2810, 1317, 2847], [1329, 2819, 1423, 2838], [1441, 2810, 1534, 2838], [1549, 2807, 1629, 2848], [1647, 2816, 1673, 2840], [1690, 2809, 1711, 2839], [1724, 2819, 1758, 2838], [1773, 2807, 1852, 2848], [1870, 2823, 1898, 2832], [1913, 2809, 1944, 2839], [1259, 2935, 1293, 2964], [438, 242, 467, 270], [482, 239, 562, 280], [584, 248, 610, 272], [631, 241, 661, 276], [678, 242, 749, 270], [763, 242, 813, 270], [827, 243, 912, 270], [927, 242, 1085, 270], [1100, 239, 1226, 280], [1243, 259, 1269, 260], [1285, 239, 1319, 280], [1341, 255, 1369, 264], [1388, 242, 1415, 276], [1432, 242, 1554, 279], [1569, 242, 1631, 270], [1646, 252, 1669, 270], [1688, 255, 1716, 264], [1735, 242, 1752, 271], [1768, 246, 1849, 270], [1861, 242, 1936, 270], [1951, 242, 2010, 270], [2024, 251, 2050, 270], [2064, 251, 2122, 270], [2135, 242, 2174, 270], [376, 292, 520, 320], [533, 292, 742, 329], [755, 292, 796, 329], [811, 292, 933, 329], [946, 292, 996, 320], [1010, 292, 1105, 320], [1119, 296, 1234, 329], [1248, 285, 1349, 320], [1354, 301, 1380, 320], [1397, 305, 1425, 314], [1443, 292, 1515, 328], [1535, 292, 1608, 320], [1622, 301, 1680, 320], [1691, 292, 1730, 320], [1744, 292, 1824, 320], [1838, 292, 1869, 320], [1883, 289, 1967, 330], [1984, 292, 2057, 320], [2071, 292, 2173, 329], [376, 347, 406, 371], [419, 343, 468, 371], [479, 343, 656, 380], [670, 347, 814, 371], [826, 343, 862, 371], [873, 343, 919, 371], [935, 343, 1129, 380], [1143, 343, 1170, 371], [1179, 343, 1229, 371], [1242, 343, 1374, 371], [1387, 347, 1418, 371], [1431, 343, 1507, 371], [1511, 336, 1533, 356], [1537, 352, 1563, 371], [1578, 356, 1606, 365], [1621, 343, 1684, 379], [1697, 343, 1753, 371], [1766, 343, 1797, 371], [1809, 343, 1859, 371], [1871, 343, 1994, 371], [2005, 343, 2041, 371], [2051, 343, 2100, 371], [2111, 343, 2174, 371], [380, 391, 459, 432], [478, 396, 504, 428], [522, 393, 552, 428], [567, 394, 639, 422], [651, 394, 674, 422], [686, 394, 788, 423], [803, 394, 890, 429], [908, 394, 1082, 428], [1096, 394, 1155, 422], [1169, 403, 1240, 422], [1252, 394, 1278, 422], [1291, 394, 1399, 428], [1414, 394, 1473, 422], [1485, 403, 1533, 423], [1546, 394, 1624, 422], [1636, 398, 1667, 422], [1680, 394, 1823, 422], [1835, 394, 1908, 431], [1921, 394, 1971, 422], [1983, 394, 2091, 422], [2103, 403, 2174, 422], [380, 442, 459, 483], [476, 458, 504, 467], [520, 444, 550, 474], [438, 497, 495, 524], [509, 505, 566, 533], [580, 496, 672, 533], [686, 506, 709, 524], [723, 505, 783, 524], [797, 505, 854, 524], [867, 496, 972, 524], [985, 496, 1035, 524], [1049, 496, 1289, 533], [1303, 500, 1407, 525], [1420, 505, 1446, 524], [1461, 505, 1493, 524], [1508, 505, 1555, 530], [1575, 509, 1603, 518], [1624, 489, 1740, 534], [1755, 500, 1783, 527], [1798, 490, 1903, 534], [1910, 496, 1982, 532], [2003, 496, 2177, 530], [376, 546, 554, 583], [566, 546, 613, 574], [625, 555, 651, 574], [662, 546, 787, 574], [800, 550, 831, 574], [843, 546, 892, 574], [903, 546, 1041, 583], [1053, 546, 1089, 574], [1098, 546, 1214, 583], [1226, 546, 1275, 574], [1288, 546, 1386, 574], [1399, 546, 1486, 575], [1498, 546, 1534, 574], [1544, 556, 1577, 574], [438, 597, 487, 625], [499, 597, 627, 626], [641, 597, 790, 634], [803, 597, 827, 625], [841, 601, 871, 625], [884, 597, 969, 626], [985, 591, 1088, 635], [1075, 617, 1088, 636], [1105, 610, 1133, 619], [1149, 591, 1186, 626], [1193, 621, 1198, 625], [1214, 598, 1287, 625], [1301, 597, 1428, 626], [1442, 597, 1466, 625], [1480, 597, 1529, 625], [1539, 597, 1625, 626], [1634, 598, 1778, 634], [1047, 688, 1182, 723], [1186, 680, 1223, 699], [1240, 706, 1266, 707], [1284, 686, 1366, 727], [1375, 680, 1412, 699], [1374, 709, 1387, 728], [1430, 689, 1501, 725], [2097, 689, 2173, 724], [374, 780, 472, 809], [482, 780, 535, 808], [547, 780, 595, 808], [606, 780, 716, 808], [727, 780, 763, 808], [770, 780, 859, 817], [872, 780, 979, 808], [990, 780, 1082, 808], [1092, 780, 1123, 808], [1134, 780, 1181, 808], [1194, 780, 1296, 808], [1307, 780, 1437, 814], [1450, 780, 1548, 809], [1559, 780, 1663, 808], [1676, 780, 1706, 808], [1717, 780, 1774, 808], [1785, 789, 1986, 817], [2001, 780, 2072, 814], [2089, 780, 2178, 814], [376, 831, 425, 859], [437, 831, 503, 859], [514, 831, 538, 859], [552, 835, 583, 859], [595, 831, 658, 859], [670, 831, 719, 859], [730, 835, 797, 859], [808, 831, 844, 859], [853, 831, 902, 859], [914, 831, 1051, 859], [1064, 830, 1106, 865], [1112, 855, 1118, 865], [1131, 831, 1179, 859], [1190, 831, 1290, 860], [1302, 840, 1349, 860], [1360, 840, 1415, 859], [1427, 831, 1582, 860], [1595, 831, 1727, 865], [1741, 831, 1840, 860], [1852, 831, 1883, 859], [1895, 831, 1952, 859], [1966, 840, 2036, 859], [2047, 831, 2130, 859], [2143, 835, 2174, 859], [376, 881, 425, 909], [437, 881, 573, 909], [1128, 927, 1396, 970], [1389, 956, 1419, 971], [2097, 932, 2173, 967], [377, 1007, 469, 1036], [480, 1007, 661, 1035], [674, 1007, 773, 1036], [786, 1007, 848, 1035], [859, 1007, 908, 1035], [920, 1007, 1081, 1036], [1093, 1004, 1124, 1035], [1138, 1016, 1194, 1035], [1205, 1007, 1244, 1035], [1256, 1007, 1418, 1044], [1431, 1016, 1461, 1035], [1034, 1095, 1047, 1123], [1018, 1150, 1049, 1179], [1042, 1177, 1060, 1190], [1082, 1136, 1110, 1145], [1274, 1092, 1338, 1133], [1347, 1089, 1378, 1133], [1365, 1114, 1378, 1133], [1130, 1147, 1181, 1179], [1160, 1177, 1178, 1190], [1188, 1147, 1303, 1189], [1318, 1155, 1346, 1182], [1359, 1148, 1517, 1189], [1530, 1147, 1534, 1151], [2097, 1122, 2173, 1158], [438, 1235, 502, 1263], [515, 1235, 574, 1272], [588, 1235, 658, 1263], [671, 1235, 703, 1263], [716, 1235, 806, 1264], [820, 1235, 846, 1263], [861, 1239, 892, 1263], [906, 1235, 1062, 1263], [1076, 1235, 1126, 1263], [1140, 1235, 1248, 1263], [1263, 1235, 1381, 1264], [1395, 1235, 1427, 1263], [1441, 1234, 1517, 1270], [1531, 1235, 1572, 1272], [1586, 1235, 1676, 1272], [1691, 1235, 1740, 1263], [1755, 1235, 1912, 1272], [1926, 1235, 2174, 1272], [377, 1278, 696, 1316], [674, 1311, 692, 1324], [701, 1285, 755, 1320], [771, 1285, 827, 1313], [839, 1285, 970, 1322], [983, 1294, 999, 1313], [1010, 1289, 1111, 1314], [1122, 1294, 1163, 1321], [1180, 1298, 1208, 1307], [1226, 1278, 1297, 1323], [1276, 1282, 1312, 1324], [1320, 1279, 1356, 1298], [1362, 1294, 1397, 1319], [1412, 1294, 1444, 1313], [1457, 1285, 1517, 1313], [1532, 1279, 1630, 1323], [1617, 1278, 1740, 1324], [1719, 1311, 1737, 1324], [1747, 1278, 1863, 1323], [1876, 1289, 1904, 1316], [1916, 1279, 2085, 1323], [2102, 1285, 2145, 1313], [2158, 1294, 2174, 1313], [375, 1336, 475, 1370], [488, 1336, 538, 1364], [550, 1337, 678, 1365], [690, 1336, 827, 1364], [840, 1336, 916, 1371], [928, 1336, 1071, 1364], [743, 1504, 806, 1522], [825, 1465, 867, 1500], [825, 1521, 856, 1550], [849, 1547, 867, 1560], [919, 1507, 947, 1516], [993, 1504, 1016, 1522], [1030, 1511, 1056, 1512], [1072, 1491, 1172, 1532], [1181, 1485, 1218, 1504], [1180, 1493, 1296, 1533], [1300, 1485, 1337, 1504], [1344, 1491, 1375, 1532], [1538, 1463, 1602, 1504], [1611, 1459, 1641, 1504], [1628, 1485, 1641, 1504], [1394, 1518, 1444, 1550], [1423, 1547, 1441, 1560], [1452, 1518, 1567, 1560], [1582, 1526, 1610, 1553], [1623, 1519, 1781, 1560], [1794, 1518, 1798, 1530], [919, 1624, 947, 1633], [993, 1621, 1056, 1639], [1078, 1580, 1142, 1621], [1151, 1577, 1182, 1621], [1169, 1582, 1259, 1621], [1263, 1588, 1283, 1589], [1289, 1577, 1413, 1621], [1400, 1602, 1413, 1621], [1197, 1634, 1295, 1677], [1282, 1659, 1295, 1678], [1426, 1635, 1430, 1647], [919, 1742, 947, 1751], [993, 1739, 1056, 1757], [1078, 1698, 1142, 1739], [1151, 1695, 1182, 1739], [1169, 1720, 1182, 1739], [1081, 1752, 1179, 1795], [1166, 1778, 1179, 1797], [1206, 1696, 1287, 1796], [1309, 1698, 1373, 1739], [1382, 1698, 1413, 1739], [1350, 1756, 1371, 1786], [1422, 1696, 1467, 1796], [376, 1884, 434, 1912], [446, 1884, 594, 1912], [950, 1957, 1187, 1978], [1209, 1919, 1273, 1960], [1282, 1916, 1313, 1960], [1300, 1941, 1313, 1960], [1212, 1973, 1310, 2017], [1297, 1999, 1310, 2018], [1337, 1918, 1418, 2018], [1440, 1919, 1504, 1960], [1513, 1919, 1544, 1960], [1481, 1978, 1502, 2008], [1553, 1918, 1598, 2018], [2097, 1950, 2173, 1985], [438, 2053, 480, 2081], [494, 2053, 598, 2082], [609, 2053, 656, 2081], [667, 2054, 769, 2087], [786, 2053, 958, 2090], [969, 2053, 1015, 2088], [1029, 2053, 1077, 2081], [1089, 2053, 1264, 2090], [1277, 2057, 1417, 2081], [1429, 2053, 1465, 2081], [1477, 2046, 1592, 2091], [1607, 2057, 1635, 2084], [1648, 2050, 1709, 2091], [1726, 2053, 1827, 2082], [1841, 2062, 1897, 2081], [1910, 2057, 1939, 2081], [1952, 2057, 2090, 2090], [2102, 2053, 2174, 2081], [377, 2104, 431, 2138], [447, 2104, 504, 2132], [517, 2113, 558, 2140], [573, 2104, 603, 2132], [615, 2104, 709, 2132], [720, 2104, 801, 2138], [816, 2113, 850, 2132], [862, 2104, 911, 2132], [923, 2104, 1036, 2133], [1048, 2104, 1184, 2132], [1195, 2113, 1265, 2132], [1278, 2104, 1309, 2132], [1322, 2101, 1406, 2142], [1421, 2104, 1502, 2132], [438, 2155, 502, 2183], [517, 2155, 615, 2184], [629, 2155, 714, 2183], [730, 2164, 779, 2183], [793, 2155, 955, 2192], [970, 2164, 1001, 2183], [1016, 2155, 1215, 2192], [1230, 2155, 1261, 2183], [1275, 2155, 1451, 2192], [1465, 2155, 1493, 2183], [1517, 2155, 1561, 2183], [1577, 2164, 1594, 2183], [1609, 2155, 1752, 2192], [1767, 2155, 1909, 2183], [1923, 2159, 1984, 2184], [1999, 2155, 2173, 2183], [377, 2214, 425, 2233], [437, 2205, 582, 2233], [599, 2205, 734, 2234], [745, 2205, 795, 2233], [807, 2205, 922, 2242], [935, 2214, 993, 2242], [1005, 2205, 1031, 2233], [1045, 2205, 1133, 2233], [1146, 2205, 1276, 2242], [1291, 2205, 1350, 2233], [1362, 2205, 1496, 2234], [1508, 2214, 1534, 2233], [1546, 2205, 1572, 2233], [1585, 2205, 1670, 2233], [1682, 2205, 1804, 2242], [1816, 2209, 1847, 2233], [1859, 2205, 1909, 2233], [1920, 2205, 2084, 2242], [2101, 2205, 2173, 2233], [376, 2256, 460, 2284], [471, 2256, 567, 2284], [578, 2256, 603, 2284], [615, 2256, 716, 2284], [727, 2256, 857, 2284], [869, 2256, 1075, 2284], [1088, 2256, 1233, 2284], [1247, 2256, 1337, 2284], [1348, 2256, 1387, 2284], [1399, 2256, 1652, 2290], [1666, 2256, 1732, 2284], [1745, 2256, 1867, 2293], [1880, 2256, 1929, 2284], [1941, 2256, 2054, 2293], [2066, 2265, 2123, 2293], [2137, 2265, 2174, 2284], [376, 2307, 554, 2344], [566, 2307, 735, 2344], [747, 2316, 884, 2335], [895, 2316, 935, 2335], [947, 2307, 983, 2335], [997, 2316, 1074, 2336], [1091, 2308, 1123, 2335], [1135, 2307, 1266, 2344], [1277, 2316, 1324, 2336], [1335, 2316, 1390, 2335], [1402, 2307, 1553, 2335], [1564, 2307, 1666, 2336], [1681, 2317, 1714, 2341], [1731, 2320, 1759, 2329], [1777, 2301, 1855, 2336], [1871, 2307, 1928, 2335], [1941, 2317, 1998, 2347], [2014, 2320, 2042, 2329], [2060, 2301, 2138, 2336], [2145, 2331, 2150, 2335], [438, 2359, 523, 2387], [536, 2358, 652, 2395], [665, 2358, 840, 2395], [853, 2358, 872, 2386], [884, 2358, 1019, 2395], [1033, 2358, 1106, 2395], [1120, 2358, 1215, 2386], [1228, 2358, 1302, 2386], [1314, 2367, 1368, 2395], [1380, 2358, 1529, 2392], [1544, 2358, 1567, 2386], [1579, 2358, 1605, 2386], [1619, 2358, 1708, 2395], [1723, 2358, 1950, 2395], [1966, 2358, 2025, 2386], [2038, 2358, 2069, 2386], [2082, 2358, 2144, 2386], [2158, 2367, 2175, 2386], [376, 2409, 468, 2437], [482, 2409, 607, 2446], [619, 2409, 745, 2437], [757, 2418, 815, 2437], [826, 2409, 865, 2437], [878, 2409, 1013, 2438], [1032, 2409, 1105, 2437], [1118, 2409, 1144, 2437], [1158, 2409, 1326, 2437], [1337, 2409, 1409, 2437], [1421, 2409, 1462, 2446], [1477, 2418, 1494, 2437], [1505, 2409, 1829, 2446], [1841, 2409, 1967, 2437], [1979, 2409, 2053, 2438], [2067, 2418, 2084, 2437], [2089, 2409, 2175, 2446], [377, 2459, 505, 2496], [518, 2469, 569, 2495], [583, 2459, 688, 2488], [700, 2459, 836, 2487], [848, 2459, 873, 2487], [980, 2519, 1006, 2538], [1008, 2502, 1059, 2524], [1077, 2523, 1105, 2532], [1121, 2510, 1201, 2553], [1209, 2507, 1296, 2551], [1299, 2503, 1309, 2521], [1325, 2527, 1351, 2528], [1365, 2507, 1511, 2548], [1513, 2503, 1523, 2521], [1529, 2507, 1567, 2548], [2097, 2510, 2173, 2545], [438, 2585, 502, 2613], [515, 2585, 724, 2622], [738, 2585, 818, 2613], [831, 2585, 940, 2613], [953, 2585, 1001, 2613], [1014, 2585, 1064, 2613], [1078, 2585, 1209, 2622], [1223, 2595, 1263, 2621], [1279, 2585, 1304, 2613], [1318, 2585, 1409, 2622], [1421, 2585, 1462, 2622], [1476, 2585, 1525, 2613], [1539, 2585, 1657, 2614], [1670, 2585, 1706, 2613], [1716, 2585, 1766, 2613], [1779, 2585, 1935, 2622], [1948, 2589, 2089, 2613], [2102, 2585, 2127, 2613], [2140, 2585, 2176, 2613], [376, 2636, 425, 2664], [440, 2636, 578, 2673], [593, 2633, 706, 2674], [728, 2636, 787, 2670], [804, 2636, 866, 2670], [891, 2636, 982, 2665], [998, 2633, 1077, 2674], [1095, 2636, 1121, 2664], [1137, 2645, 1154, 2664], [1168, 2645, 1285, 2665], [1300, 2636, 1465, 2673], [1483, 2636, 1508, 2664], [1523, 2636, 1549, 2664], [1565, 2636, 1677, 2673], [1692, 2636, 1742, 2664], [1757, 2636, 1868, 2673], [1882, 2636, 2061, 2673], [2076, 2636, 2112, 2664], [2124, 2636, 2174, 2664], [376, 2687, 506, 2715], [519, 2680, 621, 2715], [627, 2711, 632, 2715], [648, 2687, 760, 2724], [773, 2691, 803, 2715], [815, 2687, 853, 2715], [866, 2687, 980, 2724], [993, 2691, 1145, 2721], [1159, 2687, 1209, 2715], [1221, 2687, 1413, 2724], [1426, 2687, 1462, 2715], [1471, 2687, 1520, 2715], [1532, 2687, 1663, 2715], [1674, 2687, 1751, 2716], [1763, 2687, 1964, 2715], [1976, 2687, 2177, 2724], [376, 2747, 541, 2785], [559, 2748, 620, 2776], [633, 2748, 754, 2776], [769, 2728, 838, 2803], [793, 2771, 852, 2793], [861, 2728, 1522, 2803], [1539, 2761, 1567, 2770], [1583, 2748, 1600, 2776], [1614, 2748, 1734, 2776], [1750, 2728, 1880, 2803], [1818, 2777, 1836, 2790], [1889, 2728, 1920, 2803], [1933, 2748, 2033, 2777], [2045, 2748, 2130, 2776], [2143, 2752, 2174, 2776], [374, 2810, 393, 2838], [406, 2819, 438, 2838], [451, 2820, 474, 2838], [488, 2817, 525, 2838], [541, 2819, 590, 2844], [604, 2810, 671, 2838], [684, 2810, 734, 2838], [746, 2810, 854, 2838], [867, 2820, 906, 2845], [923, 2823, 951, 2832], [969, 2807, 1027, 2848], [1039, 2810, 1065, 2838], [1078, 2819, 1095, 2838], [1106, 2810, 1189, 2847], [1202, 2810, 1260, 2838], [1272, 2810, 1368, 2847], [1381, 2810, 1632, 2847], [1648, 2810, 1847, 2838], [1860, 2810, 1999, 2847], [2011, 2810, 2061, 2838], [2073, 2810, 2174, 2839], [1259, 2935, 1295, 2963], [373, 239, 557, 277], [569, 239, 588, 268], [600, 240, 688, 269], [699, 240, 793, 268], [805, 240, 915, 268], [926, 240, 1089, 277], [416, 296, 575, 327], [592, 306, 615, 324], [631, 309, 659, 318], [674, 296, 701, 330], [715, 305, 762, 330], [779, 309, 807, 318], [823, 296, 850, 325], [417, 346, 510, 376], [527, 339, 529, 366], [527, 341, 643, 390], [630, 346, 721, 385], [728, 339, 730, 366], [728, 344, 1198, 390], [479, 398, 630, 435], [642, 398, 796, 435], [808, 398, 947, 435], [964, 398, 1040, 426], [1044, 391, 1066, 411], [1080, 402, 1108, 429], [1122, 398, 1169, 426], [1184, 411, 1212, 420], [1228, 391, 1285, 427], [1264, 423, 1282, 436], [1291, 398, 1356, 432], [479, 448, 591, 477], [603, 457, 650, 483], [664, 448, 705, 485], [718, 448, 837, 485], [850, 441, 908, 477], [887, 448, 1019, 487], [1036, 461, 1064, 470], [1080, 448, 1152, 484], [479, 499, 591, 528], [604, 508, 644, 535], [658, 499, 699, 536], [712, 499, 832, 536], [845, 492, 902, 528], [881, 508, 948, 537], [965, 512, 993, 521], [1008, 508, 1067, 533], [480, 571, 625, 589], [648, 546, 700, 575], [709, 546, 716, 575], [723, 542, 733, 556], [723, 563, 733, 577], [650, 583, 697, 612], [706, 581, 730, 612], [720, 600, 730, 614], [756, 541, 833, 616], [855, 547, 940, 576], [889, 584, 905, 604], [951, 541, 982, 616], [417, 621, 480, 650], [492, 620, 585, 650], [417, 674, 529, 701], [541, 681, 589, 706], [373, 785, 557, 823], [569, 786, 588, 814], [600, 786, 652, 815], [664, 786, 824, 823], [835, 786, 883, 814], [894, 787, 998, 821], [1012, 786, 1175, 823], [416, 849, 562, 880], [575, 843, 617, 877], [635, 855, 656, 879], [673, 842, 741, 883], [755, 851, 768, 877], [782, 849, 853, 878], [417, 898, 510, 928], [523, 899, 560, 934], [574, 899, 755, 936], [768, 899, 810, 928], [479, 950, 624, 979], [634, 950, 753, 987], [770, 945, 805, 978], [822, 963, 850, 972], [865, 945, 903, 978], [919, 967, 945, 968], [966, 943, 977, 962], [964, 945, 1127, 993], [479, 1001, 657, 1038], [674, 995, 754, 1029], [772, 1014, 800, 1023], [815, 998, 924, 1039], [940, 1018, 966, 1019], [980, 996, 1131, 1039], [1144, 998, 1174, 1039], [1192, 1016, 1196, 1021], [1210, 996, 1256, 1029], [479, 1052, 652, 1083], [417, 1103, 480, 1132], [492, 1102, 585, 1132], [417, 1155, 529, 1182], [541, 1148, 591, 1181], [375, 1297, 539, 1334], [551, 1297, 575, 1325], [588, 1297, 745, 1334], [757, 1297, 788, 1325], [800, 1297, 970, 1334], [982, 1296, 1008, 1326], [1026, 1297, 1209, 1334], [1222, 1297, 1278, 1325], [1292, 1297, 1363, 1326], [1375, 1297, 1424, 1325], [1436, 1297, 1497, 1325], [1508, 1297, 1569, 1325], [1580, 1297, 1629, 1325], [1640, 1297, 1807, 1334], [1820, 1297, 1948, 1339], [1963, 1297, 1988, 1325], [2002, 1297, 2065, 1325], [2078, 1297, 2174, 1326], [376, 1352, 405, 1376], [417, 1352, 564, 1385], [578, 1348, 625, 1376], [637, 1348, 688, 1377], [700, 1348, 834, 1376], [846, 1348, 922, 1383], [935, 1352, 1013, 1376], [1026, 1352, 1077, 1376], [1088, 1352, 1118, 1376], [1129, 1348, 1166, 1376], [1179, 1357, 1248, 1385], [1261, 1348, 1416, 1377], [1433, 1348, 1551, 1382], [1565, 1348, 1735, 1376], [1748, 1348, 1769, 1376], [1781, 1357, 1836, 1376], [1847, 1357, 1921, 1377], [1933, 1348, 2115, 1385], [2126, 1348, 2173, 1376], [376, 1407, 459, 1426], [472, 1398, 685, 1435], [697, 1398, 785, 1427], [797, 1398, 929, 1432], [942, 1398, 1056, 1435], [1068, 1398, 1140, 1435], [1152, 1398, 1199, 1426], [1211, 1407, 1227, 1426], [1239, 1407, 1310, 1435], [1322, 1398, 1438, 1426], [1449, 1407, 1540, 1435], [1552, 1398, 1588, 1426], [1598, 1397, 1619, 1427], [1632, 1398, 1743, 1427], [1759, 1398, 1930, 1432], [1943, 1398, 1974, 1426], [1985, 1398, 2115, 1435], [2127, 1407, 2174, 1427], [375, 1449, 570, 1477], [583, 1458, 599, 1477], [610, 1449, 717, 1486], [729, 1449, 765, 1477], [774, 1449, 826, 1478], [839, 1449, 896, 1477], [908, 1449, 1005, 1483], [1020, 1458, 1050, 1477], [1065, 1449, 1226, 1486], [1237, 1449, 1277, 1486], [1290, 1458, 1344, 1477], [1355, 1449, 1554, 1486], [1569, 1449, 1633, 1484], [1647, 1448, 1767, 1486], [375, 1563, 436, 1598], [489, 1563, 643, 1607], [663, 1563, 873, 1607], [887, 1563, 948, 1598], [963, 1563, 1018, 1598], [1022, 1554, 1065, 1577], [1018, 1595, 1036, 1616], [375, 1649, 432, 1676], [443, 1648, 551, 1688], [565, 1648, 728, 1685], [741, 1648, 801, 1683], [815, 1648, 828, 1676], [847, 1654, 873, 1678], [887, 1658, 908, 1684], [923, 1654, 949, 1678], [966, 1648, 1017, 1683], [1031, 1648, 1080, 1676], [1092, 1648, 1162, 1676], [1172, 1648, 1311, 1685], [1321, 1648, 1464, 1676], [841, 1740, 908, 1768], [864, 1780, 885, 1793], [929, 1737, 1008, 1778], [1027, 1750, 1065, 1768], [1087, 1733, 1098, 1752], [1086, 1764, 1099, 1783], [1110, 1731, 1189, 1778], [1193, 1737, 1236, 1778], [1244, 1732, 1257, 1751], [1244, 1749, 1338, 1779], [1340, 1731, 1362, 1751], [1367, 1740, 1440, 1776], [1473, 1744, 1517, 1768], [1535, 1737, 1614, 1781], [1632, 1739, 1705, 1776], [2097, 1740, 2173, 1775], [374, 1846, 476, 1875], [489, 1856, 506, 1882], [522, 1859, 550, 1868], [568, 1843, 639, 1884], [655, 1863, 681, 1864], [698, 1843, 781, 1884], [798, 1846, 941, 1874], [954, 1846, 1029, 1881], [1043, 1846, 1069, 1874], [1082, 1850, 1135, 1874], [1146, 1846, 1340, 1883], [1354, 1846, 1513, 1874], [1526, 1850, 1557, 1874], [1570, 1847, 1788, 1883], [1802, 1846, 1998, 1883], [2014, 1855, 2045, 1874], [2059, 1846, 2175, 1874], [376, 1898, 428, 1925], [441, 1897, 619, 1934], [632, 1897, 679, 1932], [693, 1906, 748, 1925], [759, 1897, 936, 1934], [949, 1897, 1090, 1925], [1104, 1896, 1199, 1934], [1213, 1906, 1270, 1925], [1281, 1897, 1320, 1925], [1333, 1897, 1456, 1934], [1467, 1897, 1570, 1934], [1587, 1898, 1612, 1925], [1623, 1897, 1649, 1925], [1661, 1897, 1801, 1934], [1814, 1897, 1974, 1925], [1986, 1901, 2017, 1925], [2030, 1897, 2179, 1934], [375, 1948, 544, 1985], [557, 1948, 645, 1983], [658, 1948, 706, 1976], [718, 1948, 818, 1977], [831, 1948, 880, 1976], [893, 1957, 977, 1976], [988, 1948, 1099, 1985], [1110, 1948, 1175, 1976], [1188, 1957, 1219, 1976], [1232, 1948, 1263, 1976], [1276, 1948, 1352, 1983], [1366, 1948, 1491, 1985], [1504, 1948, 1557, 1976], [1567, 1948, 1671, 1976], [1683, 1948, 1732, 1976], [1745, 1958, 1762, 1984], [1777, 1961, 1805, 1970], [1821, 1948, 1838, 1976], [1851, 1957, 1930, 1982], [1944, 1948, 1993, 1976], [2004, 1948, 2174, 1985], [377, 2003, 442, 2036], [454, 1999, 526, 2027], [538, 1999, 564, 2027], [578, 1999, 671, 2027], [683, 2008, 768, 2027], [781, 1999, 933, 2028], [951, 1999, 1043, 2033], [1057, 2003, 1088, 2027], [1101, 1999, 1310, 2036], [1321, 1999, 1378, 2033], [1392, 2008, 1440, 2028], [1453, 2008, 1524, 2036], [1537, 1999, 1623, 2028], [1635, 1999, 1685, 2027], [1697, 1999, 1947, 2036], [1960, 1999, 2174, 2027], [375, 2050, 463, 2085], [478, 2050, 612, 2078], [634, 2050, 679, 2078], [693, 2050, 850, 2087], [867, 2050, 917, 2078], [931, 2050, 1045, 2079], [1058, 2050, 1127, 2078], [1139, 2050, 1328, 2087], [1343, 2050, 1496, 2087], [1510, 2050, 1536, 2078], [1551, 2050, 1682, 2087], [1698, 2059, 1715, 2078], [1727, 2050, 1837, 2087], [1850, 2050, 1886, 2078], [1898, 2050, 1950, 2079], [1965, 2050, 2024, 2078], [2038, 2051, 2104, 2078], [2119, 2051, 2174, 2078], [377, 2100, 556, 2128], [567, 2100, 640, 2128], [652, 2100, 774, 2128], [786, 2100, 892, 2129], [376, 2211, 455, 2241], [500, 2211, 649, 2241], [660, 2211, 840, 2249], [852, 2214, 929, 2241], [941, 2212, 995, 2241], [1006, 2211, 1038, 2252], [1043, 2212, 1121, 2241], [374, 2291, 437, 2319], [448, 2291, 586, 2328], [598, 2291, 634, 2319], [642, 2291, 809, 2328], [822, 2295, 894, 2319], [906, 2291, 955, 2319], [966, 2290, 998, 2331], [1003, 2300, 1103, 2319], [1113, 2291, 1175, 2319], [1187, 2291, 1211, 2319], [865, 2383, 959, 2417], [1014, 2380, 1097, 2421], [1117, 2393, 1154, 2411], [1176, 2376, 1187, 2395], [1175, 2380, 1345, 2425], [1353, 2375, 1366, 2394], [1353, 2402, 1377, 2421], [1431, 2387, 1475, 2411], [1504, 2380, 1591, 2423], [1609, 2385, 1635, 2417], [1651, 2382, 1682, 2412], [2097, 2383, 2173, 2418], [376, 2476, 432, 2503], [443, 2475, 500, 2503], [512, 2475, 659, 2512], [672, 2475, 695, 2503], [706, 2479, 786, 2503], [799, 2479, 852, 2503], [863, 2479, 893, 2503], [904, 2475, 943, 2503], [955, 2484, 1039, 2503], [1051, 2475, 1230, 2504], [1241, 2479, 1271, 2503], [1285, 2475, 1405, 2503], [1418, 2475, 1454, 2503], [1468, 2475, 1598, 2503], [1610, 2475, 1680, 2503], [922, 2568, 1016, 2602], [1071, 2567, 1090, 2596], [1093, 2564, 1104, 2577], [1113, 2565, 1173, 2606], [1193, 2578, 1230, 2596], [1252, 2560, 1263, 2579], [1251, 2565, 1421, 2610], [1429, 2559, 1442, 2578], [1429, 2587, 1442, 2606], [1457, 2572, 1485, 2599], [1498, 2565, 1625, 2608], [2076, 2568, 2173, 2603], [374, 2660, 476, 2689], [493, 2660, 518, 2688], [537, 2660, 668, 2697], [685, 2660, 812, 2697], [829, 2660, 882, 2688], [898, 2669, 1055, 2706], [1065, 2657, 1129, 2698], [1160, 2660, 1224, 2688], [1241, 2660, 1369, 2697], [1387, 2660, 1529, 2694], [1550, 2669, 1603, 2697], [1620, 2659, 1669, 2688], [1676, 2684, 1682, 2694], [1702, 2664, 1733, 2688], [1751, 2660, 1827, 2695], [1845, 2669, 1902, 2688], [1918, 2660, 1957, 2688], [1974, 2660, 2118, 2688], [2134, 2660, 2175, 2697], [377, 2711, 496, 2748], [509, 2711, 615, 2746], [628, 2711, 669, 2748], [680, 2711, 769, 2748], [781, 2711, 831, 2739], [842, 2711, 1228, 2748], [1241, 2711, 1326, 2746], [1339, 2711, 1439, 2740], [1451, 2711, 1547, 2748], [1063, 2812, 1095, 2831], [1101, 2800, 1112, 2813], [1130, 2816, 1158, 2825], [1173, 2812, 1199, 2831], [1213, 2820, 1239, 2821], [1252, 2812, 1409, 2849], [1419, 2800, 1484, 2841], [1259, 2934, 1293, 2964], [376, 242, 545, 279], [559, 242, 634, 277], [648, 242, 673, 270], [686, 242, 850, 279], [861, 251, 952, 279], [964, 242, 1052, 270], [1065, 242, 1170, 271], [1182, 242, 1238, 276], [1253, 251, 1287, 270], [1299, 242, 1322, 270], [1333, 242, 1358, 270], [1371, 242, 1483, 270], [1495, 246, 1526, 270], [1539, 242, 1624, 271], [1636, 242, 1659, 270], [1669, 242, 1786, 279], [1799, 242, 1858, 270], [1870, 242, 2045, 279], [2062, 243, 2103, 270], [2115, 242, 2173, 270], [376, 292, 443, 326], [457, 301, 504, 321], [516, 292, 581, 320], [592, 296, 657, 320], [671, 292, 767, 327], [780, 292, 844, 320], [857, 301, 874, 320], [885, 292, 1108, 320], [1119, 292, 1258, 329], [1271, 292, 1329, 320], [1341, 292, 1411, 320], [1423, 292, 1525, 321], [1538, 301, 1555, 320], [1565, 292, 1865, 329], [1878, 292, 2002, 320], [2014, 292, 2174, 329], [376, 352, 430, 371], [442, 343, 592, 380], [603, 343, 761, 380], [773, 343, 804, 371], [816, 343, 978, 380], [990, 344, 1022, 371], [438, 394, 572, 422], [587, 394, 747, 428], [765, 394, 893, 423], [907, 394, 971, 422], [987, 394, 1023, 422], [1035, 394, 1202, 431], [1218, 394, 1281, 422], [1295, 403, 1321, 422], [1342, 396, 1368, 428], [1390, 394, 1417, 428], [1435, 403, 1470, 422], [1485, 394, 1548, 422], [1562, 403, 1594, 422], [1616, 396, 1642, 428], [1665, 394, 1682, 423], [1699, 394, 1764, 422], [1778, 394, 1868, 422], [1885, 394, 1948, 429], [1964, 394, 2048, 431], [2063, 403, 2121, 422], [2135, 394, 2174, 422], [375, 445, 507, 473], [521, 445, 595, 473], [607, 445, 727, 482], [739, 445, 795, 473], [808, 445, 968, 482], [984, 445, 1074, 479], [1088, 445, 1204, 473], [1216, 445, 1252, 473], [1262, 445, 1368, 480], [1382, 454, 1429, 474], [1442, 445, 1527, 474], [753, 539, 847, 573], [902, 538, 921, 567], [925, 536, 936, 549], [945, 536, 1005, 577], [1024, 549, 1062, 567], [1084, 532, 1095, 551], [1083, 536, 1252, 581], [1260, 531, 1273, 550], [1260, 538, 1351, 577], [1373, 528, 1429, 586], [1432, 573, 1441, 592], [1453, 549, 1481, 567], [1482, 534, 1498, 553], [1482, 560, 1491, 579], [1504, 520, 1570, 581], [1617, 539, 1793, 573], [2076, 539, 2173, 574], [374, 631, 437, 659], [449, 631, 585, 668], [596, 631, 631, 659], [642, 630, 675, 659], [692, 640, 761, 668], [772, 631, 811, 659], [823, 631, 994, 668], [1006, 631, 1122, 660], [1135, 640, 1166, 659], [959, 713, 1188, 754], [1203, 713, 1416, 754], [1425, 708, 1480, 733], [1422, 725, 1517, 761], [1519, 708, 1576, 733], [1585, 740, 1589, 752], [2076, 716, 2173, 751], [374, 801, 474, 830], [486, 795, 578, 829], [594, 801, 717, 829], [731, 801, 937, 830], [949, 801, 1193, 838], [1205, 801, 1241, 829], [1250, 810, 1293, 829], [1309, 801, 1499, 838], [1511, 801, 1691, 829], [1703, 801, 1799, 838], [523, 878, 553, 905], [483, 914, 592, 943], [604, 890, 809, 933], [837, 890, 1049, 931], [1097, 891, 1129, 908], [1082, 913, 1150, 943], [1160, 877, 1235, 935], [1244, 890, 1310, 931], [1319, 885, 1356, 904], [1316, 918, 1332, 937], [1363, 885, 1575, 935], [1624, 891, 1656, 908], [1608, 913, 1676, 943], [1686, 877, 1761, 935], [1809, 887, 1843, 908], [1794, 913, 1862, 943], [1872, 877, 1946, 935], [1956, 890, 2023, 931], [2031, 885, 2068, 904], [2028, 918, 2044, 937], [724, 968, 955, 1011], [958, 960, 1016, 985], [958, 991, 967, 1010], [1021, 963, 1152, 1013], [1166, 973, 1181, 975], [1156, 979, 1215, 1011], [374, 1056, 476, 1085], [491, 1066, 507, 1084], [528, 1066, 565, 1084], [586, 1053, 641, 1094], [659, 1073, 685, 1074], [699, 1050, 854, 1094], [814, 1054, 906, 1100], [884, 1065, 916, 1084], [939, 1066, 976, 1084], [996, 1053, 1156, 1096], [1182, 1058, 1197, 1060], [1173, 1065, 1205, 1084], [1228, 1066, 1266, 1084], [1288, 1050, 1526, 1096], [1533, 1080, 1539, 1090], [1557, 1056, 1616, 1084], [1631, 1054, 1673, 1096], [1691, 1056, 1717, 1084], [1732, 1056, 1782, 1084], [1797, 1056, 1888, 1084], [1904, 1056, 1993, 1084], [2018, 1057, 2052, 1084], [2066, 1056, 2174, 1084], [376, 1106, 519, 1140], [532, 1106, 589, 1134], [603, 1106, 759, 1134], [772, 1106, 914, 1143], [925, 1106, 992, 1143], [1004, 1106, 1108, 1134], [1125, 1110, 1268, 1134], [1278, 1106, 1422, 1134], [1436, 1110, 1577, 1143], [940, 1188, 1332, 1229], [1335, 1183, 1393, 1208], [1398, 1184, 1517, 1234], [1533, 1206, 1537, 1211], [1560, 1194, 1575, 1196], [1551, 1200, 1583, 1219], [1586, 1182, 1608, 1202], [2076, 1191, 2173, 1226], [438, 1278, 477, 1305], [490, 1277, 614, 1314], [628, 1286, 664, 1305], [675, 1277, 806, 1305], [817, 1278, 944, 1306], [955, 1277, 1076, 1305], [1087, 1277, 1109, 1305], [1120, 1277, 1144, 1305], [1157, 1277, 1327, 1314], [1340, 1281, 1369, 1305], [1381, 1277, 1492, 1314], [1504, 1277, 1560, 1305], [1573, 1281, 1721, 1305], [1738, 1278, 1761, 1305], [1773, 1277, 1797, 1305], [1810, 1281, 1860, 1305], [1871, 1277, 1943, 1305], [1954, 1281, 1983, 1305], [1997, 1286, 2046, 1305], [2058, 1277, 2117, 1305], [2129, 1277, 2176, 1305], [377, 1336, 393, 1355], [405, 1331, 450, 1355], [461, 1327, 497, 1355], [506, 1327, 678, 1356], [690, 1327, 835, 1356], [849, 1320, 871, 1355], [881, 1327, 930, 1355], [941, 1327, 1072, 1355], [1084, 1327, 1213, 1355], [1225, 1327, 1307, 1355], [1321, 1327, 1370, 1355], [1382, 1327, 1461, 1355], [930, 1410, 1196, 1451], [1220, 1414, 1309, 1441], [1310, 1411, 1342, 1441], [1344, 1402, 1402, 1427], [1349, 1433, 1361, 1434], [1345, 1437, 1359, 1457], [1408, 1405, 1527, 1455], [1530, 1426, 1546, 1450], [1558, 1415, 1573, 1417], [1548, 1422, 1580, 1441], [1584, 1403, 1606, 1423], [1587, 1430, 1599, 1431], [1584, 1434, 1617, 1454], [2076, 1413, 2173, 1448], [373, 1504, 873, 1543], [898, 1507, 986, 1534], [987, 1504, 1019, 1534], [1022, 1495, 1080, 1520], [1027, 1526, 1039, 1527], [1023, 1530, 1037, 1550], [1086, 1498, 1111, 1548], [1124, 1506, 1174, 1534], [1186, 1506, 1458, 1535], [1470, 1506, 1582, 1534], [1594, 1506, 1690, 1543], [771, 1619, 853, 1656], [815, 1648, 827, 1649], [811, 1652, 825, 1672], [861, 1625, 1136, 1666], [1140, 1641, 1155, 1665], [1167, 1630, 1182, 1632], [1158, 1637, 1190, 1656], [1193, 1618, 1215, 1638], [1197, 1645, 1209, 1646], [1193, 1649, 1207, 1669], [1220, 1612, 1277, 1670], [1296, 1626, 1370, 1656], [1375, 1619, 1412, 1638], [1429, 1645, 1455, 1646], [1474, 1590, 1569, 1624], [1570, 1598, 1602, 1624], [1606, 1609, 1622, 1633], [1633, 1598, 1648, 1600], [1624, 1589, 1682, 1624], [1663, 1615, 1675, 1616], [1659, 1619, 1673, 1639], [1687, 1590, 1759, 1624], [1480, 1651, 1624, 1688], [1606, 1677, 1618, 1678], [1602, 1682, 1616, 1702], [1629, 1654, 1702, 1685], [1717, 1660, 1732, 1662], [1707, 1666, 1759, 1695], [1773, 1652, 1777, 1656], [2076, 1627, 2173, 1663], [375, 1740, 589, 1774], [603, 1740, 686, 1768], [698, 1740, 728, 1768], [740, 1741, 791, 1768], [803, 1740, 852, 1768], [864, 1740, 979, 1769], [991, 1740, 1027, 1768], [1036, 1740, 1085, 1768], [1096, 1740, 1226, 1768], [1238, 1740, 1367, 1768], [1380, 1740, 1489, 1777], [1503, 1744, 1637, 1777], [1651, 1749, 1690, 1768], [1702, 1740, 1751, 1768], [1762, 1740, 1892, 1768], [1904, 1740, 2046, 1777], [2060, 1749, 2107, 1769], [2118, 1749, 2174, 1768], [375, 1800, 531, 1828], [543, 1791, 592, 1819], [604, 1795, 693, 1819], [706, 1791, 737, 1819], [749, 1791, 806, 1819], [819, 1791, 974, 1828], [986, 1791, 1034, 1819], [1045, 1791, 1157, 1819], [1169, 1791, 1339, 1828], [1353, 1791, 1414, 1819], [1425, 1791, 1460, 1825], [689, 1911, 810, 1952], [817, 1906, 854, 1925], [861, 1911, 1001, 1952], [1019, 1927, 1047, 1936], [1062, 1923, 1083, 1942], [1097, 1911, 1321, 1952], [1359, 1886, 1466, 1914], [1474, 1897, 1486, 1898], [1470, 1901, 1484, 1921], [1489, 1876, 1589, 1926], [1602, 1886, 1634, 1911], [1641, 1897, 1653, 1898], [1637, 1901, 1651, 1921], [1656, 1866, 1696, 1926], [1702, 1880, 1842, 1921], [1431, 1942, 1738, 1983], [1741, 1937, 1859, 1987], [2076, 1914, 2173, 1949], [374, 2042, 563, 2071], [600, 2043, 688, 2070], [689, 2040, 721, 2070], [724, 2031, 782, 2056], [729, 2062, 741, 2063], [725, 2066, 739, 2086], [788, 2026, 845, 2084], [851, 2066, 857, 2076], [872, 2042, 929, 2070], [942, 2046, 970, 2073], [984, 2042, 1108, 2070], [1121, 2042, 1380, 2079], [1391, 2042, 1526, 2079], [438, 2092, 501, 2120], [512, 2092, 644, 2121], [654, 2092, 740, 2129], [750, 2092, 786, 2120], [795, 2092, 845, 2120], [857, 2092, 953, 2121], [965, 2092, 1144, 2121], [1157, 2092, 1182, 2120], [1196, 2092, 1257, 2120], [1268, 2092, 1317, 2120], [1329, 2093, 1458, 2121], [1470, 2092, 1625, 2126], [1639, 2092, 1697, 2120], [1709, 2092, 1775, 2120], [1788, 2092, 1838, 2120], [1849, 2092, 1962, 2121], [1974, 2093, 2025, 2120], [2037, 2092, 2174, 2120], [375, 2152, 431, 2171], [442, 2143, 481, 2171], [493, 2143, 655, 2180], [667, 2143, 698, 2171], [711, 2140, 795, 2181], [810, 2143, 891, 2177], [905, 2143, 1004, 2172], [1016, 2143, 1122, 2171], [1135, 2143, 1166, 2171], [1179, 2152, 1195, 2171], [1206, 2143, 1311, 2180], [1323, 2143, 1464, 2172], [1477, 2143, 1582, 2172], [375, 2252, 457, 2282], [500, 2252, 726, 2282], [738, 2252, 912, 2290], [924, 2252, 974, 2282], [986, 2253, 1098, 2294], [1112, 2252, 1285, 2290], [374, 2332, 436, 2360], [447, 2332, 653, 2360], [667, 2332, 751, 2367], [765, 2332, 922, 2369], [934, 2332, 997, 2367], [1009, 2341, 1055, 2369], [1060, 2356, 1075, 2366], [1091, 2332, 1153, 2366], [1168, 2332, 1214, 2360], [1226, 2341, 1242, 2360], [1253, 2336, 1352, 2360], [1364, 2332, 1534, 2367], [1548, 2332, 1611, 2360], [1622, 2332, 1732, 2361], [1745, 2341, 1775, 2360], [1788, 2332, 1836, 2360], [1848, 2332, 2029, 2360], [2042, 2332, 2174, 2369], [376, 2383, 497, 2411], [512, 2382, 574, 2417], [590, 2383, 688, 2412], [701, 2383, 920, 2411], [932, 2383, 1139, 2420], [1150, 2383, 1301, 2420], [1314, 2392, 1385, 2412], [1396, 2387, 1534, 2420], [1546, 2392, 1661, 2412], [1674, 2387, 1741, 2417], [1756, 2383, 1813, 2411], [1825, 2392, 1880, 2411], [1891, 2383, 1929, 2411], [1942, 2383, 2022, 2420], [2034, 2383, 2173, 2412], [376, 2434, 402, 2462], [411, 2443, 458, 2463], [469, 2434, 546, 2463], [558, 2443, 660, 2462], [674, 2438, 704, 2462], [717, 2443, 733, 2462], [746, 2434, 919, 2462], [931, 2438, 961, 2462], [975, 2434, 1059, 2463], [1071, 2434, 1165, 2462], [1175, 2434, 1327, 2471], [1341, 2443, 1412, 2463], [1424, 2434, 1473, 2462], [1485, 2434, 1648, 2462], [1660, 2438, 1712, 2462], [438, 2485, 499, 2513], [512, 2485, 630, 2522], [642, 2486, 702, 2513], [714, 2485, 849, 2513], [861, 2485, 886, 2513], [899, 2485, 1061, 2513], [1073, 2485, 1103, 2513], [1115, 2485, 1285, 2522], [1296, 2485, 1323, 2514], [1339, 2486, 1400, 2513], [1412, 2485, 1503, 2513], [1518, 2494, 1554, 2513], [1567, 2485, 1714, 2514], [1728, 2489, 1853, 2522], [1866, 2485, 1913, 2513], [1924, 2485, 2031, 2525], [2045, 2485, 2173, 2513], [375, 2535, 446, 2563], [457, 2535, 504, 2563], [515, 2535, 794, 2563], [806, 2544, 836, 2563], [847, 2535, 915, 2564], [927, 2544, 957, 2563], [970, 2535, 1111, 2572], [1123, 2544, 1178, 2563], [1187, 2535, 1224, 2563], [1235, 2535, 1395, 2572], [1405, 2535, 1503, 2572], [1521, 2535, 1716, 2572], [1728, 2539, 1758, 2563], [1769, 2535, 1831, 2563], [1841, 2535, 1889, 2563], [1900, 2535, 2021, 2563], [2031, 2535, 2174, 2563], [374, 2595, 421, 2615], [433, 2586, 509, 2614], [522, 2590, 552, 2614], [565, 2586, 650, 2615], [870, 2637, 953, 2671], [1007, 2646, 1025, 2665], [1029, 2628, 1051, 2648], [1082, 2628, 1183, 2665], [1187, 2637, 1330, 2673], [1334, 2629, 1366, 2679], [1420, 2641, 1464, 2665], [1513, 2634, 1586, 2677], [1604, 2636, 1677, 2671], [2076, 2637, 2173, 2672], [374, 2708, 447, 2736], [459, 2708, 600, 2745], [612, 2717, 670, 2736], [680, 2708, 719, 2736], [733, 2708, 841, 2737], [851, 2708, 893, 2745], [905, 2708, 1070, 2745], [1083, 2708, 1146, 2736], [1157, 2717, 1298, 2752], [1304, 2724, 1341, 2749], [1355, 2701, 1398, 2736], [1403, 2717, 1423, 2736], [1437, 2708, 1463, 2736], [1477, 2708, 1609, 2736], [1620, 2708, 1661, 2745], [1675, 2717, 1762, 2736], [1774, 2712, 1878, 2737], [1891, 2717, 1909, 2736], [1922, 2708, 2130, 2745], [2143, 2712, 2173, 2736], [377, 2768, 407, 2793], [424, 2759, 460, 2787], [472, 2759, 522, 2787], [536, 2759, 618, 2787], [635, 2756, 690, 2797], [712, 2769, 740, 2787], [763, 2753, 863, 2797], [870, 2783, 875, 2787], [899, 2759, 1072, 2793], [1090, 2768, 1108, 2787], [1113, 2758, 1124, 2771], [1143, 2759, 1175, 2787], [1189, 2759, 1286, 2794], [1301, 2759, 1327, 2787], [1342, 2759, 1440, 2787], [1453, 2759, 1494, 2796], [1509, 2759, 1612, 2796], [1628, 2768, 1648, 2787], [1668, 2772, 1696, 2781], [1716, 2752, 1818, 2787], [1822, 2768, 1848, 2787], [1863, 2776, 1889, 2777], [1905, 2759, 1978, 2795], [1994, 2759, 2173, 2796], [377, 2819, 395, 2838], [410, 2823, 438, 2832], [455, 2827, 481, 2828], [492, 2807, 702, 2848], [707, 2798, 764, 2823], [781, 2810, 838, 2838], [850, 2810, 920, 2838], [931, 2810, 1080, 2847], [1093, 2819, 1111, 2838], [1125, 2814, 1155, 2838], [1168, 2814, 1248, 2838], [1263, 2807, 1336, 2850], [1353, 2823, 1381, 2832], [1397, 2809, 1427, 2839], [1259, 2935, 1294, 2964], [373, 239, 557, 277], [569, 239, 588, 269], [600, 240, 810, 268], [822, 240, 909, 275], [417, 296, 541, 333], [560, 295, 581, 333], [585, 320, 591, 330], [605, 300, 745, 333], [756, 305, 871, 325], [884, 300, 929, 324], [939, 296, 980, 324], [417, 347, 563, 375], [576, 356, 616, 382], [634, 353, 655, 377], [672, 347, 712, 381], [726, 349, 739, 375], [753, 360, 781, 369], [797, 347, 824, 376], [417, 396, 510, 426], [523, 397, 663, 434], [675, 397, 791, 425], [803, 401, 856, 425], [867, 401, 928, 425], [939, 397, 981, 426], [479, 448, 554, 476], [566, 448, 690, 476], [701, 448, 855, 476], [873, 448, 956, 483], [969, 457, 987, 476], [1002, 463, 1006, 468], [1021, 447, 1077, 485], [1083, 445, 1133, 486], [1139, 445, 1149, 486], [1166, 452, 1210, 476], [1226, 457, 1244, 476], [1261, 454, 1282, 478], [1298, 448, 1338, 476], [479, 499, 653, 527], [666, 499, 803, 536], [821, 499, 907, 539], [919, 498, 940, 536], [946, 496, 996, 537], [1011, 503, 1039, 530], [1052, 496, 1111, 537], [1125, 516, 1151, 517], [1165, 496, 1234, 537], [1251, 503, 1295, 527], [1310, 509, 1332, 536], [1348, 505, 1369, 529], [1389, 496, 1424, 537], [1439, 496, 1475, 537], [479, 550, 606, 587], [625, 559, 702, 587], [720, 563, 748, 572], [764, 559, 800, 584], [815, 554, 843, 581], [856, 547, 915, 588], [929, 567, 955, 568], [969, 547, 1021, 588], [479, 601, 652, 632], [417, 652, 480, 681], [492, 651, 585, 681], [417, 704, 529, 731], [542, 711, 590, 737], [438, 851, 501, 879], [514, 851, 644, 888], [656, 860, 712, 879], [726, 851, 790, 879], [802, 851, 841, 879], [853, 851, 1017, 888], [1028, 851, 1059, 879], [1071, 851, 1177, 879], [1189, 851, 1268, 879], [1280, 851, 1382, 888], [1395, 855, 1425, 879], [1438, 851, 1487, 879], [1499, 851, 1649, 888], [1661, 851, 1799, 879], [1810, 851, 1902, 888], [1915, 851, 2078, 888], [2094, 852, 2174, 879], [376, 899, 1906, 940], [1919, 911, 1992, 930], [2009, 902, 2173, 939], [376, 953, 510, 981], [522, 953, 571, 981], [583, 953, 708, 990], [721, 953, 850, 990], [862, 953, 887, 981], [900, 953, 1041, 981], [1052, 953, 1093, 990], [1106, 953, 1226, 990], [867, 1045, 1034, 1088], [1055, 1038, 1066, 1057], [1054, 1036, 1357, 1088], [1344, 1032, 1679, 1084], [374, 1138, 402, 1166], [413, 1138, 494, 1166], [503, 1138, 683, 1166], [696, 1147, 735, 1166], [748, 1138, 797, 1166], [810, 1138, 905, 1167], [916, 1138, 1054, 1175], [1066, 1138, 1162, 1175], [1041, 1227, 1078, 1267], [1096, 1243, 1124, 1252], [1139, 1227, 1506, 1268], [374, 1322, 476, 1351], [493, 1321, 515, 1359], [539, 1335, 567, 1344], [593, 1315, 687, 1360], [692, 1322, 768, 1350], [772, 1315, 794, 1335], [798, 1331, 824, 1350], [840, 1326, 868, 1353], [886, 1315, 932, 1350], [937, 1315, 1103, 1360], [1108, 1315, 1209, 1350], [1214, 1319, 1250, 1360], [1270, 1322, 1296, 1350], [1314, 1322, 1364, 1350], [1381, 1322, 1618, 1350], [1635, 1322, 1762, 1359], [1781, 1322, 1921, 1359], [1952, 1323, 2006, 1350], [2024, 1326, 2095, 1350], [2112, 1322, 2175, 1350], [376, 1373, 534, 1410], [549, 1373, 611, 1407], [626, 1382, 673, 1402], [686, 1373, 750, 1401], [762, 1373, 858, 1401], [870, 1382, 886, 1401], [899, 1373, 1069, 1410], [1081, 1373, 1286, 1410], [789, 1462, 949, 1503], [952, 1456, 974, 1476], [980, 1462, 1092, 1503], [1109, 1482, 1135, 1483], [1148, 1465, 1215, 1493], [1151, 1500, 1213, 1522], [1225, 1474, 1243, 1493], [1247, 1456, 1269, 1476], [1274, 1462, 1560, 1503], [1565, 1462, 1576, 1475], [1583, 1453, 1621, 1503], [1633, 1464, 1688, 1502], [1694, 1462, 1758, 1503], [377, 1576, 405, 1600], [416, 1572, 465, 1600], [477, 1572, 537, 1600], [548, 1572, 584, 1600], [593, 1572, 668, 1600], [680, 1572, 826, 1600], [842, 1572, 871, 1600], [881, 1572, 939, 1600], [951, 1581, 1009, 1609], [1022, 1572, 1047, 1600], [1061, 1572, 1182, 1600], [1193, 1572, 1263, 1600], [1275, 1572, 1325, 1600], [1337, 1572, 1456, 1600], [1468, 1572, 1628, 1606], [1642, 1572, 1691, 1600], [1702, 1572, 1764, 1600], [1776, 1572, 1890, 1609], [1902, 1581, 1960, 1609], [1973, 1572, 1998, 1600], [2011, 1572, 2175, 1609], [377, 1623, 434, 1651], [446, 1623, 589, 1657], [603, 1623, 630, 1651], [639, 1623, 662, 1651], [674, 1623, 738, 1651], [750, 1627, 843, 1651], [857, 1623, 906, 1651], [918, 1623, 1077, 1657], [1091, 1623, 1140, 1651], [1153, 1623, 1312, 1660], [1325, 1627, 1416, 1660], [376, 1737, 435, 1772], [488, 1737, 587, 1772], [602, 1740, 786, 1781], [799, 1737, 861, 1772], [875, 1737, 1021, 1779], [374, 1822, 437, 1850], [449, 1822, 522, 1850], [534, 1831, 604, 1850], [615, 1822, 640, 1850], [654, 1823, 698, 1851], [702, 1813, 733, 1833], [701, 1847, 730, 1860], [747, 1822, 916, 1859], [931, 1823, 985, 1850], [997, 1822, 1132, 1850], [1144, 1822, 1201, 1850], [1214, 1831, 1284, 1850], [1296, 1822, 1368, 1859], [1380, 1822, 1428, 1850], [1439, 1822, 1670, 1859], [1687, 1822, 1750, 1850], [1762, 1822, 1832, 1850], [1844, 1826, 1874, 1850], [1886, 1822, 1936, 1850], [1947, 1826, 2175, 1859], [375, 1873, 446, 1901], [457, 1873, 482, 1901], [889, 1924, 979, 1958], [1039, 1916, 1050, 1935], [1038, 1947, 1051, 1966], [1062, 1915, 1141, 1962], [1145, 1921, 1188, 1962], [1195, 1916, 1208, 1935], [1195, 1933, 1290, 1962], [1292, 1915, 1314, 1935], [1319, 1924, 1391, 1960], [1425, 1921, 1565, 1962], [1584, 1923, 1657, 1958], [2076, 1924, 2173, 1959], [374, 1999, 444, 2027], [456, 1999, 593, 2036], [604, 2008, 660, 2027], [671, 1999, 708, 2027], [722, 1999, 808, 2036], [819, 1999, 913, 2036], [926, 1999, 1030, 2028], [1041, 1999, 1081, 2036], [1093, 1999, 1234, 2036], [1247, 1999, 1302, 2033], [1315, 1999, 1413, 2028], [1426, 1999, 1474, 2027], [1486, 1999, 1557, 2036], [1569, 1999, 1740, 2028], [1753, 2003, 1815, 2036], [1828, 1999, 1852, 2027], [1865, 1999, 2030, 2036], [2042, 2003, 2113, 2027], [2125, 1999, 2173, 2027], [375, 2049, 496, 2084], [513, 2051, 574, 2078], [585, 2050, 635, 2078], [647, 2050, 733, 2078], [745, 2050, 771, 2078], [785, 2059, 822, 2078], [834, 2050, 1001, 2087], [1013, 2050, 1222, 2079], [1233, 2050, 1392, 2087], [1405, 2050, 1470, 2085], [1483, 2059, 1551, 2087], [1568, 2050, 1628, 2084], [1642, 2049, 1718, 2085], [1734, 2050, 1793, 2078], [1805, 2059, 1840, 2078], [1854, 2047, 1937, 2088], [1953, 2050, 2027, 2078], [2038, 2050, 2173, 2078], [376, 2101, 424, 2129], [436, 2101, 495, 2129], [507, 2110, 641, 2138], [655, 2110, 703, 2129], [715, 2101, 832, 2138], [846, 2101, 1003, 2130], [1022, 2102, 1069, 2138], [1082, 2101, 1263, 2138], [1276, 2101, 1360, 2129], [1372, 2101, 1404, 2129], [1416, 2110, 1472, 2129], [1484, 2101, 1536, 2130], [1549, 2101, 1732, 2130], [1746, 2110, 1783, 2129], [1796, 2101, 1933, 2129], [1943, 2110, 2020, 2138], [2034, 2101, 2135, 2130], [2147, 2101, 2173, 2129], [376, 2152, 525, 2180], [376, 2280, 403, 2321], [465, 2281, 585, 2322], [603, 2283, 845, 2333], [862, 2280, 936, 2322], [952, 2280, 1395, 2322], [1413, 2281, 1493, 2322], [373, 2388, 425, 2415], [435, 2396, 502, 2416], [513, 2396, 600, 2416], [611, 2391, 681, 2415], [692, 2387, 859, 2424], [870, 2387, 937, 2416], [947, 2396, 1000, 2415], [1011, 2387, 1059, 2415], [1070, 2387, 1201, 2415], [1215, 2387, 1326, 2415], [1336, 2396, 1410, 2424], [1420, 2391, 1569, 2424], [1581, 2387, 1700, 2416], [1711, 2387, 1804, 2416], [1814, 2387, 1917, 2416], [1928, 2396, 1944, 2415], [1953, 2387, 2173, 2424], [376, 2438, 555, 2467], [567, 2442, 597, 2466], [608, 2438, 718, 2466], [730, 2438, 1019, 2466], [1031, 2439, 1085, 2466], [1098, 2438, 1174, 2473], [1186, 2438, 1355, 2475], [376, 2552, 434, 2587], [488, 2552, 698, 2596], [712, 2552, 887, 2596], [374, 2637, 436, 2665], [447, 2637, 531, 2665], [543, 2637, 710, 2674], [723, 2637, 869, 2674], [883, 2637, 958, 2672], [971, 2637, 995, 2665], [1010, 2646, 1026, 2665], [1038, 2637, 1150, 2674], [1162, 2646, 1230, 2665], [1243, 2637, 1278, 2665], [1287, 2637, 1335, 2665], [1348, 2646, 1430, 2665], [1443, 2637, 1562, 2674], [1574, 2637, 1651, 2665], [1664, 2637, 1700, 2665], [1709, 2637, 1825, 2665], [1838, 2637, 1936, 2666], [1949, 2646, 2006, 2665], [2018, 2646, 2087, 2674], [2098, 2637, 2173, 2666], [377, 2688, 490, 2717], [501, 2688, 704, 2725], [719, 2697, 753, 2716], [765, 2688, 827, 2716], [838, 2697, 885, 2717], [897, 2697, 965, 2717], [978, 2688, 1063, 2717], [1024, 2788, 1111, 2822], [1166, 2785, 1245, 2826], [1260, 2792, 1288, 2819], [1301, 2770, 1387, 2835], [1360, 2822, 1411, 2841], [1423, 2798, 1451, 2822], [1459, 2785, 1522, 2826], [2097, 2788, 2173, 2823], [1259, 2935, 1294, 2963], [374, 242, 1183, 277], [437, 293, 503, 321], [519, 292, 580, 320], [597, 292, 647, 320], [662, 292, 748, 320], [764, 292, 905, 329], [922, 292, 1008, 327], [1028, 292, 1078, 320], [1094, 301, 1179, 320], [1196, 292, 1339, 329], [1355, 292, 1497, 329], [1513, 292, 1589, 327], [1607, 301, 1665, 320], [1682, 292, 1747, 320], [1763, 292, 1802, 320], [1819, 292, 1940, 320], [1956, 292, 2007, 321], [2022, 292, 2174, 329], [376, 343, 526, 371], [551, 343, 615, 371], [629, 343, 688, 380], [703, 347, 734, 371], [749, 343, 844, 380], [860, 352, 894, 371], [910, 343, 936, 371], [951, 347, 982, 371], [996, 352, 1052, 371], [1068, 344, 1189, 371], [1198, 343, 1352, 380], [1366, 343, 1505, 372], [1521, 343, 1612, 380], [1627, 343, 1702, 372], [1717, 352, 1734, 371], [1748, 343, 1911, 380], [1926, 352, 1973, 372], [1989, 343, 2100, 371], [2114, 343, 2174, 371], [376, 393, 548, 431], [563, 393, 717, 431], [740, 395, 863, 422], [875, 394, 1028, 431], [1042, 394, 1183, 422], [1199, 394, 1288, 423], [1303, 403, 1363, 422], [1377, 398, 1408, 422], [1421, 403, 1477, 422], [1492, 394, 1734, 431], [1748, 394, 1914, 431], [1927, 403, 2003, 431], [2018, 398, 2173, 431], [374, 445, 500, 474], [511, 445, 664, 482], [677, 445, 789, 474], [801, 454, 1014, 482], [1027, 445, 1118, 474], [1128, 445, 1291, 482], [1304, 445, 1438, 482], [1452, 445, 1554, 474], [1568, 454, 1626, 473], [1638, 449, 1667, 473], [1680, 449, 1821, 482], [1833, 445, 1882, 473], [1893, 454, 1968, 482], [1980, 449, 2117, 482], [2128, 445, 2175, 473], [376, 496, 425, 524], [438, 496, 533, 524], [547, 505, 615, 524], [627, 493, 702, 534], [720, 509, 748, 518], [765, 490, 835, 535], [808, 517, 858, 536], [871, 493, 958, 534], [973, 496, 1014, 533], [1028, 496, 1203, 533], [1217, 496, 1267, 524], [1280, 496, 1449, 525], [1461, 506, 1489, 530], [1504, 505, 1580, 533], [1594, 500, 1758, 533], [1776, 496, 1849, 524], [1864, 496, 2002, 533], [2015, 496, 2099, 524], [2113, 500, 2144, 524], [2158, 505, 2175, 524], [375, 546, 477, 583], [489, 546, 624, 574], [635, 546, 749, 583], [763, 555, 812, 574], [823, 546, 928, 583], [940, 546, 958, 575], [970, 546, 1017, 574], [1028, 555, 1044, 574], [1055, 546, 1269, 575], [1285, 547, 1318, 574], [1329, 546, 1412, 574], [1422, 546, 1528, 580], [1540, 546, 1700, 583], [1713, 546, 1845, 583], [1857, 546, 1989, 575], [2001, 546, 2173, 583], [376, 597, 425, 625], [436, 606, 511, 634], [523, 601, 661, 634], [842, 665, 936, 694], [944, 653, 994, 694], [1014, 666, 1051, 684], [1067, 656, 1191, 693], [1119, 704, 1137, 717], [1248, 649, 1259, 668], [1247, 648, 1428, 699], [1415, 660, 1470, 695], [1484, 638, 1570, 703], [1543, 690, 1593, 709], [1606, 666, 1633, 690], [1641, 653, 1705, 694], [2097, 656, 2173, 691], [375, 751, 415, 788], [427, 751, 591, 788], [603, 751, 745, 788], [758, 751, 807, 779], [819, 751, 984, 780], [995, 760, 1070, 788], [1082, 755, 1232, 788], [1246, 760, 1350, 793], [1368, 751, 1425, 779], [1437, 751, 1507, 779], [1519, 751, 1693, 788], [1706, 751, 1781, 779], [1792, 755, 1920, 788], [1937, 751, 2007, 779], [2021, 751, 2135, 788], [2148, 751, 2172, 779], [376, 802, 455, 830], [465, 802, 506, 839], [518, 811, 621, 830], [635, 802, 670, 830], [681, 811, 697, 830], [708, 802, 864, 830], [875, 802, 1007, 836], [1021, 802, 1120, 831], [1132, 806, 1306, 839], [1320, 811, 1525, 839], [1537, 806, 1566, 830], [1580, 802, 1629, 830], [1642, 802, 1772, 830], [1785, 802, 1820, 830], [1829, 802, 1879, 830], [1891, 802, 2003, 831], [2015, 811, 2110, 840], [2117, 799, 2179, 840], [855, 920, 1072, 961], [1098, 920, 1292, 961], [1048, 999, 1086, 1037], [1235, 1102, 1444, 1147], [1463, 1102, 1678, 1138], [1459, 1334, 1533, 1346], [1091, 1306, 1250, 1340], [1096, 1352, 1244, 1384], [1279, 1306, 1438, 1340], [1284, 1352, 1432, 1384], [1554, 1306, 1713, 1340], [1559, 1352, 1707, 1384], [889, 1088, 1039, 1115], [890, 1133, 1038, 1165], [376, 1454, 482, 1491], [494, 1454, 522, 1483], [539, 1456, 643, 1490], [655, 1456, 764, 1482], [774, 1456, 802, 1482], [812, 1456, 946, 1490], [956, 1456, 1143, 1490], [1154, 1456, 1196, 1482], [1207, 1456, 1376, 1490], [1387, 1456, 1432, 1482], [1442, 1456, 1565, 1482], [1577, 1456, 1596, 1490], [1601, 1454, 1649, 1491], [1663, 1460, 1689, 1485], [1702, 1453, 1766, 1491], [1742, 1476, 1787, 1493], [1799, 1465, 1825, 1486], [1833, 1454, 1891, 1491], [1906, 1456, 2041, 1482], [2052, 1456, 2173, 1490], [376, 1503, 468, 1529], [479, 1503, 524, 1529], [536, 1512, 596, 1529], [606, 1503, 638, 1529], [646, 1503, 820, 1537], [832, 1512, 931, 1537], [941, 1512, 969, 1529], [981, 1512, 997, 1529], [1008, 1503, 1095, 1537], [1105, 1512, 1158, 1529], [1168, 1507, 1196, 1529], [1206, 1503, 1251, 1529], [1261, 1503, 1395, 1537], [1406, 1503, 1524, 1534], [1537, 1503, 1618, 1530], [1628, 1503, 1760, 1537], [1771, 1503, 1933, 1537], [1944, 1503, 1972, 1529], [1982, 1503, 2027, 1529], [2038, 1503, 2133, 1537], [2144, 1503, 2176, 1529], [376, 1549, 442, 1575], [452, 1549, 599, 1583], [611, 1553, 668, 1583], [678, 1549, 794, 1583], [804, 1549, 849, 1575], [859, 1558, 908, 1575], [919, 1549, 951, 1575], [959, 1558, 975, 1575], [985, 1549, 1126, 1575], [1136, 1549, 1254, 1575], [1268, 1550, 1320, 1575], [1329, 1549, 1506, 1575], [1518, 1549, 1537, 1583], [1548, 1549, 1593, 1575], [1605, 1558, 1679, 1575], [1691, 1549, 1802, 1575], [1812, 1549, 1915, 1583], [1926, 1549, 1962, 1583], [1969, 1549, 2026, 1583], [2036, 1549, 2174, 1583], [375, 1596, 420, 1622], [431, 1596, 450, 1630], [463, 1596, 584, 1630], [594, 1600, 718, 1630], [727, 1596, 764, 1630], [775, 1596, 808, 1622], [819, 1596, 1032, 1630], [1042, 1596, 1188, 1630], [1199, 1600, 1328, 1630], [438, 1692, 591, 1720], [602, 1692, 754, 1729], [766, 1692, 940, 1720], [953, 1701, 1011, 1720], [1022, 1692, 1099, 1720], [1111, 1692, 1160, 1720], [1171, 1692, 1350, 1729], [1363, 1701, 1458, 1730], [1474, 1692, 1560, 1727], [1577, 1693, 1611, 1720], [1623, 1692, 1705, 1721], [1716, 1692, 1840, 1721], [1853, 1701, 1901, 1721], [1912, 1692, 2021, 1729], [2034, 1692, 2174, 1720], [377, 1752, 463, 1771], [478, 1743, 514, 1771], [527, 1743, 577, 1771], [591, 1743, 801, 1780], [826, 1743, 890, 1771], [906, 1752, 979, 1771], [994, 1743, 1030, 1771], [1044, 1743, 1083, 1771], [1098, 1743, 1135, 1771], [1147, 1743, 1231, 1771], [1245, 1743, 1271, 1771], [1286, 1743, 1349, 1771], [1363, 1743, 1440, 1771], [1453, 1743, 1512, 1780], [1529, 1747, 1610, 1780], [1626, 1743, 1690, 1772], [1704, 1743, 1743, 1771], [1757, 1743, 1923, 1780], [1939, 1747, 2021, 1780], [2036, 1752, 2109, 1772], [2124, 1743, 2174, 1771], [376, 1794, 543, 1823], [555, 1804, 583, 1828], [598, 1798, 698, 1822], [715, 1794, 806, 1828], [819, 1794, 909, 1831], [920, 1794, 1071, 1831], [1084, 1794, 1221, 1831], [1235, 1794, 1293, 1822], [1305, 1794, 1522, 1828], [1537, 1803, 1594, 1831], [1606, 1803, 1722, 1823], [1735, 1794, 1875, 1822], [1887, 1794, 2023, 1831], [2034, 1794, 2175, 1831], [374, 1844, 448, 1873], [463, 1844, 602, 1881], [616, 1844, 814, 1881], [830, 1853, 887, 1872], [901, 1844, 940, 1872], [956, 1844, 1064, 1873], [1078, 1844, 1110, 1872], [1126, 1853, 1143, 1872], [1156, 1844, 1263, 1881], [1278, 1844, 1418, 1872], [1432, 1844, 1584, 1881], [1599, 1844, 1790, 1873], [1816, 1844, 1904, 1872], [1918, 1844, 1977, 1872], [1994, 1844, 2112, 1872], [2126, 1853, 2174, 1873], [376, 1895, 544, 1932], [557, 1895, 642, 1923], [655, 1895, 740, 1923], [752, 1895, 794, 1932], [808, 1895, 953, 1932], [966, 1895, 1050, 1923], [1062, 1899, 1093, 1923], [1106, 1899, 1180, 1924], [1195, 1895, 1254, 1923], [1266, 1895, 1593, 1932], [1606, 1896, 1661, 1923], [1673, 1895, 1845, 1932], [1860, 1895, 1962, 1924], [1975, 1904, 2022, 1924], [2035, 1895, 2107, 1923], [2118, 1904, 2174, 1923], [374, 1946, 478, 1975], [489, 1946, 639, 1983], [652, 1946, 765, 1975], [778, 1946, 826, 1974], [838, 1946, 1013, 1983], [1026, 1955, 1042, 1974], [1054, 1946, 1133, 1975], [1146, 1955, 1228, 1983], [1240, 1946, 1276, 1974], [1286, 1946, 1493, 1983], [376, 2057, 455, 2087], [500, 2057, 661, 2087], [673, 2058, 815, 2095], [828, 2057, 907, 2093], [374, 2136, 437, 2164], [449, 2136, 600, 2164], [612, 2136, 742, 2173], [754, 2136, 876, 2164], [891, 2136, 953, 2170], [969, 2136, 1068, 2165], [1081, 2136, 1233, 2173], [1246, 2136, 1282, 2164], [1291, 2136, 1341, 2164], [1352, 2136, 1432, 2164], [968, 2229, 1035, 2257], [992, 2269, 1010, 2282], [1092, 2221, 1103, 2240], [1091, 2221, 1272, 2271], [1259, 2248, 1272, 2267], [1286, 2233, 1314, 2260], [1327, 2226, 1419, 2267], [1434, 2233, 1462, 2260], [1475, 2226, 1579, 2267], [374, 2332, 476, 2361], [490, 2332, 515, 2360], [531, 2341, 548, 2360], [560, 2332, 722, 2369], [735, 2341, 806, 2360], [820, 2332, 856, 2360], [869, 2332, 944, 2367], [959, 2332, 1008, 2360], [1021, 2342, 1055, 2360], [1073, 2345, 1101, 2354], [1120, 2332, 1147, 2360], [1169, 2332, 1233, 2360], [1247, 2332, 1372, 2360], [1386, 2332, 1509, 2361], [1524, 2332, 1574, 2360], [1587, 2332, 1755, 2369], [1769, 2332, 1902, 2360], [1915, 2332, 1947, 2360], [1960, 2332, 2136, 2369], [2149, 2333, 2177, 2366], [374, 2383, 472, 2412], [483, 2383, 507, 2411], [520, 2383, 697, 2420], [708, 2387, 737, 2411], [749, 2392, 893, 2420], [905, 2387, 934, 2411], [946, 2383, 994, 2411], [1006, 2383, 1122, 2411], [1134, 2383, 1270, 2411], [1287, 2383, 1381, 2420], [1393, 2384, 1443, 2411], [1455, 2383, 1502, 2411], [1511, 2383, 1657, 2420], [1670, 2383, 1802, 2420], [1814, 2383, 1861, 2411], [1871, 2383, 1918, 2411], [1930, 2383, 2174, 2411], [374, 2442, 435, 2462], [448, 2433, 621, 2470], [632, 2433, 784, 2470], [796, 2433, 826, 2461], [841, 2433, 894, 2467], [438, 2485, 461, 2512], [470, 2484, 523, 2512], [535, 2484, 598, 2512], [608, 2484, 684, 2512], [695, 2484, 798, 2513], [808, 2484, 868, 2512], [878, 2484, 926, 2512], [938, 2484, 1116, 2521], [1126, 2484, 1162, 2512], [1169, 2484, 1225, 2512], [1237, 2484, 1357, 2512], [1367, 2484, 1392, 2512], [1403, 2484, 1570, 2521], [1580, 2488, 1609, 2512], [1619, 2484, 1801, 2521], [1813, 2484, 1984, 2521], [1994, 2484, 2173, 2521], [376, 2539, 446, 2563], [459, 2535, 569, 2563], [581, 2535, 651, 2563], [662, 2535, 819, 2572], [836, 2535, 909, 2569], [923, 2544, 939, 2563], [950, 2535, 1113, 2572], [1126, 2535, 1229, 2564], [1241, 2535, 1450, 2564], [1464, 2535, 1558, 2564], [1571, 2535, 1740, 2572], [1753, 2544, 1793, 2563], [1805, 2535, 1853, 2563], [1864, 2535, 1985, 2564], [1997, 2535, 2174, 2563], [376, 2586, 411, 2614], [421, 2586, 495, 2614], [506, 2586, 675, 2623], [691, 2586, 719, 2614], [731, 2595, 815, 2614], [827, 2586, 961, 2614], [972, 2586, 1094, 2614], [1105, 2586, 1199, 2614], [1211, 2595, 1251, 2614], [1262, 2586, 1432, 2614], [1446, 2586, 1562, 2614], [1574, 2586, 1609, 2614], [1618, 2586, 1799, 2623], [1813, 2586, 1838, 2614], [1850, 2586, 1994, 2623], [2009, 2595, 2039, 2614], [2052, 2595, 2099, 2615], [2111, 2586, 2174, 2615], [377, 2646, 427, 2665], [438, 2637, 544, 2666], [438, 2688, 528, 2715], [543, 2687, 705, 2724], [723, 2687, 749, 2715], [762, 2696, 847, 2715], [862, 2687, 934, 2715], [949, 2691, 1010, 2716], [1024, 2687, 1222, 2724], [1239, 2696, 1288, 2715], [1302, 2691, 1425, 2724], [1440, 2687, 1492, 2722], [1496, 2711, 1512, 2721], [1530, 2697, 1564, 2715], [1585, 2693, 1611, 2717], [1634, 2687, 1675, 2722], [1692, 2687, 1764, 2715], [1779, 2687, 1802, 2715], [1816, 2687, 1842, 2715], [1858, 2696, 1943, 2715], [1958, 2687, 2057, 2724], [2073, 2691, 2103, 2715], [2118, 2696, 2174, 2715], [373, 2738, 670, 2766], [680, 2738, 810, 2775], [823, 2738, 922, 2773], [938, 2738, 1000, 2772], [1016, 2738, 1080, 2773], [1092, 2738, 1160, 2775], [1175, 2738, 1216, 2773], [1230, 2747, 1246, 2766], [1258, 2738, 1490, 2775], [1502, 2738, 1643, 2766], [1655, 2738, 1704, 2767], [1716, 2738, 1765, 2766], [1778, 2738, 2025, 2775], [2037, 2738, 2128, 2766], [2141, 2738, 2177, 2766], [376, 2789, 475, 2817], [489, 2789, 562, 2823], [579, 2789, 651, 2817], [662, 2789, 788, 2826], [799, 2789, 949, 2826], [961, 2789, 1086, 2817], [1098, 2789, 1123, 2817], [1137, 2789, 1289, 2818], [1300, 2789, 1432, 2817], [1444, 2789, 1466, 2817], [1477, 2793, 1530, 2817], [1541, 2789, 1614, 2826], [1626, 2789, 1785, 2817], [1798, 2798, 1835, 2817], [1848, 2789, 1990, 2826], [2002, 2789, 2129, 2817], [2141, 2789, 2177, 2817], [1259, 2935, 1293, 2964], [373, 239, 557, 277], [569, 240, 588, 268], [600, 240, 751, 268], [763, 240, 893, 277], [417, 296, 541, 333], [559, 306, 603, 332], [615, 306, 659, 330], [673, 296, 758, 333], [770, 296, 866, 333], [878, 305, 901, 332], [918, 302, 939, 326], [955, 296, 1003, 324], [1010, 320, 1015, 324], [417, 347, 973, 383], [987, 347, 1058, 376], [417, 397, 510, 427], [523, 398, 663, 435], [675, 398, 791, 426], [803, 402, 856, 426], [867, 402, 928, 426], [939, 398, 981, 427], [479, 459, 512, 483], [526, 449, 689, 486], [701, 453, 846, 486], [865, 458, 897, 483], [914, 462, 942, 471], [957, 458, 1064, 491], [1074, 446, 1125, 487], [1140, 453, 1168, 480], [1178, 446, 1243, 487], [479, 503, 983, 537], [479, 560, 511, 584], [526, 550, 689, 587], [701, 554, 846, 587], [865, 559, 942, 587], [960, 563, 988, 572], [1003, 559, 1110, 593], [1121, 547, 1167, 588], [1182, 554, 1210, 581], [1223, 547, 1283, 588], [479, 605, 1020, 638], [479, 652, 652, 683], [417, 703, 480, 732], [492, 702, 585, 732], [417, 753, 541, 782], [555, 762, 591, 788], [598, 777, 603, 781], [373, 867, 557, 905], [569, 867, 588, 897], [600, 870, 862, 896], [872, 870, 990, 904], [417, 923, 1090, 960], [1096, 947, 1101, 951], [417, 974, 563, 1002], [576, 983, 616, 1009], [633, 987, 661, 996], [676, 983, 709, 1010], [724, 968, 757, 1002], [747, 974, 1250, 1013], [417, 1024, 510, 1054], [523, 1025, 663, 1062], [675, 1025, 814, 1053], [826, 1029, 879, 1053], [890, 1029, 952, 1053], [962, 1025, 1004, 1054], [479, 1075, 958, 1113], [540, 1120, 575, 1163], [566, 1147, 576, 1165], [594, 1140, 622, 1149], [636, 1136, 741, 1169], [751, 1120, 798, 1165], [787, 1124, 814, 1165], [479, 1177, 542, 1206], [554, 1176, 605, 1206], [480, 1237, 558, 1265], [576, 1241, 604, 1250], [632, 1221, 643, 1240], [624, 1257, 651, 1270], [666, 1225, 705, 1267], [709, 1222, 763, 1269], [754, 1248, 764, 1266], [479, 1278, 958, 1316], [543, 1324, 575, 1358], [565, 1324, 845, 1371], [834, 1324, 935, 1368], [926, 1350, 936, 1368], [479, 1381, 542, 1410], [554, 1380, 605, 1410], [479, 1431, 641, 1462], [417, 1482, 480, 1511], [492, 1481, 585, 1511], [417, 1533, 541, 1562], [555, 1542, 591, 1567], [375, 1682, 579, 1719], [592, 1682, 644, 1710], [656, 1682, 721, 1710], [734, 1682, 839, 1711], [850, 1682, 1058, 1719], [1070, 1682, 1120, 1710], [1132, 1682, 1206, 1710], [1218, 1686, 1249, 1710], [1261, 1682, 1311, 1710], [1323, 1682, 1489, 1711], [1500, 1691, 1576, 1719], [1588, 1686, 1750, 1719], [1767, 1682, 1839, 1710], [1851, 1682, 1965, 1710], [1978, 1682, 2083, 1711], [2095, 1691, 2130, 1710], [2143, 1686, 2174, 1710], [376, 1733, 504, 1770], [517, 1742, 533, 1761], [543, 1733, 649, 1770], [660, 1733, 784, 1770], [796, 1733, 1055, 1770], [1067, 1733, 1114, 1761], [1126, 1733, 1415, 1761], [1427, 1734, 1480, 1761], [1491, 1733, 1654, 1770], [1667, 1732, 1771, 1770], [376, 1843, 457, 1873], [499, 1843, 703, 1881], [715, 1843, 894, 1873], [906, 1861, 927, 1864], [938, 1843, 1260, 1881], [1273, 1843, 1357, 1879], [374, 1923, 438, 1951], [453, 1923, 765, 1960], [780, 1923, 863, 1958], [879, 1923, 1005, 1951], [1020, 1932, 1083, 1952], [1098, 1923, 1261, 1960], [1276, 1923, 1403, 1952], [1417, 1923, 1466, 1951], [1480, 1923, 1673, 1960], [1688, 1923, 1738, 1951], [1754, 1932, 1823, 1951], [1837, 1923, 1873, 1951], [1886, 1927, 1947, 1952], [1963, 1923, 2175, 1958], [376, 1983, 491, 2003], [503, 1974, 654, 2002], [671, 1974, 744, 2008], [758, 1974, 788, 2002], [800, 1974, 850, 2002], [861, 1974, 949, 2002], [1087, 2025, 1154, 2053], [1111, 2065, 1129, 2078], [1206, 2022, 1298, 2063], [1313, 2029, 1341, 2056], [1355, 2022, 1460, 2063], [2097, 2025, 2173, 2060], [377, 2114, 452, 2142], [463, 2114, 526, 2142], [540, 2111, 577, 2152], [592, 2113, 669, 2142], [679, 2111, 728, 2152], [743, 2117, 766, 2143], [782, 2111, 819, 2152], [834, 2113, 911, 2142], [921, 2111, 970, 2152], [991, 2112, 1011, 2151], [987, 2127, 1015, 2136], [1031, 2110, 1058, 2145], [1074, 2114, 1138, 2142], [1150, 2114, 1276, 2142], [1288, 2118, 1426, 2151], [1438, 2114, 1479, 2151], [1491, 2114, 1630, 2151], [1644, 2123, 1661, 2142], [1673, 2114, 1766, 2142], [1778, 2114, 1814, 2142], [1823, 2114, 2007, 2148], [2022, 2114, 2081, 2142], [2092, 2114, 2124, 2142], [2136, 2114, 2173, 2142], [377, 2165, 513, 2202], [524, 2165, 604, 2193], [615, 2174, 671, 2193], [682, 2165, 721, 2193], [733, 2165, 849, 2194], [862, 2174, 892, 2193], [1045, 2225, 1124, 2253], [1142, 2229, 1170, 2238], [1192, 2208, 1203, 2227], [1191, 2239, 1204, 2258], [1222, 2213, 1354, 2256], [1372, 2213, 1503, 2254], [2097, 2216, 2173, 2251], [374, 2291, 476, 2320], [490, 2291, 540, 2319], [556, 2291, 711, 2327], [726, 2296, 874, 2328], [889, 2291, 937, 2332], [961, 2301, 998, 2319], [1019, 2291, 1036, 2319], [1045, 2300, 1144, 2336], [1157, 2291, 1208, 2319], [1211, 2315, 1216, 2319], [1240, 2291, 1313, 2319], [1328, 2291, 1454, 2319], [1468, 2291, 1494, 2319], [1510, 2295, 1563, 2319], [1577, 2291, 1697, 2328], [1713, 2291, 1884, 2328], [1899, 2295, 1930, 2319], [1944, 2291, 2085, 2328], [2100, 2291, 2175, 2326], [375, 2342, 502, 2370], [515, 2342, 550, 2370], [559, 2342, 607, 2370], [620, 2342, 744, 2379], [756, 2351, 841, 2370], [852, 2346, 933, 2370], [949, 2342, 1155, 2371], [1169, 2342, 1199, 2370], [1214, 2342, 1275, 2376], [1291, 2351, 1307, 2370], [1319, 2342, 1443, 2370], [1455, 2342, 1693, 2370], [1705, 2351, 1765, 2371], [1777, 2342, 1926, 2379], [1937, 2342, 1976, 2379], [1989, 2342, 2109, 2379], [2120, 2351, 2173, 2370], [376, 2393, 411, 2421], [421, 2397, 588, 2430], [601, 2393, 680, 2421], [692, 2393, 884, 2421], [895, 2393, 1111, 2430], [1126, 2402, 1142, 2421], [1154, 2393, 1289, 2421], [1300, 2393, 1493, 2430], [1505, 2402, 1545, 2421], [1557, 2393, 1613, 2421], [1626, 2393, 1706, 2430], [1719, 2393, 1743, 2421], [1757, 2393, 1845, 2430], [1857, 2393, 1887, 2421], [1899, 2393, 2060, 2430], [2071, 2393, 2107, 2421], [2121, 2394, 2173, 2421], [377, 2444, 556, 2472], [568, 2444, 617, 2472], [628, 2444, 686, 2481], [698, 2444, 781, 2472], [794, 2444, 873, 2472], [888, 2444, 950, 2478], [964, 2444, 1069, 2473], [438, 2495, 570, 2523], [582, 2505, 616, 2523], [631, 2508, 659, 2517], [675, 2495, 692, 2523], [706, 2495, 764, 2523], [776, 2505, 807, 2529], [816, 2519, 820, 2531], [832, 2505, 864, 2529], [878, 2495, 970, 2532], [982, 2496, 1047, 2524], [1050, 2494, 1099, 2523], [1112, 2495, 1284, 2523], [1298, 2499, 1328, 2523], [1342, 2504, 1427, 2523], [1440, 2495, 1635, 2523], [1646, 2495, 1798, 2523], [1812, 2495, 2074, 2530], [2086, 2495, 2111, 2523], [2125, 2495, 2174, 2523], [376, 2546, 440, 2574], [443, 2545, 493, 2573], [506, 2545, 663, 2573], [675, 2545, 711, 2573], [722, 2554, 738, 2573], [751, 2545, 946, 2573], [957, 2545, 1116, 2582], [1126, 2545, 1273, 2582], [1288, 2554, 1339, 2573], [1354, 2544, 1420, 2580], [1436, 2545, 1581, 2582], [1593, 2542, 1685, 2583], [1702, 2558, 1730, 2567], [1745, 2555, 1777, 2580], [1786, 2542, 1837, 2583], [1854, 2562, 1880, 2563], [1894, 2538, 1942, 2573], [1947, 2554, 1980, 2581], [1999, 2544, 2010, 2551], [1993, 2545, 2174, 2580], [376, 2597, 440, 2625], [443, 2596, 492, 2624], [505, 2596, 662, 2624], [674, 2596, 710, 2624], [720, 2605, 805, 2624], [818, 2596, 1012, 2624], [1023, 2596, 1160, 2624], [1173, 2596, 1237, 2631], [1249, 2596, 1411, 2633], [1423, 2596, 1474, 2631], [1488, 2596, 1659, 2630], [1672, 2605, 1719, 2625], [1731, 2605, 1801, 2633], [1813, 2596, 1953, 2624], [1964, 2596, 2013, 2624], [2024, 2596, 2162, 2633], [865, 2698, 960, 2727], [967, 2686, 1018, 2727], [1037, 2699, 1075, 2717], [1091, 2689, 1214, 2726], [1142, 2737, 1160, 2750], [1272, 2681, 1283, 2700], [1271, 2712, 1284, 2731], [1295, 2686, 1354, 2727], [1361, 2680, 1374, 2699], [1361, 2708, 1374, 2727], [1389, 2693, 1417, 2720], [1430, 2686, 1521, 2727], [1537, 2693, 1565, 2720], [1577, 2686, 1681, 2727], [1259, 2935, 1294, 2964], [374, 242, 474, 271], [486, 251, 542, 270], [553, 242, 592, 270], [602, 242, 750, 271], [764, 242, 865, 279], [877, 242, 1066, 279], [1079, 242, 1171, 277], [1186, 251, 1216, 270], [917, 332, 984, 360], [931, 367, 971, 393], [997, 329, 1151, 370], [1204, 336, 1249, 360], [1294, 332, 1428, 362], [1435, 347, 1444, 351], [1430, 354, 1471, 371], [1490, 331, 1630, 371], [2097, 331, 2173, 367], [374, 442, 476, 471], [493, 442, 537, 476], [556, 442, 683, 470], [700, 442, 750, 470], [765, 442, 839, 470], [855, 442, 1002, 479], [1018, 442, 1054, 470], [1069, 442, 1267, 470], [1282, 442, 1422, 470], [1438, 442, 1678, 479], [1694, 446, 1725, 470], [1742, 452, 1759, 470], [1777, 442, 1842, 477], [1859, 442, 2023, 479], [2040, 442, 2092, 477], [2110, 442, 2174, 470], [376, 493, 505, 530], [522, 493, 656, 521], [671, 502, 729, 521], [743, 493, 782, 521], [796, 493, 962, 522], [977, 493, 1107, 530], [1123, 502, 1146, 521], [1168, 506, 1196, 515], [1218, 502, 1241, 521], [1257, 510, 1283, 511], [1300, 492, 1319, 521], [1323, 517, 1328, 521], [1354, 493, 1497, 521], [1512, 492, 1588, 528], [1604, 493, 1630, 521], [1647, 493, 1708, 521], [1724, 497, 1777, 521], [1791, 493, 1823, 521], [1839, 502, 1856, 521], [1871, 493, 1952, 521], [1968, 493, 2127, 521], [2143, 497, 2173, 521], [376, 544, 431, 571], [442, 543, 768, 578], [780, 543, 807, 571], [814, 552, 860, 572], [872, 543, 959, 580], [971, 544, 1026, 571], [1036, 547, 1066, 571], [1077, 543, 1125, 571], [1136, 543, 1280, 571], [1290, 543, 1438, 571], [1450, 543, 1486, 571], [1494, 543, 1541, 571], [1553, 547, 1611, 571], [1625, 543, 1685, 571], [1691, 558, 1700, 562], [1686, 565, 1713, 582], [1723, 567, 1727, 579], [1740, 543, 1796, 582], [1805, 567, 1811, 577], [1823, 543, 1883, 571], [1893, 543, 1928, 577], [1940, 547, 1970, 571], [1981, 543, 2029, 571], [2039, 543, 2175, 580], [1035, 634, 1102, 662], [1059, 674, 1077, 687], [1154, 632, 1220, 668], [1227, 659, 1234, 662], [1223, 664, 1247, 679], [1260, 631, 1311, 672], [1326, 638, 1354, 665], [1368, 632, 1435, 679], [1448, 631, 1511, 672], [376, 736, 398, 764], [409, 745, 465, 764], [476, 736, 515, 764], [528, 736, 632, 765], [648, 736, 709, 770], [724, 736, 786, 764], [797, 736, 846, 764], [859, 745, 1009, 773], [1022, 736, 1098, 771], [1111, 736, 1271, 773], [1282, 736, 1323, 773], [1335, 737, 1391, 764], [1403, 736, 1427, 764], [1441, 736, 1603, 773], [1615, 736, 1668, 764], [1679, 736, 1741, 764], [1753, 736, 1827, 764], [1839, 745, 1855, 764], [1867, 736, 2034, 764], [2046, 736, 2174, 773], [375, 786, 542, 823], [554, 795, 716, 823], [730, 790, 760, 814], [773, 786, 822, 814], [834, 786, 952, 814], [965, 786, 1096, 814], [1108, 786, 1144, 814], [1154, 785, 1240, 821], [1257, 786, 1337, 815], [1350, 786, 1481, 814], [1493, 786, 1518, 814], [1531, 786, 1620, 823], [1631, 786, 1672, 823], [1684, 786, 1734, 814], [1744, 786, 1809, 823], [993, 876, 1150, 922], [1163, 874, 1242, 915], [1296, 886, 1319, 905], [1334, 890, 1362, 899], [1377, 877, 1457, 911], [1464, 902, 1471, 905], [1460, 907, 1484, 922], [1496, 874, 1554, 915], [2097, 877, 2173, 912], [374, 968, 526, 1005], [537, 968, 568, 996], [579, 968, 635, 996], [647, 968, 809, 997], [820, 977, 907, 1005], [919, 972, 1059, 1005], [1070, 968, 1145, 997], [1155, 968, 1232, 996], [1243, 968, 1424, 1002], [1438, 968, 1615, 1005], [1628, 968, 1666, 996], [1678, 968, 1726, 996], [1737, 968, 1904, 1005], [1916, 968, 1947, 996], [1958, 968, 2006, 996], [2018, 968, 2175, 1005], [376, 1028, 433, 1047], [444, 1019, 483, 1047], [494, 1019, 628, 1047], [640, 1023, 671, 1047], [682, 1019, 872, 1056], [883, 1019, 1049, 1056], [1063, 1023, 1154, 1056], [1170, 1020, 1251, 1047], [1263, 1019, 1328, 1047], [1340, 1019, 1403, 1047], [1414, 1019, 1464, 1047], [1475, 1019, 1662, 1056], [1675, 1023, 1748, 1047], [1762, 1028, 1779, 1047], [1789, 1019, 1863, 1047], [1875, 1019, 2022, 1056], [2033, 1019, 2174, 1056], [376, 1074, 406, 1098], [419, 1074, 470, 1107], [482, 1079, 499, 1098], [511, 1070, 645, 1098], [658, 1070, 734, 1105], [747, 1079, 805, 1098], [815, 1070, 854, 1098], [866, 1070, 985, 1099], [997, 1070, 1029, 1098], [1040, 1074, 1132, 1098], [1145, 1070, 1181, 1098], [1189, 1070, 1355, 1107], [1368, 1074, 1523, 1107], [1537, 1070, 1744, 1107], [1755, 1070, 1860, 1105], [1874, 1070, 1976, 1099], [1988, 1070, 2020, 1098], [2031, 1070, 2090, 1098], [2103, 1079, 2174, 1098], [376, 1120, 495, 1157], [836, 1211, 917, 1256], [929, 1208, 1060, 1249], [1075, 1220, 1221, 1253], [1232, 1208, 1293, 1249], [810, 1280, 890, 1314], [897, 1305, 904, 1308], [893, 1310, 917, 1325], [929, 1277, 978, 1318], [996, 1293, 1024, 1302], [1040, 1289, 1060, 1308], [1074, 1284, 1102, 1311], [1114, 1289, 1221, 1322], [1232, 1277, 1313, 1318], [1331, 1293, 1359, 1302], [1374, 1289, 1394, 1308], [1408, 1284, 1436, 1311], [1449, 1289, 1556, 1322], [1567, 1277, 1633, 1318], [1647, 1284, 1675, 1311], [1687, 1277, 1737, 1318], [374, 1376, 471, 1405], [484, 1385, 529, 1405], [541, 1385, 594, 1404], [606, 1376, 654, 1404], [667, 1376, 726, 1404], [738, 1376, 797, 1404], [809, 1376, 856, 1404], [868, 1375, 889, 1413], [895, 1373, 946, 1414], [964, 1389, 992, 1398], [1008, 1373, 1086, 1414], [1101, 1380, 1129, 1407], [1142, 1369, 1192, 1404], [1197, 1385, 1230, 1410], [1244, 1385, 1342, 1420], [1349, 1373, 1401, 1414], [1419, 1389, 1447, 1398], [1461, 1385, 1560, 1420], [1567, 1373, 1604, 1414], [1619, 1393, 1645, 1394], [1658, 1373, 1709, 1414], [1726, 1376, 1787, 1404], [1799, 1376, 1952, 1404], [1964, 1376, 2131, 1413], [2144, 1376, 2174, 1404], [374, 1427, 472, 1456], [484, 1427, 531, 1455], [544, 1428, 599, 1455], [610, 1427, 745, 1455], [756, 1427, 781, 1455], [793, 1427, 885, 1455], [898, 1427, 973, 1462], [986, 1436, 1042, 1455], [1054, 1427, 1116, 1455], [1128, 1427, 1165, 1455], [1178, 1427, 1292, 1456], [1303, 1427, 1334, 1455], [1345, 1431, 1433, 1455], [1446, 1427, 1481, 1455], [1489, 1427, 1648, 1464], [1662, 1431, 1749, 1464], [1764, 1436, 1794, 1455], [1807, 1436, 1852, 1456], [1865, 1436, 1912, 1455], [1925, 1427, 2064, 1464], [2077, 1428, 2132, 1455], [2144, 1431, 2173, 1455], [376, 1477, 425, 1505], [437, 1477, 583, 1505], [595, 1477, 746, 1505], [760, 1475, 827, 1512], [834, 1502, 841, 1505], [830, 1507, 854, 1522], [866, 1501, 870, 1513], [883, 1475, 950, 1522], [960, 1501, 966, 1511], [981, 1477, 1038, 1505], [1050, 1477, 1213, 1514], [1225, 1477, 1272, 1505], [1284, 1486, 1321, 1505], [1333, 1477, 1480, 1505], [1491, 1477, 1628, 1505], [1640, 1477, 1743, 1514], [1755, 1477, 1931, 1514], [438, 1528, 511, 1556], [527, 1528, 705, 1565], [720, 1528, 895, 1556], [911, 1528, 1027, 1557], [1041, 1528, 1077, 1556], [1089, 1529, 1147, 1556], [1162, 1528, 1187, 1556], [1202, 1528, 1364, 1565], [1379, 1528, 1411, 1556], [1425, 1528, 1601, 1565], [1615, 1528, 1643, 1557], [1669, 1529, 1749, 1556], [1764, 1528, 1827, 1556], [1841, 1528, 1873, 1556], [1888, 1532, 2021, 1556], [2035, 1528, 2109, 1557], [2124, 1528, 2174, 1556], [376, 1579, 503, 1616], [515, 1580, 570, 1607], [582, 1579, 713, 1613], [727, 1579, 784, 1607], [797, 1579, 910, 1608], [921, 1579, 994, 1607], [1007, 1583, 1060, 1607], [1070, 1579, 1186, 1616], [1198, 1579, 1301, 1616], [1315, 1588, 1372, 1616], [1383, 1579, 1666, 1616], [1680, 1579, 1746, 1607], [1759, 1579, 1926, 1616], [1939, 1579, 1975, 1607], [1988, 1579, 2178, 1616], [373, 1676, 557, 1714], [569, 1676, 588, 1706], [600, 1677, 787, 1714], [798, 1677, 969, 1705], [982, 1695, 1003, 1697], [1014, 1677, 1149, 1714], [1163, 1677, 1315, 1705], [1328, 1677, 1410, 1712], [417, 1733, 541, 1770], [559, 1743, 603, 1769], [615, 1743, 648, 1768], [663, 1734, 727, 1762], [730, 1733, 779, 1761], [792, 1733, 964, 1761], [977, 1733, 1013, 1761], [1023, 1742, 1108, 1761], [1121, 1733, 1315, 1761], [1327, 1733, 1472, 1767], [1486, 1733, 1571, 1770], [1582, 1733, 1679, 1770], [1691, 1742, 1714, 1769], [1731, 1739, 1752, 1763], [1768, 1733, 1816, 1761], [1822, 1757, 1827, 1761], [417, 1784, 563, 1812], [576, 1793, 612, 1819], [630, 1790, 651, 1814], [667, 1784, 715, 1812], [721, 1784, 839, 1818], [417, 1835, 526, 1863], [538, 1835, 587, 1863], [599, 1835, 758, 1872], [770, 1835, 950, 1872], [459, 1896, 539, 1930], [545, 1920, 552, 1923], [542, 1925, 566, 1940], [578, 1893, 627, 1934], [654, 1880, 691, 1900], [657, 1909, 685, 1918], [714, 1900, 896, 1938], [906, 1893, 972, 1934], [986, 1900, 1014, 1927], [1027, 1893, 1076, 1934], [459, 1964, 540, 2009], [552, 1961, 601, 2002], [628, 1949, 665, 1969], [631, 1977, 659, 1986], [688, 1973, 708, 1992], [723, 1973, 870, 2006], [880, 1961, 941, 2002], [460, 2032, 539, 2067], [546, 2057, 553, 2060], [542, 2062, 566, 2077], [578, 2029, 627, 2070], [654, 2017, 692, 2037], [658, 2045, 686, 2054], [714, 2032, 814, 2067], [821, 2057, 828, 2060], [817, 2062, 841, 2077], [854, 2029, 990, 2070], [460, 2101, 540, 2145], [552, 2098, 601, 2139], [628, 2085, 666, 2105], [632, 2114, 660, 2123], [688, 2101, 789, 2145], [802, 2098, 938, 2139], [417, 2151, 510, 2181], [523, 2152, 663, 2189], [675, 2152, 791, 2180], [803, 2156, 856, 2180], [867, 2156, 928, 2180], [939, 2152, 981, 2181], [480, 2211, 553, 2240], [571, 2215, 599, 2224], [621, 2195, 632, 2214], [620, 2226, 633, 2245], [655, 2195, 746, 2245], [752, 2227, 759, 2230], [749, 2232, 773, 2247], [783, 2202, 863, 2247], [883, 2202, 943, 2233], [945, 2195, 1007, 2245], [479, 2253, 652, 2284], [417, 2304, 480, 2333], [492, 2303, 585, 2333], [418, 2354, 575, 2399], [587, 2352, 658, 2393], [712, 2364, 735, 2383], [749, 2368, 777, 2377], [792, 2355, 872, 2389], [879, 2379, 886, 2382], [875, 2384, 899, 2400], [912, 2352, 970, 2393], [417, 2406, 541, 2435], [555, 2405, 594, 2434], [613, 2405, 761, 2434], [376, 2578, 456, 2608], [499, 2578, 882, 2616], [894, 2579, 1030, 2608], [1043, 2578, 1079, 2608], [1088, 2578, 1284, 2616], [1298, 2578, 1460, 2614], [374, 2658, 526, 2695], [538, 2667, 626, 2695], [638, 2658, 724, 2686], [736, 2658, 892, 2695], [904, 2667, 935, 2686], [949, 2667, 965, 2686], [975, 2658, 1132, 2695], [1144, 2658, 1300, 2695], [1311, 2658, 1358, 2686], [1370, 2658, 1487, 2695], [1498, 2658, 1648, 2695], [1661, 2658, 1813, 2695], [1825, 2658, 1873, 2686], [1886, 2658, 2101, 2686], [2113, 2658, 2148, 2686], [2158, 2667, 2174, 2686], [376, 2708, 486, 2736], [498, 2708, 628, 2745], [641, 2707, 662, 2745], [668, 2705, 715, 2746], [731, 2712, 759, 2739], [771, 2705, 872, 2746], [887, 2708, 959, 2737], [972, 2708, 997, 2736], [1010, 2717, 1026, 2736], [1038, 2708, 1131, 2736], [1142, 2712, 1279, 2745], [1293, 2708, 1366, 2742], [1380, 2708, 1429, 2736], [1441, 2708, 1797, 2745], [1808, 2708, 1935, 2736], [1947, 2708, 1983, 2736], [1991, 2708, 2172, 2745], [376, 2768, 431, 2787], [442, 2759, 481, 2787], [493, 2759, 619, 2796], [631, 2768, 661, 2787], [675, 2759, 795, 2796], [808, 2759, 940, 2796], [954, 2763, 1082, 2796], [1094, 2759, 1142, 2787], [1154, 2759, 1272, 2796], [1285, 2759, 1334, 2787], [1345, 2759, 1577, 2787], [1589, 2759, 1808, 2787], [1820, 2759, 1856, 2787], [1866, 2768, 1882, 2787], [1895, 2768, 1962, 2787], [1973, 2759, 2009, 2787], [2018, 2759, 2179, 2787], [374, 2810, 444, 2838], [458, 2814, 583, 2847], [595, 2810, 672, 2838], [686, 2810, 774, 2839], [785, 2814, 815, 2838], [828, 2810, 1036, 2847], [1049, 2819, 1065, 2838], [1076, 2810, 1212, 2847], [1223, 2810, 1254, 2838], [1265, 2810, 1313, 2838], [1325, 2810, 1404, 2838], [1415, 2810, 1502, 2844], [1516, 2804, 1586, 2849], [1559, 2832, 1609, 2851], [1622, 2807, 1710, 2848], [1725, 2810, 1786, 2838], [1800, 2819, 1816, 2838], [1829, 2810, 2028, 2847], [2039, 2810, 2175, 2847], [1255, 2935, 1295, 2964], [373, 239, 557, 277], [571, 239, 609, 269], [621, 242, 789, 276], [800, 242, 940, 268], [950, 242, 1065, 268], [1076, 242, 1108, 268], [1116, 242, 1280, 276], [1293, 243, 1435, 275], [417, 296, 1090, 333], [1096, 320, 1101, 324], [417, 346, 563, 374], [576, 355, 616, 382], [633, 359, 661, 368], [677, 340, 710, 374], [700, 346, 1198, 386], [417, 396, 510, 426], [523, 397, 663, 434], [675, 397, 814, 425], [826, 401, 879, 425], [890, 401, 952, 425], [962, 397, 1004, 426], [480, 468, 558, 496], [576, 472, 604, 481], [624, 447, 666, 471], [671, 443, 728, 472], [706, 460, 748, 474], [755, 443, 787, 472], [790, 438, 797, 452], [790, 460, 798, 473], [804, 447, 862, 471], [866, 438, 873, 452], [865, 443, 887, 473], [715, 482, 800, 507], [898, 483, 903, 487], [479, 509, 958, 547], [543, 555, 575, 589], [565, 581, 575, 599], [593, 574, 621, 583], [636, 570, 735, 597], [724, 587, 767, 614], [777, 558, 819, 599], [830, 553, 841, 572], [828, 555, 887, 609], [878, 581, 888, 599], [903, 565, 931, 592], [945, 558, 1039, 599], [542, 618, 579, 652], [570, 644, 621, 666], [639, 637, 667, 646], [682, 633, 761, 662], [777, 628, 805, 655], [817, 618, 889, 662], [878, 644, 929, 666], [946, 641, 972, 642], [986, 621, 1080, 662], [479, 675, 542, 704], [554, 674, 605, 704], [479, 726, 641, 757], [417, 777, 480, 806], [492, 776, 585, 806], [417, 828, 541, 857], [555, 837, 591, 862], [375, 975, 415, 1012], [427, 975, 615, 1012], [628, 984, 793, 1003], [806, 975, 983, 1003], [997, 975, 1054, 1003], [1066, 975, 1286, 1012], [1299, 975, 1381, 1003], [1392, 975, 1454, 1003], [1467, 975, 1516, 1003], [1528, 975, 1677, 1012], [1688, 975, 1815, 1012], [1829, 975, 2007, 1012], [2019, 976, 2174, 1012], [376, 1025, 562, 1062], [557, 1146, 624, 1174], [581, 1186, 599, 1199], [690, 1109, 717, 1122], [676, 1135, 732, 1193], [678, 1204, 728, 1223], [743, 1143, 830, 1184], [848, 1159, 876, 1168], [937, 1146, 1004, 1174], [891, 1186, 951, 1205], [959, 1186, 1047, 1205], [1116, 1109, 1143, 1122], [1101, 1135, 1157, 1193], [1103, 1204, 1154, 1223], [1168, 1143, 1265, 1184], [1313, 1150, 1410, 1180], [1428, 1155, 1735, 1182], [848, 1294, 876, 1311], [937, 1285, 1004, 1313], [891, 1324, 951, 1343], [959, 1324, 1047, 1343], [1090, 1294, 1165, 1313], [1059, 1324, 1193, 1343], [1261, 1248, 1288, 1261], [1247, 1273, 1303, 1331], [1249, 1342, 1299, 1361], [1319, 1264, 1436, 1339], [1451, 1289, 1479, 1316], [1492, 1294, 1518, 1313], [1520, 1275, 1542, 1295], [1520, 1282, 1732, 1323], [1749, 1266, 1769, 1293], [1750, 1313, 1767, 1341], [1780, 1282, 1828, 1323], [1844, 1302, 1870, 1303], [1885, 1282, 1946, 1323], [1952, 1264, 1989, 1339], [374, 1409, 438, 1437], [450, 1409, 574, 1437], [585, 1409, 655, 1437], [666, 1409, 814, 1446], [826, 1413, 857, 1437], [870, 1409, 955, 1438], [967, 1409, 1025, 1437], [1037, 1409, 1175, 1446], [1186, 1409, 1227, 1446], [1240, 1409, 1416, 1446], [1429, 1413, 1510, 1446], [1522, 1409, 1558, 1437], [1567, 1409, 1788, 1437], [1800, 1418, 1840, 1437], [1853, 1418, 1887, 1443], [1901, 1409, 2122, 1437], [2134, 1418, 2174, 1437], [376, 1469, 464, 1497], [477, 1469, 508, 1494], [514, 1484, 520, 1494], [535, 1460, 592, 1488], [605, 1469, 621, 1488], [633, 1460, 769, 1497], [781, 1464, 845, 1497], [857, 1469, 897, 1488], [909, 1469, 997, 1497], [1010, 1469, 1047, 1494], [1054, 1484, 1059, 1488], [438, 1512, 472, 1539], [487, 1510, 548, 1545], [565, 1520, 582, 1539], [593, 1511, 738, 1548], [749, 1511, 840, 1548], [853, 1511, 911, 1539], [925, 1511, 1051, 1539], [1062, 1520, 1125, 1540], [1138, 1511, 1300, 1548], [1312, 1515, 1342, 1539], [1356, 1511, 1442, 1540], [1455, 1511, 1718, 1539], [1731, 1511, 1915, 1548], [1929, 1512, 1984, 1539], [1997, 1511, 2083, 1546], [2100, 1511, 2173, 1539], [377, 1562, 524, 1599], [536, 1562, 648, 1599], [661, 1562, 779, 1599], [792, 1566, 821, 1590], [834, 1562, 881, 1590], [894, 1571, 976, 1590], [988, 1562, 1106, 1599], [1118, 1562, 1263, 1599], [1277, 1562, 1410, 1599], [1422, 1562, 1599, 1591], [1609, 1562, 1703, 1590], [1713, 1562, 1882, 1590], [1893, 1562, 1962, 1590], [1975, 1562, 2061, 1597], [2074, 1562, 2113, 1599], [2126, 1562, 2173, 1590], [376, 1612, 618, 1640], [497, 1711, 592, 1740], [599, 1699, 649, 1740], [669, 1712, 706, 1730], [722, 1702, 846, 1739], [774, 1750, 792, 1763], [904, 1695, 915, 1714], [903, 1694, 1083, 1745], [1070, 1706, 1126, 1741], [1139, 1684, 1225, 1749], [1198, 1736, 1248, 1755], [1261, 1712, 1288, 1737], [1296, 1699, 1360, 1740], [667, 1834, 695, 1851], [756, 1825, 823, 1853], [710, 1864, 866, 1883], [908, 1834, 984, 1853], [878, 1864, 1012, 1883], [1072, 1817, 1083, 1836], [1071, 1816, 1251, 1867], [1238, 1829, 1294, 1863], [1322, 1788, 1349, 1801], [1307, 1813, 1363, 1871], [1310, 1883, 1360, 1902], [1379, 1805, 1496, 1880], [1512, 1829, 1540, 1856], [1552, 1834, 1578, 1853], [1580, 1815, 1602, 1835], [1580, 1822, 1792, 1863], [1810, 1807, 1830, 1834], [1811, 1853, 1828, 1881], [1840, 1822, 1889, 1863], [1905, 1842, 1931, 1843], [1945, 1822, 2006, 1863], [2012, 1805, 2050, 1880], [374, 1949, 438, 1977], [453, 1953, 534, 1986], [548, 1949, 596, 1977], [609, 1949, 767, 1986], [782, 1958, 799, 1977], [812, 1949, 946, 1977], [959, 1949, 1031, 1977], [1044, 1949, 1151, 1978], [1166, 1958, 1198, 1977], [1212, 1949, 1387, 1986], [1404, 1949, 1449, 1978], [1470, 1949, 1593, 1978], [1606, 1953, 1637, 1977], [1650, 1949, 1777, 1977], [1791, 1949, 1944, 1977], [1958, 1949, 2099, 1986], [2114, 1949, 2173, 1977], [377, 2000, 526, 2037], [539, 2000, 642, 2029], [656, 2000, 832, 2037], [844, 2000, 893, 2028], [904, 2004, 1132, 2037], [1143, 2000, 1179, 2028], [1188, 2000, 1263, 2028], [1275, 2000, 1411, 2028], [1424, 2010, 1451, 2034], [1466, 2000, 1497, 2028], [1508, 2000, 1641, 2037], [376, 2110, 457, 2140], [500, 2111, 584, 2140], [596, 2110, 769, 2148], [781, 2111, 928, 2140], [374, 2190, 512, 2218], [524, 2190, 632, 2227], [645, 2190, 681, 2218], [692, 2190, 879, 2227], [892, 2194, 923, 2218], [937, 2190, 1023, 2219], [1037, 2190, 1113, 2225], [1127, 2190, 1152, 2218], [1166, 2194, 1197, 2218], [1210, 2194, 1354, 2227], [1366, 2190, 1416, 2218], [1429, 2190, 1533, 2227], [1545, 2190, 1711, 2227], [1724, 2194, 1864, 2227], [1875, 2190, 1966, 2227], [1979, 2190, 2029, 2218], [2041, 2190, 2174, 2218], [376, 2241, 462, 2269], [476, 2250, 584, 2279], [573, 2274, 580, 2288], [594, 2265, 599, 2269], [617, 2241, 690, 2269], [704, 2250, 761, 2269], [772, 2241, 811, 2269], [825, 2241, 1051, 2278], [1065, 2241, 1096, 2269], [1109, 2241, 1235, 2278], [1249, 2241, 1350, 2270], [1363, 2241, 1434, 2269], [1446, 2245, 1679, 2278], [1691, 2241, 1716, 2269], [1730, 2241, 1827, 2269], [1839, 2245, 1870, 2269], [1883, 2245, 2027, 2278], [2040, 2241, 2112, 2269], [2124, 2241, 2174, 2269], [375, 2292, 484, 2329], [496, 2296, 645, 2329], [659, 2292, 804, 2329], [817, 2292, 1071, 2320], [1082, 2292, 1238, 2329], [1251, 2301, 1300, 2320], [1313, 2301, 1351, 2320], [1363, 2292, 1499, 2320], [1511, 2292, 1547, 2320], [1558, 2292, 1633, 2320], [1646, 2301, 1663, 2320], [1675, 2292, 1794, 2329], [1808, 2292, 1867, 2320], [1879, 2292, 1947, 2320], [1960, 2292, 2173, 2329], [376, 2342, 432, 2370], [447, 2342, 596, 2379], [608, 2342, 656, 2370], [667, 2342, 742, 2370], [755, 2342, 936, 2379], [948, 2342, 1076, 2371], [1089, 2342, 1114, 2370], [1127, 2342, 1323, 2371], [438, 2393, 559, 2427], [573, 2393, 603, 2421], [615, 2393, 665, 2421], [677, 2397, 799, 2421], [810, 2393, 846, 2421], [855, 2393, 956, 2430], [967, 2393, 1145, 2430], [1158, 2402, 1175, 2421], [1185, 2393, 1313, 2430], [1325, 2393, 1460, 2430], [1473, 2393, 1623, 2430], [1636, 2393, 1661, 2421], [1674, 2393, 1763, 2430], [1775, 2393, 1816, 2430], [1828, 2393, 2010, 2422], [2023, 2393, 2082, 2421], [2093, 2393, 2176, 2421], [379, 2444, 452, 2478], [465, 2444, 565, 2473], [577, 2444, 717, 2472], [729, 2453, 745, 2472], [756, 2444, 894, 2481], [906, 2444, 936, 2472], [948, 2444, 998, 2472], [1010, 2444, 1089, 2472], [1072, 2534, 1139, 2562], [1096, 2574, 1114, 2587], [1190, 2534, 1219, 2562], [1225, 2531, 1320, 2572], [1335, 2538, 1363, 2565], [1376, 2531, 1475, 2572], [376, 2635, 424, 2663], [439, 2635, 479, 2663], [496, 2644, 582, 2663], [597, 2635, 693, 2663], [707, 2639, 854, 2672], [872, 2635, 901, 2663], [902, 2659, 906, 2671], [918, 2634, 948, 2664], [963, 2644, 1081, 2664], [1096, 2635, 1468, 2664], [1484, 2635, 1648, 2663], [1674, 2635, 1818, 2672], [1834, 2644, 1851, 2663], [1866, 2639, 1996, 2672], [2013, 2635, 2128, 2663], [2143, 2639, 2173, 2663], [374, 2685, 506, 2713], [519, 2694, 556, 2713], [568, 2685, 738, 2722], [750, 2685, 854, 2713], [864, 2685, 950, 2722], [960, 2685, 1098, 2722], [1110, 2694, 1166, 2713], [1177, 2685, 1216, 2713], [1227, 2685, 1377, 2719], [943, 2775, 1010, 2803], [967, 2815, 985, 2828], [1019, 2784, 1094, 2803], [1047, 2815, 1065, 2834], [1141, 2772, 1236, 2813], [1241, 2766, 1263, 2786], [1267, 2772, 1517, 2813], [1521, 2772, 1532, 2785], [1541, 2772, 1604, 2813], [1255, 2935, 1291, 2963], [374, 242, 446, 271], [458, 242, 487, 270], [492, 241, 503, 254], [519, 251, 634, 271], [645, 242, 803, 279], [815, 242, 851, 270], [861, 242, 890, 270], [894, 266, 898, 270], [915, 242, 986, 270], [998, 242, 1135, 279], [1146, 242, 1171, 270], [1184, 242, 1253, 270], [1266, 242, 1370, 271], [1381, 242, 1422, 279], [1434, 242, 1607, 279], [1620, 242, 1844, 270], [1856, 251, 1896, 270], [1907, 251, 1930, 278], [1945, 242, 2002, 270], [2013, 242, 2180, 270], [376, 292, 438, 320], [450, 301, 490, 320], [503, 301, 526, 320], [540, 292, 667, 329], [679, 292, 842, 329], [855, 296, 944, 329], [959, 301, 989, 320], [999, 394, 1075, 422], [1093, 398, 1121, 407], [1136, 394, 1260, 423], [1264, 405, 1273, 414], [1285, 382, 1333, 423], [1347, 389, 1375, 416], [1389, 385, 1454, 413], [1457, 382, 1509, 423], [997, 457, 1075, 485], [1093, 461, 1121, 470], [1136, 445, 1317, 487], [1333, 465, 1359, 466], [1372, 448, 1436, 476], [1440, 445, 1451, 458], [1457, 445, 1549, 486], [1002, 514, 1017, 516], [997, 520, 1075, 548], [1093, 524, 1121, 533], [1137, 520, 1214, 548], [1230, 515, 1258, 542], [1272, 508, 1386, 549], [1403, 528, 1429, 529], [1443, 508, 1507, 549], [374, 604, 472, 633], [485, 604, 525, 632], [530, 603, 541, 616], [557, 604, 581, 632], [595, 604, 643, 632], [655, 604, 812, 641], [824, 608, 977, 641], [989, 604, 1025, 632], [1035, 604, 1075, 632], [1079, 628, 1083, 632], [1101, 614, 1123, 632], [1126, 628, 1132, 638], [1146, 614, 1166, 632], [1180, 604, 1237, 632], [1250, 603, 1267, 632], [1281, 613, 1328, 632], [1341, 604, 1499, 641], [1509, 608, 1686, 641], [1700, 604, 1760, 632], [1773, 604, 1879, 632], [1890, 604, 1928, 632], [1940, 604, 2033, 632], [2045, 604, 2174, 632], [375, 654, 471, 682], [483, 663, 570, 682], [581, 654, 701, 682], [717, 654, 777, 688], [791, 654, 966, 691], [981, 654, 1007, 688], [1023, 663, 1057, 682], [1067, 654, 1241, 691], [1252, 663, 1342, 691], [1355, 654, 1495, 682], [1506, 654, 1631, 691], [1642, 663, 1698, 682], [1710, 654, 1746, 682], [1756, 654, 1911, 691], [1923, 654, 2085, 691], [2097, 654, 2133, 682], [2144, 653, 2174, 683], [379, 705, 438, 739], [451, 705, 620, 742], [631, 705, 672, 739], [685, 705, 826, 742], [839, 705, 869, 733], [882, 714, 918, 733], [931, 705, 1125, 742], [1138, 705, 1257, 733], [1270, 705, 1359, 733], [1371, 705, 1401, 733], [1413, 705, 1461, 733], [1474, 705, 1548, 742], [1561, 705, 1596, 733], [1604, 705, 1713, 734], [1728, 705, 1799, 739], [1816, 705, 1878, 733], [1890, 705, 2000, 734], [2012, 705, 2173, 742], [376, 765, 433, 784], [447, 756, 512, 784], [525, 756, 564, 784], [578, 756, 686, 785], [698, 760, 729, 784], [742, 756, 781, 784], [796, 765, 833, 784], [846, 756, 983, 784], [997, 756, 1033, 784], [1042, 756, 1296, 793], [1309, 756, 1453, 790], [1468, 756, 1569, 785], [1583, 756, 1633, 784], [1645, 756, 1912, 793], [1926, 756, 1952, 784], [1966, 756, 2057, 793], [2069, 756, 2110, 793], [2124, 756, 2174, 784], [377, 807, 560, 844], [573, 807, 609, 835], [619, 816, 636, 835], [646, 807, 811, 844], [824, 811, 889, 844], [901, 807, 949, 835], [961, 807, 1010, 835], [1022, 807, 1252, 835], [1264, 807, 1300, 835], [1309, 816, 1332, 843], [1347, 807, 1478, 842], [1489, 807, 1525, 835], [1535, 807, 1584, 835], [1595, 807, 1662, 835], [1674, 807, 1745, 835], [1757, 807, 1894, 844], [1906, 811, 1971, 844], [1983, 807, 2019, 835], [2029, 807, 2175, 842], [377, 858, 433, 886], [445, 858, 493, 886], [506, 858, 648, 895], [660, 858, 743, 895], [756, 860, 788, 886], [805, 859, 883, 886], [896, 858, 959, 886], [970, 858, 1038, 887], [1050, 858, 1210, 895], [1223, 858, 1247, 886], [1260, 858, 1420, 895], [1432, 867, 1502, 887], [1513, 858, 1561, 886], [1574, 858, 1643, 886], [1655, 858, 1684, 886], [1689, 857, 1700, 870], [1716, 858, 1831, 886], [1842, 858, 1878, 886], [1887, 858, 1935, 886], [1946, 858, 2052, 895], [2064, 867, 2168, 896], [2175, 882, 2179, 886], [437, 909, 520, 942], [533, 908, 589, 936], [602, 908, 841, 945], [853, 912, 978, 945], [990, 917, 1046, 936], [1056, 908, 1093, 936], [1107, 908, 1224, 945], [1235, 908, 1282, 936], [1294, 917, 1377, 936], [1389, 908, 1535, 936], [1548, 908, 1584, 936], [1591, 908, 1737, 945], [1750, 908, 1883, 945], [1896, 908, 1972, 943], [1985, 908, 2072, 937], [2083, 908, 2131, 936], [2143, 918, 2171, 943], [376, 963, 465, 987], [479, 959, 567, 988], [580, 959, 629, 987], [640, 959, 799, 996], [810, 959, 1014, 996], [925, 1077, 952, 1090], [911, 1102, 967, 1160], [913, 1172, 963, 1191], [977, 1111, 1064, 1152], [1081, 1127, 1109, 1136], [1125, 1114, 1154, 1142], [1174, 1044, 1197, 1119], [1174, 1119, 1179, 1144], [1174, 1144, 1197, 1219], [1213, 1044, 1226, 1119], [1213, 1119, 1215, 1144], [1213, 1144, 1226, 1219], [1256, 1049, 1308, 1084], [1281, 1118, 1286, 1122], [1281, 1134, 1286, 1138], [1281, 1151, 1286, 1155], [1249, 1178, 1316, 1212], [1340, 1044, 1354, 1119], [1351, 1119, 1354, 1144], [1340, 1123, 1399, 1219], [1403, 1044, 1426, 1119], [1422, 1119, 1426, 1144], [1403, 1127, 1480, 1219], [1495, 1111, 1637, 1152], [374, 1267, 474, 1296], [486, 1267, 559, 1295], [572, 1271, 625, 1295], [635, 1267, 708, 1295], [720, 1267, 750, 1295], [763, 1267, 883, 1304], [894, 1267, 947, 1295], [957, 1267, 1045, 1295], [1058, 1267, 1106, 1295], [1117, 1267, 1165, 1295], [1178, 1268, 1231, 1295], [1245, 1267, 1320, 1302], [1334, 1267, 1422, 1296], [1434, 1267, 1536, 1304], [1548, 1267, 1597, 1295], [1609, 1267, 1758, 1295], [975, 1356, 1061, 1397], [1078, 1356, 1314, 1397], [1332, 1372, 1360, 1381], [1382, 1352, 1393, 1371], [1381, 1351, 1561, 1402], [1548, 1379, 1573, 1398], [1024, 1452, 1106, 1480], [1130, 1420, 1276, 1520], [1165, 1478, 1277, 1509], [1300, 1420, 1336, 1520], [374, 1567, 445, 1596], [458, 1567, 494, 1595], [507, 1567, 555, 1595], [568, 1567, 763, 1604], [776, 1567, 881, 1595], [894, 1576, 924, 1595], [936, 1567, 1048, 1601], [1063, 1571, 1091, 1598], [1104, 1567, 1226, 1595], [1239, 1567, 1410, 1595], [1420, 1567, 1553, 1604], [1567, 1567, 1624, 1595], [1637, 1576, 1660, 1595], [1674, 1576, 1690, 1595], [1702, 1567, 1912, 1596], [1924, 1567, 1960, 1595], [1968, 1567, 2016, 1595], [2029, 1567, 2076, 1595], [2089, 1567, 2179, 1604], [374, 1618, 438, 1646], [450, 1618, 568, 1646], [582, 1618, 678, 1647], [690, 1627, 746, 1646], [758, 1618, 828, 1646], [840, 1618, 878, 1646], [891, 1618, 1013, 1655], [1024, 1618, 1128, 1655], [1145, 1618, 1309, 1655], [1321, 1627, 1393, 1647], [1406, 1617, 1436, 1647], [1448, 1618, 1473, 1646], [1486, 1618, 1583, 1647], [1596, 1618, 1655, 1646], [1665, 1618, 1829, 1655], [1841, 1627, 1913, 1647], [1926, 1618, 1955, 1646], [1959, 1617, 1970, 1630], [1987, 1618, 2012, 1646], [2026, 1618, 2090, 1646], [2103, 1627, 2175, 1655], [375, 1678, 457, 1706], [468, 1669, 612, 1706], [625, 1669, 686, 1697], [697, 1678, 816, 1714], [824, 1687, 833, 1696], [824, 1702, 833, 1716], [854, 1682, 882, 1691], [897, 1678, 1096, 1717], [1116, 1682, 1144, 1691], [1159, 1669, 1303, 1711], [1310, 1693, 1316, 1703], [1330, 1669, 1429, 1698], [1442, 1669, 1466, 1697], [1481, 1669, 1586, 1698], [1598, 1669, 1725, 1706], [1737, 1669, 1952, 1706], [438, 1719, 466, 1747], [478, 1719, 712, 1756], [724, 1719, 759, 1747], [769, 1719, 825, 1747], [840, 1719, 989, 1756], [1001, 1719, 1026, 1747], [1039, 1719, 1197, 1756], [1208, 1719, 1249, 1756], [1261, 1719, 1380, 1748], [1394, 1719, 1467, 1753], [1481, 1719, 1551, 1748], [1563, 1719, 1717, 1747], [975, 1843, 1043, 1871], [999, 1883, 1017, 1896], [1094, 1840, 1172, 1881], [1188, 1847, 1216, 1874], [1228, 1840, 1304, 1881], [1319, 1847, 1347, 1874], [1375, 1806, 1402, 1819], [1361, 1831, 1417, 1889], [1363, 1901, 1413, 1920], [1427, 1853, 1454, 1877], [1462, 1840, 1571, 1881], [377, 1985, 394, 2004], [405, 1976, 546, 2013], [559, 1976, 622, 2004], [634, 1976, 754, 2013], [768, 1976, 818, 2004], [832, 1976, 896, 2004], [911, 1976, 986, 2011], [1001, 1976, 1075, 2005], [1089, 1975, 1110, 2013], [1116, 1973, 1167, 2014], [1188, 1989, 1216, 1998], [1240, 1969, 1251, 1988], [1239, 1970, 1419, 2019], [1406, 1973, 1660, 2015], [1678, 1976, 2175, 2013], [377, 2027, 508, 2055], [520, 2027, 544, 2055], [557, 2027, 708, 2064], [721, 2036, 752, 2055], [781, 2157, 796, 2159], [777, 2164, 800, 2183], [803, 2146, 854, 2168], [872, 2168, 900, 2177], [915, 2164, 1043, 2199], [1092, 2164, 1115, 2183], [1118, 2147, 1128, 2165], [1144, 2172, 1170, 2173], [1184, 2165, 1204, 2183], [1208, 2152, 1306, 2193], [1309, 2147, 1319, 2165], [1325, 2152, 1411, 2193], [1436, 2118, 1463, 2131], [1422, 2143, 1478, 2201], [1424, 2213, 1474, 2232], [1489, 2151, 1532, 2183], [1519, 2164, 1564, 2193], [1566, 2147, 1576, 2165], [1566, 2174, 1575, 2193], [1581, 2110, 1603, 2235], [769, 2263, 961, 2297], [964, 2252, 1221, 2298], [1224, 2253, 1234, 2271], [781, 2331, 796, 2333], [775, 2337, 801, 2356], [803, 2320, 854, 2342], [803, 2349, 812, 2368], [872, 2341, 900, 2350], [915, 2337, 1047, 2367], [1037, 2362, 1044, 2376], [1058, 2325, 1097, 2366], [1099, 2321, 1109, 2339], [1099, 2325, 1476, 2367], [1522, 2327, 1779, 2364], [775, 2410, 801, 2429], [803, 2392, 854, 2414], [803, 2422, 812, 2441], [872, 2404, 963, 2438], [965, 2392, 1016, 2414], [965, 2422, 974, 2441], [1032, 2398, 1223, 2439], [1226, 2394, 1236, 2412], [1226, 2420, 1235, 2439], [1281, 2400, 1538, 2437], [376, 2494, 424, 2522], [436, 2504, 456, 2522], [460, 2518, 464, 2530], [475, 2504, 495, 2531], [507, 2498, 691, 2531], [705, 2494, 741, 2522], [751, 2494, 801, 2522], [815, 2494, 986, 2531], [1004, 2494, 1105, 2522], [1118, 2494, 1263, 2531], [1277, 2494, 1335, 2522], [1348, 2494, 1517, 2531], [1530, 2498, 1560, 2522], [1574, 2494, 1623, 2522], [1637, 2495, 1692, 2522], [1705, 2494, 1753, 2529], [1769, 2507, 1797, 2516], [1815, 2494, 1841, 2528], [1856, 2504, 1888, 2528], [1897, 2491, 1948, 2532], [1967, 2507, 1995, 2516], [2009, 2494, 2175, 2531], [376, 2553, 448, 2573], [458, 2553, 547, 2578], [560, 2554, 593, 2579], [601, 2541, 652, 2582], [670, 2557, 698, 2566], [711, 2544, 875, 2581], [887, 2553, 960, 2573], [971, 2544, 1124, 2579], [1138, 2553, 1175, 2572], [1188, 2544, 1349, 2581], [1362, 2544, 1472, 2572], [1483, 2544, 1655, 2581], [1666, 2548, 1696, 2572], [1709, 2544, 1891, 2573], [1904, 2544, 1963, 2572], [1974, 2544, 2057, 2572], [2071, 2544, 2132, 2578], [2148, 2544, 2173, 2572], [376, 2595, 525, 2629], [539, 2595, 589, 2623], [600, 2595, 672, 2632], [685, 2595, 850, 2623], [861, 2595, 953, 2632], [965, 2595, 1026, 2623], [1036, 2595, 1107, 2623], [1119, 2595, 1168, 2623], [1180, 2595, 1316, 2632], [1327, 2595, 1362, 2623], [1373, 2594, 1394, 2632], [1407, 2595, 1431, 2623], [1444, 2595, 1528, 2629], [1542, 2595, 1658, 2623], [1670, 2595, 1705, 2623], [1715, 2595, 1764, 2623], [1776, 2604, 1881, 2634], [1895, 2595, 2059, 2632], [1255, 2935, 1295, 2963], [438, 242, 562, 279], [581, 242, 706, 270], [719, 242, 834, 270], [848, 242, 974, 270], [989, 242, 1015, 270], [1030, 242, 1080, 270], [1096, 242, 1232, 279], [1248, 242, 1402, 279], [1416, 242, 1452, 270], [1465, 242, 1677, 279], [1692, 246, 1722, 270], [1737, 242, 1765, 270], [1783, 241, 1856, 276], [1874, 242, 1976, 271], [1991, 242, 2039, 270], [2053, 252, 2087, 270], [2108, 255, 2136, 264], [2157, 242, 2174, 270], [375, 292, 522, 329], [536, 292, 585, 320], [597, 292, 755, 329], [769, 292, 911, 329], [827, 376, 894, 404], [851, 416, 869, 429], [952, 369, 963, 388], [951, 368, 1131, 419], [1118, 396, 1131, 415], [1146, 380, 1174, 407], [1186, 373, 1278, 414], [1294, 380, 1322, 407], [1334, 373, 1438, 414], [789, 467, 817, 484], [827, 458, 894, 486], [830, 492, 890, 519], [949, 450, 1104, 496], [1091, 455, 1385, 496], [1388, 453, 1396, 468], [1401, 455, 1624, 496], [1628, 453, 1636, 468], [1642, 482, 1646, 494], [789, 557, 817, 574], [827, 548, 894, 576], [830, 582, 890, 609], [903, 557, 979, 576], [932, 588, 948, 601], [1033, 540, 1189, 586], [1176, 545, 1469, 586], [1473, 543, 1481, 558], [1485, 545, 1572, 586], [1576, 539, 1598, 559], [1605, 545, 1720, 586], [1724, 543, 1732, 558], [1736, 545, 1758, 586], [789, 647, 817, 664], [827, 638, 894, 666], [851, 678, 869, 691], [903, 647, 979, 666], [932, 678, 948, 691], [1033, 630, 1189, 676], [1176, 635, 1409, 676], [1414, 635, 1425, 648], [1411, 635, 1563, 676], [1566, 629, 1588, 649], [1593, 647, 1624, 666], [374, 739, 476, 768], [489, 748, 537, 768], [549, 739, 627, 768], [640, 739, 730, 767], [742, 748, 798, 767], [811, 739, 847, 767], [858, 739, 908, 767], [921, 739, 1054, 767], [1067, 739, 1138, 767], [1151, 738, 1184, 767], [1171, 736, 1242, 778], [1262, 752, 1290, 761], [1307, 748, 1413, 774], [1427, 732, 1512, 767], [1528, 756, 1554, 757], [1569, 749, 1601, 774], [1609, 736, 1657, 777], [1662, 736, 1684, 777], [1704, 739, 1777, 767], [1790, 739, 1931, 776], [1944, 748, 2001, 767], [2013, 739, 2052, 767], [2067, 739, 2174, 768], [376, 790, 503, 827], [516, 799, 532, 818], [543, 790, 736, 827], [748, 790, 976, 818], [853, 883, 873, 902], [876, 866, 927, 888], [946, 887, 974, 896], [988, 883, 1131, 912], [1120, 907, 1130, 921], [1166, 883, 1186, 902], [1190, 867, 1200, 885], [1215, 878, 1243, 905], [1256, 867, 1335, 912], [1338, 867, 1348, 885], [1363, 878, 1391, 905], [1405, 867, 1479, 912], [1482, 867, 1492, 885], [1508, 891, 1534, 892], [1549, 883, 1572, 902], [1575, 866, 1627, 885], [1633, 871, 1659, 912], [1666, 866, 1698, 916], [850, 955, 873, 974], [876, 937, 927, 959], [946, 959, 974, 968], [988, 955, 1085, 984], [1089, 962, 1163, 991], [1167, 960, 1216, 991], [1206, 962, 1287, 993], [1320, 955, 1343, 974], [1347, 938, 1357, 956], [1373, 963, 1399, 964], [1412, 956, 1432, 974], [1435, 938, 1445, 956], [1451, 955, 1471, 974], [1474, 937, 1525, 959], [1532, 938, 1543, 988], [1560, 970, 1564, 974], [374, 1029, 437, 1057], [448, 1029, 556, 1066], [567, 1029, 730, 1066], [742, 1033, 880, 1066], [891, 1038, 962, 1058], [974, 1029, 1023, 1057], [1036, 1029, 1162, 1066], [1174, 1038, 1261, 1057], [1272, 1033, 1347, 1057], [1358, 1029, 1425, 1066], [1438, 1039, 1470, 1064], [1486, 1038, 1542, 1057], [1553, 1029, 1592, 1057], [1603, 1029, 1751, 1058], [1763, 1029, 1793, 1057], [1805, 1033, 1894, 1057], [1908, 1029, 1944, 1057], [1953, 1038, 2060, 1072], [2079, 1038, 2109, 1057], [551, 1152, 630, 1179], [632, 1170, 717, 1199], [727, 1156, 738, 1175], [726, 1168, 848, 1206], [838, 1140, 932, 1201], [949, 1156, 977, 1165], [993, 1143, 1117, 1180], [1045, 1191, 1063, 1204], [1126, 1140, 1218, 1181], [1233, 1147, 1261, 1174], [1282, 1109, 1412, 1146], [1339, 1171, 1356, 1199], [1427, 1140, 1629, 1181], [1634, 1135, 1671, 1154], [1677, 1135, 1731, 1181], [1740, 1140, 1850, 1181], [1855, 1135, 1892, 1154], [1897, 1140, 1963, 1181], [1971, 1135, 1984, 1154], [1971, 1162, 1996, 1181], [949, 1245, 977, 1254], [992, 1241, 1144, 1278], [1149, 1248, 1180, 1262], [1186, 1248, 1232, 1278], [1237, 1258, 1263, 1275], [1300, 1229, 1404, 1270], [1409, 1224, 1446, 1243], [1453, 1224, 1507, 1270], [1515, 1229, 1625, 1270], [1630, 1224, 1667, 1243], [1673, 1225, 1736, 1275], [1753, 1256, 1757, 1260], [376, 1316, 549, 1353], [565, 1316, 615, 1344], [630, 1316, 701, 1344], [717, 1320, 791, 1353], [809, 1316, 841, 1344], [856, 1316, 906, 1344], [920, 1316, 1097, 1353], [1111, 1316, 1273, 1353], [1288, 1316, 1429, 1344], [1445, 1316, 1495, 1344], [1510, 1316, 1774, 1353], [1791, 1316, 1922, 1345], [1936, 1320, 1967, 1344], [1983, 1316, 2174, 1353], [376, 1367, 425, 1395], [441, 1367, 536, 1395], [550, 1367, 587, 1395], [601, 1376, 618, 1395], [632, 1367, 728, 1395], [743, 1371, 883, 1404], [899, 1367, 935, 1401], [954, 1367, 1035, 1395], [1050, 1367, 1126, 1395], [1142, 1377, 1169, 1401], [1176, 1391, 1181, 1395], [1208, 1367, 1272, 1395], [1287, 1371, 1410, 1404], [1424, 1367, 1681, 1404], [1698, 1367, 1847, 1401], [1866, 1367, 1941, 1395], [1957, 1371, 2011, 1395], [2026, 1367, 2094, 1395], [2110, 1367, 2173, 1395], [377, 1422, 501, 1446], [513, 1418, 569, 1446], [582, 1418, 757, 1455], [771, 1418, 836, 1446], [849, 1418, 1015, 1455], [1028, 1418, 1076, 1446], [1088, 1418, 1269, 1455], [1282, 1418, 1317, 1446], [1326, 1418, 1499, 1455], [1512, 1417, 1545, 1446], [1531, 1437, 1544, 1456], [1553, 1442, 1557, 1446], [1574, 1419, 1613, 1446], [1627, 1418, 1746, 1446], [1759, 1418, 1815, 1446], [1829, 1418, 1975, 1455], [1988, 1418, 2036, 1446], [2047, 1419, 2174, 1446], [376, 1469, 618, 1506], [631, 1469, 716, 1504], [729, 1469, 754, 1497], [767, 1469, 892, 1506], [907, 1478, 937, 1497], [763, 1584, 891, 1613], [880, 1608, 890, 1622], [909, 1572, 1139, 1613], [1156, 1543, 1304, 1643], [1232, 1623, 1250, 1636], [1313, 1572, 1405, 1613], [1420, 1579, 1448, 1606], [1466, 1557, 1488, 1575], [1469, 1604, 1486, 1632], [1500, 1572, 1617, 1613], [1622, 1567, 1659, 1586], [1664, 1572, 1714, 1613], [1722, 1567, 1735, 1586], [1722, 1594, 1735, 1613], [1739, 1543, 1784, 1643], [987, 1680, 1015, 1689], [1030, 1676, 1062, 1695], [1077, 1684, 1103, 1685], [1117, 1677, 1139, 1695], [1148, 1676, 1315, 1709], [1325, 1664, 1361, 1705], [1365, 1659, 1402, 1678], [1408, 1664, 1467, 1705], [376, 1751, 441, 1779], [455, 1751, 572, 1788], [585, 1751, 633, 1779], [646, 1751, 715, 1779], [726, 1751, 886, 1788], [899, 1755, 1035, 1788], [1046, 1751, 1076, 1779], [1088, 1755, 1176, 1779], [1189, 1751, 1225, 1779], [1234, 1751, 1282, 1779], [1293, 1751, 1400, 1788], [1412, 1760, 1519, 1793], [1528, 1775, 1532, 1779], [1549, 1751, 1717, 1788], [1729, 1751, 1777, 1779], [1791, 1751, 1948, 1788], [1959, 1755, 2136, 1788], [2151, 1750, 2177, 1785], [376, 1812, 396, 1830], [409, 1802, 465, 1830], [477, 1812, 499, 1830], [503, 1826, 509, 1836], [521, 1802, 588, 1839], [600, 1811, 656, 1830], [666, 1802, 703, 1830], [716, 1802, 849, 1839], [861, 1806, 888, 1830], [899, 1811, 985, 1839], [997, 1802, 1131, 1830], [1142, 1802, 1189, 1830], [1199, 1806, 1312, 1839], [1321, 1802, 1525, 1839], [1537, 1802, 1657, 1839], [1668, 1811, 1721, 1830], [1732, 1802, 1768, 1830], [1775, 1802, 1925, 1839], [1937, 1802, 2092, 1839], [2107, 1802, 2179, 1836], [376, 1914, 436, 1949], [489, 1914, 850, 1949], [865, 1914, 931, 1949], [376, 1999, 480, 2027], [492, 1999, 554, 2027], [565, 1999, 612, 2027], [624, 2008, 640, 2027], [652, 1999, 759, 2027], [772, 1999, 810, 2027], [827, 2005, 848, 2029], [864, 1999, 926, 2027], [935, 1997, 988, 2016], [997, 2023, 1003, 2033], [1016, 1999, 1066, 2027], [1079, 1999, 1260, 2036], [1272, 1999, 1390, 2027], [1402, 1999, 1581, 2036], [1592, 1999, 1674, 2027], [1687, 1999, 1737, 2027], [1749, 1999, 1828, 2027], [460, 2106, 504, 2134], [507, 2096, 520, 2115], [505, 2130, 547, 2149], [555, 2102, 621, 2143], [641, 2115, 678, 2133], [694, 2086, 785, 2151], [753, 2138, 803, 2157], [815, 2084, 925, 2159], [933, 2080, 969, 2099], [893, 2138, 948, 2163], [986, 2102, 1093, 2145], [1110, 2122, 1136, 2123], [1149, 2115, 1206, 2145], [1216, 2073, 1316, 2159], [1330, 2109, 1358, 2136], [1372, 2086, 1462, 2151], [1430, 2138, 1485, 2163], [1496, 2084, 1607, 2159], [1614, 2080, 1651, 2099], [1575, 2138, 1625, 2157], [1667, 2102, 1774, 2145], [1791, 2122, 1817, 2123], [1830, 2115, 1888, 2145], [1897, 2073, 1996, 2159], [2003, 2129, 2007, 2133], [2097, 2105, 2173, 2140], [374, 2210, 444, 2238], [455, 2210, 631, 2247], [642, 2210, 753, 2247], [767, 2219, 783, 2238], [793, 2211, 837, 2239], [841, 2200, 873, 2220], [838, 2235, 854, 2254], [885, 2210, 1110, 2247], [1121, 2219, 1191, 2239], [1201, 2210, 1275, 2238], [1284, 2219, 1345, 2239], [1357, 2210, 1392, 2238], [1401, 2210, 1439, 2238], [1444, 2234, 1450, 2244], [1464, 2210, 1520, 2238], [1532, 2219, 1548, 2238], [1558, 2211, 1603, 2239], [1606, 2200, 1638, 2220], [1605, 2235, 1618, 2254], [1650, 2210, 1875, 2247], [1886, 2219, 1957, 2239], [1967, 2210, 2040, 2238], [2051, 2210, 2179, 2238], [376, 2260, 568, 2297], [580, 2260, 780, 2297], [793, 2260, 930, 2288], [945, 2260, 1001, 2295], [1017, 2260, 1074, 2288], [1087, 2260, 1152, 2295], [1167, 2260, 1215, 2288], [1226, 2260, 1275, 2288], [1286, 2269, 1349, 2289], [1362, 2260, 1419, 2288], [1431, 2260, 1554, 2288], [1567, 2260, 1763, 2294], [1777, 2260, 1826, 2288], [1837, 2260, 2017, 2297], [2029, 2260, 2105, 2295], [2118, 2269, 2174, 2288], [375, 2311, 413, 2339], [424, 2311, 572, 2340], [585, 2320, 616, 2339], [820, 2353, 900, 2391], [866, 2359, 982, 2406], [999, 2375, 1027, 2384], [1043, 2344, 1120, 2409], [1102, 2396, 1152, 2415], [1169, 2359, 1242, 2400], [1248, 2371, 1301, 2402], [1312, 2359, 1343, 2402], [1358, 2366, 1386, 2393], [1399, 2344, 1485, 2409], [1457, 2396, 1512, 2421], [1529, 2359, 1611, 2400], [1617, 2371, 1674, 2402], [1684, 2359, 1715, 2402], [1722, 2386, 1726, 2398], [2097, 2362, 2173, 2397], [374, 2454, 471, 2483], [484, 2463, 537, 2494], [553, 2454, 675, 2482], [687, 2454, 735, 2482], [746, 2454, 805, 2482], [815, 2463, 875, 2483], [888, 2454, 923, 2482], [932, 2454, 970, 2482], [975, 2478, 981, 2488], [995, 2454, 1051, 2482], [1063, 2463, 1121, 2494], [1136, 2454, 1171, 2482], [1182, 2454, 1247, 2491], [1258, 2454, 1386, 2482], [1403, 2454, 1464, 2482], [1476, 2454, 1706, 2491], [1718, 2444, 1798, 2483], [1763, 2479, 1805, 2498], [1811, 2454, 1981, 2491], [1992, 2454, 2128, 2491], [2139, 2454, 2163, 2482], [960, 2544, 1058, 2578], [1120, 2537, 1131, 2556], [1119, 2536, 1327, 2587], [1312, 2563, 1328, 2582], [1341, 2535, 1493, 2575], [1458, 2569, 1500, 2588], [1507, 2541, 1586, 2582], [2097, 2544, 2173, 2579], [374, 2646, 474, 2675], [486, 2655, 533, 2675], [544, 2655, 599, 2674], [611, 2646, 661, 2674], [672, 2646, 837, 2674], [850, 2655, 936, 2674], [952, 2643, 1047, 2684], [1063, 2659, 1091, 2668], [1110, 2627, 1187, 2702], [1191, 2667, 1215, 2692], [1227, 2640, 1265, 2674], [1251, 2666, 1284, 2691], [1303, 2659, 1331, 2668], [1349, 2643, 1533, 2684], [1539, 2670, 1545, 2680], [1559, 2646, 1659, 2675], [1671, 2643, 1798, 2684], [1814, 2646, 1839, 2674], [1852, 2646, 1902, 2674], [1913, 2646, 2129, 2675], [2141, 2646, 2177, 2674], [377, 2706, 425, 2734], [441, 2706, 539, 2743], [552, 2706, 637, 2741], [650, 2706, 788, 2743], [801, 2706, 877, 2741], [889, 2706, 1032, 2734], [682, 2800, 780, 2835], [841, 2793, 852, 2812], [840, 2792, 1048, 2843], [1033, 2799, 1126, 2839], [1141, 2780, 1217, 2855], [1220, 2834, 1229, 2853], [1244, 2797, 1318, 2838], [1323, 2797, 1415, 2841], [1420, 2780, 1517, 2855], [1532, 2780, 1608, 2855], [1610, 2834, 1623, 2859], [1639, 2797, 1781, 2841], [1791, 2797, 1822, 2841], [1827, 2780, 1865, 2855], [2076, 2800, 2173, 2835], [1255, 2935, 1293, 2964], [374, 242, 472, 271], [485, 242, 533, 270], [545, 242, 735, 279], [748, 242, 835, 270], [848, 242, 970, 279], [981, 242, 1042, 270], [1053, 232, 1133, 271], [1098, 267, 1140, 286], [1155, 242, 1179, 270], [1194, 251, 1210, 270], [1221, 242, 1426, 270], [1438, 242, 1473, 270], [1482, 246, 1541, 271], [1553, 242, 1755, 279], [1772, 251, 1830, 270], [1843, 242, 1940, 279], [1953, 251, 2025, 271], [2036, 242, 2084, 270], [2095, 251, 2172, 271], [377, 292, 434, 320], [446, 292, 495, 320], [507, 292, 592, 320], [603, 301, 675, 321], [686, 292, 735, 320], [747, 292, 895, 320], [911, 292, 1115, 320], [1128, 292, 1224, 327], [1238, 292, 1285, 320], [1299, 292, 1348, 320], [1360, 292, 1462, 320], [1475, 292, 1611, 321], [1621, 292, 1662, 329], [1674, 292, 1724, 320], [1737, 292, 1889, 329], [1901, 292, 2060, 329], [2073, 292, 2177, 326], [376, 343, 490, 380], [502, 343, 574, 372], [587, 352, 624, 371], [636, 343, 798, 380], [809, 343, 984, 371], [1001, 343, 1076, 371], [1088, 343, 1124, 371], [1133, 343, 1182, 371], [1194, 347, 1255, 372], [1266, 343, 1461, 380], [1473, 343, 1535, 371], [1546, 343, 1635, 371], [1646, 352, 1686, 380], [1699, 334, 1778, 372], [1744, 368, 1786, 387], [1800, 343, 1826, 371], [1839, 343, 1923, 371], [1932, 343, 2100, 380], [2112, 343, 2148, 371], [2158, 352, 2174, 371], [377, 403, 443, 422], [454, 394, 490, 422], [500, 394, 612, 423], [624, 394, 660, 429], [672, 403, 706, 422], [717, 394, 764, 429], [781, 394, 894, 422], [905, 394, 1104, 431], [1121, 395, 1287, 428], [1301, 394, 1374, 422], [1386, 394, 1421, 422], [1431, 394, 1478, 422], [1495, 394, 1538, 422], [1550, 403, 1611, 423], [1625, 394, 1772, 429], [1784, 394, 1974, 431], [1988, 398, 2121, 431], [2135, 403, 2174, 422], [377, 454, 393, 473], [404, 445, 546, 473], [556, 454, 618, 474], [631, 445, 806, 480], [821, 445, 878, 473], [890, 454, 946, 473], [958, 445, 1024, 473], [1036, 445, 1075, 473], [1088, 445, 1193, 474], [1205, 445, 1445, 482], [376, 559, 435, 594], [488, 559, 907, 603], [923, 559, 989, 594], [376, 643, 478, 680], [490, 652, 565, 672], [576, 643, 697, 680], [709, 634, 788, 672], [754, 669, 796, 688], [811, 643, 835, 671], [849, 643, 898, 671], [910, 643, 1030, 680], [1042, 643, 1331, 671], [1343, 644, 1397, 671], [1410, 643, 1495, 678], [1509, 643, 1609, 672], [1621, 652, 1668, 672], [1679, 643, 1770, 671], [1781, 643, 1887, 672], [438, 704, 493, 731], [505, 702, 531, 731], [542, 703, 581, 731], [595, 712, 633, 731], [644, 703, 781, 731], [794, 707, 897, 731], [908, 703, 940, 731], [952, 703, 980, 731], [983, 691, 1036, 720], [1013, 709, 1059, 727], [1070, 700, 1100, 721], [1109, 727, 1115, 737], [1129, 703, 1236, 732], [1248, 707, 1450, 740], [1464, 712, 1513, 731], [1526, 703, 1657, 731], [1670, 712, 1702, 731], [1715, 702, 1893, 743], [1911, 703, 1939, 738], [1956, 707, 1980, 737], [1995, 706, 2019, 740], [2038, 707, 2062, 737], [2077, 714, 2111, 740], [2127, 703, 2175, 731], [376, 753, 947, 790], [435, 882, 480, 910], [482, 879, 509, 892], [482, 906, 500, 925], [516, 878, 568, 919], [595, 866, 632, 886], [598, 894, 626, 903], [669, 844, 696, 857], [655, 870, 711, 928], [655, 939, 711, 959], [791, 870, 847, 928], [723, 939, 914, 968], [925, 843, 977, 936], [984, 837, 1021, 856], [955, 870, 1011, 928], [954, 939, 1009, 964], [1036, 878, 1209, 921], [1217, 896, 1441, 923], [1459, 898, 1485, 899], [1498, 878, 1865, 923], [1870, 879, 1901, 898], [1909, 850, 1997, 936], [2007, 905, 2011, 917], [2076, 881, 2173, 916], [374, 1019, 476, 1048], [486, 1028, 511, 1055], [525, 1032, 553, 1041], [572, 1016, 626, 1057], [641, 1043, 645, 1047], [659, 1043, 663, 1047], [678, 1043, 682, 1047], [696, 1043, 700, 1055], [710, 1016, 770, 1057], [786, 1019, 812, 1047], [826, 1028, 843, 1047], [854, 1023, 958, 1048], [970, 1019, 1006, 1047], [1016, 1019, 1128, 1047], [1139, 1029, 1177, 1055], [1196, 1021, 1222, 1053], [1241, 1019, 1265, 1047], [1282, 1019, 1355, 1047], [1368, 1019, 1570, 1056], [1583, 1023, 1614, 1047], [1627, 1019, 1772, 1056], [1786, 1028, 1803, 1047], [1818, 1019, 1935, 1047], [1947, 1023, 1977, 1047], [1990, 1019, 2066, 1047], [2078, 1019, 2114, 1047], [2124, 1019, 2174, 1047], [376, 1070, 420, 1098], [433, 1070, 523, 1098], [536, 1070, 572, 1098], [581, 1069, 607, 1098], [620, 1070, 710, 1107], [722, 1070, 796, 1098], [808, 1070, 844, 1098], [853, 1070, 902, 1098], [914, 1070, 1110, 1098], [438, 1121, 628, 1158], [641, 1121, 690, 1149], [701, 1121, 888, 1150], [899, 1118, 966, 1159], [984, 1134, 1012, 1143], [1030, 1118, 1070, 1159], [1079, 1145, 1083, 1157], [1097, 1145, 1101, 1149], [1116, 1145, 1120, 1149], [1134, 1145, 1138, 1149], [1153, 1145, 1157, 1157], [1168, 1122, 1240, 1155], [1248, 1145, 1252, 1157], [1264, 1122, 1347, 1158], [1362, 1145, 1366, 1149], [1380, 1145, 1384, 1149], [1399, 1145, 1403, 1149], [1417, 1145, 1421, 1157], [1433, 1118, 1502, 1159], [1515, 1121, 1615, 1150], [1627, 1121, 1743, 1149], [1756, 1130, 1828, 1150], [1839, 1130, 1927, 1158], [1943, 1121, 2174, 1149], [376, 1172, 451, 1200], [462, 1172, 498, 1200], [507, 1171, 533, 1200], [546, 1172, 635, 1209], [648, 1172, 697, 1200], [710, 1171, 776, 1200], [788, 1172, 968, 1206], [982, 1172, 1031, 1200], [1042, 1172, 1221, 1209], [1233, 1172, 1330, 1207], [1343, 1181, 1399, 1200], [1410, 1172, 1449, 1200], [1461, 1172, 1577, 1201], [1589, 1181, 1673, 1200], [1684, 1172, 1856, 1209], [1869, 1181, 1899, 1200], [922, 1272, 967, 1300], [968, 1269, 995, 1282], [968, 1268, 1100, 1315], [1116, 1253, 1202, 1318], [1176, 1304, 1232, 1324], [1246, 1260, 1302, 1318], [1305, 1302, 1358, 1331], [1375, 1268, 1465, 1310], [1473, 1268, 1610, 1313], [1620, 1295, 1624, 1307], [2076, 1271, 2173, 1306], [374, 1376, 471, 1405], [484, 1385, 565, 1419], [581, 1376, 702, 1404], [716, 1385, 732, 1404], [742, 1385, 803, 1405], [815, 1376, 851, 1404], [859, 1375, 885, 1404], [898, 1376, 985, 1413], [998, 1376, 1045, 1404], [1058, 1375, 1124, 1404], [1135, 1376, 1312, 1410], [1326, 1376, 1383, 1404], [1395, 1376, 1466, 1415], [1484, 1376, 1508, 1404], [1522, 1385, 1538, 1404], [1549, 1376, 1744, 1413], [1757, 1376, 1862, 1404], [1873, 1376, 1908, 1404], [1918, 1376, 2100, 1413], [2113, 1376, 2173, 1404], [376, 1427, 422, 1455], [433, 1427, 480, 1455], [496, 1427, 643, 1455], [657, 1427, 744, 1464], [756, 1427, 924, 1455], [937, 1426, 956, 1455], [969, 1427, 1017, 1462], [1027, 1427, 1087, 1455], [1099, 1437, 1139, 1461], [1144, 1427, 1164, 1462], [1180, 1427, 1242, 1455], [1254, 1427, 1484, 1464], [1496, 1427, 1810, 1455], [1822, 1427, 1981, 1464], [1992, 1427, 2128, 1464], [2138, 1427, 2163, 1455], [1009, 1518, 1097, 1552], [1125, 1511, 1136, 1530], [1124, 1510, 1307, 1560], [1292, 1517, 1438, 1556], [1439, 1516, 1466, 1529], [1439, 1543, 1457, 1562], [1474, 1515, 1538, 1556], [2076, 1518, 2173, 1553], [374, 1609, 476, 1638], [490, 1608, 511, 1638], [528, 1615, 554, 1639], [572, 1609, 589, 1638], [603, 1609, 628, 1637], [643, 1618, 660, 1637], [671, 1609, 794, 1646], [807, 1613, 982, 1646], [998, 1609, 1057, 1637], [1069, 1609, 1119, 1637], [1132, 1609, 1299, 1637], [1313, 1618, 1401, 1637], [1413, 1609, 1461, 1637], [1475, 1618, 1492, 1637], [1504, 1613, 1606, 1637], [1614, 1609, 1679, 1646], [1690, 1609, 1817, 1637], [1831, 1609, 1881, 1637], [1894, 1609, 2035, 1646], [2049, 1609, 2179, 1637], [377, 1669, 497, 1697], [510, 1669, 597, 1688], [608, 1669, 680, 1689], [691, 1660, 741, 1688], [752, 1660, 967, 1689], [979, 1660, 1015, 1688], [1025, 1660, 1098, 1688], [1110, 1664, 1216, 1688], [438, 1711, 580, 1739], [593, 1711, 689, 1746], [702, 1711, 791, 1739], [804, 1720, 877, 1748], [889, 1711, 1094, 1748], [1107, 1711, 1160, 1739], [1171, 1711, 1194, 1739], [1205, 1711, 1313, 1748], [1326, 1711, 1603, 1748], [1617, 1720, 1648, 1739], [1662, 1711, 1827, 1748], [1838, 1711, 1879, 1748], [1903, 1711, 1999, 1746], [2013, 1711, 2072, 1739], [2084, 1711, 2174, 1739], [376, 1770, 459, 1789], [471, 1761, 595, 1798], [604, 1761, 645, 1798], [657, 1761, 776, 1798], [788, 1761, 810, 1789], [822, 1770, 853, 1789], [867, 1770, 883, 1789], [896, 1770, 963, 1789], [974, 1761, 1010, 1789], [1019, 1752, 1099, 1790], [1113, 1765, 1203, 1789], [860, 1860, 948, 1895], [976, 1853, 987, 1872], [975, 1852, 1159, 1903], [1144, 1864, 1201, 1899], [1215, 1842, 1301, 1907], [1275, 1893, 1331, 1913], [1344, 1849, 1400, 1907], [1403, 1891, 1457, 1920], [1470, 1851, 1550, 1889], [1515, 1886, 1546, 1905], [1574, 1869, 1654, 1903], [1661, 1853, 1686, 1903], [2076, 1860, 2173, 1895], [374, 1965, 435, 1993], [446, 1965, 605, 2002], [617, 1965, 683, 1993], [694, 1965, 790, 2000], [803, 1974, 858, 1993], [868, 1965, 905, 1993], [916, 1965, 1057, 2002], [1069, 1974, 1099, 1993], [1112, 1965, 1159, 1993], [1172, 1974, 1238, 1993], [1249, 1965, 1284, 1993], [1292, 1975, 1326, 1993], [1338, 1965, 1497, 2002], [1509, 1969, 1606, 1999], [1619, 1965, 1692, 1993], [1703, 1965, 1739, 1993], [1747, 1965, 1845, 1994], [1856, 1965, 1966, 1993], [1977, 1965, 2173, 2002], [376, 2016, 438, 2044], [452, 2025, 468, 2044], [479, 2016, 605, 2044], [617, 2016, 652, 2044], [662, 2016, 746, 2044], [757, 2017, 802, 2045], [805, 2007, 837, 2027], [851, 2020, 951, 2044], [967, 2016, 1065, 2044], [1076, 2016, 1161, 2044], [1172, 2020, 1261, 2044], [1276, 2025, 1324, 2044], [1336, 2016, 1433, 2045], [1444, 2020, 1475, 2044], [1488, 2016, 1608, 2044], [1623, 2016, 1714, 2050], [1729, 2025, 1760, 2044], [1773, 2016, 1804, 2044], [1816, 2016, 1865, 2044], [1877, 2016, 1995, 2044], [2007, 2025, 2086, 2050], [2099, 2016, 2174, 2044], [376, 2067, 412, 2095], [421, 2067, 471, 2095], [484, 2068, 528, 2096], [532, 2057, 564, 2077], [578, 2071, 670, 2095], [683, 2071, 822, 2104], [835, 2076, 876, 2095], [888, 2067, 1032, 2095], [1043, 2067, 1154, 2095], [1167, 2067, 1203, 2095], [1213, 2066, 1248, 2095], [1265, 2067, 1439, 2104], [1451, 2067, 1501, 2095], [1514, 2077, 1548, 2095], [1561, 2067, 1659, 2104], [1671, 2071, 1772, 2101], [1786, 2076, 1834, 2096], [1846, 2076, 1904, 2095], [1915, 2067, 2027, 2095], [2039, 2067, 2123, 2095], [2134, 2067, 2175, 2104], [377, 2118, 518, 2155], [532, 2127, 588, 2155], [600, 2118, 636, 2146], [645, 2118, 694, 2146], [706, 2118, 862, 2146], [874, 2118, 1025, 2155], [1038, 2118, 1196, 2155], [1209, 2118, 1304, 2147], [1316, 2118, 1363, 2146], [1375, 2128, 1409, 2146], [1425, 2124, 1451, 2148], [1468, 2118, 1494, 2152], [1508, 2118, 1608, 2147], [1619, 2118, 1786, 2155], [1798, 2118, 1879, 2155], [1891, 2118, 1940, 2146], [1951, 2127, 2026, 2155], [2038, 2122, 2175, 2155], [376, 2168, 424, 2196], [436, 2169, 481, 2197], [482, 2166, 509, 2179], [482, 2194, 500, 2213], [524, 2168, 565, 2205], [575, 2168, 639, 2205], [650, 2168, 825, 2205], [839, 2168, 952, 2205], [965, 2159, 1045, 2197], [1059, 2177, 1136, 2205], [1149, 2172, 1314, 2205], [1333, 2169, 1419, 2196], [1431, 2168, 1633, 2205], [1647, 2168, 1722, 2196], [1734, 2168, 1886, 2205], [1900, 2168, 2038, 2205], [2052, 2168, 2111, 2196], [2124, 2168, 2174, 2196], [376, 2219, 489, 2247], [501, 2219, 743, 2256], [755, 2219, 791, 2247], [800, 2219, 849, 2247], [860, 2219, 997, 2256], [1008, 2219, 1133, 2256], [1146, 2228, 1162, 2247], [1174, 2223, 1239, 2248], [1249, 2219, 1393, 2256], [1405, 2219, 1453, 2247], [1463, 2219, 1586, 2256], [1598, 2219, 1827, 2247], [1839, 2219, 2023, 2256], [2036, 2219, 2136, 2248], [2148, 2219, 2172, 2247], [374, 2270, 513, 2299], [524, 2270, 613, 2299], [625, 2270, 745, 2307], [757, 2270, 829, 2299], [843, 2270, 916, 2298], [928, 2270, 1069, 2307], [1082, 2270, 1139, 2298], [1150, 2270, 1440, 2307], [1452, 2270, 1528, 2298], [376, 2399, 403, 2439], [465, 2398, 788, 2451], [807, 2399, 900, 2440], [917, 2398, 1235, 2451], [373, 2506, 427, 2533], [440, 2505, 504, 2534], [516, 2514, 586, 2534], [599, 2505, 783, 2533], [795, 2505, 845, 2533], [858, 2505, 1074, 2534], [1087, 2505, 1123, 2533], [1133, 2505, 1183, 2533], [1195, 2505, 1316, 2534], [1330, 2505, 1446, 2534], [1459, 2505, 1591, 2534], [1603, 2505, 1635, 2533], [1647, 2514, 1664, 2533], [1676, 2505, 1756, 2534], [1770, 2514, 1854, 2542], [1867, 2505, 1903, 2533], [1913, 2505, 2126, 2542], [2141, 2514, 2173, 2533], [374, 2556, 444, 2585], [457, 2565, 487, 2584], [501, 2556, 637, 2593], [650, 2565, 739, 2593], [751, 2556, 787, 2584], [796, 2556, 871, 2584], [881, 2556, 1023, 2593], [1036, 2556, 1240, 2593], [1257, 2557, 1310, 2584], [1322, 2556, 1385, 2585], [1398, 2560, 1467, 2584], [1477, 2556, 1518, 2593], [1530, 2556, 1669, 2593], [1683, 2565, 1722, 2584], [1734, 2556, 1783, 2584], [1795, 2557, 1839, 2585], [1843, 2547, 1875, 2567], [1843, 2575, 1854, 2594], [1889, 2556, 2036, 2590], [2050, 2556, 2173, 2593], [376, 2607, 445, 2635], [457, 2611, 488, 2635], [500, 2607, 585, 2635], [600, 2607, 714, 2635], [726, 2607, 863, 2641], [878, 2607, 935, 2635], [947, 2607, 1017, 2635], [1029, 2611, 1060, 2635], [1072, 2607, 1361, 2635], [1373, 2608, 1430, 2635], [438, 2658, 490, 2686], [506, 2658, 556, 2686], [574, 2658, 690, 2687], [707, 2658, 926, 2695], [942, 2658, 990, 2686], [1006, 2658, 1065, 2686], [1081, 2667, 1175, 2695], [1190, 2667, 1271, 2687], [1287, 2658, 1387, 2686], [1403, 2658, 1435, 2686], [1450, 2658, 1524, 2687], [1541, 2658, 1589, 2686], [1605, 2658, 1774, 2695], [1803, 2658, 1868, 2687], [1883, 2658, 2008, 2695], [2025, 2658, 2174, 2687], [376, 2708, 486, 2745], [505, 2708, 643, 2745], [661, 2708, 800, 2736], [820, 2708, 859, 2736], [878, 2708, 963, 2736], [981, 2708, 1270, 2745], [1291, 2708, 1360, 2745], [1378, 2708, 1523, 2745], [1541, 2708, 1590, 2736], [1607, 2717, 1680, 2745], [1698, 2717, 1794, 2745], [1812, 2708, 1844, 2736], [1861, 2708, 1979, 2736], [1998, 2717, 2032, 2736], [2050, 2708, 2176, 2745], [375, 2759, 932, 2796], [943, 2759, 1054, 2787], [1063, 2759, 1230, 2796], [1239, 2759, 1314, 2788], [1323, 2759, 1399, 2787], [1408, 2759, 1570, 2796], [1578, 2759, 1617, 2796], [1628, 2759, 1790, 2796], [1800, 2759, 1847, 2787], [1856, 2759, 2013, 2788], [2024, 2759, 2060, 2794], [2068, 2765, 2089, 2787], [2098, 2765, 2118, 2787], [2123, 2765, 2141, 2787], [2149, 2765, 2169, 2787], [2177, 2765, 2199, 2787], [2206, 2759, 2244, 2794], [376, 2810, 484, 2847], [500, 2810, 552, 2844], [1255, 2935, 1295, 2963], [376, 237, 434, 272], [489, 237, 544, 272], [547, 228, 584, 251], [548, 262, 560, 284], [601, 237, 859, 281], [873, 237, 952, 272], [965, 237, 1231, 281], [377, 322, 464, 351], [474, 322, 522, 350], [533, 326, 610, 350], [620, 322, 777, 359], [787, 326, 981, 359], [992, 322, 1027, 350], [1034, 322, 1082, 350], [1092, 322, 1247, 359], [1257, 322, 1392, 350], [1401, 322, 1578, 351], [1588, 331, 1634, 350], [1645, 322, 1693, 350], [1703, 322, 1834, 350], [1844, 313, 1924, 351], [1892, 341, 1903, 360], [1935, 331, 2009, 359], [2019, 326, 2178, 359], [376, 373, 416, 401], [426, 382, 461, 401], [474, 373, 564, 410], [575, 373, 616, 410], [627, 373, 828, 410], [841, 373, 917, 401], [928, 373, 1083, 410], [1094, 373, 1311, 410], [1327, 374, 1380, 401], [1392, 373, 1455, 402], [1467, 373, 1506, 401], [1520, 382, 1553, 401], [1565, 373, 1638, 401], [1650, 382, 1690, 401], [1703, 373, 1849, 410], [1863, 373, 1920, 401], [1933, 373, 2046, 401], [2058, 373, 2172, 410], [376, 424, 452, 452], [376, 534, 455, 564], [500, 534, 653, 572], [665, 534, 742, 564], [754, 535, 868, 564], [881, 534, 932, 564], [943, 534, 1101, 572], [1113, 535, 1189, 564], [373, 615, 426, 642], [438, 618, 495, 642], [506, 614, 556, 642], [568, 614, 681, 643], [694, 614, 788, 642], [800, 618, 860, 643], [873, 614, 1023, 642], [1037, 614, 1072, 642], [1083, 614, 1229, 651], [1243, 614, 1364, 651], [419, 677, 444, 712], [468, 677, 641, 714], [654, 677, 740, 714], [752, 677, 815, 705], [826, 677, 954, 714], [966, 677, 1047, 705], [1058, 687, 1081, 705], [1096, 690, 1124, 699], [1142, 671, 1193, 706], [1209, 681, 1240, 705], [1252, 687, 1275, 705], [1290, 690, 1318, 699], [1336, 670, 1389, 706], [1395, 701, 1400, 705], [1416, 677, 1445, 705], [1456, 677, 1579, 714], [1593, 676, 1614, 706], [1630, 683, 1651, 707], [1671, 674, 1706, 715], [1718, 674, 1765, 715], [1781, 677, 1807, 705], [1819, 677, 1934, 705], [1948, 681, 1977, 705], [1987, 677, 2116, 705], [2127, 677, 2175, 705], [468, 728, 542, 756], [553, 737, 616, 762], [631, 728, 688, 756], [700, 728, 750, 756], [761, 728, 829, 756], [841, 732, 943, 757], [954, 737, 977, 764], [991, 728, 1063, 757], [1074, 728, 1239, 765], [1250, 728, 1376, 756], [1388, 728, 1495, 756], [1509, 738, 1538, 765], [1556, 734, 1577, 758], [1598, 725, 1689, 766], [1702, 725, 1752, 766], [1769, 728, 2017, 765], [2030, 728, 2131, 756], [2143, 732, 2173, 756], [469, 778, 513, 814], [405, 851, 444, 886], [468, 851, 599, 888], [611, 851, 734, 888], [745, 855, 914, 888], [926, 850, 947, 880], [959, 851, 1086, 888], [1099, 851, 1180, 879], [1194, 845, 1273, 880], [1289, 851, 1468, 888], [1479, 851, 1725, 888], [1738, 855, 1769, 879], [1784, 845, 1837, 880], [1853, 851, 1915, 886], [1927, 852, 1981, 879], [1994, 855, 2071, 879], [2082, 851, 2179, 879], [468, 901, 575, 936], [588, 901, 659, 929], [671, 911, 694, 929], [706, 901, 730, 929], [745, 905, 789, 929], [800, 905, 831, 929], [846, 901, 923, 930], [937, 901, 995, 929], [1007, 911, 1036, 938], [1051, 901, 1076, 929], [1088, 901, 1247, 938], [1259, 901, 1419, 938], [1431, 901, 1461, 929], [1473, 901, 1523, 929], [1533, 910, 1625, 938], [1641, 898, 1709, 939], [1721, 898, 1747, 939], [1764, 901, 1963, 938], [807, 1693, 909, 1715], [919, 1693, 968, 1715], [640, 1653, 679, 1679], [877, 1653, 916, 1679], [1112, 1653, 1151, 1679], [450, 1405, 471, 1421], [450, 1401, 471, 1403], [456, 1376, 471, 1396], [456, 1359, 472, 1373], [450, 1343, 477, 1349], [456, 1328, 472, 1340], [450, 1320, 477, 1326], [486, 1545, 509, 1564], [516, 1539, 531, 1552], [486, 1371, 509, 1390], [516, 1364, 531, 1377], [492, 1188, 531, 1214], [711, 1049, 764, 1072], [781, 1049, 937, 1079], [949, 1049, 1026, 1073], [621, 1111, 713, 1132], [723, 1111, 796, 1128], [620, 1138, 692, 1156], [698, 1138, 809, 1160], [621, 1167, 722, 1184], [730, 1166, 840, 1188], [621, 1195, 683, 1216], [691, 1194, 801, 1216], [620, 1223, 692, 1241], [619, 1252, 703, 1269], [620, 1279, 676, 1297], [620, 1307, 692, 1325], [698, 1308, 805, 1329], [621, 1336, 740, 1357], [825, 1749, 858, 1777], [1674, 1692, 1766, 1719], [1789, 1693, 1803, 1713], [1478, 1660, 1502, 1679], [1508, 1653, 1523, 1666], [1718, 1653, 1757, 1679], [1953, 1653, 1992, 1679], [1291, 1405, 1312, 1421], [1291, 1401, 1312, 1403], [1297, 1376, 1312, 1396], [1297, 1359, 1313, 1373], [1291, 1343, 1318, 1349], [1297, 1328, 1313, 1340], [1291, 1320, 1318, 1326], [1327, 1608, 1351, 1627], [1357, 1602, 1372, 1615], [1327, 1345, 1351, 1364], [1357, 1338, 1372, 1351], [1327, 1081, 1351, 1100], [1357, 1074, 1372, 1087], [1513, 1049, 1566, 1072], [1583, 1049, 1739, 1079], [1753, 1049, 1889, 1079], [1666, 1748, 1700, 1777], [375, 1853, 480, 1890], [493, 1854, 520, 1881], [538, 1853, 677, 1890], [689, 1853, 775, 1881], [790, 1853, 833, 1888], [846, 1853, 924, 1888], [937, 1853, 984, 1881], [994, 1853, 1144, 1890], [1157, 1853, 1214, 1881], [1227, 1857, 1299, 1881], [1311, 1853, 1347, 1881], [1356, 1853, 1404, 1881], [1417, 1857, 1458, 1881], [1471, 1853, 1583, 1882], [1596, 1853, 1643, 1881], [1654, 1854, 1698, 1882], [1702, 1843, 1734, 1863], [1702, 1872, 1713, 1891], [1739, 1853, 1911, 1890], [1924, 1853, 1995, 1882], [2007, 1853, 2173, 1890], [377, 1904, 405, 1939], [418, 1904, 503, 1941], [515, 1904, 602, 1938], [614, 1904, 647, 1939], [659, 1904, 815, 1941], [831, 1904, 910, 1932], [923, 1913, 992, 1932], [1007, 1913, 1055, 1932], [1067, 1913, 1107, 1932], [1120, 1913, 1136, 1932], [1147, 1904, 1304, 1941], [437, 2004, 489, 2031], [500, 2003, 682, 2031], [692, 2003, 740, 2031], [751, 2003, 956, 2040], [968, 2003, 1003, 2031], [1012, 2003, 1060, 2031], [1072, 2003, 1227, 2040], [1239, 2003, 1384, 2037], [1398, 2003, 1549, 2040], [1561, 2003, 1633, 2031], [1644, 2012, 1698, 2031], [1708, 2003, 1862, 2040], [1876, 2003, 1932, 2031], [1945, 2007, 2016, 2031], [2029, 2003, 2064, 2031], [2073, 2003, 2120, 2031], [2134, 2007, 2174, 2031], [376, 2054, 513, 2082], [527, 2054, 622, 2082], [634, 2054, 664, 2082], [676, 2054, 726, 2082], [738, 2054, 894, 2082], [439, 2148, 455, 2164], [479, 2138, 543, 2167], [553, 2138, 705, 2175], [717, 2138, 872, 2175], [884, 2139, 1013, 2167], [1025, 2138, 1147, 2166], [1161, 2138, 1335, 2175], [1348, 2138, 1394, 2173], [439, 2215, 455, 2231], [479, 2205, 543, 2234], [554, 2205, 689, 2233], [700, 2205, 958, 2242], [971, 2205, 1006, 2233], [1016, 2205, 1065, 2233], [1077, 2205, 1185, 2233], [1198, 2209, 1259, 2233], [1271, 2205, 1363, 2242], [1375, 2205, 1507, 2233], [439, 2282, 455, 2298], [479, 2272, 614, 2300], [626, 2272, 885, 2309], [897, 2272, 932, 2300], [942, 2272, 991, 2300], [1003, 2272, 1111, 2300], [1124, 2276, 1186, 2300], [1197, 2272, 1289, 2309], [1301, 2272, 1424, 2300], [1435, 2272, 1476, 2309], [1488, 2272, 1608, 2301], [1621, 2272, 1695, 2306], [439, 2350, 455, 2366], [479, 2340, 528, 2368], [540, 2340, 799, 2377], [811, 2340, 847, 2368], [856, 2340, 906, 2368], [917, 2340, 1079, 2368], [1091, 2344, 1153, 2368], [1165, 2340, 1257, 2377], [1269, 2340, 1401, 2368], [439, 2417, 455, 2433], [479, 2407, 543, 2436], [553, 2407, 705, 2444], [716, 2407, 823, 2444], [835, 2411, 897, 2435], [909, 2407, 1001, 2444], [1014, 2407, 1172, 2444], [439, 2485, 455, 2501], [479, 2475, 542, 2503], [554, 2474, 658, 2504], [671, 2475, 807, 2503], [820, 2475, 858, 2510], [871, 2475, 1142, 2512], [1156, 2475, 1191, 2503], [1201, 2475, 1250, 2503], [1263, 2475, 1356, 2504], [1369, 2475, 1478, 2512], [1490, 2475, 1525, 2503], [1535, 2475, 1590, 2503], [1603, 2479, 1632, 2503], [1644, 2475, 1680, 2503], [1697, 2474, 1758, 2509], [1773, 2475, 1821, 2503], [1832, 2476, 1876, 2504], [1880, 2465, 1911, 2485], [1880, 2494, 1891, 2513], [1916, 2475, 2091, 2512], [2106, 2475, 2179, 2509], [439, 2552, 455, 2568], [479, 2542, 543, 2570], [562, 2542, 812, 2570], [829, 2542, 955, 2570], [972, 2542, 1008, 2570], [1023, 2542, 1145, 2571], [1164, 2542, 1238, 2576], [1259, 2542, 1361, 2571], [1378, 2551, 1426, 2571], [1443, 2542, 1520, 2571], [1539, 2551, 1612, 2570], [1629, 2546, 1660, 2570], [1677, 2542, 1717, 2570], [1734, 2542, 1908, 2579], [1925, 2546, 1956, 2570], [1975, 2551, 1992, 2570], [2009, 2542, 2174, 2570], [479, 2593, 648, 2630], [660, 2593, 792, 2621], [439, 2670, 455, 2686], [479, 2660, 542, 2688], [554, 2660, 695, 2697], [707, 2660, 932, 2697], [944, 2660, 1067, 2688], [1079, 2660, 1115, 2688], [1123, 2660, 1258, 2689], [1273, 2659, 1346, 2694], [1360, 2660, 1460, 2689], [1472, 2664, 1646, 2697], [1660, 2660, 1754, 2688], [1764, 2660, 1892, 2697], [1904, 2660, 1985, 2688], [439, 2738, 455, 2754], [479, 2728, 543, 2756], [555, 2737, 697, 2765], [708, 2728, 833, 2765], [846, 2728, 971, 2756], [983, 2728, 1019, 2756], [1028, 2728, 1240, 2765], [1252, 2732, 1282, 2756], [1294, 2728, 1322, 2756], [1337, 2727, 1410, 2762], [1424, 2728, 1526, 2757], [1538, 2728, 1644, 2757], [1657, 2728, 1894, 2765], [1906, 2728, 1954, 2756], [1966, 2728, 2144, 2765], [2158, 2737, 2175, 2756], [478, 2779, 561, 2807], [573, 2779, 723, 2807], [734, 2779, 914, 2816], [925, 2788, 965, 2807], [978, 2788, 994, 2807], [1005, 2783, 1075, 2807], [1255, 2934, 1293, 2964], [438, 242, 575, 270], [587, 242, 852, 279], [863, 242, 899, 270], [909, 242, 959, 270], [971, 242, 1081, 270], [1094, 246, 1157, 270], [1169, 242, 1262, 279], [1275, 242, 1409, 276], [1423, 242, 1521, 270], [1532, 242, 1564, 270], [1576, 242, 1626, 270], [1638, 242, 1798, 276], [1811, 242, 1866, 270], [1878, 242, 1957, 270], [1970, 242, 2069, 270], [2080, 246, 2111, 270], [2124, 242, 2174, 270], [375, 292, 558, 320], [568, 296, 598, 320], [611, 296, 666, 320], [678, 292, 810, 321], [821, 292, 869, 320], [882, 292, 1138, 329], [1150, 301, 1196, 321], [1207, 292, 1282, 321], [1294, 292, 1444, 329], [1456, 292, 1480, 320], [1493, 301, 1533, 320], [1544, 301, 1597, 329], [1608, 292, 1679, 321], [1691, 292, 1739, 320], [1753, 296, 1825, 320], [1837, 292, 1873, 320], [1882, 292, 1930, 320], [1944, 296, 1992, 320], [2008, 293, 2061, 320], [2073, 292, 2174, 321], [376, 343, 437, 371], [450, 347, 481, 371], [495, 347, 566, 371], [580, 343, 630, 371], [644, 343, 810, 380], [824, 343, 894, 371], [906, 343, 943, 371], [953, 343, 1067, 380], [1081, 343, 1230, 372], [1243, 343, 1523, 380], [1537, 343, 1573, 371], [1584, 343, 1643, 371], [1657, 343, 1791, 371], [1811, 343, 1861, 371], [1875, 343, 1948, 380], [1962, 343, 2100, 380], [2115, 343, 2174, 371], [376, 394, 510, 422], [521, 394, 598, 422], [610, 403, 657, 423], [668, 394, 759, 422], [771, 394, 834, 422], [846, 403, 907, 423], [919, 398, 985, 431], [995, 394, 1031, 422], [1040, 394, 1090, 422], [1102, 403, 1185, 422], [1196, 403, 1289, 431], [1300, 394, 1400, 423], [1412, 394, 1556, 423], [1570, 394, 1692, 422], [1704, 403, 1765, 423], [1778, 394, 1938, 431], [438, 446, 495, 473], [507, 445, 665, 482], [677, 446, 809, 474], [822, 445, 881, 473], [894, 445, 990, 474], [1003, 454, 1020, 473], [1032, 445, 1147, 482], [1160, 454, 1219, 482], [1231, 445, 1268, 473], [1280, 439, 1359, 474], [1374, 445, 1400, 473], [1412, 445, 1489, 473], [1502, 454, 1534, 473], [1547, 445, 1597, 473], [1611, 445, 1753, 482], [1766, 445, 1917, 473], [1934, 446, 1991, 473], [2003, 445, 2053, 473], [2064, 445, 2174, 482], [376, 496, 544, 533], [557, 496, 679, 524], [691, 496, 741, 524], [754, 496, 859, 525], [870, 500, 1036, 533], [1048, 496, 1072, 524], [1087, 500, 1131, 524], [1143, 505, 1174, 524], [1188, 495, 1213, 525], [1228, 509, 1256, 518], [1273, 496, 1341, 525], [1346, 520, 1351, 524], [1367, 496, 1431, 524], [1441, 500, 1502, 524], [1513, 496, 1548, 524], [1559, 496, 1732, 533], [1746, 496, 1785, 524], [1797, 500, 1850, 524], [1860, 496, 1936, 525], [1947, 500, 2137, 533], [438, 546, 557, 583], [569, 546, 676, 574], [690, 555, 738, 574], [749, 546, 908, 583], [920, 546, 951, 574], [963, 546, 1071, 583], [1083, 547, 1101, 574], [1114, 546, 1162, 574], [1172, 546, 1245, 574], [1258, 546, 1473, 583], [1486, 546, 1647, 574], [1664, 546, 1727, 574], [1739, 546, 1898, 583], [1911, 546, 2085, 583], [2097, 546, 2173, 574], [377, 606, 425, 625], [437, 597, 538, 626], [550, 597, 629, 625], [641, 597, 725, 625], [736, 597, 842, 625], [439, 687, 455, 703], [479, 677, 584, 705], [598, 677, 739, 705], [755, 677, 842, 712], [856, 677, 950, 714], [965, 677, 1115, 711], [1132, 677, 1262, 711], [1278, 677, 1424, 711], [1441, 677, 1667, 714], [1682, 686, 1776, 714], [1791, 681, 1821, 705], [1835, 677, 1875, 705], [1889, 677, 1982, 705], [1996, 677, 2089, 705], [2103, 677, 2174, 705], [479, 728, 612, 757], [624, 728, 762, 756], [776, 728, 944, 765], [956, 729, 1093, 762], [1108, 728, 1225, 763], [439, 819, 455, 835], [479, 809, 634, 846], [646, 809, 789, 838], [804, 809, 875, 844], [886, 809, 982, 837], [993, 809, 1154, 837], [1166, 813, 1228, 837], [1240, 809, 1344, 846], [1357, 809, 1488, 843], [1500, 809, 1553, 837], [1568, 818, 1584, 837], [1596, 809, 1768, 837], [1780, 813, 1955, 838], [1966, 809, 2174, 846], [479, 860, 515, 888], [529, 854, 643, 898], [661, 860, 711, 888], [725, 860, 870, 897], [884, 860, 1097, 897], [1113, 869, 1213, 888], [1229, 864, 1260, 888], [1275, 860, 1382, 889], [1399, 869, 1437, 888], [1452, 857, 1536, 898], [1554, 860, 1707, 894], [1726, 864, 1755, 888], [1769, 860, 1846, 888], [1860, 860, 1908, 888], [1922, 860, 2008, 888], [2024, 860, 2173, 897], [480, 911, 602, 948], [439, 1003, 455, 1019], [479, 994, 564, 1022], [579, 993, 606, 1021], [618, 993, 756, 1022], [772, 993, 831, 1021], [846, 993, 1058, 1030], [1074, 993, 1215, 1021], [1230, 993, 1308, 1022], [1324, 1002, 1341, 1021], [1356, 993, 1540, 1030], [1554, 993, 1685, 1030], [1701, 993, 1774, 1021], [1790, 993, 1826, 1021], [1839, 990, 1936, 1031], [1954, 993, 2024, 1030], [2040, 997, 2107, 1021], [2121, 997, 2175, 1021], [479, 1048, 510, 1072], [524, 1044, 563, 1072], [578, 1044, 688, 1073], [701, 1044, 773, 1072], [787, 1044, 837, 1072], [851, 1044, 1017, 1072], [1030, 1048, 1093, 1072], [1107, 1044, 1200, 1081], [1216, 1044, 1275, 1072], [1288, 1044, 1437, 1073], [1451, 1044, 1602, 1072], [1625, 1044, 1697, 1072], [1712, 1044, 1738, 1072], [1753, 1044, 1785, 1072], [1798, 1044, 1860, 1072], [1874, 1044, 1948, 1073], [1962, 1053, 2017, 1072], [2030, 1044, 2173, 1081], [479, 1094, 690, 1123], [705, 1094, 741, 1122], [753, 1094, 803, 1122], [818, 1094, 1060, 1131], [1074, 1094, 1242, 1131], [1257, 1094, 1294, 1122], [1305, 1094, 1491, 1131], [1507, 1094, 1658, 1128], [1676, 1094, 1708, 1122], [1722, 1098, 1855, 1122], [1868, 1094, 2033, 1123], [2048, 1094, 2174, 1122], [478, 1145, 613, 1182], [630, 1154, 667, 1173], [681, 1149, 765, 1173], [779, 1158, 807, 1167], [828, 1145, 871, 1174], [886, 1154, 1024, 1182], [1041, 1149, 1169, 1182], [1193, 1145, 1433, 1182], [1448, 1145, 1574, 1173], [1587, 1145, 1642, 1173], [1658, 1145, 1719, 1173], [1734, 1154, 1873, 1182], [1887, 1145, 2107, 1182], [2121, 1145, 2175, 1173], [479, 1196, 666, 1225], [680, 1196, 779, 1225], [793, 1196, 907, 1224], [917, 1196, 1067, 1225], [439, 1288, 455, 1304], [479, 1278, 543, 1306], [556, 1287, 641, 1306], [652, 1278, 865, 1315], [877, 1278, 1073, 1307], [1085, 1278, 1202, 1315], [1214, 1282, 1245, 1306], [1258, 1278, 1308, 1306], [1320, 1278, 1430, 1306], [1443, 1282, 1506, 1306], [1518, 1278, 1611, 1315], [1624, 1278, 1758, 1306], [1774, 1279, 1799, 1306], [1810, 1278, 1836, 1306], [1850, 1278, 1915, 1306], [1928, 1278, 2100, 1306], [2112, 1278, 2175, 1306], [479, 1338, 535, 1357], [548, 1329, 813, 1366], [826, 1329, 863, 1357], [874, 1329, 933, 1357], [948, 1329, 1073, 1357], [1087, 1333, 1169, 1357], [1184, 1333, 1237, 1357], [1251, 1333, 1281, 1357], [1295, 1329, 1334, 1357], [1348, 1329, 1441, 1357], [1454, 1329, 1526, 1357], [1539, 1329, 1715, 1366], [1731, 1329, 1879, 1358], [1893, 1329, 2173, 1366], [479, 1379, 636, 1414], [649, 1379, 851, 1416], [865, 1388, 939, 1408], [951, 1379, 1112, 1416], [1126, 1379, 1248, 1416], [1260, 1379, 1351, 1407], [1362, 1379, 1431, 1407], [1444, 1379, 1493, 1407], [1505, 1383, 1579, 1407], [1591, 1379, 1626, 1407], [1636, 1379, 1685, 1407], [1698, 1383, 1740, 1407], [1750, 1379, 1885, 1408], [1898, 1379, 1955, 1407], [1967, 1379, 2175, 1416], [479, 1430, 624, 1458], [641, 1430, 711, 1458], [724, 1430, 814, 1458], [826, 1430, 851, 1458], [865, 1430, 1035, 1467], [1050, 1430, 1106, 1458], [1119, 1430, 1217, 1459], [1230, 1430, 1290, 1458], [1302, 1430, 1350, 1458], [1362, 1430, 1418, 1458], [1429, 1430, 1572, 1467], [1584, 1430, 1619, 1458], [1628, 1430, 1676, 1458], [1689, 1430, 1796, 1458], [1808, 1430, 1975, 1467], [1987, 1430, 2109, 1458], [2120, 1430, 2173, 1458], [478, 1481, 555, 1509], [567, 1481, 677, 1518], [689, 1481, 881, 1518], [892, 1481, 932, 1518], [945, 1481, 992, 1509], [1004, 1481, 1140, 1509], [1152, 1481, 1342, 1518], [1356, 1490, 1389, 1509], [1401, 1485, 1429, 1509], [1440, 1481, 1514, 1509], [1526, 1481, 1586, 1509], [1597, 1490, 1704, 1518], [1715, 1481, 1846, 1509], [1858, 1481, 2128, 1518], [2141, 1481, 2177, 1509], [479, 1532, 536, 1560], [550, 1532, 672, 1560], [684, 1532, 760, 1561], [772, 1536, 824, 1560], [834, 1532, 912, 1560], [924, 1532, 1013, 1560], [1023, 1532, 1138, 1569], [1151, 1532, 1297, 1561], [1309, 1541, 1343, 1560], [1356, 1532, 1406, 1560], [376, 1641, 457, 1671], [500, 1642, 607, 1671], [618, 1650, 690, 1671], [702, 1641, 848, 1671], [374, 1721, 435, 1749], [447, 1721, 530, 1758], [542, 1721, 630, 1749], [642, 1721, 814, 1758], [827, 1718, 911, 1759], [927, 1721, 984, 1749], [996, 1715, 1083, 1759], [1089, 1718, 1099, 1759], [1115, 1721, 1285, 1758], [1298, 1721, 1435, 1750], [1448, 1730, 1529, 1749], [1542, 1721, 1690, 1749], [1707, 1721, 1749, 1749], [1763, 1730, 1799, 1749], [1811, 1721, 1981, 1750], [1993, 1721, 2174, 1758], [374, 1781, 420, 1801], [431, 1772, 506, 1801], [519, 1772, 677, 1809], [689, 1781, 705, 1800], [718, 1772, 814, 1809], [826, 1772, 981, 1809], [994, 1772, 1042, 1800], [1055, 1776, 1144, 1801], [1156, 1781, 1224, 1800], [1237, 1772, 1418, 1809], [1430, 1772, 1460, 1800], [1482, 1772, 1600, 1801], [1614, 1772, 1688, 1806], [1702, 1772, 1759, 1800], [1771, 1772, 1865, 1800], [1878, 1772, 1964, 1809], [1976, 1772, 2024, 1800], [2037, 1772, 2173, 1800], [377, 1823, 473, 1852], [485, 1832, 525, 1851], [538, 1823, 568, 1857], [582, 1823, 631, 1851], [642, 1823, 813, 1860], [827, 1823, 925, 1860], [937, 1823, 1066, 1860], [1082, 1823, 1191, 1860], [1204, 1823, 1221, 1852], [1233, 1823, 1314, 1860], [1327, 1823, 1377, 1851], [1388, 1823, 1506, 1851], [1522, 1823, 1670, 1852], [1683, 1823, 1808, 1851], [1821, 1823, 1879, 1851], [1891, 1823, 2111, 1860], [2124, 1823, 2174, 1851], [376, 1874, 541, 1902], [553, 1878, 616, 1902], [629, 1874, 722, 1911], [735, 1874, 861, 1902], [874, 1874, 975, 1903], [988, 1874, 1081, 1902], [1093, 1883, 1192, 1903], [1204, 1874, 1417, 1911], [1429, 1874, 1501, 1902], [1513, 1874, 1563, 1902], [1575, 1878, 1636, 1902], [1648, 1874, 1684, 1902], [1694, 1874, 1744, 1902], [1756, 1874, 1852, 1902], [1863, 1874, 2014, 1902], [2032, 1875, 2057, 1902], [2068, 1874, 2094, 1902], [2108, 1874, 2173, 1902], [375, 1924, 561, 1952], [572, 1924, 641, 1953], [653, 1924, 703, 1952], [714, 1924, 821, 1961], [833, 1924, 956, 1952], [968, 1933, 1110, 1961], [1124, 1928, 1154, 1952], [1167, 1924, 1255, 1953], [1267, 1924, 1419, 1961], [1431, 1924, 1574, 1952], [1588, 1924, 1618, 1952], [1630, 1924, 1687, 1952], [1701, 1933, 1779, 1952], [376, 2034, 456, 2064], [500, 2034, 653, 2072], [665, 2034, 757, 2064], [770, 2043, 812, 2064], [824, 2035, 954, 2064], [966, 2034, 1086, 2072], [376, 2115, 408, 2142], [421, 2114, 470, 2142], [482, 2114, 559, 2151], [570, 2114, 606, 2142], [615, 2114, 665, 2142], [676, 2114, 818, 2151], [829, 2114, 937, 2142], [950, 2114, 1000, 2142], [1012, 2114, 1172, 2151], [1184, 2114, 1324, 2151], [1338, 2114, 1439, 2142], [1457, 2114, 1487, 2142], [1499, 2114, 1642, 2151], [1655, 2114, 1789, 2151], [1804, 2123, 1853, 2142], [1865, 2114, 1914, 2142], [1926, 2114, 2080, 2151], [2093, 2118, 2124, 2142], [2135, 2114, 2174, 2142], [377, 2165, 483, 2194], [495, 2165, 594, 2193], [605, 2169, 636, 2193], [649, 2165, 698, 2193], [710, 2169, 802, 2194], [813, 2174, 847, 2193], [859, 2165, 908, 2193], [921, 2174, 1048, 2202], [1059, 2165, 1189, 2193], [1202, 2165, 1357, 2193], [1372, 2165, 1445, 2193], [1457, 2165, 1519, 2193], [1530, 2165, 1594, 2194], [1606, 2165, 1772, 2193], [1784, 2165, 1918, 2194], [1930, 2165, 1979, 2193], [1991, 2165, 2175, 2202], [376, 2215, 471, 2243], [484, 2215, 558, 2243], [572, 2224, 606, 2243], [620, 2215, 670, 2243], [684, 2224, 769, 2243], [783, 2215, 866, 2252], [880, 2215, 1035, 2252], [1050, 2215, 1191, 2243], [1207, 2224, 1256, 2243], [1271, 2224, 1356, 2243], [1371, 2219, 1421, 2252], [1434, 2215, 1483, 2243], [1495, 2215, 1640, 2252], [1654, 2224, 1718, 2243], [1741, 2216, 1782, 2243], [1797, 2219, 1855, 2243], [1869, 2215, 1927, 2243], [1942, 2224, 1990, 2244], [2004, 2215, 2109, 2244], [2124, 2215, 2174, 2243], [376, 2266, 537, 2303], [551, 2266, 748, 2303], [768, 2275, 816, 2295], [829, 2266, 898, 2294], [912, 2275, 929, 2294], [942, 2266, 1024, 2303], [1037, 2266, 1225, 2294], [1237, 2266, 1274, 2294], [1285, 2266, 1400, 2294], [1414, 2266, 1531, 2303], [1547, 2266, 1606, 2294], [1618, 2275, 1674, 2294], [1687, 2266, 1763, 2294], [1777, 2266, 1878, 2295], [1891, 2275, 1964, 2295], [1978, 2266, 2017, 2294], [2031, 2266, 2081, 2294], [2093, 2275, 2173, 2295], [377, 2317, 435, 2345], [450, 2317, 591, 2345], [606, 2317, 642, 2345], [655, 2317, 695, 2345], [709, 2317, 759, 2345], [774, 2317, 891, 2354], [907, 2317, 938, 2345], [952, 2317, 1002, 2345], [1018, 2321, 1071, 2351], [1088, 2317, 1234, 2354], [1249, 2317, 1323, 2345], [1336, 2317, 1467, 2354], [1482, 2317, 1581, 2351], [1598, 2317, 1646, 2345], [1660, 2317, 1804, 2345], [1817, 2317, 2051, 2354], [2065, 2317, 2179, 2346], [374, 2368, 438, 2396], [449, 2368, 635, 2396], [646, 2368, 672, 2396], [684, 2368, 773, 2396], [785, 2368, 865, 2396], [877, 2368, 993, 2405], [1006, 2368, 1149, 2396], [1160, 2368, 1240, 2396], [1252, 2368, 1301, 2396], [1313, 2368, 1444, 2396], [1456, 2368, 1588, 2396], [1599, 2368, 1630, 2396], [1642, 2368, 1732, 2396], [1744, 2368, 1772, 2396], [1788, 2369, 1842, 2396], [1853, 2377, 1908, 2396], [1920, 2368, 1978, 2396], [1990, 2368, 2176, 2396], [376, 2419, 424, 2447], [437, 2419, 487, 2447], [501, 2419, 642, 2447], [658, 2419, 798, 2456], [811, 2419, 907, 2447], [920, 2419, 1133, 2456], [1147, 2419, 1179, 2447], [1193, 2419, 1242, 2447], [1257, 2419, 1460, 2456], [1476, 2419, 1582, 2448], [1604, 2428, 1659, 2447], [1673, 2419, 1937, 2456], [1951, 2419, 1987, 2447], [1999, 2419, 2048, 2447], [2063, 2419, 2173, 2447], [376, 2469, 547, 2506], [564, 2469, 698, 2503], [718, 2469, 866, 2498], [884, 2469, 1009, 2497], [1026, 2469, 1069, 2504], [1087, 2469, 1252, 2497], [1269, 2469, 1440, 2506], [1457, 2469, 1606, 2504], [1625, 2478, 1681, 2497], [1696, 2469, 1851, 2506], [1867, 2469, 1985, 2506], [2001, 2469, 2173, 2506], [376, 2520, 507, 2554], [520, 2520, 681, 2549], [695, 2520, 818, 2548], [831, 2520, 888, 2548], [900, 2520, 1108, 2557], [1121, 2524, 1150, 2548], [1162, 2520, 1215, 2548], [1229, 2520, 1361, 2548], [438, 2571, 546, 2608], [558, 2571, 576, 2600], [591, 2571, 692, 2600], [704, 2571, 834, 2599], [845, 2571, 954, 2599], [967, 2571, 1015, 2599], [1026, 2571, 1170, 2599], [1180, 2571, 1303, 2608], [1315, 2571, 1420, 2600], [1433, 2580, 1505, 2600], [1517, 2571, 1567, 2599], [1579, 2571, 1680, 2600], [1692, 2571, 1808, 2599], [1819, 2571, 1960, 2608], [1973, 2571, 2089, 2599], [2104, 2571, 2177, 2605], [374, 2622, 462, 2651], [474, 2622, 579, 2659], [595, 2622, 630, 2651], [643, 2622, 740, 2651], [754, 2622, 866, 2650], [876, 2622, 980, 2650], [993, 2622, 1040, 2650], [1051, 2622, 1099, 2650], [1111, 2622, 1208, 2651], [1220, 2623, 1313, 2659], [1326, 2622, 1411, 2651], [1424, 2622, 1525, 2650], [1538, 2622, 1735, 2659], [1747, 2622, 1910, 2659], [1922, 2622, 2001, 2651], [2014, 2622, 2174, 2651], [376, 2673, 490, 2701], [504, 2674, 577, 2707], [594, 2673, 657, 2701], [668, 2673, 827, 2710], [839, 2673, 914, 2701], [928, 2673, 963, 2701], [973, 2673, 1094, 2701], [1105, 2682, 1161, 2701], [1172, 2673, 1211, 2701], [1223, 2673, 1379, 2702], [439, 2769, 455, 2785], [479, 2759, 622, 2788], [636, 2759, 758, 2787], [770, 2759, 944, 2794], [956, 2759, 1136, 2796], [1150, 2759, 1247, 2788], [1261, 2763, 1311, 2796], [1323, 2759, 1529, 2796], [1542, 2759, 1589, 2787], [1600, 2759, 1659, 2788], [1670, 2759, 1791, 2796], [1803, 2759, 1914, 2793], [1926, 2759, 1977, 2787], [1988, 2759, 2047, 2787], [2060, 2759, 2173, 2796], [478, 2810, 565, 2839], [577, 2810, 700, 2847], [713, 2814, 742, 2838], [754, 2810, 860, 2847], [870, 2810, 1023, 2847], [1040, 2810, 1110, 2838], [1124, 2819, 1179, 2838], [1190, 2810, 1228, 2838], [1240, 2810, 1398, 2847], [1409, 2810, 1497, 2847], [1510, 2810, 1558, 2838], [1570, 2810, 1733, 2847], [1745, 2810, 1883, 2838], [1895, 2810, 2061, 2847], [2074, 2810, 2177, 2839], [1255, 2935, 1294, 2964], [375, 1603, 480, 1640], [492, 1603, 519, 1632], [535, 1603, 673, 1640], [685, 1603, 771, 1631], [784, 1603, 827, 1638], [839, 1603, 917, 1638], [929, 1603, 976, 1631], [985, 1603, 1134, 1640], [1146, 1603, 1202, 1631], [1214, 1607, 1286, 1631], [1297, 1603, 1333, 1631], [1341, 1603, 1388, 1631], [1401, 1607, 1442, 1631], [1454, 1603, 1564, 1632], [1577, 1603, 1624, 1631], [1634, 1604, 1678, 1632], [1682, 1594, 1714, 1614], [1682, 1622, 1693, 1641], [1719, 1603, 1889, 1640], [1901, 1603, 1932, 1631], [1943, 1603, 1990, 1631], [2002, 1607, 2173, 1632], [377, 1654, 512, 1682], [524, 1654, 572, 1682], [583, 1654, 727, 1683], [741, 1654, 872, 1688], [886, 1654, 934, 1682], [945, 1654, 1114, 1691], [1126, 1654, 1211, 1691], [1223, 1654, 1309, 1682], [1326, 1654, 1405, 1682], [1418, 1663, 1487, 1682], [1501, 1663, 1550, 1682], [1561, 1663, 1601, 1682], [1614, 1663, 1630, 1682], [1642, 1654, 1799, 1691], [670, 1792, 760, 1820], [771, 1792, 799, 1820], [817, 1792, 916, 1820], [928, 1792, 964, 1820], [973, 1792, 1073, 1829], [1085, 1792, 1213, 1820], [1226, 1792, 1301, 1820], [1313, 1792, 1361, 1820], [1372, 1792, 1550, 1829], [1562, 1793, 1606, 1821], [1610, 1782, 1641, 1802], [1610, 1811, 1621, 1830], [1656, 1792, 1865, 1829], [782, 1869, 906, 1896], [1255, 1869, 1372, 1905], [1435, 1868, 1571, 1905], [1582, 1868, 1682, 1905], [1695, 1868, 1757, 1896], [782, 1959, 895, 1987], [906, 1959, 1045, 1996], [1061, 1959, 1123, 1993], [1285, 1959, 1344, 1988], [1429, 1959, 1768, 1996], [782, 2010, 913, 2039], [926, 2010, 1007, 2039], [1019, 2010, 1067, 2039], [1080, 2014, 1125, 2038], [1139, 2011, 1200, 2044], [1263, 2009, 1365, 2039], [1446, 2010, 1502, 2039], [1523, 2018, 1543, 2038], [1561, 2009, 1621, 2039], [1638, 2018, 1658, 2038], [1677, 2010, 1693, 2039], [1706, 2019, 1747, 2047], [479, 2166, 528, 2194], [539, 2166, 621, 2203], [633, 2166, 756, 2203], [769, 2166, 874, 2195], [887, 2166, 937, 2194], [949, 2166, 1044, 2195], [1056, 2166, 1092, 2194], [1102, 2166, 1152, 2194], [1164, 2166, 1235, 2194], [1248, 2166, 1273, 2194], [1287, 2175, 1359, 2203], [1372, 2166, 1463, 2203], [1478, 2166, 1537, 2194], [1549, 2166, 1617, 2194], [1630, 2166, 1680, 2194], [1692, 2166, 1864, 2203], [1877, 2166, 1941, 2195], [1952, 2166, 1991, 2194], [2004, 2166, 2174, 2203], [479, 2217, 515, 2245], [525, 2226, 596, 2254], [609, 2217, 681, 2254], [695, 2221, 856, 2254], [872, 2217, 944, 2245], [957, 2217, 983, 2245], [995, 2217, 1201, 2245], [1213, 2217, 1260, 2245], [1273, 2226, 1290, 2245], [1301, 2217, 1465, 2245], [1476, 2217, 1646, 2254], [1659, 2217, 1791, 2251], [1806, 2226, 1838, 2245], [1850, 2217, 1925, 2245], [1936, 2217, 2099, 2245], [2110, 2217, 2174, 2246], [478, 2268, 597, 2305], [610, 2268, 823, 2305], [838, 2277, 855, 2296], [868, 2268, 951, 2305], [964, 2268, 1093, 2296], [1106, 2268, 1142, 2296], [1154, 2272, 1245, 2305], [1267, 2268, 1317, 2297], [1331, 2268, 1381, 2296], [1394, 2272, 1533, 2305], [1548, 2268, 1596, 2296], [1610, 2268, 1733, 2296], [1745, 2268, 1894, 2305], [1909, 2268, 1959, 2296], [1972, 2268, 2044, 2296], [2057, 2268, 2122, 2297], [2135, 2268, 2174, 2296], [479, 2328, 598, 2353], [612, 2319, 669, 2347], [680, 2319, 728, 2347], [740, 2319, 905, 2356], [917, 2319, 1081, 2356], [1093, 2319, 1128, 2347], [1137, 2328, 1224, 2356], [1238, 2319, 1322, 2347], [1336, 2323, 1493, 2356], [1506, 2319, 1571, 2347], [1583, 2319, 1724, 2356], [1737, 2319, 1767, 2347], [1778, 2328, 1848, 2356], [1860, 2319, 1953, 2356], [1964, 2319, 2173, 2356], [479, 2374, 569, 2398], [439, 2464, 455, 2480], [479, 2454, 543, 2482], [557, 2454, 770, 2491], [784, 2454, 820, 2482], [832, 2454, 951, 2483], [967, 2454, 1148, 2491], [1163, 2454, 1302, 2483], [1317, 2454, 1376, 2482], [1389, 2454, 1602, 2491], [1615, 2454, 1762, 2482], [1778, 2454, 1902, 2491], [1917, 2463, 2015, 2483], [2030, 2454, 2078, 2482], [2092, 2454, 2174, 2491], [478, 2504, 633, 2541], [646, 2504, 699, 2532], [711, 2504, 818, 2532], [833, 2504, 1035, 2541], [1047, 2504, 1106, 2532], [1119, 2504, 1189, 2532], [1201, 2504, 1250, 2532], [1262, 2504, 1423, 2532], [1435, 2504, 1612, 2541], [1630, 2504, 1838, 2541], [1851, 2504, 1900, 2532], [1911, 2504, 1978, 2532], [1988, 2504, 2173, 2541], [480, 2555, 630, 2592], [642, 2555, 726, 2583], [740, 2559, 770, 2583], [781, 2555, 820, 2583], [832, 2555, 881, 2583], [893, 2555, 1001, 2583], [1014, 2555, 1183, 2592], [1195, 2555, 1327, 2583], [439, 2649, 455, 2665], [479, 2639, 543, 2667], [553, 2639, 705, 2676], [717, 2639, 824, 2676], [838, 2643, 966, 2676], [978, 2639, 1094, 2676], [1107, 2639, 1228, 2668], [1241, 2639, 1290, 2667], [1301, 2639, 1511, 2676], [1523, 2639, 1559, 2667], [1568, 2639, 1714, 2668], [1727, 2639, 1850, 2667], [1862, 2639, 1910, 2667], [1921, 2639, 1971, 2667], [1982, 2639, 2042, 2668], [2053, 2639, 2175, 2676], [478, 2690, 603, 2727], [618, 2690, 711, 2719], [725, 2690, 867, 2727], [881, 2694, 911, 2718], [926, 2699, 943, 2718], [954, 2690, 1122, 2719], [1136, 2690, 1206, 2718], [1219, 2694, 1250, 2718], [1263, 2690, 1475, 2727], [1489, 2690, 1537, 2718], [1549, 2690, 1631, 2727], [1643, 2690, 1802, 2727], [1817, 2690, 1885, 2718], [1898, 2690, 2045, 2727], [2058, 2690, 2090, 2718], [2102, 2699, 2175, 2727], [479, 2741, 561, 2778], [572, 2741, 795, 2778], [809, 2750, 881, 2770], [892, 2741, 941, 2769], [953, 2741, 1053, 2770], [1064, 2741, 1293, 2778], [1306, 2745, 1464, 2778], [1255, 2935, 1294, 2963], [376, 1603, 484, 1640], [500, 1603, 528, 1632], [553, 1603, 697, 1640], [713, 1603, 802, 1631], [819, 1603, 864, 1638], [880, 1603, 961, 1638], [978, 1603, 1026, 1631], [1041, 1603, 1091, 1631], [1107, 1607, 1159, 1640], [1174, 1603, 1363, 1640], [1378, 1603, 1533, 1640], [1549, 1603, 1608, 1631], [1624, 1607, 1699, 1631], [1715, 1603, 1751, 1631], [1764, 1603, 1814, 1631], [1831, 1607, 1873, 1631], [1889, 1603, 2005, 1632], [2021, 1603, 2070, 1631], [2085, 1604, 2129, 1632], [2133, 1594, 2164, 1614], [2133, 1620, 2179, 1641], [375, 1654, 538, 1691], [550, 1663, 621, 1683], [633, 1654, 682, 1682], [694, 1654, 794, 1683], [805, 1654, 919, 1682], [931, 1654, 1078, 1691], [1091, 1654, 1214, 1688], [1227, 1654, 1275, 1682], [1286, 1654, 1455, 1691], [1466, 1654, 1622, 1691], [376, 1787, 457, 1817], [500, 1787, 653, 1825], [665, 1787, 742, 1817], [754, 1788, 868, 1817], [881, 1787, 932, 1817], [943, 1787, 1100, 1825], [1113, 1787, 1226, 1817], [374, 1866, 425, 1894], [438, 1866, 606, 1903], [619, 1866, 655, 1894], [666, 1866, 716, 1894], [730, 1866, 846, 1895], [859, 1866, 1014, 1903], [1026, 1866, 1058, 1894], [1070, 1866, 1129, 1894], [1142, 1875, 1236, 1903], [1248, 1866, 1274, 1894], [1288, 1866, 1365, 1894], [1377, 1866, 1539, 1903], [1553, 1870, 1583, 1894], [1597, 1866, 1693, 1903], [1707, 1866, 1776, 1894], [1789, 1866, 1863, 1895], [1876, 1866, 1925, 1894], [1939, 1875, 2024, 1894], [2037, 1866, 2177, 1900], [374, 1917, 522, 1954], [534, 1917, 652, 1946], [664, 1917, 700, 1945], [709, 1917, 756, 1945], [769, 1917, 873, 1945], [888, 1917, 1047, 1954], [1059, 1917, 1202, 1954], [1219, 1918, 1259, 1945], [1272, 1917, 1413, 1945], [1425, 1917, 1491, 1951], [1504, 1917, 1609, 1954], [1626, 1917, 1657, 1945], [1674, 1917, 1771, 1946], [1784, 1917, 1832, 1945], [1844, 1917, 1969, 1954], [1982, 1917, 2068, 1945], [2081, 1917, 2117, 1945], [2126, 1917, 2173, 1945], [376, 1968, 531, 2005], [543, 1969, 672, 1997], [685, 1968, 742, 1996], [756, 1968, 943, 2003], [957, 1969, 1029, 1996], [1041, 1968, 1140, 2005], [1152, 1968, 1290, 1996], [1304, 1968, 1392, 1997], [1405, 1968, 1525, 2005], [1536, 1968, 1609, 1996], [1621, 1968, 1671, 1996], [1684, 1968, 1822, 1996], [1835, 1968, 1892, 1996], [1904, 1968, 2055, 2005], [2067, 1968, 2173, 1996], [375, 2028, 450, 2056], [462, 2023, 623, 2056], [439, 2070, 526, 2099], [538, 2070, 585, 2098], [595, 2070, 651, 2098], [665, 2074, 708, 2098], [719, 2070, 754, 2098], [763, 2070, 958, 2107], [972, 2079, 988, 2098], [998, 2070, 1096, 2099], [1108, 2074, 1208, 2099], [1219, 2070, 1254, 2098], [1262, 2070, 1386, 2107], [1399, 2079, 1431, 2098], [1444, 2070, 1468, 2098], [1481, 2070, 1603, 2104], [1616, 2079, 1662, 2099], [1673, 2070, 1747, 2099], [1760, 2070, 1893, 2107], [1904, 2070, 1952, 2098], [1964, 2070, 2173, 2107], [377, 2120, 527, 2148], [541, 2129, 572, 2148], [585, 2120, 716, 2149], [419, 2184, 444, 2219], [468, 2194, 491, 2212], [503, 2184, 529, 2212], [542, 2184, 705, 2221], [718, 2193, 749, 2212], [762, 2184, 794, 2212], [805, 2184, 855, 2212], [868, 2184, 990, 2221], [1004, 2184, 1122, 2221], [1135, 2184, 1284, 2221], [1297, 2193, 1329, 2212], [1347, 2190, 1368, 2214], [1388, 2181, 1423, 2222], [1437, 2181, 1503, 2222], [1520, 2193, 1569, 2212], [1581, 2184, 1697, 2212], [1710, 2188, 1738, 2212], [1749, 2184, 1878, 2212], [1889, 2184, 1938, 2212], [1949, 2184, 2025, 2212], [2036, 2193, 2100, 2218], [2115, 2184, 2174, 2212], [468, 2235, 515, 2263], [528, 2235, 594, 2263], [606, 2239, 706, 2264], [717, 2244, 740, 2271], [754, 2235, 825, 2264], [835, 2235, 997, 2272], [1008, 2235, 1133, 2263], [1144, 2235, 1249, 2263], [1263, 2245, 1292, 2272], [1310, 2241, 1331, 2265], [1352, 2232, 1443, 2273], [1456, 2232, 1518, 2273], [1532, 2235, 1603, 2264], [1615, 2234, 1636, 2264], [1649, 2235, 1697, 2263], [1709, 2244, 1796, 2263], [1807, 2235, 1843, 2263], [1852, 2244, 1894, 2269], [1907, 2235, 1994, 2272], [2007, 2235, 2070, 2263], [2082, 2235, 2138, 2263], [2152, 2234, 2173, 2264], [468, 2285, 575, 2313], [586, 2285, 634, 2313], [645, 2285, 694, 2313], [705, 2285, 839, 2313], [851, 2285, 1069, 2322], [1082, 2294, 1161, 2313], [405, 2357, 444, 2392], [469, 2356, 490, 2386], [503, 2357, 562, 2385], [574, 2367, 597, 2385], [610, 2366, 659, 2385], [671, 2357, 835, 2394], [847, 2366, 879, 2385], [892, 2357, 924, 2385], [935, 2357, 985, 2385], [998, 2357, 1120, 2394], [1134, 2357, 1252, 2394], [1268, 2357, 1326, 2385], [1338, 2357, 1388, 2385], [1400, 2357, 1529, 2394], [1542, 2361, 1646, 2386], [1658, 2366, 1690, 2385], [1704, 2357, 1730, 2385], [1743, 2357, 1847, 2386], [1857, 2357, 2018, 2394], [2031, 2357, 2112, 2385], [2124, 2357, 2174, 2385], [467, 2408, 600, 2436], [612, 2408, 801, 2436], [813, 2417, 856, 2442], [875, 2414, 896, 2438], [916, 2405, 1008, 2446], [1022, 2405, 1115, 2446], [438, 2492, 482, 2520], [494, 2501, 550, 2520], [562, 2492, 600, 2520], [611, 2492, 726, 2529], [738, 2492, 895, 2526], [908, 2492, 1118, 2529], [1130, 2492, 1178, 2520], [1188, 2492, 1261, 2520], [1273, 2492, 1409, 2521], [1422, 2492, 1458, 2520], [1467, 2492, 1516, 2520], [1527, 2492, 1666, 2529], [1677, 2492, 1703, 2520], [1717, 2492, 1826, 2520], [1837, 2492, 1988, 2526], [2001, 2501, 2077, 2521], [2089, 2492, 2115, 2520], [2125, 2492, 2174, 2520], [374, 2543, 525, 2580], [536, 2543, 674, 2580], [686, 2543, 710, 2571], [724, 2543, 934, 2580], [945, 2543, 1057, 2571], [1074, 2543, 1265, 2580], [1280, 2543, 1420, 2580], [1432, 2543, 1481, 2571], [1493, 2543, 1578, 2571], [1588, 2543, 1737, 2572], [1751, 2543, 1924, 2580], [1938, 2547, 1968, 2571], [1981, 2543, 2102, 2571], [2115, 2543, 2172, 2571], [375, 2593, 513, 2630], [524, 2593, 615, 2622], [626, 2593, 756, 2630], [767, 2602, 808, 2630], [820, 2593, 892, 2622], [903, 2593, 1113, 2630], [1124, 2593, 1149, 2621], [1163, 2597, 1215, 2621], [1227, 2602, 1243, 2621], [1256, 2593, 1508, 2630], [1521, 2593, 1594, 2621], [437, 2645, 491, 2672], [505, 2644, 609, 2673], [623, 2644, 688, 2672], [702, 2644, 763, 2672], [776, 2648, 807, 2672], [820, 2644, 907, 2681], [920, 2648, 973, 2672], [985, 2644, 1048, 2672], [1061, 2644, 1092, 2672], [1105, 2644, 1155, 2672], [1168, 2653, 1261, 2681], [1277, 2643, 1339, 2678], [1357, 2653, 1374, 2672], [1385, 2644, 1530, 2681], [1544, 2644, 1730, 2681], [1743, 2644, 1779, 2672], [1790, 2644, 1849, 2672], [1863, 2644, 1989, 2672], [2001, 2644, 2050, 2672], [2063, 2653, 2175, 2681], [376, 2695, 595, 2723], [607, 2695, 638, 2723], [650, 2699, 806, 2732], [817, 2695, 917, 2724], [929, 2695, 954, 2723], [966, 2695, 1133, 2732], [1147, 2695, 1247, 2724], [1259, 2695, 1376, 2732], [1388, 2695, 1438, 2723], [1449, 2695, 1526, 2723], [1537, 2695, 1649, 2723], [1662, 2695, 1718, 2723], [1731, 2704, 1823, 2732], [1833, 2695, 1887, 2723], [1899, 2695, 1977, 2723], [1988, 2699, 2041, 2732], [2052, 2699, 2083, 2723], [2094, 2704, 2157, 2723], [1255, 2935, 1293, 2964], [376, 1603, 484, 1640], [503, 1603, 548, 1632], [571, 1603, 714, 1640], [729, 1603, 819, 1631], [835, 1603, 880, 1638], [895, 1603, 975, 1638], [991, 1603, 1039, 1631], [1053, 1603, 1103, 1631], [1118, 1607, 1170, 1640], [1184, 1603, 1373, 1640], [1387, 1603, 1542, 1640], [1557, 1603, 1616, 1631], [1631, 1607, 1706, 1631], [1720, 1603, 1756, 1631], [1768, 1603, 1818, 1631], [1834, 1607, 1877, 1631], [1891, 1603, 2007, 1632], [2022, 1603, 2071, 1631], [2085, 1604, 2129, 1632], [2133, 1594, 2164, 1614], [2133, 1620, 2179, 1641], [375, 1654, 539, 1691], [552, 1663, 624, 1683], [636, 1654, 685, 1682], [697, 1654, 798, 1683], [810, 1655, 906, 1691], [919, 1654, 1007, 1683], [1019, 1654, 1125, 1682], [1137, 1654, 1341, 1691], [1353, 1654, 1522, 1691], [1534, 1654, 1616, 1683], [1628, 1654, 1793, 1683], [1806, 1654, 1929, 1688], [1943, 1654, 1991, 1682], [2003, 1654, 2173, 1691], [375, 1705, 530, 1742], [376, 1832, 436, 1867], [488, 1832, 756, 1876], [771, 1832, 832, 1867], [846, 1832, 958, 1867], [974, 1832, 1117, 1867], [1131, 1832, 1302, 1867], [376, 1916, 455, 1946], [500, 1916, 653, 1954], [665, 1916, 742, 1946], [754, 1917, 868, 1946], [881, 1916, 932, 1946], [943, 1916, 1058, 1946], [375, 1997, 453, 2024], [464, 2005, 510, 2025], [523, 1996, 604, 2025], [616, 1996, 720, 2024], [734, 1996, 780, 2024], [791, 1997, 836, 2025], [839, 1987, 871, 2007], [838, 2015, 851, 2034], [884, 1996, 1049, 2033], [1066, 1997, 1105, 2024], [1118, 2005, 1172, 2024], [1182, 1996, 1367, 2033], [1381, 1996, 1437, 2024], [1450, 1996, 1567, 2025], [1579, 1996, 1614, 2024], [1623, 1997, 1675, 2024], [1687, 1996, 1739, 2024], [1752, 2000, 1803, 2024], [1813, 1996, 1890, 2024], [1901, 1996, 2052, 2033], [2065, 1996, 2174, 2024], [375, 2047, 487, 2081], [502, 2056, 535, 2075], [547, 2047, 627, 2075], [640, 2047, 678, 2075], [691, 2051, 742, 2075], [754, 2047, 829, 2075], [840, 2047, 1049, 2084], [1061, 2047, 1173, 2076], [1186, 2047, 1233, 2075], [1244, 2047, 1273, 2075], [1290, 2047, 1379, 2081], [1393, 2056, 1438, 2076], [1452, 2047, 1534, 2076], [1546, 2047, 1672, 2084], [1685, 2047, 1755, 2075], [1767, 2047, 1872, 2075], [1885, 2047, 1955, 2084], [1968, 2047, 2015, 2075], [2026, 2047, 2074, 2075], [2086, 2047, 2174, 2076], [377, 2098, 433, 2126], [445, 2098, 495, 2127], [507, 2098, 651, 2126], [667, 2099, 720, 2126], [731, 2107, 784, 2126], [798, 2107, 814, 2126], [825, 2098, 936, 2135], [949, 2107, 1005, 2135], [1018, 2098, 1053, 2126], [1065, 2092, 1144, 2127], [1160, 2107, 1190, 2126], [1203, 2098, 1251, 2126], [1264, 2098, 1401, 2135], [1414, 2098, 1560, 2132], [1574, 2107, 1619, 2127], [1633, 2098, 1695, 2126], [1709, 2098, 1765, 2126], [1778, 2107, 1814, 2126], [1826, 2102, 1906, 2126], [1916, 2098, 2069, 2135], [2081, 2098, 2176, 2126], [376, 2148, 422, 2176], [432, 2148, 520, 2177], [531, 2148, 602, 2177], [614, 2148, 761, 2176], [776, 2142, 855, 2177], [869, 2152, 899, 2176], [912, 2148, 999, 2177], [1010, 2148, 1089, 2185], [1103, 2148, 1240, 2185], [1252, 2148, 1309, 2176], [1321, 2152, 1350, 2176], [1362, 2148, 1534, 2185], [1547, 2148, 1703, 2176], [1715, 2148, 1917, 2176], [1929, 2148, 2052, 2176], [2068, 2148, 2173, 2185], [376, 2199, 412, 2227], [425, 2199, 524, 2228], [536, 2199, 643, 2227], [656, 2199, 704, 2227], [715, 2199, 764, 2227], [776, 2203, 836, 2228], [848, 2199, 1063, 2236], [1076, 2199, 1226, 2227], [1239, 2199, 1333, 2227], [1344, 2203, 1409, 2227], [438, 2250, 502, 2278], [516, 2250, 625, 2278], [641, 2250, 773, 2278], [789, 2250, 851, 2278], [866, 2250, 915, 2278], [930, 2250, 1143, 2287], [1158, 2250, 1194, 2278], [1207, 2250, 1297, 2279], [1313, 2250, 1372, 2278], [1387, 2250, 1439, 2279], [1454, 2250, 1561, 2278], [1577, 2250, 1751, 2287], [1767, 2250, 1799, 2278], [1813, 2250, 1863, 2278], [1879, 2254, 1939, 2279], [1955, 2250, 2174, 2287], [377, 2301, 538, 2329], [554, 2301, 656, 2329], [668, 2301, 717, 2329], [728, 2301, 836, 2329], [849, 2301, 897, 2329], [908, 2301, 958, 2329], [970, 2301, 1034, 2329], [1046, 2301, 1183, 2329], [1196, 2301, 1317, 2338], [1333, 2301, 1428, 2336], [1442, 2301, 1539, 2338], [1551, 2305, 1675, 2338], [1686, 2301, 1748, 2329], [1759, 2301, 1811, 2330], [1823, 2310, 1988, 2338], [2000, 2301, 2092, 2329], [2103, 2301, 2174, 2329], [376, 2352, 466, 2381], [480, 2352, 528, 2380], [541, 2352, 623, 2389], [638, 2352, 748, 2389], [765, 2352, 787, 2380], [801, 2352, 932, 2389], [947, 2352, 1022, 2380], [1038, 2361, 1072, 2380], [1087, 2352, 1261, 2389], [1276, 2361, 1317, 2380], [1330, 2352, 1380, 2380], [1395, 2352, 1458, 2380], [1472, 2352, 1509, 2380], [1521, 2351, 1542, 2381], [1556, 2352, 1680, 2381], [1694, 2356, 1725, 2380], [1744, 2349, 1821, 2390], [1828, 2376, 1833, 2380], [1855, 2352, 1977, 2386], [1994, 2352, 2044, 2380], [2059, 2352, 2174, 2380], [377, 2403, 514, 2431], [527, 2403, 648, 2440], [664, 2403, 763, 2438], [777, 2403, 878, 2432], [891, 2403, 953, 2431], [965, 2403, 1110, 2440], [1122, 2403, 1170, 2431], [1182, 2403, 1271, 2431], [1283, 2403, 1387, 2432], [1400, 2403, 1436, 2431], [1446, 2402, 1476, 2437], [1490, 2403, 1543, 2432], [1554, 2412, 1625, 2431], [1637, 2403, 1729, 2431], [1741, 2403, 1811, 2431], [1824, 2403, 1922, 2437], [1937, 2412, 1969, 2431], [1982, 2402, 2003, 2432], [2016, 2403, 2177, 2437], [376, 2453, 452, 2482], [464, 2453, 668, 2490], [681, 2462, 811, 2482], [824, 2453, 1032, 2490], [1046, 2462, 1079, 2481], [1092, 2453, 1181, 2481], [1192, 2453, 1252, 2481], [1264, 2453, 1311, 2481], [1321, 2453, 1502, 2490], [1515, 2453, 1593, 2490], [1607, 2452, 1637, 2487], [1650, 2453, 1672, 2481], [1683, 2453, 1708, 2481], [1720, 2453, 1827, 2481], [1840, 2457, 1869, 2481], [1881, 2453, 1943, 2481], [1956, 2462, 1992, 2481], [2005, 2453, 2173, 2490], [377, 2504, 505, 2532], [517, 2513, 591, 2533], [603, 2504, 676, 2532], [691, 2504, 796, 2538], [809, 2504, 958, 2532], [972, 2504, 1021, 2539], [1032, 2513, 1125, 2541], [1136, 2504, 1211, 2532], [1223, 2504, 1359, 2541], [1371, 2504, 1401, 2532], [1413, 2513, 1466, 2532], [1477, 2504, 1752, 2541], [1769, 2504, 1956, 2541], [1969, 2504, 2057, 2533], [2068, 2504, 2144, 2532], [2158, 2513, 2174, 2532], [377, 2555, 508, 2583], [521, 2555, 679, 2592], [691, 2555, 741, 2583], [754, 2555, 894, 2592], [906, 2555, 1045, 2583], [1056, 2555, 1151, 2583], [1162, 2564, 1251, 2592], [1264, 2555, 1413, 2589], [1427, 2555, 1493, 2583], [1507, 2555, 1644, 2592], [1657, 2564, 1673, 2583], [1685, 2564, 1769, 2583], [1780, 2555, 1883, 2583], [1893, 2555, 2043, 2584], [438, 2606, 533, 2634], [544, 2606, 649, 2634], [663, 2610, 782, 2643], [794, 2606, 854, 2634], [865, 2606, 887, 2634], [898, 2606, 922, 2634], [935, 2606, 1098, 2643], [1111, 2610, 1140, 2634], [1153, 2606, 1272, 2643], [1286, 2615, 1302, 2634], [1312, 2606, 1418, 2643], [1430, 2606, 1577, 2643], [1589, 2606, 1648, 2634], [1660, 2606, 1813, 2634], [1826, 2606, 1874, 2634], [1887, 2606, 2030, 2643], [2043, 2606, 2079, 2634], [2086, 2606, 2174, 2635], [377, 2657, 435, 2685], [449, 2657, 505, 2686], [522, 2657, 605, 2686], [619, 2666, 636, 2685], [648, 2657, 758, 2694], [773, 2657, 926, 2694], [939, 2657, 965, 2685], [980, 2657, 1094, 2694], [1106, 2657, 1197, 2694], [1211, 2657, 1261, 2685], [1275, 2657, 1437, 2694], [1452, 2657, 1656, 2694], [1671, 2657, 1872, 2692], [1886, 2657, 1951, 2685], [1965, 2657, 2002, 2685], [2013, 2657, 2128, 2685], [2150, 2657, 2176, 2685], [377, 2706, 398, 2736], [414, 2713, 440, 2737], [461, 2704, 539, 2745], [553, 2716, 609, 2735], [622, 2707, 678, 2741], [693, 2707, 856, 2736], [867, 2716, 923, 2735], [936, 2707, 1034, 2736], [1049, 2707, 1179, 2741], [1195, 2716, 1226, 2735], [1241, 2716, 1258, 2735], [1271, 2707, 1441, 2744], [1455, 2707, 1482, 2735], [1492, 2707, 1545, 2736], [1557, 2707, 1583, 2735], [1596, 2707, 1729, 2736], [1740, 2707, 1793, 2735], [1805, 2707, 1875, 2735], [1889, 2711, 1919, 2735], [1932, 2707, 1997, 2735], [2010, 2716, 2027, 2735], [2040, 2707, 2174, 2735], [374, 2758, 481, 2787], [494, 2757, 534, 2787], [548, 2758, 712, 2792], [728, 2758, 778, 2786], [790, 2758, 900, 2795], [914, 2758, 1025, 2786], [1039, 2758, 1147, 2787], [1160, 2762, 1191, 2786], [1205, 2758, 1303, 2787], [1319, 2758, 1391, 2786], [1405, 2758, 1616, 2786], [1629, 2762, 1807, 2795], [1820, 2758, 1907, 2795], [1920, 2767, 2129, 2795], [2143, 2758, 2174, 2786], [1255, 2935, 1294, 2964], [645, 873, 670, 893], [672, 864, 679, 877], [878, 873, 902, 893], [905, 864, 913, 877], [1110, 873, 1135, 893], [1138, 864, 1146, 877], [494, 769, 519, 789], [523, 759, 540, 772], [494, 614, 519, 634], [523, 605, 539, 618], [494, 459, 519, 479], [522, 450, 530, 463], [494, 305, 519, 325], [522, 296, 529, 309], [807, 899, 919, 923], [930, 899, 983, 923], [458, 624, 477, 643], [457, 618, 477, 621], [462, 589, 477, 614], [462, 573, 477, 589], [457, 555, 481, 562], [462, 540, 477, 553], [457, 529, 481, 536], [714, 262, 782, 291], [800, 261, 971, 299], [988, 261, 1071, 292], [614, 331, 722, 357], [734, 332, 819, 351], [832, 331, 958, 357], [614, 362, 722, 388], [734, 363, 819, 382], [832, 362, 938, 385], [612, 395, 666, 414], [675, 394, 740, 420], [752, 394, 878, 420], [612, 427, 666, 446], [675, 426, 740, 452], [752, 426, 859, 449], [825, 961, 858, 989], [1481, 872, 1506, 892], [1508, 862, 1527, 875], [1719, 872, 1744, 892], [1746, 862, 1754, 875], [1951, 872, 1976, 892], [1979, 862, 1987, 875], [1335, 845, 1360, 865], [1363, 834, 1381, 847], [1335, 665, 1360, 685], [1363, 655, 1381, 668], [1335, 486, 1360, 506], [1363, 475, 1381, 488], [1335, 306, 1360, 326], [1363, 296, 1378, 309], [1673, 898, 1774, 928], [1783, 898, 1799, 921], [1295, 623, 1318, 641], [1295, 618, 1318, 621], [1301, 592, 1318, 614], [1301, 574, 1319, 589], [1295, 555, 1325, 562], [1301, 540, 1319, 553], [1295, 530, 1325, 537], [1522, 262, 1585, 291], [1607, 262, 1779, 300], [1795, 262, 1948, 300], [1455, 332, 1564, 357], [1575, 332, 1662, 352], [1673, 332, 1799, 357], [1455, 363, 1564, 388], [1575, 363, 1662, 383], [1673, 363, 1780, 388], [1454, 395, 1506, 415], [1515, 394, 1582, 420], [1593, 395, 1719, 420], [1454, 427, 1506, 447], [1515, 426, 1582, 452], [1593, 427, 1700, 452], [1666, 960, 1700, 989], [376, 1056, 484, 1093], [500, 1056, 545, 1084], [563, 1056, 706, 1093], [719, 1056, 808, 1084], [822, 1056, 865, 1091], [879, 1056, 959, 1091], [972, 1056, 1021, 1084], [1032, 1056, 1190, 1093], [1202, 1057, 1332, 1085], [1346, 1056, 1405, 1084], [1416, 1057, 1489, 1084], [1502, 1056, 1602, 1093], [1615, 1056, 1731, 1085], [1743, 1056, 1792, 1084], [1803, 1056, 1957, 1093], [1969, 1056, 2028, 1084], [2038, 1056, 2175, 1084], [374, 1097, 454, 1135], [422, 1126, 433, 1145], [459, 1106, 634, 1143], [646, 1106, 718, 1135], [730, 1106, 899, 1143], [912, 1106, 940, 1141], [954, 1106, 1038, 1143], [1050, 1106, 1137, 1140], [1150, 1106, 1183, 1141], [1195, 1106, 1350, 1143], [1367, 1106, 1446, 1134], [1459, 1115, 1528, 1134], [1542, 1115, 1591, 1134], [1602, 1115, 1642, 1134], [1655, 1115, 1671, 1134], [1683, 1106, 1840, 1143], [645, 1841, 670, 1861], [673, 1831, 681, 1844], [878, 1841, 903, 1861], [905, 1831, 913, 1844], [1111, 1841, 1135, 1861], [1138, 1831, 1146, 1844], [494, 1723, 519, 1743], [522, 1713, 540, 1726], [494, 1633, 519, 1653], [522, 1623, 540, 1636], [494, 1543, 519, 1563], [522, 1533, 540, 1546], [494, 1453, 519, 1473], [522, 1442, 537, 1455], [494, 1363, 519, 1383], [522, 1352, 530, 1365], [494, 1272, 519, 1292], [523, 1262, 527, 1275], [807, 1867, 919, 1891], [931, 1867, 984, 1891], [454, 1591, 477, 1609], [454, 1586, 477, 1589], [460, 1560, 477, 1582], [460, 1542, 478, 1557], [454, 1523, 484, 1530], [460, 1507, 478, 1520], [454, 1497, 484, 1504], [715, 1229, 784, 1258], [800, 1229, 972, 1267], [987, 1229, 1073, 1259], [614, 1297, 669, 1318], [613, 1329, 648, 1350], [614, 1361, 723, 1382], [825, 1927, 858, 1955], [1481, 1839, 1506, 1859], [1508, 1829, 1527, 1842], [1719, 1839, 1744, 1859], [1746, 1829, 1754, 1842], [1952, 1839, 1976, 1859], [1979, 1829, 1987, 1842], [1335, 1749, 1360, 1769], [1363, 1739, 1381, 1752], [1335, 1630, 1360, 1650], [1363, 1620, 1381, 1633], [1335, 1511, 1360, 1531], [1363, 1500, 1381, 1513], [1335, 1392, 1360, 1412], [1363, 1381, 1378, 1394], [1335, 1272, 1360, 1292], [1363, 1262, 1371, 1275], [1673, 1865, 1774, 1895], [1783, 1865, 1799, 1888], [1295, 1590, 1318, 1608], [1295, 1585, 1318, 1588], [1301, 1559, 1318, 1581], [1301, 1541, 1319, 1556], [1295, 1521, 1325, 1528], [1301, 1506, 1319, 1519], [1295, 1496, 1325, 1503], [1522, 1229, 1591, 1258], [1607, 1229, 1779, 1267], [1795, 1229, 1948, 1267], [1455, 1297, 1510, 1318], [1454, 1329, 1490, 1350], [1455, 1361, 1564, 1382], [1666, 1926, 1700, 1955], [376, 2031, 484, 2068], [500, 2031, 545, 2059], [562, 2031, 705, 2068], [717, 2031, 806, 2059], [819, 2031, 863, 2066], [876, 2031, 956, 2066], [970, 2031, 1018, 2059], [1029, 2031, 1127, 2065], [1141, 2031, 1193, 2060], [1206, 2031, 1265, 2059], [1277, 2040, 1294, 2059], [1304, 2031, 1413, 2068], [1425, 2031, 1592, 2060], [1604, 2031, 1755, 2068], [1768, 2031, 1816, 2059], [1827, 2032, 1871, 2060], [1875, 2022, 1907, 2042], [1874, 2050, 1887, 2069], [1912, 2031, 2088, 2068], [2101, 2031, 2174, 2060], [376, 2082, 544, 2119], [557, 2082, 586, 2117], [599, 2082, 684, 2119], [696, 2082, 783, 2116], [795, 2082, 828, 2117], [840, 2082, 996, 2119], [1012, 2082, 1091, 2110], [1104, 2091, 1173, 2110], [1188, 2091, 1236, 2110], [1248, 2091, 1288, 2110], [1301, 2091, 1317, 2110], [1328, 2082, 1485, 2119], [375, 2215, 517, 2252], [546, 2215, 669, 2243], [686, 2215, 734, 2243], [750, 2215, 809, 2243], [825, 2215, 936, 2252], [953, 2215, 1106, 2252], [1123, 2224, 1172, 2243], [1189, 2215, 1254, 2243], [1271, 2215, 1416, 2243], [1432, 2215, 1464, 2243], [1480, 2215, 1530, 2243], [1546, 2215, 1626, 2252], [1644, 2215, 1676, 2243], [1692, 2215, 1800, 2252], [1821, 2215, 1866, 2249], [1887, 2215, 1946, 2243], [1963, 2215, 2048, 2244], [2064, 2215, 2134, 2244], [2152, 2215, 2175, 2243], [377, 2266, 577, 2303], [589, 2266, 708, 2294], [721, 2266, 771, 2294], [782, 2266, 926, 2295], [937, 2266, 973, 2294], [982, 2266, 1032, 2294], [1042, 2266, 1137, 2294], [1149, 2266, 1308, 2303], [1321, 2270, 1460, 2303], [1471, 2266, 1559, 2295], [1572, 2266, 1630, 2294], [1642, 2266, 1697, 2295], [376, 2377, 457, 2407], [500, 2377, 653, 2415], [665, 2377, 742, 2407], [754, 2378, 868, 2407], [881, 2377, 932, 2407], [943, 2378, 1060, 2415], [375, 2457, 452, 2485], [465, 2465, 510, 2485], [524, 2456, 606, 2485], [618, 2456, 723, 2484], [736, 2456, 783, 2484], [794, 2457, 839, 2485], [842, 2447, 874, 2467], [839, 2482, 855, 2501], [887, 2456, 1053, 2493], [1071, 2456, 1178, 2493], [1191, 2460, 1221, 2484], [1234, 2465, 1288, 2484], [1298, 2456, 1475, 2493], [1488, 2456, 1620, 2484], [1633, 2456, 1744, 2485], [1758, 2456, 1805, 2484], [1816, 2456, 1872, 2484], [1885, 2456, 2004, 2485], [2016, 2456, 2051, 2484], [2060, 2457, 2113, 2484], [2126, 2465, 2173, 2484], [376, 2511, 429, 2535], [441, 2507, 599, 2541], [614, 2507, 674, 2535], [686, 2507, 846, 2544], [859, 2507, 907, 2535], [920, 2507, 1041, 2544], [1053, 2507, 1103, 2535], [1114, 2506, 1147, 2548], [1152, 2507, 1227, 2535], [1238, 2507, 1409, 2544], [1420, 2507, 1561, 2544], [1572, 2507, 1612, 2535], [1624, 2507, 1711, 2541], [1726, 2507, 1801, 2535], [1813, 2516, 1845, 2535], [1858, 2507, 1908, 2535], [1920, 2517, 1979, 2544], [1991, 2507, 2131, 2535], [2143, 2507, 2174, 2535], [377, 2558, 472, 2587], [484, 2558, 594, 2595], [610, 2557, 683, 2592], [696, 2558, 792, 2586], [803, 2567, 844, 2586], [857, 2567, 874, 2586], [885, 2567, 955, 2586], [968, 2558, 1085, 2595], [1099, 2558, 1259, 2595], [1275, 2558, 1511, 2595], [1525, 2567, 1572, 2587], [1584, 2562, 1705, 2595], [1716, 2558, 1787, 2586], [1800, 2567, 1817, 2586], [1828, 2558, 2023, 2595], [2034, 2558, 2173, 2587], [376, 2609, 434, 2637], [445, 2609, 600, 2637], [611, 2609, 779, 2646], [793, 2609, 966, 2637], [979, 2609, 1038, 2637], [1049, 2618, 1104, 2637], [1115, 2609, 1283, 2637], [1294, 2609, 1462, 2646], [1474, 2609, 1563, 2638], [1575, 2609, 1746, 2637], [1757, 2609, 1788, 2637], [1800, 2618, 1855, 2637], [1865, 2609, 2018, 2646], [2029, 2609, 2175, 2638], [376, 2660, 541, 2697], [553, 2660, 650, 2689], [660, 2660, 696, 2688], [705, 2659, 770, 2697], [775, 2684, 779, 2688], [795, 2660, 857, 2688], [869, 2660, 1036, 2689], [1046, 2660, 1185, 2697], [1197, 2660, 1284, 2697], [1294, 2660, 1333, 2697], [1345, 2660, 1392, 2688], [1403, 2660, 1615, 2688], [1628, 2660, 1784, 2697], [1794, 2660, 1830, 2688], [1840, 2659, 1935, 2697], [1947, 2660, 1971, 2688], [1984, 2660, 2046, 2688], [2057, 2664, 2174, 2697], [376, 2711, 406, 2739], [418, 2711, 468, 2739], [480, 2711, 681, 2748], [696, 2712, 750, 2739], [761, 2720, 816, 2739], [829, 2720, 845, 2739], [857, 2711, 970, 2748], [983, 2720, 1041, 2748], [1053, 2711, 1089, 2739], [1101, 2704, 1179, 2740], [1195, 2720, 1226, 2739], [1240, 2711, 1381, 2748], [1393, 2711, 1532, 2739], [1544, 2711, 1617, 2739], [1629, 2711, 1677, 2739], [1688, 2711, 1740, 2740], [1752, 2711, 1810, 2739], [1822, 2712, 1888, 2739], [1901, 2711, 2009, 2748], [2024, 2711, 2058, 2740], [2073, 2711, 2172, 2740], [375, 2761, 481, 2789], [494, 2761, 542, 2789], [553, 2761, 602, 2789], [614, 2765, 674, 2790], [686, 2761, 901, 2798], [914, 2761, 1064, 2789], [1077, 2761, 1171, 2789], [1183, 2765, 1247, 2795], [1261, 2761, 1309, 2789], [1318, 2771, 1339, 2797], [1351, 2761, 1453, 2790], [1466, 2761, 1502, 2789], [1514, 2761, 1571, 2795], [1588, 2761, 1635, 2790], [1650, 2761, 1707, 2789], [1720, 2761, 1747, 2790], [1256, 2935, 1295, 2964], [459, 665, 481, 685], [553, 665, 577, 685], [648, 665, 672, 685], [742, 665, 766, 685], [837, 665, 861, 685], [931, 665, 955, 685], [435, 647, 466, 667], [435, 555, 466, 575], [435, 471, 452, 484], [454, 463, 459, 472], [435, 372, 459, 392], [435, 288, 452, 301], [453, 280, 459, 289], [647, 691, 723, 706], [731, 691, 767, 706], [409, 503, 424, 516], [409, 500, 424, 502], [413, 482, 424, 497], [413, 470, 424, 480], [409, 457, 428, 461], [413, 446, 424, 455], [409, 440, 428, 444], [548, 259, 595, 284], [605, 259, 722, 284], [732, 259, 790, 279], [800, 259, 865, 284], [517, 305, 577, 318], [517, 326, 598, 339], [518, 348, 544, 361], [517, 369, 581, 382], [657, 740, 690, 768], [1048, 665, 1070, 685], [1142, 665, 1166, 685], [1237, 665, 1261, 685], [1331, 665, 1355, 685], [1426, 665, 1450, 685], [1520, 665, 1544, 685], [1024, 647, 1055, 667], [1024, 555, 1055, 575], [1024, 471, 1041, 484], [1043, 463, 1048, 472], [1024, 372, 1048, 392], [1024, 288, 1041, 301], [1042, 280, 1048, 289], [1236, 691, 1312, 706], [1320, 691, 1356, 706], [998, 503, 1013, 516], [998, 500, 1013, 502], [1002, 482, 1013, 497], [1002, 470, 1013, 480], [998, 457, 1017, 461], [1002, 446, 1013, 455], [998, 440, 1017, 444], [1137, 259, 1184, 284], [1194, 259, 1311, 284], [1321, 259, 1379, 279], [1389, 259, 1427, 284], [1435, 259, 1453, 279], [1106, 305, 1166, 318], [1106, 326, 1187, 339], [1107, 348, 1133, 361], [1106, 369, 1170, 382], [1245, 739, 1280, 768], [1637, 665, 1659, 685], [1731, 665, 1755, 685], [1826, 665, 1850, 685], [1920, 665, 1944, 685], [2015, 665, 2039, 685], [2109, 665, 2133, 685], [1613, 647, 1644, 667], [1613, 555, 1644, 575], [1613, 471, 1630, 484], [1632, 463, 1637, 472], [1613, 372, 1637, 392], [1613, 288, 1630, 301], [1631, 280, 1637, 289], [1826, 691, 1901, 706], [1909, 691, 1945, 706], [1587, 503, 1602, 516], [1587, 500, 1602, 502], [1591, 482, 1602, 497], [1591, 470, 1602, 480], [1587, 457, 1606, 461], [1591, 446, 1602, 455], [1587, 440, 1606, 444], [1737, 259, 1784, 284], [1794, 259, 1911, 284], [1921, 259, 1979, 279], [1989, 259, 2031, 284], [1695, 305, 1755, 318], [1695, 326, 1776, 339], [1696, 348, 1722, 361], [1695, 369, 1759, 382], [1835, 740, 1868, 768], [376, 835, 484, 872], [501, 835, 547, 864], [566, 835, 710, 872], [723, 835, 813, 863], [827, 835, 872, 870], [886, 835, 966, 870], [981, 835, 1029, 863], [1041, 835, 1094, 864], [1107, 835, 1181, 864], [1193, 836, 1246, 863], [1258, 835, 1438, 872], [1453, 835, 1505, 864], [1518, 835, 1592, 864], [1606, 835, 1729, 864], [1743, 845, 1802, 872], [1815, 835, 1994, 872], [2009, 836, 2071, 863], [2085, 835, 2144, 863], [2158, 844, 2175, 863], [375, 886, 485, 923], [497, 886, 637, 915], [652, 886, 822, 923], [838, 886, 886, 914], [899, 887, 943, 915], [947, 876, 978, 896], [944, 911, 960, 930], [983, 886, 1161, 923], [1175, 886, 1249, 915], [1262, 886, 1434, 923], [1448, 886, 1534, 923], [1547, 886, 1626, 914], [1641, 886, 1700, 914], [1713, 886, 1796, 914], [1809, 886, 1953, 914], [1966, 886, 2090, 914], [2104, 886, 2141, 914], [2149, 896, 2179, 922], [376, 937, 454, 965], [468, 946, 537, 965], [551, 946, 599, 965], [611, 946, 651, 965], [664, 946, 680, 965], [692, 937, 849, 974], [466, 1456, 497, 1475], [583, 1456, 613, 1475], [703, 1456, 727, 1475], [820, 1456, 844, 1475], [937, 1456, 961, 1475], [440, 1438, 477, 1457], [440, 1347, 477, 1366], [440, 1257, 477, 1276], [440, 1167, 470, 1186], [440, 1076, 463, 1095], [709, 1478, 719, 1494], [413, 1297, 428, 1309], [417, 1286, 428, 1295], [417, 1274, 428, 1284], [413, 1270, 428, 1272], [417, 1252, 433, 1261], [417, 1240, 428, 1250], [417, 1228, 433, 1238], [535, 1054, 582, 1079], [591, 1054, 707, 1079], [717, 1054, 820, 1079], [829, 1054, 893, 1079], [527, 1099, 586, 1112], [527, 1121, 607, 1134], [528, 1142, 554, 1155], [527, 1163, 590, 1176], [662, 1530, 695, 1558], [1055, 1456, 1086, 1475], [1172, 1456, 1203, 1475], [1292, 1456, 1316, 1475], [1409, 1456, 1433, 1475], [1526, 1456, 1550, 1475], [1029, 1438, 1066, 1457], [1029, 1365, 1066, 1384], [1029, 1293, 1066, 1312], [1029, 1221, 1060, 1240], [1029, 1149, 1053, 1167], [1029, 1076, 1053, 1095], [1299, 1478, 1309, 1494], [1002, 1297, 1017, 1309], [1006, 1286, 1017, 1295], [1006, 1274, 1017, 1284], [1002, 1270, 1017, 1272], [1006, 1252, 1022, 1261], [1006, 1240, 1017, 1250], [1006, 1228, 1022, 1238], [1124, 1054, 1171, 1079], [1180, 1054, 1296, 1079], [1306, 1054, 1409, 1079], [1418, 1054, 1482, 1079], [1116, 1099, 1175, 1112], [1116, 1121, 1196, 1134], [1117, 1142, 1143, 1155], [1116, 1163, 1179, 1176], [1250, 1529, 1285, 1558], [1644, 1456, 1675, 1475], [1761, 1456, 1792, 1475], [1881, 1456, 1905, 1475], [1998, 1456, 2022, 1475], [2115, 1456, 2139, 1475], [1618, 1438, 1655, 1457], [1618, 1347, 1655, 1366], [1618, 1257, 1655, 1276], [1618, 1167, 1649, 1186], [1618, 1076, 1642, 1095], [1888, 1478, 1898, 1494], [1592, 1297, 1607, 1309], [1596, 1286, 1607, 1295], [1596, 1274, 1607, 1284], [1592, 1270, 1607, 1272], [1596, 1252, 1612, 1261], [1596, 1240, 1607, 1250], [1596, 1228, 1612, 1238], [1724, 1054, 1771, 1079], [1781, 1054, 1896, 1079], [1906, 1054, 2009, 1079], [2018, 1054, 2060, 1079], [1706, 1099, 1765, 1112], [1706, 1121, 1785, 1134], [1707, 1142, 1732, 1155], [1706, 1163, 1769, 1176], [1840, 1530, 1873, 1558], [455, 2020, 486, 2040], [573, 2020, 604, 2040], [695, 2020, 719, 2040], [813, 2020, 837, 2040], [931, 2020, 955, 2040], [435, 2001, 466, 2021], [435, 1910, 466, 1930], [435, 1826, 452, 1839], [454, 1818, 459, 1827], [435, 1727, 459, 1747], [435, 1636, 459, 1656], [701, 2043, 712, 2059], [409, 1858, 424, 1871], [409, 1855, 424, 1857], [413, 1837, 424, 1852], [413, 1825, 424, 1835], [409, 1812, 428, 1816], [413, 1801, 424, 1810], [409, 1795, 428, 1799], [525, 1614, 572, 1639], [582, 1614, 699, 1639], [709, 1614, 813, 1639], [822, 1614, 860, 1639], [868, 1614, 887, 1634], [517, 1660, 577, 1673], [517, 1681, 598, 1694], [518, 1703, 544, 1716], [517, 1725, 581, 1738], [656, 2094, 691, 2123], [1044, 2020, 1075, 2040], [1162, 2020, 1193, 2040], [1284, 2020, 1308, 2040], [1402, 2020, 1426, 2040], [1520, 2020, 1544, 2040], [1024, 2001, 1055, 2021], [1024, 1910, 1055, 1930], [1024, 1826, 1041, 1839], [1043, 1818, 1048, 1827], [1024, 1727, 1048, 1747], [1024, 1636, 1048, 1656], [1290, 2043, 1301, 2059], [998, 1858, 1013, 1871], [998, 1855, 1013, 1857], [1002, 1837, 1013, 1852], [1002, 1825, 1013, 1835], [998, 1812, 1017, 1816], [1002, 1801, 1013, 1810], [998, 1795, 1017, 1799], [1114, 1614, 1161, 1639], [1171, 1614, 1288, 1639], [1298, 1614, 1402, 1639], [1411, 1614, 1449, 1639], [1457, 1614, 1476, 1634], [1106, 1660, 1166, 1673], [1106, 1681, 1187, 1694], [1107, 1703, 1133, 1716], [1106, 1725, 1170, 1738], [1246, 2095, 1279, 2123], [1633, 2020, 1664, 2040], [1752, 2020, 1782, 2040], [1873, 2020, 1897, 2040], [1991, 2020, 2015, 2040], [2109, 2020, 2133, 2040], [1613, 2001, 1644, 2021], [1613, 1910, 1644, 1930], [1613, 1826, 1630, 1839], [1632, 1818, 1637, 1827], [1613, 1727, 1637, 1747], [1613, 1636, 1637, 1656], [1880, 2043, 1891, 2059], [1587, 1858, 1602, 1871], [1587, 1855, 1602, 1857], [1591, 1837, 1602, 1852], [1591, 1825, 1602, 1835], [1587, 1812, 1606, 1816], [1591, 1801, 1602, 1810], [1587, 1795, 1606, 1799], [1714, 1614, 1761, 1639], [1771, 1614, 1888, 1639], [1898, 1614, 2002, 1639], [2012, 1614, 2054, 1639], [1695, 1660, 1755, 1673], [1695, 1681, 1776, 1694], [1696, 1703, 1722, 1716], [1695, 1725, 1759, 1738], [1837, 2094, 1866, 2123], [376, 2190, 484, 2227], [501, 2190, 546, 2218], [564, 2190, 709, 2218], [721, 2190, 836, 2227], [849, 2199, 924, 2227], [938, 2190, 1014, 2225], [1028, 2190, 1087, 2218], [1098, 2190, 1229, 2227], [1241, 2190, 1331, 2218], [1345, 2190, 1414, 2225], [1428, 2190, 1460, 2218], [1473, 2190, 1554, 2225], [1567, 2190, 1616, 2218], [1627, 2190, 1680, 2219], [1692, 2190, 1766, 2219], [1778, 2191, 1830, 2218], [1842, 2190, 2021, 2227], [2035, 2190, 2088, 2219], [2100, 2190, 2174, 2219], [377, 2241, 495, 2270], [508, 2251, 565, 2278], [576, 2241, 750, 2278], [762, 2242, 823, 2269], [836, 2241, 892, 2269], [905, 2250, 921, 2269], [931, 2241, 1037, 2278], [1049, 2241, 1184, 2270], [1196, 2241, 1361, 2278], [1374, 2241, 1421, 2269], [1432, 2242, 1477, 2270], [1480, 2231, 1512, 2251], [1477, 2266, 1493, 2285], [1517, 2241, 1688, 2278], [1701, 2241, 1772, 2270], [1784, 2241, 1949, 2278], [1960, 2241, 2103, 2278], [2118, 2241, 2174, 2269], [376, 2292, 457, 2320], [469, 2292, 610, 2320], [621, 2292, 742, 2320], [756, 2292, 792, 2320], [799, 2302, 829, 2328], [845, 2292, 924, 2320], [937, 2301, 1006, 2320], [1021, 2301, 1069, 2320], [1081, 2301, 1121, 2320], [1134, 2301, 1150, 2320], [1161, 2292, 1318, 2329], [438, 2425, 467, 2453], [479, 2425, 607, 2453], [618, 2425, 654, 2453], [664, 2425, 840, 2462], [852, 2425, 1049, 2453], [1062, 2434, 1118, 2453], [1130, 2425, 1169, 2453], [1181, 2425, 1284, 2454], [1296, 2425, 1378, 2453], [1389, 2425, 1439, 2453], [1450, 2425, 1568, 2453], [1585, 2425, 1669, 2459], [1683, 2434, 1738, 2453], [1750, 2425, 1908, 2462], [1919, 2426, 2050, 2454], [2061, 2424, 2094, 2465], [2099, 2425, 2174, 2453], [377, 2476, 545, 2504], [557, 2476, 581, 2504], [594, 2476, 638, 2504], [648, 2485, 730, 2504], [741, 2476, 872, 2504], [883, 2476, 952, 2504], [963, 2486, 1019, 2513], [1031, 2476, 1118, 2505], [1129, 2476, 1160, 2504], [1171, 2476, 1218, 2504], [1230, 2480, 1348, 2504], [1359, 2476, 1394, 2504], [1402, 2476, 1450, 2504], [1462, 2476, 1512, 2505], [1524, 2476, 1626, 2505], [1643, 2477, 1711, 2505], [1723, 2476, 1831, 2504], [1844, 2485, 1926, 2504], [1936, 2480, 1966, 2504], [1977, 2476, 2014, 2504], [2026, 2476, 2073, 2504], [2085, 2485, 2173, 2504], [376, 2527, 411, 2555], [420, 2527, 486, 2555], [504, 2527, 534, 2555], [546, 2527, 594, 2555], [606, 2527, 669, 2555], [679, 2527, 765, 2564], [777, 2536, 831, 2555], [842, 2527, 996, 2564], [1007, 2528, 1135, 2556], [1148, 2527, 1295, 2564], [1306, 2536, 1412, 2564], [1426, 2531, 1455, 2555], [1467, 2527, 1504, 2555], [1517, 2527, 1607, 2555], [1618, 2527, 1687, 2555], [1699, 2527, 1747, 2555], [1759, 2536, 1828, 2555], [1840, 2527, 1954, 2564], [1967, 2527, 2088, 2555], [2099, 2527, 2174, 2555], [375, 2578, 416, 2615], [428, 2588, 496, 2615], [513, 2578, 673, 2615], [687, 2578, 718, 2606], [730, 2578, 818, 2606], [830, 2578, 878, 2606], [889, 2578, 939, 2606], [951, 2578, 1003, 2607], [1016, 2578, 1116, 2607], [1128, 2582, 1158, 2606], [1171, 2578, 1235, 2606], [1248, 2587, 1265, 2606], [1277, 2578, 1410, 2606], [1422, 2578, 1528, 2607], [1540, 2578, 1590, 2606], [1602, 2578, 1722, 2606], [1734, 2578, 1849, 2615], [1861, 2587, 1929, 2615], [1943, 2578, 1993, 2606], [2004, 2578, 2173, 2615], [377, 2628, 547, 2656], [559, 2632, 638, 2656], [649, 2628, 772, 2665], [785, 2637, 856, 2665], [869, 2632, 1002, 2656], [1014, 2628, 1119, 2656], [1134, 2628, 1236, 2663], [1251, 2622, 1346, 2657], [1361, 2628, 1391, 2656], [1403, 2632, 1492, 2656], [1505, 2628, 1540, 2656], [1550, 2628, 1662, 2665], [1674, 2628, 1753, 2665], [1770, 2628, 1867, 2657], [1879, 2628, 1915, 2656], [1927, 2629, 2056, 2657], [2068, 2632, 2177, 2662], [376, 2688, 429, 2707], [439, 2678, 471, 2720], [477, 2679, 548, 2707], [562, 2679, 730, 2707], [744, 2679, 837, 2707], [849, 2679, 942, 2707], [953, 2679, 983, 2707], [995, 2683, 1069, 2707], [1080, 2679, 1115, 2707], [1123, 2679, 1248, 2716], [1261, 2679, 1346, 2707], [1361, 2688, 1391, 2707], [1405, 2688, 1421, 2707], [1432, 2679, 1526, 2707], [1537, 2679, 1572, 2707], [1581, 2679, 1629, 2707], [1641, 2679, 1757, 2707], [1770, 2688, 1917, 2716], [1931, 2679, 2029, 2708], [2041, 2679, 2173, 2716], [375, 2730, 413, 2758], [425, 2730, 573, 2759], [585, 2730, 765, 2758], [778, 2730, 809, 2758], [820, 2730, 1038, 2767], [1256, 2935, 1291, 2964], [438, 243, 463, 270], [474, 242, 498, 270], [513, 242, 577, 270], [589, 242, 625, 270], [633, 242, 790, 271], [802, 242, 906, 279], [919, 242, 980, 270], [991, 242, 1208, 270], [1220, 242, 1245, 270], [1259, 242, 1462, 279], [1474, 242, 1565, 270], [1577, 242, 1647, 270], [1659, 242, 1814, 279], [1826, 243, 1964, 271], [1980, 242, 2051, 270], [2066, 242, 2174, 270], [376, 292, 550, 329], [562, 292, 610, 320], [621, 301, 674, 320], [686, 292, 722, 320], [730, 292, 883, 329], [893, 293, 1029, 326], [1041, 292, 1092, 320], [1104, 301, 1149, 321], [1162, 292, 1223, 320], [1235, 292, 1256, 320], [1268, 296, 1297, 320], [1309, 292, 1346, 320], [1358, 292, 1518, 329], [1530, 292, 1628, 320], [1640, 292, 1671, 320], [1682, 292, 1730, 320], [1741, 301, 1830, 329], [1843, 292, 1878, 320], [1888, 291, 1909, 321], [1920, 292, 2063, 329], [2076, 292, 2173, 321], [377, 342, 398, 372], [410, 343, 435, 371], [448, 343, 537, 380], [549, 343, 602, 371], [613, 347, 665, 371], [676, 343, 796, 380], [808, 347, 837, 371], [849, 343, 955, 371], [966, 343, 1015, 371], [1026, 343, 1163, 380], [1175, 343, 1271, 372], [1284, 343, 1328, 378], [1345, 356, 1373, 365], [1388, 343, 1405, 372], [1420, 343, 1571, 378], [1589, 344, 1621, 371], [1633, 343, 1690, 371], [1702, 352, 1794, 380], [1805, 343, 1854, 371], [1866, 347, 1925, 372], [1938, 343, 2065, 372], [2078, 343, 2114, 371], [2123, 344, 2174, 371], [377, 394, 435, 422], [448, 394, 512, 422], [525, 395, 586, 422], [599, 403, 648, 422], [659, 394, 770, 422], [783, 398, 813, 422], [826, 394, 890, 422], [902, 403, 919, 422], [931, 394, 1064, 422], [1076, 394, 1182, 423], [1194, 394, 1244, 422], [1256, 394, 1377, 422], [1388, 394, 1503, 431], [1515, 403, 1574, 431], [1587, 388, 1707, 429], [1721, 394, 1836, 431], [1849, 394, 1936, 422], [1949, 398, 1977, 422], [1989, 394, 2174, 431], [377, 445, 533, 473], [548, 446, 602, 473], [615, 445, 699, 474], [711, 445, 768, 473], [781, 445, 863, 473], [874, 445, 915, 482], [927, 454, 1030, 473], [1043, 445, 1079, 473], [1089, 454, 1105, 473], [1116, 445, 1224, 482], [1236, 445, 1373, 474], [1386, 445, 1554, 482], [1567, 445, 1598, 473], [1610, 445, 1710, 474], [1721, 445, 1846, 482], [1859, 445, 1939, 473], [1949, 445, 2023, 473], [2035, 445, 2172, 473], [377, 505, 425, 524], [438, 496, 624, 525], [637, 500, 666, 524], [679, 505, 696, 524], [707, 496, 783, 524], [796, 496, 833, 524], [847, 496, 883, 525], [896, 497, 958, 524], [970, 496, 1098, 533], [1110, 505, 1164, 533], [1180, 496, 1192, 524], [1209, 496, 1261, 525], [1273, 496, 1394, 533], [1410, 505, 1441, 524], [1455, 497, 1517, 524], [1529, 496, 1657, 533], [1671, 505, 1720, 524], [1733, 496, 1831, 524], [1850, 496, 1894, 524], [1907, 496, 1982, 524], [1995, 496, 2173, 533], [376, 550, 535, 583], [547, 546, 767, 583], [778, 546, 808, 574], [821, 546, 895, 574], [907, 546, 1044, 574], [1055, 546, 1107, 574], [1118, 546, 1224, 575], [1236, 546, 1378, 574], [1387, 546, 1567, 583], [1581, 546, 1629, 574], [1640, 546, 1733, 583], [1746, 555, 1789, 580], [1803, 546, 1872, 583], [1884, 546, 2088, 583], [2099, 546, 2174, 574], [376, 597, 460, 625], [471, 597, 577, 634], [590, 597, 734, 634], [747, 606, 763, 625], [776, 597, 910, 634], [922, 597, 1044, 625], [1057, 597, 1200, 634], [1212, 597, 1261, 625], [1273, 597, 1422, 634], [1434, 597, 1548, 634], [1560, 606, 1618, 634], [1631, 597, 1688, 625], [1699, 597, 1885, 634], [1897, 597, 1988, 625], [2000, 597, 2069, 625], [2081, 597, 2137, 626], [376, 708, 456, 738], [500, 708, 653, 746], [665, 708, 742, 738], [754, 709, 868, 738], [881, 708, 932, 738], [943, 709, 1077, 738], [375, 789, 431, 816], [440, 788, 657, 825], [668, 797, 713, 817], [725, 788, 787, 816], [798, 788, 916, 816], [926, 788, 1030, 816], [1042, 788, 1089, 816], [1098, 797, 1152, 816], [1161, 789, 1205, 817], [1209, 778, 1241, 798], [1208, 813, 1237, 826], [1255, 788, 1352, 817], [1360, 788, 1452, 816], [1462, 797, 1502, 816], [1512, 788, 1562, 817], [1573, 795, 1594, 816], [1605, 797, 1621, 816], [1632, 788, 1768, 816], [1777, 787, 1808, 822], [1815, 788, 1991, 825], [2002, 788, 2179, 816], [375, 838, 480, 875], [496, 837, 529, 867], [541, 842, 673, 875], [684, 838, 809, 875], [822, 838, 907, 866], [920, 838, 967, 866], [977, 838, 1025, 866], [1036, 842, 1095, 867], [1107, 838, 1316, 875], [1330, 838, 1477, 866], [1489, 838, 1582, 866], [1592, 842, 1655, 866], [1673, 838, 1760, 867], [1771, 837, 1802, 873], [1809, 838, 1985, 875], [1996, 838, 2020, 866], [2034, 847, 2070, 866], [2081, 838, 2176, 866], [375, 889, 511, 926], [522, 889, 591, 917], [602, 889, 650, 917], [663, 889, 780, 926], [792, 888, 824, 929], [829, 889, 1006, 926], [1018, 889, 1065, 917], [1077, 889, 1217, 917], [1230, 889, 1387, 926], [1398, 898, 1557, 926], [1570, 889, 1660, 917], [1671, 893, 1700, 917], [1713, 889, 1761, 917], [1774, 889, 1903, 917], [1915, 889, 1984, 917], [1995, 889, 2043, 917], [2056, 889, 2173, 926], [376, 940, 427, 969], [439, 931, 519, 969], [484, 965, 500, 984], [532, 949, 607, 977], [620, 940, 726, 974], [740, 949, 771, 968], [784, 940, 938, 977], [712, 1602, 744, 1628], [919, 1602, 951, 1628], [1126, 1602, 1158, 1628], [578, 1586, 601, 1604], [603, 1577, 619, 1588], [578, 1507, 601, 1525], [603, 1498, 619, 1509], [578, 1419, 619, 1445], [578, 1340, 616, 1366], [578, 1269, 601, 1287], [603, 1260, 610, 1271], [578, 1190, 601, 1208], [604, 1181, 607, 1192], [578, 1102, 610, 1128], [857, 1634, 956, 1655], [966, 1634, 1013, 1655], [543, 1392, 563, 1407], [543, 1387, 563, 1389], [548, 1363, 563, 1382], [548, 1347, 564, 1360], [543, 1330, 569, 1336], [548, 1316, 564, 1328], [543, 1308, 569, 1314], [773, 1070, 840, 1095], [852, 1070, 1006, 1103], [1019, 1070, 1096, 1096], [684, 1133, 717, 1152], [870, 1691, 903, 1719], [1458, 1609, 1482, 1627], [1484, 1600, 1500, 1611], [1670, 1609, 1693, 1627], [1695, 1600, 1702, 1611], [1877, 1609, 1900, 1627], [1902, 1600, 1909, 1611], [1329, 1522, 1352, 1540], [1354, 1513, 1370, 1524], [1329, 1308, 1370, 1334], [1329, 1102, 1367, 1128], [1631, 1632, 1719, 1658], [1728, 1631, 1742, 1652], [1294, 1391, 1314, 1406], [1294, 1386, 1314, 1388], [1299, 1362, 1314, 1381], [1299, 1346, 1315, 1359], [1294, 1329, 1320, 1335], [1299, 1315, 1315, 1327], [1294, 1307, 1320, 1313], [1494, 1070, 1561, 1095], [1574, 1070, 1728, 1103], [1742, 1070, 1877, 1103], [1435, 1133, 1468, 1152], [1621, 1690, 1655, 1719], [375, 1794, 480, 1831], [495, 1793, 539, 1823], [556, 1794, 694, 1831], [706, 1794, 791, 1822], [805, 1794, 847, 1829], [859, 1794, 937, 1829], [949, 1794, 996, 1822], [1007, 1794, 1057, 1823], [1068, 1794, 1115, 1822], [1125, 1795, 1170, 1823], [1173, 1785, 1205, 1805], [1172, 1820, 1201, 1833], [1210, 1794, 1381, 1831], [1393, 1794, 1464, 1823], [1475, 1794, 1640, 1831], [1653, 1794, 1681, 1829], [1693, 1794, 1775, 1831], [1787, 1794, 1872, 1828], [1884, 1794, 1917, 1829], [1928, 1794, 2080, 1831], [2096, 1794, 2174, 1822], [377, 1854, 445, 1873], [460, 1854, 508, 1873], [520, 1854, 560, 1873], [573, 1854, 589, 1873], [601, 1845, 758, 1882], [376, 1999, 457, 2029], [499, 1999, 716, 2037], [733, 1999, 895, 2029], [907, 1999, 1128, 2037], [1141, 1999, 1191, 2029], [1203, 2000, 1423, 2029], [373, 2079, 426, 2106], [438, 2087, 506, 2107], [517, 2082, 637, 2115], [649, 2087, 665, 2106], [676, 2078, 734, 2115], [747, 2078, 927, 2115], [939, 2078, 1001, 2106], [1011, 2078, 1137, 2106], [1151, 2078, 1230, 2106], [1241, 2087, 1296, 2106], [1307, 2079, 1360, 2106], [1371, 2087, 1446, 2115], [1458, 2082, 1619, 2115], [1636, 2078, 1856, 2107], [1869, 2078, 1941, 2113], [1957, 2078, 2030, 2112], [2045, 2087, 2061, 2106], [2072, 2078, 2174, 2106], [376, 2129, 437, 2157], [448, 2129, 530, 2157], [543, 2129, 593, 2157], [605, 2129, 684, 2157], [889, 2180, 956, 2208], [912, 2220, 930, 2233], [1013, 2173, 1024, 2192], [1012, 2172, 1228, 2222], [1215, 2199, 1228, 2218], [1243, 2184, 1271, 2211], [1285, 2177, 1408, 2218], [1424, 2184, 1452, 2211], [1466, 2179, 1552, 2214], [1556, 2171, 1587, 2191], [1556, 2199, 1567, 2218], [1594, 2177, 1658, 2218], [2097, 2179, 2173, 2215], [374, 2275, 436, 2303], [447, 2274, 478, 2310], [485, 2284, 583, 2303], [594, 2275, 624, 2303], [637, 2274, 713, 2310], [726, 2275, 823, 2303], [836, 2284, 924, 2312], [937, 2285, 969, 2310], [985, 2279, 1014, 2303], [1026, 2275, 1063, 2303], [1076, 2284, 1153, 2309], [1166, 2275, 1255, 2304], [1267, 2276, 1312, 2304], [1316, 2266, 1347, 2286], [1316, 2295, 1327, 2314], [1362, 2275, 1459, 2304], [1472, 2284, 1601, 2303], [1614, 2279, 1808, 2312], [1821, 2279, 1851, 2303], [1864, 2284, 1971, 2312], [1982, 2275, 2013, 2303], [2024, 2275, 2128, 2303], [2142, 2275, 2177, 2303], [376, 2326, 463, 2363], [475, 2326, 576, 2355], [590, 2336, 664, 2360], [682, 2339, 710, 2348], [725, 2336, 758, 2360], [775, 2339, 803, 2348], [818, 2336, 892, 2363], [910, 2339, 938, 2348], [956, 2350, 960, 2354], [974, 2350, 978, 2354], [993, 2350, 1007, 2354], [1025, 2326, 1086, 2354], [1098, 2327, 1146, 2354], [1157, 2326, 1259, 2354], [1270, 2326, 1323, 2354], [1335, 2326, 1412, 2354], [1425, 2326, 1624, 2363], [1637, 2326, 1756, 2363], [1768, 2326, 1798, 2354], [1811, 2326, 1923, 2355], [1934, 2326, 2172, 2354], [377, 2377, 572, 2414], [588, 2377, 647, 2411], [661, 2377, 710, 2411], [724, 2376, 785, 2411], [800, 2386, 830, 2405], [844, 2377, 866, 2405], [877, 2377, 1007, 2405], [1019, 2377, 1100, 2414], [1110, 2377, 1288, 2414], [1302, 2377, 1392, 2405], [1403, 2377, 1594, 2406], [1606, 2377, 1750, 2405], [1763, 2377, 1794, 2405], [1806, 2377, 1999, 2414], [2012, 2377, 2173, 2414], [377, 2428, 472, 2457], [484, 2432, 513, 2456], [524, 2437, 609, 2456], [438, 2479, 607, 2516], [620, 2479, 669, 2507], [682, 2479, 766, 2507], [777, 2479, 939, 2516], [950, 2479, 981, 2507], [994, 2479, 1061, 2508], [1075, 2479, 1103, 2513], [1118, 2479, 1202, 2507], [1214, 2479, 1264, 2507], [1276, 2480, 1323, 2507], [1335, 2479, 1439, 2507], [1450, 2488, 1521, 2507], [1534, 2483, 1595, 2508], [1606, 2479, 1812, 2516], [1826, 2488, 1874, 2508], [1886, 2488, 1942, 2507], [1953, 2488, 2009, 2507], [2021, 2479, 2174, 2507], [376, 2529, 508, 2566], [520, 2538, 551, 2557], [564, 2529, 614, 2557], [626, 2529, 784, 2557], [795, 2533, 826, 2557], [837, 2529, 948, 2557], [960, 2529, 1010, 2557], [1021, 2538, 1097, 2566], [1109, 2533, 1254, 2566], [1270, 2530, 1312, 2557], [1324, 2529, 1469, 2557], [1481, 2529, 1531, 2557], [1542, 2529, 1671, 2557], [1684, 2529, 1720, 2557], [1730, 2529, 1788, 2557], [1801, 2529, 1982, 2558], [1994, 2529, 2024, 2557], [2037, 2533, 2128, 2557], [2141, 2529, 2177, 2557], [375, 2580, 555, 2617], [569, 2589, 616, 2609], [629, 2580, 718, 2617], [730, 2580, 753, 2608], [764, 2584, 794, 2608], [807, 2580, 921, 2609], [933, 2580, 1060, 2609], [1073, 2580, 1109, 2608], [1118, 2581, 1174, 2608], [439, 2674, 455, 2690], [479, 2664, 699, 2693], [712, 2663, 801, 2699], [816, 2665, 1041, 2701], [1055, 2664, 1116, 2692], [1131, 2663, 1192, 2699], [1208, 2668, 1236, 2695], [1248, 2665, 1293, 2693], [1297, 2655, 1328, 2675], [1297, 2684, 1308, 2703], [1344, 2673, 1374, 2692], [1388, 2664, 1418, 2692], [1431, 2663, 1507, 2699], [439, 2742, 455, 2758], [478, 2731, 679, 2772], [697, 2731, 815, 2761], [834, 2731, 925, 2767], [947, 2733, 1177, 2769], [1196, 2732, 1260, 2760], [1280, 2731, 1341, 2766], [1362, 2736, 1390, 2763], [1407, 2733, 1451, 2761], [1455, 2722, 1486, 2742], [1452, 2757, 1468, 2776], [1492, 2756, 1497, 2760], [1532, 2732, 1663, 2769], [1681, 2732, 1820, 2760], [1838, 2732, 1953, 2760], [1970, 2741, 2033, 2761], [2053, 2732, 2175, 2769], [480, 2783, 600, 2811], [612, 2783, 654, 2820], [667, 2783, 753, 2811], [767, 2783, 826, 2811], [839, 2783, 1000, 2811], [1016, 2782, 1089, 2817], [1105, 2783, 1182, 2811], [1196, 2783, 1349, 2820], [1361, 2783, 1516, 2820], [1530, 2792, 1567, 2811], [1579, 2782, 1596, 2811], [1597, 2782, 1613, 2801], [1597, 2783, 1692, 2827], [1705, 2783, 1887, 2820], [1900, 2783, 1932, 2811], [1945, 2783, 1995, 2811], [2009, 2792, 2098, 2811], [2112, 2783, 2175, 2811], [1256, 2935, 1295, 2964], [166, 19, 333, 67], [364, 21, 527, 67], [310, 250, 396, 270], [518, 204, 548, 224], [560, 204, 640, 224], [305, 329, 405, 359], [865, 19, 1108, 67], [1137, 19, 1322, 67], [1057, 190, 1143, 210], [1253, 192, 1307, 212], [1319, 192, 1399, 212], [1052, 329, 1152, 359], [1183, 251, 1215, 271], [39, 461, 262, 521], [291, 461, 459, 509], [490, 463, 653, 509], [310, 692, 396, 712], [518, 646, 548, 666], [560, 646, 640, 666], [305, 771, 405, 801], [796, 463, 913, 521], [938, 461, 1182, 509], [1211, 461, 1396, 509], [1057, 632, 1143, 652], [1253, 634, 1307, 654], [1319, 634, 1399, 654], [1052, 771, 1152, 801], [1183, 693, 1215, 713], [729, 1132, 836, 1169], [851, 1132, 896, 1161], [926, 1132, 1134, 1160], [1146, 1132, 1263, 1160], [1278, 1132, 1439, 1160], [1450, 1132, 1491, 1169], [1502, 1132, 1651, 1169], [1664, 1132, 1806, 1169], [479, 1280, 554, 1321], [571, 1296, 599, 1305], [615, 1271, 717, 1322], [658, 1305, 708, 1324], [734, 1280, 815, 1321], [831, 1300, 857, 1301], [870, 1280, 934, 1321], [948, 1283, 972, 1311], [984, 1283, 1059, 1311], [1070, 1283, 1184, 1311], [1195, 1283, 1231, 1311], [1239, 1283, 1287, 1311], [1299, 1284, 1351, 1311], [1363, 1283, 1539, 1320], [1549, 1284, 1594, 1312], [1597, 1274, 1629, 1294], [1594, 1280, 1730, 1328], [1750, 1263, 1872, 1338], [1813, 1305, 1863, 1324], [1889, 1280, 1970, 1321], [1987, 1300, 2013, 1301], [2027, 1252, 2168, 1338], [2175, 1307, 2179, 1311], [479, 1343, 574, 1380], [587, 1344, 648, 1383], [663, 1343, 744, 1371], [757, 1347, 786, 1371], [800, 1352, 816, 1371], [828, 1352, 909, 1371], [922, 1343, 1123, 1372], [1135, 1343, 1253, 1380], [1266, 1343, 1326, 1371], [1338, 1343, 1410, 1371], [1423, 1347, 1474, 1371], [1485, 1343, 1675, 1372], [1687, 1343, 1735, 1371], [1747, 1343, 1905, 1371], [1922, 1343, 1992, 1371], [2004, 1344, 2051, 1371], [2063, 1343, 2174, 1372], [480, 1403, 578, 1422], [591, 1398, 622, 1422], [633, 1394, 672, 1422], [683, 1403, 756, 1423], [439, 1471, 455, 1487], [479, 1460, 726, 1498], [745, 1461, 829, 1490], [848, 1460, 965, 1496], [986, 1461, 1203, 1498], [1223, 1460, 1285, 1495], [1305, 1465, 1333, 1492], [1351, 1462, 1395, 1490], [1399, 1451, 1430, 1471], [1399, 1480, 1410, 1499], [1435, 1485, 1441, 1495], [1463, 1461, 1565, 1490], [1584, 1461, 1634, 1489], [1652, 1461, 1716, 1489], [1735, 1461, 1819, 1489], [1839, 1461, 1888, 1489], [1907, 1461, 1989, 1489], [2005, 1458, 2074, 1499], [2087, 1458, 2115, 1499], [2144, 1474, 2172, 1483], [480, 1520, 519, 1562], [523, 1545, 532, 1564], [544, 1522, 595, 1560], [610, 1503, 645, 1578], [660, 1527, 688, 1554], [702, 1514, 808, 1551], [811, 1510, 828, 1524], [811, 1530, 818, 1544], [833, 1514, 904, 1543], [911, 1503, 941, 1578], [962, 1523, 1021, 1551], [1037, 1532, 1094, 1551], [1109, 1523, 1149, 1551], [1164, 1523, 1242, 1551], [1257, 1523, 1289, 1551], [1306, 1532, 1323, 1551], [1339, 1524, 1386, 1551], [1403, 1523, 1602, 1551], [1618, 1527, 1648, 1551], [1665, 1523, 1770, 1551], [1786, 1523, 1906, 1551], [1923, 1532, 2008, 1551], [2026, 1523, 2179, 1560], [480, 1589, 526, 1613], [538, 1585, 586, 1613], [597, 1585, 812, 1613], [824, 1594, 864, 1613], [877, 1594, 893, 1613], [905, 1585, 1019, 1613], [1032, 1582, 1114, 1623], [1126, 1582, 1193, 1623], [1210, 1584, 1283, 1619], [439, 1663, 455, 1679], [479, 1652, 619, 1690], [630, 1660, 651, 1681], [663, 1652, 821, 1693], [834, 1652, 949, 1688], [965, 1653, 1098, 1690], [1111, 1653, 1172, 1681], [1187, 1652, 1249, 1687], [1264, 1657, 1292, 1684], [1305, 1654, 1349, 1682], [1353, 1643, 1385, 1663], [1350, 1677, 1396, 1697], [438, 1738, 479, 1765], [493, 1737, 579, 1766], [591, 1737, 677, 1765], [689, 1737, 819, 1766], [832, 1737, 869, 1765], [878, 1738, 935, 1771], [950, 1737, 989, 1765], [1002, 1737, 1064, 1765], [1075, 1737, 1207, 1765], [1220, 1737, 1246, 1765], [1259, 1741, 1290, 1765], [1303, 1741, 1447, 1774], [1459, 1737, 1509, 1765], [1521, 1737, 1674, 1774], [1687, 1737, 1723, 1765], [1733, 1737, 1783, 1765], [1795, 1737, 1859, 1765], [1872, 1737, 2036, 1771], [2049, 1737, 2103, 1765], [2114, 1737, 2173, 1765], [376, 1788, 441, 1816], [452, 1788, 477, 1816], [490, 1788, 593, 1817], [609, 1788, 691, 1816], [703, 1788, 739, 1816], [748, 1788, 830, 1816], [843, 1788, 911, 1816], [922, 1788, 1038, 1816], [1051, 1797, 1107, 1816], [1117, 1788, 1155, 1816], [1168, 1788, 1237, 1816], [1250, 1788, 1354, 1817], [1366, 1788, 1461, 1825], [1472, 1788, 1512, 1825], [1524, 1788, 1665, 1825], [1679, 1797, 1736, 1825], [1747, 1788, 1895, 1825], [1908, 1788, 2039, 1825], [2052, 1788, 2174, 1816], [375, 1839, 416, 1876], [431, 1839, 653, 1876], [667, 1839, 816, 1876], [830, 1839, 862, 1867], [875, 1839, 1013, 1876], [1027, 1839, 1086, 1867], [1098, 1848, 1174, 1876], [1188, 1843, 1353, 1876], [1374, 1839, 1581, 1876], [1596, 1839, 1646, 1867], [1660, 1838, 1763, 1868], [1776, 1839, 1887, 1876], [1904, 1839, 1965, 1873], [1982, 1839, 2121, 1867], [2137, 1848, 2174, 1867], [376, 1889, 631, 1926], [643, 1889, 678, 1917], [686, 1889, 796, 1918], [811, 1889, 872, 1923], [887, 1889, 1030, 1926], [1043, 1889, 1132, 1917], [1144, 1889, 1191, 1917], [1201, 1889, 1299, 1917], [1309, 1890, 1413, 1923], [1427, 1889, 1525, 1918], [1537, 1898, 1583, 1918], [1594, 1889, 1666, 1917], [1678, 1898, 1732, 1917], [1743, 1889, 1940, 1926], [1953, 1898, 2000, 1917], [2016, 1889, 2122, 1926], [2139, 1889, 2173, 1918], [377, 1940, 475, 1969], [490, 1949, 506, 1968], [518, 1940, 681, 1968], [694, 1940, 730, 1968], [739, 1940, 788, 1968], [801, 1940, 989, 1977], [1002, 1940, 1139, 1968], [1153, 1940, 1200, 1968], [1212, 1940, 1332, 1977], [1344, 1940, 1418, 1968], [1431, 1941, 1478, 1968], [1489, 1940, 1600, 1968], [438, 1991, 592, 2020], [614, 1991, 643, 2019], [657, 1991, 772, 2019], [786, 1991, 978, 2028], [993, 1991, 1217, 2028], [1230, 2000, 1288, 2019], [1301, 1991, 1340, 2019], [1354, 1991, 1499, 2019], [1512, 1991, 1553, 2028], [1567, 1991, 1714, 2028], [1729, 1991, 1791, 2019], [1805, 1991, 1853, 2019], [1867, 1988, 1941, 2029], [1963, 2004, 1991, 2013], [2011, 1988, 2135, 2029], [2152, 1995, 2180, 2022], [376, 2041, 463, 2076], [466, 2032, 498, 2052], [466, 2061, 477, 2080], [505, 2039, 557, 2080], [575, 2042, 624, 2070], [638, 2051, 715, 2079], [730, 2046, 870, 2079], [884, 2051, 978, 2080], [1000, 2051, 1028, 2068], [1047, 2051, 1219, 2087], [1234, 2052, 1250, 2068], [1261, 2051, 1433, 2084], [1412, 2075, 1421, 2089], [1439, 2058, 1469, 2087], [1477, 2066, 1482, 2070], [1507, 2042, 1589, 2071], [1604, 2051, 1621, 2070], [1635, 2042, 1883, 2079], [1897, 2042, 1972, 2070], [1988, 2046, 2041, 2070], [2054, 2042, 2175, 2079], [375, 2093, 458, 2127], [473, 2093, 527, 2121], [540, 2093, 563, 2121], [576, 2102, 634, 2121], [646, 2093, 686, 2121], [701, 2093, 808, 2122], [822, 2097, 853, 2121], [866, 2093, 941, 2121], [955, 2093, 1003, 2121], [1017, 2093, 1076, 2121], [1090, 2093, 1252, 2130], [1265, 2102, 1336, 2121], [1354, 2093, 1413, 2127], [1430, 2093, 1478, 2127], [1494, 2093, 1556, 2127], [1579, 2093, 1753, 2127], [1770, 2093, 1818, 2121], [1832, 2094, 1879, 2121], [1895, 2093, 1953, 2121], [1967, 2094, 2041, 2121], [2055, 2102, 2102, 2122], [2117, 2102, 2174, 2121], [376, 2147, 514, 2180], [527, 2143, 575, 2171], [586, 2143, 733, 2180], [745, 2147, 881, 2180], [892, 2143, 939, 2171], [950, 2143, 998, 2171], [1010, 2143, 1170, 2171], [1181, 2143, 1358, 2180], [1369, 2153, 1386, 2171], [1399, 2143, 1528, 2180], [1542, 2143, 1607, 2171], [1620, 2143, 1774, 2180], [1787, 2143, 1835, 2171], [1847, 2143, 1923, 2171], [1935, 2143, 1982, 2171], [1994, 2152, 2010, 2171], [2022, 2143, 2176, 2171], [377, 2194, 544, 2231], [560, 2194, 631, 2222], [644, 2194, 669, 2222], [683, 2194, 748, 2222], [761, 2194, 865, 2223], [877, 2194, 908, 2222], [920, 2194, 1027, 2231], [1043, 2194, 1087, 2223], [376, 2305, 457, 2335], [500, 2306, 720, 2335], [732, 2305, 958, 2343], [975, 2305, 1160, 2335], [374, 2385, 435, 2413], [448, 2385, 583, 2413], [593, 2386, 639, 2413], [651, 2385, 750, 2413], [760, 2385, 813, 2413], [824, 2385, 900, 2413], [911, 2385, 1111, 2414], [1121, 2385, 1152, 2413], [1162, 2385, 1210, 2413], [1221, 2385, 1375, 2419], [1389, 2394, 1422, 2413], [1434, 2394, 1450, 2413], [1460, 2385, 1584, 2413], [1594, 2385, 1629, 2413], [1636, 2385, 1775, 2422], [1787, 2385, 1958, 2422], [1971, 2385, 2141, 2422], [2153, 2385, 2174, 2413], [375, 2435, 449, 2464], [463, 2435, 580, 2472], [591, 2435, 668, 2463], [679, 2435, 836, 2472], [853, 2435, 915, 2463], [928, 2435, 1182, 2463], [1193, 2435, 1398, 2463], [1412, 2435, 1570, 2472], [1581, 2435, 1611, 2463], [1623, 2435, 1671, 2463], [1683, 2434, 1786, 2464], [1798, 2435, 1904, 2472], [1917, 2444, 1972, 2463], [1983, 2435, 2021, 2463], [2032, 2435, 2174, 2472], [377, 2495, 408, 2514], [422, 2486, 472, 2514], [486, 2490, 561, 2514], [574, 2486, 610, 2514], [620, 2486, 670, 2514], [684, 2490, 735, 2520], [750, 2486, 874, 2523], [888, 2486, 1044, 2515], [1056, 2495, 1111, 2514], [1124, 2486, 1160, 2514], [1172, 2495, 1209, 2514], [1222, 2486, 1359, 2514], [1370, 2486, 1535, 2523], [1550, 2486, 1726, 2514], [1740, 2486, 1877, 2521], [1892, 2486, 1957, 2515], [1969, 2486, 2173, 2523], [376, 2546, 417, 2565], [429, 2538, 474, 2566], [477, 2527, 509, 2547], [477, 2556, 488, 2575], [514, 2537, 692, 2574], [706, 2536, 802, 2574], [815, 2537, 893, 2566], [907, 2537, 1029, 2574], [1043, 2537, 1150, 2566], [1164, 2537, 1344, 2574], [1358, 2537, 1394, 2565], [1404, 2546, 1460, 2565], [1471, 2546, 1547, 2574], [1562, 2537, 1678, 2566], [1692, 2546, 1764, 2566], [1777, 2537, 1888, 2571], [1904, 2537, 1985, 2566], [1996, 2537, 2129, 2565], [2143, 2541, 2173, 2565], [375, 2588, 414, 2616], [426, 2588, 564, 2616], [576, 2588, 602, 2616], [615, 2588, 750, 2617], [762, 2588, 821, 2616], [834, 2588, 949, 2616], [960, 2588, 1015, 2616], [1029, 2597, 1046, 2616], [1059, 2588, 1234, 2625], [1246, 2588, 1360, 2625], [1372, 2597, 1413, 2616], [1425, 2588, 1475, 2616], [1488, 2588, 1603, 2617], [1615, 2589, 1663, 2616], [1677, 2588, 1783, 2617], [1802, 2589, 1843, 2616], [1857, 2588, 1897, 2616], [1911, 2597, 1955, 2622], [1969, 2597, 2017, 2617], [2030, 2597, 2174, 2625], [375, 2639, 503, 2676], [515, 2639, 602, 2667], [615, 2639, 687, 2668], [701, 2639, 847, 2676], [860, 2639, 936, 2667], [437, 2690, 491, 2717], [508, 2693, 649, 2726], [664, 2689, 794, 2717], [809, 2689, 950, 2717], [968, 2687, 1001, 2717], [1024, 2695, 1045, 2719], [1069, 2687, 1172, 2717], [1191, 2689, 1265, 2718], [1280, 2689, 1313, 2717], [1317, 2689, 1353, 2717], [1371, 2689, 1482, 2717], [1499, 2689, 1603, 2718], [1618, 2689, 1700, 2717], [1716, 2698, 1733, 2717], [1748, 2698, 1819, 2717], [1835, 2698, 1934, 2723], [1952, 2689, 2018, 2717], [2033, 2689, 2174, 2718], [376, 2740, 528, 2777], [552, 2741, 606, 2768], [622, 2744, 668, 2768], [681, 2740, 731, 2768], [745, 2740, 894, 2777], [910, 2744, 941, 2768], [957, 2739, 993, 2774], [1016, 2753, 1044, 2762], [1065, 2739, 1102, 2774], [1124, 2753, 1152, 2762], [1175, 2740, 1221, 2769], [1244, 2741, 1299, 2768], [1315, 2740, 1410, 2768], [1423, 2740, 1473, 2768], [1488, 2744, 1592, 2769], [1607, 2740, 1643, 2768], [1654, 2749, 1817, 2777], [1833, 2749, 1856, 2776], [1871, 2740, 1961, 2777], [1977, 2740, 2027, 2768], [2041, 2740, 2175, 2768], [376, 2800, 399, 2827], [414, 2804, 442, 2813], [457, 2788, 607, 2829], [618, 2795, 646, 2822], [656, 2788, 704, 2829], [717, 2791, 814, 2820], [827, 2800, 863, 2825], [869, 2815, 875, 2825], [889, 2791, 945, 2819], [956, 2800, 977, 2819], [991, 2800, 1038, 2819], [1049, 2791, 1173, 2819], [1183, 2795, 1297, 2820], [1310, 2791, 1412, 2820], [1423, 2791, 1529, 2819], [1540, 2791, 1615, 2820], [1626, 2791, 1776, 2820], [1791, 2791, 1804, 2819], [1819, 2791, 1876, 2819], [1888, 2791, 1968, 2825], [1979, 2791, 2179, 2828], [1256, 2935, 1293, 2964], [374, 242, 438, 270], [450, 242, 615, 270], [626, 242, 734, 270], [748, 251, 796, 270], [809, 242, 1012, 270], [1023, 242, 1054, 270], [1066, 242, 1173, 279], [1189, 242, 1234, 276], [1248, 242, 1348, 271], [1361, 251, 1519, 279], [1531, 246, 1584, 270], [1595, 242, 1631, 270], [1640, 242, 1690, 270], [1701, 242, 1763, 270], [1776, 242, 1871, 271], [1884, 242, 2017, 277], [2030, 242, 2093, 277], [2109, 241, 2171, 276], [377, 292, 494, 329], [509, 292, 559, 320], [575, 301, 647, 329], [665, 301, 749, 320], [766, 292, 928, 329], [943, 292, 1122, 329], [1138, 301, 1194, 320], [1209, 292, 1269, 320], [1283, 292, 1462, 329], [1479, 283, 1558, 321], [1527, 312, 1538, 331], [1577, 292, 1678, 321], [1693, 292, 1812, 320], [1827, 292, 1863, 320], [1877, 292, 1926, 320], [1942, 292, 2059, 320], [2073, 292, 2175, 321], [377, 343, 552, 371], [564, 343, 600, 371], [610, 343, 710, 372], [724, 343, 928, 380], [941, 343, 966, 371], [979, 343, 1059, 371], [1070, 343, 1111, 380], [1125, 343, 1264, 380], [1276, 343, 1326, 371], [1337, 343, 1461, 372], [1473, 343, 1610, 371], [1622, 347, 1652, 371], [1665, 343, 1715, 371], [1726, 343, 1893, 380], [1906, 343, 2057, 380], [2068, 352, 2173, 372], [376, 394, 454, 422], [471, 394, 532, 422], [544, 394, 666, 431], [679, 394, 779, 423], [792, 394, 823, 422], [834, 394, 907, 422], [920, 394, 1025, 431], [1038, 403, 1115, 423], [1127, 394, 1282, 422], [1292, 394, 1332, 431], [1343, 394, 1469, 431], [1480, 394, 1552, 422], [1565, 394, 1735, 431], [1748, 394, 1795, 422], [1807, 403, 1823, 422], [1834, 403, 1904, 431], [1916, 394, 1995, 431], [2007, 394, 2131, 422], [2142, 394, 2177, 422], [376, 445, 537, 473], [558, 1024, 587, 1048], [781, 1024, 810, 1048], [337, 913, 374, 937], [337, 791, 358, 807], [360, 782, 374, 793], [337, 660, 358, 676], [360, 651, 374, 662], [609, 1054, 676, 1077], [688, 1054, 720, 1081], [307, 946, 323, 960], [311, 930, 323, 943], [306, 925, 323, 928], [311, 911, 323, 922], [308, 901, 323, 909], [306, 898, 323, 901], [311, 883, 323, 896], [311, 870, 323, 883], [306, 849, 323, 862], [306, 844, 323, 847], [311, 831, 323, 842], [308, 821, 323, 829], [311, 810, 323, 821], [311, 795, 323, 807], [311, 781, 323, 793], [311, 768, 323, 781], [308, 751, 323, 759], [311, 739, 323, 752], [311, 718, 323, 731], [311, 702, 328, 715], [308, 694, 323, 702], [306, 691, 323, 694], [311, 667, 323, 688], [311, 655, 323, 667], [311, 631, 323, 652], [417, 534, 504, 559], [519, 535, 603, 559], [618, 534, 705, 559], [717, 534, 749, 559], [762, 541, 777, 559], [789, 534, 915, 559], [459, 965, 507, 980], [459, 987, 628, 1007], [1052, 1024, 1081, 1048], [1283, 1024, 1313, 1048], [1515, 1024, 1544, 1048], [1003, 944, 1024, 960], [1026, 935, 1040, 946], [1003, 822, 1024, 838], [1026, 813, 1040, 824], [1003, 691, 1040, 715], [1003, 577, 1024, 593], [1026, 568, 1032, 579], [1275, 1054, 1342, 1077], [1354, 1054, 1386, 1081], [973, 946, 989, 960], [977, 930, 989, 943], [972, 925, 989, 928], [977, 911, 989, 922], [974, 901, 989, 909], [972, 898, 989, 901], [977, 883, 989, 896], [977, 870, 989, 883], [972, 849, 989, 862], [972, 844, 989, 847], [977, 831, 989, 842], [974, 821, 989, 829], [977, 810, 989, 821], [977, 795, 989, 807], [977, 781, 989, 793], [977, 768, 989, 781], [974, 751, 989, 759], [977, 739, 989, 752], [977, 718, 989, 731], [977, 702, 994, 715], [974, 694, 989, 702], [972, 691, 989, 694], [977, 667, 989, 688], [977, 655, 989, 667], [977, 631, 989, 652], [1074, 534, 1161, 559], [1176, 535, 1259, 559], [1274, 534, 1362, 559], [1375, 534, 1425, 559], [1438, 541, 1453, 559], [1465, 534, 1590, 559], [1125, 965, 1173, 980], [1125, 987, 1294, 1007], [1735, 1024, 1764, 1048], [1973, 1024, 2003, 1048], [2212, 1024, 2241, 1048], [1669, 853, 1690, 869], [1692, 844, 1706, 855], [1669, 659, 1706, 683], [1941, 1054, 2008, 1077], [2020, 1054, 2052, 1081], [1639, 946, 1655, 960], [1643, 930, 1655, 943], [1638, 925, 1655, 928], [1643, 911, 1655, 922], [1640, 901, 1655, 909], [1638, 898, 1655, 901], [1643, 883, 1655, 896], [1643, 870, 1655, 883], [1638, 849, 1655, 862], [1638, 844, 1655, 847], [1643, 831, 1655, 842], [1640, 821, 1655, 829], [1643, 810, 1655, 821], [1643, 795, 1655, 807], [1643, 781, 1655, 793], [1643, 768, 1655, 781], [1640, 751, 1655, 759], [1643, 739, 1655, 752], [1643, 718, 1655, 731], [1643, 702, 1660, 715], [1640, 694, 1655, 702], [1638, 691, 1655, 694], [1643, 667, 1655, 688], [1643, 655, 1655, 667], [1643, 631, 1655, 652], [1739, 534, 1827, 559], [1842, 535, 1925, 559], [1940, 534, 2027, 559], [2039, 534, 2091, 559], [2103, 541, 2118, 559], [2131, 534, 2256, 559], [1791, 965, 1839, 980], [1791, 987, 1960, 1007], [397, 1601, 426, 1625], [642, 1601, 671, 1625], [887, 1601, 916, 1625], [337, 1510, 374, 1534], [337, 1417, 374, 1441], [337, 1333, 358, 1349], [360, 1324, 374, 1335], [337, 1232, 366, 1256], [609, 1631, 676, 1654], [688, 1631, 720, 1658], [307, 1523, 323, 1537], [311, 1508, 323, 1521], [306, 1502, 323, 1505], [311, 1489, 323, 1500], [308, 1478, 323, 1486], [306, 1475, 323, 1478], [311, 1460, 323, 1473], [311, 1448, 323, 1461], [306, 1426, 323, 1439], [306, 1421, 323, 1424], [311, 1408, 323, 1419], [308, 1398, 323, 1406], [311, 1387, 323, 1398], [311, 1372, 323, 1384], [311, 1359, 323, 1371], [311, 1345, 323, 1358], [308, 1328, 323, 1336], [311, 1316, 323, 1329], [311, 1295, 323, 1308], [311, 1279, 328, 1292], [308, 1271, 323, 1279], [306, 1268, 323, 1271], [311, 1244, 323, 1265], [311, 1232, 323, 1244], [311, 1208, 323, 1229], [417, 1111, 504, 1136], [519, 1112, 603, 1136], [618, 1111, 705, 1136], [717, 1111, 768, 1136], [781, 1118, 796, 1136], [808, 1111, 915, 1136], [459, 1542, 507, 1557], [459, 1565, 628, 1585], [1091, 1601, 1120, 1625], [1339, 1601, 1368, 1625], [1587, 1601, 1617, 1625], [1003, 1566, 1024, 1582], [1026, 1557, 1040, 1568], [1003, 1449, 1040, 1473], [1003, 1349, 1024, 1365], [1026, 1340, 1040, 1351], [1003, 1232, 1032, 1256], [1275, 1631, 1342, 1654], [1354, 1631, 1386, 1658], [973, 1523, 989, 1537], [977, 1508, 989, 1521], [972, 1502, 989, 1505], [977, 1489, 989, 1500], [974, 1478, 989, 1486], [972, 1475, 989, 1478], [977, 1460, 989, 1473], [977, 1448, 989, 1461], [972, 1426, 989, 1439], [972, 1421, 989, 1424], [977, 1408, 989, 1419], [974, 1398, 989, 1406], [977, 1387, 989, 1398], [977, 1372, 989, 1384], [977, 1359, 989, 1371], [977, 1345, 989, 1358], [974, 1328, 989, 1336], [977, 1316, 989, 1329], [977, 1295, 989, 1308], [977, 1279, 994, 1292], [974, 1271, 989, 1279], [972, 1268, 989, 1271], [977, 1244, 989, 1265], [977, 1232, 989, 1244], [977, 1208, 989, 1229], [1074, 1111, 1161, 1136], [1176, 1112, 1259, 1136], [1274, 1111, 1362, 1136], [1375, 1111, 1443, 1136], [1456, 1118, 1471, 1136], [1483, 1111, 1590, 1136], [1125, 1542, 1173, 1557], [1125, 1565, 1294, 1585], [1758, 1601, 1787, 1625], [2007, 1601, 2036, 1625], [2255, 1601, 2284, 1625], [1668, 1538, 1689, 1554], [1691, 1529, 1706, 1540], [1668, 1393, 1706, 1417], [1668, 1257, 1706, 1281], [1940, 1631, 2006, 1654], [2019, 1631, 2050, 1658], [1639, 1524, 1655, 1538], [1643, 1508, 1655, 1521], [1638, 1503, 1655, 1506], [1643, 1489, 1655, 1500], [1640, 1479, 1655, 1487], [1638, 1476, 1655, 1479], [1643, 1461, 1655, 1474], [1643, 1448, 1655, 1461], [1638, 1427, 1655, 1440], [1638, 1422, 1655, 1425], [1643, 1409, 1655, 1420], [1640, 1399, 1655, 1407], [1643, 1388, 1655, 1399], [1643, 1373, 1655, 1385], [1643, 1360, 1655, 1372], [1643, 1346, 1655, 1359], [1640, 1329, 1655, 1337], [1643, 1317, 1655, 1330], [1643, 1296, 1655, 1309], [1643, 1281, 1660, 1294], [1640, 1272, 1655, 1280], [1638, 1269, 1655, 1272], [1643, 1246, 1655, 1267], [1643, 1233, 1655, 1245], [1643, 1210, 1655, 1231], [1739, 1113, 1826, 1138], [1841, 1114, 1924, 1138], [1939, 1113, 2026, 1138], [2038, 1113, 2107, 1138], [2120, 1120, 2135, 1138], [2148, 1113, 2254, 1138], [1790, 1542, 1838, 1557], [1790, 1565, 1959, 1585], [376, 1746, 484, 1783], [501, 1746, 547, 1774], [567, 1746, 704, 1775], [718, 1746, 854, 1774], [868, 1750, 898, 1774], [912, 1746, 1064, 1783], [1076, 1755, 1112, 1775], [1126, 1746, 1199, 1774], [1212, 1746, 1248, 1774], [1259, 1746, 1309, 1774], [1322, 1746, 1422, 1774], [1435, 1747, 1531, 1774], [1545, 1746, 1721, 1783], [1734, 1746, 1831, 1774], [1843, 1746, 2048, 1783], [2063, 1746, 2111, 1774], [2124, 1746, 2174, 1774], [376, 1797, 517, 1825], [528, 1797, 645, 1834], [658, 1797, 694, 1825], [704, 1797, 850, 1834], [863, 1797, 1011, 1825], [438, 1906, 502, 1934], [513, 1906, 594, 1943], [607, 1906, 692, 1935], [706, 1915, 723, 1934], [734, 1906, 815, 1934], [826, 1906, 920, 1934], [938, 1906, 1028, 1935], [1040, 1906, 1090, 1934], [1102, 1906, 1188, 1943], [1199, 1906, 1340, 1934], [1352, 1906, 1468, 1934], [1481, 1915, 1498, 1934], [1509, 1915, 1582, 1943], [1594, 1906, 1676, 1943], [1688, 1906, 1814, 1934], [1825, 1906, 2000, 1934], [2012, 1906, 2062, 1934], [2073, 1915, 2128, 1934], [2140, 1906, 2176, 1934], [376, 1966, 431, 1985], [442, 1957, 613, 1994], [625, 1947, 704, 1986], [673, 1976, 684, 1995], [720, 1957, 820, 1986], [831, 1961, 913, 1985], [926, 1957, 989, 1985], [1002, 1957, 1153, 1994], [1166, 1957, 1196, 1985], [1209, 1957, 1419, 1994], [1431, 1957, 1529, 1991], [1543, 1957, 1644, 1986], [1655, 1957, 1797, 1986], [1808, 1957, 1938, 1985], [1949, 1957, 2115, 1994], [2127, 1957, 2175, 1985], [376, 2007, 511, 2035], [523, 2007, 594, 2036], [605, 2016, 621, 2035], [631, 2016, 713, 2035], [723, 2007, 867, 2035], [877, 2007, 1102, 2036], [1113, 2007, 1195, 2035], [1212, 2007, 1281, 2035], [1292, 2007, 1382, 2035], [1393, 2007, 1417, 2035], [1428, 2007, 1610, 2041], [1624, 2016, 1654, 2035], [1666, 2007, 1713, 2035], [1725, 2011, 1825, 2036], [1835, 2017, 1856, 2035], [1867, 2007, 1960, 2035], [1970, 2007, 2174, 2044], [375, 2058, 429, 2086], [444, 2058, 507, 2086], [519, 2058, 609, 2095], [621, 2062, 652, 2086], [665, 2058, 715, 2086], [727, 2058, 856, 2086], [867, 2058, 903, 2086], [913, 2058, 1054, 2086], [1067, 2058, 1103, 2086], [1113, 2058, 1163, 2086], [1176, 2058, 1245, 2086], [1257, 2058, 1365, 2086], [1378, 2056, 1416, 2086], [1433, 2058, 1462, 2086], [1472, 2056, 1501, 2086], [1513, 2058, 1568, 2086], [1582, 2067, 1599, 2086], [1610, 2058, 1692, 2095], [1705, 2058, 1833, 2086], [1845, 2058, 1881, 2086], [1891, 2058, 2032, 2086], [2045, 2058, 2095, 2086], [2107, 2062, 2175, 2086], [376, 2109, 412, 2137], [422, 2109, 544, 2146], [556, 2099, 636, 2138], [604, 2128, 615, 2147], [650, 2109, 676, 2137], [690, 2109, 872, 2146], [887, 2109, 946, 2137], [958, 2109, 1026, 2137], [1040, 2118, 1097, 2146], [1110, 2109, 1334, 2146], [1345, 2109, 1376, 2137], [1388, 2109, 1447, 2137], [1461, 2113, 1526, 2146], [1537, 2109, 1592, 2137], [1606, 2118, 1623, 2137], [1634, 2109, 1806, 2137], [1819, 2109, 1933, 2146], [1944, 2118, 1985, 2137], [1997, 2109, 2047, 2137], [2059, 2109, 2174, 2138], [377, 2160, 545, 2197], [562, 2160, 754, 2197], [768, 2160, 857, 2189], [869, 2160, 919, 2188], [931, 2160, 1057, 2188], [1069, 2160, 1105, 2188], [1113, 2169, 1192, 2189], [1205, 2160, 1235, 2188], [1248, 2158, 1277, 2188], [1289, 2160, 1315, 2188], [1327, 2160, 1409, 2197], [1421, 2160, 1470, 2188], [1482, 2164, 1549, 2188], [1560, 2160, 1596, 2188], [1605, 2160, 1782, 2197], [1795, 2160, 1844, 2188], [1856, 2160, 1993, 2197], [2004, 2160, 2040, 2188], [2049, 2160, 2098, 2188], [2110, 2160, 2173, 2188], [376, 2211, 514, 2239], [527, 2211, 572, 2246], [581, 2203, 592, 2222], [580, 2205, 797, 2253], [784, 2230, 797, 2249], [814, 2224, 842, 2233], [858, 2204, 915, 2239], [929, 2208, 1002, 2249], [1017, 2228, 1043, 2229], [1056, 2208, 1109, 2249], [1123, 2211, 1302, 2245], [1316, 2211, 1431, 2248], [1443, 2211, 1561, 2239], [1572, 2211, 1701, 2239], [1714, 2211, 1795, 2239], [1807, 2211, 1881, 2239], [1893, 2211, 2130, 2248], [2143, 2211, 2174, 2239], [375, 2270, 450, 2298], [462, 2261, 692, 2298], [708, 2261, 878, 2295], [892, 2261, 914, 2289], [925, 2261, 950, 2289], [963, 2261, 1011, 2289], [1022, 2261, 1089, 2289], [1101, 2261, 1173, 2290], [1186, 2270, 1202, 2289], [1214, 2270, 1285, 2298], [1297, 2261, 1378, 2298], [1389, 2261, 1515, 2289], [1526, 2261, 1562, 2289], [1571, 2261, 1699, 2289], [1712, 2261, 1812, 2290], [1824, 2270, 1878, 2289], [1888, 2261, 2039, 2298], [2051, 2261, 2174, 2289], [376, 2321, 431, 2340], [442, 2312, 568, 2349], [581, 2321, 597, 2340], [608, 2312, 709, 2340], [722, 2312, 864, 2349], [376, 2423, 457, 2453], [500, 2424, 720, 2453], [732, 2423, 967, 2461], [985, 2423, 1189, 2461], [1202, 2423, 1426, 2453], [376, 2504, 454, 2532], [470, 2512, 518, 2532], [532, 2507, 633, 2540], [646, 2503, 755, 2531], [771, 2503, 807, 2531], [821, 2503, 966, 2540], [981, 2503, 1031, 2531], [1046, 2503, 1116, 2531], [1130, 2504, 1178, 2531], [1193, 2503, 1313, 2531], [1328, 2512, 1369, 2531], [1385, 2512, 1402, 2531], [1417, 2503, 1510, 2531], [1526, 2503, 1562, 2531], [1573, 2503, 1729, 2540], [1745, 2503, 1827, 2531], [1840, 2503, 2095, 2531], [2119, 2504, 2174, 2531], [376, 2557, 433, 2581], [444, 2553, 494, 2581], [505, 2554, 553, 2581], [565, 2553, 683, 2581], [696, 2562, 736, 2581], [747, 2553, 853, 2590], [865, 2553, 1082, 2581], [1094, 2553, 1175, 2581], [1188, 2553, 1236, 2581], [1247, 2553, 1297, 2581], [1309, 2553, 1468, 2590], [1480, 2553, 1542, 2581], [1554, 2553, 1735, 2590], [1748, 2553, 1887, 2581], [1905, 2553, 2088, 2590], [2104, 2553, 2177, 2587], [375, 2604, 551, 2632], [567, 2604, 640, 2638], [653, 2604, 751, 2633], [766, 2604, 839, 2638], [852, 2604, 981, 2633], [996, 2603, 1057, 2638], [1073, 2604, 1129, 2632], [1141, 2605, 1196, 2632], [1211, 2604, 1282, 2638], [1299, 2604, 1379, 2632], [1391, 2604, 1503, 2632], [1515, 2613, 1575, 2633], [1589, 2604, 1657, 2641], [1668, 2604, 1729, 2632], [1742, 2604, 1821, 2632], [1834, 2604, 1920, 2641], [1931, 2608, 2009, 2641], [2023, 2604, 2173, 2641], [377, 2655, 492, 2683], [504, 2655, 683, 2692], [696, 2655, 732, 2683], [744, 2655, 859, 2683], [873, 2655, 905, 2683], [919, 2664, 1009, 2692], [1024, 2655, 1107, 2692], [1122, 2655, 1171, 2683], [1184, 2655, 1323, 2692], [1339, 2655, 1506, 2684], [1520, 2655, 1579, 2683], [1593, 2659, 1659, 2683], [1680, 2655, 1744, 2683], [1757, 2655, 1881, 2692], [1894, 2659, 2079, 2692], [2093, 2664, 2174, 2684], [376, 2706, 471, 2734], [482, 2706, 522, 2743], [534, 2706, 708, 2735], [720, 2706, 785, 2743], [798, 2706, 901, 2734], [913, 2706, 944, 2734], [956, 2706, 1005, 2734], [1016, 2715, 1108, 2743], [1120, 2705, 1169, 2742], [1182, 2705, 1219, 2740], [1237, 2712, 1258, 2736], [1278, 2699, 1367, 2744], [1375, 2730, 1379, 2742], [1393, 2700, 1457, 2744], [1472, 2710, 1502, 2734], [1515, 2706, 1677, 2734], [1689, 2706, 1904, 2734], [1917, 2715, 2061, 2743], [2073, 2715, 2113, 2734], [2125, 2706, 2174, 2734], [374, 2757, 538, 2786], [551, 2757, 645, 2794], [1256, 2935, 1295, 2964], [374, 270, 462, 298], [476, 270, 502, 299], [520, 270, 742, 299], [755, 270, 922, 298], [936, 270, 983, 298], [994, 270, 1042, 298], [1054, 270, 1211, 307], [1222, 270, 1435, 298], [1448, 270, 1564, 298], [1577, 279, 1617, 298], [1628, 270, 1807, 307], [1819, 270, 1894, 298], [1910, 271, 1967, 298], [1978, 270, 2026, 298], [2038, 270, 2173, 298], [376, 321, 487, 349], [499, 321, 616, 349], [630, 330, 667, 349], [678, 320, 710, 355], [725, 321, 845, 350], [857, 321, 893, 349], [902, 322, 955, 349], [968, 330, 1029, 350], [1042, 321, 1213, 358], [850, 397, 974, 424], [1118, 397, 1165, 424], [1254, 395, 1352, 430], [1433, 397, 1505, 424], [1577, 395, 1696, 430], [850, 487, 1033, 524], [1088, 487, 1192, 516], [1252, 487, 1356, 516], [1413, 486, 1520, 516], [1585, 487, 1689, 516], [850, 538, 1029, 566], [1085, 537, 1192, 567], [1253, 538, 1356, 567], [1413, 537, 1520, 567], [1586, 538, 1689, 567], [850, 589, 950, 618], [1085, 588, 1192, 618], [1249, 588, 1356, 618], [1413, 588, 1520, 618], [1582, 588, 1689, 618], [850, 640, 981, 669], [1085, 639, 1192, 669], [1253, 640, 1356, 669], [1417, 640, 1454, 669], [1460, 640, 1520, 669], [1586, 640, 1689, 669], [850, 691, 908, 718], [1088, 690, 1192, 719], [1252, 689, 1356, 719], [1413, 689, 1520, 719], [1582, 689, 1689, 719], [438, 847, 529, 875], [545, 847, 561, 876], [580, 847, 681, 876], [697, 851, 755, 875], [771, 847, 953, 875], [979, 848, 1013, 875], [1028, 847, 1159, 884], [1178, 856, 1210, 875], [1226, 847, 1375, 884], [1389, 847, 1439, 875], [1455, 847, 1657, 884], [1672, 847, 1768, 875], [1783, 848, 1830, 875], [1846, 847, 1966, 875], [1982, 847, 2065, 884], [2079, 847, 2175, 875], [376, 897, 589, 925], [602, 897, 770, 925], [783, 897, 852, 925], [864, 897, 949, 925], [961, 897, 1054, 925], [1066, 906, 1106, 925], [1117, 897, 1337, 934], [1352, 906, 1382, 925], [1397, 897, 1470, 925], [1482, 897, 1543, 925], [1556, 897, 1692, 925], [1704, 897, 1788, 925], [1801, 901, 1831, 925], [1843, 897, 1880, 925], [1893, 906, 1975, 925], [1989, 897, 2173, 934], [376, 948, 422, 976], [431, 948, 642, 976], [651, 948, 809, 985], [826, 949, 972, 977], [981, 948, 1028, 976], [1039, 948, 1167, 977], [1177, 948, 1289, 976], [1297, 957, 1403, 985], [1414, 952, 1443, 976], [1453, 948, 1490, 976], [1502, 957, 1538, 976], [1547, 948, 1712, 985], [1725, 948, 1858, 985], [1868, 948, 1961, 976], [1969, 948, 2173, 985], [375, 999, 468, 1027], [478, 1008, 494, 1027], [505, 999, 629, 1036], [639, 999, 709, 1027], [725, 999, 892, 1036], [903, 999, 950, 1027], [961, 999, 1206, 1036], [1218, 999, 1266, 1027], [1277, 999, 1383, 1027], [1394, 1000, 1438, 1028], [1442, 990, 1474, 1010], [1442, 1018, 1453, 1037], [1479, 999, 1609, 1036], [1621, 1008, 1717, 1027], [1728, 1003, 1758, 1027], [1768, 999, 1899, 1036], [1908, 999, 2001, 1027], [2010, 999, 2041, 1027], [2051, 999, 2178, 1036], [374, 1050, 446, 1079], [458, 1050, 507, 1078], [519, 1051, 564, 1079], [567, 1040, 599, 1060], [566, 1069, 579, 1088], [604, 1050, 737, 1087], [750, 1050, 887, 1087], [899, 1050, 1092, 1087], [1103, 1050, 1209, 1078], [1223, 1050, 1253, 1078], [1267, 1059, 1352, 1078], [1365, 1050, 1497, 1087], [376, 1164, 435, 1199], [488, 1164, 642, 1199], [659, 1164, 927, 1208], [942, 1164, 1021, 1199], [1034, 1164, 1300, 1208], [373, 1250, 425, 1277], [438, 1249, 556, 1277], [569, 1258, 636, 1278], [649, 1249, 759, 1278], [771, 1249, 910, 1286], [923, 1249, 1116, 1286], [1129, 1249, 1189, 1277], [1199, 1249, 1310, 1277], [1321, 1249, 1400, 1277], [1410, 1249, 1681, 1278], [1694, 1250, 1745, 1277], [1757, 1249, 1991, 1286], [2005, 1258, 2059, 1277], [2068, 1249, 2173, 1277], [377, 1299, 460, 1328], [473, 1299, 559, 1336], [570, 1299, 639, 1328], [651, 1299, 699, 1327], [711, 1299, 868, 1336], [880, 1290, 960, 1328], [925, 1325, 967, 1344], [981, 1308, 1056, 1336], [1068, 1303, 1218, 1336], [1232, 1299, 1279, 1327], [1292, 1299, 1323, 1327], [1336, 1299, 1512, 1336], [1523, 1299, 1585, 1327], [1598, 1308, 1652, 1327], [1663, 1299, 1800, 1327], [1811, 1299, 1989, 1328], [2000, 1303, 2030, 1327], [2042, 1299, 2173, 1336], [376, 1350, 510, 1378], [520, 1350, 669, 1387], [682, 1350, 816, 1387], [829, 1350, 952, 1379], [376, 1461, 455, 1491], [500, 1462, 609, 1499], [621, 1461, 788, 1499], [800, 1462, 940, 1499], [953, 1461, 1149, 1499], [1160, 1461, 1299, 1499], [376, 1541, 440, 1570], [452, 1541, 517, 1569], [529, 1541, 670, 1578], [683, 1541, 709, 1569], [721, 1541, 836, 1569], [848, 1545, 879, 1569], [892, 1541, 942, 1569], [955, 1541, 1065, 1569], [1078, 1541, 1219, 1578], [1231, 1541, 1267, 1569], [1277, 1541, 1378, 1578], [1391, 1541, 1563, 1578], [1577, 1541, 1630, 1569], [1642, 1541, 1716, 1570], [1728, 1541, 1778, 1569], [1791, 1541, 1872, 1570], [1884, 1541, 1947, 1569], [1958, 1550, 2006, 1570], [2019, 1541, 2088, 1569], [2100, 1541, 2174, 1570], [376, 1591, 462, 1619], [474, 1591, 510, 1619], [520, 1600, 557, 1619], [570, 1591, 753, 1628], [766, 1591, 924, 1619], [940, 1592, 1029, 1619], [1042, 1591, 1236, 1628], [1251, 1600, 1383, 1628], [1395, 1591, 1457, 1619], [1468, 1591, 1518, 1619], [1530, 1595, 1593, 1619], [1605, 1591, 1706, 1628], [1718, 1601, 1741, 1628], [1756, 1597, 1777, 1621], [1793, 1589, 1897, 1619], [1912, 1591, 1937, 1619], [1950, 1591, 2175, 1619], [375, 1642, 414, 1679], [428, 1642, 555, 1671], [567, 1642, 652, 1670], [665, 1642, 706, 1670], [709, 1666, 715, 1676], [730, 1651, 763, 1670], [776, 1642, 836, 1670], [847, 1642, 918, 1679], [931, 1652, 970, 1679], [987, 1655, 1015, 1664], [1030, 1652, 1053, 1679], [1065, 1646, 1093, 1673], [1106, 1642, 1147, 1670], [1160, 1642, 1184, 1670], [1198, 1642, 1351, 1671], [1368, 1642, 1429, 1670], [1442, 1642, 1599, 1679], [1610, 1642, 1747, 1679], [1758, 1642, 1908, 1670], [1921, 1652, 1944, 1679], [1956, 1642, 2044, 1679], [2052, 1642, 2114, 1679], [2125, 1642, 2173, 1670], [376, 1693, 461, 1730], [474, 1693, 592, 1722], [603, 1703, 642, 1730], [649, 1717, 653, 1721], [670, 1693, 739, 1721], [751, 1693, 887, 1730], [898, 1693, 922, 1721], [935, 1693, 1037, 1730], [1050, 1693, 1191, 1730], [1203, 1693, 1260, 1721], [1272, 1702, 1302, 1721], [1316, 1693, 1389, 1721], [1400, 1697, 1451, 1721], [1463, 1693, 1677, 1730], [1688, 1693, 1788, 1721], [1802, 1693, 1962, 1721], [1975, 1693, 2173, 1730], [376, 1753, 415, 1772], [427, 1744, 477, 1772], [488, 1744, 575, 1772], [587, 1744, 634, 1779], [645, 1753, 685, 1772], [697, 1744, 746, 1772], [757, 1744, 936, 1781], [949, 1744, 1061, 1781], [1075, 1753, 1123, 1772], [1135, 1744, 1232, 1772], [438, 1794, 595, 1832], [609, 1795, 674, 1824], [689, 1794, 885, 1832], [899, 1795, 1030, 1824], [1054, 1804, 1092, 1823], [1105, 1795, 1272, 1832], [1287, 1804, 1434, 1823], [1448, 1795, 1557, 1823], [1571, 1795, 1597, 1823], [1612, 1799, 1643, 1823], [1659, 1795, 1771, 1832], [1787, 1804, 1909, 1823], [1923, 1795, 1973, 1823], [1988, 1795, 2075, 1823], [2090, 1799, 2121, 1823], [2135, 1795, 2174, 1823], [376, 1845, 528, 1882], [543, 1854, 577, 1873], [591, 1854, 677, 1873], [690, 1845, 776, 1873], [789, 1854, 966, 1873], [979, 1845, 1180, 1873], [1199, 1845, 1304, 1874], [1317, 1845, 1402, 1873], [1415, 1845, 1598, 1879], [1614, 1854, 1631, 1873], [1643, 1845, 1754, 1873], [1768, 1845, 1893, 1873], [1906, 1849, 1937, 1873], [1949, 1845, 2086, 1882], [2099, 1845, 2174, 1873], [376, 1896, 531, 1933], [543, 1896, 608, 1924], [618, 1896, 642, 1924], [655, 1896, 702, 1924], [714, 1895, 1081, 1925], [1093, 1896, 1194, 1931], [1206, 1896, 1305, 1924], [1320, 1896, 1392, 1930], [1405, 1896, 1503, 1925], [1514, 1896, 1590, 1924], [1603, 1905, 1639, 1924], [1651, 1896, 1886, 1933], [1898, 1896, 1936, 1924], [1949, 1900, 1978, 1924], [1990, 1896, 2038, 1924], [2049, 1896, 2173, 1933], [376, 1947, 476, 1984], [486, 1947, 527, 1984], [540, 1947, 660, 1984], [931, 2029, 998, 2057], [950, 2064, 978, 2084], [1053, 2026, 1220, 2067], [1228, 2021, 1241, 2040], [1226, 2028, 1318, 2067], [1347, 1992, 1365, 2005], [1328, 2017, 1384, 2075], [1331, 2087, 1382, 2106], [1410, 1992, 1437, 2005], [1395, 2017, 1451, 2075], [1395, 2087, 1451, 2112], [1465, 2026, 1564, 2069], [1573, 2026, 1604, 2067], [1612, 2053, 1616, 2065], [2097, 2028, 2173, 2064], [374, 2145, 474, 2174], [487, 2143, 567, 2186], [583, 2145, 608, 2173], [621, 2145, 671, 2173], [683, 2145, 810, 2174], [822, 2145, 962, 2182], [1044, 2262, 1125, 2304], [1143, 2277, 1171, 2286], [1194, 2232, 1205, 2332], [1228, 2249, 1285, 2279], [1302, 2256, 1328, 2257], [1342, 2249, 1441, 2279], [1228, 2299, 1285, 2330], [1302, 2306, 1328, 2307], [1342, 2299, 1399, 2330], [1404, 2305, 1441, 2324], [1468, 2232, 1504, 2332], [374, 2379, 450, 2407], [461, 2379, 495, 2413], [509, 2379, 532, 2407], [543, 2379, 567, 2407], [581, 2379, 630, 2407], [642, 2383, 744, 2408], [755, 2379, 791, 2407], [800, 2379, 980, 2407], [994, 2379, 1030, 2407], [1040, 2379, 1112, 2419], [1129, 2379, 1186, 2407], [1198, 2379, 1234, 2407], [1248, 2379, 1408, 2416], [1423, 2379, 1512, 2416], [1523, 2379, 1596, 2407], [1609, 2388, 1689, 2407], [438, 2430, 499, 2458], [511, 2430, 656, 2467], [668, 2430, 703, 2458], [711, 2430, 759, 2458], [770, 2430, 832, 2458], [843, 2434, 917, 2458], [927, 2430, 958, 2458], [969, 2430, 1016, 2458], [1028, 2430, 1104, 2459], [1115, 2430, 1214, 2458], [1226, 2430, 1250, 2458], [1263, 2434, 1292, 2458], [1303, 2430, 1438, 2467], [1450, 2439, 1505, 2467], [1517, 2430, 1666, 2459], [1677, 2430, 1712, 2458], [1721, 2430, 1759, 2458], [1772, 2430, 1851, 2458], [1861, 2430, 1909, 2458], [1920, 2430, 2065, 2459], [2076, 2430, 2173, 2467], [376, 2490, 426, 2517], [440, 2480, 531, 2509], [543, 2480, 593, 2508], [606, 2480, 720, 2508], [732, 2484, 807, 2508], [819, 2489, 875, 2508], [886, 2480, 925, 2508], [936, 2480, 1051, 2517], [1063, 2480, 1246, 2517], [1259, 2489, 1290, 2508], [1304, 2489, 1321, 2508], [1332, 2480, 1435, 2508], [1449, 2477, 1490, 2518], [1505, 2477, 1639, 2518], [1651, 2489, 1724, 2509], [1735, 2480, 1784, 2508], [1796, 2480, 1925, 2508], [1937, 2480, 2074, 2517], [2084, 2480, 2120, 2508], [2131, 2480, 2169, 2508], [2174, 2504, 2179, 2508], [374, 2531, 447, 2559], [458, 2531, 640, 2568], [651, 2531, 770, 2559], [783, 2535, 878, 2559], [891, 2535, 922, 2559], [935, 2540, 1021, 2559], [1032, 2531, 1114, 2568], [1124, 2531, 1315, 2568], [1333, 2531, 1364, 2559], [1376, 2531, 1491, 2559], [1503, 2531, 1620, 2568], [1633, 2531, 1721, 2568], [1734, 2531, 1976, 2559], [1989, 2531, 2020, 2559], [2032, 2531, 2175, 2568], [375, 2582, 510, 2611], [521, 2582, 716, 2619], [727, 2582, 825, 2619], [838, 2582, 908, 2619], [921, 2591, 1028, 2619], [1039, 2582, 1069, 2610], [1080, 2582, 1200, 2610], [1213, 2582, 1248, 2610], [1257, 2582, 1379, 2619], [1393, 2582, 1481, 2611], [1493, 2582, 1541, 2610], [1552, 2586, 1611, 2610], [1622, 2582, 1657, 2610], [1666, 2582, 1714, 2610], [1725, 2582, 1820, 2619], [1832, 2582, 1948, 2619], [1962, 2582, 2043, 2611], [2057, 2582, 2174, 2610], [374, 2633, 531, 2662], [544, 2633, 574, 2661], [585, 2633, 729, 2670], [746, 2634, 769, 2661], [781, 2633, 881, 2661], [895, 2642, 989, 2667], [1002, 2633, 1156, 2667], [1170, 2637, 1199, 2661], [1210, 2633, 1345, 2670], [1357, 2633, 1435, 2670], [1447, 2633, 1547, 2662], [1560, 2633, 1595, 2661], [1604, 2633, 1652, 2661], [1664, 2633, 1804, 2670], [1818, 2642, 1848, 2661], [1862, 2633, 1947, 2670], [1959, 2633, 2087, 2670], [2099, 2633, 2173, 2662], [377, 2693, 393, 2712], [403, 2684, 508, 2721], [518, 2684, 697, 2721], [710, 2684, 745, 2712], [753, 2684, 862, 2721], [874, 2684, 964, 2721], [976, 2684, 1128, 2721], [1139, 2684, 1178, 2721], [1191, 2684, 1284, 2712], [1301, 2684, 1490, 2721], [1504, 2693, 1535, 2712], [1548, 2684, 1596, 2712], [1608, 2693, 1696, 2712], [1708, 2684, 1743, 2712], [1752, 2684, 1800, 2712], [1813, 2684, 1897, 2712], [1910, 2684, 1934, 2712], [1947, 2693, 2025, 2718], [2039, 2684, 2060, 2712], [2072, 2684, 2096, 2712], [2110, 2684, 2173, 2712], [377, 2734, 509, 2762], [521, 2738, 552, 2762], [564, 2734, 709, 2762], [722, 2734, 771, 2762], [783, 2734, 932, 2762], [943, 2734, 1044, 2771], [1057, 2734, 1095, 2762], [1109, 2734, 1194, 2762], [1206, 2738, 1237, 2762], [1249, 2734, 1299, 2762], [1311, 2734, 1461, 2763], [1472, 2744, 1511, 2771], [1518, 2758, 1523, 2762], [1539, 2734, 1681, 2771], [1693, 2734, 1778, 2762], [1790, 2738, 1851, 2763], [1863, 2734, 1949, 2771], [1961, 2734, 2111, 2771], [2124, 2734, 2174, 2762], [376, 2785, 453, 2814], [465, 2785, 567, 2813], [580, 2784, 666, 2820], [1256, 2934, 1293, 2964], [438, 242, 467, 270], [479, 242, 578, 270], [590, 242, 664, 270], [676, 246, 705, 270], [716, 242, 766, 270], [778, 242, 857, 271], [868, 242, 1050, 279], [1060, 242, 1176, 271], [1189, 242, 1252, 270], [1263, 242, 1286, 270], [1297, 242, 1420, 271], [1433, 242, 1482, 270], [1496, 242, 1581, 279], [1592, 242, 1628, 270], [1637, 242, 1687, 270], [1698, 242, 1851, 271], [1862, 242, 1981, 270], [1993, 242, 2175, 279], [374, 292, 476, 321], [489, 292, 554, 320], [565, 292, 721, 329], [735, 292, 823, 329], [835, 292, 998, 321], [1010, 292, 1150, 321], [1162, 292, 1364, 329], [1376, 292, 1484, 329], [1501, 292, 1623, 326], [1637, 292, 1677, 320], [1690, 292, 1765, 320], [1776, 292, 1973, 329], [1987, 301, 2036, 320], [2047, 292, 2175, 329], [376, 343, 569, 380], [584, 352, 616, 371], [631, 344, 686, 371], [699, 343, 897, 380], [912, 343, 1019, 372], [1033, 343, 1083, 371], [1098, 343, 1200, 380], [1213, 343, 1393, 380], [1408, 343, 1605, 380], [1629, 344, 1654, 371], [1668, 343, 1694, 371], [1709, 343, 1796, 377], [1813, 343, 1938, 380], [1955, 343, 2018, 371], [2031, 343, 2081, 371], [2096, 343, 2175, 372], [375, 394, 551, 431], [561, 393, 637, 429], [649, 394, 721, 422], [733, 398, 783, 422], [794, 394, 929, 422], [941, 394, 1012, 423], [1022, 394, 1070, 422], [1081, 395, 1125, 423], [1127, 385, 1161, 405], [1126, 419, 1168, 438], [1181, 394, 1357, 431], [1365, 394, 1439, 422], [1450, 394, 1480, 422], [1491, 394, 1547, 422], [1558, 403, 1653, 431], [1670, 394, 1760, 423], [1772, 394, 1888, 422], [1903, 394, 1964, 428], [1978, 394, 2173, 422], [375, 451, 515, 480], [529, 451, 614, 479], [627, 451, 824, 488], [838, 451, 879, 488], [893, 451, 1018, 488], [1032, 451, 1082, 479], [1096, 451, 1175, 480], [1190, 451, 1343, 488], [1357, 460, 1389, 479], [1403, 450, 1556, 488], [1569, 451, 1625, 480], [1640, 451, 1699, 479], [1712, 451, 1762, 479], [1776, 452, 1820, 480], [1822, 442, 1855, 462], [1821, 477, 1863, 496], [1868, 451, 1959, 488], [1974, 451, 2127, 488], [2141, 460, 2173, 479], [376, 501, 572, 539], [583, 502, 647, 531], [662, 502, 731, 530], [745, 502, 865, 539], [878, 511, 979, 530], [993, 502, 1071, 530], [1082, 502, 1130, 530], [1143, 502, 1202, 530], [1214, 502, 1274, 530], [1286, 502, 1426, 539], [1439, 503, 1492, 530], [1503, 502, 1653, 539], [1666, 502, 1740, 530], [1752, 506, 1932, 539], [1944, 502, 1979, 530], [1988, 502, 2036, 530], [2048, 502, 2173, 530], [376, 553, 513, 590], [531, 551, 612, 593], [633, 553, 794, 590], [813, 562, 851, 581], [867, 552, 899, 587], [919, 562, 1016, 587], [1036, 553, 1172, 582], [1190, 553, 1240, 581], [1259, 553, 1443, 590], [1462, 554, 1506, 582], [1508, 544, 1541, 564], [1507, 578, 1549, 597], [1554, 562, 1607, 581], [1609, 562, 1656, 581], [1673, 553, 1732, 581], [1749, 553, 1781, 581], [1797, 553, 1959, 590], [1975, 554, 2020, 582], [2022, 544, 2055, 564], [2024, 572, 2061, 597], [2068, 562, 2177, 587], [375, 604, 512, 641], [523, 613, 601, 633], [615, 604, 672, 632], [685, 604, 822, 632], [836, 604, 1075, 641], [437, 655, 536, 683], [548, 655, 646, 692], [659, 655, 786, 692], [798, 655, 885, 692], [898, 655, 1040, 692], [1052, 656, 1105, 683], [1117, 655, 1142, 683], [1155, 655, 1305, 692], [1317, 655, 1467, 692], [1479, 655, 1526, 683], [1537, 655, 1649, 683], [1661, 655, 1774, 692], [1787, 655, 1944, 692], [1960, 655, 2033, 689], [2047, 655, 2077, 683], [2090, 664, 2173, 683], [377, 705, 502, 742], [516, 705, 700, 742], [713, 705, 845, 742], [857, 714, 915, 733], [926, 705, 1061, 742], [1072, 705, 1168, 733], [1179, 705, 1297, 739], [1312, 705, 1371, 733], [1383, 705, 1414, 733], [1426, 705, 1488, 733], [1498, 705, 1553, 733], [1565, 705, 1645, 733], [1656, 705, 1782, 734], [1792, 705, 1834, 742], [1847, 714, 1934, 733], [1947, 705, 2068, 733], [2081, 705, 2112, 733], [2124, 705, 2174, 733], [375, 760, 440, 793], [454, 755, 513, 790], [526, 755, 587, 790], [604, 756, 674, 784], [687, 756, 711, 784], [725, 756, 866, 793], [879, 760, 940, 784], [952, 765, 991, 784], [1003, 756, 1086, 784], [1098, 756, 1211, 793], [1224, 756, 1283, 784], [1294, 760, 1411, 793], [1423, 765, 1439, 784], [1451, 756, 1594, 793], [1608, 760, 1756, 790], [1770, 756, 1827, 784], [1838, 756, 1903, 784], [1917, 765, 1964, 784], [1975, 756, 2068, 784], [2079, 756, 2174, 784], [376, 811, 406, 835], [418, 807, 468, 835], [480, 811, 624, 835], [635, 807, 777, 835], [788, 807, 829, 844], [841, 807, 890, 835], [902, 808, 947, 836], [948, 798, 982, 818], [947, 832, 989, 851], [995, 816, 1026, 835], [1028, 816, 1047, 835], [1048, 816, 1062, 835], [1063, 816, 1102, 835], [1119, 807, 1290, 841], [1303, 807, 1438, 835], [1449, 807, 1587, 835], [1600, 811, 1631, 835], [1642, 807, 1776, 844], [1788, 807, 1970, 844], [1983, 807, 2113, 844], [2126, 816, 2174, 835], [377, 858, 441, 886], [453, 858, 621, 895], [437, 908, 643, 946], [655, 908, 822, 946], [834, 908, 1057, 946], [1075, 909, 1235, 946], [1246, 909, 1335, 946], [1347, 909, 1396, 937], [1409, 909, 1590, 946], [1603, 910, 1647, 938], [1649, 899, 1683, 919], [1648, 934, 1690, 953], [1695, 918, 1795, 937], [1805, 909, 1974, 937], [1987, 909, 2107, 946], [992, 1008, 1059, 1036], [1011, 1042, 1039, 1062], [1113, 1005, 1281, 1046], [1289, 999, 1302, 1018], [1287, 1027, 1303, 1046], [1317, 1012, 1345, 1039], [1358, 998, 1461, 1037], [1427, 1033, 1469, 1052], [1476, 1005, 1555, 1046], [2097, 1007, 2173, 1043], [376, 1122, 433, 1149], [445, 1120, 521, 1156], [534, 1121, 558, 1149], [571, 1121, 693, 1158], [704, 1121, 755, 1149], [767, 1121, 814, 1149], [826, 1122, 871, 1150], [873, 1112, 906, 1132], [872, 1147, 914, 1166], [919, 1121, 1090, 1158], [1101, 1121, 1245, 1158], [1259, 1121, 1315, 1149], [1326, 1121, 1419, 1149], [1432, 1130, 1487, 1149], [1497, 1121, 1534, 1149], [1547, 1121, 1669, 1158], [1682, 1121, 1785, 1150], [1796, 1121, 1835, 1158], [1848, 1121, 1987, 1158], [2000, 1121, 2047, 1149], [2060, 1121, 2175, 1149], [375, 1181, 449, 1209], [460, 1176, 608, 1209], [621, 1172, 775, 1200], [788, 1172, 888, 1201], [904, 1173, 956, 1200], [969, 1172, 1051, 1201], [1064, 1171, 1140, 1207], [1151, 1172, 1248, 1201], [1261, 1172, 1307, 1200], [1318, 1172, 1365, 1200], [1377, 1172, 1481, 1200], [1491, 1182, 1512, 1208], [1526, 1185, 1554, 1194], [1570, 1182, 1587, 1208], [1602, 1185, 1630, 1194], [1648, 1172, 1661, 1200], [1676, 1172, 1787, 1207], [1798, 1172, 1822, 1200], [1835, 1181, 1976, 1200], [1987, 1172, 2017, 1200], [2027, 1172, 2178, 1209], [376, 1223, 423, 1251], [434, 1223, 484, 1251], [495, 1223, 654, 1260], [667, 1223, 812, 1251], [824, 1223, 860, 1251], [870, 1223, 1054, 1260], [439, 1325, 455, 1341], [479, 1315, 630, 1343], [642, 1315, 772, 1352], [785, 1314, 812, 1352], [826, 1315, 872, 1343], [880, 1315, 920, 1350], [439, 1393, 455, 1409], [479, 1383, 542, 1411], [554, 1383, 859, 1420], [871, 1383, 985, 1412], [995, 1383, 1089, 1411], [1101, 1392, 1140, 1411], [1154, 1383, 1328, 1420], [1340, 1383, 1522, 1420], [1536, 1382, 1564, 1420], [1578, 1383, 1624, 1411], [1632, 1383, 1672, 1418], [439, 1460, 455, 1476], [479, 1450, 541, 1478], [554, 1450, 630, 1487], [641, 1451, 790, 1487], [802, 1450, 923, 1478], [935, 1450, 970, 1478], [980, 1450, 1138, 1479], [1149, 1451, 1177, 1478], [1195, 1450, 1268, 1484], [1282, 1450, 1381, 1479], [1393, 1450, 1512, 1479], [1526, 1459, 1562, 1478], [1574, 1450, 1786, 1478], [1799, 1450, 1947, 1487], [1959, 1454, 1988, 1478], [2002, 1450, 2071, 1487], [2082, 1450, 2130, 1478], [2142, 1449, 2173, 1484], [479, 1510, 566, 1529], [578, 1505, 660, 1538], [671, 1501, 750, 1529], [762, 1501, 811, 1529], [823, 1501, 950, 1529], [962, 1501, 1098, 1538], [1109, 1505, 1252, 1538], [1266, 1501, 1332, 1529], [1346, 1505, 1398, 1529], [1408, 1501, 1560, 1538], [1572, 1501, 1621, 1529], [1632, 1510, 1687, 1529], [1698, 1501, 1734, 1529], [1744, 1510, 1760, 1529], [1776, 1501, 1890, 1529], [1902, 1510, 1977, 1538], [1989, 1505, 2132, 1538], [439, 1578, 455, 1594], [479, 1568, 783, 1597], [796, 1568, 919, 1596], [932, 1568, 1052, 1605], [1064, 1572, 1094, 1596], [1107, 1568, 1154, 1596], [1168, 1569, 1221, 1596], [1234, 1567, 1262, 1605], [1276, 1568, 1322, 1596], [1330, 1568, 1380, 1603], [439, 1646, 455, 1662], [479, 1636, 624, 1665], [637, 1636, 758, 1673], [771, 1636, 904, 1673], [916, 1636, 1039, 1664], [1052, 1635, 1080, 1673], [1094, 1636, 1140, 1664], [1148, 1636, 1198, 1671], [439, 1713, 455, 1729], [479, 1703, 688, 1740], [700, 1707, 729, 1731], [741, 1703, 769, 1731], [779, 1703, 973, 1740], [985, 1703, 1107, 1731], [1120, 1702, 1148, 1740], [1162, 1703, 1208, 1731], [1216, 1703, 1266, 1738], [439, 1781, 455, 1797], [479, 1771, 590, 1808], [603, 1771, 726, 1799], [739, 1771, 897, 1806], [911, 1770, 939, 1808], [952, 1771, 1046, 1806], [439, 1848, 455, 1864], [479, 1838, 543, 1866], [558, 1838, 729, 1866], [742, 1838, 814, 1867], [830, 1838, 983, 1875], [996, 1838, 1038, 1875], [1053, 1838, 1203, 1867], [1219, 1838, 1278, 1866], [1292, 1838, 1352, 1866], [1369, 1837, 1442, 1872], [1459, 1838, 1561, 1867], [1576, 1838, 1677, 1867], [1693, 1838, 1743, 1866], [1756, 1838, 1955, 1875], [1969, 1838, 2110, 1867], [2124, 1838, 2174, 1866], [479, 1889, 594, 1917], [605, 1889, 764, 1926], [776, 1889, 992, 1917], [1004, 1889, 1060, 1917], [1071, 1889, 1119, 1917], [1130, 1889, 1295, 1917], [1305, 1889, 1374, 1918], [1385, 1889, 1521, 1926], [1531, 1898, 1602, 1918], [1613, 1898, 1629, 1917], [1639, 1889, 1712, 1926], [1726, 1889, 1782, 1917], [1793, 1889, 1858, 1917], [1871, 1889, 1983, 1926], [1996, 1898, 2032, 1917], [2043, 1889, 2174, 1917], [479, 1940, 646, 1968], [658, 1940, 729, 1969], [741, 1940, 864, 1968], [876, 1944, 907, 1968], [920, 1940, 1004, 1969], [1017, 1949, 1033, 1968], [1045, 1940, 1296, 1969], [1308, 1940, 1428, 1969], [1440, 1940, 1476, 1968], [1485, 1940, 1606, 1968], [376, 2033, 410, 2060], [423, 2032, 577, 2060], [591, 2032, 733, 2069], [749, 2032, 1061, 2069], [1076, 2032, 1135, 2060], [1149, 2032, 1284, 2060], [1298, 2041, 1345, 2061], [1359, 2041, 1415, 2060], [1429, 2032, 1479, 2060], [1494, 2032, 1659, 2060], [1673, 2032, 1852, 2069], [1868, 2036, 1998, 2069], [2012, 2032, 2174, 2069], [375, 2083, 482, 2111], [498, 2092, 529, 2111], [546, 2083, 646, 2112], [660, 2083, 709, 2111], [723, 2083, 773, 2111], [786, 2083, 861, 2111], [874, 2083, 1040, 2120], [1055, 2087, 1220, 2120], [1244, 2083, 1296, 2111], [1312, 2083, 1474, 2120], [1487, 2087, 1671, 2120], [1687, 2092, 1767, 2112], [1783, 2087, 1828, 2111], [1843, 2092, 1875, 2111], [1889, 2083, 2129, 2111], [2143, 2083, 2174, 2111], [376, 2134, 452, 2162], [463, 2134, 702, 2171], [714, 2143, 823, 2171], [835, 2143, 869, 2162], [880, 2134, 984, 2171], [997, 2134, 1285, 2171], [1299, 2138, 1408, 2171], [1419, 2134, 1467, 2162], [1478, 2134, 1631, 2162], [1643, 2134, 1776, 2171], [1788, 2134, 1847, 2162], [1859, 2134, 2177, 2171], [374, 2184, 473, 2213], [486, 2193, 532, 2212], [544, 2188, 708, 2221], [719, 2184, 789, 2212], [805, 2185, 862, 2212], [873, 2184, 1148, 2213], [1159, 2193, 1205, 2213], [1217, 2184, 1291, 2212], [1302, 2184, 1374, 2212], [1386, 2184, 1434, 2212], [1448, 2184, 1567, 2212], [1580, 2184, 1651, 2213], [1663, 2184, 1743, 2212], [1756, 2184, 1914, 2221], [1924, 2188, 2102, 2221], [2118, 2184, 2177, 2218], [374, 2235, 549, 2272], [565, 2235, 591, 2269], [608, 2235, 667, 2263], [679, 2235, 729, 2263], [743, 2235, 867, 2263], [880, 2235, 954, 2264], [967, 2235, 1169, 2263], [1184, 2235, 1244, 2269], [1258, 2235, 1434, 2272], [1446, 2235, 1489, 2269], [1503, 2235, 1646, 2264], [1658, 2235, 1708, 2263], [1721, 2235, 1910, 2263], [1922, 2235, 2044, 2264], [2056, 2235, 2109, 2263], [2121, 2239, 2175, 2263], [376, 2295, 526, 2323], [541, 2290, 572, 2314], [587, 2286, 637, 2314], [652, 2286, 773, 2314], [789, 2286, 923, 2314], [937, 2286, 1044, 2315], [1059, 2286, 1182, 2323], [1198, 2295, 1344, 2323], [1361, 2286, 1497, 2321], [1512, 2286, 1681, 2314], [1696, 2286, 1732, 2314], [1748, 2280, 1826, 2315], [1831, 2286, 1852, 2321], [1869, 2286, 2020, 2314], [2035, 2286, 2108, 2323], [2124, 2286, 2174, 2314], [375, 2337, 484, 2365], [498, 2337, 546, 2365], [559, 2337, 609, 2365], [623, 2337, 706, 2365], [719, 2337, 842, 2366], [856, 2346, 905, 2365], [918, 2337, 1067, 2374], [1088, 2338, 1146, 2365], [1159, 2337, 1371, 2374], [1385, 2346, 1433, 2366], [1446, 2337, 1553, 2366], [1568, 2337, 1618, 2365], [1631, 2337, 1930, 2365], [1945, 2337, 1976, 2365], [1990, 2337, 2174, 2366], [377, 2388, 435, 2416], [452, 2388, 535, 2416], [554, 2388, 628, 2422], [647, 2388, 751, 2425], [768, 2388, 832, 2416], [850, 2392, 980, 2416], [996, 2388, 1046, 2416], [1063, 2388, 1218, 2425], [1235, 2392, 1390, 2416], [1408, 2388, 1444, 2416], [1458, 2388, 1508, 2416], [1525, 2388, 1693, 2425], [1709, 2388, 1865, 2416], [1883, 2388, 1942, 2416], [1959, 2388, 2107, 2425], [2124, 2388, 2174, 2416], [375, 2443, 544, 2476], [556, 2439, 703, 2476], [718, 2443, 848, 2476], [862, 2439, 925, 2467], [937, 2439, 1094, 2476], [1107, 2439, 1200, 2467], [1212, 2439, 1425, 2476], [1438, 2439, 1470, 2467], [1483, 2439, 1533, 2467], [1547, 2439, 1760, 2476], [1782, 2438, 1799, 2467], [1802, 2432, 1853, 2454], [1874, 2452, 1902, 2461], [1969, 2431, 1980, 2450], [1926, 2460, 1951, 2489], [1953, 2449, 2069, 2488], [2072, 2432, 2123, 2454], [2144, 2452, 2172, 2461], [377, 2501, 497, 2543], [510, 2501, 585, 2535], [603, 2520, 631, 2529], [668, 2506, 685, 2519], [688, 2493, 696, 2506], [652, 2501, 956, 2549], [978, 2500, 989, 2519], [977, 2501, 1143, 2549], [438, 2558, 501, 2586], [513, 2558, 629, 2595], [641, 2558, 718, 2586], [729, 2558, 760, 2586], [772, 2558, 822, 2586], [834, 2558, 1035, 2595], [1049, 2567, 1097, 2586], [1109, 2558, 1269, 2595], [1280, 2558, 1311, 2586], [1323, 2558, 1486, 2595], [1498, 2559, 1520, 2586], [1533, 2567, 1565, 2586], [1577, 2558, 1685, 2595], [1697, 2557, 1746, 2587], [1762, 2559, 1803, 2586], [1816, 2562, 1873, 2586], [1884, 2558, 1934, 2586], [1946, 2558, 2039, 2586], [2050, 2558, 2146, 2586], [2158, 2567, 2175, 2586], [374, 2609, 489, 2646], [502, 2609, 538, 2637], [550, 2609, 713, 2643], [728, 2609, 872, 2637], [883, 2609, 973, 2637], [987, 2609, 1023, 2637], [1033, 2609, 1121, 2637], [1134, 2618, 1214, 2638], [1227, 2609, 1407, 2637], [1420, 2609, 1468, 2637], [1480, 2609, 1557, 2637], [1569, 2609, 1679, 2646], [1698, 2609, 1789, 2637], [1802, 2609, 1821, 2637], [1835, 2609, 1920, 2646], [1934, 2609, 2042, 2637], [2055, 2618, 2097, 2637], [2109, 2609, 2177, 2643], [374, 2659, 463, 2688], [475, 2659, 523, 2687], [536, 2659, 622, 2696], [635, 2659, 748, 2696], [762, 2668, 809, 2687], [823, 2659, 926, 2688], [938, 2659, 968, 2687], [979, 2659, 1085, 2696], [1098, 2659, 1145, 2688], [1162, 2659, 1213, 2687], [1224, 2659, 1280, 2694], [1291, 2659, 1419, 2687], [1432, 2659, 1545, 2696], [1557, 2659, 1632, 2687], [1644, 2659, 1691, 2687], [1705, 2668, 1786, 2687], [1798, 2659, 1870, 2687], [1883, 2659, 1939, 2687], [1950, 2663, 2128, 2696], [2141, 2659, 2177, 2687], [376, 2710, 470, 2738], [486, 2710, 582, 2738], [594, 2719, 655, 2739], [668, 2710, 844, 2738], [855, 2710, 944, 2747], [956, 2710, 1099, 2738], [1113, 2711, 1239, 2739], [1252, 2710, 1397, 2738], [1256, 2935, 1294, 2964], [374, 270, 466, 298], [481, 270, 509, 298], [533, 273, 620, 306], [635, 272, 668, 298], [679, 272, 757, 298], [771, 272, 825, 298], [838, 276, 1003, 306], [1018, 272, 1062, 298], [1074, 272, 1143, 298], [1156, 276, 1209, 298], [1221, 272, 1321, 306], [1344, 273, 1370, 298], [1385, 276, 1410, 298], [1425, 272, 1557, 298], [1572, 272, 1629, 298], [1643, 272, 1711, 298], [1724, 272, 1802, 298], [1816, 281, 1872, 299], [1887, 276, 1935, 298], [1948, 272, 2059, 306], [2072, 272, 2116, 298], [2129, 272, 2174, 298], [376, 318, 475, 352], [493, 319, 634, 345], [647, 318, 701, 344], [712, 318, 825, 352], [838, 318, 1006, 352], [1017, 322, 1045, 344], [1057, 318, 1186, 352], [1198, 318, 1318, 345], [1330, 318, 1384, 344], [1395, 318, 1603, 352], [1616, 318, 1821, 352], [1834, 318, 1926, 344], [1939, 318, 2006, 345], [2017, 327, 2081, 344], [2093, 327, 2173, 344], [376, 365, 429, 391], [439, 365, 484, 391], [495, 365, 632, 391], [642, 365, 775, 392], [790, 365, 848, 392], [860, 366, 884, 392], [895, 367, 1002, 399], [1011, 365, 1089, 391], [1100, 369, 1173, 391], [1185, 365, 1242, 391], [1252, 365, 1334, 391], [1344, 374, 1375, 391], [1384, 365, 1466, 392], [1477, 365, 1522, 391], [1533, 365, 1670, 391], [1680, 365, 1796, 391], [1807, 365, 1839, 391], [1847, 365, 1938, 399], [1948, 365, 2044, 399], [2058, 367, 2174, 391], [375, 416, 541, 446], [553, 412, 619, 438], [629, 412, 702, 446], [712, 412, 748, 446], [759, 412, 878, 446], [889, 421, 904, 438], [914, 412, 1027, 438], [1038, 412, 1115, 439], [1126, 412, 1197, 438], [1208, 421, 1223, 438], [1233, 412, 1347, 438], [1358, 412, 1526, 438], [1537, 412, 1602, 439], [1612, 421, 1691, 438], [1702, 412, 1781, 446], [1791, 416, 1818, 438], [1829, 412, 1873, 438], [1884, 412, 1998, 446], [2008, 412, 2081, 446], [2092, 412, 2177, 443], [375, 458, 435, 484], [446, 458, 597, 492], [608, 467, 624, 484], [634, 467, 709, 484], [719, 458, 836, 484], [848, 458, 932, 484], [761, 531, 863, 567], [995, 530, 1145, 559], [1198, 530, 1327, 567], [1378, 530, 1506, 558], [1558, 530, 1621, 559], [1633, 530, 1662, 559], [1675, 531, 1789, 567], [760, 622, 944, 657], [1045, 622, 1095, 651], [1237, 622, 1285, 651], [1428, 626, 1456, 650], [1659, 626, 1687, 650], [762, 673, 854, 710], [1035, 672, 1104, 702], [1248, 677, 1276, 701], [1428, 677, 1456, 701], [1659, 677, 1687, 701], [761, 723, 897, 751], [1056, 727, 1084, 751], [1256, 723, 1267, 751], [1428, 727, 1456, 751], [1659, 727, 1687, 751], [761, 774, 896, 811], [1056, 778, 1084, 802], [1248, 778, 1276, 802], [1428, 773, 1456, 803], [1659, 778, 1687, 802], [761, 829, 822, 853], [1056, 829, 1084, 853], [1248, 829, 1276, 853], [1428, 829, 1456, 853], [1648, 825, 1694, 854], [761, 876, 860, 904], [1035, 875, 1104, 905], [1248, 880, 1276, 904], [1428, 875, 1456, 905], [1659, 880, 1687, 904], [761, 931, 887, 955], [1056, 931, 1084, 955], [1248, 931, 1276, 955], [1428, 926, 1456, 956], [1648, 927, 1698, 956], [760, 977, 905, 1014], [1056, 981, 1084, 1005], [1252, 977, 1271, 1005], [1428, 976, 1456, 1006], [1659, 981, 1687, 1005], [438, 1131, 548, 1159], [563, 1131, 611, 1159], [624, 1131, 674, 1159], [686, 1131, 921, 1168], [933, 1135, 1102, 1168], [1116, 1130, 1137, 1160], [1151, 1140, 1231, 1160], [1245, 1131, 1343, 1159], [1355, 1131, 1396, 1168], [1410, 1131, 1610, 1168], [1624, 1131, 1674, 1159], [1688, 1131, 1803, 1168], [1817, 1131, 1853, 1159], [1864, 1131, 1914, 1159], [1927, 1131, 2177, 1165], [376, 1182, 533, 1210], [544, 1182, 633, 1219], [645, 1182, 817, 1219], [829, 1181, 1098, 1219], [1110, 1181, 1205, 1211], [1218, 1182, 1336, 1217], [1352, 1182, 1405, 1216], [1421, 1182, 1514, 1211], [1526, 1182, 1550, 1210], [1564, 1182, 1684, 1210], [1698, 1191, 1728, 1210], [929, 1293, 1089, 1334], [1101, 1306, 1133, 1333], [1144, 1293, 1199, 1334], [1216, 1309, 1244, 1318], [1262, 1296, 1298, 1325], [1308, 1295, 1392, 1335], [1412, 1265, 1468, 1306], [1484, 1285, 1510, 1286], [1525, 1262, 1601, 1306], [1586, 1288, 1602, 1307], [1422, 1319, 1592, 1363], [1577, 1345, 1593, 1364], [1613, 1320, 1617, 1332], [374, 1408, 474, 1437], [486, 1418, 509, 1445], [521, 1408, 546, 1436], [559, 1408, 609, 1436], [620, 1408, 748, 1445], [760, 1408, 868, 1445], [882, 1418, 921, 1445], [936, 1408, 972, 1436], [986, 1408, 1074, 1445], [1086, 1408, 1207, 1442], [1222, 1408, 1279, 1436], [1292, 1408, 1330, 1436], [1344, 1408, 1394, 1436], [1404, 1408, 1650, 1436], [438, 1460, 477, 1487], [490, 1468, 629, 1496], [641, 1459, 689, 1487], [703, 1459, 874, 1496], [887, 1468, 933, 1488], [944, 1468, 998, 1487], [1011, 1459, 1050, 1487], [1061, 1459, 1097, 1487], [1106, 1459, 1187, 1487], [1198, 1459, 1245, 1487], [1256, 1459, 1329, 1487], [1341, 1459, 1439, 1496], [1453, 1459, 1509, 1487], [1521, 1459, 1676, 1487], [1688, 1459, 1724, 1487], [1737, 1459, 1829, 1488], [1842, 1459, 1898, 1487], [1909, 1459, 2029, 1488], [2042, 1459, 2173, 1487], [376, 1513, 406, 1537], [422, 1509, 472, 1537], [487, 1509, 615, 1546], [630, 1509, 782, 1546], [797, 1509, 886, 1538], [902, 1509, 938, 1537], [951, 1509, 1000, 1537], [1016, 1513, 1135, 1537], [1150, 1509, 1285, 1537], [1300, 1513, 1329, 1537], [1344, 1509, 1420, 1537], [1435, 1509, 1575, 1537], [1589, 1509, 1720, 1546], [1735, 1509, 1811, 1537], [1826, 1509, 1996, 1537], [2022, 1509, 2086, 1537], [2102, 1509, 2175, 1546], [376, 1560, 533, 1597], [545, 1564, 574, 1588], [587, 1560, 644, 1588], [656, 1560, 819, 1597], [831, 1560, 856, 1588], [869, 1560, 917, 1588], [930, 1560, 1051, 1588], [1063, 1560, 1099, 1588], [1108, 1560, 1253, 1589], [1267, 1560, 1324, 1588], [1336, 1560, 1402, 1594], [1416, 1560, 1514, 1589], [1526, 1560, 1551, 1588], [1564, 1560, 1777, 1589], [1790, 1560, 1847, 1588], [1859, 1560, 1925, 1588], [1939, 1560, 2048, 1597], [2060, 1564, 2173, 1588], [377, 1620, 413, 1639], [423, 1615, 507, 1639], [518, 1611, 655, 1645], [669, 1611, 725, 1639], [737, 1620, 770, 1639], [781, 1620, 826, 1640], [834, 1611, 895, 1648], [906, 1620, 1039, 1639], [1050, 1611, 1098, 1639], [1109, 1611, 1179, 1639], [1190, 1611, 1325, 1648], [1335, 1615, 1365, 1639], [1376, 1611, 1472, 1639], [1489, 1611, 1550, 1639], [1561, 1611, 1683, 1648], [1695, 1611, 1840, 1648], [1851, 1611, 1936, 1640], [1948, 1620, 2008, 1640], [2020, 1611, 2174, 1639], [375, 1662, 415, 1699], [426, 1662, 555, 1699], [568, 1662, 607, 1690], [619, 1662, 757, 1690], [770, 1662, 818, 1690], [830, 1671, 846, 1690], [858, 1671, 929, 1699], [941, 1662, 1022, 1699], [1034, 1662, 1160, 1690], [1171, 1662, 1207, 1690], [1216, 1662, 1368, 1690], [1382, 1662, 1440, 1690], [1452, 1662, 1554, 1699], [1566, 1662, 1615, 1690], [1627, 1662, 1787, 1690], [1799, 1662, 1887, 1691], [1898, 1662, 1934, 1690], [1943, 1662, 2025, 1690], [2038, 1662, 2085, 1690], [2102, 1662, 2172, 1690], [375, 1713, 528, 1750], [540, 1713, 590, 1741], [600, 1713, 679, 1750], [694, 1713, 798, 1742], [810, 1713, 841, 1741], [853, 1713, 974, 1750], [992, 1713, 1099, 1742], [1115, 1714, 1204, 1741], [1215, 1713, 1297, 1741], [1309, 1713, 1358, 1741], [1370, 1713, 1528, 1750], [1541, 1713, 1746, 1742], [1761, 1722, 1809, 1741], [1821, 1713, 1856, 1741], [1865, 1713, 2030, 1742], [439, 1804, 455, 1820], [479, 1794, 627, 1823], [640, 1794, 766, 1822], [779, 1794, 838, 1822], [849, 1794, 1160, 1823], [1173, 1794, 1298, 1822], [1311, 1803, 1360, 1822], [1371, 1794, 1505, 1822], [1517, 1798, 1547, 1822], [1560, 1794, 1737, 1831], [1749, 1794, 1799, 1822], [1812, 1803, 1896, 1822], [1910, 1794, 2072, 1831], [2084, 1794, 2174, 1823], [480, 1845, 598, 1882], [609, 1849, 638, 1873], [650, 1845, 698, 1873], [708, 1845, 865, 1882], [875, 1854, 943, 1873], [954, 1845, 990, 1873], [999, 1845, 1176, 1882], [1188, 1845, 1235, 1873], [1247, 1846, 1299, 1873], [1311, 1845, 1475, 1882], [1491, 1845, 1703, 1879], [1715, 1845, 1783, 1882], [1795, 1854, 1877, 1873], [1888, 1849, 1917, 1873], [1928, 1845, 2059, 1882], [2070, 1845, 2175, 1882], [478, 1896, 566, 1925], [578, 1896, 740, 1933], [752, 1900, 783, 1924], [795, 1896, 879, 1924], [890, 1896, 1038, 1924], [439, 1977, 455, 1993], [479, 1967, 608, 1995], [622, 1967, 742, 2004], [755, 1967, 888, 2002], [901, 1967, 1027, 1995], [1041, 1967, 1113, 1996], [1125, 1967, 1329, 2004], [1342, 1971, 1369, 1995], [1381, 1967, 1429, 1995], [1440, 1967, 1610, 2004], [1622, 1967, 1673, 1995], [1685, 1967, 1772, 1996], [1782, 1976, 1836, 1995], [1848, 1967, 1894, 1995], [1906, 1967, 2054, 1995], [2066, 1967, 2136, 1995], [2148, 1967, 2173, 1995], [480, 2018, 547, 2046], [559, 2022, 589, 2046], [602, 2018, 725, 2047], [738, 2027, 754, 2046], [766, 2018, 847, 2055], [860, 2018, 1100, 2055], [1112, 2022, 1142, 2046], [1154, 2018, 1204, 2046], [1215, 2018, 1372, 2055], [439, 2099, 455, 2115], [479, 2089, 540, 2117], [554, 2089, 628, 2126], [640, 2090, 787, 2126], [799, 2089, 928, 2123], [942, 2089, 972, 2117], [985, 2089, 1058, 2126], [1071, 2089, 1106, 2117], [1114, 2089, 1203, 2126], [1217, 2098, 1253, 2117], [1265, 2089, 1475, 2117], [1487, 2089, 1608, 2117], [1619, 2089, 1708, 2117], [1720, 2089, 1779, 2117], [1791, 2089, 1933, 2118], [1946, 2098, 1979, 2117], [1990, 2089, 2180, 2118], [479, 2140, 571, 2174], [585, 2140, 736, 2177], [751, 2140, 957, 2177], [970, 2140, 1066, 2168], [1078, 2140, 1150, 2168], [1162, 2140, 1259, 2168], [1276, 2141, 1331, 2168], [1345, 2140, 1483, 2168], [1496, 2140, 1554, 2168], [1568, 2144, 1599, 2168], [1612, 2140, 1662, 2168], [1675, 2149, 1747, 2177], [1761, 2140, 1898, 2168], [1910, 2140, 2174, 2177], [478, 2191, 628, 2228], [641, 2191, 682, 2228], [696, 2191, 734, 2219], [750, 2191, 881, 2225], [898, 2191, 957, 2219], [971, 2195, 1002, 2219], [1016, 2191, 1066, 2219], [1081, 2191, 1143, 2219], [1156, 2191, 1219, 2219], [1233, 2200, 1250, 2219], [1263, 2191, 1323, 2219], [1338, 2191, 1546, 2228], [1561, 2191, 1687, 2219], [1700, 2191, 1726, 2219], [1741, 2191, 1906, 2228], [1920, 2195, 1951, 2219], [1965, 2195, 2109, 2228], [2124, 2191, 2174, 2219], [478, 2241, 616, 2278], [628, 2241, 735, 2269], [747, 2241, 912, 2270], [925, 2241, 1107, 2278], [1118, 2241, 1167, 2269], [1179, 2241, 1311, 2269], [439, 2322, 455, 2338], [479, 2312, 543, 2340], [557, 2312, 683, 2340], [695, 2312, 736, 2349], [751, 2312, 901, 2341], [916, 2312, 975, 2340], [988, 2312, 1049, 2340], [1062, 2312, 1088, 2340], [1103, 2312, 1213, 2341], [1226, 2312, 1298, 2340], [1311, 2312, 1397, 2340], [1411, 2312, 1598, 2349], [1614, 2312, 1673, 2340], [1687, 2321, 1787, 2340], [1801, 2316, 1832, 2340], [1845, 2312, 1973, 2349], [1988, 2312, 2174, 2349], [480, 2363, 632, 2391], [648, 2364, 700, 2391], [712, 2363, 844, 2391], [855, 2363, 911, 2391], [923, 2367, 953, 2391], [964, 2363, 1012, 2391], [1023, 2363, 1083, 2391], [1093, 2363, 1153, 2391], [1164, 2363, 1220, 2391], [1232, 2363, 1352, 2391], [1364, 2363, 1461, 2392], [1474, 2372, 1490, 2391], [1501, 2363, 1625, 2391], [1638, 2363, 1926, 2400], [1939, 2363, 2174, 2400], [479, 2418, 510, 2442], [525, 2414, 575, 2442], [589, 2414, 738, 2451], [761, 2415, 815, 2442], [831, 2414, 1050, 2451], [1065, 2414, 1128, 2442], [1141, 2414, 1227, 2442], [1241, 2414, 1382, 2442], [1398, 2414, 1567, 2451], [1582, 2414, 1632, 2442], [1646, 2414, 1731, 2442], [1745, 2414, 1899, 2442], [1914, 2431, 1924, 2434], [1940, 2414, 2175, 2442], [478, 2465, 671, 2502], [683, 2465, 758, 2494], [770, 2465, 847, 2493], [858, 2465, 1008, 2502], [1020, 2465, 1092, 2494], [1104, 2465, 1226, 2502], [1240, 2465, 1331, 2502], [1342, 2465, 1457, 2499], [1471, 2474, 1517, 2502], [1522, 2489, 1526, 2493], [1544, 2465, 1617, 2499], [1629, 2465, 1769, 2494], [1780, 2465, 1828, 2493], [1841, 2465, 2065, 2502], [2077, 2465, 2173, 2493], [480, 2516, 540, 2544], [553, 2516, 649, 2553], [439, 2597, 455, 2613], [479, 2587, 541, 2615], [554, 2587, 676, 2615], [687, 2587, 727, 2624], [739, 2587, 946, 2624], [958, 2591, 988, 2615], [999, 2587, 1035, 2621], [1049, 2587, 1136, 2616], [1147, 2587, 1286, 2624], [1299, 2587, 1482, 2615], [1493, 2587, 1534, 2624], [1547, 2596, 1563, 2615], [1575, 2587, 1700, 2615], [1713, 2587, 1818, 2615], [1831, 2587, 1866, 2615], [1876, 2587, 2011, 2624], [2025, 2587, 2177, 2624], [480, 2646, 580, 2665], [594, 2641, 624, 2665], [637, 2637, 676, 2665], [689, 2637, 739, 2665], [750, 2637, 819, 2665], [830, 2637, 939, 2665], [952, 2637, 1000, 2665], [1012, 2637, 1130, 2674], [1143, 2646, 1216, 2674], [1230, 2641, 1368, 2665], [1382, 2637, 1541, 2671], [1555, 2637, 1672, 2674], [1684, 2637, 1707, 2665], [1718, 2637, 1744, 2665], [1758, 2646, 1830, 2674], [1843, 2637, 1961, 2674], [1974, 2637, 2122, 2666], [2134, 2637, 2175, 2674], [478, 2688, 619, 2716], [439, 2769, 455, 2785], [479, 2759, 541, 2787], [553, 2763, 717, 2796], [728, 2759, 790, 2787], [802, 2759, 939, 2787], [952, 2760, 1002, 2787], [1016, 2759, 1073, 2787], [1085, 2760, 1140, 2787], [1153, 2768, 1200, 2787], [1213, 2759, 1260, 2787], [1273, 2759, 1376, 2787], [1388, 2763, 1417, 2787], [1431, 2759, 1552, 2788], [1565, 2768, 1581, 2787], [1593, 2759, 1783, 2796], [1796, 2759, 1935, 2793], [1948, 2759, 2020, 2788], [2032, 2759, 2180, 2796], [479, 2810, 632, 2838], [643, 2810, 829, 2847], [840, 2810, 935, 2838], [946, 2810, 1016, 2838], [1028, 2810, 1179, 2838], [1191, 2810, 1329, 2847], [1256, 2935, 1294, 2964], [584, 700, 643, 721], [654, 700, 683, 726], [468, 674, 487, 688], [493, 668, 504, 678], [664, 674, 684, 688], [689, 668, 701, 678], [862, 674, 881, 688], [887, 668, 896, 678], [309, 629, 326, 643], [313, 616, 327, 627], [309, 611, 326, 613], [313, 597, 327, 609], [310, 591, 327, 597], [309, 586, 326, 588], [314, 574, 326, 585], [313, 561, 327, 572], [309, 542, 327, 553], [309, 537, 326, 539], [313, 524, 327, 534], [310, 518, 327, 524], [313, 504, 327, 516], [313, 493, 326, 502], [313, 480, 327, 490], [313, 468, 327, 479], [310, 454, 327, 460], [313, 441, 327, 452], [313, 422, 327, 433], [313, 409, 331, 420], [310, 402, 327, 408], [309, 397, 326, 399], [313, 378, 326, 394], [314, 366, 327, 375], [313, 346, 326, 362], [338, 490, 357, 504], [363, 484, 374, 494], [343, 281, 374, 300], [350, 236, 492, 265], [504, 236, 666, 265], [679, 235, 859, 260], [440, 470, 553, 488], [440, 493, 497, 507], [440, 515, 572, 529], [439, 538, 480, 555], [440, 560, 540, 574], [440, 583, 536, 600], [441, 605, 463, 618], [441, 627, 464, 640], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1052, 674, 1071, 688], [1077, 668, 1088, 678], [1240, 674, 1259, 688], [1265, 668, 1277, 678], [1428, 674, 1448, 688], [1453, 668, 1462, 678], [975, 629, 992, 643], [979, 616, 993, 627], [975, 611, 992, 613], [979, 597, 993, 609], [976, 591, 993, 597], [975, 586, 992, 588], [980, 574, 992, 585], [979, 561, 993, 572], [975, 542, 993, 553], [975, 537, 992, 539], [979, 524, 993, 534], [976, 518, 993, 524], [979, 504, 993, 516], [979, 493, 992, 502], [979, 480, 993, 490], [979, 468, 993, 479], [976, 454, 993, 460], [979, 441, 993, 452], [979, 422, 993, 433], [979, 409, 997, 420], [976, 402, 993, 408], [975, 397, 992, 399], [979, 378, 992, 394], [980, 366, 993, 375], [979, 346, 992, 362], [1004, 480, 1023, 494], [1029, 475, 1040, 485], [1009, 287, 1040, 307], [1016, 236, 1158, 265], [1170, 236, 1332, 265], [1345, 235, 1520, 260], [1106, 470, 1219, 488], [1106, 493, 1163, 507], [1106, 515, 1238, 529], [1105, 538, 1146, 555], [1106, 560, 1206, 574], [1106, 583, 1202, 600], [1107, 605, 1129, 618], [1107, 627, 1130, 640], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1814, 674, 1833, 688], [1839, 668, 1851, 678], [2001, 674, 2020, 688], [2026, 668, 2035, 678], [2189, 668, 2220, 688], [1641, 629, 1658, 643], [1645, 616, 1659, 627], [1641, 611, 1658, 613], [1645, 597, 1659, 609], [1642, 591, 1659, 597], [1641, 586, 1658, 588], [1646, 574, 1658, 585], [1645, 561, 1659, 572], [1641, 542, 1659, 553], [1641, 537, 1658, 539], [1645, 524, 1659, 534], [1642, 518, 1659, 524], [1645, 504, 1659, 516], [1645, 493, 1658, 502], [1645, 480, 1659, 490], [1645, 468, 1659, 479], [1642, 454, 1659, 460], [1645, 441, 1659, 452], [1645, 422, 1659, 433], [1645, 409, 1663, 420], [1642, 402, 1659, 408], [1641, 397, 1658, 399], [1645, 378, 1658, 394], [1646, 366, 1659, 375], [1645, 346, 1658, 362], [1670, 493, 1689, 507], [1695, 488, 1706, 498], [1675, 291, 1706, 310], [1682, 236, 1824, 265], [1836, 236, 1998, 265], [2011, 235, 2191, 260], [1772, 470, 1885, 488], [1772, 493, 1829, 507], [1772, 515, 1904, 529], [1771, 538, 1812, 555], [1772, 560, 1872, 574], [1772, 583, 1868, 600], [1773, 605, 1795, 618], [1773, 627, 1796, 640], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [452, 1188, 471, 1202], [477, 1183, 489, 1193], [629, 1188, 648, 1202], [654, 1183, 663, 1193], [808, 1183, 839, 1202], [309, 1144, 326, 1158], [313, 1131, 327, 1142], [309, 1126, 326, 1128], [313, 1111, 327, 1123], [310, 1105, 327, 1111], [309, 1101, 326, 1103], [314, 1089, 326, 1100], [313, 1076, 327, 1087], [309, 1056, 327, 1067], [309, 1051, 326, 1053], [313, 1039, 327, 1049], [310, 1032, 327, 1038], [313, 1019, 327, 1031], [313, 1008, 326, 1017], [313, 995, 327, 1005], [313, 982, 327, 993], [310, 969, 327, 975], [313, 956, 327, 967], [313, 937, 327, 948], [313, 924, 331, 935], [310, 917, 327, 923], [309, 912, 326, 914], [313, 893, 326, 909], [314, 880, 327, 889], [313, 860, 326, 876], [338, 1007, 357, 1021], [363, 1002, 374, 1012], [343, 810, 374, 830], [350, 751, 492, 780], [504, 751, 666, 780], [679, 750, 859, 775], [440, 985, 553, 1003], [440, 1007, 497, 1021], [440, 1030, 572, 1044], [439, 1053, 480, 1070], [440, 1074, 540, 1088], [440, 1098, 536, 1115], [441, 1120, 463, 1133], [441, 1142, 464, 1155], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1056, 1188, 1075, 1202], [1081, 1183, 1093, 1193], [1232, 1188, 1252, 1202], [1257, 1183, 1266, 1193], [1412, 1183, 1443, 1202], [975, 1144, 992, 1158], [979, 1131, 993, 1142], [975, 1126, 992, 1128], [979, 1111, 993, 1123], [976, 1105, 993, 1111], [975, 1101, 992, 1103], [980, 1089, 992, 1100], [979, 1076, 993, 1087], [975, 1056, 993, 1067], [975, 1051, 992, 1053], [979, 1039, 993, 1049], [976, 1032, 993, 1038], [979, 1019, 993, 1031], [979, 1008, 992, 1017], [979, 995, 993, 1005], [979, 982, 993, 993], [976, 969, 993, 975], [979, 956, 993, 967], [979, 937, 993, 948], [979, 924, 997, 935], [976, 917, 993, 923], [975, 912, 992, 914], [979, 893, 992, 909], [980, 880, 993, 889], [979, 860, 992, 876], [1004, 1008, 1023, 1022], [1029, 1003, 1040, 1013], [1009, 801, 1040, 821], [1016, 751, 1158, 780], [1170, 751, 1332, 780], [1345, 750, 1525, 775], [1106, 985, 1219, 1003], [1106, 1007, 1163, 1021], [1106, 1030, 1238, 1044], [1105, 1053, 1146, 1070], [1106, 1074, 1206, 1088], [1106, 1098, 1202, 1115], [1107, 1120, 1129, 1133], [1107, 1142, 1130, 1155], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1762, 1188, 1781, 1202], [1787, 1183, 1798, 1193], [1944, 1188, 1963, 1202], [1969, 1183, 1981, 1193], [2127, 1188, 2146, 1202], [2152, 1183, 2160, 1193], [1641, 1137, 1658, 1151], [1645, 1124, 1659, 1135], [1641, 1119, 1658, 1121], [1645, 1105, 1659, 1117], [1642, 1099, 1659, 1105], [1641, 1094, 1658, 1096], [1646, 1082, 1658, 1093], [1645, 1069, 1659, 1080], [1641, 1050, 1659, 1061], [1641, 1045, 1658, 1047], [1645, 1033, 1659, 1043], [1642, 1026, 1659, 1032], [1645, 1012, 1659, 1024], [1645, 1001, 1658, 1010], [1645, 988, 1659, 998], [1645, 976, 1659, 987], [1642, 962, 1659, 968], [1645, 950, 1659, 961], [1645, 930, 1659, 941], [1645, 917, 1663, 928], [1642, 910, 1659, 916], [1641, 906, 1658, 908], [1645, 886, 1658, 902], [1646, 874, 1659, 883], [1645, 854, 1658, 870], [1670, 988, 1689, 1002], [1695, 983, 1706, 993], [1675, 781, 1706, 801], [1729, 752, 1871, 781], [1883, 752, 2045, 781], [2057, 752, 2143, 781], [1772, 985, 1885, 1003], [1772, 1007, 1829, 1021], [1772, 1030, 1904, 1044], [1771, 1053, 1812, 1070], [1772, 1074, 1872, 1088], [1772, 1098, 1868, 1115], [1773, 1120, 1795, 1133], [1773, 1142, 1796, 1155], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [438, 1703, 457, 1717], [463, 1698, 475, 1708], [620, 1703, 639, 1717], [645, 1698, 654, 1708], [806, 1698, 837, 1717], [309, 1652, 326, 1666], [313, 1639, 327, 1650], [309, 1634, 326, 1636], [313, 1620, 327, 1632], [310, 1614, 327, 1620], [309, 1609, 326, 1611], [314, 1597, 326, 1608], [313, 1584, 327, 1595], [309, 1565, 327, 1576], [309, 1560, 326, 1562], [313, 1547, 327, 1557], [310, 1541, 327, 1547], [313, 1527, 327, 1539], [313, 1516, 326, 1525], [313, 1503, 327, 1513], [313, 1490, 327, 1501], [310, 1477, 327, 1483], [313, 1464, 327, 1475], [313, 1445, 327, 1456], [313, 1432, 331, 1443], [310, 1425, 327, 1431], [309, 1420, 326, 1422], [313, 1401, 326, 1417], [314, 1389, 327, 1398], [313, 1369, 326, 1385], [338, 1590, 357, 1604], [363, 1585, 374, 1595], [338, 1499, 357, 1513], [363, 1493, 374, 1503], [338, 1406, 357, 1420], [363, 1400, 374, 1410], [343, 1307, 374, 1327], [376, 1266, 518, 1295], [530, 1266, 692, 1295], [703, 1266, 820, 1289], [440, 1500, 553, 1518], [440, 1522, 497, 1536], [440, 1544, 572, 1558], [439, 1568, 480, 1585], [440, 1589, 540, 1603], [440, 1612, 536, 1629], [441, 1634, 463, 1647], [441, 1657, 464, 1670], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1175, 1703, 1194, 1717], [1200, 1698, 1212, 1708], [1363, 1703, 1382, 1717], [1388, 1698, 1396, 1708], [975, 1652, 992, 1666], [979, 1639, 993, 1650], [975, 1634, 992, 1636], [979, 1620, 993, 1632], [976, 1614, 993, 1620], [975, 1609, 992, 1611], [980, 1597, 992, 1608], [979, 1584, 993, 1595], [975, 1565, 993, 1576], [975, 1560, 992, 1562], [979, 1547, 993, 1557], [976, 1541, 993, 1547], [979, 1527, 993, 1539], [979, 1516, 992, 1525], [979, 1503, 993, 1513], [979, 1490, 993, 1501], [976, 1477, 993, 1483], [979, 1464, 993, 1475], [979, 1445, 993, 1456], [979, 1432, 997, 1443], [976, 1425, 993, 1431], [975, 1420, 992, 1422], [979, 1401, 992, 1417], [980, 1389, 993, 1398], [979, 1369, 992, 1385], [1004, 1507, 1023, 1521], [1029, 1502, 1040, 1512], [1009, 1298, 1040, 1317], [1043, 1266, 1186, 1295], [1198, 1266, 1360, 1295], [1371, 1266, 1486, 1295], [1106, 1500, 1219, 1518], [1106, 1522, 1163, 1536], [1106, 1544, 1238, 1558], [1105, 1568, 1146, 1585], [1106, 1589, 1206, 1603], [1106, 1612, 1202, 1629], [1107, 1634, 1129, 1647], [1107, 1657, 1130, 1670], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1858, 1703, 1877, 1717], [1883, 1698, 1892, 1708], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1641, 1652, 1658, 1666], [1645, 1639, 1659, 1650], [1641, 1634, 1658, 1636], [1645, 1620, 1659, 1632], [1642, 1614, 1659, 1620], [1641, 1609, 1658, 1611], [1646, 1597, 1658, 1608], [1645, 1584, 1659, 1595], [1641, 1565, 1659, 1576], [1641, 1560, 1658, 1562], [1645, 1547, 1659, 1557], [1642, 1541, 1659, 1547], [1645, 1527, 1659, 1539], [1645, 1516, 1658, 1525], [1645, 1503, 1659, 1513], [1645, 1490, 1659, 1501], [1642, 1477, 1659, 1483], [1645, 1464, 1659, 1475], [1645, 1445, 1659, 1456], [1645, 1432, 1663, 1443], [1642, 1425, 1659, 1431], [1641, 1420, 1658, 1422], [1645, 1401, 1658, 1417], [1646, 1389, 1659, 1398], [1645, 1369, 1658, 1385], [1670, 1599, 1689, 1613], [1695, 1594, 1706, 1604], [1670, 1498, 1689, 1512], [1695, 1492, 1706, 1502], [1670, 1395, 1689, 1409], [1695, 1390, 1706, 1400], [1745, 1266, 1888, 1295], [1900, 1266, 2062, 1295], [2072, 1268, 2125, 1289], [1772, 1500, 1885, 1518], [1772, 1522, 1829, 1536], [1772, 1544, 1904, 1558], [1771, 1568, 1812, 1585], [1772, 1589, 1872, 1603], [1772, 1612, 1868, 1629], [1773, 1634, 1795, 1647], [1773, 1657, 1796, 1670], [584, 2244, 643, 2265], [654, 2244, 683, 2270], [429, 2218, 448, 2232], [454, 2212, 465, 2222], [609, 2218, 628, 2232], [634, 2212, 643, 2222], [792, 2212, 823, 2232], [309, 2166, 326, 2180], [313, 2154, 327, 2165], [309, 2149, 326, 2151], [313, 2134, 327, 2146], [310, 2128, 327, 2134], [309, 2124, 326, 2126], [314, 2112, 326, 2123], [313, 2099, 327, 2110], [309, 2079, 327, 2090], [309, 2074, 326, 2076], [313, 2062, 327, 2072], [310, 2055, 327, 2061], [313, 2042, 327, 2054], [313, 2031, 326, 2040], [313, 2018, 327, 2028], [313, 2005, 327, 2016], [310, 1992, 327, 1998], [313, 1979, 327, 1990], [313, 1960, 327, 1971], [313, 1947, 331, 1958], [310, 1940, 327, 1946], [309, 1935, 326, 1937], [313, 1916, 326, 1932], [314, 1903, 327, 1912], [313, 1883, 326, 1899], [338, 2028, 357, 2042], [363, 2022, 374, 2032], [343, 1812, 374, 1831], [399, 1781, 541, 1810], [553, 1781, 715, 1810], [727, 1781, 812, 1804], [440, 2015, 553, 2033], [440, 2037, 497, 2051], [440, 2059, 572, 2073], [439, 2082, 480, 2099], [440, 2104, 540, 2118], [440, 2127, 536, 2144], [441, 2149, 463, 2162], [441, 2171, 464, 2184], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1129, 2218, 1148, 2232], [1154, 2212, 1163, 2222], [1307, 2212, 1338, 2232], [1481, 2212, 1510, 2232], [975, 2166, 992, 2180], [979, 2154, 993, 2165], [975, 2149, 992, 2151], [979, 2134, 993, 2146], [976, 2128, 993, 2134], [975, 2124, 992, 2126], [980, 2112, 992, 2123], [979, 2099, 993, 2110], [975, 2079, 993, 2090], [975, 2074, 992, 2076], [979, 2062, 993, 2072], [976, 2055, 993, 2061], [979, 2042, 993, 2054], [979, 2031, 992, 2040], [979, 2018, 993, 2028], [979, 2005, 993, 2016], [976, 1992, 993, 1998], [979, 1979, 993, 1990], [979, 1960, 993, 1971], [979, 1947, 997, 1958], [976, 1940, 993, 1946], [975, 1935, 992, 1937], [979, 1916, 992, 1932], [980, 1903, 993, 1912], [979, 1883, 992, 1899], [1004, 2111, 1023, 2125], [1029, 2106, 1040, 2116], [1004, 2020, 1023, 2034], [1029, 2015, 1040, 2025], [1004, 1929, 1023, 1943], [1029, 1924, 1040, 1934], [1009, 1833, 1040, 1852], [1048, 1781, 1190, 1810], [1202, 1781, 1364, 1810], [1376, 1783, 1487, 1804], [1106, 2015, 1219, 2033], [1106, 2037, 1163, 2051], [1106, 2059, 1238, 2073], [1105, 2082, 1146, 2099], [1106, 2104, 1206, 2118], [1106, 2127, 1202, 2144], [1107, 2149, 1129, 2162], [1107, 2171, 1130, 2184], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [1715, 2218, 1734, 2232], [1740, 2212, 1749, 2222], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1641, 2166, 1658, 2180], [1645, 2154, 1659, 2165], [1641, 2149, 1658, 2151], [1645, 2134, 1659, 2146], [1642, 2128, 1659, 2134], [1641, 2124, 1658, 2126], [1646, 2112, 1658, 2123], [1645, 2099, 1659, 2110], [1641, 2079, 1659, 2090], [1641, 2074, 1658, 2076], [1645, 2062, 1659, 2072], [1642, 2055, 1659, 2061], [1645, 2042, 1659, 2054], [1645, 2031, 1658, 2040], [1645, 2018, 1659, 2028], [1645, 2005, 1659, 2016], [1642, 1992, 1659, 1998], [1645, 1979, 1659, 1990], [1645, 1960, 1659, 1971], [1645, 1947, 1663, 1958], [1642, 1940, 1659, 1946], [1641, 1935, 1658, 1937], [1645, 1916, 1658, 1932], [1646, 1903, 1659, 1912], [1645, 1883, 1658, 1899], [1670, 2056, 1689, 2070], [1695, 2050, 1706, 2060], [1675, 1825, 1706, 1844], [1704, 1781, 1846, 1810], [1858, 1781, 2020, 1810], [2033, 1781, 2157, 1810], [1772, 2015, 1885, 2033], [1772, 2037, 1829, 2051], [1772, 2059, 1904, 2073], [1771, 2082, 1812, 2099], [1772, 2104, 1872, 2118], [1772, 2127, 1868, 2144], [1773, 2149, 1795, 2162], [1773, 2171, 1796, 2184], [375, 2356, 480, 2393], [496, 2356, 539, 2385], [557, 2356, 688, 2385], [701, 2356, 832, 2384], [844, 2360, 873, 2384], [886, 2356, 1032, 2393], [1043, 2365, 1076, 2385], [1089, 2356, 1159, 2384], [1171, 2356, 1207, 2384], [1216, 2356, 1263, 2384], [1275, 2356, 1431, 2393], [1444, 2356, 1559, 2384], [1572, 2356, 1742, 2393], [1754, 2356, 1847, 2384], [1858, 2356, 2055, 2393], [2068, 2356, 2115, 2384], [2126, 2356, 2173, 2384], [376, 2406, 517, 2434], [528, 2406, 642, 2443], [656, 2406, 834, 2434], [846, 2406, 876, 2434], [889, 2406, 938, 2434], [950, 2406, 1159, 2443], [438, 2540, 635, 2577], [648, 2540, 729, 2568], [742, 2540, 825, 2574], [839, 2540, 887, 2568], [899, 2540, 1020, 2568], [1032, 2540, 1067, 2568], [1076, 2540, 1181, 2568], [1194, 2549, 1302, 2577], [1315, 2540, 1362, 2568], [1375, 2549, 1447, 2568], [1460, 2540, 1635, 2568], [1647, 2540, 1778, 2577], [1791, 2549, 1831, 2568], [1842, 2540, 1890, 2568], [1903, 2540, 2019, 2568], [2032, 2549, 2179, 2577], [373, 2592, 427, 2619], [440, 2600, 539, 2628], [552, 2591, 701, 2625], [715, 2591, 777, 2619], [788, 2591, 836, 2619], [848, 2591, 898, 2619], [909, 2600, 1041, 2628], [1054, 2591, 1090, 2619], [1099, 2591, 1200, 2628], [1211, 2591, 1391, 2628], [1404, 2600, 1421, 2619], [1432, 2591, 1627, 2628], [1640, 2591, 1773, 2619], [1786, 2591, 1811, 2619], [1825, 2591, 1987, 2619], [2003, 2591, 2067, 2619], [2079, 2591, 2174, 2620], [375, 2641, 455, 2678], [472, 2641, 508, 2669], [521, 2641, 630, 2678], [650, 2641, 685, 2670], [702, 2641, 848, 2678], [865, 2650, 950, 2669], [965, 2645, 996, 2669], [1013, 2645, 1138, 2678], [1153, 2641, 1221, 2675], [1240, 2650, 1272, 2669], [1289, 2641, 1338, 2669], [1353, 2641, 1516, 2678], [1531, 2641, 1647, 2678], [1663, 2641, 1699, 2669], [1712, 2641, 1762, 2669], [1777, 2641, 2027, 2675], [2044, 2641, 2175, 2678], [377, 2692, 607, 2729], [617, 2692, 659, 2729], [671, 2692, 721, 2720], [733, 2692, 837, 2726], [852, 2696, 996, 2720], [1008, 2692, 1127, 2729], [1140, 2692, 1199, 2720], [1211, 2701, 1251, 2720], [1264, 2692, 1439, 2729], [1450, 2692, 1688, 2729], [1702, 2701, 1751, 2720], [1763, 2692, 1908, 2720], [1919, 2692, 2050, 2729], [2061, 2692, 2175, 2720], [376, 2743, 592, 2780], [609, 2743, 707, 2772], [719, 2743, 786, 2777], [800, 2743, 849, 2771], [860, 2743, 1011, 2780], [1023, 2743, 1161, 2771], [1175, 2752, 1258, 2771], [1270, 2747, 1300, 2771], [1312, 2743, 1350, 2771], [1362, 2743, 1411, 2771], [1422, 2743, 1490, 2771], [1502, 2743, 1598, 2771], [1610, 2743, 1658, 2771], [1669, 2743, 1718, 2771], [1730, 2743, 1908, 2771], [1920, 2743, 1994, 2771], [1256, 2935, 1293, 2964], [584, 700, 643, 721], [654, 700, 683, 726], [468, 674, 487, 688], [493, 668, 504, 678], [664, 674, 684, 688], [689, 668, 701, 678], [862, 674, 881, 688], [887, 668, 896, 678], [317, 495, 334, 498], [317, 478, 335, 492], [317, 463, 334, 476], [317, 445, 334, 459], [364, 651, 373, 665], [345, 583, 371, 597], [365, 515, 370, 529], [346, 447, 371, 461], [364, 379, 373, 393], [345, 311, 371, 325], [350, 236, 492, 265], [504, 236, 666, 265], [679, 235, 859, 260], [738, 470, 851, 488], [738, 493, 796, 507], [738, 515, 870, 529], [737, 538, 778, 555], [738, 560, 838, 574], [738, 583, 834, 600], [739, 605, 761, 618], [739, 627, 762, 640], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1052, 674, 1071, 688], [1077, 668, 1088, 678], [1240, 674, 1259, 688], [1265, 668, 1277, 678], [1428, 674, 1448, 688], [1453, 668, 1462, 678], [983, 495, 1000, 498], [983, 478, 1001, 492], [983, 463, 1000, 476], [983, 445, 1000, 459], [1030, 651, 1039, 665], [1011, 603, 1037, 617], [1031, 555, 1036, 569], [1012, 507, 1037, 521], [1030, 458, 1039, 472], [1011, 410, 1037, 424], [1030, 362, 1039, 376], [1011, 314, 1037, 328], [1016, 236, 1158, 265], [1170, 236, 1332, 265], [1345, 235, 1520, 260], [1404, 470, 1517, 488], [1404, 493, 1462, 507], [1404, 515, 1536, 529], [1403, 538, 1444, 555], [1404, 560, 1504, 574], [1404, 583, 1500, 600], [1405, 605, 1427, 618], [1405, 627, 1428, 640], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1814, 674, 1833, 688], [1839, 668, 1851, 678], [2001, 674, 2020, 688], [2026, 668, 2035, 678], [2189, 668, 2220, 688], [1669, 495, 1686, 498], [1669, 478, 1687, 492], [1669, 463, 1686, 476], [1669, 445, 1686, 459], [1696, 651, 1705, 665], [1697, 587, 1702, 601], [1696, 523, 1705, 537], [1696, 459, 1705, 473], [1696, 395, 1705, 409], [1696, 331, 1705, 345], [1682, 236, 1824, 265], [1836, 236, 1998, 265], [2011, 235, 2191, 260], [2070, 470, 2183, 488], [2070, 493, 2128, 507], [2070, 515, 2202, 529], [2069, 538, 2110, 555], [2070, 560, 2170, 574], [2070, 583, 2166, 600], [2071, 605, 2093, 618], [2071, 627, 2094, 640], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [452, 1188, 471, 1202], [477, 1183, 489, 1193], [629, 1188, 648, 1202], [654, 1183, 663, 1193], [808, 1183, 839, 1202], [337, 1010, 354, 1013], [337, 993, 355, 1007], [337, 978, 354, 991], [337, 960, 354, 974], [364, 1166, 373, 1180], [365, 1105, 370, 1119], [364, 1044, 373, 1058], [364, 982, 373, 996], [364, 921, 373, 935], [364, 860, 373, 874], [364, 799, 373, 813], [350, 751, 492, 780], [504, 751, 666, 780], [679, 750, 859, 775], [738, 985, 851, 1003], [738, 1007, 796, 1021], [738, 1030, 870, 1044], [737, 1053, 778, 1070], [738, 1074, 838, 1088], [738, 1098, 834, 1115], [739, 1120, 761, 1133], [739, 1142, 762, 1155], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1056, 1188, 1075, 1202], [1081, 1183, 1093, 1193], [1232, 1188, 1252, 1202], [1257, 1183, 1266, 1193], [1412, 1183, 1443, 1202], [983, 1010, 1000, 1013], [983, 993, 1001, 1007], [983, 978, 1000, 991], [983, 960, 1000, 974], [1030, 1166, 1039, 1180], [1011, 1120, 1037, 1134], [1031, 1075, 1036, 1089], [1012, 1029, 1037, 1043], [1030, 984, 1039, 998], [1011, 938, 1037, 952], [1030, 893, 1039, 907], [1011, 847, 1037, 861], [1030, 802, 1039, 816], [1016, 751, 1158, 780], [1170, 751, 1332, 780], [1345, 750, 1525, 775], [1404, 985, 1517, 1003], [1404, 1007, 1462, 1021], [1404, 1030, 1536, 1044], [1403, 1053, 1444, 1070], [1404, 1074, 1504, 1088], [1404, 1098, 1500, 1115], [1405, 1120, 1427, 1133], [1405, 1142, 1428, 1155], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1762, 1188, 1781, 1202], [1787, 1183, 1798, 1193], [1944, 1188, 1963, 1202], [1969, 1183, 1981, 1193], [2127, 1188, 2146, 1202], [2152, 1183, 2160, 1193], [1669, 1003, 1686, 1006], [1669, 987, 1687, 1001], [1669, 971, 1686, 984], [1669, 953, 1686, 967], [1696, 1166, 1705, 1180], [1697, 1106, 1702, 1120], [1696, 1046, 1705, 1060], [1696, 986, 1705, 1000], [1696, 926, 1705, 940], [1696, 866, 1705, 880], [1696, 806, 1705, 820], [1729, 752, 1871, 781], [1883, 752, 2045, 781], [2057, 752, 2143, 781], [2070, 985, 2183, 1003], [2070, 1007, 2128, 1021], [2070, 1030, 2202, 1044], [2069, 1053, 2110, 1070], [2070, 1074, 2170, 1088], [2070, 1098, 2166, 1115], [2071, 1120, 2093, 1133], [2071, 1142, 2094, 1155], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [438, 1703, 457, 1717], [463, 1698, 475, 1708], [620, 1703, 639, 1717], [645, 1698, 654, 1708], [806, 1698, 837, 1717], [337, 1518, 354, 1521], [337, 1501, 355, 1515], [337, 1486, 354, 1499], [337, 1468, 354, 1482], [364, 1681, 373, 1695], [365, 1633, 370, 1647], [364, 1585, 373, 1599], [364, 1537, 373, 1551], [364, 1490, 373, 1504], [364, 1442, 373, 1456], [364, 1394, 373, 1408], [364, 1347, 373, 1361], [364, 1299, 373, 1313], [376, 1266, 518, 1295], [530, 1266, 692, 1295], [703, 1266, 820, 1289], [738, 1500, 851, 1518], [738, 1522, 796, 1536], [738, 1544, 870, 1558], [737, 1568, 778, 1585], [738, 1589, 838, 1603], [738, 1612, 834, 1629], [739, 1634, 761, 1647], [739, 1657, 762, 1670], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1175, 1703, 1194, 1717], [1200, 1698, 1212, 1708], [1363, 1703, 1382, 1717], [1388, 1698, 1396, 1708], [996, 1518, 1013, 1521], [996, 1501, 1014, 1515], [996, 1486, 1013, 1499], [996, 1468, 1013, 1482], [1023, 1648, 1039, 1662], [1023, 1595, 1039, 1609], [1023, 1542, 1039, 1556], [1030, 1490, 1039, 1504], [1030, 1437, 1039, 1451], [1030, 1384, 1039, 1398], [1030, 1331, 1039, 1345], [1043, 1266, 1186, 1295], [1198, 1266, 1360, 1295], [1371, 1266, 1486, 1295], [1404, 1500, 1517, 1518], [1404, 1522, 1462, 1536], [1404, 1544, 1536, 1558], [1403, 1568, 1444, 1585], [1404, 1589, 1504, 1603], [1404, 1612, 1500, 1629], [1405, 1634, 1427, 1647], [1405, 1657, 1428, 1670], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1858, 1703, 1877, 1717], [1883, 1698, 1892, 1708], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1669, 1518, 1686, 1521], [1669, 1501, 1687, 1515], [1669, 1486, 1686, 1499], [1669, 1468, 1686, 1482], [1696, 1681, 1705, 1695], [1697, 1604, 1702, 1618], [1696, 1527, 1705, 1541], [1696, 1451, 1705, 1465], [1696, 1374, 1705, 1388], [1696, 1298, 1705, 1312], [1745, 1266, 1888, 1295], [1900, 1266, 2062, 1295], [2072, 1268, 2125, 1289], [2070, 1500, 2183, 1518], [2070, 1522, 2128, 1536], [2070, 1544, 2202, 1558], [2069, 1568, 2110, 1585], [2070, 1589, 2170, 1603], [2070, 1612, 2166, 1629], [2071, 1634, 2093, 1647], [2071, 1657, 2094, 1670], [584, 2244, 643, 2265], [654, 2244, 683, 2270], [429, 2218, 448, 2232], [454, 2212, 465, 2222], [609, 2218, 628, 2232], [634, 2212, 643, 2222], [792, 2212, 823, 2232], [337, 2033, 354, 2036], [337, 2016, 355, 2030], [337, 2001, 354, 2014], [337, 1983, 354, 1997], [364, 2195, 373, 2209], [365, 2141, 370, 2155], [364, 2087, 373, 2101], [364, 2033, 373, 2047], [364, 1979, 373, 1993], [364, 1925, 373, 1939], [364, 1871, 373, 1885], [364, 1817, 373, 1831], [399, 1781, 541, 1810], [553, 1781, 715, 1810], [727, 1781, 812, 1804], [738, 2015, 851, 2033], [738, 2037, 796, 2051], [738, 2059, 870, 2073], [737, 2082, 778, 2099], [738, 2104, 838, 2118], [738, 2127, 834, 2144], [739, 2149, 761, 2162], [739, 2171, 762, 2184], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1129, 2218, 1148, 2232], [1154, 2212, 1163, 2222], [1307, 2212, 1338, 2232], [1481, 2212, 1510, 2232], [990, 2033, 1007, 2036], [990, 2016, 1008, 2030], [990, 2001, 1007, 2014], [990, 1983, 1007, 1997], [1030, 2195, 1039, 2209], [1030, 2134, 1039, 2148], [1030, 2072, 1039, 2086], [1030, 2011, 1039, 2025], [1030, 1949, 1039, 1963], [1018, 1888, 1037, 1902], [1018, 1826, 1037, 1840], [1048, 1781, 1190, 1810], [1202, 1781, 1364, 1810], [1376, 1783, 1487, 1804], [1404, 2015, 1517, 2033], [1404, 2037, 1462, 2051], [1404, 2059, 1536, 2073], [1403, 2082, 1444, 2099], [1404, 2104, 1504, 2118], [1404, 2127, 1500, 2144], [1405, 2149, 1427, 2162], [1405, 2171, 1428, 2184], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [1715, 2218, 1734, 2232], [1740, 2212, 1749, 2222], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1669, 2033, 1686, 2036], [1669, 2016, 1687, 2030], [1669, 2001, 1686, 2014], [1669, 1983, 1686, 1997], [1696, 2195, 1705, 2209], [1697, 2133, 1702, 2147], [1696, 2070, 1705, 2084], [1696, 2008, 1705, 2022], [1696, 1945, 1705, 1959], [1696, 1883, 1705, 1897], [1696, 1820, 1705, 1834], [1704, 1781, 1846, 1810], [1858, 1781, 2020, 1810], [2033, 1781, 2157, 1810], [2070, 2015, 2183, 2033], [2070, 2037, 2128, 2051], [2070, 2059, 2202, 2073], [2069, 2082, 2110, 2099], [2070, 2104, 2170, 2118], [2070, 2127, 2166, 2144], [2071, 2149, 2093, 2162], [2071, 2171, 2094, 2184], [376, 2296, 484, 2333], [506, 2296, 552, 2325], [581, 2296, 742, 2324], [761, 2296, 866, 2333], [884, 2300, 915, 2324], [934, 2296, 1030, 2324], [1049, 2296, 1138, 2324], [1158, 2296, 1278, 2331], [1298, 2305, 1333, 2325], [1352, 2296, 1425, 2324], [1443, 2296, 1479, 2324], [1495, 2296, 1545, 2324], [1563, 2296, 1725, 2333], [1744, 2296, 1864, 2324], [1883, 2296, 2061, 2333], [2079, 2296, 2175, 2324], [376, 2347, 576, 2384], [590, 2347, 638, 2375], [649, 2347, 698, 2375], [710, 2347, 851, 2375], [862, 2347, 977, 2384], [990, 2347, 1168, 2375], [1180, 2347, 1211, 2375], [1223, 2347, 1272, 2375], [1284, 2347, 1493, 2384], [437, 2482, 493, 2509], [504, 2481, 595, 2518], [605, 2481, 765, 2515], [779, 2481, 866, 2509], [879, 2480, 896, 2510], [909, 2485, 1041, 2518], [1055, 2490, 1071, 2509], [1084, 2490, 1233, 2518], [1245, 2481, 1281, 2509], [1289, 2481, 1345, 2518], [1357, 2481, 1455, 2518], [1469, 2481, 1504, 2509], [1513, 2481, 1561, 2509], [1574, 2481, 1733, 2518], [1745, 2481, 1891, 2515], [1906, 2481, 1993, 2518], [2006, 2481, 2077, 2510], [2090, 2490, 2173, 2509], [375, 2532, 667, 2560], [682, 2532, 773, 2560], [784, 2532, 872, 2561], [884, 2536, 914, 2560], [926, 2536, 979, 2569], [990, 2532, 1072, 2560], [1083, 2536, 1114, 2560], [1125, 2541, 1188, 2560], [376, 2642, 457, 2672], [500, 2642, 756, 2672], [768, 2642, 983, 2680], [376, 2723, 408, 2750], [419, 2722, 550, 2750], [561, 2726, 590, 2750], [602, 2722, 649, 2750], [659, 2722, 797, 2759], [809, 2722, 1004, 2759], [1017, 2722, 1073, 2750], [1084, 2726, 1113, 2750], [1124, 2722, 1265, 2750], [1276, 2722, 1324, 2750], [1334, 2722, 1566, 2759], [1576, 2722, 1717, 2759], [1728, 2722, 1763, 2750], [1771, 2722, 1819, 2750], [1829, 2722, 1984, 2759], [1996, 2722, 2173, 2759], [376, 2773, 506, 2810], [518, 2773, 650, 2807], [664, 2773, 771, 2810], [783, 2773, 823, 2802], [834, 2773, 914, 2810], [926, 2773, 1055, 2810], [1067, 2773, 1155, 2801], [1168, 2773, 1216, 2801], [1227, 2773, 1276, 2801], [1288, 2774, 1340, 2801], [1353, 2773, 1513, 2810], [1526, 2782, 1557, 2801], [1570, 2773, 1619, 2801], [1631, 2773, 1758, 2801], [1769, 2773, 1805, 2801], [1813, 2782, 1973, 2810], [1984, 2782, 2055, 2801], [2066, 2782, 2173, 2810], [1256, 2935, 1294, 2964], [609, 274, 698, 302], [710, 273, 738, 303], [756, 277, 899, 310], [910, 276, 942, 302], [950, 276, 1002, 310], [1012, 276, 1102, 310], [1114, 276, 1145, 302], [1153, 276, 1198, 302], [1209, 276, 1355, 310], [1366, 270, 1436, 303], [1409, 292, 1444, 314], [1458, 276, 1604, 310], [1616, 276, 1783, 310], [1795, 276, 1927, 302], [415, 352, 542, 380], [876, 353, 942, 389], [953, 352, 1053, 389], [415, 443, 555, 480], [568, 442, 733, 472], [791, 447, 819, 474], [876, 444, 944, 471], [955, 452, 1161, 480], [1172, 447, 1203, 471], [1215, 443, 1479, 480], [791, 498, 819, 525], [876, 494, 1135, 531], [1146, 494, 1270, 531], [792, 562, 818, 563], [877, 545, 959, 574], [971, 545, 1019, 573], [1029, 545, 1135, 582], [1147, 545, 1316, 573], [786, 602, 823, 625], [876, 596, 958, 624], [970, 596, 1017, 624], [1030, 596, 1167, 624], [1180, 596, 1339, 633], [1351, 596, 1431, 624], [415, 687, 565, 715], [577, 687, 707, 724], [791, 691, 819, 718], [876, 687, 1048, 715], [1061, 687, 1229, 715], [1244, 687, 1357, 715], [1369, 691, 1399, 715], [1411, 688, 1467, 715], [792, 755, 818, 756], [876, 739, 936, 766], [948, 738, 1056, 767], [1067, 738, 1137, 766], [1149, 739, 1205, 766], [786, 795, 823, 818], [876, 790, 940, 818], [951, 790, 1007, 817], [1019, 789, 1135, 817], [416, 881, 493, 918], [503, 882, 653, 918], [791, 885, 819, 912], [876, 881, 1054, 918], [1065, 881, 1213, 918], [1227, 881, 1372, 918], [1384, 885, 1415, 909], [1427, 882, 1483, 909], [792, 949, 818, 950], [877, 932, 959, 961], [971, 941, 1176, 969], [1189, 936, 1218, 960], [1229, 932, 1293, 960], [1304, 932, 1455, 960], [786, 988, 823, 1011], [876, 983, 940, 1011], [951, 983, 1007, 1010], [1019, 982, 1135, 1010], [415, 1074, 700, 1103], [792, 1091, 818, 1092], [877, 1074, 959, 1103], [786, 1131, 823, 1154], [876, 1126, 940, 1154], [951, 1125, 1036, 1153], [1047, 1125, 1170, 1153], [1182, 1125, 1298, 1153], [415, 1216, 534, 1245], [791, 1220, 819, 1247], [877, 1216, 986, 1245], [1003, 1216, 1171, 1253], [1187, 1216, 1345, 1253], [1363, 1225, 1380, 1244], [1396, 1225, 1464, 1244], [1480, 1216, 1516, 1244], [1530, 1216, 1874, 1245], [1889, 1216, 2044, 1244], [2061, 1216, 2135, 1245], [876, 1267, 970, 1295], [981, 1271, 1133, 1304], [792, 1335, 818, 1336], [876, 1318, 1014, 1346], [1027, 1322, 1058, 1346], [1070, 1318, 1355, 1347], [1366, 1318, 1455, 1347], [1468, 1318, 1587, 1355], [1598, 1318, 1682, 1346], [1695, 1318, 1795, 1355], [1807, 1318, 1967, 1355], [786, 1375, 823, 1398], [876, 1370, 940, 1398], [951, 1369, 1023, 1406], [1036, 1369, 1124, 1398], [1136, 1369, 1256, 1406], [1268, 1369, 1340, 1398], [1353, 1378, 1436, 1397], [1448, 1369, 1589, 1406], [1601, 1369, 1782, 1397], [415, 1461, 546, 1489], [560, 1461, 669, 1498], [791, 1465, 819, 1492], [876, 1462, 965, 1489], [978, 1465, 1114, 1489], [792, 1528, 818, 1529], [877, 1511, 1006, 1548], [1019, 1511, 1127, 1540], [1138, 1511, 1208, 1539], [1220, 1511, 1428, 1548], [792, 1579, 818, 1580], [876, 1562, 942, 1590], [953, 1562, 1097, 1591], [1108, 1562, 1156, 1590], [1167, 1562, 1359, 1599], [1372, 1562, 1518, 1590], [786, 1619, 823, 1642], [876, 1614, 940, 1642], [951, 1613, 1160, 1650], [1172, 1613, 1288, 1641], [415, 1705, 623, 1742], [791, 1709, 819, 1736], [876, 1706, 965, 1733], [978, 1709, 1114, 1733], [792, 1772, 818, 1773], [877, 1755, 992, 1784], [1003, 1755, 1073, 1783], [1085, 1756, 1141, 1783], [1153, 1755, 1201, 1783], [1212, 1755, 1271, 1784], [1285, 1755, 1453, 1783], [786, 1812, 823, 1835], [876, 1806, 986, 1835], [997, 1806, 1086, 1835], [1098, 1806, 1261, 1843], [1275, 1810, 1410, 1834], [1423, 1806, 1569, 1834], [1583, 1815, 1632, 1834], [1643, 1806, 1780, 1843], [415, 1898, 636, 1927], [791, 1902, 819, 1929], [877, 1898, 983, 1927], [997, 1898, 1046, 1926], [1058, 1898, 1186, 1926], [1197, 1898, 1317, 1927], [1329, 1898, 1365, 1926], [1374, 1898, 1424, 1926], [1434, 1898, 1573, 1935], [792, 1966, 818, 1967], [877, 1949, 959, 1978], [792, 2017, 818, 2018], [876, 2001, 954, 2028], [966, 2009, 1110, 2037], [1122, 2000, 1170, 2028], [1181, 2000, 1231, 2028], [1242, 2000, 1421, 2028], [1435, 2000, 1555, 2029], [786, 2056, 823, 2079], [876, 2050, 978, 2087], [991, 2050, 1063, 2087], [1075, 2050, 1163, 2079], [1176, 2050, 1296, 2087], [1308, 2050, 1357, 2078], [1369, 2050, 1496, 2078], [1507, 2050, 1645, 2087], [376, 2207, 454, 2235], [469, 2207, 480, 2235], [496, 2207, 622, 2244], [638, 2207, 681, 2236], [697, 2208, 749, 2235], [763, 2216, 812, 2235], [824, 2207, 884, 2235], [896, 2207, 943, 2235], [954, 2207, 1002, 2235], [1015, 2207, 1134, 2235], [1145, 2207, 1268, 2244], [1282, 2207, 1330, 2235], [1342, 2207, 1425, 2244], [1439, 2207, 1495, 2235], [1508, 2211, 1537, 2235], [1550, 2216, 1632, 2235], [1644, 2216, 1814, 2244], [1828, 2207, 1998, 2244], [2011, 2207, 2111, 2235], [2123, 2211, 2174, 2235], [375, 2257, 416, 2294], [429, 2257, 446, 2286], [459, 2266, 555, 2291], [569, 2257, 671, 2286], [684, 2257, 950, 2294], [963, 2257, 1022, 2285], [1034, 2266, 1172, 2294], [1185, 2257, 1361, 2285], [1373, 2257, 1482, 2285], [1494, 2257, 1641, 2294], [1653, 2257, 1892, 2294], [1904, 2257, 1991, 2294], [2005, 2257, 2083, 2292], [2093, 2257, 2179, 2292], [375, 2309, 431, 2336], [442, 2308, 490, 2336], [502, 2308, 596, 2345], [607, 2308, 729, 2345], [743, 2308, 822, 2336], [835, 2308, 859, 2336], [874, 2308, 999, 2336], [1011, 2308, 1141, 2345], [1155, 2317, 1185, 2336], [1198, 2308, 1246, 2336], [1258, 2308, 1382, 2336], [1393, 2308, 1429, 2336], [1438, 2317, 1521, 2336], [1534, 2308, 1666, 2336], [1679, 2308, 1722, 2343], [1734, 2308, 1807, 2336], [1818, 2308, 1881, 2345], [1893, 2308, 1972, 2336], [1986, 2317, 2082, 2336], [2095, 2312, 2124, 2336], [2136, 2308, 2173, 2336], [377, 2368, 394, 2387], [406, 2359, 534, 2396], [548, 2363, 577, 2387], [592, 2359, 628, 2387], [639, 2368, 826, 2396], [840, 2368, 887, 2388], [900, 2359, 1037, 2387], [1049, 2359, 1107, 2387], [1120, 2363, 1151, 2387], [1164, 2368, 1181, 2387], [1192, 2359, 1280, 2396], [1291, 2359, 1327, 2387], [1337, 2359, 1386, 2387], [1399, 2359, 1558, 2387], [1570, 2359, 1711, 2387], [1723, 2359, 1785, 2387], [1796, 2368, 1844, 2388], [1855, 2359, 1954, 2394], [1970, 2360, 2061, 2387], [2073, 2359, 2112, 2387], [2124, 2359, 2174, 2387], [375, 2410, 463, 2447], [475, 2410, 621, 2444], [635, 2410, 684, 2438], [696, 2419, 834, 2447], [846, 2410, 871, 2438], [884, 2410, 971, 2438], [989, 2419, 1043, 2438], [1054, 2411, 1107, 2438], [1118, 2419, 1193, 2447], [1205, 2414, 1356, 2447], [1369, 2410, 1483, 2447], [1493, 2410, 1729, 2447], [1741, 2410, 1819, 2444], [1833, 2410, 1890, 2438], [1903, 2410, 1987, 2439], [2000, 2410, 2174, 2438], [377, 2461, 525, 2498], [539, 2470, 569, 2489], [583, 2470, 667, 2489], [678, 2470, 837, 2498], [848, 2470, 933, 2489], [945, 2461, 1074, 2489], [1087, 2461, 1241, 2490], [437, 2512, 489, 2539], [503, 2511, 609, 2539], [622, 2511, 685, 2539], [698, 2515, 766, 2539], [779, 2511, 809, 2539], [820, 2511, 941, 2548], [954, 2511, 1014, 2539], [1026, 2511, 1074, 2539], [1087, 2511, 1162, 2548], [1174, 2512, 1322, 2548], [1334, 2511, 1464, 2545], [1478, 2511, 1576, 2540], [1588, 2511, 1619, 2539], [1630, 2511, 1678, 2539], [1690, 2511, 1828, 2548], [1841, 2511, 2038, 2548], [2052, 2511, 2174, 2540], [377, 2571, 393, 2590], [403, 2562, 581, 2590], [591, 2562, 809, 2599], [823, 2566, 903, 2590], [917, 2566, 969, 2590], [980, 2566, 1011, 2590], [1022, 2562, 1061, 2590], [1072, 2562, 1163, 2590], [1174, 2562, 1281, 2590], [1292, 2566, 1322, 2590], [1333, 2562, 1515, 2599], [1531, 2562, 1601, 2590], [1615, 2562, 1676, 2590], [1687, 2571, 1748, 2591], [1763, 2562, 1882, 2599], [1895, 2562, 2042, 2591], [2053, 2562, 2094, 2599], [2109, 2562, 2171, 2596], [376, 2613, 407, 2641], [420, 2613, 470, 2641], [483, 2617, 606, 2641], [618, 2613, 654, 2641], [664, 2613, 810, 2650], [824, 2614, 882, 2641], [896, 2613, 1061, 2641], [1074, 2613, 1165, 2642], [1178, 2613, 1294, 2642], [1306, 2622, 1468, 2650], [1480, 2622, 1567, 2641], [1582, 2622, 1631, 2641], [1645, 2613, 1793, 2642], [1806, 2613, 1856, 2641], [1868, 2613, 2023, 2650], [2035, 2613, 2175, 2641], [377, 2668, 505, 2701], [518, 2673, 615, 2692], [629, 2668, 659, 2692], [670, 2664, 709, 2692], [721, 2673, 796, 2693], [808, 2673, 892, 2692], [905, 2664, 1031, 2692], [1043, 2668, 1074, 2692], [1086, 2664, 1135, 2692], [1147, 2664, 1221, 2692], [1255, 2935, 1295, 2964], [376, 637, 796, 652], [338, 599, 348, 614], [338, 540, 348, 555], [338, 481, 348, 496], [328, 422, 348, 437], [328, 363, 348, 378], [328, 304, 348, 319], [485, 656, 496, 671], [503, 660, 594, 676], [601, 660, 651, 671], [302, 484, 317, 496], [302, 480, 317, 482], [306, 462, 317, 477], [306, 450, 317, 460], [302, 438, 321, 442], [306, 421, 317, 436], [306, 409, 317, 418], [302, 404, 321, 408], [429, 236, 487, 251], [497, 236, 547, 251], [553, 236, 578, 251], [584, 236, 644, 256], [653, 236, 709, 256], [889, 637, 1300, 652], [841, 606, 862, 621], [831, 534, 862, 549], [831, 463, 862, 478], [830, 391, 862, 406], [830, 319, 862, 334], [996, 657, 1007, 671], [1014, 660, 1103, 675], [1110, 660, 1157, 671], [805, 488, 820, 500], [805, 484, 820, 486], [809, 467, 820, 482], [809, 455, 820, 465], [805, 443, 824, 447], [809, 426, 820, 441], [809, 416, 820, 424], [805, 410, 824, 414], [933, 246, 990, 261], [1000, 246, 1048, 261], [1055, 246, 1079, 261], [1085, 246, 1144, 265], [1152, 246, 1223, 261], [1384, 637, 1804, 652], [1336, 581, 1356, 596], [1336, 509, 1356, 524], [1335, 437, 1356, 452], [1335, 365, 1356, 380], [1335, 292, 1356, 307], [1493, 656, 1504, 671], [1511, 660, 1602, 676], [1609, 660, 1659, 671], [1310, 484, 1325, 496], [1310, 480, 1325, 482], [1314, 462, 1325, 477], [1314, 450, 1325, 460], [1310, 438, 1329, 442], [1314, 421, 1325, 436], [1314, 409, 1325, 418], [1310, 404, 1329, 408], [1428, 236, 1486, 251], [1496, 236, 1546, 251], [1552, 236, 1576, 251], [1583, 236, 1643, 256], [1652, 236, 1725, 256], [1897, 637, 2308, 652], [1839, 614, 1870, 629], [1838, 564, 1870, 579], [1838, 514, 1870, 529], [1838, 464, 1870, 479], [1838, 415, 1870, 430], [1838, 365, 1870, 380], [1838, 315, 1870, 330], [2004, 657, 2015, 671], [2022, 660, 2111, 675], [2118, 660, 2165, 671], [1813, 488, 1828, 500], [1813, 484, 1828, 486], [1817, 467, 1828, 482], [1817, 455, 1828, 465], [1813, 443, 1832, 447], [1817, 426, 1828, 441], [1817, 416, 1828, 424], [1813, 410, 1832, 414], [1961, 246, 2017, 261], [2027, 246, 2075, 261], [2082, 246, 2106, 261], [2113, 246, 2172, 265], [2179, 247, 2211, 261], [385, 1098, 796, 1113], [337, 1047, 358, 1062], [327, 969, 358, 984], [327, 891, 358, 906], [326, 813, 358, 828], [326, 735, 358, 750], [492, 1118, 503, 1132], [510, 1121, 599, 1136], [606, 1121, 653, 1132], [301, 948, 316, 960], [301, 945, 316, 947], [305, 927, 316, 942], [305, 915, 316, 925], [301, 903, 320, 907], [305, 886, 316, 901], [305, 876, 316, 884], [301, 870, 320, 874], [438, 706, 495, 721], [505, 706, 553, 721], [560, 706, 584, 721], [590, 706, 649, 725], [657, 706, 710, 721], [898, 1099, 1299, 1113], [839, 1050, 871, 1064], [829, 978, 871, 992], [829, 906, 871, 920], [828, 834, 871, 848], [828, 762, 871, 776], [1001, 1118, 1012, 1132], [1019, 1121, 1108, 1136], [1114, 1121, 1161, 1132], [804, 950, 819, 962], [804, 947, 819, 949], [808, 930, 819, 944], [808, 918, 819, 927], [804, 905, 823, 910], [808, 890, 819, 904], [808, 879, 819, 887], [804, 873, 823, 877], [941, 710, 997, 725], [1007, 710, 1054, 725], [1061, 710, 1085, 725], [1091, 710, 1150, 729], [1158, 711, 1225, 725], [1402, 1099, 1803, 1113], [1333, 1049, 1375, 1063], [1332, 1003, 1375, 1017], [1332, 956, 1375, 970], [1332, 910, 1375, 924], [1332, 864, 1375, 878], [1332, 817, 1375, 831], [1332, 771, 1375, 785], [1505, 1118, 1516, 1132], [1523, 1121, 1612, 1136], [1618, 1121, 1665, 1132], [1308, 950, 1323, 962], [1308, 947, 1323, 949], [1312, 930, 1323, 944], [1312, 918, 1323, 927], [1308, 905, 1327, 910], [1312, 890, 1323, 904], [1312, 879, 1323, 887], [1308, 873, 1327, 877], [1439, 710, 1495, 725], [1505, 710, 1553, 725], [1559, 710, 1583, 725], [1590, 710, 1648, 729], [1656, 710, 1732, 729], [1892, 1097, 2308, 1112], [1856, 1043, 1861, 1058], [1839, 962, 1865, 977], [1855, 881, 1865, 896], [1838, 799, 1865, 814], [1868, 714, 1907, 729], [1907, 706, 1914, 716], [2000, 1118, 2011, 1132], [2018, 1121, 2109, 1137], [2115, 1121, 2165, 1132], [1813, 946, 1828, 958], [1813, 943, 1828, 945], [1817, 925, 1828, 940], [1817, 913, 1828, 923], [1813, 900, 1832, 904], [1817, 883, 1828, 898], [1817, 872, 1828, 881], [1813, 867, 1832, 871], [1948, 701, 2005, 716], [2015, 701, 2064, 716], [2070, 701, 2095, 716], [2101, 701, 2161, 721], [2169, 701, 2218, 721], [703, 1222, 810, 1259], [822, 1222, 871, 1251], [888, 1222, 1050, 1250], [1063, 1222, 1211, 1259], [1225, 1231, 1265, 1250], [1277, 1222, 1418, 1250], [1429, 1222, 1543, 1259], [1558, 1222, 1622, 1257], [1635, 1222, 1699, 1250], [1711, 1222, 1801, 1250], [1813, 1222, 1845, 1257], [375, 1355, 456, 1385], [499, 1355, 705, 1393], [717, 1355, 822, 1393], [834, 1355, 1079, 1385], [374, 1434, 489, 1471], [504, 1443, 521, 1462], [535, 1438, 600, 1471], [614, 1434, 747, 1463], [760, 1443, 808, 1463], [822, 1443, 891, 1463], [906, 1434, 1048, 1462], [1061, 1434, 1111, 1462], [1124, 1434, 1266, 1471], [1279, 1434, 1315, 1462], [1326, 1433, 1431, 1471], [1444, 1433, 1689, 1463], [1705, 1434, 1752, 1469], [1765, 1434, 1867, 1471], [1881, 1434, 2078, 1471], [2100, 1434, 2173, 1462], [376, 1485, 486, 1522], [500, 1485, 526, 1513], [539, 1494, 625, 1513], [638, 1485, 781, 1522], [795, 1485, 879, 1513], [893, 1485, 943, 1513], [956, 1485, 1023, 1513], [1035, 1485, 1071, 1513], [1082, 1485, 1184, 1522], [1196, 1494, 1341, 1522], [1355, 1485, 1381, 1513], [1394, 1485, 1484, 1513], [1497, 1485, 1605, 1513], [1616, 1485, 1657, 1522], [1671, 1485, 1721, 1513], [1733, 1494, 1880, 1522], [1893, 1485, 1929, 1513], [1941, 1494, 1958, 1513], [1970, 1484, 2173, 1514], [375, 1536, 486, 1565], [499, 1536, 534, 1564], [546, 1536, 608, 1564], [619, 1536, 738, 1564], [752, 1536, 801, 1564], [813, 1536, 913, 1573], [926, 1545, 956, 1564], [1119, 1587, 1427, 1624], [374, 1663, 472, 1692], [486, 1663, 527, 1691], [539, 1663, 564, 1691], [577, 1663, 662, 1691], [675, 1672, 705, 1691], [718, 1663, 821, 1691], [835, 1663, 892, 1691], [906, 1672, 921, 1690], [935, 1663, 1058, 1691], [1071, 1663, 1271, 1692], [1288, 1664, 1328, 1691], [1340, 1672, 1462, 1692], [1473, 1663, 1521, 1691], [1533, 1663, 1660, 1700], [1672, 1663, 1770, 1700], [1782, 1673, 1805, 1700], [1818, 1663, 1897, 1691], [1908, 1663, 1956, 1691], [1969, 1663, 2115, 1692], [2127, 1673, 2177, 1700], [375, 1713, 398, 1741], [409, 1713, 433, 1741], [447, 1722, 591, 1741], [603, 1717, 633, 1741], [646, 1713, 731, 1742], [743, 1713, 792, 1741], [804, 1713, 962, 1750], [975, 1713, 1208, 1742], [1219, 1713, 1357, 1750], [982, 1806, 1050, 1834], [1002, 1841, 1030, 1861], [1107, 1798, 1118, 1817], [1106, 1798, 1383, 1848], [1368, 1825, 1384, 1844], [1398, 1810, 1426, 1837], [1439, 1803, 1564, 1844], [2097, 1805, 2173, 1841], [374, 1914, 417, 1942], [429, 1914, 541, 1948], [555, 1914, 603, 1942], [614, 1914, 791, 1951], [802, 1911, 892, 1952], [907, 1923, 963, 1942], [974, 1914, 1011, 1942], [1024, 1914, 1165, 1951], [1177, 1923, 1211, 1942], [1223, 1914, 1401, 1951], [1414, 1915, 1470, 1948], [1485, 1923, 1593, 1951], [1605, 1914, 1711, 1942], [1728, 1915, 1806, 1942], [1818, 1923, 1864, 1943], [1876, 1914, 1962, 1942], [1976, 1914, 2062, 1951], [2074, 1923, 2114, 1942], [2125, 1914, 2173, 1942], [376, 1964, 558, 2001], [570, 1965, 624, 1992], [636, 1973, 706, 1992], [718, 1968, 748, 1992], [762, 1964, 845, 1993], [857, 1964, 926, 1993], [938, 1964, 988, 1992], [998, 1964, 1157, 2001], [1170, 1964, 1283, 1993], [1296, 1973, 1352, 1992], [1365, 1964, 1429, 1992], [1440, 1964, 1479, 1992], [1490, 1964, 1565, 1992], [1578, 1964, 1625, 1992], [1636, 1964, 1693, 1992], [1707, 1964, 1807, 2001], [1818, 1964, 1892, 1992], [438, 2015, 575, 2043], [586, 2014, 662, 2050], [675, 2015, 737, 2043], [749, 2015, 796, 2043], [808, 2015, 856, 2043], [866, 2015, 1012, 2052], [1024, 2015, 1154, 2052], [1166, 2015, 1350, 2049], [1364, 2015, 1420, 2043], [1432, 2024, 1465, 2043], [1476, 2024, 1522, 2044], [1533, 2015, 1653, 2052], [1664, 2015, 1712, 2043], [1722, 2015, 1847, 2052], [1856, 2015, 1965, 2044], [1978, 2015, 2040, 2049], [2053, 2015, 2174, 2043], [375, 2066, 424, 2094], [435, 2066, 537, 2103], [548, 2066, 737, 2103], [753, 2066, 817, 2094], [829, 2066, 967, 2103], [978, 2066, 1015, 2094], [1024, 2066, 1074, 2094], [1086, 2066, 1149, 2094], [1162, 2075, 1220, 2094], [1230, 2066, 1269, 2094], [1282, 2066, 1363, 2094], [1374, 2066, 1542, 2103], [1554, 2066, 1595, 2103], [1608, 2066, 1776, 2103], [1790, 2066, 1830, 2094], [1841, 2066, 1934, 2103], [1948, 2075, 1965, 2094], [1976, 2066, 2174, 2095], [375, 2121, 517, 2154], [531, 2117, 629, 2146], [641, 2117, 767, 2154], [779, 2117, 827, 2145], [839, 2117, 1039, 2146], [1051, 2117, 1243, 2146], [1254, 2117, 1388, 2145], [1399, 2117, 1423, 2145], [1437, 2117, 1604, 2154], [1615, 2121, 1645, 2145], [1659, 2126, 1675, 2145], [1686, 2117, 1737, 2145], [1748, 2117, 1873, 2154], [1884, 2117, 1915, 2145], [1926, 2117, 1974, 2145], [1987, 2117, 2173, 2154], [376, 2177, 473, 2205], [488, 2168, 545, 2196], [557, 2177, 590, 2196], [603, 2168, 651, 2196], [664, 2168, 867, 2205], [878, 2168, 903, 2196], [916, 2168, 993, 2196], [1005, 2168, 1044, 2205], [1057, 2177, 1159, 2196], [1172, 2168, 1208, 2196], [1217, 2168, 1274, 2196], [1285, 2168, 1405, 2196], [1416, 2168, 1588, 2196], [1602, 2168, 1659, 2196], [1670, 2168, 1817, 2205], [1835, 2168, 1954, 2197], [1966, 2168, 2049, 2196], [2061, 2168, 2173, 2197], [375, 2218, 438, 2246], [451, 2218, 608, 2255], [623, 2218, 692, 2246], [706, 2218, 780, 2247], [793, 2218, 992, 2247], [1005, 2222, 1160, 2255], [1176, 2227, 1225, 2246], [1240, 2218, 1305, 2246], [1321, 2218, 1469, 2247], [1486, 2218, 1525, 2252], [1545, 2218, 1603, 2252], [1626, 2218, 1655, 2246], [1668, 2218, 1791, 2246], [1806, 2218, 1907, 2247], [1921, 2218, 2047, 2255], [2062, 2218, 2110, 2246], [2124, 2218, 2174, 2246], [375, 2269, 521, 2306], [538, 2278, 609, 2297], [625, 2269, 651, 2297], [668, 2269, 759, 2306], [773, 2269, 815, 2306], [831, 2269, 881, 2297], [897, 2269, 982, 2298], [998, 2269, 1034, 2297], [1047, 2269, 1201, 2297], [1218, 2269, 1277, 2297], [1292, 2270, 1404, 2306], [1424, 2268, 1497, 2303], [1516, 2269, 1579, 2297], [1593, 2269, 1721, 2297], [1738, 2278, 1815, 2298], [1830, 2278, 2011, 2298], [2027, 2269, 2173, 2306], [374, 2321, 544, 2348], [559, 2320, 590, 2355], [608, 2326, 634, 2350], [650, 2330, 671, 2356], [688, 2326, 714, 2350], [735, 2320, 773, 2355], [793, 2321, 853, 2348], [865, 2320, 924, 2348], [939, 2320, 1092, 2357], [1104, 2320, 1180, 2348], [1193, 2324, 1247, 2348], [1259, 2320, 1370, 2348], [1382, 2324, 1413, 2348], [1427, 2320, 1477, 2348], [1491, 2320, 1675, 2357], [1689, 2329, 1769, 2354], [1785, 2329, 1820, 2348], [1833, 2329, 1881, 2349], [1894, 2320, 1983, 2348], [1997, 2329, 2038, 2348], [2051, 2320, 2174, 2357], [374, 2371, 524, 2408], [537, 2371, 679, 2408], [437, 2423, 491, 2450], [502, 2431, 558, 2450], [570, 2422, 620, 2450], [633, 2431, 717, 2450], [729, 2426, 787, 2450], [798, 2422, 915, 2459], [929, 2431, 961, 2450], [973, 2422, 1021, 2450], [1033, 2431, 1088, 2450], [1099, 2422, 1261, 2459], [1274, 2422, 1477, 2459], [1491, 2422, 1612, 2459], [1624, 2421, 1688, 2457], [1702, 2422, 1775, 2451], [1787, 2422, 1930, 2450], [1943, 2422, 2030, 2450], [2041, 2426, 2173, 2459], [375, 2472, 475, 2507], [487, 2472, 519, 2507], [532, 2472, 580, 2500], [591, 2472, 638, 2500], [651, 2472, 706, 2507], [718, 2472, 841, 2509], [856, 2472, 912, 2500], [924, 2472, 1063, 2509], [1075, 2472, 1160, 2500], [1172, 2472, 1243, 2501], [1255, 2472, 1391, 2501], [1403, 2471, 1471, 2501], [1485, 2472, 1532, 2500], [1543, 2472, 1591, 2500], [1603, 2476, 1669, 2500], [1686, 2473, 1719, 2500], [1731, 2472, 1872, 2506], [1885, 2481, 1931, 2501], [1943, 2472, 2088, 2501], [2101, 2472, 2174, 2500], [375, 2523, 477, 2560], [489, 2523, 563, 2552], [575, 2532, 592, 2551], [603, 2523, 747, 2551], [758, 2527, 829, 2560], [841, 2523, 877, 2551], [885, 2523, 989, 2551], [1001, 2527, 1032, 2551], [1046, 2532, 1145, 2551], [1158, 2523, 1208, 2551], [1219, 2523, 1365, 2552], [1377, 2523, 1425, 2551], [1437, 2532, 1454, 2551], [1466, 2523, 1580, 2560], [1592, 2523, 1628, 2551], [1637, 2523, 1861, 2557], [1875, 2523, 1966, 2551], [1978, 2523, 1997, 2552], [2010, 2523, 2111, 2552], [2124, 2523, 2174, 2551], [374, 2574, 495, 2602], [510, 2574, 641, 2611], [661, 2575, 716, 2602], [730, 2574, 924, 2602], [937, 2574, 1022, 2602], [1035, 2574, 1155, 2602], [1169, 2574, 1259, 2611], [1273, 2574, 1419, 2602], [1427, 2574, 1565, 2611], [1577, 2574, 1726, 2608], [1743, 2574, 1793, 2602], [1807, 2574, 1979, 2603], [1992, 2574, 2109, 2611], [2125, 2583, 2174, 2602], [376, 2625, 481, 2654], [493, 2625, 524, 2653], [536, 2625, 643, 2662], [655, 2625, 703, 2654], [438, 2676, 502, 2704], [516, 2676, 621, 2705], [636, 2676, 684, 2704], [698, 2676, 748, 2704], [762, 2676, 944, 2713], [959, 2675, 980, 2705], [995, 2685, 1076, 2705], [1090, 2676, 1279, 2704], [1292, 2676, 1334, 2713], [1348, 2676, 1549, 2713], [1563, 2676, 1613, 2704], [1627, 2676, 1869, 2704], [1883, 2676, 1998, 2713], [2013, 2676, 2174, 2704], [375, 2726, 406, 2754], [419, 2726, 522, 2755], [537, 2726, 627, 2755], [640, 2726, 876, 2755], [889, 2726, 914, 2754], [927, 2726, 1020, 2754], [1031, 2735, 1116, 2754], [1128, 2726, 1292, 2763], [1305, 2726, 1375, 2754], [1388, 2726, 1558, 2763], [1572, 2726, 1691, 2754], [1702, 2726, 1738, 2754], [1746, 2726, 1935, 2763], [1948, 2735, 1985, 2754], [1998, 2726, 2174, 2755], [376, 2777, 480, 2805], [492, 2777, 539, 2805], [551, 2777, 600, 2805], [611, 2777, 678, 2805], [690, 2776, 720, 2811], [734, 2786, 781, 2806], [792, 2777, 867, 2805], [880, 2786, 896, 2805], [908, 2777, 1044, 2805], [1056, 2777, 1131, 2806], [1144, 2777, 1254, 2806], [1267, 2781, 1395, 2814], [1410, 2778, 1449, 2811], [1462, 2777, 1492, 2811], [1507, 2781, 1538, 2805], [1550, 2777, 1613, 2805], [1625, 2777, 1674, 2805], [1685, 2777, 1753, 2805], [1762, 2777, 1948, 2814], [1961, 2777, 2073, 2806], [1255, 2935, 1291, 2963], [829, 263, 931, 299], [1063, 262, 1267, 291], [1428, 263, 1609, 290], [828, 353, 1012, 388], [1105, 353, 1225, 381], [1349, 353, 1465, 390], [1477, 352, 1505, 387], [1519, 353, 1619, 390], [1632, 352, 1686, 382], [830, 404, 922, 441], [1097, 404, 1233, 441], [1433, 404, 1605, 433], [829, 455, 966, 483], [1127, 455, 1204, 483], [1447, 455, 1559, 483], [1573, 454, 1590, 484], [829, 506, 964, 543], [1105, 506, 1225, 534], [1360, 506, 1476, 543], [1488, 505, 1516, 540], [1529, 506, 1629, 543], [1641, 506, 1676, 535], [829, 561, 890, 585], [1097, 557, 1233, 594], [1423, 557, 1617, 586], [829, 607, 928, 635], [1090, 607, 1240, 636], [1352, 607, 1421, 636], [1437, 606, 1481, 641], [1495, 607, 1656, 636], [1668, 607, 1687, 635], [829, 662, 955, 686], [1127, 658, 1204, 686], [1447, 658, 1559, 686], [1573, 657, 1590, 687], [828, 709, 973, 746], [1105, 709, 1225, 737], [1318, 709, 1434, 746], [1450, 709, 1516, 743], [1529, 709, 1629, 746], [1641, 709, 1717, 738], [374, 856, 462, 884], [475, 856, 502, 885], [520, 858, 701, 885], [711, 858, 816, 884], [826, 858, 893, 884], [904, 858, 946, 884], [957, 858, 1023, 884], [1033, 862, 1084, 884], [1095, 858, 1191, 892], [1203, 859, 1323, 892], [1336, 858, 1489, 884], [1500, 858, 1566, 884], [1576, 858, 1649, 892], [1660, 858, 1724, 885], [1734, 858, 1779, 884], [1790, 867, 1902, 892], [1913, 858, 1944, 884], [1953, 858, 1985, 884], [1998, 858, 2173, 892], [376, 914, 397, 931], [412, 912, 430, 931], [445, 914, 477, 931], [488, 905, 643, 939], [657, 905, 727, 931], [736, 905, 870, 939], [882, 905, 927, 931], [939, 914, 1013, 931], [1025, 905, 1165, 939], [1176, 905, 1271, 932], [1282, 914, 1298, 931], [1308, 905, 1488, 939], [1498, 905, 1706, 939], [1717, 905, 1749, 931], [1757, 905, 1802, 931], [1814, 905, 1909, 932], [1919, 905, 2018, 931], [2034, 906, 2174, 932], [375, 960, 436, 977], [448, 960, 463, 977], [473, 960, 494, 977], [509, 958, 527, 977], [542, 960, 563, 977], [575, 951, 777, 985], [787, 951, 839, 977], [849, 951, 953, 985], [964, 951, 1088, 977], [1099, 951, 1210, 985], [1221, 955, 1248, 977], [1260, 951, 1325, 977], [1336, 951, 1465, 985], [1475, 951, 1614, 985], [1625, 951, 1669, 977], [1680, 951, 1757, 978], [1767, 951, 1799, 977], [1807, 960, 1822, 977], [1833, 951, 1957, 985], [1968, 951, 2134, 977], [2145, 951, 2176, 977], [376, 998, 420, 1024], [431, 998, 569, 1024], [579, 998, 717, 1025], [729, 998, 856, 1024], [866, 1002, 893, 1024], [903, 998, 948, 1024], [959, 1002, 1066, 1024], [1074, 998, 1157, 1032], [1170, 1000, 1279, 1024], [1291, 998, 1422, 1024], [1435, 998, 1479, 1024], [1490, 998, 1647, 1024], [1659, 998, 1800, 1032], [1810, 998, 1890, 1025], [1901, 998, 1994, 1032], [2005, 1007, 2021, 1024], [2030, 998, 2135, 1032], [2146, 998, 2174, 1024], [376, 1045, 487, 1076], [500, 1045, 621, 1079], [632, 1054, 648, 1071], [658, 1045, 864, 1079], [875, 1045, 1017, 1079], [1028, 1054, 1044, 1071], [1054, 1049, 1147, 1072], [1156, 1045, 1188, 1071], [1196, 1045, 1241, 1071], [1252, 1045, 1387, 1071], [1398, 1045, 1490, 1079], [1501, 1045, 1553, 1071], [1564, 1045, 1651, 1079], [438, 1164, 508, 1201], [520, 1164, 682, 1201], [695, 1164, 871, 1192], [883, 1173, 939, 1192], [951, 1164, 990, 1192], [1001, 1164, 1137, 1201], [1148, 1164, 1212, 1192], [1224, 1164, 1274, 1192], [1287, 1164, 1550, 1192], [1561, 1164, 1798, 1193], [1810, 1164, 1960, 1198], [1973, 1164, 2116, 1193], [2127, 1164, 2175, 1192], [376, 1214, 566, 1251], [577, 1223, 722, 1251], [735, 1223, 781, 1243], [793, 1223, 847, 1242], [859, 1223, 913, 1242], [924, 1214, 1122, 1251], [1135, 1214, 1207, 1243], [1219, 1214, 1267, 1242], [1279, 1214, 1346, 1242], [1356, 1214, 1506, 1251], [1518, 1214, 1649, 1248], [1662, 1214, 1797, 1251], [1810, 1214, 1962, 1242], [1975, 1214, 2173, 1251], [376, 1265, 587, 1300], [604, 1265, 663, 1293], [675, 1265, 725, 1293], [738, 1265, 806, 1293], [819, 1265, 995, 1302], [1009, 1265, 1135, 1293], [1149, 1274, 1261, 1302], [1275, 1265, 1362, 1293], [1375, 1265, 1528, 1294], [1541, 1265, 1622, 1293], [1635, 1265, 1684, 1293], [1698, 1265, 1858, 1299], [1873, 1265, 2086, 1302], [2099, 1269, 2129, 1293], [2143, 1265, 2179, 1293], [374, 1316, 403, 1344], [414, 1316, 473, 1353], [484, 1320, 653, 1353], [664, 1316, 695, 1344], [707, 1316, 944, 1345], [955, 1316, 1168, 1353], [1180, 1316, 1206, 1344], [1218, 1316, 1267, 1344], [1277, 1316, 1347, 1345], [1360, 1316, 1433, 1353], [1446, 1316, 1557, 1344], [1568, 1316, 1653, 1344], [1665, 1316, 1806, 1344], [1817, 1316, 1857, 1344], [1868, 1325, 1923, 1344], [1936, 1320, 1965, 1344], [1976, 1316, 2052, 1344], [2064, 1316, 2176, 1345], [376, 1367, 524, 1395], [547, 1368, 588, 1395], [604, 1367, 699, 1395], [712, 1367, 780, 1401], [797, 1376, 845, 1396], [859, 1367, 924, 1395], [937, 1376, 993, 1395], [1007, 1367, 1119, 1396], [1133, 1367, 1207, 1396], [1225, 1367, 1283, 1396], [1297, 1367, 1452, 1395], [1468, 1367, 1504, 1395], [1515, 1367, 1654, 1404], [1669, 1367, 1826, 1395], [1838, 1376, 1892, 1404], [1907, 1371, 1981, 1404], [1998, 1367, 2046, 1395], [2061, 1376, 2078, 1395], [2092, 1367, 2174, 1404], [376, 1418, 504, 1446], [515, 1418, 552, 1446], [561, 1418, 673, 1447], [686, 1422, 777, 1455], [792, 1418, 851, 1446], [863, 1418, 931, 1446], [944, 1418, 994, 1446], [1006, 1418, 1079, 1446], [1092, 1418, 1243, 1455], [1256, 1418, 1345, 1447], [1358, 1427, 1390, 1446], [1404, 1427, 1442, 1446], [1453, 1418, 1593, 1446], [1605, 1418, 1641, 1446], [1651, 1418, 1701, 1446], [1713, 1418, 1873, 1455], [1890, 1418, 1976, 1446], [1987, 1427, 2035, 1447], [2047, 1418, 2112, 1446], [2124, 1418, 2174, 1446], [376, 1468, 539, 1496], [550, 1468, 678, 1496], [690, 1468, 726, 1496], [735, 1468, 874, 1505], [886, 1468, 1043, 1496], [1055, 1468, 1114, 1496], [1125, 1468, 1337, 1505], [1350, 1468, 1505, 1496], [1517, 1468, 1566, 1496], [1577, 1468, 1679, 1497], [1691, 1468, 1803, 1497], [1815, 1477, 1872, 1496], [1885, 1468, 2009, 1497], [2022, 1477, 2039, 1496], [2049, 1468, 2174, 1497], [376, 1519, 512, 1547], [528, 1523, 558, 1547], [575, 1519, 650, 1547], [665, 1519, 817, 1556], [830, 1519, 931, 1548], [950, 1513, 1028, 1548], [1035, 1543, 1040, 1547], [1065, 1519, 1129, 1547], [1143, 1528, 1254, 1547], [1268, 1519, 1317, 1547], [1331, 1519, 1425, 1556], [1441, 1519, 1500, 1547], [1515, 1519, 1541, 1547], [1557, 1519, 1620, 1547], [1634, 1519, 1682, 1547], [1696, 1519, 1793, 1556], [1808, 1519, 1961, 1547], [1976, 1519, 2026, 1547], [2042, 1519, 2174, 1547], [376, 1570, 471, 1599], [484, 1570, 588, 1599], [604, 1579, 652, 1598], [667, 1570, 728, 1598], [741, 1570, 787, 1598], [800, 1570, 881, 1598], [894, 1579, 1112, 1607], [1132, 1570, 1205, 1598], [1219, 1570, 1326, 1598], [1339, 1574, 1370, 1598], [1383, 1570, 1422, 1598], [1436, 1569, 1454, 1599], [1468, 1570, 1624, 1598], [1638, 1570, 1686, 1598], [1699, 1570, 1838, 1607], [1852, 1570, 2008, 1598], [2022, 1579, 2060, 1598], [2077, 1570, 2113, 1599], [2127, 1570, 2175, 1598], [376, 1621, 586, 1658], [602, 1622, 654, 1649], [667, 1621, 736, 1649], [746, 1630, 800, 1649], [811, 1621, 920, 1650], [932, 1621, 979, 1649], [991, 1621, 1064, 1649], [1076, 1621, 1307, 1658], [1320, 1621, 1356, 1649], [1364, 1621, 1412, 1649], [1425, 1621, 1508, 1649], [1520, 1621, 1641, 1655], [1656, 1621, 1713, 1649], [1724, 1621, 1821, 1649], [1835, 1621, 1906, 1650], [1919, 1630, 1935, 1649], [1946, 1621, 2040, 1658], [2051, 1621, 2176, 1649], [376, 1672, 411, 1700], [420, 1672, 505, 1700], [516, 1672, 678, 1706], [691, 1672, 739, 1700], [750, 1672, 942, 1709], [953, 1681, 1109, 1709], [437, 1722, 557, 1759], [570, 1722, 663, 1750], [676, 1722, 757, 1751], [770, 1722, 818, 1750], [830, 1722, 980, 1751], [992, 1722, 1027, 1750], [1036, 1722, 1181, 1759], [1193, 1722, 1293, 1751], [1307, 1722, 1364, 1750], [1375, 1722, 1467, 1751], [1478, 1722, 1525, 1750], [1536, 1722, 1574, 1750], [1586, 1722, 1634, 1750], [1646, 1722, 1740, 1750], [1751, 1722, 1990, 1759], [2007, 1723, 2039, 1750], [2051, 1722, 2178, 1759], [376, 1773, 510, 1810], [523, 1773, 675, 1801], [687, 1782, 784, 1801], [797, 1777, 827, 1801], [839, 1773, 876, 1801], [890, 1773, 1011, 1810], [1022, 1773, 1116, 1801], [1128, 1777, 1155, 1801], [1167, 1773, 1281, 1810], [1294, 1782, 1376, 1801], [1390, 1777, 1524, 1801], [1537, 1773, 1692, 1807], [1707, 1773, 1763, 1801], [1776, 1773, 1839, 1801], [1852, 1773, 1942, 1801], [1954, 1777, 1982, 1801], [1993, 1773, 2173, 1810], [376, 1828, 406, 1852], [422, 1824, 472, 1852], [486, 1824, 560, 1852], [575, 1824, 670, 1853], [684, 1824, 782, 1853], [806, 1825, 861, 1852], [875, 1824, 998, 1861], [1013, 1824, 1071, 1852], [1086, 1824, 1127, 1861], [1142, 1824, 1192, 1852], [1207, 1824, 1270, 1852], [1284, 1824, 1346, 1852], [1360, 1824, 1410, 1852], [1425, 1824, 1523, 1861], [1538, 1824, 1706, 1861], [1721, 1824, 1757, 1852], [1769, 1824, 1908, 1861], [1923, 1824, 2080, 1852], [2094, 1824, 2120, 1852], [2135, 1824, 2173, 1852], [377, 1875, 630, 1903], [643, 1875, 744, 1912], [757, 1879, 786, 1903], [799, 1875, 861, 1903], [873, 1875, 1138, 1912], [1152, 1875, 1295, 1903], [1308, 1875, 1339, 1903], [1351, 1884, 1367, 1903], [1379, 1884, 1448, 1912], [1462, 1875, 1547, 1903], [1560, 1875, 1684, 1903], [1695, 1875, 1731, 1903], [1739, 1875, 1898, 1903], [1916, 1875, 1972, 1903], [1985, 1875, 2009, 1903], [2023, 1875, 2090, 1912], [2103, 1875, 2174, 1904], [377, 1935, 393, 1954], [405, 1926, 493, 1954], [505, 1926, 631, 1954], [642, 1926, 678, 1954], [687, 1926, 771, 1954], [782, 1927, 838, 1954], [851, 1926, 967, 1954], [981, 1935, 1028, 1955], [1040, 1935, 1095, 1954], [1108, 1935, 1255, 1963], [1267, 1930, 1298, 1954], [1310, 1926, 1391, 1963], [1403, 1926, 1496, 1955], [1508, 1926, 1610, 1955], [438, 1978, 494, 2005], [504, 1977, 658, 2005], [670, 1986, 717, 2006], [730, 1977, 794, 2005], [805, 1977, 931, 2014], [943, 1977, 992, 2005], [1003, 1977, 1146, 2005], [1157, 1977, 1376, 2006], [1389, 1977, 1503, 2014], [1518, 1986, 1548, 2005], [1561, 1977, 1668, 2014], [1680, 1977, 1729, 2006], [376, 2084, 457, 2114], [500, 2084, 549, 2113], [561, 2085, 781, 2114], [793, 2084, 902, 2122], [913, 2084, 1167, 2122], [374, 2164, 438, 2192], [451, 2164, 678, 2193], [691, 2163, 800, 2201], [812, 2163, 1065, 2201], [1079, 2164, 1207, 2199], [1224, 2164, 1285, 2198], [1302, 2173, 1359, 2192], [1371, 2164, 1410, 2192], [1422, 2164, 1569, 2201], [1582, 2173, 1614, 2192], [1629, 2173, 1646, 2192], [1657, 2164, 1819, 2201], [1831, 2173, 1902, 2192], [1915, 2164, 1951, 2192], [1961, 2164, 2173, 2192], [374, 2215, 474, 2244], [486, 2215, 535, 2243], [547, 2215, 632, 2252], [643, 2215, 749, 2243], [762, 2213, 795, 2243], [808, 2215, 832, 2243], [846, 2215, 895, 2243], [907, 2215, 1032, 2252], [1044, 2215, 1151, 2243], [1164, 2215, 1185, 2243], [1188, 2239, 1194, 2249], [1208, 2215, 1247, 2243], [1251, 2239, 1266, 2249], [895, 2293, 982, 2327], [1043, 2286, 1054, 2305], [1042, 2285, 1222, 2335], [1209, 2312, 1222, 2331], [1237, 2297, 1265, 2324], [1278, 2290, 1402, 2331], [1418, 2297, 1446, 2324], [1459, 2292, 1546, 2327], [1549, 2283, 1581, 2303], [1549, 2312, 1560, 2331], [1588, 2290, 1652, 2331], [438, 2371, 511, 2399], [524, 2371, 665, 2408], [678, 2380, 736, 2399], [748, 2371, 787, 2399], [801, 2371, 909, 2400], [922, 2371, 1132, 2408], [1145, 2371, 1235, 2408], [1249, 2371, 1299, 2399], [1313, 2371, 1454, 2399], [1468, 2371, 1630, 2408], [1643, 2371, 1674, 2399], [1689, 2370, 1788, 2408], [1793, 2395, 1798, 2399], [1819, 2371, 1848, 2399], [1862, 2371, 1986, 2408], [2000, 2371, 2061, 2399], [2075, 2371, 2174, 2400], [375, 2422, 513, 2459], [524, 2422, 549, 2450], [562, 2422, 612, 2450], [623, 2431, 682, 2450], [693, 2422, 789, 2459], [800, 2422, 841, 2459], [853, 2422, 902, 2450], [914, 2422, 962, 2450], [975, 2422, 1089, 2451], [1100, 2422, 1135, 2450], [1145, 2422, 1253, 2451], [811, 2499, 910, 2534], [971, 2492, 982, 2511], [970, 2491, 1178, 2542], [1163, 2519, 1179, 2538], [1193, 2503, 1221, 2530], [1234, 2496, 1463, 2537], [1479, 2503, 1507, 2530], [1520, 2498, 1607, 2534], [1608, 2490, 1642, 2510], [1610, 2496, 1735, 2544], [2097, 2498, 2173, 2534], [376, 2577, 537, 2605], [549, 2581, 579, 2605], [591, 2577, 628, 2605], [645, 2577, 707, 2611], [721, 2577, 799, 2605], [811, 2577, 870, 2605], [883, 2577, 987, 2605], [1000, 2577, 1048, 2605], [1060, 2577, 1223, 2614], [1236, 2577, 1353, 2614], [1367, 2577, 1468, 2606], [1482, 2586, 1499, 2605], [1511, 2577, 1593, 2614], [1606, 2577, 1734, 2605], [1746, 2577, 1782, 2605], [1791, 2577, 1890, 2614], [1905, 2586, 1954, 2605], [1965, 2577, 2080, 2606], [2092, 2581, 2122, 2605], [2135, 2577, 2174, 2605], [376, 2628, 558, 2665], [569, 2628, 660, 2656], [672, 2628, 826, 2665], [839, 2628, 879, 2663], [893, 2628, 993, 2657], [1006, 2628, 1101, 2665], [1115, 2628, 1184, 2657], [1196, 2628, 1268, 2657], [1281, 2628, 1330, 2656], [1343, 2632, 1486, 2656], [1497, 2628, 1636, 2665], [1647, 2628, 1688, 2665], [1700, 2628, 1750, 2656], [1760, 2627, 1792, 2662], [1807, 2628, 1992, 2665], [438, 2679, 521, 2707], [533, 2683, 564, 2707], [576, 2679, 626, 2707], [643, 2679, 784, 2713], [798, 2679, 966, 2708], [979, 2678, 1055, 2714], [1068, 2688, 1126, 2707], [1139, 2679, 1204, 2707], [1215, 2679, 1254, 2707], [1268, 2679, 1375, 2708], [1386, 2679, 1427, 2716], [1440, 2679, 1664, 2716], [1676, 2679, 1714, 2707], [1727, 2679, 1937, 2716], [1949, 2679, 2013, 2707], [2025, 2683, 2086, 2708], [2098, 2688, 2174, 2716], [376, 2734, 527, 2767], [543, 2730, 617, 2764], [631, 2730, 779, 2767], [775, 2817, 1069, 2853], [1048, 2841, 1080, 2859], [1088, 2805, 1175, 2853], [1179, 2805, 1189, 2846], [1207, 2821, 1235, 2830], [1250, 2817, 1421, 2853], [1448, 2817, 1620, 2850], [1599, 2805, 1725, 2859], [1730, 2805, 1740, 2846], [1746, 2800, 1771, 2850], [1255, 2935, 1295, 2963], [584, 700, 643, 721], [654, 700, 683, 726], [524, 674, 543, 688], [549, 668, 558, 678], [755, 668, 786, 688], [309, 629, 326, 643], [313, 616, 327, 627], [309, 611, 326, 613], [313, 597, 327, 609], [310, 591, 327, 597], [309, 586, 326, 588], [314, 574, 326, 585], [313, 561, 327, 572], [309, 542, 327, 553], [309, 537, 326, 539], [313, 524, 327, 534], [310, 518, 327, 524], [313, 504, 327, 516], [313, 493, 326, 502], [313, 480, 327, 490], [313, 468, 327, 479], [310, 454, 327, 460], [313, 441, 327, 452], [313, 422, 327, 433], [313, 409, 331, 420], [310, 402, 327, 408], [309, 397, 326, 399], [313, 378, 326, 394], [314, 366, 327, 375], [313, 346, 326, 362], [338, 532, 357, 546], [363, 527, 374, 537], [338, 385, 357, 399], [363, 379, 374, 389], [312, 236, 519, 259], [530, 236, 692, 265], [704, 235, 885, 260], [440, 471, 567, 488], [440, 494, 567, 511], [440, 516, 567, 533], [440, 538, 567, 555], [441, 561, 486, 578], [441, 583, 496, 600], [441, 605, 496, 622], [441, 627, 496, 644], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1066, 674, 1085, 688], [1091, 668, 1100, 678], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [975, 629, 992, 643], [979, 616, 993, 627], [975, 611, 992, 613], [979, 597, 993, 609], [976, 591, 993, 597], [975, 586, 992, 588], [980, 574, 992, 585], [979, 561, 993, 572], [975, 542, 993, 553], [975, 537, 992, 539], [979, 524, 993, 534], [976, 518, 993, 524], [979, 504, 993, 516], [979, 493, 992, 502], [979, 480, 993, 490], [979, 468, 993, 479], [976, 454, 993, 460], [979, 441, 993, 452], [979, 422, 993, 433], [979, 409, 997, 420], [976, 402, 993, 408], [975, 397, 992, 399], [979, 378, 992, 394], [980, 366, 993, 375], [979, 346, 992, 362], [1004, 525, 1023, 539], [1029, 520, 1040, 530], [1004, 384, 1023, 398], [1029, 379, 1040, 389], [977, 236, 1185, 259], [1196, 236, 1358, 265], [1370, 235, 1546, 260], [1106, 471, 1233, 488], [1106, 494, 1233, 511], [1106, 516, 1233, 533], [1106, 538, 1233, 555], [1107, 561, 1152, 578], [1107, 583, 1162, 600], [1107, 605, 1162, 622], [1107, 627, 1162, 644], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1696, 674, 1715, 688], [1721, 668, 1730, 678], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1641, 629, 1658, 643], [1645, 616, 1659, 627], [1641, 611, 1658, 613], [1645, 597, 1659, 609], [1642, 591, 1659, 597], [1641, 586, 1658, 588], [1646, 574, 1658, 585], [1645, 561, 1659, 572], [1641, 542, 1659, 553], [1641, 537, 1658, 539], [1645, 524, 1659, 534], [1642, 518, 1659, 524], [1645, 504, 1659, 516], [1645, 493, 1658, 502], [1645, 480, 1659, 490], [1645, 468, 1659, 479], [1642, 454, 1659, 460], [1645, 441, 1659, 452], [1645, 422, 1659, 433], [1645, 409, 1663, 420], [1642, 402, 1659, 408], [1641, 397, 1658, 399], [1645, 378, 1658, 394], [1646, 366, 1659, 375], [1645, 346, 1658, 362], [1670, 523, 1689, 537], [1695, 517, 1706, 527], [1670, 383, 1689, 397], [1695, 378, 1706, 388], [1643, 236, 1851, 259], [1862, 236, 2024, 265], [2036, 235, 2217, 260], [1772, 471, 1899, 488], [1772, 494, 1899, 511], [1772, 516, 1899, 533], [1772, 538, 1899, 555], [1773, 561, 1818, 578], [1773, 583, 1828, 600], [1773, 605, 1828, 622], [1773, 627, 1828, 644], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [517, 1183, 548, 1202], [738, 1183, 767, 1202], [309, 1144, 326, 1158], [313, 1131, 327, 1142], [309, 1126, 326, 1128], [313, 1111, 327, 1123], [310, 1105, 327, 1111], [309, 1101, 326, 1103], [314, 1089, 326, 1100], [313, 1076, 327, 1087], [309, 1056, 327, 1067], [309, 1051, 326, 1053], [313, 1039, 327, 1049], [310, 1032, 327, 1038], [313, 1019, 327, 1031], [313, 1008, 326, 1017], [313, 995, 327, 1005], [313, 982, 327, 993], [310, 969, 327, 975], [313, 956, 327, 967], [313, 937, 327, 948], [313, 924, 331, 935], [310, 917, 327, 923], [309, 912, 326, 914], [313, 893, 326, 909], [314, 880, 327, 889], [313, 860, 326, 876], [338, 1039, 357, 1053], [363, 1034, 374, 1044], [338, 899, 357, 913], [363, 893, 374, 903], [312, 751, 519, 774], [530, 751, 692, 780], [704, 750, 885, 775], [440, 986, 567, 1003], [440, 1008, 567, 1025], [440, 1031, 567, 1048], [440, 1053, 567, 1070], [441, 1075, 486, 1092], [441, 1098, 496, 1115], [441, 1120, 496, 1137], [441, 1142, 496, 1159], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1164, 1183, 1195, 1202], [1369, 1183, 1398, 1202], [975, 1144, 992, 1158], [979, 1131, 993, 1142], [975, 1126, 992, 1128], [979, 1111, 993, 1123], [976, 1105, 993, 1111], [975, 1101, 992, 1103], [980, 1089, 992, 1100], [979, 1076, 993, 1087], [975, 1056, 993, 1067], [975, 1051, 992, 1053], [979, 1039, 993, 1049], [976, 1032, 993, 1038], [979, 1019, 993, 1031], [979, 1008, 992, 1017], [979, 995, 993, 1005], [979, 982, 993, 993], [976, 969, 993, 975], [979, 956, 993, 967], [979, 937, 993, 948], [979, 924, 997, 935], [976, 917, 993, 923], [975, 912, 992, 914], [979, 893, 992, 909], [980, 880, 993, 889], [979, 860, 992, 876], [1004, 1040, 1023, 1054], [1029, 1035, 1040, 1045], [1004, 899, 1023, 913], [1029, 893, 1040, 903], [977, 751, 1185, 774], [1196, 751, 1358, 780], [1370, 750, 1551, 775], [1106, 986, 1233, 1003], [1106, 1008, 1233, 1025], [1106, 1031, 1233, 1048], [1106, 1053, 1233, 1070], [1107, 1075, 1152, 1092], [1107, 1098, 1162, 1115], [1107, 1120, 1162, 1137], [1107, 1142, 1162, 1159], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1816, 1188, 1835, 1202], [1841, 1183, 1850, 1193], [2046, 1183, 2077, 1202], [1641, 1137, 1658, 1151], [1645, 1124, 1659, 1135], [1641, 1119, 1658, 1121], [1645, 1105, 1659, 1117], [1642, 1099, 1659, 1105], [1641, 1094, 1658, 1096], [1646, 1082, 1658, 1093], [1645, 1069, 1659, 1080], [1641, 1050, 1659, 1061], [1641, 1045, 1658, 1047], [1645, 1033, 1659, 1043], [1642, 1026, 1659, 1032], [1645, 1012, 1659, 1024], [1645, 1001, 1658, 1010], [1645, 988, 1659, 998], [1645, 976, 1659, 987], [1642, 962, 1659, 968], [1645, 950, 1659, 961], [1645, 930, 1659, 941], [1645, 917, 1663, 928], [1642, 910, 1659, 916], [1641, 906, 1658, 908], [1645, 886, 1658, 902], [1646, 874, 1659, 883], [1645, 854, 1658, 870], [1670, 1145, 1689, 1159], [1695, 1140, 1706, 1150], [1670, 1013, 1689, 1027], [1695, 1008, 1706, 1018], [1670, 881, 1689, 895], [1695, 875, 1706, 885], [1691, 752, 1898, 775], [1909, 752, 2071, 781], [2083, 752, 2169, 781], [1772, 986, 1899, 1003], [1772, 1008, 1899, 1025], [1772, 1031, 1899, 1048], [1772, 1053, 1899, 1070], [1773, 1075, 1818, 1092], [1773, 1098, 1828, 1115], [1773, 1120, 1828, 1137], [1773, 1142, 1828, 1159], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [309, 1652, 326, 1666], [313, 1639, 327, 1650], [309, 1634, 326, 1636], [313, 1620, 327, 1632], [310, 1614, 327, 1620], [309, 1609, 326, 1611], [314, 1597, 326, 1608], [313, 1584, 327, 1595], [309, 1565, 327, 1576], [309, 1560, 326, 1562], [313, 1547, 327, 1557], [310, 1541, 327, 1547], [313, 1527, 327, 1539], [313, 1516, 326, 1525], [313, 1503, 327, 1513], [313, 1490, 327, 1501], [310, 1477, 327, 1483], [313, 1464, 327, 1475], [313, 1445, 327, 1456], [313, 1432, 331, 1443], [310, 1425, 327, 1431], [309, 1420, 326, 1422], [313, 1401, 326, 1417], [314, 1389, 327, 1398], [313, 1369, 326, 1385], [338, 1642, 357, 1656], [363, 1636, 374, 1646], [338, 1518, 357, 1532], [363, 1512, 374, 1522], [338, 1394, 357, 1408], [363, 1388, 374, 1398], [338, 1266, 546, 1289], [557, 1266, 719, 1295], [729, 1266, 847, 1289], [440, 1501, 567, 1518], [440, 1523, 567, 1540], [440, 1545, 567, 1562], [440, 1568, 567, 1585], [441, 1590, 486, 1607], [441, 1612, 496, 1629], [441, 1634, 496, 1651], [441, 1657, 496, 1674], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [975, 1652, 992, 1666], [979, 1639, 993, 1650], [975, 1634, 992, 1636], [979, 1620, 993, 1632], [976, 1614, 993, 1620], [975, 1609, 992, 1611], [980, 1597, 992, 1608], [979, 1584, 993, 1595], [975, 1565, 993, 1576], [975, 1560, 992, 1562], [979, 1547, 993, 1557], [976, 1541, 993, 1547], [979, 1527, 993, 1539], [979, 1516, 992, 1525], [979, 1503, 993, 1513], [979, 1490, 993, 1501], [976, 1477, 993, 1483], [979, 1464, 993, 1475], [979, 1445, 993, 1456], [979, 1432, 997, 1443], [976, 1425, 993, 1431], [975, 1420, 992, 1422], [979, 1401, 992, 1417], [980, 1389, 993, 1398], [979, 1369, 992, 1385], [1004, 1559, 1023, 1573], [1029, 1554, 1040, 1564], [1004, 1406, 1023, 1420], [1029, 1400, 1040, 1410], [1005, 1266, 1212, 1289], [1223, 1266, 1386, 1295], [1397, 1266, 1512, 1295], [1106, 1501, 1233, 1518], [1106, 1523, 1233, 1540], [1106, 1545, 1233, 1562], [1106, 1568, 1233, 1585], [1107, 1590, 1152, 1607], [1107, 1612, 1162, 1629], [1107, 1634, 1162, 1651], [1107, 1657, 1162, 1674], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1641, 1652, 1658, 1666], [1645, 1639, 1659, 1650], [1641, 1634, 1658, 1636], [1645, 1620, 1659, 1632], [1642, 1614, 1659, 1620], [1641, 1609, 1658, 1611], [1646, 1597, 1658, 1608], [1645, 1584, 1659, 1595], [1641, 1565, 1659, 1576], [1641, 1560, 1658, 1562], [1645, 1547, 1659, 1557], [1642, 1541, 1659, 1547], [1645, 1527, 1659, 1539], [1645, 1516, 1658, 1525], [1645, 1503, 1659, 1513], [1645, 1490, 1659, 1501], [1642, 1477, 1659, 1483], [1645, 1464, 1659, 1475], [1645, 1445, 1659, 1456], [1645, 1432, 1663, 1443], [1642, 1425, 1659, 1431], [1641, 1420, 1658, 1422], [1645, 1401, 1658, 1417], [1646, 1389, 1659, 1398], [1645, 1369, 1658, 1385], [1670, 1547, 1689, 1561], [1695, 1542, 1706, 1552], [1670, 1406, 1689, 1420], [1695, 1400, 1706, 1410], [1707, 1266, 1914, 1289], [1925, 1266, 2088, 1295], [2098, 1268, 2151, 1289], [1772, 1501, 1899, 1518], [1772, 1523, 1899, 1540], [1772, 1545, 1899, 1562], [1772, 1568, 1899, 1585], [1773, 1590, 1818, 1607], [1773, 1612, 1828, 1629], [1773, 1634, 1828, 1651], [1773, 1657, 1828, 1674], [584, 2244, 643, 2265], [654, 2244, 683, 2270], [553, 2212, 584, 2232], [762, 2212, 791, 2232], [309, 2166, 326, 2180], [313, 2154, 327, 2165], [309, 2149, 326, 2151], [313, 2134, 327, 2146], [310, 2128, 327, 2134], [309, 2124, 326, 2126], [314, 2112, 326, 2123], [313, 2099, 327, 2110], [309, 2079, 327, 2090], [309, 2074, 326, 2076], [313, 2062, 327, 2072], [310, 2055, 327, 2061], [313, 2042, 327, 2054], [313, 2031, 326, 2040], [313, 2018, 327, 2028], [313, 2005, 327, 2016], [310, 1992, 327, 1998], [313, 1979, 327, 1990], [313, 1960, 327, 1971], [313, 1947, 331, 1958], [310, 1940, 327, 1946], [309, 1935, 326, 1937], [313, 1916, 326, 1932], [314, 1903, 327, 1912], [313, 1883, 326, 1899], [338, 2151, 357, 2165], [363, 2146, 374, 2156], [338, 2027, 357, 2041], [363, 2022, 374, 2032], [338, 1902, 357, 1916], [363, 1897, 374, 1907], [361, 1781, 568, 1804], [579, 1781, 741, 1810], [752, 1781, 838, 1804], [440, 2016, 567, 2033], [440, 2038, 567, 2055], [440, 2060, 567, 2077], [440, 2082, 567, 2099], [441, 2105, 486, 2122], [441, 2127, 496, 2144], [441, 2149, 496, 2166], [441, 2171, 496, 2188], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1217, 2212, 1246, 2232], [1439, 2212, 1471, 2232], [975, 2166, 992, 2180], [979, 2154, 993, 2165], [975, 2149, 992, 2151], [979, 2134, 993, 2146], [976, 2128, 993, 2134], [975, 2124, 992, 2126], [980, 2112, 992, 2123], [979, 2099, 993, 2110], [975, 2079, 993, 2090], [975, 2074, 992, 2076], [979, 2062, 993, 2072], [976, 2055, 993, 2061], [979, 2042, 993, 2054], [979, 2031, 992, 2040], [979, 2018, 993, 2028], [979, 2005, 993, 2016], [976, 1992, 993, 1998], [979, 1979, 993, 1990], [979, 1960, 993, 1971], [979, 1947, 997, 1958], [976, 1940, 993, 1946], [975, 1935, 992, 1937], [979, 1916, 992, 1932], [980, 1903, 993, 1912], [979, 1883, 992, 1899], [1004, 2159, 1023, 2173], [1029, 2153, 1040, 2163], [1004, 2035, 1023, 2049], [1029, 2029, 1040, 2039], [1004, 1911, 1023, 1925], [1029, 1905, 1040, 1915], [1010, 1781, 1217, 1804], [1228, 1781, 1390, 1810], [1402, 1783, 1513, 1804], [1106, 2016, 1233, 2033], [1106, 2038, 1233, 2055], [1106, 2060, 1233, 2077], [1106, 2082, 1233, 2099], [1107, 2105, 1152, 2122], [1107, 2127, 1162, 2144], [1107, 2149, 1162, 2166], [1107, 2171, 1162, 2188], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1641, 2166, 1658, 2180], [1645, 2154, 1659, 2165], [1641, 2149, 1658, 2151], [1645, 2134, 1659, 2146], [1642, 2128, 1659, 2134], [1641, 2124, 1658, 2126], [1646, 2112, 1658, 2123], [1645, 2099, 1659, 2110], [1641, 2079, 1659, 2090], [1641, 2074, 1658, 2076], [1645, 2062, 1659, 2072], [1642, 2055, 1659, 2061], [1645, 2042, 1659, 2054], [1645, 2031, 1658, 2040], [1645, 2018, 1659, 2028], [1645, 2005, 1659, 2016], [1642, 1992, 1659, 1998], [1645, 1979, 1659, 1990], [1645, 1960, 1659, 1971], [1645, 1947, 1663, 1958], [1642, 1940, 1659, 1946], [1641, 1935, 1658, 1937], [1645, 1916, 1658, 1932], [1646, 1903, 1659, 1912], [1645, 1883, 1658, 1899], [1670, 2127, 1689, 2141], [1695, 2121, 1706, 2131], [1670, 2013, 1689, 2027], [1695, 2008, 1706, 2018], [1670, 1901, 1689, 1915], [1695, 1895, 1706, 1905], [1666, 1781, 1873, 1804], [1884, 1781, 2046, 1810], [2059, 1781, 2183, 1810], [1772, 2016, 1899, 2033], [1772, 2038, 1899, 2055], [1772, 2060, 1899, 2077], [1772, 2082, 1899, 2099], [1773, 2105, 1818, 2122], [1773, 2127, 1828, 2144], [1773, 2149, 1828, 2166], [1773, 2171, 1828, 2188], [376, 2356, 483, 2393], [495, 2356, 544, 2384], [562, 2356, 698, 2385], [710, 2356, 845, 2384], [857, 2360, 888, 2384], [900, 2356, 1050, 2393], [1062, 2365, 1097, 2385], [1110, 2356, 1182, 2384], [1194, 2356, 1230, 2384], [1240, 2356, 1289, 2384], [1301, 2356, 1536, 2385], [1549, 2356, 1667, 2384], [1681, 2356, 1857, 2393], [1868, 2356, 1964, 2384], [1975, 2356, 2177, 2393], [376, 2406, 423, 2434], [434, 2406, 484, 2434], [495, 2406, 637, 2434], [648, 2406, 762, 2443], [776, 2406, 954, 2434], [966, 2406, 996, 2434], [1008, 2406, 1058, 2434], [1070, 2406, 1279, 2443], [438, 2540, 529, 2574], [547, 2544, 578, 2568], [594, 2540, 680, 2569], [696, 2539, 772, 2575], [788, 2549, 836, 2569], [851, 2540, 966, 2577], [982, 2540, 1092, 2569], [1107, 2549, 1167, 2568], [1182, 2540, 1218, 2568], [1230, 2540, 1280, 2568], [1294, 2540, 1456, 2577], [1471, 2530, 1550, 2569], [1519, 2559, 1556, 2584], [1574, 2549, 1651, 2577], [1666, 2544, 1821, 2577], [1838, 2540, 1897, 2568], [1911, 2540, 1983, 2568], [1998, 2540, 2089, 2577], [2106, 2540, 2179, 2568], [376, 2591, 585, 2628], [598, 2595, 629, 2619], [642, 2591, 692, 2619], [704, 2591, 822, 2619], [841, 2591, 932, 2620], [946, 2591, 1232, 2628], [1245, 2591, 1271, 2619], [1284, 2591, 1365, 2619], [1378, 2591, 1409, 2619], [1421, 2591, 1528, 2619], [1540, 2591, 1630, 2625], [1644, 2591, 1694, 2619], [1706, 2591, 1919, 2628], [1932, 2591, 1968, 2619], [1979, 2600, 1996, 2619], [2008, 2591, 2175, 2620], [377, 2641, 477, 2670], [489, 2641, 625, 2678], [637, 2641, 710, 2678], [723, 2650, 764, 2669], [776, 2641, 813, 2669], [827, 2641, 932, 2678], [944, 2645, 975, 2669], [987, 2645, 1131, 2678], [1143, 2642, 1188, 2670], [1189, 2632, 1223, 2652], [1191, 2661, 1229, 2686], [1236, 2641, 1413, 2678], [1426, 2641, 1600, 2678], [1616, 2642, 1670, 2669], [1682, 2650, 1740, 2669], [1751, 2641, 1823, 2669], [1836, 2641, 1933, 2678], [1946, 2641, 2039, 2669], [2050, 2641, 2113, 2669], [2124, 2641, 2174, 2669], [375, 2692, 480, 2720], [494, 2692, 692, 2720], [703, 2692, 734, 2720], [746, 2692, 823, 2720], [836, 2691, 853, 2721], [868, 2692, 955, 2729], [968, 2692, 1166, 2729], [1179, 2696, 1208, 2720], [1221, 2692, 1392, 2726], [1407, 2692, 1463, 2720], [1476, 2701, 1509, 2720], [1522, 2692, 1570, 2720], [1581, 2692, 1731, 2729], [1743, 2692, 1876, 2729], [1890, 2692, 2041, 2720], [2053, 2692, 2174, 2720], [375, 2743, 522, 2780], [535, 2743, 602, 2771], [613, 2743, 701, 2772], [712, 2743, 949, 2771], [961, 2743, 1054, 2772], [1066, 2743, 1091, 2771], [1104, 2743, 1153, 2771], [1164, 2743, 1295, 2780], [1307, 2752, 1445, 2771], [1255, 2935, 1293, 2964], [584, 700, 643, 721], [654, 700, 683, 726], [524, 674, 543, 688], [549, 668, 558, 678], [755, 668, 786, 688], [317, 495, 334, 498], [317, 478, 335, 492], [317, 463, 334, 476], [317, 445, 334, 459], [346, 638, 371, 652], [346, 580, 371, 594], [346, 522, 371, 536], [346, 464, 371, 478], [364, 406, 373, 420], [345, 348, 371, 362], [345, 290, 371, 304], [312, 236, 519, 259], [530, 236, 692, 265], [704, 235, 885, 260], [738, 471, 865, 488], [738, 494, 865, 511], [738, 516, 865, 533], [738, 538, 865, 555], [739, 561, 785, 578], [739, 583, 795, 600], [739, 605, 795, 622], [739, 627, 795, 644], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1066, 674, 1085, 688], [1091, 668, 1100, 678], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [983, 495, 1000, 498], [983, 478, 1001, 492], [983, 463, 1000, 476], [983, 445, 1000, 459], [1012, 620, 1037, 634], [1030, 459, 1039, 473], [1011, 298, 1037, 312], [977, 236, 1185, 259], [1196, 236, 1358, 265], [1370, 235, 1546, 260], [1404, 471, 1531, 488], [1404, 494, 1531, 511], [1404, 516, 1531, 533], [1404, 538, 1531, 555], [1405, 561, 1451, 578], [1405, 583, 1461, 600], [1405, 605, 1461, 622], [1405, 627, 1461, 644], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1696, 674, 1715, 688], [1721, 668, 1730, 678], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1649, 495, 1666, 498], [1649, 478, 1667, 492], [1649, 463, 1666, 476], [1649, 445, 1666, 459], [1678, 600, 1703, 614], [1696, 535, 1705, 549], [1677, 471, 1703, 485], [1677, 407, 1703, 421], [1677, 343, 1703, 357], [1677, 278, 1703, 292], [1643, 236, 1851, 259], [1862, 236, 2024, 265], [2036, 235, 2217, 260], [2070, 471, 2197, 488], [2070, 494, 2197, 511], [2070, 516, 2197, 533], [2070, 538, 2197, 555], [2071, 561, 2116, 578], [2071, 583, 2127, 600], [2071, 605, 2127, 622], [2071, 627, 2127, 644], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [517, 1183, 548, 1202], [738, 1183, 767, 1202], [317, 1010, 334, 1013], [317, 993, 335, 1007], [317, 978, 334, 991], [317, 960, 334, 974], [346, 1115, 371, 1129], [364, 1052, 373, 1066], [345, 989, 371, 1003], [345, 926, 371, 940], [345, 863, 371, 877], [345, 800, 371, 814], [312, 751, 519, 774], [530, 751, 692, 780], [704, 750, 885, 775], [738, 986, 865, 1003], [738, 1008, 865, 1025], [738, 1031, 865, 1048], [738, 1053, 865, 1070], [739, 1075, 785, 1092], [739, 1098, 795, 1115], [739, 1120, 795, 1137], [739, 1142, 795, 1159], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1164, 1183, 1195, 1202], [1369, 1183, 1398, 1202], [983, 1010, 1000, 1013], [983, 993, 1001, 1007], [983, 978, 1000, 991], [983, 960, 1000, 974], [1012, 1131, 1037, 1145], [1012, 1068, 1037, 1082], [1030, 1005, 1039, 1019], [1011, 942, 1037, 956], [1011, 879, 1037, 893], [1011, 815, 1037, 829], [977, 751, 1185, 774], [1196, 751, 1358, 780], [1370, 750, 1551, 775], [1404, 986, 1531, 1003], [1404, 1008, 1531, 1025], [1404, 1031, 1531, 1048], [1404, 1053, 1531, 1070], [1405, 1075, 1451, 1092], [1405, 1098, 1461, 1115], [1405, 1120, 1461, 1137], [1405, 1142, 1461, 1159], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1816, 1188, 1835, 1202], [1841, 1183, 1850, 1193], [2046, 1183, 2077, 1202], [1649, 1003, 1666, 1006], [1649, 987, 1667, 1001], [1649, 971, 1666, 984], [1649, 953, 1666, 967], [1696, 1081, 1705, 1095], [1677, 979, 1703, 993], [1696, 878, 1705, 892], [1691, 752, 1898, 775], [1909, 752, 2071, 781], [2083, 752, 2169, 781], [2070, 986, 2197, 1003], [2070, 1008, 2197, 1025], [2070, 1031, 2197, 1048], [2070, 1053, 2197, 1070], [2071, 1075, 2116, 1092], [2071, 1098, 2127, 1115], [2071, 1120, 2127, 1137], [2071, 1142, 2127, 1159], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [317, 1518, 334, 1521], [317, 1501, 335, 1515], [317, 1486, 334, 1499], [317, 1468, 334, 1482], [364, 1632, 373, 1646], [345, 1580, 371, 1594], [364, 1528, 373, 1542], [345, 1476, 371, 1490], [364, 1423, 373, 1437], [345, 1371, 371, 1385], [364, 1319, 373, 1333], [338, 1266, 546, 1289], [557, 1266, 719, 1295], [729, 1266, 847, 1289], [738, 1501, 865, 1518], [738, 1523, 865, 1540], [738, 1545, 865, 1562], [738, 1568, 865, 1585], [739, 1590, 785, 1607], [739, 1612, 795, 1629], [739, 1634, 795, 1651], [739, 1657, 795, 1674], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [983, 1518, 1000, 1521], [983, 1501, 1001, 1515], [983, 1486, 1000, 1499], [983, 1468, 1000, 1482], [1012, 1671, 1037, 1685], [1012, 1612, 1037, 1626], [1030, 1552, 1039, 1566], [1011, 1493, 1037, 1507], [1011, 1434, 1037, 1448], [1011, 1375, 1037, 1389], [1011, 1316, 1037, 1330], [1005, 1266, 1212, 1289], [1223, 1266, 1386, 1295], [1397, 1266, 1512, 1295], [1404, 1501, 1531, 1518], [1404, 1523, 1531, 1540], [1404, 1545, 1531, 1562], [1404, 1568, 1531, 1585], [1405, 1590, 1451, 1607], [1405, 1612, 1461, 1629], [1405, 1634, 1461, 1651], [1405, 1657, 1461, 1674], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1649, 1518, 1666, 1521], [1649, 1501, 1667, 1515], [1649, 1486, 1666, 1499], [1649, 1468, 1666, 1482], [1678, 1653, 1703, 1667], [1678, 1581, 1703, 1595], [1696, 1510, 1705, 1524], [1677, 1438, 1703, 1452], [1677, 1366, 1703, 1380], [1707, 1266, 1914, 1289], [1925, 1266, 2088, 1295], [2098, 1268, 2151, 1289], [2070, 1501, 2197, 1518], [2070, 1523, 2197, 1540], [2070, 1545, 2197, 1562], [2070, 1568, 2197, 1585], [2071, 1590, 2116, 1607], [2071, 1612, 2127, 1629], [2071, 1634, 2127, 1651], [2071, 1657, 2127, 1674], [584, 2244, 643, 2265], [654, 2244, 683, 2270], [553, 2212, 584, 2232], [762, 2212, 791, 2232], [317, 2033, 334, 2036], [317, 2016, 335, 2030], [317, 2001, 334, 2014], [317, 1983, 334, 1997], [365, 2189, 370, 2203], [346, 2105, 371, 2119], [364, 2021, 373, 2035], [345, 1936, 371, 1950], [364, 1852, 373, 1866], [361, 1781, 568, 1804], [579, 1781, 741, 1810], [752, 1781, 838, 1804], [738, 2016, 865, 2033], [738, 2038, 865, 2055], [738, 2060, 865, 2077], [738, 2082, 865, 2099], [739, 2105, 785, 2122], [739, 2127, 795, 2144], [739, 2149, 795, 2166], [739, 2171, 795, 2188], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1217, 2212, 1246, 2232], [1439, 2212, 1471, 2232], [1003, 2033, 1020, 2036], [1003, 2016, 1021, 2030], [1003, 2001, 1020, 2014], [1003, 1983, 1020, 1997], [1030, 2152, 1039, 2166], [1030, 2075, 1039, 2089], [1030, 1998, 1039, 2012], [1030, 1921, 1039, 1935], [1030, 1845, 1039, 1859], [1010, 1781, 1217, 1804], [1228, 1781, 1390, 1810], [1402, 1783, 1513, 1804], [1404, 2016, 1531, 2033], [1404, 2038, 1531, 2055], [1404, 2060, 1531, 2077], [1404, 2082, 1531, 2099], [1405, 2105, 1451, 2122], [1405, 2127, 1461, 2144], [1405, 2149, 1461, 2166], [1405, 2171, 1461, 2188], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1649, 2033, 1666, 2036], [1649, 2016, 1667, 2030], [1649, 2001, 1666, 2014], [1649, 1983, 1666, 1997], [1678, 2165, 1703, 2179], [1696, 2123, 1705, 2137], [1677, 2081, 1703, 2095], [1696, 2039, 1705, 2053], [1677, 1996, 1703, 2010], [1696, 1954, 1705, 1968], [1677, 1912, 1703, 1926], [1696, 1870, 1705, 1884], [1677, 1828, 1703, 1842], [1666, 1781, 1873, 1804], [1884, 1781, 2046, 1810], [2059, 1781, 2183, 1810], [2070, 2016, 2197, 2033], [2070, 2038, 2197, 2055], [2070, 2060, 2197, 2077], [2070, 2082, 2197, 2099], [2071, 2105, 2116, 2122], [2071, 2127, 2127, 2144], [2071, 2149, 2127, 2166], [2071, 2171, 2127, 2188], [376, 2356, 484, 2393], [498, 2356, 547, 2384], [567, 2356, 728, 2384], [742, 2356, 847, 2393], [861, 2360, 892, 2384], [905, 2356, 1002, 2384], [1016, 2356, 1105, 2384], [1120, 2356, 1241, 2391], [1255, 2365, 1291, 2385], [1305, 2356, 1378, 2384], [1392, 2356, 1428, 2384], [1438, 2356, 1488, 2384], [1502, 2356, 1740, 2385], [1753, 2356, 1874, 2384], [1888, 2356, 2066, 2393], [2079, 2356, 2175, 2384], [376, 2406, 576, 2443], [590, 2406, 638, 2434], [649, 2406, 698, 2434], [710, 2406, 851, 2434], [862, 2406, 977, 2443], [990, 2406, 1168, 2434], [1180, 2406, 1211, 2434], [1223, 2406, 1272, 2434], [1284, 2406, 1493, 2443], [376, 2533, 436, 2568], [487, 2533, 734, 2577], [748, 2533, 791, 2568], [802, 2533, 1211, 2577], [1226, 2533, 1292, 2568], [373, 2619, 425, 2646], [437, 2627, 503, 2647], [517, 2618, 604, 2655], [616, 2618, 664, 2646], [675, 2618, 831, 2655], [842, 2618, 1125, 2646], [1137, 2619, 1189, 2646], [1200, 2618, 1376, 2655], [1387, 2622, 1416, 2646], [1430, 2618, 1608, 2655], [1620, 2618, 1746, 2655], [1759, 2618, 1806, 2646], [1816, 2617, 1909, 2647], [1921, 2617, 2095, 2655], [2112, 2618, 2173, 2646], [376, 2668, 529, 2696], [541, 2672, 570, 2696], [583, 2668, 687, 2697], [700, 2668, 778, 2696], [789, 2668, 902, 2705], [915, 2668, 939, 2696], [952, 2668, 1071, 2696], [1089, 2668, 1147, 2705], [1161, 2677, 1177, 2696], [1188, 2668, 1276, 2697], [1289, 2668, 1422, 2696], [1436, 2667, 1457, 2705], [1470, 2668, 1578, 2696], [1591, 2668, 1626, 2696], [1636, 2668, 1696, 2696], [1709, 2678, 1732, 2696], [1748, 2676, 1768, 2696], [1784, 2678, 1818, 2696], [1830, 2668, 1936, 2705], [1949, 2668, 2005, 2696], [2018, 2668, 2106, 2697], [2119, 2677, 2174, 2696], [375, 2719, 413, 2747], [425, 2719, 542, 2748], [555, 2728, 586, 2747], [600, 2728, 616, 2747], [629, 2719, 793, 2748], [804, 2718, 830, 2747], [846, 2725, 867, 2749], [883, 2712, 1032, 2747], [1037, 2743, 1043, 2753], [1057, 2728, 1097, 2747], [1109, 2719, 1209, 2748], [1222, 2728, 1238, 2747], [1250, 2719, 1367, 2748], [1379, 2719, 1473, 2747], [1485, 2719, 1562, 2747], [1573, 2728, 1629, 2747], [1640, 2719, 1679, 2747], [1691, 2719, 1822, 2747], [1833, 2719, 1874, 2756], [942, 2810, 1030, 2844], [1089, 2803, 1100, 2822], [1088, 2807, 1269, 2852], [1277, 2802, 1290, 2821], [1275, 2829, 1291, 2848], [1305, 2814, 1333, 2841], [1346, 2801, 1449, 2839], [1415, 2835, 1444, 2854], [1451, 2835, 1487, 2854], [1494, 2835, 1530, 2854], [1540, 2807, 1604, 2848], [2097, 2809, 2173, 2845], [1255, 2935, 1295, 2963], [628, 262, 785, 299], [862, 263, 967, 290], [978, 262, 1143, 290], [1194, 262, 1330, 290], [1341, 262, 1377, 290], [1386, 262, 1496, 290], [1549, 262, 1631, 290], [1643, 262, 1769, 290], [1780, 262, 1816, 290], [1824, 262, 1921, 299], [627, 353, 780, 382], [915, 353, 973, 382], [992, 361, 1012, 381], [1031, 352, 1090, 382], [1326, 352, 1366, 382], [1661, 352, 1678, 382], [1692, 353, 1810, 381], [627, 404, 813, 441], [919, 404, 974, 433], [992, 412, 1012, 432], [1034, 404, 1090, 432], [1316, 404, 1376, 433], [1645, 404, 1694, 433], [1707, 404, 1826, 432], [627, 455, 742, 492], [915, 455, 975, 484], [992, 463, 1012, 483], [1030, 454, 1089, 484], [1327, 455, 1366, 484], [1639, 455, 1706, 483], [1718, 455, 1836, 483], [654, 602, 744, 630], [756, 603, 784, 630], [802, 604, 864, 631], [875, 604, 970, 630], [982, 604, 1013, 630], [1022, 604, 1104, 631], [1116, 613, 1264, 638], [1274, 604, 1342, 630], [1353, 604, 1381, 630], [1391, 604, 1436, 630], [1447, 604, 1528, 631], [1539, 604, 1683, 638], [1694, 604, 1882, 638], [374, 735, 476, 764], [495, 734, 535, 770], [554, 735, 580, 763], [597, 735, 647, 763], [664, 735, 815, 764], [831, 735, 921, 772], [938, 735, 1039, 769], [1059, 735, 1118, 763], [1134, 725, 1214, 764], [1179, 760, 1208, 779], [1216, 760, 1252, 779], [1259, 760, 1295, 779], [1323, 736, 1418, 764], [1421, 726, 1434, 746], [1420, 760, 1438, 779], [1457, 735, 1531, 764], [1545, 744, 1570, 771], [1593, 748, 1621, 757], [1648, 732, 1702, 773], [1711, 745, 1760, 771], [1769, 732, 1829, 773], [1859, 735, 2058, 772], [2074, 735, 2110, 763], [2124, 735, 2174, 763], [376, 786, 454, 814], [468, 785, 543, 821], [557, 786, 583, 814], [596, 786, 724, 823], [736, 786, 789, 814], [801, 786, 1012, 823], [1024, 786, 1060, 814], [1070, 786, 1120, 814], [1132, 795, 1209, 823], [1222, 790, 1368, 823], [1383, 786, 1485, 815], [1498, 795, 1555, 814], [1566, 786, 1606, 814], [1618, 786, 1699, 814], [1711, 786, 1801, 823], [1815, 786, 1865, 814], [1877, 786, 2174, 814], [376, 836, 505, 873], [518, 836, 618, 871], [632, 836, 792, 873], [802, 836, 961, 873], [973, 836, 1003, 864], [1016, 836, 1082, 865], [1096, 836, 1115, 864], [1119, 860, 1124, 864], [437, 888, 490, 915], [503, 887, 592, 924], [605, 887, 661, 915], [675, 887, 742, 915], [754, 891, 783, 915], [796, 887, 846, 915], [857, 887, 947, 916], [961, 896, 1124, 924], [1138, 887, 1267, 915], [1279, 887, 1309, 915], [1322, 887, 1411, 915], [1423, 888, 1449, 915], [1467, 887, 1518, 915], [1530, 887, 1566, 915], [1575, 887, 1624, 915], [1637, 896, 1800, 924], [1815, 896, 1863, 915], [1875, 887, 1963, 915], [1975, 887, 2010, 915], [2019, 887, 2174, 924], [375, 938, 479, 975], [495, 938, 601, 975], [615, 938, 653, 967], [665, 938, 696, 966], [708, 938, 755, 966], [768, 938, 928, 975], [941, 938, 1039, 967], [1053, 947, 1137, 966], [1149, 938, 1185, 966], [1194, 938, 1242, 966], [1255, 938, 1363, 966], [1377, 938, 1412, 966], [1421, 938, 1469, 966], [1482, 938, 1632, 967], [1646, 947, 1802, 975], [1818, 939, 1870, 966], [1883, 938, 1967, 966], [1980, 947, 2068, 975], [2080, 938, 2173, 966], [376, 989, 412, 1017], [423, 989, 508, 1017], [523, 998, 691, 1026], [705, 989, 746, 1026], [761, 989, 906, 1026], [920, 989, 1065, 1026], [1078, 989, 1165, 1017], [1179, 989, 1253, 1018], [1267, 998, 1337, 1017], [1352, 998, 1442, 1017], [1456, 989, 1515, 1017], [1528, 989, 1669, 1018], [1684, 989, 1764, 1023], [1779, 989, 1869, 1026], [1884, 989, 2029, 1017], [2045, 990, 2173, 1018], [376, 1040, 520, 1068], [537, 1040, 620, 1068], [632, 1049, 679, 1069], [692, 1040, 776, 1069], [787, 1040, 925, 1077], [936, 1039, 985, 1069], [998, 1040, 1046, 1068], [1057, 1040, 1131, 1068], [1144, 1049, 1302, 1077], [1317, 1040, 1465, 1077], [1478, 1040, 1527, 1068], [1538, 1040, 1766, 1077], [1779, 1040, 1866, 1069], [1879, 1049, 1912, 1068], [1926, 1049, 1956, 1068], [1970, 1044, 1999, 1068], [2012, 1040, 2174, 1068], [376, 1090, 467, 1119], [479, 1090, 514, 1118], [523, 1090, 571, 1118], [582, 1090, 802, 1118], [815, 1090, 917, 1127], [933, 1091, 985, 1118], [998, 1094, 1053, 1118], [1065, 1090, 1112, 1118], [1125, 1090, 1280, 1127], [1294, 1090, 1475, 1127], [1488, 1090, 1586, 1119], [1597, 1090, 1672, 1119], [1683, 1090, 1760, 1118], [1770, 1090, 1940, 1127], [1954, 1090, 2072, 1127], [2084, 1090, 2114, 1118], [2126, 1090, 2173, 1118], [376, 1141, 524, 1169], [536, 1141, 583, 1169], [596, 1141, 715, 1178], [728, 1141, 849, 1175], [862, 1141, 934, 1170], [947, 1141, 996, 1169], [1008, 1141, 1080, 1178], [1092, 1141, 1251, 1178], [1263, 1141, 1388, 1169], [1400, 1141, 1550, 1169], [1562, 1141, 1701, 1178], [439, 1235, 455, 1251], [479, 1225, 604, 1253], [616, 1225, 767, 1253], [778, 1225, 908, 1262], [921, 1224, 949, 1262], [963, 1225, 1009, 1253], [1017, 1225, 1067, 1260], [439, 1303, 455, 1319], [479, 1293, 590, 1330], [603, 1293, 735, 1327], [748, 1293, 848, 1322], [860, 1293, 885, 1321], [897, 1293, 991, 1321], [1003, 1302, 1043, 1321], [1055, 1293, 1187, 1321], [1200, 1292, 1228, 1330], [1242, 1293, 1288, 1321], [1296, 1293, 1336, 1328], [439, 1370, 455, 1386], [479, 1360, 541, 1388], [553, 1360, 718, 1388], [729, 1360, 798, 1389], [811, 1360, 959, 1397], [969, 1360, 1009, 1397], [1021, 1360, 1166, 1389], [1179, 1360, 1236, 1388], [1248, 1360, 1305, 1388], [1320, 1359, 1393, 1394], [1407, 1360, 1505, 1389], [1517, 1360, 1643, 1388], [1657, 1369, 1693, 1388], [1705, 1360, 1959, 1397], [1971, 1360, 2018, 1388], [2030, 1360, 2076, 1389], [2089, 1360, 2177, 1397], [479, 1411, 545, 1439], [560, 1411, 679, 1448], [692, 1420, 708, 1439], [720, 1411, 971, 1440], [983, 1411, 1103, 1440], [1115, 1411, 1151, 1439], [1161, 1411, 1282, 1440], [376, 1496, 433, 1523], [444, 1495, 519, 1523], [532, 1496, 607, 1523], [622, 1495, 681, 1523], [694, 1495, 829, 1523], [842, 1504, 890, 1524], [904, 1495, 994, 1532], [1006, 1495, 1096, 1523], [1108, 1504, 1164, 1523], [1177, 1495, 1213, 1523], [1224, 1495, 1390, 1523], [1403, 1495, 1575, 1532], [1592, 1495, 1638, 1523], [1652, 1496, 1707, 1523], [1721, 1495, 1827, 1524], [1847, 1496, 1901, 1523], [1915, 1499, 1996, 1523], [2010, 1495, 2075, 1523], [2087, 1495, 2175, 1532], [376, 1550, 428, 1574], [439, 1546, 500, 1574], [511, 1546, 596, 1574], [607, 1546, 707, 1583], [718, 1546, 877, 1583], [890, 1546, 1027, 1574], [1041, 1555, 1124, 1574], [1137, 1546, 1293, 1574], [1305, 1546, 1353, 1574], [1364, 1546, 1520, 1574], [1532, 1546, 1594, 1574], [1607, 1546, 1656, 1574], [1668, 1546, 1957, 1574], [1969, 1546, 2086, 1583], [2101, 1546, 2174, 1574], [377, 1606, 408, 1625], [422, 1597, 570, 1626], [585, 1597, 644, 1625], [656, 1597, 940, 1626], [952, 1597, 1102, 1625], [1121, 1598, 1273, 1626], [1285, 1597, 1317, 1625], [1329, 1597, 1379, 1625], [1392, 1597, 1469, 1634], [1481, 1597, 1517, 1625], [1527, 1606, 1583, 1625], [1595, 1597, 1697, 1634], [1710, 1597, 1872, 1634], [1885, 1597, 1994, 1625], [2007, 1606, 2055, 1626], [2068, 1597, 2108, 1625], [2121, 1601, 2175, 1625], [376, 1647, 464, 1675], [475, 1647, 557, 1675], [569, 1656, 600, 1675], [613, 1647, 694, 1684], [706, 1647, 827, 1675], [841, 1647, 888, 1675], [899, 1647, 956, 1675], [968, 1647, 1113, 1684], [1130, 1647, 1158, 1675], [1171, 1656, 1254, 1675], [1265, 1647, 1441, 1675], [1453, 1647, 1560, 1675], [1571, 1647, 1667, 1684], [1677, 1647, 1716, 1675], [1728, 1651, 1757, 1675], [1770, 1647, 1878, 1675], [1891, 1647, 2131, 1684], [2143, 1651, 2173, 1675], [376, 1698, 515, 1735], [528, 1698, 728, 1732], [742, 1698, 796, 1726], [809, 1698, 884, 1726], [898, 1707, 936, 1726], [948, 1698, 1109, 1726], [1120, 1698, 1175, 1726], [1189, 1702, 1242, 1726], [1253, 1698, 1333, 1726], [1346, 1698, 1566, 1735], [1578, 1707, 1612, 1726], [1624, 1698, 1779, 1735], [1792, 1707, 1824, 1726], [1838, 1698, 1883, 1726], [1897, 1707, 1929, 1726], [1943, 1707, 1990, 1727], [2002, 1698, 2101, 1727], [2119, 1699, 2174, 1726], [374, 1749, 474, 1778], [486, 1749, 548, 1777], [561, 1749, 619, 1777], [631, 1753, 661, 1777], [673, 1753, 741, 1777], [753, 1749, 813, 1777], [824, 1758, 869, 1778], [880, 1749, 955, 1778], [967, 1749, 1141, 1777], [1153, 1749, 1310, 1786], [1323, 1749, 1370, 1777], [1382, 1749, 1515, 1786], [1528, 1749, 1678, 1777], [1689, 1749, 1810, 1777], [1821, 1753, 1850, 1777], [1864, 1758, 1880, 1777], [1891, 1749, 2173, 1777], [377, 1800, 493, 1837], [506, 1800, 646, 1829], [659, 1800, 732, 1828], [744, 1800, 810, 1828], [821, 1800, 846, 1828], [859, 1800, 1000, 1837], [1013, 1800, 1070, 1828], [1082, 1800, 1148, 1828], [1162, 1809, 1209, 1829], [1221, 1800, 1348, 1828], [1360, 1804, 1391, 1828], [1403, 1800, 1490, 1828], [1503, 1809, 1543, 1828], [1555, 1800, 1680, 1828], [1692, 1800, 1842, 1828], [1854, 1800, 1993, 1837], [569, 2396, 591, 2412], [593, 2387, 599, 2398], [802, 2396, 823, 2412], [825, 2387, 831, 2398], [337, 2308, 374, 2332], [337, 2188, 358, 2204], [360, 2179, 374, 2190], [337, 2051, 374, 2075], [609, 2417, 676, 2440], [688, 2417, 720, 2444], [307, 2310, 323, 2324], [311, 2294, 323, 2307], [306, 2289, 323, 2292], [311, 2275, 323, 2286], [308, 2265, 323, 2273], [306, 2262, 323, 2265], [311, 2247, 323, 2260], [311, 2234, 323, 2247], [306, 2213, 323, 2226], [306, 2207, 323, 2210], [311, 2194, 323, 2205], [308, 2185, 323, 2193], [311, 2173, 323, 2184], [311, 2158, 323, 2170], [311, 2145, 323, 2157], [311, 2131, 323, 2144], [308, 2115, 323, 2123], [311, 2102, 323, 2115], [311, 2081, 323, 2094], [311, 2066, 328, 2079], [308, 2057, 323, 2065], [306, 2054, 323, 2057], [311, 2031, 323, 2052], [311, 2018, 323, 2030], [311, 1995, 323, 2016], [433, 1898, 576, 1930], [590, 1898, 748, 1930], [762, 1898, 901, 1923], [452, 2304, 499, 2323], [453, 2327, 572, 2343], [454, 2352, 493, 2367], [1203, 2396, 1224, 2412], [1226, 2387, 1232, 2398], [1434, 2396, 1456, 2412], [1458, 2387, 1464, 2398], [1003, 2314, 1040, 2338], [1003, 2184, 1040, 2208], [1003, 2063, 1024, 2079], [1026, 2054, 1040, 2065], [1275, 2417, 1342, 2440], [1354, 2417, 1386, 2444], [973, 2310, 989, 2324], [977, 2294, 989, 2307], [972, 2289, 989, 2292], [977, 2275, 989, 2286], [974, 2265, 989, 2273], [972, 2262, 989, 2265], [977, 2247, 989, 2260], [977, 2234, 989, 2247], [972, 2213, 989, 2226], [972, 2207, 989, 2210], [977, 2194, 989, 2205], [974, 2185, 989, 2193], [977, 2173, 989, 2184], [977, 2158, 989, 2170], [977, 2145, 989, 2157], [977, 2131, 989, 2144], [974, 2115, 989, 2123], [977, 2102, 989, 2115], [977, 2081, 989, 2094], [977, 2066, 994, 2079], [974, 2057, 989, 2065], [972, 2054, 989, 2057], [977, 2031, 989, 2052], [977, 2018, 989, 2030], [977, 1995, 989, 2016], [1088, 1898, 1231, 1930], [1244, 1898, 1403, 1930], [1417, 1898, 1578, 1930], [1118, 2304, 1165, 2323], [1119, 2327, 1238, 2343], [1120, 2352, 1159, 2367], [1816, 2396, 1837, 2412], [1839, 2387, 1845, 2398], [2048, 2396, 2070, 2412], [2072, 2387, 2078, 2398], [1669, 2297, 1706, 2321], [1669, 2178, 1690, 2194], [1692, 2169, 1706, 2180], [1669, 2042, 1706, 2066], [1941, 2417, 2008, 2440], [2020, 2417, 2052, 2444], [1639, 2310, 1655, 2324], [1643, 2294, 1655, 2307], [1638, 2289, 1655, 2292], [1643, 2275, 1655, 2286], [1640, 2265, 1655, 2273], [1638, 2262, 1655, 2265], [1643, 2247, 1655, 2260], [1643, 2234, 1655, 2247], [1638, 2213, 1655, 2226], [1638, 2207, 1655, 2210], [1643, 2194, 1655, 2205], [1640, 2185, 1655, 2193], [1643, 2173, 1655, 2184], [1643, 2158, 1655, 2170], [1643, 2145, 1655, 2157], [1643, 2131, 1655, 2144], [1640, 2115, 1655, 2123], [1643, 2102, 1655, 2115], [1643, 2081, 1655, 2094], [1643, 2066, 1660, 2079], [1640, 2057, 1655, 2065], [1638, 2054, 1655, 2057], [1643, 2031, 1655, 2052], [1643, 2018, 1655, 2030], [1643, 1995, 1655, 2016], [1785, 1898, 1928, 1930], [1942, 1898, 2100, 1930], [2116, 1898, 2212, 1930], [1784, 2304, 1831, 2323], [1785, 2327, 1904, 2343], [1786, 2352, 1825, 2367], [375, 2532, 480, 2569], [492, 2532, 539, 2561], [557, 2532, 688, 2561], [701, 2532, 832, 2560], [844, 2536, 873, 2560], [886, 2532, 1032, 2569], [1043, 2541, 1076, 2561], [1089, 2532, 1159, 2560], [1171, 2532, 1207, 2560], [1216, 2532, 1263, 2560], [1275, 2532, 1431, 2569], [1445, 2532, 1559, 2561], [1572, 2532, 1742, 2569], [1754, 2532, 1847, 2560], [1858, 2532, 2055, 2569], [2068, 2532, 2115, 2560], [2126, 2532, 2173, 2560], [376, 2583, 517, 2611], [528, 2583, 618, 2612], [631, 2592, 796, 2620], [809, 2583, 987, 2611], [999, 2583, 1030, 2611], [1042, 2583, 1091, 2611], [1103, 2583, 1312, 2620], [439, 2684, 590, 2721], [602, 2688, 631, 2712], [644, 2693, 699, 2712], [709, 2684, 848, 2721], [861, 2684, 961, 2721], [972, 2684, 1130, 2721], [1143, 2684, 1351, 2721], [1365, 2693, 1412, 2713], [1422, 2693, 1474, 2712], [1486, 2684, 1536, 2712], [1548, 2684, 1721, 2721], [1733, 2684, 1827, 2712], [1839, 2684, 2029, 2721], [2041, 2684, 2089, 2712], [2100, 2684, 2174, 2712], [374, 2734, 466, 2763], [482, 2743, 635, 2771], [650, 2734, 709, 2762], [723, 2734, 884, 2762], [898, 2734, 935, 2762], [950, 2734, 1045, 2763], [1060, 2734, 1119, 2762], [1132, 2734, 1256, 2763], [1271, 2734, 1408, 2762], [1422, 2738, 1453, 2762], [1468, 2734, 1518, 2762], [1532, 2734, 1660, 2771], [1674, 2734, 1826, 2771], [1840, 2734, 1929, 2763], [1943, 2734, 1980, 2762], [1991, 2734, 2041, 2762], [2056, 2738, 2175, 2762], [377, 2785, 508, 2813], [521, 2789, 550, 2813], [561, 2785, 636, 2813], [648, 2785, 785, 2813], [797, 2785, 925, 2822], [938, 2785, 1013, 2813], [1024, 2785, 1193, 2813], [1209, 2785, 1309, 2822], [1321, 2785, 1371, 2813], [1382, 2785, 1542, 2822], [1555, 2785, 1580, 2813], [1593, 2785, 1642, 2813], [1654, 2785, 1877, 2814], [1889, 2785, 2021, 2819], [2035, 2785, 2135, 2814], [2148, 2785, 2173, 2813], [1255, 2934, 1293, 2964], [550, 747, 580, 772], [791, 747, 821, 772], [337, 732, 347, 749], [338, 654, 347, 671], [337, 577, 346, 594], [337, 499, 347, 516], [337, 422, 347, 439], [338, 345, 347, 362], [591, 778, 660, 802], [673, 778, 706, 806], [307, 540, 324, 542], [307, 523, 324, 536], [307, 503, 324, 517], [307, 483, 324, 498], [408, 240, 556, 273], [571, 240, 735, 273], [750, 240, 893, 266], [830, 660, 878, 680], [831, 685, 953, 701], [832, 710, 872, 726], [1182, 747, 1212, 772], [1422, 747, 1452, 772], [1003, 732, 1013, 749], [1004, 664, 1013, 681], [1003, 596, 1012, 613], [1003, 528, 1013, 545], [1003, 460, 1013, 477], [1004, 392, 1013, 409], [1003, 325, 1013, 342], [1257, 778, 1326, 802], [1339, 778, 1372, 806], [973, 540, 990, 542], [973, 523, 990, 536], [973, 503, 990, 517], [973, 483, 990, 498], [1063, 240, 1210, 273], [1225, 240, 1390, 273], [1404, 240, 1570, 273], [1496, 660, 1544, 680], [1497, 685, 1619, 701], [1498, 710, 1537, 726], [1793, 747, 1823, 772], [2034, 747, 2064, 772], [1669, 732, 1679, 749], [1670, 646, 1679, 663], [1669, 561, 1678, 578], [1669, 476, 1679, 493], [1669, 391, 1679, 408], [1670, 306, 1679, 323], [1923, 778, 1992, 802], [2005, 778, 2038, 806], [1639, 540, 1656, 542], [1639, 523, 1656, 536], [1639, 503, 1656, 517], [1639, 483, 1656, 498], [1761, 240, 1909, 273], [1924, 240, 2089, 273], [2104, 240, 2205, 273], [2162, 660, 2210, 680], [2163, 685, 2285, 701], [2164, 710, 2203, 726], [376, 835, 484, 872], [502, 835, 552, 863], [581, 835, 742, 863], [761, 835, 866, 872], [884, 839, 915, 863], [934, 835, 1030, 863], [1049, 835, 1138, 863], [1158, 835, 1278, 870], [1298, 844, 1333, 864], [1352, 835, 1425, 863], [1443, 835, 1479, 863], [1495, 835, 1545, 863], [1563, 835, 1725, 872], [1745, 835, 1864, 864], [1883, 835, 2061, 872], [2079, 835, 2175, 863], [376, 886, 576, 923], [590, 886, 638, 914], [649, 886, 698, 914], [710, 886, 851, 914], [862, 886, 953, 915], [966, 895, 1130, 923], [1143, 886, 1321, 914], [1334, 886, 1364, 914], [1376, 886, 1426, 914], [1437, 886, 1647, 923], [376, 1019, 595, 1048], [610, 1019, 669, 1047], [682, 1028, 717, 1047], [730, 1028, 778, 1048], [791, 1019, 864, 1056], [876, 1023, 978, 1056], [990, 1019, 1040, 1047], [1053, 1019, 1126, 1047], [1138, 1019, 1279, 1056], [1292, 1019, 1340, 1047], [1352, 1019, 1390, 1047], [1404, 1019, 1606, 1047], [1625, 1019, 1689, 1047], [1702, 1019, 1830, 1056], [1843, 1019, 1995, 1056], [2008, 1019, 2097, 1048], [2110, 1028, 2173, 1048], [376, 1070, 531, 1098], [542, 1070, 582, 1107], [594, 1070, 720, 1107], [734, 1070, 772, 1098], [784, 1070, 920, 1098], [933, 1070, 980, 1098], [993, 1079, 1009, 1098], [1020, 1079, 1090, 1107], [1103, 1070, 1182, 1107], [1194, 1070, 1319, 1098], [1330, 1070, 1366, 1098], [1375, 1070, 1524, 1098], [1539, 1070, 1595, 1098], [1607, 1070, 1707, 1107], [1720, 1070, 1768, 1098], [1781, 1070, 1939, 1098], [1951, 1070, 2036, 1099], [2049, 1070, 2084, 1098], [2093, 1070, 2175, 1098], [377, 1121, 424, 1149], [440, 1121, 511, 1149], [523, 1121, 677, 1158], [689, 1121, 738, 1149], [749, 1121, 828, 1158], [842, 1121, 947, 1150], [959, 1121, 989, 1149], [1001, 1121, 1123, 1158], [1136, 1121, 1238, 1150], [1242, 1145, 1247, 1149], [1263, 1122, 1352, 1149], [1363, 1121, 1445, 1149], [1456, 1121, 1506, 1149], [1517, 1121, 1675, 1158], [1688, 1121, 1894, 1150], [1908, 1130, 1956, 1149], [1968, 1121, 2004, 1149], [2012, 1121, 2177, 1150], [439, 1215, 455, 1231], [479, 1205, 649, 1242], [661, 1205, 711, 1233], [722, 1209, 838, 1242], [851, 1205, 1001, 1234], [1013, 1205, 1044, 1233], [1056, 1205, 1106, 1233], [1118, 1205, 1219, 1242], [1231, 1205, 1393, 1242], [1406, 1205, 1618, 1242], [1632, 1205, 1765, 1233], [1779, 1205, 1905, 1242], [1918, 1205, 2056, 1240], [2069, 1205, 2095, 1233], [2107, 1205, 2175, 1233], [480, 1256, 577, 1284], [589, 1256, 636, 1284], [648, 1256, 763, 1293], [776, 1265, 847, 1293], [860, 1260, 996, 1284], [1009, 1256, 1165, 1284], [439, 1337, 455, 1353], [479, 1327, 540, 1355], [552, 1327, 673, 1355], [683, 1327, 722, 1364], [735, 1327, 879, 1356], [892, 1327, 948, 1355], [959, 1327, 1017, 1355], [1029, 1327, 1114, 1364], [1125, 1327, 1262, 1364], [1276, 1327, 1453, 1364], [1466, 1327, 1619, 1361], [1632, 1327, 1689, 1355], [1701, 1331, 1730, 1355], [1742, 1327, 1790, 1355], [1802, 1327, 1926, 1355], [1939, 1327, 2174, 1364], [479, 1378, 502, 1406], [512, 1387, 591, 1406], [439, 1460, 455, 1476], [479, 1450, 604, 1478], [616, 1450, 767, 1478], [778, 1450, 908, 1487], [920, 1450, 945, 1478], [958, 1450, 1008, 1478], [1019, 1450, 1125, 1478], [1135, 1454, 1166, 1478], [1179, 1450, 1302, 1479], [1315, 1459, 1331, 1478], [1342, 1450, 1534, 1487], [1548, 1450, 1687, 1478], [439, 1531, 455, 1547], [479, 1521, 683, 1549], [694, 1521, 837, 1549], [847, 1521, 927, 1558], [935, 1525, 964, 1549], [975, 1530, 1175, 1558], [1185, 1521, 1221, 1549], [1227, 1521, 1275, 1549], [1285, 1522, 1357, 1549], [1367, 1530, 1421, 1549], [1429, 1521, 1519, 1549], [1529, 1521, 1559, 1549], [1567, 1521, 1660, 1549], [1669, 1521, 1761, 1550], [1770, 1521, 1870, 1550], [1881, 1521, 1928, 1549], [1936, 1521, 1984, 1549], [1994, 1521, 2175, 1558], [480, 1572, 539, 1600], [551, 1572, 668, 1609], [681, 1572, 822, 1600], [839, 1572, 912, 1600], [923, 1572, 1004, 1600], [1017, 1572, 1080, 1600], [1091, 1572, 1141, 1600], [1153, 1572, 1316, 1609], [1328, 1572, 1432, 1600], [1444, 1572, 1521, 1600], [1533, 1572, 1564, 1600], [1576, 1572, 1635, 1600], [1648, 1572, 1837, 1609], [1848, 1581, 1919, 1609], [1931, 1576, 1985, 1600], [1995, 1572, 2034, 1600], [2046, 1572, 2174, 1609], [479, 1623, 528, 1651], [541, 1623, 626, 1651], [639, 1623, 714, 1651], [728, 1623, 764, 1651], [776, 1623, 901, 1660], [917, 1623, 1037, 1657], [1054, 1632, 1139, 1651], [1154, 1623, 1310, 1652], [1324, 1623, 1486, 1660], [1501, 1623, 1620, 1651], [1636, 1623, 1759, 1651], [1772, 1623, 1804, 1651], [1817, 1623, 1867, 1651], [1882, 1623, 1980, 1660], [1993, 1623, 2173, 1660], [479, 1674, 634, 1702], [652, 1675, 756, 1702], [767, 1683, 814, 1703], [826, 1674, 865, 1702], [878, 1678, 930, 1702], [941, 1674, 1031, 1702], [1043, 1674, 1132, 1703], [1143, 1674, 1249, 1702], [1262, 1674, 1292, 1702], [1304, 1678, 1393, 1702], [1407, 1674, 1442, 1702], [1451, 1674, 1544, 1703], [1556, 1674, 1675, 1711], [1688, 1674, 1740, 1702], [1747, 1674, 1810, 1711], [1821, 1674, 1851, 1702], [1864, 1674, 1982, 1711], [1995, 1674, 2052, 1702], [2065, 1674, 2173, 1702], [479, 1724, 639, 1761], [651, 1724, 753, 1752], [765, 1733, 849, 1752], [861, 1724, 1033, 1761], [438, 1808, 499, 1836], [512, 1808, 604, 1837], [615, 1808, 693, 1845], [707, 1808, 737, 1836], [748, 1808, 854, 1845], [867, 1808, 905, 1836], [919, 1808, 982, 1836], [996, 1808, 1079, 1837], [1090, 1808, 1159, 1837], [1170, 1808, 1243, 1836], [1255, 1808, 1378, 1836], [1390, 1808, 1540, 1836], [1551, 1808, 1680, 1845], [1693, 1808, 1750, 1836], [1762, 1808, 1893, 1836], [1906, 1808, 2028, 1845], [2041, 1808, 2176, 1843], [376, 1868, 524, 1896], [536, 1863, 567, 1887], [579, 1859, 751, 1896], [763, 1859, 911, 1887], [923, 1859, 954, 1887], [965, 1859, 1106, 1896], [1122, 1859, 1294, 1893], [1308, 1859, 1356, 1887], [1367, 1859, 1417, 1887], [1428, 1868, 1560, 1896], [1571, 1859, 1607, 1887], [1617, 1859, 1708, 1888], [1720, 1859, 1881, 1896], [1893, 1860, 1968, 1887], [1981, 1868, 2080, 1887], [2093, 1863, 2124, 1887], [2135, 1859, 2174, 1887], [376, 1910, 425, 1938], [437, 1910, 505, 1938], [517, 1910, 634, 1944], [647, 1910, 752, 1938], [765, 1910, 813, 1938], [826, 1919, 912, 1938], [924, 1919, 1034, 1938], [1047, 1919, 1064, 1938], [1074, 1910, 1149, 1947], [1161, 1910, 1271, 1947], [1284, 1910, 1320, 1938], [1331, 1919, 1477, 1947], [1490, 1910, 1516, 1938], [1528, 1910, 1677, 1947], [1691, 1910, 1739, 1938], [1751, 1910, 1853, 1939], [1865, 1910, 2000, 1938], [2013, 1910, 2124, 1938], [2135, 1910, 2174, 1938], [375, 1961, 535, 1998], [375, 2075, 763, 2119], [387, 2151, 396, 2158], [376, 2160, 430, 2188], [445, 2160, 677, 2197], [689, 2160, 795, 2197], [807, 2160, 949, 2188], [962, 2164, 1086, 2197], [1097, 2160, 1177, 2188], [1189, 2160, 1309, 2197], [1322, 2164, 1422, 2197], [1434, 2159, 1852, 2194], [1866, 2159, 2177, 2194], [377, 2209, 656, 2239], [670, 2210, 962, 2244], [976, 2210, 1284, 2239], [1297, 2210, 1356, 2238], [1367, 2209, 1762, 2239], [1775, 2210, 2097, 2245], [2108, 2210, 2175, 2245], [376, 2261, 483, 2298], [495, 2261, 545, 2289], [557, 2261, 629, 2298], [640, 2261, 747, 2298], [759, 2261, 880, 2298], [892, 2265, 923, 2289], [935, 2261, 985, 2289], [997, 2261, 1116, 2298], [1128, 2261, 1164, 2289], [1173, 2261, 1232, 2289], [1244, 2261, 1437, 2298], [1453, 2262, 1507, 2289], [1519, 2261, 1611, 2289], [1622, 2262, 1657, 2289], [1671, 2261, 1840, 2289], [1852, 2261, 1900, 2289], [1910, 2261, 2051, 2298], [2066, 2260, 2128, 2295], [2143, 2265, 2174, 2289], [376, 2321, 430, 2340], [442, 2312, 593, 2346], [608, 2312, 665, 2340], [679, 2312, 708, 2341], [720, 2312, 844, 2349], [856, 2312, 903, 2340], [915, 2312, 1039, 2349], [1051, 2321, 1085, 2340], [1099, 2316, 1129, 2340], [1142, 2312, 1191, 2340], [1203, 2312, 1388, 2349], [1400, 2312, 1436, 2340], [1445, 2312, 1595, 2349], [1607, 2312, 1840, 2341], [1851, 2312, 2013, 2349], [377, 2441, 651, 2483], [399, 2547, 440, 2581], [464, 2548, 508, 2575], [522, 2548, 552, 2575], [567, 2547, 694, 2581], [707, 2548, 730, 2576], [743, 2548, 786, 2575], [801, 2547, 1028, 2581], [1043, 2547, 1099, 2575], [1110, 2548, 1153, 2575], [1168, 2547, 1203, 2575], [1218, 2548, 1246, 2575], [1259, 2547, 1443, 2584], [1461, 2548, 1528, 2575], [1540, 2547, 1638, 2584], [1649, 2556, 1789, 2584], [1801, 2547, 1888, 2584], [1901, 2547, 2029, 2576], [2043, 2547, 2173, 2584], [466, 2598, 524, 2626], [536, 2598, 725, 2626], [737, 2598, 954, 2635], [972, 2599, 1062, 2626], [1074, 2599, 1285, 2627], [1297, 2608, 1337, 2626], [1348, 2599, 1450, 2635], [1461, 2599, 1652, 2635], [1670, 2598, 1763, 2633], [1777, 2598, 1953, 2635], [1964, 2598, 2054, 2627], [399, 2653, 440, 2687], [465, 2653, 501, 2682], [517, 2654, 553, 2681], [557, 2677, 562, 2681], [578, 2653, 677, 2687], [705, 2644, 714, 2651], [694, 2653, 731, 2681], [748, 2653, 891, 2687], [909, 2653, 968, 2681], [981, 2654, 1006, 2682], [1022, 2654, 1057, 2681], [1074, 2654, 1276, 2681], [1302, 2653, 1408, 2690], [1423, 2653, 1514, 2681], [1528, 2653, 1620, 2681], [1643, 2653, 1796, 2690], [1807, 2653, 1926, 2682], [1937, 2653, 2098, 2682], [2112, 2653, 2175, 2682], [462, 2704, 606, 2732], [618, 2704, 915, 2741], [924, 2704, 1014, 2738], [1027, 2713, 1105, 2741], [1117, 2704, 1165, 2738], [1179, 2704, 1269, 2733], [399, 2759, 440, 2793], [464, 2760, 496, 2787], [511, 2759, 667, 2787], [679, 2763, 707, 2787], [719, 2759, 754, 2787], [771, 2759, 920, 2788], [932, 2759, 1034, 2788], [1048, 2759, 1152, 2788], [1172, 2759, 1291, 2796], [1303, 2759, 1350, 2787], [1361, 2759, 1514, 2787], [1528, 2759, 1584, 2787], [1595, 2759, 1725, 2796], [1736, 2759, 1954, 2793], [1967, 2759, 2178, 2796], [465, 2810, 522, 2844], [535, 2810, 612, 2838], [624, 2810, 747, 2844], [764, 2810, 850, 2839], [869, 2810, 961, 2839], [974, 2810, 1219, 2839], [1234, 2810, 1438, 2847], [1255, 2935, 1294, 2964], [399, 242, 440, 276], [465, 243, 492, 270], [506, 242, 598, 270], [618, 242, 788, 271], [801, 242, 1086, 279], [1098, 251, 1199, 270], [1213, 242, 1340, 279], [1353, 242, 1547, 270], [1559, 242, 1720, 270], [1738, 243, 1771, 270], [1781, 242, 1878, 276], [1892, 242, 1982, 271], [399, 296, 440, 331], [465, 297, 556, 331], [569, 297, 687, 325], [704, 297, 850, 334], [863, 297, 934, 326], [947, 297, 1145, 326], [1155, 297, 1323, 325], [1341, 297, 1369, 325], [1381, 297, 1503, 326], [1515, 297, 1729, 334], [1741, 297, 1925, 334], [1942, 298, 2031, 326], [2039, 298, 2175, 334], [465, 347, 745, 376], [399, 402, 440, 436], [464, 403, 491, 430], [505, 402, 596, 436], [609, 403, 642, 430], [656, 403, 800, 436], [812, 403, 835, 431], [848, 402, 965, 436], [979, 402, 1036, 430], [1047, 402, 1083, 431], [1097, 402, 1270, 431], [1289, 402, 1412, 431], [1423, 402, 1628, 439], [1639, 402, 1710, 431], [1723, 402, 2002, 439], [2015, 411, 2123, 430], [2142, 403, 2174, 430], [466, 453, 495, 482], [510, 453, 572, 487], [586, 453, 615, 482], [629, 453, 787, 487], [802, 453, 859, 481], [872, 453, 901, 482], [914, 454, 938, 482], [951, 453, 1076, 490], [1090, 453, 1210, 487], [1225, 453, 1439, 490], [1444, 453, 1499, 490], [1508, 453, 1652, 481], [1664, 454, 1824, 490], [1838, 454, 1913, 481], [1924, 454, 2019, 487], [2033, 453, 2123, 482], [399, 509, 440, 542], [465, 499, 493, 536], [497, 532, 501, 536], [515, 508, 653, 542], [666, 509, 689, 537], [702, 509, 726, 536], [728, 508, 812, 545], [827, 508, 883, 536], [894, 509, 917, 537], [931, 509, 964, 536], [979, 509, 1172, 536], [1190, 508, 1316, 545], [1328, 508, 1460, 545], [1471, 508, 1576, 536], [1589, 509, 1767, 536], [1779, 508, 1818, 545], [1831, 508, 1964, 536], [1977, 508, 2050, 537], [2063, 508, 2179, 537], [465, 560, 498, 587], [507, 559, 666, 588], [679, 560, 709, 587], [721, 559, 784, 596], [797, 559, 988, 596], [1004, 560, 1197, 588], [1210, 560, 1240, 587], [1251, 559, 1369, 596], [1378, 559, 1548, 596], [1558, 559, 1687, 596], [1698, 559, 1747, 593], [1760, 568, 1852, 596], [1869, 559, 2015, 588], [2031, 559, 2177, 596], [465, 610, 555, 639], [399, 665, 440, 699], [465, 665, 607, 699], [620, 665, 668, 699], [683, 665, 744, 699], [759, 665, 788, 694], [806, 666, 874, 693], [885, 666, 1100, 702], [1112, 665, 1250, 693], [1264, 665, 1311, 693], [1323, 665, 1395, 693], [1407, 665, 1552, 694], [1563, 665, 1802, 702], [1819, 666, 1853, 693], [1864, 665, 2069, 702], [2082, 665, 2120, 702], [2126, 665, 2173, 693], [464, 715, 536, 743], [548, 715, 767, 743], [780, 715, 965, 752], [978, 725, 1018, 743], [1028, 715, 1172, 743], [1184, 716, 1336, 752], [1349, 715, 1527, 751], [1541, 715, 1601, 752], [1616, 715, 1676, 743], [1680, 715, 1774, 750], [399, 770, 440, 804], [465, 761, 494, 798], [498, 794, 503, 798], [517, 770, 659, 804], [672, 771, 697, 799], [711, 771, 735, 798], [736, 770, 823, 807], [838, 770, 897, 798], [907, 771, 932, 799], [945, 771, 972, 798], [976, 794, 981, 798], [995, 771, 1196, 798], [1214, 770, 1343, 807], [1356, 770, 1492, 807], [1504, 770, 1613, 798], [1625, 771, 1810, 798], [1821, 770, 1862, 807], [1875, 770, 2102, 798], [2116, 770, 2174, 798], [464, 821, 623, 849], [635, 821, 773, 849], [785, 821, 860, 850], [873, 821, 992, 850], [1009, 822, 1297, 858], [1311, 820, 1685, 856], [1699, 821, 1790, 850], [1808, 821, 1898, 850], [1909, 820, 2098, 850], [2116, 821, 2177, 849], [465, 872, 849, 909], [853, 872, 993, 901], [998, 872, 1075, 901], [379, 927, 440, 961], [465, 927, 593, 961], [612, 928, 647, 955], [664, 928, 688, 955], [692, 951, 708, 961], [726, 927, 960, 961], [978, 928, 1016, 955], [1032, 928, 1067, 961], [1085, 928, 1239, 961], [1256, 928, 1280, 956], [1298, 928, 1353, 961], [1371, 927, 1484, 961], [1502, 928, 1540, 955], [1557, 928, 1585, 955], [1590, 951, 1595, 955], [1625, 927, 1790, 956], [1805, 927, 1961, 955], [1976, 927, 2072, 955], [2087, 927, 2175, 955], [464, 978, 657, 1006], [674, 978, 737, 1006], [749, 978, 854, 1015], [867, 978, 924, 1006], [937, 978, 1119, 1015], [1131, 978, 1167, 1006], [1176, 978, 1305, 1006], [1317, 978, 1486, 1015], [1501, 979, 1574, 1007], [1588, 978, 1671, 1006], [1689, 978, 1781, 1015], [1798, 978, 1877, 1007], [379, 1033, 440, 1067], [465, 1034, 502, 1061], [516, 1034, 544, 1061], [548, 1057, 553, 1061], [567, 1033, 726, 1061], [738, 1033, 796, 1061], [808, 1034, 833, 1061], [847, 1034, 879, 1061], [893, 1033, 1077, 1062], [1097, 1033, 1216, 1062], [1227, 1033, 1360, 1070], [1373, 1033, 1435, 1062], [1445, 1038, 1606, 1061], [1619, 1038, 1763, 1070], [1775, 1033, 1878, 1070], [1891, 1034, 1920, 1061], [1931, 1033, 2051, 1061], [2062, 1043, 2179, 1070], [465, 1084, 549, 1113], [563, 1084, 666, 1112], [680, 1084, 710, 1112], [723, 1084, 944, 1112], [959, 1084, 1106, 1121], [1120, 1084, 1210, 1113], [379, 1139, 440, 1173], [465, 1139, 561, 1167], [574, 1140, 610, 1167], [624, 1139, 791, 1173], [805, 1139, 920, 1167], [930, 1140, 962, 1167], [977, 1139, 1160, 1173], [1174, 1140, 1210, 1167], [1224, 1139, 1344, 1167], [1355, 1139, 1438, 1167], [1454, 1139, 1581, 1176], [1593, 1139, 1658, 1167], [1671, 1139, 1909, 1176], [1920, 1139, 1998, 1176], [2010, 1139, 2131, 1168], [2143, 1143, 2173, 1167], [465, 1193, 526, 1218], [538, 1189, 642, 1217], [654, 1198, 769, 1218], [782, 1193, 841, 1217], [854, 1189, 885, 1217], [897, 1189, 1014, 1217], [1026, 1198, 1130, 1226], [1147, 1189, 1276, 1218], [1286, 1189, 1324, 1226], [1326, 1189, 1575, 1226], [1588, 1189, 1703, 1226], [1716, 1189, 1777, 1217], [1788, 1189, 1895, 1225], [1909, 1189, 2051, 1218], [379, 1244, 440, 1278], [465, 1244, 503, 1272], [522, 1244, 608, 1272], [626, 1244, 685, 1272], [702, 1245, 746, 1272], [766, 1244, 920, 1272], [956, 1244, 985, 1272], [1002, 1245, 1071, 1272], [1088, 1244, 1225, 1273], [1244, 1244, 1652, 1281], [1670, 1244, 1845, 1281], [1862, 1244, 1910, 1272], [1927, 1244, 2036, 1272], [2053, 1245, 2174, 1273], [465, 1295, 629, 1323], [648, 1295, 743, 1324], [751, 1295, 880, 1324], [891, 1295, 929, 1332], [933, 1296, 1091, 1332], [1103, 1295, 1253, 1329], [1266, 1295, 1499, 1330], [1513, 1295, 1603, 1324], [378, 1350, 440, 1384], [465, 1351, 503, 1378], [517, 1351, 543, 1378], [557, 1350, 729, 1378], [748, 1350, 907, 1387], [919, 1354, 1041, 1379], [1053, 1350, 1194, 1378], [1207, 1350, 1255, 1378], [1267, 1350, 1480, 1387], [1491, 1350, 1647, 1387], [1660, 1350, 1734, 1379], [1747, 1350, 1857, 1387], [1869, 1350, 2060, 1378], [2079, 1350, 2176, 1379], [463, 1401, 591, 1430], [602, 1411, 642, 1429], [656, 1401, 781, 1430], [792, 1401, 854, 1430], [865, 1401, 1088, 1438], [1102, 1401, 1199, 1436], [1213, 1401, 1319, 1429], [1335, 1401, 1421, 1430], [378, 1455, 440, 1490], [465, 1457, 502, 1484], [516, 1457, 542, 1484], [555, 1456, 724, 1484], [740, 1456, 910, 1485], [920, 1457, 1158, 1493], [1176, 1456, 1295, 1484], [1307, 1456, 1470, 1490], [1484, 1456, 1545, 1484], [1557, 1456, 1679, 1490], [1694, 1456, 1869, 1493], [1885, 1456, 1971, 1485], [378, 1511, 440, 1545], [464, 1512, 489, 1540], [504, 1512, 548, 1539], [563, 1511, 789, 1539], [803, 1511, 862, 1539], [874, 1512, 919, 1539], [934, 1511, 971, 1539], [986, 1512, 1016, 1539], [1030, 1511, 1221, 1548], [1241, 1511, 1270, 1539], [1283, 1520, 1350, 1540], [1364, 1511, 1453, 1540], [1472, 1512, 1626, 1548], [1639, 1511, 1775, 1540], [1788, 1511, 2173, 1548], [466, 1562, 637, 1599], [649, 1562, 696, 1590], [706, 1562, 803, 1599], [813, 1562, 994, 1590], [1010, 1563, 1100, 1590], [1110, 1563, 1316, 1591], [1328, 1572, 1366, 1590], [1377, 1563, 1476, 1599], [1487, 1563, 1674, 1599], [1690, 1562, 1996, 1597], [2009, 1562, 2176, 1590], [465, 1612, 555, 1641], [379, 1667, 440, 1701], [464, 1668, 489, 1696], [502, 1668, 537, 1695], [541, 1691, 546, 1695], [560, 1667, 791, 1701], [804, 1668, 848, 1695], [862, 1667, 890, 1695], [894, 1691, 899, 1695], [913, 1668, 942, 1695], [956, 1667, 1143, 1704], [1158, 1667, 1215, 1695], [1226, 1668, 1250, 1696], [1264, 1668, 1289, 1695], [1303, 1667, 1444, 1696], [1463, 1667, 1546, 1695], [1558, 1667, 1811, 1696], [1823, 1667, 1923, 1704], [1935, 1667, 2177, 1696], [464, 1718, 492, 1746], [504, 1718, 948, 1755], [961, 1718, 1119, 1755], [1137, 1719, 1170, 1746], [1181, 1718, 1315, 1747], [1325, 1718, 1539, 1755], [1553, 1718, 1643, 1747], [379, 1773, 440, 1807], [465, 1773, 590, 1802], [638, 1773, 740, 1802], [762, 1773, 905, 1802], [927, 1773, 986, 1801], [1007, 1777, 1065, 1801], [1086, 1782, 1264, 1810], [1289, 1773, 1381, 1802], [1429, 1774, 1511, 1802], [1534, 1773, 1852, 1809], [1865, 1773, 2175, 1804], [467, 1828, 561, 1853], [568, 1824, 699, 1855], [379, 1879, 440, 1913], [465, 1880, 501, 1907], [521, 1880, 558, 1907], [578, 1879, 670, 1916], [691, 1880, 717, 1907], [737, 1880, 791, 1913], [811, 1880, 836, 1908], [856, 1879, 1004, 1913], [1026, 1879, 1085, 1907], [1103, 1879, 1138, 1908], [1157, 1879, 1233, 1907], [1271, 1879, 1300, 1907], [1318, 1879, 1436, 1907], [1454, 1888, 1593, 1916], [1612, 1879, 1775, 1916], [1792, 1879, 1841, 1907], [1857, 1879, 1963, 1907], [1980, 1879, 2174, 1907], [465, 1930, 682, 1967], [701, 1930, 860, 1958], [871, 1934, 978, 1967], [992, 1930, 1216, 1959], [1228, 1930, 1406, 1967], [1424, 1930, 1510, 1959], [379, 1985, 440, 2019], [465, 1986, 498, 2013], [512, 1986, 528, 2014], [532, 2009, 537, 2013], [552, 1985, 640, 2014], [641, 1985, 674, 2013], [689, 1985, 748, 2013], [761, 1986, 791, 2013], [806, 1986, 875, 2013], [898, 1985, 1121, 2022], [1135, 1985, 1234, 2022], [1246, 1994, 1392, 2022], [1405, 1985, 1487, 2013], [1498, 1985, 1628, 2013], [1639, 1985, 1835, 2022], [1854, 1985, 2007, 2014], [2020, 1985, 2173, 2022], [466, 2036, 629, 2073], [646, 2037, 736, 2064], [748, 2037, 846, 2065], [861, 2036, 934, 2073], [951, 2036, 1074, 2073], [1088, 2035, 1335, 2070], [1349, 2036, 1439, 2065], [378, 2091, 440, 2125], [465, 2091, 503, 2119], [517, 2091, 701, 2120], [714, 2091, 773, 2119], [784, 2092, 808, 2120], [823, 2091, 957, 2119], [975, 2091, 1026, 2120], [1038, 2091, 1111, 2119], [1123, 2091, 1272, 2120], [1283, 2091, 1508, 2119], [1521, 2091, 1580, 2119], [1592, 2091, 1711, 2119], [1724, 2091, 1881, 2120], [1891, 2091, 1982, 2128], [1993, 2091, 2173, 2128], [465, 2141, 632, 2169], [644, 2141, 740, 2170], [757, 2141, 977, 2169], [987, 2141, 1115, 2170], [1126, 2141, 1164, 2178], [1171, 2141, 1335, 2178], [1347, 2142, 1455, 2175], [1470, 2141, 1566, 2176], [1580, 2141, 1670, 2170], [378, 2196, 440, 2230], [465, 2196, 501, 2224], [515, 2196, 693, 2225], [706, 2196, 763, 2224], [774, 2197, 802, 2224], [817, 2196, 905, 2224], [924, 2196, 952, 2224], [963, 2196, 1126, 2224], [1136, 2196, 1326, 2233], [1339, 2196, 1496, 2233], [1507, 2196, 1554, 2224], [1565, 2205, 1679, 2225], [1690, 2196, 1840, 2233], [1853, 2196, 1924, 2225], [1937, 2196, 2130, 2233], [2144, 2200, 2173, 2224], [465, 2247, 608, 2284], [626, 2247, 754, 2276], [765, 2247, 803, 2284], [806, 2247, 1038, 2275], [1048, 2248, 1185, 2284], [1197, 2247, 1260, 2276], [1272, 2248, 1380, 2281], [1394, 2246, 1647, 2282], [1661, 2247, 1751, 2276], [378, 2302, 440, 2336], [465, 2302, 658, 2336], [679, 2302, 727, 2336], [748, 2302, 840, 2336], [861, 2303, 890, 2330], [926, 2302, 977, 2331], [994, 2302, 1044, 2330], [1062, 2302, 1185, 2339], [1204, 2311, 1413, 2339], [1430, 2306, 1508, 2330], [1526, 2302, 1563, 2330], [1579, 2311, 1596, 2330], [1612, 2302, 1780, 2330], [1796, 2302, 1993, 2339], [2012, 2302, 2175, 2339], [462, 2353, 694, 2381], [704, 2354, 939, 2390], [955, 2353, 1130, 2390], [1140, 2353, 1228, 2386], [1246, 2353, 1364, 2382], [1378, 2353, 1444, 2386], [1459, 2354, 1543, 2382], [1556, 2353, 1581, 2386], [1593, 2363, 1636, 2390], [1649, 2353, 1794, 2381], [379, 2408, 440, 2442], [465, 2409, 497, 2436], [511, 2408, 785, 2442], [799, 2409, 834, 2436], [847, 2408, 951, 2442], [965, 2409, 990, 2436], [1004, 2408, 1032, 2436], [1036, 2432, 1041, 2436], [1055, 2408, 1174, 2442], [1189, 2408, 1246, 2436], [1258, 2408, 1295, 2436], [1310, 2408, 1339, 2437], [1352, 2408, 1486, 2445], [1504, 2408, 1567, 2436], [1579, 2408, 1704, 2437], [1716, 2408, 1880, 2445], [1892, 2408, 1928, 2436], [1937, 2408, 2044, 2436], [2056, 2409, 2174, 2437], [465, 2459, 629, 2487], [647, 2459, 851, 2488], [863, 2459, 901, 2496], [908, 2459, 1155, 2496], [1164, 2459, 1387, 2493], [1405, 2459, 1498, 2494], [1511, 2459, 1602, 2488], [379, 2513, 440, 2548], [465, 2515, 499, 2542], [513, 2514, 636, 2548], [650, 2515, 680, 2542], [695, 2523, 751, 2543], [763, 2514, 891, 2551], [905, 2514, 962, 2542], [974, 2514, 1009, 2542], [1024, 2514, 1182, 2543], [1201, 2514, 1392, 2551], [1405, 2514, 1487, 2542], [1498, 2514, 1647, 2542], [1659, 2514, 1854, 2551], [1865, 2514, 2174, 2551], [466, 2564, 524, 2592], [536, 2564, 898, 2601], [910, 2564, 946, 2592], [955, 2564, 1003, 2592], [1017, 2565, 1076, 2592], [1087, 2564, 1198, 2593], [1216, 2564, 1375, 2592], [1386, 2568, 1493, 2601], [1507, 2564, 1625, 2593], [1637, 2564, 1815, 2601], [1828, 2564, 1896, 2601], [1908, 2564, 1999, 2593], [379, 2619, 440, 2653], [465, 2620, 489, 2647], [502, 2620, 526, 2647], [530, 2643, 534, 2647], [548, 2619, 728, 2648], [745, 2619, 877, 2648], [888, 2619, 1088, 2647], [1099, 2619, 1134, 2647], [1142, 2619, 1190, 2647], [1201, 2619, 1349, 2648], [1360, 2619, 1395, 2647], [1404, 2628, 1420, 2647], [1432, 2628, 1498, 2647], [1508, 2619, 1543, 2647], [1551, 2619, 1691, 2647], [1703, 2623, 1864, 2647], [1875, 2623, 2033, 2656], [2049, 2619, 2174, 2648], [465, 2670, 503, 2707], [510, 2670, 630, 2699], [637, 2670, 788, 2707], [806, 2670, 1007, 2704], [1021, 2670, 1111, 2699], [378, 2725, 440, 2759], [465, 2726, 491, 2753], [505, 2726, 529, 2753], [533, 2749, 538, 2753], [552, 2725, 729, 2754], [743, 2725, 802, 2753], [812, 2726, 836, 2754], [841, 2725, 889, 2754], [903, 2726, 1041, 2762], [1059, 2725, 1212, 2753], [1225, 2725, 1360, 2762], [1372, 2725, 1512, 2753], [1525, 2725, 1555, 2753], [1569, 2725, 1667, 2762], [1678, 2725, 1866, 2762], [1884, 2725, 2177, 2759], [465, 2776, 555, 2805], [1255, 2935, 1294, 2963], [379, 242, 440, 276], [465, 243, 498, 270], [513, 242, 643, 271], [664, 242, 693, 270], [706, 242, 802, 270], [815, 242, 978, 279], [990, 242, 1038, 270], [1055, 242, 1092, 270], [1104, 242, 1178, 270], [1191, 242, 1339, 271], [1352, 242, 1524, 279], [1545, 242, 1707, 270], [1720, 246, 1829, 279], [1844, 242, 1985, 271], [1999, 242, 2177, 279], [465, 292, 893, 321], [907, 292, 943, 320], [952, 292, 1044, 326], [1058, 292, 1148, 321], [379, 347, 440, 381], [465, 348, 498, 375], [518, 347, 647, 376], [684, 347, 713, 375], [730, 347, 852, 384], [870, 347, 1022, 384], [1041, 347, 1204, 384], [1221, 347, 1269, 375], [1286, 356, 1403, 376], [1421, 347, 1634, 384], [1652, 364, 1662, 367], [1683, 347, 1869, 384], [1886, 351, 1917, 375], [1935, 347, 2008, 375], [2026, 347, 2174, 376], [465, 398, 694, 426], [711, 399, 802, 426], [812, 398, 951, 427], [961, 398, 1074, 427], [1089, 398, 1263, 432], [1277, 397, 1530, 433], [1544, 398, 1634, 427], [378, 453, 440, 487], [465, 453, 502, 481], [516, 454, 542, 481], [546, 477, 551, 481], [565, 453, 662, 487], [675, 454, 712, 481], [726, 454, 738, 481], [742, 477, 747, 481], [761, 454, 804, 481], [818, 453, 929, 487], [944, 453, 1001, 481], [1013, 454, 1039, 481], [1052, 454, 1076, 481], [1080, 477, 1085, 481], [1098, 453, 1192, 481], [1211, 454, 1424, 490], [1434, 453, 1586, 482], [1605, 453, 1715, 487], [1729, 453, 1819, 482], [378, 508, 440, 542], [464, 509, 487, 537], [502, 508, 590, 542], [603, 509, 628, 536], [642, 508, 667, 537], [672, 532, 676, 536], [691, 509, 822, 542], [836, 508, 864, 537], [879, 509, 907, 536], [911, 532, 915, 536], [928, 509, 1047, 542], [1061, 508, 1118, 536], [1130, 509, 1159, 536], [1173, 509, 1197, 536], [1201, 532, 1205, 536], [1218, 509, 1335, 537], [1355, 508, 1540, 545], [1554, 508, 1611, 536], [1624, 508, 1764, 537], [1776, 508, 1823, 536], [1834, 508, 1906, 536], [1918, 508, 2062, 537], [2074, 508, 2174, 545], [464, 559, 701, 587], [713, 559, 763, 588], [774, 559, 940, 587], [951, 559, 1098, 587], [1115, 560, 1230, 588], [1237, 559, 1342, 596], [1355, 558, 1519, 593], [1533, 559, 1623, 588], [379, 614, 440, 648], [465, 615, 491, 642], [505, 615, 529, 642], [533, 638, 538, 642], [551, 614, 665, 643], [678, 614, 737, 642], [748, 614, 785, 642], [799, 615, 913, 643], [931, 614, 1025, 642], [1037, 618, 1194, 648], [1207, 623, 1287, 648], [1302, 614, 1411, 651], [1424, 614, 1483, 642], [1494, 614, 1757, 642], [1777, 614, 1836, 642], [1846, 614, 1963, 643], [1976, 614, 2014, 651], [2019, 614, 2177, 648], [465, 664, 657, 700], [671, 665, 761, 694], [379, 720, 440, 754], [465, 721, 497, 748], [511, 721, 600, 748], [614, 720, 672, 748], [683, 721, 721, 748], [726, 720, 774, 749], [788, 720, 847, 748], [866, 720, 999, 748], [1012, 720, 1257, 757], [1270, 720, 1410, 748], [1423, 720, 1496, 749], [1508, 720, 1602, 757], [1614, 724, 1679, 748], [1693, 720, 1870, 757], [1882, 720, 1930, 748], [1942, 720, 2015, 748], [2027, 720, 2173, 749], [465, 770, 694, 798], [709, 770, 775, 799], [789, 770, 918, 807], [927, 770, 1024, 804], [1038, 769, 1243, 804], [1256, 770, 1346, 799], [1365, 770, 1425, 798], [1446, 770, 1929, 799], [378, 825, 440, 859], [464, 826, 489, 854], [505, 825, 675, 859], [691, 826, 721, 853], [738, 825, 853, 859], [870, 826, 907, 853], [924, 826, 953, 853], [954, 825, 1060, 862], [1078, 825, 1137, 853], [1151, 826, 1186, 853], [1203, 825, 1382, 853], [1408, 825, 1559, 854], [1573, 825, 1750, 853], [1765, 825, 1986, 862], [2009, 825, 2128, 854], [2143, 825, 2181, 862], [460, 876, 592, 913], [602, 876, 759, 910], [777, 876, 1006, 911], [1020, 876, 1098, 913], [1112, 876, 1202, 905], [379, 930, 440, 965], [465, 932, 503, 959], [518, 931, 669, 960], [684, 931, 743, 959], [755, 932, 799, 959], [815, 931, 883, 959], [906, 931, 1086, 959], [1101, 931, 1272, 959], [1285, 931, 1356, 960], [1372, 931, 1549, 968], [1564, 931, 1612, 959], [1625, 931, 1685, 959], [1698, 931, 1771, 959], [1785, 931, 1933, 960], [1946, 931, 2179, 959], [464, 982, 559, 1011], [568, 982, 697, 1011], [708, 992, 748, 1010], [760, 982, 910, 1019], [924, 982, 1114, 1019], [1128, 981, 1423, 1017], [1436, 982, 1526, 1011], [378, 1037, 440, 1071], [465, 1037, 501, 1066], [517, 1037, 535, 1066], [541, 1061, 545, 1065], [559, 1037, 718, 1066], [730, 1038, 758, 1065], [778, 1037, 840, 1065], [853, 1037, 930, 1074], [940, 1038, 1089, 1074], [1100, 1037, 1228, 1065], [1240, 1037, 1287, 1065], [1298, 1037, 1339, 1065], [1355, 1037, 1552, 1074], [1564, 1037, 1726, 1065], [1745, 1037, 1839, 1066], [1848, 1037, 1976, 1066], [1987, 1047, 2026, 1065], [2037, 1038, 2173, 1074], [464, 1088, 614, 1122], [628, 1088, 861, 1123], [875, 1088, 965, 1117], [379, 1143, 440, 1177], [465, 1144, 495, 1171], [508, 1144, 534, 1171], [538, 1167, 543, 1171], [557, 1143, 658, 1172], [671, 1147, 700, 1171], [712, 1143, 748, 1171], [767, 1143, 936, 1171], [948, 1143, 1163, 1171], [1175, 1143, 1211, 1171], [1220, 1152, 1333, 1171], [1351, 1143, 1485, 1177], [1499, 1142, 1835, 1178], [1849, 1143, 1982, 1172], [1997, 1143, 2083, 1172], [379, 1198, 440, 1232], [464, 1199, 508, 1226], [521, 1198, 676, 1227], [692, 1198, 753, 1226], [764, 1198, 954, 1235], [965, 1198, 1001, 1226], [1008, 1198, 1056, 1226], [1067, 1202, 1127, 1226], [1138, 1198, 1227, 1235], [1240, 1198, 1396, 1235], [1407, 1198, 1463, 1226], [1472, 1198, 1758, 1235], [1773, 1198, 1899, 1227], [1909, 1198, 1945, 1235], [1948, 1198, 2174, 1226], [464, 1249, 603, 1285], [618, 1248, 681, 1277], [695, 1249, 806, 1282], [822, 1247, 1038, 1283], [1054, 1248, 1146, 1277], [1171, 1248, 1261, 1277], [1274, 1248, 1465, 1277], [1489, 1248, 1551, 1276], [1576, 1247, 2068, 1277], [2093, 1249, 2176, 1277], [466, 1299, 1283, 1335], [1293, 1301, 1359, 1328], [1366, 1301, 1512, 1328], [1521, 1302, 1537, 1327], [1545, 1323, 1550, 1327], [378, 1354, 440, 1388], [464, 1355, 498, 1382], [513, 1354, 688, 1382], [702, 1354, 761, 1382], [774, 1354, 809, 1383], [824, 1355, 848, 1382], [850, 1354, 1038, 1391], [1060, 1354, 1204, 1391], [1217, 1354, 1449, 1391], [1461, 1354, 1644, 1382], [1655, 1354, 1738, 1382], [1752, 1363, 1769, 1382], [1781, 1354, 1865, 1382], [1878, 1354, 2033, 1382], [2045, 1354, 2179, 1391], [463, 1405, 591, 1434], [602, 1405, 640, 1442], [646, 1405, 693, 1433], [703, 1405, 865, 1433], [878, 1405, 1043, 1434], [1051, 1405, 1255, 1439], [1273, 1404, 1626, 1440], [1640, 1405, 1730, 1434], [378, 1460, 440, 1494], [464, 1461, 487, 1489], [501, 1461, 576, 1494], [587, 1461, 629, 1488], [642, 1461, 669, 1488], [674, 1484, 678, 1488], [691, 1460, 808, 1494], [822, 1460, 879, 1488], [888, 1461, 920, 1488], [934, 1461, 967, 1488], [980, 1460, 1158, 1497], [1175, 1460, 1380, 1488], [1392, 1460, 1427, 1488], [1435, 1460, 1705, 1488], [1716, 1460, 1851, 1488], [1863, 1460, 1893, 1488], [1904, 1460, 1952, 1488], [1963, 1460, 2174, 1488], [465, 1511, 501, 1539], [509, 1511, 769, 1548], [781, 1511, 858, 1539], [875, 1512, 995, 1539], [1005, 1512, 1215, 1548], [1228, 1511, 1434, 1545], [1447, 1511, 1537, 1540], [379, 1566, 440, 1600], [465, 1567, 503, 1594], [521, 1567, 566, 1594], [584, 1566, 643, 1594], [659, 1567, 696, 1594], [714, 1566, 862, 1594], [894, 1566, 945, 1594], [961, 1566, 1058, 1595], [1075, 1570, 1121, 1594], [1137, 1570, 1267, 1603], [1283, 1566, 1379, 1594], [1395, 1575, 1436, 1594], [1452, 1566, 1502, 1594], [1520, 1566, 1703, 1603], [1719, 1566, 1896, 1603], [1912, 1566, 2111, 1594], [2127, 1566, 2175, 1594], [465, 1617, 566, 1654], [577, 1617, 765, 1645], [782, 1617, 914, 1646], [926, 1617, 1160, 1645], [1169, 1617, 1342, 1654], [1354, 1617, 1417, 1646], [1425, 1617, 1604, 1646], [1612, 1617, 1764, 1654], [1778, 1617, 1971, 1652], [1989, 1617, 2075, 1646], [2094, 1618, 2176, 1646], [466, 1667, 1145, 1703], [379, 1722, 440, 1756], [464, 1723, 508, 1750], [521, 1722, 614, 1759], [632, 1722, 796, 1759], [809, 1722, 1007, 1751], [1025, 1722, 1267, 1759], [1280, 1731, 1378, 1759], [1391, 1731, 1504, 1751], [1515, 1722, 1727, 1759], [1746, 1723, 1778, 1750], [1789, 1722, 1989, 1759], [2001, 1722, 2038, 1759], [2044, 1722, 2091, 1750], [2103, 1722, 2173, 1750], [464, 1773, 683, 1801], [696, 1773, 882, 1810], [894, 1783, 934, 1801], [944, 1773, 1088, 1801], [1100, 1774, 1270, 1810], [1284, 1773, 1374, 1802], [379, 1828, 440, 1862], [466, 1828, 494, 1857], [507, 1828, 637, 1865], [649, 1829, 675, 1856], [690, 1828, 780, 1862], [795, 1828, 851, 1856], [864, 1828, 891, 1857], [907, 1828, 966, 1857], [984, 1828, 1150, 1856], [1162, 1828, 1297, 1856], [1310, 1828, 1357, 1856], [1367, 1828, 1575, 1865], [1588, 1828, 1779, 1856], [1789, 1828, 2001, 1865], [2017, 1828, 2174, 1857], [466, 1880, 496, 1907], [506, 1879, 622, 1908], [632, 1879, 830, 1916], [841, 1880, 1023, 1916], [1035, 1879, 1164, 1916], [1177, 1879, 1267, 1908], [1288, 1879, 1478, 1908], [379, 1934, 440, 1968], [464, 1935, 571, 1971], [588, 1935, 636, 1968], [653, 1935, 770, 1968], [787, 1935, 843, 1968], [861, 1934, 996, 1968], [1013, 1934, 1048, 1963], [1074, 1934, 1242, 1971], [1257, 1934, 1450, 1971], [1466, 1934, 1525, 1962], [1538, 1934, 1633, 1962], [1647, 1938, 1805, 1971], [1820, 1934, 2014, 1971], [2029, 1934, 2078, 1962], [2092, 1934, 2174, 1971], [466, 1985, 548, 2013], [561, 1985, 662, 2022], [676, 1985, 782, 2013], [797, 1985, 1006, 2022], [1019, 1985, 1057, 2022], [1063, 1985, 1111, 2013], [1125, 1985, 1197, 2013], [1209, 1986, 1373, 2022], [1386, 1985, 1567, 2022], [1580, 1995, 1621, 2013], [1635, 1985, 1802, 2022], [1813, 1986, 1919, 2018], [1938, 1985, 2075, 2018], [2091, 1985, 2174, 2013], [466, 2036, 1681, 2072], [378, 2090, 440, 2125], [465, 2092, 503, 2119], [523, 2091, 552, 2119], [556, 2115, 561, 2119], [580, 2091, 727, 2120], [765, 2091, 794, 2119], [812, 2091, 955, 2128], [974, 2091, 1203, 2128], [1223, 2091, 1385, 2128], [1403, 2091, 1451, 2119], [1469, 2091, 1519, 2119], [1537, 2091, 1628, 2119], [1646, 2092, 1742, 2119], [1762, 2091, 1821, 2119], [1840, 2090, 1865, 2126], [1871, 2091, 2116, 2128], [2153, 2092, 2177, 2120], [466, 2141, 713, 2178], [724, 2141, 786, 2170], [797, 2141, 966, 2178], [977, 2141, 1134, 2175], [1147, 2141, 1237, 2170], [379, 2196, 440, 2230], [465, 2197, 503, 2224], [521, 2196, 604, 2230], [624, 2196, 654, 2225], [673, 2196, 735, 2230], [756, 2196, 815, 2224], [831, 2197, 852, 2224], [870, 2196, 1006, 2224], [1039, 2196, 1068, 2224], [1085, 2196, 1219, 2224], [1235, 2196, 1431, 2233], [1448, 2196, 1611, 2233], [1626, 2196, 1700, 2225], [1717, 2196, 1903, 2233], [1919, 2200, 1950, 2224], [1967, 2196, 2175, 2224], [464, 2247, 642, 2284], [661, 2248, 694, 2275], [705, 2247, 924, 2275], [937, 2247, 1123, 2284], [1135, 2257, 1175, 2275], [1185, 2247, 1329, 2275], [1341, 2248, 1501, 2284], [1515, 2247, 1605, 2276], [379, 2302, 440, 2336], [466, 2302, 494, 2331], [508, 2302, 588, 2336], [601, 2303, 636, 2330], [650, 2302, 726, 2336], [740, 2302, 768, 2331], [782, 2302, 877, 2339], [891, 2302, 947, 2330], [959, 2303, 994, 2330], [1008, 2302, 1200, 2339], [1217, 2301, 1249, 2336], [1264, 2302, 1346, 2330], [1358, 2302, 1493, 2339], [1511, 2302, 1605, 2331], [1612, 2303, 1737, 2336], [1750, 2301, 1999, 2337], [2012, 2302, 2100, 2331], [2118, 2302, 2177, 2330], [466, 2353, 803, 2382], [379, 2408, 440, 2442], [465, 2409, 503, 2436], [520, 2408, 555, 2437], [572, 2408, 694, 2437], [721, 2408, 861, 2436], [876, 2408, 972, 2445], [988, 2408, 1166, 2445], [1182, 2408, 1230, 2436], [1244, 2408, 1294, 2436], [1309, 2408, 1492, 2436], [1508, 2408, 1663, 2445], [1678, 2408, 1835, 2445], [1848, 2408, 1998, 2445], [2024, 2409, 2048, 2437], [2068, 2408, 2177, 2445], [464, 2459, 579, 2496], [588, 2459, 687, 2496], [705, 2458, 927, 2493], [940, 2459, 1030, 2488], [379, 2514, 440, 2548], [465, 2514, 578, 2548], [594, 2514, 718, 2542], [731, 2515, 763, 2542], [786, 2514, 851, 2542], [865, 2518, 908, 2542], [921, 2514, 957, 2542], [968, 2518, 1127, 2551], [1138, 2514, 1377, 2551], [1393, 2514, 1517, 2543], [1535, 2514, 1559, 2542], [1579, 2514, 1789, 2542], [1804, 2514, 1991, 2551], [2016, 2514, 2073, 2547], [2094, 2514, 2178, 2543], [460, 2564, 597, 2593], [611, 2564, 720, 2601], [731, 2565, 887, 2601], [898, 2564, 1078, 2601], [1092, 2564, 1154, 2597], [1168, 2565, 1221, 2592], [379, 2618, 440, 2653], [465, 2620, 509, 2647], [523, 2619, 621, 2653], [635, 2620, 667, 2647], [682, 2619, 774, 2656], [787, 2619, 824, 2647], [838, 2619, 967, 2653], [982, 2619, 1039, 2647], [1051, 2620, 1084, 2647], [1096, 2619, 1187, 2656], [1206, 2619, 1392, 2656], [1405, 2619, 1615, 2656], [1629, 2619, 1787, 2648], [1807, 2619, 1865, 2647], [1875, 2619, 1991, 2648], [2004, 2619, 2042, 2656], [2043, 2619, 2176, 2656], [464, 2670, 621, 2704], [635, 2670, 847, 2705], [861, 2670, 951, 2699], [379, 2724, 440, 2759], [465, 2725, 680, 2762], [694, 2726, 736, 2759], [749, 2725, 839, 2759], [853, 2726, 893, 2759], [907, 2725, 1045, 2759], [1059, 2726, 1103, 2753], [1121, 2725, 1204, 2753], [1216, 2725, 1360, 2754], [1373, 2734, 1412, 2753], [1425, 2734, 1441, 2753], [1453, 2729, 1514, 2753], [1530, 2725, 1625, 2754], [1634, 2726, 1658, 2754], [1672, 2726, 1810, 2762], [1822, 2725, 1888, 2758], [1904, 2725, 1978, 2761], [1994, 2725, 2139, 2753], [2139, 2749, 2144, 2753], [1255, 2935, 1293, 2964], [379, 241, 440, 276], [465, 243, 503, 270], [519, 242, 673, 270], [688, 242, 747, 270], [761, 243, 796, 270], [812, 243, 933, 279], [959, 243, 1028, 270], [1041, 242, 1143, 279], [1157, 242, 1396, 271], [1409, 242, 1499, 279], [1513, 242, 1775, 279], [1788, 242, 1895, 279], [1920, 243, 1954, 270], [1965, 242, 2129, 271], [2144, 243, 2173, 270], [462, 292, 578, 321], [588, 292, 786, 329], [797, 293, 979, 329], [991, 292, 1129, 329], [1143, 292, 1233, 321], [379, 346, 440, 381], [465, 348, 588, 381], [603, 347, 664, 376], [670, 371, 686, 381], [701, 347, 844, 381], [860, 347, 908, 381], [923, 347, 1057, 384], [1073, 347, 1114, 381], [1130, 347, 1193, 381], [1209, 347, 1249, 381], [1266, 347, 1325, 375], [1338, 347, 1432, 381], [1447, 348, 1474, 375], [1497, 347, 1623, 376], [1637, 347, 1850, 384], [1863, 347, 1911, 375], [1923, 347, 2049, 384], [2062, 356, 2175, 384], [465, 398, 694, 426], [712, 399, 803, 427], [811, 399, 949, 435], [960, 398, 1260, 427], [1263, 422, 1268, 426], [378, 452, 440, 487], [466, 453, 496, 482], [510, 454, 545, 481], [559, 453, 645, 481], [658, 453, 717, 481], [728, 454, 752, 482], [766, 454, 795, 481], [799, 477, 804, 481], [818, 453, 987, 481], [1006, 453, 1146, 481], [1158, 453, 1271, 481], [1289, 453, 1318, 481], [1330, 462, 1397, 482], [1411, 453, 1550, 490], [1564, 453, 1662, 490], [1673, 453, 1847, 490], [1858, 453, 1992, 481], [2011, 453, 2174, 481], [465, 505, 578, 541], [589, 503, 658, 538], [672, 505, 867, 541], [878, 504, 914, 532], [924, 504, 1080, 538], [1094, 504, 1242, 541], [1253, 504, 1372, 532], [1384, 504, 1556, 541], [1568, 504, 1744, 541], [1762, 504, 1848, 533], [379, 558, 440, 593], [465, 560, 498, 587], [513, 559, 549, 587], [564, 559, 623, 587], [636, 560, 663, 587], [679, 559, 817, 588], [841, 559, 870, 587], [883, 559, 1124, 596], [1138, 559, 1301, 596], [1314, 559, 1362, 587], [1375, 559, 1568, 596], [1582, 559, 1656, 587], [1669, 559, 1818, 588], [1831, 559, 1863, 587], [1876, 559, 1977, 596], [1990, 559, 2179, 587], [464, 611, 557, 638], [570, 611, 785, 639], [798, 620, 838, 638], [851, 611, 955, 647], [968, 611, 1163, 647], [1178, 609, 1416, 645], [1436, 610, 1523, 639], [1546, 611, 1629, 639], [1644, 610, 2183, 646], [467, 661, 1319, 697], [379, 714, 440, 749], [465, 715, 533, 744], [537, 739, 542, 743], [555, 715, 612, 743], [625, 715, 684, 743], [695, 716, 719, 744], [732, 716, 748, 744], [752, 739, 757, 743], [771, 715, 860, 743], [864, 739, 869, 743], [887, 715, 1046, 744], [1058, 715, 1184, 743], [1195, 715, 1244, 743], [1255, 715, 1337, 752], [1348, 715, 1662, 743], [1673, 715, 1884, 752], [1896, 715, 2061, 752], [2079, 715, 2176, 744], [463, 766, 591, 795], [602, 776, 642, 794], [655, 766, 878, 803], [892, 766, 1166, 801], [1184, 766, 1270, 795], [379, 820, 440, 855], [465, 822, 501, 849], [514, 821, 570, 849], [582, 821, 638, 849], [648, 822, 671, 850], [684, 821, 794, 858], [811, 821, 987, 849], [998, 821, 1194, 858], [1206, 821, 1241, 849], [1249, 821, 1297, 849], [1308, 821, 1410, 858], [1421, 822, 1514, 849], [1527, 821, 1584, 849], [1595, 821, 1630, 849], [1643, 821, 1857, 858], [1874, 822, 1906, 849], [1916, 822, 1968, 849], [1984, 821, 2066, 858], [2079, 821, 2178, 849], [463, 873, 615, 909], [628, 872, 761, 908], [774, 872, 864, 901], [379, 926, 440, 961], [464, 928, 489, 956], [502, 927, 558, 955], [571, 927, 629, 955], [640, 928, 664, 956], [678, 928, 729, 955], [747, 927, 889, 955], [899, 927, 1064, 955], [1075, 927, 1257, 964], [1271, 927, 1301, 955], [1313, 927, 1407, 955], [1418, 927, 1499, 955], [1517, 928, 1550, 955], [1561, 927, 1668, 961], [1681, 928, 1747, 956], [1761, 927, 1851, 956], [378, 981, 440, 1016], [464, 983, 487, 1011], [500, 982, 565, 1016], [579, 982, 607, 1011], [620, 982, 655, 1016], [669, 982, 726, 1010], [736, 983, 759, 1011], [773, 983, 822, 1010], [841, 982, 943, 1011], [957, 982, 1065, 1019], [1076, 983, 1224, 1019], [1236, 982, 1304, 1011], [1315, 982, 1451, 1019], [1460, 983, 1653, 1019], [1671, 982, 1801, 1010], [1813, 982, 1892, 1011], [1904, 982, 2078, 1019], [2091, 982, 2179, 1011], [465, 1033, 914, 1070], [915, 1033, 1282, 1070], [378, 1088, 440, 1122], [464, 1089, 489, 1117], [502, 1088, 567, 1122], [581, 1089, 613, 1116], [627, 1089, 719, 1122], [734, 1088, 791, 1116], [802, 1089, 826, 1117], [840, 1089, 891, 1116], [909, 1088, 958, 1116], [970, 1088, 1105, 1116], [1116, 1088, 1275, 1125], [1287, 1088, 1335, 1116], [1347, 1097, 1363, 1116], [1374, 1088, 1452, 1116], [1465, 1088, 1501, 1116], [1510, 1088, 1598, 1116], [1611, 1088, 1691, 1116], [1703, 1088, 1865, 1125], [1883, 1089, 1916, 1116], [1925, 1088, 2015, 1117], [2025, 1088, 2175, 1117], [466, 1139, 651, 1176], [664, 1149, 704, 1167], [715, 1139, 900, 1176], [912, 1140, 1079, 1176], [1091, 1139, 1154, 1168], [1163, 1140, 1245, 1167], [1255, 1140, 1384, 1176], [1398, 1139, 1488, 1168], [378, 1194, 440, 1228], [464, 1195, 487, 1223], [501, 1194, 618, 1228], [632, 1195, 666, 1222], [679, 1195, 824, 1228], [838, 1194, 873, 1223], [888, 1194, 1064, 1228], [1078, 1194, 1135, 1222], [1146, 1195, 1173, 1222], [1187, 1194, 1278, 1222], [1296, 1194, 1440, 1223], [1450, 1194, 1531, 1223], [1544, 1194, 1728, 1231], [1742, 1194, 1789, 1222], [1801, 1194, 1970, 1223], [1982, 1194, 2122, 1231], [2141, 1195, 2174, 1222], [462, 1244, 559, 1278], [572, 1244, 662, 1273], [681, 1245, 722, 1272], [735, 1253, 849, 1281], [379, 1299, 440, 1333], [465, 1300, 499, 1327], [512, 1299, 661, 1327], [680, 1300, 706, 1327], [708, 1299, 919, 1336], [930, 1299, 995, 1327], [997, 1299, 1151, 1336], [1165, 1299, 1403, 1328], [1415, 1308, 1468, 1336], [1480, 1299, 1732, 1336], [1746, 1299, 1939, 1328], [1956, 1299, 2034, 1328], [2034, 1299, 2174, 1328], [462, 1350, 550, 1378], [551, 1350, 701, 1387], [714, 1355, 743, 1378], [751, 1350, 883, 1387], [894, 1351, 972, 1379], [974, 1350, 1087, 1387], [1101, 1349, 1362, 1385], [1380, 1350, 1466, 1379], [379, 1405, 440, 1439], [464, 1406, 496, 1433], [510, 1405, 613, 1439], [627, 1405, 655, 1434], [669, 1414, 726, 1434], [737, 1405, 774, 1433], [786, 1405, 872, 1439], [886, 1405, 943, 1433], [954, 1406, 978, 1433], [992, 1406, 1015, 1433], [1019, 1405, 1168, 1433], [1187, 1405, 1248, 1433], [1260, 1414, 1353, 1442], [1365, 1405, 1444, 1433], [1457, 1405, 1504, 1433], [1514, 1405, 1632, 1442], [1643, 1405, 1817, 1442], [1834, 1406, 1857, 1434], [1871, 1406, 1896, 1433], [1898, 1429, 1903, 1433], [1918, 1405, 2025, 1434], [2040, 1405, 2116, 1439], [2129, 1405, 2177, 1434], [465, 1455, 576, 1490], [590, 1456, 680, 1485], [379, 1511, 440, 1545], [464, 1512, 489, 1540], [501, 1512, 525, 1540], [539, 1512, 610, 1539], [610, 1511, 627, 1539], [640, 1511, 697, 1539], [709, 1512, 746, 1539], [760, 1511, 785, 1540], [790, 1535, 795, 1539], [809, 1511, 967, 1540], [985, 1511, 1169, 1548], [1183, 1520, 1199, 1539], [1211, 1515, 1284, 1539], [1294, 1511, 1398, 1548], [1411, 1515, 1484, 1548], [1503, 1511, 1597, 1540], [1606, 1511, 1734, 1540], [1745, 1511, 1783, 1548], [1788, 1511, 1938, 1548], [1952, 1511, 2141, 1548], [2155, 1511, 2174, 1539], [465, 1562, 519, 1597], [534, 1562, 710, 1599], [725, 1562, 811, 1591], [379, 1616, 440, 1651], [464, 1618, 487, 1646], [501, 1618, 524, 1646], [538, 1618, 673, 1645], [691, 1617, 851, 1645], [865, 1626, 1012, 1646], [1025, 1617, 1127, 1645], [1141, 1621, 1170, 1645], [1180, 1617, 1279, 1654], [1291, 1617, 1469, 1654], [1481, 1617, 1554, 1645], [1566, 1626, 1607, 1645], [1619, 1626, 1726, 1654], [1738, 1617, 1903, 1645], [1925, 1617, 1955, 1646], [1969, 1618, 2001, 1645], [2014, 1617, 2106, 1646], [2122, 1617, 2177, 1646], [463, 1668, 549, 1696], [561, 1667, 581, 1696], [582, 1668, 617, 1695], [630, 1667, 655, 1695], [666, 1667, 773, 1701], [787, 1666, 1055, 1701], [1072, 1667, 1159, 1696], [379, 1722, 440, 1756], [465, 1723, 498, 1750], [515, 1723, 671, 1751], [700, 1722, 847, 1751], [861, 1722, 1002, 1750], [1018, 1722, 1067, 1750], [1081, 1722, 1274, 1759], [1290, 1722, 1462, 1759], [1478, 1722, 1629, 1759], [1645, 1722, 1793, 1750], [1821, 1722, 1984, 1750], [1999, 1723, 2113, 1759], [2128, 1722, 2177, 1756], [465, 1773, 604, 1802], [616, 1773, 788, 1810], [800, 1773, 836, 1801], [845, 1773, 990, 1807], [1003, 1773, 1121, 1807], [1135, 1773, 1225, 1802], [379, 1828, 440, 1862], [464, 1829, 489, 1857], [502, 1828, 639, 1856], [652, 1828, 709, 1856], [722, 1828, 751, 1857], [764, 1829, 788, 1857], [801, 1828, 927, 1865], [943, 1828, 1120, 1857], [1132, 1828, 1354, 1865], [1374, 1828, 1515, 1865], [1526, 1828, 1641, 1865], [1655, 1828, 1745, 1857], [378, 1883, 440, 1917], [464, 1884, 501, 1911], [514, 1883, 627, 1917], [641, 1883, 668, 1912], [682, 1883, 776, 1920], [789, 1887, 817, 1911], [829, 1883, 863, 1911], [880, 1883, 1027, 1911], [1039, 1883, 1218, 1920], [1234, 1883, 1435, 1912], [1446, 1883, 1506, 1912], [1517, 1883, 1623, 1912], [1626, 1881, 1663, 1920], [1677, 1884, 1705, 1911], [1718, 1883, 1936, 1920], [1953, 1883, 2178, 1918], [465, 1934, 555, 1963], [379, 1989, 440, 2023], [465, 1989, 501, 2018], [516, 1989, 620, 2017], [639, 1989, 889, 2026], [901, 1989, 1027, 2026], [1039, 1989, 1259, 2017], [1271, 1989, 1301, 2017], [1314, 1998, 1330, 2017], [1340, 1989, 1466, 2026], [1478, 1998, 1575, 2026], [1592, 1989, 1821, 2017], [1832, 1990, 2067, 2026], [2081, 1989, 2177, 2024], [465, 2039, 597, 2074], [615, 2040, 701, 2069], [379, 2095, 440, 2129], [465, 2095, 499, 2124], [512, 2096, 632, 2124], [645, 2095, 701, 2123], [711, 2095, 746, 2124], [760, 2095, 905, 2124], [921, 2095, 949, 2123], [959, 2095, 1116, 2124], [1127, 2095, 1188, 2123], [1200, 2095, 1347, 2132], [1357, 2095, 1404, 2123], [1413, 2095, 1483, 2123], [1494, 2095, 1637, 2124], [1646, 2095, 1878, 2132], [1894, 2095, 2178, 2129], [465, 2145, 555, 2174], [574, 2146, 655, 2174], [668, 2145, 1421, 2181], [379, 2200, 440, 2234], [465, 2200, 501, 2228], [516, 2200, 645, 2228], [659, 2200, 716, 2228], [728, 2201, 761, 2228], [775, 2201, 790, 2229], [794, 2224, 798, 2228], [812, 2200, 985, 2228], [1003, 2201, 1071, 2228], [1084, 2200, 1140, 2228], [1152, 2200, 1272, 2228], [1286, 2200, 1387, 2228], [1399, 2200, 1570, 2237], [1584, 2200, 1631, 2228], [1642, 2200, 1724, 2228], [1736, 2200, 1872, 2237], [1891, 2200, 2177, 2234], [465, 2251, 555, 2280], [379, 2306, 440, 2340], [465, 2307, 492, 2334], [506, 2307, 657, 2343], [669, 2306, 727, 2334], [739, 2307, 771, 2334], [785, 2307, 819, 2334], [832, 2307, 856, 2335], [861, 2307, 899, 2334], [913, 2307, 989, 2334], [1007, 2306, 1231, 2335], [1243, 2306, 1279, 2334], [1289, 2306, 1459, 2343], [1471, 2306, 1539, 2334], [1550, 2306, 1638, 2343], [1651, 2306, 1739, 2334], [1752, 2306, 1848, 2335], [1866, 2306, 2120, 2343], [2134, 2306, 2174, 2334], [465, 2356, 720, 2392], [734, 2357, 824, 2386], [379, 2412, 440, 2446], [465, 2412, 501, 2440], [515, 2412, 651, 2440], [670, 2412, 832, 2449], [847, 2412, 903, 2440], [914, 2412, 1102, 2440], [1116, 2412, 1151, 2440], [1160, 2412, 1208, 2440], [1220, 2412, 1307, 2440], [1319, 2412, 1407, 2440], [1423, 2412, 1537, 2441], [1550, 2412, 1586, 2449], [1592, 2412, 1746, 2446], [1761, 2411, 2077, 2447], [2091, 2412, 2178, 2441], [379, 2467, 440, 2501], [465, 2468, 499, 2495], [514, 2468, 542, 2495], [557, 2467, 753, 2495], [772, 2468, 941, 2495], [953, 2471, 1104, 2504], [1118, 2467, 1175, 2495], [1186, 2467, 1236, 2495], [1247, 2467, 1396, 2504], [1407, 2467, 1492, 2504], [1504, 2467, 1670, 2504], [1689, 2467, 1784, 2496], [1793, 2468, 1816, 2496], [1834, 2467, 1958, 2496], [1969, 2467, 2031, 2496], [2042, 2467, 2120, 2504], [2138, 2467, 2174, 2495], [465, 2517, 676, 2553], [694, 2518, 780, 2547], [379, 2572, 440, 2607], [466, 2573, 496, 2602], [513, 2574, 640, 2610], [658, 2574, 703, 2601], [720, 2573, 880, 2607], [898, 2573, 934, 2602], [951, 2573, 1123, 2610], [1142, 2573, 1201, 2601], [1216, 2574, 1251, 2601], [1268, 2573, 1426, 2610], [1455, 2573, 1519, 2601], [1535, 2573, 1628, 2601], [1642, 2582, 1767, 2610], [1783, 2573, 2032, 2610], [2047, 2573, 2083, 2601], [2096, 2573, 2175, 2601], [465, 2624, 646, 2661], [658, 2624, 726, 2652], [738, 2628, 807, 2652], [824, 2624, 1013, 2653], [1024, 2625, 1122, 2653], [1140, 2624, 1242, 2661], [1257, 2625, 1321, 2652], [1336, 2624, 1399, 2653], [1408, 2624, 1663, 2661], [1676, 2624, 1753, 2659], [1766, 2624, 1943, 2661], [1954, 2623, 2044, 2653], [378, 2678, 440, 2712], [464, 2679, 497, 2706], [511, 2679, 523, 2706], [527, 2702, 531, 2706], [546, 2678, 653, 2712], [668, 2678, 696, 2707], [711, 2678, 815, 2712], [829, 2678, 886, 2706], [897, 2679, 929, 2706], [943, 2678, 1064, 2706], [1082, 2678, 1247, 2706], [1258, 2678, 1330, 2706], [1342, 2678, 1486, 2707], [1497, 2678, 1590, 2706], [1602, 2678, 1687, 2706], [1699, 2678, 1832, 2707], [1844, 2678, 2026, 2715], [2044, 2678, 2174, 2715], [463, 2730, 501, 2763], [515, 2728, 720, 2763], [738, 2729, 824, 2758], [1255, 2935, 1294, 2964], [379, 243, 440, 276], [465, 242, 686, 279], [700, 242, 747, 276], [761, 243, 857, 279], [870, 243, 905, 276], [919, 242, 969, 276], [983, 243, 1030, 276], [1044, 243, 1168, 276], [1180, 243, 1215, 276], [1230, 242, 1382, 276], [1397, 242, 1437, 276], [1450, 243, 1512, 276], [1527, 242, 1566, 276], [1580, 243, 1697, 279], [1710, 243, 1754, 276], [1767, 242, 1919, 279], [1931, 242, 1979, 276], [1992, 242, 2116, 276], [2130, 242, 2177, 276], [465, 292, 628, 326], [640, 293, 695, 326], [708, 293, 793, 329], [806, 292, 890, 326], [902, 292, 1027, 326], [1039, 293, 1071, 320], [1089, 293, 1248, 329], [1258, 293, 1351, 329], [1364, 292, 1449, 321], [1460, 292, 1562, 320], [1574, 292, 1771, 329], [1782, 292, 1945, 329], [1960, 292, 2174, 320], [463, 343, 593, 372], [609, 343, 647, 380], [658, 343, 825, 380], [841, 344, 942, 372], [960, 343, 1079, 379], [1101, 344, 1174, 371], [1189, 343, 1279, 376], [1302, 343, 1422, 372], [1440, 343, 1507, 376], [1526, 343, 1664, 372], [1679, 343, 1705, 376], [1722, 353, 1822, 380], [1838, 343, 1976, 371], [2007, 343, 2175, 379], [468, 396, 611, 430], [618, 394, 1584, 430], [1590, 396, 1736, 430], [379, 449, 440, 483], [466, 449, 496, 478], [512, 449, 603, 478], [618, 449, 677, 477], [691, 449, 721, 478], [736, 449, 826, 477], [849, 450, 972, 477], [986, 449, 1045, 477], [1059, 449, 1247, 477], [1259, 449, 1411, 486], [1424, 449, 1511, 486], [1525, 449, 1712, 486], [1734, 450, 1758, 478], [1778, 449, 1899, 478], [1909, 449, 2063, 486], [2082, 449, 2177, 484], [465, 500, 555, 529], [379, 555, 440, 589], [465, 556, 510, 583], [525, 555, 672, 589], [687, 556, 724, 583], [738, 556, 762, 583], [766, 579, 771, 583], [785, 556, 884, 589], [899, 555, 958, 583], [970, 556, 997, 583], [1011, 555, 1105, 583], [1124, 555, 1343, 592], [1355, 556, 1447, 583], [1460, 555, 1496, 583], [1506, 556, 1629, 583], [1640, 555, 1957, 584], [1968, 555, 2114, 583], [2127, 555, 2175, 583], [465, 606, 590, 635], [602, 606, 828, 643], [846, 607, 879, 634], [888, 606, 1048, 635], [1062, 607, 1091, 634], [1102, 606, 1218, 635], [1228, 606, 1425, 643], [1436, 607, 1618, 643], [1630, 606, 1760, 643], [1773, 606, 1894, 642], [1908, 606, 1998, 635], [378, 661, 440, 695], [466, 661, 496, 690], [511, 661, 573, 690], [592, 661, 732, 690], [744, 670, 924, 690], [936, 661, 1056, 689], [1066, 661, 1217, 698], [1230, 661, 1374, 698], [1393, 662, 1426, 689], [1435, 661, 1597, 690], [1611, 662, 1640, 689], [1651, 661, 1768, 690], [1778, 661, 1978, 698], [1989, 662, 2173, 698], [464, 711, 603, 748], [617, 711, 707, 740], [379, 766, 440, 800], [466, 766, 495, 795], [510, 766, 572, 800], [586, 766, 615, 795], [629, 766, 787, 800], [802, 766, 859, 794], [872, 766, 901, 795], [914, 766, 1039, 803], [1053, 766, 1173, 794], [1192, 766, 1407, 803], [1412, 766, 1467, 803], [1477, 766, 1615, 794], [1629, 766, 1776, 803], [1794, 767, 1869, 794], [1880, 767, 1975, 800], [1989, 766, 2079, 795], [379, 821, 440, 855], [465, 821, 501, 850], [516, 821, 617, 855], [631, 821, 659, 850], [673, 821, 775, 855], [790, 821, 846, 849], [857, 822, 880, 850], [893, 822, 1058, 849], [1077, 821, 1228, 849], [1240, 821, 1375, 850], [1385, 821, 1490, 858], [1501, 821, 1586, 849], [1597, 825, 1626, 850], [1637, 821, 1862, 858], [1875, 821, 1931, 849], [1944, 825, 2064, 858], [2075, 825, 2176, 850], [464, 872, 642, 909], [661, 873, 694, 900], [706, 872, 916, 909], [928, 881, 1021, 909], [1034, 871, 1186, 906], [1200, 871, 1290, 901], [378, 927, 440, 961], [465, 928, 503, 955], [518, 927, 663, 964], [675, 931, 705, 955], [718, 927, 754, 955], [773, 927, 924, 964], [936, 936, 1016, 964], [1029, 927, 1378, 964], [1389, 927, 1599, 964], [1611, 927, 1647, 955], [1657, 927, 1870, 964], [1881, 927, 1913, 955], [1925, 936, 2040, 955], [2057, 928, 2173, 956], [465, 978, 616, 1012], [631, 978, 946, 1013], [960, 978, 1129, 1006], [1141, 978, 1231, 1007], [379, 1033, 440, 1067], [465, 1034, 499, 1061], [514, 1033, 688, 1061], [707, 1033, 888, 1070], [901, 1033, 1058, 1070], [1071, 1033, 1128, 1061], [1141, 1033, 1285, 1061], [1297, 1033, 1346, 1062], [1358, 1033, 1406, 1061], [1419, 1033, 1507, 1061], [1525, 1034, 1549, 1062], [1562, 1034, 1594, 1061], [1610, 1033, 1718, 1062], [1734, 1033, 1811, 1067], [1824, 1032, 2076, 1068], [2094, 1033, 2178, 1062], [379, 1087, 440, 1122], [465, 1089, 499, 1116], [513, 1088, 678, 1116], [692, 1088, 748, 1116], [760, 1089, 784, 1116], [798, 1089, 900, 1125], [920, 1088, 1031, 1125], [1044, 1088, 1214, 1125], [1227, 1088, 1284, 1116], [1295, 1088, 1347, 1116], [1360, 1092, 1426, 1125], [1437, 1088, 1586, 1116], [1598, 1088, 1645, 1116], [1656, 1088, 1741, 1117], [1753, 1088, 1820, 1116], [1831, 1088, 1918, 1125], [1931, 1088, 1979, 1116], [1991, 1088, 2079, 1116], [2091, 1088, 2179, 1116], [463, 1140, 674, 1173], [688, 1139, 879, 1174], [893, 1139, 983, 1168], [379, 1194, 440, 1228], [465, 1195, 501, 1222], [516, 1194, 695, 1228], [710, 1195, 755, 1222], [771, 1194, 932, 1228], [948, 1194, 977, 1223], [992, 1195, 1112, 1228], [1126, 1195, 1151, 1223], [1165, 1194, 1241, 1228], [1257, 1194, 1316, 1222], [1328, 1195, 1366, 1222], [1381, 1194, 1505, 1231], [1528, 1194, 1663, 1231], [1678, 1194, 1737, 1222], [1750, 1194, 1944, 1222], [1958, 1194, 2009, 1223], [2021, 1194, 2071, 1222], [2084, 1194, 2174, 1222], [465, 1244, 555, 1272], [573, 1245, 596, 1273], [610, 1244, 708, 1281], [719, 1244, 789, 1273], [804, 1244, 885, 1273], [901, 1244, 1001, 1273], [1012, 1245, 1046, 1278], [1059, 1244, 1292, 1279], [1306, 1243, 1396, 1273], [378, 1299, 440, 1333], [465, 1300, 500, 1327], [513, 1300, 537, 1328], [551, 1299, 728, 1327], [746, 1299, 895, 1336], [906, 1299, 1069, 1336], [1080, 1299, 1268, 1336], [1280, 1299, 1452, 1327], [1464, 1299, 1514, 1328], [1525, 1299, 1609, 1327], [1621, 1299, 1760, 1336], [1780, 1299, 1838, 1327], [1848, 1299, 1965, 1328], [1977, 1299, 2015, 1336], [2020, 1299, 2177, 1333], [464, 1349, 718, 1385], [731, 1350, 771, 1379], [783, 1350, 873, 1379], [892, 1350, 952, 1378], [973, 1350, 1344, 1379], [379, 1405, 440, 1439], [465, 1406, 503, 1434], [517, 1405, 601, 1433], [612, 1409, 642, 1433], [655, 1405, 691, 1433], [710, 1405, 813, 1433], [823, 1409, 956, 1442], [969, 1405, 1005, 1433], [1015, 1414, 1093, 1442], [1105, 1405, 1285, 1442], [1295, 1405, 1437, 1434], [1448, 1405, 1489, 1442], [1502, 1405, 1666, 1442], [1680, 1405, 1813, 1442], [1826, 1405, 1862, 1433], [1872, 1409, 1972, 1433], [1985, 1405, 2044, 1433], [2056, 1405, 2174, 1433], [465, 1456, 556, 1484], [568, 1456, 676, 1484], [688, 1456, 803, 1493], [814, 1456, 855, 1493], [867, 1456, 1124, 1493], [1136, 1465, 1244, 1493], [1261, 1457, 1346, 1484], [1360, 1456, 1438, 1485], [1451, 1456, 1544, 1485], [1560, 1456, 1616, 1485], [1634, 1456, 1715, 1490], [1728, 1455, 1975, 1490], [1988, 1457, 2064, 1485], [2079, 1456, 2165, 1485], [379, 1511, 440, 1545], [464, 1512, 487, 1540], [493, 1512, 530, 1539], [544, 1512, 611, 1539], [624, 1511, 681, 1539], [693, 1512, 729, 1539], [743, 1511, 892, 1548], [911, 1512, 978, 1539], [990, 1511, 1139, 1539], [1151, 1511, 1187, 1539], [1196, 1511, 1331, 1548], [1344, 1511, 1571, 1548], [1586, 1511, 1691, 1539], [1702, 1511, 1742, 1548], [1754, 1520, 1843, 1548], [1856, 1511, 1967, 1548], [1979, 1511, 2067, 1548], [2080, 1520, 2173, 1548], [465, 1562, 579, 1591], [597, 1563, 630, 1590], [639, 1562, 799, 1591], [812, 1563, 842, 1590], [852, 1562, 968, 1591], [978, 1562, 1176, 1599], [1187, 1563, 1369, 1599], [1381, 1562, 1519, 1599], [1533, 1562, 1623, 1591], [379, 1617, 440, 1651], [465, 1617, 499, 1646], [513, 1618, 546, 1645], [561, 1617, 653, 1654], [667, 1617, 723, 1645], [734, 1618, 777, 1645], [791, 1618, 815, 1645], [819, 1641, 823, 1645], [838, 1617, 943, 1646], [962, 1617, 1095, 1646], [1107, 1617, 1243, 1645], [1256, 1617, 1303, 1645], [1314, 1617, 1384, 1645], [1397, 1617, 1539, 1646], [1551, 1617, 1716, 1654], [1735, 1617, 1829, 1646], [1837, 1617, 1963, 1646], [1975, 1627, 2013, 1645], [2026, 1617, 2173, 1654], [466, 1667, 656, 1704], [673, 1667, 923, 1702], [941, 1667, 1027, 1696], [379, 1722, 440, 1756], [465, 1723, 499, 1750], [512, 1722, 676, 1759], [691, 1722, 718, 1751], [733, 1722, 828, 1759], [840, 1723, 883, 1750], [898, 1722, 1078, 1759], [1092, 1722, 1149, 1750], [1160, 1723, 1190, 1750], [1204, 1723, 1305, 1759], [1324, 1722, 1372, 1750], [1384, 1722, 1513, 1750], [1525, 1722, 1694, 1759], [1705, 1722, 1752, 1750], [1764, 1731, 1780, 1750], [1791, 1722, 1876, 1751], [1889, 1722, 1925, 1750], [1934, 1722, 2014, 1750], [2026, 1722, 2174, 1750], [465, 1773, 668, 1810], [684, 1773, 866, 1801], [882, 1773, 1049, 1801], [1081, 1774, 1115, 1801], [1130, 1773, 1339, 1810], [1356, 1773, 1428, 1801], [1444, 1773, 1533, 1802], [1548, 1773, 1739, 1810], [1755, 1783, 1795, 1801], [1812, 1773, 1928, 1810], [1943, 1773, 2177, 1810], [464, 1824, 587, 1853], [602, 1824, 647, 1858], [661, 1824, 751, 1853], [379, 1879, 440, 1913], [464, 1880, 487, 1908], [500, 1880, 592, 1916], [605, 1879, 662, 1907], [673, 1879, 708, 1914], [721, 1879, 756, 1907], [768, 1879, 825, 1907], [837, 1879, 864, 1908], [878, 1880, 960, 1916], [972, 1879, 1029, 1907], [1039, 1880, 1080, 1907], [1093, 1880, 1153, 1907], [1165, 1879, 1221, 1907], [1232, 1880, 1256, 1907], [1269, 1879, 1383, 1907], [1395, 1879, 1451, 1907], [1461, 1880, 1484, 1908], [1497, 1880, 1547, 1907], [1564, 1879, 1592, 1907], [1603, 1879, 1714, 1916], [1726, 1879, 1861, 1908], [1873, 1879, 1994, 1907], [2006, 1879, 2175, 1916], [465, 1930, 514, 1958], [525, 1930, 672, 1967], [685, 1930, 769, 1958], [782, 1930, 934, 1958], [947, 1930, 1071, 1958], [1088, 1931, 1121, 1958], [1133, 1930, 1341, 1967], [1353, 1930, 1391, 1967], [1398, 1930, 1445, 1958], [1459, 1930, 1529, 1959], [1538, 1930, 1761, 1958], [1774, 1930, 1963, 1967], [1976, 1940, 2016, 1958], [2026, 1930, 2173, 1958], [463, 1982, 615, 2018], [628, 1981, 816, 2017], [829, 1990, 921, 2018], [935, 1980, 1080, 2015], [1094, 1981, 1184, 2010], [379, 2036, 440, 2070], [466, 2036, 494, 2065], [508, 2037, 531, 2065], [545, 2036, 670, 2073], [684, 2037, 717, 2064], [732, 2037, 759, 2064], [764, 2060, 768, 2064], [781, 2036, 907, 2070], [922, 2036, 979, 2064], [990, 2037, 1034, 2064], [1048, 2036, 1076, 2064], [1080, 2060, 1084, 2064], [1099, 2037, 1127, 2064], [1141, 2036, 1327, 2073], [1347, 2036, 1455, 2073], [1466, 2036, 1701, 2064], [1712, 2036, 1753, 2073], [1766, 2036, 1920, 2073], [1933, 2036, 2178, 2073], [464, 2087, 554, 2114], [566, 2087, 664, 2115], [680, 2086, 737, 2123], [752, 2087, 849, 2120], [863, 2085, 1158, 2121], [1172, 2086, 1262, 2115], [379, 2141, 440, 2175], [464, 2142, 508, 2169], [521, 2141, 655, 2178], [670, 2141, 697, 2170], [713, 2141, 773, 2175], [788, 2141, 844, 2169], [855, 2142, 878, 2170], [892, 2142, 916, 2169], [920, 2165, 924, 2169], [938, 2141, 1045, 2169], [1063, 2142, 1130, 2169], [1140, 2142, 1268, 2170], [1279, 2141, 1420, 2169], [1433, 2141, 1480, 2169], [1491, 2141, 1539, 2169], [1551, 2141, 1653, 2178], [1665, 2141, 1762, 2169], [1772, 2142, 1874, 2169], [1894, 2142, 1926, 2169], [1940, 2141, 2122, 2178], [2135, 2151, 2173, 2169], [467, 2193, 661, 2229], [674, 2193, 703, 2220], [712, 2192, 862, 2229], [872, 2192, 1076, 2229], [1090, 2192, 1180, 2221], [378, 2246, 440, 2281], [466, 2247, 496, 2276], [516, 2248, 610, 2284], [631, 2248, 655, 2276], [674, 2248, 780, 2284], [800, 2248, 844, 2275], [864, 2248, 934, 2281], [954, 2248, 993, 2275], [1012, 2247, 1128, 2284], [1149, 2248, 1175, 2275], [1194, 2247, 1321, 2281], [1343, 2247, 1402, 2275], [1419, 2248, 1443, 2276], [1463, 2248, 1515, 2275], [1552, 2247, 1603, 2275], [1620, 2247, 1764, 2275], [1781, 2247, 1916, 2275], [1934, 2247, 2110, 2284], [2127, 2247, 2175, 2275], [465, 2298, 759, 2326], [771, 2298, 964, 2335], [977, 2298, 1060, 2326], [1071, 2298, 1222, 2326], [1234, 2298, 1476, 2335], [1488, 2298, 1651, 2326], [1670, 2299, 1702, 2326], [1712, 2298, 1801, 2327], [1810, 2298, 1995, 2335], [2007, 2299, 2174, 2335], [465, 2349, 528, 2378], [537, 2350, 619, 2377], [629, 2350, 750, 2386], [763, 2349, 884, 2385], [898, 2349, 1043, 2386], [1057, 2349, 1182, 2383], [1195, 2349, 1285, 2383], [1299, 2349, 1418, 2386], [1429, 2349, 1519, 2378], [379, 2404, 440, 2438], [465, 2405, 495, 2432], [510, 2405, 561, 2432], [579, 2404, 627, 2433], [638, 2404, 853, 2441], [865, 2404, 913, 2432], [924, 2404, 1069, 2441], [1082, 2413, 1158, 2441], [1176, 2405, 1208, 2432], [1217, 2404, 1374, 2433], [1386, 2405, 1415, 2432], [1425, 2404, 1538, 2433], [1548, 2404, 1741, 2441], [1752, 2405, 1930, 2441], [1942, 2404, 2078, 2441], [2091, 2404, 2179, 2433], [379, 2459, 440, 2493], [464, 2460, 508, 2487], [522, 2460, 604, 2487], [617, 2459, 673, 2487], [685, 2460, 715, 2487], [728, 2459, 792, 2487], [810, 2459, 915, 2487], [928, 2459, 1077, 2488], [1090, 2459, 1146, 2487], [1157, 2459, 1333, 2487], [1344, 2459, 1375, 2487], [1386, 2459, 1565, 2496], [1577, 2459, 1648, 2488], [1659, 2459, 1800, 2496], [1812, 2459, 1969, 2487], [1987, 2460, 2010, 2488], [2024, 2460, 2055, 2487], [2071, 2459, 2178, 2488], [464, 2509, 529, 2538], [544, 2510, 577, 2543], [591, 2509, 803, 2544], [817, 2509, 907, 2538], [379, 2564, 440, 2598], [465, 2565, 510, 2592], [527, 2564, 594, 2592], [612, 2564, 671, 2592], [687, 2565, 717, 2592], [735, 2564, 832, 2593], [864, 2564, 915, 2592], [931, 2564, 1068, 2592], [1082, 2564, 1279, 2601], [1295, 2564, 1405, 2601], [1421, 2564, 1559, 2601], [1575, 2564, 1738, 2601], [1754, 2564, 1802, 2592], [1818, 2564, 1891, 2592], [1908, 2564, 2056, 2593], [2072, 2564, 2174, 2601], [464, 2615, 650, 2643], [668, 2615, 828, 2643], [838, 2619, 946, 2652], [959, 2615, 1070, 2644], [1083, 2615, 1184, 2649], [1198, 2615, 1288, 2644], [1255, 2934, 1295, 2964], [376, 229, 416, 270], [478, 229, 831, 271], [849, 230, 1154, 282], [373, 336, 427, 363], [437, 335, 529, 372], [540, 335, 581, 372], [592, 335, 737, 372], [750, 344, 766, 363], [778, 335, 837, 364], [849, 335, 933, 363], [946, 335, 1029, 363], [1042, 335, 1122, 363], [1133, 344, 1249, 364], [1262, 335, 1404, 372], [1418, 344, 1465, 364], [1476, 335, 1672, 363], [1684, 335, 1733, 363], [1744, 339, 1846, 363], [1856, 335, 1940, 363], [1954, 335, 2016, 369], [2031, 335, 2079, 363], [2090, 344, 2174, 363], [376, 386, 491, 414], [437, 438, 491, 465], [504, 437, 536, 465], [552, 443, 578, 467], [594, 437, 642, 465], [656, 437, 693, 465], [707, 446, 762, 474], [776, 441, 826, 465], [843, 437, 871, 465], [883, 437, 1018, 465], [1030, 447, 1047, 465], [1065, 447, 1069, 465], [1086, 437, 1118, 465], [1133, 444, 1170, 465], [1185, 437, 1213, 465], [1225, 440, 1248, 466], [1263, 434, 1363, 475], [1375, 434, 1465, 475], [1479, 437, 1503, 465], [1517, 437, 1613, 465], [1626, 437, 1718, 466], [1729, 438, 1982, 466], [1994, 437, 2020, 465], [2029, 437, 2077, 465], [2088, 446, 2174, 474], [377, 497, 400, 516], [416, 494, 437, 518], [455, 488, 487, 516], [501, 488, 558, 516], [571, 497, 587, 516], [600, 497, 749, 525], [764, 485, 820, 526], [826, 485, 836, 526], [852, 488, 913, 516], [924, 497, 1086, 525], [1100, 492, 1131, 516], [1144, 497, 1177, 522], [1191, 488, 1213, 516], [1223, 488, 1311, 516], [1325, 488, 1386, 516], [956, 589, 997, 614], [1015, 587, 1052, 608], [1068, 589, 1091, 608], [1119, 586, 1181, 609], [1207, 577, 1592, 618], [2088, 580, 2173, 615], [374, 672, 435, 700], [448, 676, 491, 700], [503, 672, 538, 700], [546, 681, 652, 709], [663, 672, 706, 700], [718, 681, 831, 701], [842, 672, 991, 700], [1004, 681, 1043, 700], [1056, 672, 1088, 700], [1100, 672, 1125, 700], [1137, 672, 1265, 700], [1275, 672, 1314, 709], [1327, 669, 1420, 710], [1424, 669, 1434, 710], [1450, 672, 1536, 707], [1547, 672, 1696, 700], [1710, 681, 1756, 700], [1769, 672, 1832, 700], [1844, 672, 1940, 700], [1951, 672, 2055, 701], [2065, 682, 2174, 701], [369, 723, 549, 760], [565, 723, 628, 751], [641, 723, 792, 752], [795, 723, 937, 760], [949, 723, 985, 751], [995, 732, 1011, 751], [1024, 727, 1068, 751], [1080, 722, 1110, 752], [1122, 723, 1147, 751], [1160, 723, 1281, 751], [1294, 732, 1324, 751], [925, 847, 1268, 888], [1284, 860, 1287, 875], [1284, 857, 1321, 878], [1341, 805, 1397, 930], [1464, 820, 1617, 857], [1370, 892, 1418, 918], [1464, 882, 1524, 910], [1543, 880, 1563, 919], [1540, 881, 1615, 918], [2088, 850, 2173, 885], [374, 976, 474, 1005], [486, 976, 510, 1004], [524, 976, 568, 1004], [580, 976, 607, 1004], [617, 976, 674, 1004], [686, 976, 759, 1013], [771, 976, 797, 1004], [807, 975, 837, 1005], [849, 976, 874, 1004], [887, 976, 1001, 1004], [438, 1027, 501, 1055], [513, 1037, 627, 1056], [638, 1028, 801, 1064], [814, 1027, 850, 1055], [859, 1037, 876, 1055], [889, 1027, 915, 1055], [928, 1027, 1017, 1064], [1029, 1027, 1070, 1064], [1082, 1024, 1173, 1065], [1192, 1037, 1230, 1055], [1245, 1036, 1411, 1067], [1419, 1052, 1433, 1065], [1459, 1024, 1505, 1065], [1518, 1024, 1552, 1065], [1569, 1044, 1595, 1045], [1608, 1024, 1695, 1065], [1709, 1027, 1768, 1055], [1780, 1036, 1797, 1055], [1807, 1027, 2000, 1064], [2012, 1027, 2175, 1064], [376, 1078, 514, 1115], [526, 1078, 550, 1106], [564, 1078, 613, 1106], [625, 1078, 755, 1106], [767, 1078, 927, 1115], [938, 1078, 974, 1106], [984, 1087, 1000, 1106], [1012, 1087, 1099, 1106], [1114, 1075, 1156, 1116], [1001, 1167, 1174, 1208], [1227, 1170, 1297, 1198], [1320, 1180, 1337, 1198], [1341, 1167, 1352, 1180], [1371, 1183, 1399, 1192], [1415, 1168, 1545, 1212], [2088, 1170, 2173, 1205], [374, 1262, 476, 1291], [489, 1262, 539, 1290], [553, 1271, 641, 1290], [658, 1259, 720, 1300], [738, 1262, 764, 1290], [778, 1262, 850, 1290], [863, 1266, 894, 1290], [912, 1259, 954, 1300], [965, 1286, 970, 1290], [991, 1263, 1047, 1290], [1059, 1272, 1076, 1290], [1092, 1262, 1151, 1290], [1165, 1261, 1186, 1290], [1199, 1262, 1238, 1290], [1251, 1271, 1361, 1299], [1374, 1271, 1491, 1291], [1505, 1262, 1670, 1290], [1691, 1262, 1755, 1290], [1770, 1262, 1886, 1299], [1898, 1262, 2094, 1291], [2108, 1262, 2145, 1290], [2156, 1272, 2173, 1290], [374, 1313, 445, 1342], [458, 1312, 479, 1341], [491, 1313, 516, 1341], [529, 1313, 577, 1341], [590, 1322, 703, 1342], [715, 1313, 850, 1341], [862, 1313, 950, 1350], [961, 1313, 1000, 1350], [1016, 1310, 1046, 1351], [1059, 1312, 1087, 1341], [1101, 1310, 1194, 1351], [1214, 1323, 1252, 1341], [1266, 1312, 1315, 1341], [1317, 1327, 1385, 1353], [1409, 1310, 1482, 1351], [1498, 1317, 1526, 1344], [1539, 1310, 1602, 1351], [1617, 1330, 1643, 1331], [1656, 1310, 1721, 1351], [1737, 1314, 1793, 1341], [1804, 1322, 1858, 1341], [1868, 1322, 2022, 1350], [2035, 1313, 2083, 1341], [2096, 1317, 2174, 1341], [376, 1364, 539, 1401], [552, 1364, 666, 1401], [679, 1373, 750, 1392], [762, 1364, 788, 1392], [801, 1364, 919, 1392], [931, 1364, 1130, 1393], [1142, 1364, 1178, 1392], [1189, 1373, 1206, 1392], [1217, 1373, 1334, 1393], [1347, 1364, 1487, 1392], [1498, 1364, 1573, 1393], [1584, 1364, 1634, 1392], [1648, 1364, 1777, 1401], [1789, 1364, 1950, 1392], [1961, 1373, 2058, 1398], [2072, 1364, 2174, 1393], [374, 1415, 470, 1452], [484, 1415, 533, 1443], [543, 1416, 673, 1443], [685, 1415, 829, 1452], [845, 1414, 918, 1449], [376, 1498, 578, 1536], [589, 1498, 648, 1528], [653, 1521, 660, 1528], [682, 1500, 735, 1527], [746, 1509, 763, 1527], [779, 1505, 800, 1529], [817, 1496, 910, 1537], [914, 1496, 924, 1537], [940, 1499, 1002, 1528], [1013, 1499, 1053, 1527], [1064, 1509, 1086, 1536], [1101, 1505, 1127, 1529], [1144, 1499, 1169, 1528], [1188, 1499, 1247, 1527], [1260, 1500, 1387, 1527], [1399, 1499, 1546, 1536], [1557, 1499, 1595, 1536], [1600, 1509, 1617, 1527], [1631, 1499, 1759, 1528], [1769, 1499, 1807, 1536], [1818, 1509, 1840, 1536], [1854, 1500, 1878, 1528], [1078, 1589, 1127, 1619], [1108, 1584, 1356, 1629], [1335, 1614, 1367, 1639], [1379, 1588, 1421, 1629], [1429, 1583, 1442, 1602], [1429, 1588, 1469, 1629], [2088, 1591, 2173, 1626], [374, 1683, 433, 1711], [444, 1684, 574, 1711], [586, 1683, 730, 1720], [743, 1683, 828, 1718], [842, 1684, 867, 1712], [880, 1693, 997, 1716], [1014, 1683, 1208, 1716], [1224, 1683, 1286, 1712], [1296, 1684, 1483, 1712], [375, 1767, 474, 1804], [500, 1767, 558, 1796], [570, 1776, 617, 1804], [621, 1791, 626, 1795], [643, 1767, 702, 1801], [716, 1768, 801, 1804], [819, 1767, 855, 1795], [859, 1766, 929, 1801], [376, 1851, 473, 1888], [485, 1851, 534, 1879], [546, 1852, 673, 1879], [686, 1851, 832, 1888], [845, 1851, 939, 1886], [953, 1860, 1000, 1880], [1012, 1860, 1080, 1880], [1093, 1851, 1234, 1888], [1246, 1851, 1401, 1879], [1412, 1860, 1488, 1888], [1500, 1855, 1661, 1888], [376, 1934, 549, 1964], [560, 1934, 621, 1964], [634, 1935, 725, 1970], [738, 1935, 901, 1972], [923, 1936, 978, 1963], [989, 1945, 1006, 1963], [1022, 1941, 1043, 1965], [1060, 1932, 1154, 1973], [1157, 1932, 1177, 1973], [1194, 1935, 1257, 1964], [1269, 1935, 1310, 1963], [1321, 1944, 1344, 1971], [1360, 1941, 1381, 1965], [1399, 1935, 1431, 1963], [1434, 1959, 1439, 1963], [1460, 1935, 1540, 1963], [1553, 1944, 1648, 1974], [1659, 1944, 1682, 1971], [1696, 1936, 1722, 1964], [1735, 1935, 1783, 1963], [1798, 1936, 1909, 1972], [1918, 1936, 2010, 1972], [2021, 1936, 2051, 1963], [2064, 1935, 2096, 1963], [2111, 1935, 2176, 1963], [376, 1986, 505, 2023], [518, 1986, 548, 2014], [552, 1980, 563, 1999], [548, 1979, 990, 2025], [978, 1980, 1158, 2029], [1145, 2006, 1158, 2025], [1164, 1983, 1184, 2024], [1201, 1987, 1255, 2019], [930, 2088, 1025, 2117], [1032, 2076, 1082, 2117], [1102, 2089, 1140, 2107], [1156, 2079, 1279, 2116], [1182, 2121, 1251, 2143], [1288, 2071, 1437, 2117], [1425, 2070, 1605, 2121], [1592, 2098, 1616, 2117], [2088, 2078, 2173, 2114], [376, 2194, 438, 2223], [449, 2194, 496, 2222], [509, 2194, 671, 2222], [681, 2204, 750, 2231], [763, 2203, 858, 2232], [877, 2204, 881, 2222], [898, 2194, 930, 2222], [945, 2201, 982, 2222], [998, 2194, 1030, 2222], [1044, 2195, 1069, 2223], [1081, 2194, 1183, 2223], [1194, 2194, 1241, 2222], [1253, 2203, 1328, 2231], [1341, 2198, 1478, 2231], [1489, 2194, 1527, 2231], [1532, 2204, 1557, 2222], [439, 2278, 623, 2307], [636, 2278, 686, 2306], [698, 2278, 830, 2306], [842, 2278, 1004, 2315], [1016, 2277, 1049, 2306], [1066, 2278, 1091, 2306], [1104, 2278, 1201, 2306], [1213, 2282, 1244, 2306], [1255, 2287, 1311, 2306], [1323, 2278, 1393, 2306], [1406, 2287, 1434, 2312], [1449, 2278, 1602, 2315], [1617, 2278, 1795, 2306], [1807, 2278, 1857, 2306], [1869, 2282, 2009, 2315], [2020, 2287, 2115, 2316], [2120, 2298, 2129, 2307], [2147, 2278, 2173, 2306], [376, 2329, 471, 2357], [483, 2333, 513, 2357], [525, 2333, 667, 2366], [679, 2329, 748, 2357], [761, 2338, 855, 2367], [862, 2353, 867, 2357], [883, 2329, 946, 2357], [957, 2329, 1050, 2357], [1060, 2329, 1159, 2358], [1172, 2329, 1271, 2358], [1284, 2329, 1334, 2357], [1346, 2329, 1535, 2357], [376, 2412, 578, 2450], [589, 2412, 649, 2442], [663, 2413, 803, 2448], [815, 2413, 1081, 2450], [1104, 2414, 1157, 2441], [1168, 2423, 1185, 2441], [1201, 2419, 1222, 2443], [1239, 2410, 1332, 2451], [1336, 2410, 1356, 2451], [1372, 2423, 1394, 2450], [1409, 2419, 1435, 2443], [1452, 2413, 1477, 2446], [1493, 2413, 1555, 2442], [1565, 2422, 1588, 2449], [1605, 2419, 1626, 2443], [1643, 2413, 1675, 2441], [1678, 2437, 1683, 2441], [1702, 2413, 1789, 2446], [973, 2514, 996, 2541], [1011, 2518, 1039, 2527], [1054, 2514, 1168, 2549], [1180, 2514, 1203, 2541], [1216, 2509, 1244, 2536], [1256, 2515, 1278, 2542], [1287, 2497, 1519, 2550], [1524, 2502, 1574, 2543], [2088, 2505, 2173, 2540], [374, 2597, 474, 2634], [499, 2597, 527, 2625], [539, 2597, 619, 2625], [628, 2597, 771, 2631], [786, 2606, 837, 2625], [848, 2606, 896, 2634], [900, 2621, 915, 2631], [932, 2597, 992, 2631], [1005, 2597, 1091, 2625], [1108, 2597, 1144, 2625], [1148, 2597, 1198, 2631], [374, 2681, 444, 2709], [457, 2681, 695, 2718], [706, 2681, 844, 2718], [857, 2681, 904, 2709], [917, 2690, 1073, 2718], [1086, 2681, 1162, 2709], [1175, 2685, 1204, 2709], [1217, 2681, 1328, 2718], [1339, 2681, 1437, 2709], [1449, 2681, 1644, 2718], [1656, 2681, 1803, 2709], [1819, 2682, 1875, 2709], [1886, 2681, 1934, 2709], [1947, 2681, 2016, 2709], [2029, 2681, 2064, 2709], [2073, 2681, 2175, 2718], [374, 2741, 422, 2761], [436, 2732, 501, 2760], [514, 2736, 637, 2769], [651, 2741, 688, 2760], [702, 2732, 869, 2760], [882, 2732, 976, 2760], [988, 2732, 1148, 2769], [1163, 2741, 1180, 2760], [1192, 2732, 1354, 2769], [1366, 2732, 1563, 2769], [1575, 2732, 1705, 2760], [1718, 2732, 1780, 2760], [1792, 2732, 1880, 2769], [1895, 2741, 1912, 2760], [1924, 2732, 1983, 2769], [1996, 2732, 2061, 2760], [2075, 2732, 2107, 2760], [2120, 2741, 2175, 2760], [377, 2783, 560, 2820], [1255, 2934, 1291, 2964], [376, 241, 578, 279], [589, 241, 650, 271], [653, 264, 660, 271], [682, 243, 735, 270], [747, 241, 768, 279], [784, 248, 805, 272], [822, 239, 915, 280], [919, 239, 929, 280], [945, 242, 1007, 271], [1017, 252, 1034, 270], [1051, 248, 1072, 272], [1088, 239, 1203, 280], [1222, 242, 1281, 270], [1290, 242, 1444, 279], [1457, 242, 1554, 271], [1559, 242, 1643, 279], [1655, 252, 1674, 270], [1682, 242, 1884, 279], [1891, 243, 1965, 279], [973, 331, 1022, 360], [962, 366, 1031, 388], [1077, 329, 1323, 370], [1370, 337, 1413, 361], [1440, 332, 1586, 362], [2088, 332, 2173, 367], [973, 417, 1022, 446], [963, 453, 1032, 475], [1077, 417, 1098, 455], [1103, 415, 1202, 456], [1206, 409, 1228, 429], [1232, 415, 1344, 456], [1349, 415, 1360, 428], [1369, 415, 1434, 456], [2088, 418, 2173, 453], [374, 523, 474, 560], [499, 523, 657, 551], [670, 532, 706, 551], [718, 527, 799, 551], [811, 523, 942, 552], [955, 532, 975, 551], [991, 536, 1019, 545], [1035, 523, 1068, 551], [1073, 532, 1107, 557], [1121, 532, 1155, 551], [1168, 523, 1229, 551], [1240, 523, 1290, 551], [1301, 523, 1371, 551], [1383, 523, 1520, 551], [1532, 523, 1557, 551], [858, 610, 934, 651], [952, 626, 980, 635], [1005, 612, 1054, 641], [995, 648, 1064, 670], [1085, 610, 1245, 651], [1247, 604, 1269, 624], [1274, 612, 1447, 644], [1390, 648, 1455, 670], [1475, 610, 1629, 651], [1631, 604, 1653, 624], [1658, 622, 1689, 649], [374, 718, 474, 747], [485, 727, 567, 755], [578, 718, 729, 755], [740, 718, 829, 755], [841, 718, 971, 746], [983, 718, 1157, 755], [1171, 718, 1267, 755], [1281, 718, 1376, 753], [437, 801, 565, 829], [578, 810, 618, 829], [631, 801, 823, 829], [834, 801, 1040, 838], [1053, 810, 1100, 829], [1114, 801, 1177, 829], [1189, 801, 1325, 838], [1337, 805, 1366, 829], [1379, 801, 1532, 829], [1546, 810, 1629, 829], [1642, 801, 1678, 829], [1687, 801, 1735, 829], [1747, 801, 1988, 838], [2000, 801, 2173, 838], [376, 852, 423, 880], [434, 852, 552, 880], [565, 852, 595, 880], [607, 852, 664, 880], [677, 861, 774, 889], [791, 853, 847, 880], [859, 861, 875, 880], [887, 861, 971, 880], [983, 852, 1131, 889], [1142, 852, 1213, 880], [1225, 861, 1264, 880], [1277, 852, 1333, 880], [1347, 852, 1428, 889], [1440, 861, 1487, 881], [1498, 852, 1693, 880], [1706, 852, 1755, 880], [1767, 852, 1954, 889], [1966, 852, 2050, 880], [2065, 851, 2117, 886], [376, 933, 549, 963], [561, 933, 621, 963], [635, 934, 854, 969], [865, 934, 1029, 969], [1049, 934, 1075, 962], [1089, 934, 1286, 971], [1300, 934, 1329, 962], [1347, 944, 1351, 962], [1369, 927, 1413, 962], [1431, 941, 1468, 962], [1484, 934, 1519, 967], [1528, 934, 1584, 971], [1597, 927, 1640, 962], [1657, 934, 1705, 962], [1714, 944, 1824, 971], [1835, 939, 1882, 963], [1893, 934, 1931, 971], [1937, 944, 2021, 963], [2035, 939, 2082, 963], [2093, 934, 2123, 963], [2125, 958, 2131, 967], [2148, 935, 2174, 963], [376, 985, 577, 1014], [591, 985, 619, 1022], [626, 985, 690, 1014], [702, 985, 773, 1022], [789, 985, 816, 1022], [825, 986, 847, 1013], [853, 985, 964, 1022], [979, 985, 1027, 1013], [1042, 985, 1240, 1022], [1255, 990, 1374, 1014], [1384, 990, 1534, 1022], [1554, 985, 1619, 1013], [1632, 986, 1664, 1018], [1676, 985, 1732, 1022], [1745, 983, 1774, 1013], [1793, 987, 1819, 1019], [1840, 985, 1869, 1013], [1890, 987, 1916, 1019], [1937, 985, 1967, 1014], [1981, 985, 2045, 1014], [2058, 984, 2077, 1013], [2098, 991, 2119, 1015], [2140, 985, 2170, 1014], [2171, 1009, 2177, 1018], [377, 1033, 626, 1074], [888, 1084, 1660, 1125], [438, 1169, 615, 1206], [630, 1178, 647, 1197], [659, 1169, 856, 1197], [868, 1169, 893, 1197], [907, 1169, 1103, 1197], [1114, 1169, 1141, 1197], [1151, 1169, 1262, 1206], [1275, 1178, 1292, 1197], [1303, 1178, 1370, 1198], [1382, 1169, 1514, 1197], [1525, 1173, 1556, 1197], [1568, 1169, 1618, 1197], [1631, 1173, 1676, 1197], [1686, 1169, 1794, 1197], [1806, 1169, 1837, 1197], [1849, 1169, 1910, 1197], [1922, 1169, 2010, 1198], [2023, 1178, 2055, 1197], [2068, 1169, 2117, 1197], [2130, 1173, 2175, 1197], [376, 1228, 473, 1256], [486, 1219, 517, 1247], [530, 1219, 601, 1247], [376, 1301, 549, 1331], [559, 1301, 619, 1331], [631, 1302, 783, 1337], [793, 1302, 950, 1337], [967, 1302, 992, 1330], [1004, 1302, 1194, 1339], [1206, 1302, 1235, 1330], [1252, 1312, 1256, 1330], [1273, 1295, 1317, 1330], [1335, 1309, 1372, 1330], [1387, 1302, 1422, 1335], [1429, 1302, 1484, 1339], [1493, 1295, 1537, 1330], [1552, 1302, 1599, 1330], [1606, 1312, 1712, 1339], [1720, 1307, 1765, 1331], [1775, 1302, 1811, 1339], [1815, 1312, 1897, 1331], [1908, 1307, 1953, 1331], [1963, 1302, 1993, 1331], [1994, 1326, 2000, 1335], [2016, 1302, 2045, 1330], [2050, 1298, 2095, 1340], [2113, 1315, 2141, 1324], [2157, 1302, 2174, 1331], [377, 1353, 401, 1381], [414, 1352, 554, 1381], [566, 1352, 641, 1388], [651, 1352, 718, 1381], [731, 1352, 940, 1387], [954, 1352, 982, 1389], [987, 1352, 1049, 1381], [1059, 1352, 1129, 1389], [1142, 1352, 1170, 1389], [1176, 1352, 1256, 1380], [1269, 1353, 1358, 1381], [1372, 1361, 1390, 1380], [1406, 1358, 1427, 1382], [1443, 1352, 1488, 1380], [1503, 1352, 1577, 1381], [1590, 1352, 1653, 1380], [1665, 1352, 1694, 1380], [1699, 1349, 1754, 1390], [1772, 1365, 1800, 1374], [1816, 1349, 1855, 1391], [1860, 1372, 1922, 1395], [1934, 1361, 1981, 1387], [438, 1434, 515, 1462], [530, 1434, 565, 1468], [585, 1443, 602, 1462], [617, 1434, 757, 1462], [773, 1434, 799, 1462], [815, 1434, 955, 1462], [971, 1434, 998, 1462], [1011, 1434, 1034, 1462], [1050, 1434, 1164, 1471], [1181, 1434, 1300, 1471], [1317, 1434, 1367, 1462], [1384, 1443, 1468, 1462], [1485, 1434, 1574, 1463], [1590, 1434, 1638, 1462], [1654, 1434, 1730, 1462], [1746, 1434, 1879, 1462], [1895, 1434, 1994, 1462], [2010, 1438, 2040, 1462], [2057, 1434, 2107, 1462], [2124, 1438, 2177, 1468], [375, 1485, 540, 1522], [553, 1485, 589, 1513], [598, 1485, 648, 1513], [659, 1485, 744, 1513], [755, 1485, 899, 1513], [913, 1485, 944, 1513], [956, 1485, 1005, 1513], [1018, 1489, 1070, 1513], [1086, 1485, 1114, 1513], [1127, 1494, 1270, 1513], [1283, 1485, 1444, 1513], [1456, 1485, 1504, 1513], [1515, 1485, 1653, 1513], [1664, 1485, 1815, 1513], [1829, 1485, 1853, 1513], [1868, 1482, 1944, 1523], [1962, 1498, 1990, 1507], [2006, 1482, 2045, 1524], [2050, 1505, 2112, 1528], [2124, 1494, 2173, 1520], [439, 1536, 644, 1565], [656, 1536, 812, 1564], [826, 1545, 883, 1564], [895, 1536, 934, 1564], [948, 1536, 1076, 1573], [1090, 1545, 1122, 1564], [1136, 1545, 1253, 1565], [1267, 1536, 1422, 1564], [1436, 1536, 1468, 1564], [1481, 1536, 1531, 1564], [1543, 1536, 1640, 1564], [1652, 1536, 1688, 1564], [1699, 1536, 1829, 1564], [1842, 1536, 2064, 1573], [2079, 1536, 2111, 1564], [2124, 1536, 2174, 1564], [377, 1596, 465, 1615], [478, 1587, 541, 1615], [553, 1587, 623, 1624], [637, 1587, 752, 1615], [764, 1587, 867, 1615], [879, 1587, 1047, 1624], [1060, 1587, 1123, 1615], [1136, 1587, 1226, 1616], [1239, 1587, 1288, 1615], [1300, 1587, 1437, 1615], [1449, 1587, 1670, 1624], [1690, 1587, 1851, 1624], [1866, 1587, 2006, 1615], [2018, 1587, 2173, 1615], [377, 1647, 425, 1666], [437, 1638, 607, 1666], [618, 1642, 649, 1666], [661, 1638, 756, 1666], [768, 1638, 931, 1666], [948, 1639, 989, 1666], [1002, 1638, 1091, 1666], [1104, 1638, 1179, 1666], [1190, 1638, 1389, 1666], [1402, 1638, 1527, 1675], [1538, 1647, 1585, 1667], [1596, 1638, 1715, 1675], [1727, 1638, 1763, 1666], [1772, 1638, 1822, 1666], [1834, 1638, 1995, 1675], [2007, 1638, 2173, 1675], [376, 1693, 528, 1726], [376, 1770, 549, 1800], [560, 1770, 620, 1800], [634, 1771, 726, 1806], [737, 1771, 906, 1808], [930, 1771, 989, 1799], [1002, 1771, 1076, 1800], [1085, 1771, 1230, 1808], [1244, 1771, 1298, 1805], [1313, 1771, 1351, 1808], [1356, 1781, 1375, 1799], [1387, 1771, 1586, 1800], [1590, 1771, 1732, 1808], [1745, 1771, 1774, 1799], [1788, 1772, 1812, 1800], [1826, 1771, 1873, 1799], [1882, 1771, 2073, 1808], [2084, 1772, 2174, 1808], [376, 1821, 413, 1858], [766, 1869, 1020, 1910], [1040, 1869, 1453, 1910], [1506, 1869, 1782, 1910], [438, 1954, 515, 1982], [526, 1954, 561, 1988], [575, 1954, 625, 1982], [636, 1954, 710, 1982], [721, 1954, 869, 1991], [881, 1954, 907, 1982], [920, 1963, 937, 1982], [947, 1954, 1140, 1991], [1151, 1954, 1275, 1982], [1286, 1954, 1417, 1991], [1428, 1954, 1524, 1982], [1535, 1954, 1702, 1991], [1715, 1954, 1895, 1982], [1908, 1963, 1949, 1982], [1961, 1954, 2011, 1982], [2023, 1954, 2127, 1983], [2140, 1954, 2176, 1982], [377, 2005, 406, 2033], [418, 2005, 467, 2033], [478, 2014, 568, 2042], [581, 2014, 640, 2033], [652, 2005, 688, 2033], [698, 2005, 748, 2033], [760, 2015, 783, 2033], [795, 2005, 943, 2033], [956, 2005, 992, 2033], [1002, 2005, 1052, 2033], [1063, 2009, 1215, 2042], [1227, 1998, 1271, 2033], [1277, 2029, 1283, 2039], [1297, 2005, 1356, 2033], [1369, 2014, 1407, 2033], [1418, 2005, 1553, 2042], [1565, 2005, 1731, 2033], [1742, 2005, 1791, 2033], [1802, 2005, 1852, 2033], [1864, 2005, 2018, 2042], [2031, 2009, 2084, 2033], [2100, 2005, 2173, 2033], [375, 2056, 481, 2084], [494, 2056, 525, 2084], [538, 2065, 554, 2084], [566, 2056, 795, 2084], [807, 2056, 933, 2084], [944, 2056, 980, 2084], [989, 2056, 1160, 2090], [1172, 2056, 1225, 2084], [1236, 2056, 1416, 2093], [1428, 2056, 1485, 2084], [1498, 2056, 1643, 2093], [1654, 2056, 1718, 2085], [1729, 2060, 1782, 2084], [1792, 2056, 1831, 2084], [1841, 2056, 1917, 2084], [1929, 2056, 2060, 2093], [376, 2137, 549, 2167], [560, 2137, 620, 2167], [634, 2138, 774, 2175], [786, 2138, 943, 2173], [967, 2138, 1025, 2166], [1038, 2143, 1162, 2175], [1166, 2138, 1304, 2175], [1318, 2137, 1363, 2172], [1371, 2138, 1426, 2175], [1436, 2148, 1517, 2167], [1530, 2143, 1700, 2175], [1712, 2138, 1816, 2167], [1827, 2148, 1936, 2167], [1948, 2143, 1993, 2167], [2004, 2136, 2033, 2166], [2048, 2144, 2069, 2168], [2085, 2138, 2133, 2166], [2149, 2139, 2174, 2167], [375, 2190, 464, 2226], [476, 2189, 514, 2226], [1014, 2237, 1118, 2278], [1136, 2253, 1164, 2262], [1179, 2249, 1239, 2276], [1252, 2232, 1296, 2282], [1300, 2231, 1322, 2251], [1327, 2238, 1494, 2270], [1500, 2232, 1534, 2282], [438, 2322, 501, 2350], [514, 2326, 637, 2359], [648, 2322, 784, 2350], [796, 2322, 821, 2350], [833, 2322, 934, 2350], [946, 2322, 1034, 2351], [1047, 2322, 1213, 2350], [1225, 2322, 1297, 2351], [1309, 2322, 1359, 2350], [1370, 2322, 1529, 2359], [1541, 2322, 1707, 2350], [375, 2403, 549, 2433], [564, 2403, 624, 2433], [641, 2404, 719, 2439], [722, 2404, 774, 2432], [789, 2404, 973, 2439], [999, 2404, 1137, 2441], [1154, 2414, 1173, 2432], [1189, 2404, 1387, 2441], [1404, 2404, 1433, 2432], [1449, 2404, 1524, 2433], [1541, 2404, 1606, 2432], [1621, 2404, 1650, 2432], [1655, 2400, 1700, 2442], [1725, 2417, 1753, 2426], [1775, 2404, 1800, 2433], [1828, 2405, 1870, 2433], [1884, 2405, 1947, 2433], [1948, 2404, 2001, 2435], [2016, 2405, 2173, 2433], [377, 2454, 398, 2492], [415, 2465, 419, 2483], [435, 2455, 480, 2483], [497, 2462, 534, 2483], [549, 2455, 577, 2483], [590, 2456, 615, 2484], [627, 2455, 747, 2492], [759, 2455, 886, 2492], [899, 2455, 946, 2483], [952, 2455, 1114, 2492], [1126, 2455, 1318, 2484], [1337, 2455, 1410, 2483], [1423, 2464, 1455, 2483], [1472, 2461, 1493, 2485], [1510, 2455, 1555, 2483], [1570, 2456, 1654, 2492], [1666, 2460, 1695, 2483], [1709, 2454, 1730, 2492], [1731, 2479, 1737, 2488], [1753, 2455, 1816, 2484], [1826, 2455, 1917, 2484], [1928, 2456, 1964, 2484], [1977, 2460, 2173, 2492], [377, 2505, 816, 2546], [835, 2507, 1009, 2548], [1025, 2505, 1094, 2533], [837, 2631, 923, 2672], [941, 2647, 969, 2656], [1004, 2595, 1020, 2614], [985, 2622, 1041, 2680], [985, 2692, 1041, 2712], [1048, 2631, 1711, 2672], [438, 2759, 533, 2788], [548, 2759, 722, 2796], [737, 2759, 913, 2787], [930, 2768, 979, 2787], [994, 2759, 1141, 2796], [1167, 2768, 1218, 2787], [1234, 2759, 1320, 2787], [1338, 2758, 1378, 2793], [1397, 2759, 1445, 2787], [1461, 2759, 1578, 2787], [1605, 2759, 1670, 2787], [1685, 2759, 1847, 2796], [1862, 2759, 1956, 2787], [1971, 2759, 2051, 2787], [2068, 2759, 2108, 2787], [2124, 2759, 2174, 2787], [376, 2810, 548, 2838], [562, 2819, 596, 2838], [608, 2810, 659, 2838], [1255, 2934, 1295, 2964], [376, 241, 578, 279], [589, 241, 680, 271], [702, 243, 761, 270], [773, 242, 802, 270], [815, 242, 1013, 271], [1016, 242, 1158, 279], [1170, 242, 1243, 271], [1257, 242, 1320, 270], [1331, 242, 1360, 270], [1366, 238, 1411, 280], [1429, 255, 1457, 264], [1472, 242, 1489, 271], [1502, 252, 1546, 271], [1559, 242, 1635, 271], [439, 336, 455, 352], [478, 327, 519, 355], [530, 327, 592, 355], [593, 326, 645, 357], [656, 327, 811, 355], [824, 325, 845, 363], [859, 327, 883, 355], [896, 336, 915, 354], [927, 336, 1039, 355], [1043, 326, 1191, 363], [439, 420, 455, 436], [480, 410, 539, 438], [552, 415, 678, 447], [682, 410, 823, 447], [836, 410, 873, 447], [879, 411, 915, 439], [928, 410, 1002, 439], [1010, 410, 1155, 447], [1169, 411, 1193, 439], [1206, 410, 1297, 447], [1309, 415, 1338, 438], [1352, 411, 1388, 439], [1400, 411, 1461, 439], [1462, 410, 1514, 441], [1526, 411, 1687, 443], [1704, 410, 1767, 438], [1779, 411, 1810, 443], [1827, 409, 1894, 448], [1904, 407, 1955, 448], [1973, 423, 2001, 432], [2017, 409, 2038, 447], [2044, 407, 2105, 448], [439, 504, 455, 520], [480, 494, 539, 522], [548, 494, 686, 531], [699, 494, 840, 533], [853, 491, 939, 532], [956, 495, 980, 523], [993, 494, 1066, 523], [1078, 499, 1106, 522], [1120, 494, 1207, 528], [1220, 491, 1298, 532], [1314, 498, 1342, 525], [1361, 486, 1372, 505], [1360, 517, 1373, 536], [1385, 488, 1464, 532], [1451, 513, 1473, 532], [1489, 494, 1559, 523], [1572, 493, 1612, 523], [1630, 507, 1658, 516], [1675, 491, 1769, 532], [1757, 491, 1878, 533], [438, 579, 495, 606], [510, 578, 616, 615], [634, 587, 675, 606], [691, 578, 776, 606], [791, 578, 893, 615], [910, 587, 958, 607], [974, 578, 1053, 606], [1069, 582, 1100, 606], [1117, 578, 1203, 606], [1221, 577, 1274, 612], [1303, 578, 1367, 606], [1384, 578, 1540, 615], [1557, 578, 1638, 606], [1654, 578, 1738, 606], [1753, 578, 1779, 606], [1796, 578, 1859, 606], [1875, 587, 1933, 615], [1950, 578, 2174, 606], [376, 637, 417, 656], [431, 637, 448, 656], [461, 628, 659, 656], [672, 628, 812, 656], [825, 637, 883, 656], [895, 628, 934, 656], [948, 632, 1013, 656], [1025, 628, 1089, 656], [1104, 637, 1121, 656], [1134, 637, 1251, 657], [1265, 628, 1478, 665], [1490, 628, 1639, 665], [1660, 628, 1879, 662], [1895, 628, 1943, 656], [1956, 628, 2043, 656], [2057, 637, 2174, 657], [376, 679, 596, 707], [607, 679, 759, 716], [773, 679, 878, 708], [890, 679, 1039, 716], [1051, 683, 1131, 707], [1144, 683, 1197, 707], [1208, 683, 1238, 707], [1250, 679, 1288, 707], [1300, 679, 1350, 707], [1361, 680, 1426, 708], [1429, 679, 1478, 707], [1491, 679, 1648, 707], [1660, 679, 1696, 707], [1706, 688, 1792, 707], [1804, 679, 1888, 707], [1900, 679, 2045, 713], [2059, 688, 2106, 708], [2118, 688, 2174, 707], [376, 734, 455, 758], [467, 730, 516, 758], [529, 734, 608, 767], [621, 730, 670, 758], [682, 730, 767, 758], [778, 739, 845, 767], [856, 730, 961, 764], [975, 730, 1130, 767], [1142, 730, 1191, 758], [1203, 730, 1423, 758], [1435, 730, 1470, 758], [1481, 739, 1497, 758], [1509, 730, 1704, 758], [1715, 730, 1860, 758], [438, 781, 587, 810], [598, 790, 667, 810], [680, 790, 696, 809], [708, 781, 877, 818], [888, 781, 1026, 818], [1037, 781, 1179, 820], [1191, 778, 1230, 820], [1233, 802, 1246, 827], [1260, 781, 1297, 821], [1306, 778, 1370, 819], [1386, 781, 1449, 809], [1461, 781, 1620, 818], [1631, 781, 1737, 809], [1750, 781, 1823, 809], [375, 870, 578, 908], [592, 870, 682, 900], [709, 871, 768, 899], [779, 871, 921, 908], [935, 871, 1076, 911], [1089, 868, 1128, 910], [1131, 893, 1144, 918], [1157, 871, 1195, 912], [1203, 868, 1255, 909], [1274, 872, 1300, 900], [1314, 871, 1490, 908], [1504, 876, 1533, 899], [1548, 871, 1633, 906], [1646, 868, 1685, 910], [1688, 864, 1879, 918], [1867, 895, 1880, 914], [1892, 865, 1967, 909], [1954, 891, 1977, 910], [1995, 871, 2066, 900], [2082, 870, 2122, 900], [2144, 884, 2172, 893], [378, 926, 467, 967], [455, 949, 469, 969], [488, 931, 514, 963], [531, 926, 577, 967], [594, 929, 805, 957], [819, 930, 841, 957], [853, 930, 877, 958], [890, 929, 956, 958], [969, 929, 1142, 966], [1154, 934, 1182, 957], [1195, 929, 1291, 971], [1299, 943, 1372, 978], [1385, 943, 1416, 969], [1436, 921, 1447, 940], [1435, 926, 1516, 971], [1519, 950, 1532, 975], [1544, 923, 1617, 969], [1604, 948, 1626, 967], [1642, 929, 1712, 958], [1724, 928, 1761, 957], [1779, 942, 1850, 951], [1862, 926, 1901, 968], [1904, 928, 1965, 975], [1949, 949, 1976, 974], [375, 1013, 474, 1050], [499, 1013, 563, 1041], [577, 1013, 643, 1041], [656, 1013, 854, 1050], [868, 1013, 894, 1041], [910, 1022, 927, 1041], [940, 1013, 1035, 1041], [1047, 1013, 1142, 1041], [1155, 1013, 1191, 1041], [1202, 1013, 1252, 1041], [1265, 1013, 1433, 1050], [1448, 1013, 1484, 1041], [1496, 1013, 1615, 1042], [1629, 1013, 1805, 1041], [1823, 1012, 1876, 1047], [1892, 1013, 1924, 1041], [1936, 1013, 2099, 1050], [2112, 1013, 2175, 1041], [376, 1064, 423, 1092], [436, 1064, 470, 1100], [482, 1063, 512, 1093], [525, 1064, 738, 1092], [751, 1064, 824, 1093], [836, 1065, 901, 1093], [904, 1063, 955, 1092], [967, 1064, 1141, 1092], [1155, 1063, 1183, 1101], [1194, 1074, 1213, 1101], [1217, 1088, 1223, 1098], [1237, 1064, 1286, 1092], [1298, 1065, 1363, 1093], [1366, 1063, 1417, 1092], [1429, 1064, 1587, 1092], [1600, 1064, 1635, 1092], [1646, 1064, 1675, 1092], [1687, 1068, 1715, 1095], [1729, 1063, 1759, 1093], [1771, 1064, 1797, 1092], [1810, 1063, 1831, 1101], [1844, 1068, 1872, 1095], [1885, 1074, 1913, 1101], [1929, 1065, 1986, 1092], [1997, 1064, 2047, 1092], [2060, 1064, 2175, 1092], [376, 1114, 570, 1151], [582, 1123, 629, 1143], [640, 1114, 725, 1143], [724, 1213, 791, 1241], [747, 1253, 765, 1266], [801, 1201, 857, 1259], [821, 1271, 834, 1296], [868, 1210, 959, 1253], [974, 1217, 1002, 1244], [1022, 1205, 1033, 1224], [1021, 1236, 1034, 1255], [1045, 1210, 1103, 1251], [1111, 1205, 1124, 1224], [1111, 1213, 1251, 1251], [1208, 1253, 1226, 1266], [1261, 1201, 1317, 1259], [1281, 1271, 1294, 1296], [1328, 1212, 1404, 1262], [1424, 1205, 1482, 1244], [1470, 1236, 1483, 1255], [1495, 1210, 1553, 1251], [1561, 1205, 1574, 1224], [1561, 1232, 1585, 1251], [1141, 1345, 1169, 1354], [1184, 1332, 1251, 1360], [1208, 1372, 1226, 1385], [1261, 1320, 1317, 1378], [1281, 1390, 1294, 1415], [1346, 1341, 1421, 1360], [1327, 1373, 1354, 1395], [1361, 1366, 1435, 1401], [1449, 1322, 1497, 1368], [1473, 1336, 1567, 1376], [1587, 1324, 1598, 1343], [1586, 1355, 1599, 1374], [1610, 1329, 1668, 1370], [1676, 1323, 1689, 1342], [1676, 1351, 1701, 1370], [1141, 1505, 1169, 1514], [1224, 1501, 1300, 1520], [1184, 1534, 1214, 1555], [1221, 1527, 1295, 1562], [1307, 1527, 1339, 1553], [1349, 1492, 1416, 1520], [1373, 1532, 1391, 1545], [1436, 1435, 1459, 1510], [1436, 1481, 1519, 1584], [1483, 1550, 1496, 1575], [1528, 1483, 1576, 1528], [1552, 1496, 1646, 1536], [1666, 1485, 1677, 1504], [1665, 1515, 1678, 1534], [1689, 1489, 1747, 1530], [1755, 1484, 1768, 1503], [1755, 1511, 1768, 1530], [1773, 1435, 1796, 1510], [1773, 1509, 1823, 1584], [1141, 1630, 1169, 1639], [1229, 1617, 1296, 1645], [1184, 1659, 1214, 1680], [1221, 1652, 1295, 1687], [1307, 1652, 1339, 1678], [1356, 1609, 1367, 1628], [1355, 1614, 1390, 1659], [1397, 1605, 1453, 1663], [1418, 1675, 1431, 1700], [1463, 1626, 1500, 1657], [1509, 1608, 1540, 1655], [1527, 1636, 1552, 1655], [377, 1752, 434, 1780], [446, 1752, 495, 1780], [507, 1752, 577, 1780], [588, 1752, 783, 1789], [796, 1751, 836, 1780], [854, 1765, 925, 1774], [937, 1749, 976, 1791], [979, 1751, 1043, 1799], [1028, 1772, 1041, 1797], [1060, 1761, 1163, 1780], [1176, 1752, 1256, 1780], [1268, 1752, 1388, 1789], [1400, 1752, 1449, 1780], [1461, 1752, 1546, 1780], [1557, 1752, 1644, 1786], [1659, 1752, 1797, 1789], [1809, 1752, 1856, 1780], [1868, 1761, 1902, 1780], [438, 1836, 598, 1864], [611, 1845, 667, 1873], [679, 1836, 912, 1873], [926, 1836, 1118, 1864], [1129, 1836, 1355, 1870], [1369, 1845, 1402, 1864], [1414, 1845, 1481, 1864], [1492, 1836, 1528, 1864], [1536, 1837, 1601, 1865], [1603, 1836, 1653, 1864], [1665, 1836, 1835, 1864], [1847, 1836, 1914, 1873], [1926, 1835, 1958, 1870], [1973, 1840, 2056, 1870], [2069, 1845, 2125, 1864], [2136, 1836, 2173, 1864], [376, 1887, 477, 1915], [489, 1887, 551, 1915], [565, 1896, 581, 1915], [593, 1887, 756, 1924], [768, 1887, 906, 1924], [917, 1887, 948, 1915], [960, 1891, 1049, 1915], [1062, 1887, 1098, 1915], [1107, 1887, 1157, 1915], [1167, 1887, 1241, 1915], [1251, 1887, 1420, 1924], [1437, 1888, 1493, 1915], [1504, 1891, 1563, 1916], [1576, 1887, 1727, 1915], [1741, 1887, 1790, 1915], [1801, 1887, 1944, 1915], [1954, 1887, 2091, 1924], [2103, 1887, 2128, 1915], [2141, 1887, 2177, 1915], [377, 1938, 489, 1975], [501, 1938, 623, 1966], [634, 1938, 660, 1966], [668, 1938, 817, 1967], [830, 1947, 860, 1966], [595, 2030, 662, 2058], [569, 2065, 682, 2095], [569, 2099, 682, 2130], [703, 2023, 714, 2042], [702, 2027, 894, 2072], [902, 2022, 915, 2041], [902, 2043, 1001, 2068], [1109, 2030, 1176, 2058], [1084, 2072, 1114, 2091], [1122, 2065, 1196, 2095], [1060, 2111, 1080, 2112], [1084, 2106, 1114, 2125], [1122, 2099, 1222, 2130], [1243, 2023, 1254, 2042], [1242, 2027, 1499, 2072], [1507, 2022, 1520, 2041], [1507, 2043, 1606, 2068], [1692, 2030, 1759, 2058], [1675, 2065, 1771, 2095], [1664, 2100, 1782, 2130], [1803, 2023, 1814, 2042], [1802, 2022, 1977, 2072], [1964, 2049, 1977, 2068], [374, 2181, 446, 2210], [460, 2190, 483, 2209], [497, 2194, 525, 2203], [540, 2190, 590, 2217], [605, 2180, 624, 2209], [638, 2194, 666, 2203], [683, 2190, 752, 2217], [758, 2205, 764, 2215], [778, 2190, 810, 2209], [823, 2181, 881, 2209], [892, 2181, 1000, 2209], [1013, 2181, 1043, 2209], [1055, 2181, 1105, 2209], [1117, 2181, 1225, 2209], [1238, 2181, 1403, 2218], [1415, 2181, 1553, 2218], [1565, 2181, 1601, 2209], [1610, 2181, 1727, 2218], [1739, 2181, 1788, 2209], [1800, 2181, 1913, 2209], [1923, 2181, 2024, 2218], [2035, 2181, 2174, 2210], [376, 2236, 435, 2261], [448, 2241, 563, 2261], [576, 2236, 644, 2260], [660, 2233, 754, 2269], [767, 2232, 940, 2269], [953, 2232, 1029, 2261], [1040, 2232, 1118, 2260], [1129, 2232, 1280, 2269], [1292, 2236, 1321, 2260], [1334, 2232, 1432, 2260], [1443, 2232, 1595, 2269], [1608, 2232, 1639, 2260], [1651, 2232, 1708, 2260], [1721, 2232, 1809, 2266], [1822, 2236, 1902, 2260], [1913, 2232, 1949, 2260], [1958, 2232, 2040, 2260], [2051, 2232, 2173, 2269], [375, 2291, 430, 2310], [445, 2282, 481, 2310], [494, 2282, 672, 2319], [686, 2282, 857, 2319], [871, 2282, 1045, 2319], [1060, 2286, 1133, 2310], [1148, 2282, 1198, 2310], [1213, 2286, 1274, 2311], [1290, 2286, 1359, 2310], [1383, 2282, 1475, 2316], [1493, 2291, 1510, 2310], [1523, 2282, 1690, 2319], [1705, 2291, 1838, 2310], [1852, 2282, 1877, 2310], [1892, 2282, 1962, 2311], [1977, 2291, 2050, 2319], [2065, 2282, 2088, 2310], [2102, 2282, 2127, 2310], [2143, 2286, 2173, 2310], [376, 2337, 517, 2370], [530, 2333, 603, 2361], [614, 2333, 797, 2370], [810, 2333, 858, 2361], [870, 2333, 932, 2372], [951, 2333, 1008, 2361], [1022, 2333, 1116, 2372], [1126, 2357, 1131, 2361], [376, 2416, 578, 2454], [590, 2416, 680, 2446], [705, 2417, 803, 2446], [815, 2427, 834, 2445], [847, 2417, 1049, 2446], [1053, 2417, 1196, 2454], [1210, 2417, 1239, 2445], [1252, 2417, 1315, 2446], [1327, 2418, 1364, 2446], [1376, 2417, 1451, 2446], [1461, 2417, 1608, 2454], [1622, 2417, 1675, 2451], [1679, 2441, 1685, 2450], [1702, 2417, 1750, 2445], [1759, 2418, 1950, 2454], [1962, 2417, 2038, 2456], [2047, 2414, 2096, 2455], [2112, 2417, 2175, 2446], [376, 2468, 477, 2506], [486, 2465, 535, 2506], [551, 2468, 589, 2505], [594, 2478, 613, 2496], [621, 2469, 709, 2505], [721, 2477, 741, 2496], [756, 2473, 827, 2496], [841, 2468, 894, 2502], [909, 2478, 946, 2496], [957, 2469, 994, 2497], [1006, 2468, 1136, 2505], [1146, 2473, 1342, 2505], [1353, 2478, 1411, 2496], [1423, 2468, 1460, 2496], [1473, 2468, 1634, 2505], [1644, 2478, 1679, 2497], [1052, 2560, 1127, 2599], [1137, 2557, 1186, 2598], [1203, 2573, 1231, 2582], [1247, 2569, 1267, 2588], [1282, 2577, 1308, 2578], [1322, 2557, 1488, 2605], [1026, 2628, 1127, 2667], [1137, 2625, 1186, 2666], [1203, 2641, 1231, 2650], [1247, 2637, 1267, 2656], [1281, 2632, 1309, 2659], [1322, 2637, 1420, 2672], [1427, 2625, 1521, 2666], [376, 2721, 445, 2750], [457, 2730, 536, 2757], [545, 2722, 704, 2758], [716, 2726, 861, 2758], [871, 2721, 909, 2758], [914, 2731, 933, 2749], [938, 2721, 1086, 2758], [1103, 2720, 1124, 2758], [1138, 2721, 1185, 2749], [1197, 2722, 1259, 2750], [1260, 2721, 1312, 2752], [1323, 2722, 1478, 2750], [1490, 2721, 1528, 2758], [1533, 2721, 1562, 2749], [1565, 2745, 1570, 2749], [1255, 2934, 1293, 2964], [375, 242, 474, 279], [498, 243, 552, 270], [565, 246, 635, 270], [646, 242, 718, 271], [730, 242, 779, 270], [790, 242, 953, 279], [965, 242, 1001, 270], [1011, 241, 1032, 279], [1046, 242, 1104, 270], [1116, 242, 1200, 271], [1211, 251, 1266, 270], [1277, 251, 1344, 279], [1356, 246, 1386, 270], [1399, 251, 1415, 270], [1426, 242, 1622, 279], [1634, 242, 1706, 271], [1718, 242, 1767, 270], [1778, 242, 1946, 279], [1958, 246, 2101, 279], [847, 343, 944, 378], [952, 331, 1001, 372], [1019, 343, 1047, 360], [1061, 334, 1128, 362], [1085, 374, 1103, 387], [1138, 327, 1291, 372], [1279, 331, 1437, 376], [1444, 326, 1457, 345], [1444, 353, 1469, 372], [1019, 430, 1047, 439], [1069, 426, 1144, 445], [1061, 451, 1149, 477], [1160, 417, 1227, 445], [1184, 456, 1202, 469], [1236, 407, 1284, 453], [1289, 421, 1354, 448], [1373, 409, 1384, 428], [1372, 414, 1531, 459], [1538, 408, 1551, 427], [1538, 436, 1563, 455], [1019, 520, 1047, 529], [1069, 516, 1144, 535], [1061, 542, 1149, 568], [1160, 498, 1415, 545], [1403, 504, 1668, 549], [1675, 499, 1688, 518], [1675, 526, 1700, 545], [1019, 610, 1047, 619], [1073, 597, 1140, 625], [1061, 632, 1149, 658], [1167, 590, 1178, 609], [1166, 620, 1179, 639], [1191, 589, 1268, 635], [1255, 606, 1347, 635], [1350, 588, 1372, 608], [1377, 606, 1408, 633], [1019, 695, 1047, 712], [1073, 686, 1140, 714], [1061, 721, 1149, 747], [1167, 679, 1178, 698], [1166, 683, 1323, 728], [1331, 678, 1344, 697], [1331, 683, 1550, 724], [374, 797, 474, 826], [487, 797, 607, 834], [619, 797, 668, 825], [680, 797, 765, 825], [776, 797, 996, 825], [1008, 797, 1146, 834], [1158, 797, 1205, 825], [1218, 806, 1241, 825], [1254, 797, 1337, 834], [1351, 797, 1400, 825], [1411, 797, 1612, 834], [1623, 797, 1818, 834], [1832, 796, 1871, 825], [1890, 806, 2031, 833], [2036, 796, 2047, 809], [2055, 821, 2060, 825], [2076, 797, 2174, 834], [376, 848, 434, 876], [453, 857, 500, 877], [518, 857, 576, 876], [593, 848, 697, 876], [715, 848, 765, 876], [783, 848, 918, 876], [935, 848, 983, 876], [1000, 848, 1050, 876], [1067, 848, 1238, 885], [1255, 848, 1396, 885], [1413, 848, 1494, 876], [1511, 848, 1561, 876], [1578, 848, 1744, 885], [1761, 848, 1910, 885], [1932, 857, 1964, 876], [1982, 848, 2057, 886], [2067, 845, 2116, 886], [2144, 861, 2172, 870], [377, 907, 397, 926], [416, 915, 442, 916], [460, 907, 558, 943], [566, 895, 627, 936], [662, 898, 835, 935], [853, 902, 926, 926], [944, 898, 994, 926], [1013, 898, 1142, 935], [1159, 898, 1234, 926], [1251, 898, 1398, 935], [1417, 898, 1540, 927], [1559, 898, 1641, 926], [1658, 898, 1708, 926], [1726, 898, 1811, 926], [1830, 898, 1997, 935], [2017, 902, 2175, 935], [376, 949, 477, 988], [486, 946, 535, 987], [553, 962, 581, 971], [598, 949, 703, 988], [713, 946, 806, 987], [376, 1079, 412, 1119], [475, 1079, 674, 1131], [692, 1079, 879, 1120], [374, 1185, 424, 1213], [436, 1185, 483, 1213], [495, 1185, 746, 1213], [756, 1185, 915, 1222], [928, 1185, 1038, 1214], [1051, 1185, 1081, 1213], [1092, 1185, 1148, 1213], [1160, 1194, 1250, 1222], [1260, 1185, 1334, 1214], [1345, 1185, 1421, 1213], [1432, 1185, 1643, 1222], [1655, 1194, 1685, 1213], [1698, 1185, 1745, 1213], [1757, 1185, 1895, 1222], [1906, 1185, 2029, 1213], [2040, 1185, 2087, 1213], [2097, 1185, 2178, 1219], [375, 1235, 490, 1263], [504, 1235, 561, 1263], [573, 1235, 696, 1272], [711, 1235, 855, 1264], [869, 1239, 897, 1263], [907, 1235, 1472, 1272], [1487, 1235, 1548, 1263], [1561, 1235, 1686, 1263], [1697, 1235, 1750, 1263], [1762, 1235, 1839, 1263], [1851, 1235, 1996, 1272], [2008, 1239, 2038, 1263], [2050, 1235, 2087, 1263], [2099, 1235, 2174, 1263], [376, 1290, 429, 1314], [440, 1286, 476, 1314], [485, 1286, 535, 1314], [546, 1286, 609, 1314], [621, 1286, 652, 1314], [665, 1295, 682, 1314], [693, 1295, 763, 1314], [774, 1286, 906, 1323], [918, 1295, 996, 1323], [1010, 1286, 1059, 1314], [1070, 1286, 1215, 1320], [1229, 1286, 1279, 1314], [1291, 1286, 1445, 1323], [1457, 1286, 1575, 1314], [1587, 1286, 1726, 1314], [1740, 1291, 1787, 1314], [1799, 1286, 1901, 1315], [1914, 1286, 2173, 1314], [375, 1337, 538, 1374], [550, 1337, 597, 1365], [609, 1346, 625, 1365], [637, 1337, 726, 1374], [739, 1337, 836, 1374], [847, 1337, 941, 1365], [954, 1346, 970, 1365], [981, 1337, 1094, 1374], [1106, 1337, 1142, 1365], [1152, 1337, 1285, 1374], [1301, 1338, 1357, 1365], [1369, 1337, 1503, 1365], [372, 1419, 424, 1443], [448, 1413, 564, 1448], [579, 1413, 741, 1448], [377, 1488, 478, 1517], [493, 1489, 553, 1523], [570, 1488, 736, 1525], [751, 1488, 799, 1516], [814, 1497, 831, 1516], [845, 1488, 944, 1525], [959, 1493, 980, 1516], [996, 1488, 1032, 1516], [1045, 1497, 1102, 1525], [1117, 1488, 1292, 1516], [1307, 1488, 1366, 1516], [1381, 1497, 1398, 1516], [1410, 1488, 1645, 1525], [1659, 1488, 1747, 1517], [1765, 1491, 1918, 1517], [1942, 1488, 2006, 1516], [2020, 1488, 2174, 1525], [374, 1539, 497, 1568], [510, 1539, 546, 1567], [557, 1539, 616, 1567], [629, 1539, 770, 1576], [783, 1539, 809, 1567], [824, 1539, 889, 1567], [904, 1539, 1084, 1576], [1098, 1539, 1219, 1567], [1231, 1539, 1272, 1576], [1282, 1539, 1346, 1576], [1358, 1539, 1521, 1576], [1535, 1548, 1552, 1567], [1565, 1543, 1669, 1568], [1682, 1539, 1718, 1567], [1729, 1539, 1858, 1576], [1872, 1539, 1908, 1567], [1919, 1539, 1969, 1567], [1984, 1539, 2174, 1576], [376, 1590, 478, 1627], [491, 1599, 521, 1618], [535, 1590, 584, 1618], [599, 1593, 741, 1619], [755, 1594, 926, 1627], [438, 1641, 467, 1669], [477, 1650, 493, 1669], [505, 1641, 581, 1669], [592, 1645, 759, 1678], [770, 1651, 791, 1677], [805, 1641, 830, 1669], [842, 1641, 988, 1678], [1001, 1650, 1032, 1669], [372, 1723, 424, 1747], [448, 1717, 716, 1752], [732, 1741, 738, 1751], [750, 1717, 791, 1754], [375, 1792, 425, 1820], [437, 1792, 557, 1829], [569, 1793, 630, 1833], [644, 1792, 807, 1829], [818, 1792, 956, 1829], [968, 1792, 992, 1820], [1007, 1792, 1176, 1826], [1190, 1792, 1373, 1829], [1386, 1801, 1422, 1820], [1436, 1792, 1581, 1829], [1593, 1792, 1692, 1821], [1704, 1792, 1728, 1820], [1742, 1792, 1855, 1820], [1866, 1792, 1907, 1829], [1919, 1792, 1969, 1820], [1980, 1792, 2095, 1829], [437, 1844, 524, 1871], [537, 1843, 687, 1872], [697, 1852, 765, 1871], [778, 1843, 813, 1871], [822, 1843, 869, 1871], [881, 1843, 987, 1880], [1001, 1852, 1047, 1871], [1058, 1843, 1199, 1880], [1213, 1843, 1351, 1880], [1364, 1847, 1393, 1871], [1406, 1843, 1520, 1880], [1532, 1843, 1630, 1872], [1642, 1852, 1727, 1871], [1737, 1853, 1758, 1879], [1773, 1843, 1830, 1871], [1840, 1843, 2016, 1880], [2029, 1846, 2172, 1872], [374, 1894, 479, 1923], [495, 1898, 526, 1922], [541, 1903, 597, 1922], [613, 1894, 661, 1922], [676, 1894, 752, 1922], [767, 1894, 943, 1922], [958, 1894, 994, 1922], [1007, 1894, 1057, 1922], [1073, 1894, 1181, 1931], [1200, 1894, 1259, 1922], [1274, 1903, 1351, 1923], [1367, 1894, 1512, 1931], [1528, 1894, 1754, 1922], [1770, 1894, 1806, 1922], [1820, 1894, 1936, 1923], [1952, 1894, 2096, 1922], [2110, 1895, 2171, 1934], [375, 1945, 572, 1982], [590, 1945, 680, 1982], [696, 1945, 746, 1973], [763, 1954, 847, 1973], [863, 1945, 1046, 1973], [1073, 1945, 1180, 1973], [1194, 1945, 1274, 1973], [1289, 1949, 1320, 1973], [1336, 1945, 1386, 1973], [1401, 1945, 1652, 1973], [1667, 1945, 1774, 1974], [1789, 1945, 1839, 1973], [1855, 1945, 1982, 1973], [1998, 1945, 2046, 1973], [2061, 1945, 2175, 1973], [376, 1996, 579, 2024], [378, 2124, 416, 2166], [478, 2124, 622, 2166], [636, 2137, 696, 2166], [713, 2125, 790, 2166], [809, 2124, 1012, 2177], [1030, 2124, 1080, 2166], [1093, 2124, 1364, 2177], [1381, 2125, 1616, 2177], [374, 2231, 533, 2260], [546, 2230, 603, 2260], [618, 2231, 769, 2268], [782, 2231, 817, 2259], [826, 2231, 995, 2268], [1007, 2231, 1184, 2268], [1208, 2231, 1304, 2260], [1317, 2231, 1365, 2259], [1374, 2231, 1528, 2268], [607, 2354, 674, 2382], [634, 2394, 647, 2407], [702, 2317, 720, 2330], [684, 2343, 740, 2401], [686, 2412, 736, 2431], [753, 2351, 942, 2392], [948, 2342, 961, 2361], [975, 2378, 979, 2390], [1001, 2351, 1940, 2392], [2090, 2354, 2173, 2389], [375, 2481, 438, 2510], [554, 2555, 621, 2583], [583, 2590, 592, 2594], [581, 2597, 594, 2610], [649, 2518, 667, 2531], [631, 2543, 687, 2601], [633, 2613, 683, 2632], [701, 2526, 857, 2601], [873, 2572, 899, 2573], [917, 2553, 928, 2560], [913, 2564, 985, 2589], [992, 2552, 1002, 2593], [1008, 2543, 1021, 2562], [1028, 2579, 1032, 2591], [1054, 2552, 1165, 2593], [1181, 2552, 1722, 2593], [1707, 2553, 1857, 2591], [1842, 2564, 1993, 2591], [2090, 2555, 2173, 2590], [368, 2666, 424, 2703], [434, 2676, 453, 2694], [465, 2676, 608, 2697], [622, 2671, 725, 2695], [736, 2675, 776, 2699], [792, 2666, 864, 2694], [872, 2666, 1027, 2703], [1039, 2666, 1128, 2695], [1141, 2666, 1189, 2694], [1201, 2676, 1284, 2695], [1297, 2667, 1450, 2694], [1463, 2665, 1497, 2694], [1516, 2665, 1574, 2688], [1559, 2665, 1594, 2694], [1600, 2690, 1605, 2694], [1255, 2934, 1295, 2964], [375, 242, 474, 279], [499, 242, 562, 270], [574, 242, 762, 279], [774, 242, 809, 270], [818, 242, 956, 279], [967, 242, 1020, 271], [1037, 242, 1118, 270], [1132, 242, 1181, 270], [1193, 242, 1272, 270], [578, 368, 797, 409], [832, 334, 850, 347], [813, 360, 869, 418], [815, 429, 865, 448], [882, 368, 1071, 409], [1077, 359, 1090, 378], [1105, 375, 1133, 402], [1146, 328, 1205, 347], [1148, 360, 1204, 418], [1150, 429, 1200, 448], [1217, 368, 1308, 409], [1324, 388, 1350, 389], [1364, 380, 1395, 405], [1411, 388, 1437, 389], [1450, 368, 1510, 409], [1525, 375, 1553, 402], [1565, 328, 1625, 347], [1568, 360, 1624, 418], [1570, 429, 1620, 448], [1635, 368, 1768, 409], [1785, 388, 1811, 389], [1825, 380, 1855, 405], [1870, 375, 1898, 402], [1911, 368, 1970, 409], [376, 498, 434, 526], [446, 498, 482, 526], [495, 498, 849, 526], [860, 498, 1029, 535], [1041, 498, 1211, 526], [1226, 507, 1274, 526], [1286, 498, 1375, 535], [1386, 498, 1426, 535], [954, 587, 1492, 628], [1508, 589, 1595, 626], [2090, 590, 2173, 625], [1254, 651, 1506, 692], [2090, 654, 2173, 689], [1292, 716, 1479, 753], [2090, 716, 2173, 752], [1098, 777, 1189, 818], [1205, 797, 1231, 798], [1245, 789, 1276, 814], [1292, 797, 1318, 798], [1331, 777, 1479, 818], [2090, 780, 2173, 815], [1069, 840, 1202, 881], [1218, 860, 1244, 861], [1258, 840, 1479, 881], [2090, 843, 2173, 878], [375, 945, 604, 982], [617, 946, 1572, 983], [1589, 932, 1737, 961], [1647, 968, 1680, 990], [1759, 959, 1787, 968], [1802, 946, 1819, 975], [1834, 950, 1862, 974], [1873, 946, 1922, 974], [1934, 946, 2102, 974], [438, 997, 481, 1025], [494, 997, 543, 1025], [555, 997, 627, 1034], [639, 997, 804, 1025], [815, 997, 952, 1026], [964, 997, 1116, 1034], [1129, 997, 1182, 1026], [1199, 997, 1256, 1025], [1268, 997, 1325, 1026], [1337, 997, 1362, 1025], [1375, 997, 1406, 1025], [1418, 997, 1467, 1025], [1479, 997, 1558, 1025], [1570, 997, 1606, 1025], [1615, 997, 1664, 1025], [1676, 997, 1833, 1034], [1847, 997, 1896, 1025], [1908, 998, 1991, 1025], [2003, 997, 2172, 1025], [376, 1048, 423, 1076], [433, 1048, 571, 1085], [583, 1048, 640, 1077], [652, 1048, 720, 1076], [731, 1048, 781, 1076], [793, 1057, 876, 1076], [888, 1048, 976, 1082], [989, 1048, 1041, 1076], [1052, 1048, 1100, 1076], [1111, 1048, 1160, 1076], [1172, 1048, 1236, 1076], [1247, 1057, 1314, 1082], [883, 1131, 969, 1172], [985, 1151, 1011, 1152], [1030, 1132, 1041, 1139], [1026, 1131, 1072, 1172], [818, 1187, 1059, 1237], [1077, 1194, 1088, 1201], [1073, 1205, 1103, 1230], [1109, 1193, 1138, 1234], [1159, 1179, 1185, 1180], [1272, 1131, 1388, 1172], [1373, 1131, 1461, 1172], [1208, 1187, 1364, 1237], [1380, 1213, 1406, 1214], [1424, 1194, 1435, 1201], [1420, 1205, 1492, 1230], [1499, 1193, 1528, 1234], [1550, 1160, 1613, 1184], [1594, 1171, 1675, 1196], [1697, 1150, 1708, 1157], [1689, 1161, 1737, 1198], [2090, 1162, 2173, 1197], [1396, 1258, 1435, 1299], [1451, 1258, 1648, 1299], [2090, 1261, 2173, 1296], [1442, 1331, 1453, 1338], [1433, 1342, 1485, 1369], [1504, 1321, 1515, 1328], [1496, 1332, 1620, 1369], [2069, 1333, 2173, 1368], [1248, 1394, 1259, 1401], [1239, 1393, 1331, 1434], [1347, 1413, 1373, 1414], [1386, 1405, 1417, 1430], [1433, 1413, 1459, 1414], [1473, 1393, 1620, 1434], [2069, 1396, 2173, 1431], [1218, 1455, 1229, 1462], [1210, 1464, 1343, 1505], [1359, 1484, 1385, 1485], [1404, 1466, 1415, 1473], [1400, 1464, 1620, 1505], [2069, 1467, 2173, 1502], [375, 1559, 410, 1589], [427, 1573, 455, 1582], [474, 1560, 499, 1596], [513, 1584, 517, 1588], [532, 1584, 536, 1588], [550, 1584, 554, 1588], [569, 1584, 573, 1596], [584, 1570, 607, 1588], [621, 1577, 647, 1578], [664, 1560, 689, 1594], [705, 1560, 764, 1588], [776, 1560, 878, 1589], [891, 1569, 938, 1589], [950, 1569, 1006, 1588], [1018, 1560, 1070, 1588], [1082, 1560, 1220, 1588], [1232, 1560, 1280, 1588], [1293, 1560, 1343, 1588], [1356, 1560, 1427, 1588], [1440, 1560, 1631, 1588], [1645, 1564, 1676, 1588], [1689, 1560, 1741, 1588], [1754, 1560, 1838, 1588], [1851, 1564, 1934, 1597], [1946, 1560, 2028, 1588], [2040, 1560, 2127, 1588], [2140, 1560, 2176, 1588], [375, 1611, 513, 1648], [524, 1611, 577, 1640], [585, 1635, 590, 1639], [439, 1661, 579, 1698], [593, 1660, 627, 1689], [643, 1661, 816, 1689], [828, 1665, 858, 1689], [870, 1661, 1011, 1698], [1022, 1661, 1089, 1695], [1102, 1661, 1200, 1689], [1212, 1661, 1359, 1698], [1371, 1661, 1421, 1689], [1433, 1661, 1607, 1689], [1620, 1661, 1761, 1690], [1777, 1662, 1812, 1689], [1822, 1661, 1984, 1698], [1996, 1661, 2054, 1689], [2067, 1670, 2173, 1689], [376, 1712, 436, 1740], [447, 1712, 469, 1740], [480, 1712, 505, 1740], [518, 1712, 643, 1740], [656, 1716, 685, 1740], [699, 1712, 799, 1749], [811, 1712, 912, 1741], [925, 1716, 954, 1740], [967, 1712, 1015, 1740], [1028, 1712, 1097, 1740], [1109, 1712, 1293, 1740], [1308, 1721, 1345, 1748], [1357, 1711, 1383, 1748], [1396, 1712, 1426, 1740], [1439, 1712, 1512, 1740], [1525, 1721, 1541, 1740], [1552, 1721, 1618, 1749], [1630, 1712, 1690, 1740], [1702, 1712, 1750, 1740], [1763, 1712, 1930, 1740], [1945, 1712, 2038, 1741], [2052, 1721, 2099, 1740], [2111, 1716, 2179, 1740], [376, 1761, 548, 1792], [563, 1772, 625, 1791], [630, 1762, 641, 1775], [658, 1763, 688, 1791], [700, 1763, 750, 1791], [761, 1763, 931, 1791], [945, 1763, 1000, 1792], [1005, 1763, 1042, 1792], [1047, 1763, 1095, 1791], [1107, 1763, 1157, 1791], [1169, 1763, 1327, 1800], [1339, 1763, 1545, 1792], [1559, 1772, 1608, 1791], [1620, 1763, 1655, 1791], [1664, 1763, 1820, 1792], [439, 1857, 455, 1873], [479, 1847, 644, 1876], [656, 1847, 712, 1876], [724, 1847, 867, 1875], [881, 1847, 930, 1875], [943, 1856, 1026, 1875], [1038, 1856, 1069, 1875], [1082, 1847, 1237, 1875], [1250, 1847, 1315, 1881], [1330, 1847, 1387, 1875], [1400, 1856, 1435, 1875], [1447, 1847, 1469, 1875], [1480, 1847, 1505, 1875], [1518, 1847, 1724, 1884], [1736, 1851, 1805, 1875], [439, 1941, 455, 1957], [479, 1931, 542, 1959], [554, 1935, 692, 1968], [704, 1930, 725, 1968], [731, 1928, 779, 1969], [796, 1944, 824, 1953], [887, 1930, 903, 1943], [846, 1953, 871, 1982], [873, 1955, 943, 1981], [964, 1931, 988, 1959], [1002, 1931, 1183, 1960], [1196, 1931, 1253, 1959], [1265, 1935, 1478, 1959], [439, 2032, 455, 2048], [479, 2022, 543, 2050], [556, 2022, 667, 2059], [683, 2019, 737, 2060], [745, 2046, 749, 2058], [760, 2019, 812, 2060], [829, 2026, 941, 2050], [951, 2022, 991, 2050], [1003, 2022, 1078, 2050], [1090, 2031, 1245, 2050], [1260, 2026, 1288, 2050], [1300, 2022, 1350, 2050], [1364, 2031, 1448, 2050], [1461, 2022, 1543, 2056], [1559, 2022, 1643, 2050], [1657, 2031, 1697, 2056], [1716, 2028, 1742, 2052], [1761, 2022, 1778, 2051], [1791, 2022, 1932, 2050], [1947, 2031, 1977, 2056], [1996, 2035, 2024, 2044], [2040, 2031, 2071, 2056], [2086, 2026, 2114, 2053], [2127, 2031, 2171, 2056], [480, 2072, 586, 2109], [604, 2073, 859, 2107], [877, 2086, 905, 2095], [919, 2082, 950, 2107], [966, 2082, 1061, 2107], [1076, 2073, 1133, 2101], [1145, 2073, 1404, 2107], [439, 2167, 455, 2183], [479, 2158, 586, 2185], [601, 2157, 660, 2185], [672, 2157, 805, 2185], [820, 2166, 871, 2193], [883, 2156, 919, 2193], [941, 2159, 967, 2191], [987, 2157, 1004, 2186], [1020, 2157, 1079, 2185], [1092, 2157, 1251, 2185], [1264, 2157, 1320, 2186], [1335, 2157, 1435, 2191], [1451, 2157, 1542, 2186], [1558, 2154, 1644, 2195], [1662, 2174, 1688, 2175], [1704, 2154, 1749, 2195], [1767, 2174, 1793, 2175], [1811, 2154, 1855, 2195], [1872, 2174, 1898, 2175], [1914, 2166, 1944, 2191], [1949, 2154, 2003, 2195], [2025, 2163, 2051, 2187], [2071, 2157, 2088, 2186], [2103, 2157, 2174, 2185], [480, 2205, 1810, 2246], [439, 2302, 455, 2318], [480, 2289, 592, 2330], [609, 2309, 635, 2310], [650, 2289, 696, 2330], [712, 2289, 824, 2330], [840, 2309, 866, 2310], [880, 2301, 910, 2326], [915, 2289, 968, 2330], [983, 2292, 1037, 2320], [1050, 2292, 1100, 2320], [1113, 2301, 1196, 2320], [1209, 2292, 1276, 2329], [1289, 2301, 1321, 2320], [1336, 2289, 1422, 2330], [1439, 2309, 1465, 2310], [1479, 2289, 1525, 2330], [1541, 2289, 1628, 2330], [1644, 2309, 1670, 2310], [1684, 2301, 1714, 2326], [1719, 2289, 1785, 2330], [1800, 2292, 1883, 2320], [1896, 2291, 1917, 2329], [1930, 2292, 1956, 2320], [1969, 2296, 2173, 2320], [480, 2343, 537, 2371], [551, 2352, 581, 2371], [596, 2343, 669, 2371], [680, 2352, 834, 2380], [848, 2343, 995, 2380], [439, 2437, 455, 2453], [480, 2427, 570, 2456], [583, 2426, 604, 2464], [617, 2427, 641, 2455], [655, 2427, 844, 2461], [857, 2427, 1012, 2455], [1024, 2427, 1079, 2456], [1093, 2436, 1149, 2455], [1160, 2427, 1198, 2455], [1210, 2431, 1272, 2455], [1281, 2427, 1322, 2464], [1335, 2427, 1442, 2464], [1458, 2424, 1468, 2465], [1472, 2425, 1512, 2461], [1519, 2451, 1523, 2463], [1543, 2415, 1554, 2422], [1535, 2424, 2178, 2465], [479, 2478, 559, 2505], [570, 2477, 632, 2505], [643, 2477, 700, 2505], [713, 2477, 811, 2506], [824, 2477, 955, 2505], [970, 2474, 1023, 2515], [1031, 2501, 1035, 2513], [1047, 2474, 1099, 2515], [1114, 2481, 1224, 2505], [1234, 2477, 1273, 2505], [1284, 2477, 1357, 2505], [1369, 2486, 1439, 2505], [1452, 2481, 1480, 2505], [1491, 2477, 1540, 2505], [1553, 2486, 1636, 2505], [1648, 2477, 1729, 2505], [439, 2571, 455, 2587], [479, 2561, 644, 2590], [656, 2561, 734, 2590], [746, 2561, 770, 2589], [784, 2565, 845, 2589], [856, 2561, 904, 2589], [915, 2561, 1001, 2589], [1013, 2561, 1135, 2589], [1148, 2561, 1184, 2589], [1194, 2560, 1234, 2596], [1241, 2585, 1245, 2597], [1265, 2549, 1276, 2556], [1257, 2560, 2007, 2597], [439, 2655, 455, 2671], [479, 2645, 663, 2674], [676, 2645, 752, 2674], [768, 2645, 827, 2673], [839, 2645, 918, 2674], [931, 2654, 980, 2673], [993, 2645, 1058, 2673], [1071, 2649, 1134, 2673], [1145, 2645, 1193, 2673], [1205, 2645, 1292, 2673], [1304, 2645, 1429, 2673], [1442, 2645, 1478, 2673], [1488, 2644, 1528, 2680], [1536, 2669, 1540, 2681], [1559, 2633, 1570, 2640], [1551, 2644, 1599, 2681], [1614, 2654, 1646, 2673], [1660, 2642, 1752, 2683], [1768, 2662, 1794, 2663], [1807, 2654, 1838, 2680], [1854, 2662, 1880, 2663], [1894, 2642, 1953, 2683], [1971, 2658, 1999, 2667], [2015, 2642, 2129, 2683], [2145, 2662, 2171, 2663], [479, 2684, 920, 2734], [936, 2713, 962, 2714], [977, 2705, 1007, 2730], [1022, 2700, 1050, 2727], [1062, 2693, 1109, 2734], [1127, 2709, 1155, 2718], [1171, 2693, 1326, 2734], [1342, 2713, 1368, 2714], [1382, 2693, 1603, 2734], [1255, 2934, 1293, 2964], [374, 242, 546, 276], [561, 242, 600, 270], [612, 242, 648, 270], [657, 242, 706, 270], [718, 242, 888, 279], [900, 242, 1072, 270], [1085, 242, 1141, 271], [1145, 242, 1183, 271], [1188, 242, 1236, 270], [1248, 242, 1296, 270], [1306, 242, 1445, 279], [1457, 242, 1514, 271], [1527, 251, 1576, 270], [1588, 246, 1650, 270], [1661, 242, 1709, 270], [1721, 241, 1755, 270], [1772, 242, 1904, 270], [1916, 242, 1952, 270], [1961, 242, 2099, 279], [2111, 242, 2177, 276], [377, 292, 434, 320], [447, 301, 481, 320], [494, 301, 510, 320], [522, 292, 682, 320], [694, 292, 730, 320], [738, 292, 876, 329], [887, 292, 941, 321], [957, 292, 981, 320], [996, 292, 1060, 320], [1073, 301, 1089, 320], [1101, 292, 1261, 320], [1273, 292, 1320, 320], [1330, 292, 1468, 329], [1480, 292, 1537, 321], [1541, 316, 1546, 320], [438, 343, 502, 371], [516, 343, 610, 380], [622, 352, 680, 371], [693, 343, 733, 371], [747, 343, 890, 380], [905, 343, 955, 371], [970, 343, 1056, 371], [1070, 352, 1138, 380], [1153, 343, 1252, 371], [1265, 343, 1306, 380], [1323, 343, 1433, 380], [1449, 352, 1467, 371], [1489, 356, 1517, 365], [1542, 342, 1553, 349], [1538, 342, 1572, 371], [1592, 343, 1719, 380], [1735, 343, 1783, 371], [1796, 343, 1938, 380], [1952, 343, 2019, 377], [2037, 343, 2173, 380], [376, 394, 425, 422], [440, 398, 580, 431], [594, 393, 615, 431], [620, 388, 657, 407], [666, 391, 714, 432], [735, 407, 763, 416], [830, 393, 846, 406], [789, 416, 814, 445], [817, 418, 887, 441], [898, 418, 904, 428], [922, 394, 981, 422], [994, 394, 1159, 431], [1174, 394, 1237, 422], [1250, 394, 1309, 422], [1324, 398, 1464, 431], [1477, 394, 1503, 422], [1518, 398, 1725, 422], [1741, 394, 1800, 422], [1814, 394, 1988, 431], [2006, 403, 2040, 422], [2055, 403, 2102, 423], [2117, 403, 2174, 422], [376, 461, 523, 489], [537, 458, 603, 499], [614, 458, 666, 499], [684, 458, 819, 499], [831, 460, 850, 489], [861, 449, 872, 456], [853, 458, 906, 499], [921, 461, 970, 489], [982, 470, 1069, 489], [1082, 460, 1101, 489], [1118, 463, 1144, 495], [1163, 461, 1176, 489], [1192, 461, 1251, 489], [1263, 461, 1313, 489], [1325, 461, 1497, 498], [1510, 461, 1684, 489], [1697, 461, 1828, 490], [1842, 461, 1890, 489], [1901, 461, 2042, 498], [2053, 461, 2108, 490], [2125, 470, 2174, 489], [376, 515, 438, 539], [450, 511, 612, 548], [626, 520, 643, 539], [656, 511, 772, 539], [783, 511, 947, 548], [960, 515, 991, 539], [1005, 511, 1055, 539], [1068, 520, 1127, 539], [1139, 511, 1301, 548], [1315, 511, 1421, 540], [1440, 511, 1532, 545], [1548, 520, 1565, 539], [1577, 511, 1741, 539], [1753, 511, 1801, 539], [1813, 511, 1954, 548], [1966, 511, 2024, 540], [2038, 511, 2063, 539], [2078, 511, 2143, 539], [2158, 520, 2175, 539], [376, 562, 536, 590], [547, 562, 595, 590], [605, 562, 743, 599], [755, 562, 821, 596], [834, 562, 934, 591], [942, 562, 1048, 599], [1060, 562, 1132, 591], [1145, 562, 1194, 590], [1205, 562, 1344, 599], [1357, 562, 1450, 590], [1461, 562, 1626, 599], [1639, 562, 1689, 590], [1699, 562, 1797, 599], [376, 742, 416, 782], [478, 741, 622, 783], [636, 754, 696, 783], [713, 742, 790, 783], [809, 741, 1103, 794], [1121, 741, 1172, 783], [1185, 741, 1435, 783], [1452, 741, 1723, 794], [1740, 742, 1930, 783], [376, 847, 578, 885], [593, 847, 650, 877], [655, 870, 662, 877], [690, 849, 786, 885], [802, 848, 892, 885], [908, 849, 1171, 885], [1187, 853, 1217, 876], [1233, 848, 1281, 876], [1296, 853, 1433, 885], [1446, 858, 1560, 877], [1574, 849, 1729, 876], [1742, 848, 1806, 877], [1820, 848, 1868, 876], [1885, 848, 2024, 877], [2037, 858, 2173, 877], [376, 900, 527, 936], [537, 899, 611, 928], [624, 904, 676, 927], [687, 899, 804, 936], [818, 899, 865, 927], [878, 899, 1010, 928], [1022, 899, 1060, 936], [1066, 899, 1113, 927], [1127, 900, 1299, 936], [1311, 899, 1439, 928], [375, 981, 474, 1018], [499, 982, 554, 1009], [564, 990, 600, 1009], [613, 985, 683, 1009], [696, 978, 761, 1019], [765, 978, 775, 1019], [792, 990, 823, 1009], [836, 981, 885, 1009], [898, 981, 1034, 1009], [1045, 990, 1179, 1010], [1190, 981, 1338, 1018], [1349, 981, 1385, 1009], [1396, 990, 1481, 1009], [1493, 981, 1631, 1009], [1644, 980, 1665, 1018], [1678, 981, 1781, 1018], [1793, 981, 1908, 1018], [1919, 981, 2032, 1015], [2047, 978, 2111, 1019], [2115, 978, 2125, 1019], [2142, 990, 2173, 1009], [376, 1032, 425, 1060], [437, 1036, 567, 1069], [578, 1041, 713, 1061], [725, 1032, 884, 1066], [900, 1035, 915, 1037], [898, 1029, 971, 1070], [988, 1041, 1020, 1060], [1032, 1032, 1082, 1060], [1095, 1032, 1231, 1060], [1243, 1032, 1335, 1060], [1347, 1032, 1496, 1069], [1508, 1032, 1567, 1060], [1578, 1063, 1593, 1065], [1579, 1029, 1638, 1070], [1642, 1029, 1652, 1070], [1668, 1041, 1700, 1060], [1713, 1032, 1762, 1060], [1774, 1036, 1904, 1069], [1917, 1032, 2009, 1060], [2021, 1032, 2179, 1060], [376, 1083, 422, 1119], [434, 1082, 592, 1110], [604, 1091, 651, 1111], [662, 1082, 738, 1111], [794, 1215, 809, 1217], [795, 1181, 914, 1222], [933, 1186, 959, 1218], [975, 1181, 1101, 1222], [1119, 1186, 1145, 1218], [1162, 1181, 1227, 1222], [1246, 1186, 1272, 1218], [1289, 1181, 1414, 1222], [1433, 1186, 1459, 1218], [1476, 1181, 1595, 1222], [1641, 1183, 1676, 1213], [1693, 1190, 1714, 1214], [1730, 1184, 1755, 1212], [438, 1258, 585, 1287], [596, 1267, 663, 1287], [676, 1258, 724, 1286], [736, 1262, 836, 1286], [849, 1258, 884, 1286], [893, 1258, 941, 1286], [954, 1258, 1120, 1295], [1132, 1258, 1276, 1295], [1290, 1258, 1387, 1287], [1401, 1267, 1417, 1286], [1429, 1258, 1580, 1295], [1594, 1258, 1764, 1295], [1776, 1258, 1845, 1286], [1857, 1258, 1893, 1286], [1901, 1258, 1999, 1286], [2013, 1257, 2045, 1293], [2062, 1262, 2089, 1286], [2100, 1258, 2174, 1286], [377, 1309, 490, 1337], [502, 1309, 526, 1337], [540, 1309, 691, 1337], [702, 1309, 741, 1346], [754, 1309, 910, 1346], [923, 1309, 971, 1337], [983, 1309, 1128, 1346], [1140, 1309, 1175, 1337], [1184, 1309, 1232, 1337], [1245, 1309, 1313, 1337], [1325, 1309, 1441, 1337], [1453, 1308, 1488, 1346], [1502, 1326, 1528, 1327], [1542, 1308, 1576, 1344], [1590, 1309, 1647, 1337], [1659, 1309, 1707, 1337], [1719, 1309, 1866, 1337], [1878, 1309, 1913, 1337], [1922, 1309, 1970, 1337], [1983, 1309, 2051, 1337], [2064, 1309, 2173, 1346], [375, 1359, 410, 1397], [423, 1364, 451, 1391], [464, 1359, 509, 1395], [524, 1361, 578, 1388], [589, 1360, 674, 1389], [685, 1360, 734, 1388], [746, 1360, 934, 1397], [949, 1360, 1044, 1389], [1057, 1369, 1097, 1388], [924, 1498, 1623, 1539], [923, 1595, 938, 1597], [924, 1561, 1623, 1602], [437, 1655, 491, 1682], [503, 1654, 566, 1683], [579, 1654, 663, 1683], [676, 1654, 738, 1682], [750, 1663, 786, 1682], [798, 1654, 921, 1691], [933, 1654, 969, 1682], [979, 1654, 1114, 1682], [1125, 1663, 1259, 1683], [1271, 1654, 1419, 1691], [1429, 1654, 1441, 1683], [1452, 1658, 1581, 1691], [1592, 1663, 1708, 1683], [1720, 1654, 1870, 1682], [1881, 1654, 1965, 1682], [1976, 1654, 2064, 1691], [2076, 1654, 2115, 1682], [2124, 1654, 2174, 1682], [377, 1714, 458, 1733], [470, 1705, 590, 1742], [602, 1705, 735, 1742], [748, 1705, 836, 1734], [847, 1705, 934, 1742], [947, 1705, 995, 1733], [1009, 1705, 1098, 1733], [1112, 1705, 1373, 1742], [1389, 1706, 1441, 1733], [1454, 1705, 1594, 1742], [1606, 1705, 1704, 1733], [1717, 1705, 1837, 1742], [1851, 1714, 1881, 1733], [1894, 1705, 1942, 1733], [1956, 1705, 2062, 1742], [2075, 1705, 2173, 1734], [376, 1753, 1158, 1794], [438, 1807, 507, 1836], [520, 1807, 586, 1835], [598, 1807, 634, 1835], [645, 1807, 694, 1835], [707, 1807, 899, 1844], [911, 1807, 937, 1835], [950, 1816, 1032, 1844], [1051, 1807, 1078, 1835], [1089, 1804, 1198, 1845], [1214, 1811, 1242, 1838], [1256, 1804, 1304, 1845], [1323, 1809, 1349, 1841], [1367, 1804, 1432, 1845], [1438, 1804, 1476, 1845], [1493, 1824, 1519, 1825], [1534, 1804, 1568, 1845], [1584, 1807, 1632, 1835], [1645, 1816, 1732, 1835], [1745, 1808, 1766, 1841], [1781, 1807, 1852, 1835], [1863, 1807, 1954, 1844], [1967, 1807, 2017, 1835], [2029, 1807, 2173, 1835], [377, 1857, 469, 1886], [481, 1866, 527, 1886], [538, 1857, 612, 1886], [624, 1889, 639, 1891], [625, 1854, 728, 1895], [741, 1861, 769, 1888], [781, 1854, 829, 1895], [848, 1859, 874, 1891], [890, 1854, 999, 1895], [1013, 1861, 1041, 1888], [1052, 1854, 1100, 1895], [1119, 1859, 1145, 1891], [1162, 1854, 1271, 1895], [1285, 1874, 1311, 1875], [1324, 1854, 1372, 1895], [1390, 1859, 1416, 1891], [1433, 1854, 1537, 1895], [1551, 1874, 1577, 1875], [1589, 1854, 1650, 1895], [1664, 1857, 1720, 1885], [1732, 1866, 1765, 1885], [1777, 1857, 1825, 1885], [1838, 1857, 1926, 1885], [1939, 1857, 2174, 1894], [376, 1908, 488, 1936], [502, 1917, 559, 1945], [571, 1908, 692, 1945], [704, 1908, 806, 1945], [818, 1908, 905, 1945], [917, 1908, 947, 1936], [959, 1908, 1009, 1936], [1020, 1908, 1282, 1937], [1294, 1912, 1490, 1945], [438, 1959, 502, 1987], [517, 1959, 659, 1996], [674, 1959, 809, 1996], [825, 1959, 875, 1987], [890, 1959, 949, 1996], [965, 1959, 1160, 1988], [1175, 1959, 1238, 1987], [1253, 1959, 1284, 1987], [1299, 1959, 1349, 1987], [1365, 1959, 1537, 1996], [1553, 1959, 1679, 1987], [1693, 1959, 1768, 1987], [1783, 1959, 1933, 1996], [1949, 1959, 2008, 1987], [2023, 1959, 2175, 1987], [376, 2010, 526, 2038], [541, 2019, 589, 2038], [601, 2010, 739, 2047], [751, 2014, 781, 2038], [794, 2010, 843, 2038], [856, 2019, 939, 2038], [949, 2010, 1035, 2047], [1046, 2010, 1082, 2038], [1091, 2010, 1197, 2047], [1215, 2009, 1236, 2047], [1242, 2007, 1287, 2048], [1304, 2023, 1332, 2032], [1348, 2010, 1365, 2039], [1379, 2014, 1408, 2038], [1419, 2010, 1468, 2038], [1481, 2014, 1550, 2038], [1561, 2010, 1597, 2038], [1606, 2010, 1655, 2038], [1667, 2010, 1798, 2044], [1812, 2019, 1846, 2038], [1857, 2010, 1906, 2038], [1917, 2010, 2003, 2047], [2013, 2010, 2113, 2039], [2125, 2010, 2174, 2038], [376, 2061, 431, 2089], [443, 2065, 576, 2098], [588, 2070, 648, 2090], [661, 2061, 740, 2089], [753, 2061, 826, 2089], [837, 2061, 910, 2089], [920, 2065, 1029, 2089], [1045, 2062, 1099, 2089], [1110, 2070, 1144, 2089], [1158, 2070, 1275, 2089], [1288, 2060, 1309, 2098], [1315, 2058, 1360, 2099], [1378, 2074, 1406, 2083], [1421, 2061, 1438, 2090], [1452, 2061, 1575, 2090], [1586, 2061, 1647, 2089], [1660, 2061, 1695, 2089], [1704, 2061, 1870, 2098], [1888, 2061, 2023, 2098], [2035, 2070, 2102, 2090], [2114, 2061, 2174, 2089], [377, 2120, 413, 2139], [425, 2111, 544, 2148], [557, 2111, 581, 2139], [595, 2111, 730, 2139], [741, 2111, 781, 2148], [793, 2111, 841, 2139], [855, 2111, 944, 2139], [958, 2111, 1202, 2148], [1219, 2112, 1354, 2139], [1366, 2111, 1402, 2139], [1411, 2111, 1467, 2139], [1482, 2111, 1571, 2139], [1583, 2115, 1684, 2139], [1696, 2111, 1744, 2139], [1757, 2111, 2061, 2148], [2074, 2111, 2173, 2148], [377, 2171, 425, 2190], [437, 2166, 582, 2196], [596, 2162, 643, 2190], [841, 2244, 856, 2246], [838, 2250, 915, 2286], [933, 2244, 948, 2246], [930, 2250, 1111, 2286], [1130, 2244, 1145, 2246], [1127, 2250, 1207, 2286], [1226, 2244, 1241, 2246], [1223, 2250, 1247, 2288], [1298, 2283, 1313, 2285], [1301, 2250, 1377, 2286], [1391, 2283, 1406, 2285], [1393, 2250, 1574, 2286], [1587, 2283, 1602, 2285], [1589, 2250, 1670, 2286], [1683, 2283, 1698, 2285], [1686, 2250, 1709, 2280], [376, 2343, 527, 2376], [540, 2342, 567, 2370], [575, 2351, 621, 2371], [633, 2342, 770, 2370], [780, 2342, 828, 2370], [840, 2342, 1096, 2371], [1109, 2342, 1358, 2379], [1371, 2342, 1452, 2370], [1465, 2342, 1563, 2379], [1576, 2351, 1631, 2370], [1642, 2342, 1925, 2371], [1938, 2351, 1968, 2370], [1981, 2342, 2029, 2370], [2042, 2346, 2174, 2379], [375, 2402, 558, 2430], [571, 2393, 633, 2421], [644, 2393, 679, 2421], [893, 2477, 931, 2511], [912, 2502, 923, 2521], [950, 2477, 1031, 2517], [1011, 2502, 1024, 2521], [1050, 2477, 1234, 2517], [1214, 2507, 1247, 2521], [1301, 2477, 1339, 2511], [1320, 2502, 1331, 2521], [1358, 2477, 1439, 2517], [1419, 2502, 1432, 2521], [1458, 2477, 1642, 2517], [1622, 2507, 1655, 2521], [376, 2573, 522, 2602], [533, 2582, 600, 2602], [613, 2573, 660, 2601], [673, 2573, 975, 2610], [987, 2573, 1097, 2607], [1110, 2573, 1269, 2610], [1281, 2573, 1406, 2610], [1418, 2573, 1466, 2601], [1479, 2573, 1577, 2610], [1591, 2573, 1648, 2601], [1660, 2573, 1759, 2610], [1772, 2573, 1833, 2601], [1847, 2577, 1971, 2601], [1983, 2573, 2031, 2601], [2043, 2573, 2180, 2602], [376, 2624, 438, 2652], [451, 2624, 547, 2653], [560, 2624, 650, 2652], [661, 2624, 711, 2652], [723, 2624, 845, 2661], [856, 2624, 950, 2661], [440, 2748, 549, 2789], [566, 2768, 592, 2769], [606, 2748, 654, 2789], [672, 2764, 700, 2773], [739, 2708, 748, 2727], [716, 2740, 772, 2798], [715, 2809, 770, 2834], [782, 2745, 820, 2779], [799, 2771, 833, 2796], [887, 2748, 1101, 2789], [1171, 2764, 1199, 2773], [1238, 2708, 1247, 2727], [1214, 2740, 1270, 2798], [1214, 2809, 1269, 2834], [1281, 2745, 1319, 2779], [1298, 2771, 1332, 2796], [1387, 2754, 1402, 2756], [1386, 2748, 1666, 2789], [1673, 2743, 1688, 2745], [1670, 2749, 1694, 2787], [1747, 2783, 1762, 2785], [1747, 2748, 1851, 2789], [1866, 2755, 1894, 2782], [1908, 2748, 1956, 2789], [2025, 2752, 2079, 2779], [2081, 2783, 2096, 2785], [2084, 2749, 2107, 2779], [1255, 2934, 1294, 2964], [377, 242, 466, 271], [479, 251, 516, 270], [528, 242, 649, 279], [660, 242, 713, 270], [726, 242, 804, 270], [816, 242, 952, 270], [964, 242, 995, 270], [1007, 242, 1056, 270], [1069, 242, 1160, 270], [1173, 242, 1421, 279], [1435, 251, 1482, 271], [1493, 242, 1569, 271], [1581, 242, 1643, 270], [1654, 242, 1701, 270], [1713, 251, 1799, 270], [1809, 242, 1895, 279], [1906, 243, 1917, 270], [939, 335, 950, 362], [952, 365, 967, 367], [954, 332, 1014, 362], [1029, 365, 1044, 367], [1030, 331, 1579, 372], [1587, 326, 1602, 328], [1584, 332, 1607, 370], [377, 435, 411, 454], [422, 457, 437, 459], [424, 424, 441, 454], [456, 428, 482, 460], [499, 418, 517, 454], [520, 450, 525, 454], [541, 426, 690, 455], [702, 435, 770, 455], [783, 426, 832, 454], [844, 426, 945, 455], [959, 426, 995, 454], [1004, 426, 1053, 454], [1066, 426, 1157, 454], [1169, 426, 1477, 463], [1489, 430, 1518, 454], [1529, 426, 1578, 454], [1589, 426, 1675, 463], [1685, 426, 1891, 463], [1904, 426, 1979, 454], [1990, 426, 2039, 454], [2051, 426, 2157, 463], [980, 550, 995, 552], [981, 516, 1207, 557], [1221, 550, 1236, 552], [1223, 517, 1247, 555], [1302, 522, 1317, 524], [1301, 516, 1527, 557], [1546, 511, 1561, 513], [1543, 517, 1567, 547], [373, 612, 425, 639], [437, 611, 498, 640], [512, 611, 593, 640], [606, 620, 673, 640], [686, 611, 745, 639], [757, 611, 805, 639], [817, 611, 1056, 640], [1068, 615, 1252, 648], [1264, 615, 1342, 639], [1353, 611, 1419, 639], [1431, 611, 1546, 648], [1559, 611, 1606, 639], [1620, 620, 1700, 639], [1713, 611, 1813, 640], [1827, 615, 1854, 639], [1866, 611, 1947, 639], [1959, 611, 2065, 648], [2082, 612, 2122, 639], [2135, 611, 2173, 639], [377, 671, 411, 690], [423, 671, 470, 691], [482, 662, 549, 690], [561, 662, 624, 690], [637, 666, 764, 690], [775, 662, 824, 690], [836, 662, 995, 699], [1007, 662, 1076, 690], [1093, 662, 1175, 690], [1187, 666, 1267, 690], [1278, 662, 1355, 690], [1365, 662, 1464, 699], [1478, 672, 1499, 690], [1513, 662, 1570, 690], [1582, 672, 1611, 699], [1625, 672, 1655, 698], [1667, 672, 1686, 699], [1702, 664, 1728, 696], [1744, 663, 1765, 696], [1779, 662, 1879, 691], [607, 785, 622, 787], [607, 751, 793, 792], [810, 753, 985, 791], [1003, 767, 1031, 776], [1047, 751, 1250, 792], [1305, 757, 1320, 759], [1304, 751, 1940, 794], [376, 846, 438, 874], [450, 846, 475, 874], [488, 850, 519, 874], [533, 855, 593, 883], [607, 846, 657, 874], [670, 846, 763, 874], [775, 846, 1089, 883], [1101, 850, 1182, 874], [1194, 846, 1287, 874], [1298, 846, 1348, 874], [1361, 846, 1432, 874], [1444, 846, 1690, 883], [1703, 850, 1731, 874], [1744, 855, 1830, 874], [1842, 846, 1937, 883], [1951, 846, 2114, 875], [2126, 855, 2174, 875], [376, 897, 468, 925], [481, 897, 586, 925], [600, 906, 617, 925], [629, 901, 746, 934], [758, 897, 911, 925], [922, 897, 934, 926], [947, 897, 1070, 925], [1083, 897, 1233, 934], [1244, 897, 1285, 934], [1298, 897, 1445, 934], [1459, 897, 1517, 925], [1532, 897, 1677, 925], [1698, 897, 1762, 925], [1775, 897, 1935, 934], [1949, 901, 1980, 925], [1994, 897, 2044, 925], [2057, 906, 2174, 926], [376, 948, 525, 976], [535, 948, 547, 977], [558, 957, 691, 977], [703, 948, 850, 985], [862, 957, 910, 976], [922, 948, 991, 976], [1003, 948, 1145, 976], [1156, 948, 1197, 985], [1209, 948, 1375, 985], [1387, 948, 1436, 976], [1448, 948, 1636, 985], [1651, 952, 1679, 976], [1690, 948, 1739, 976], [1750, 948, 1915, 985], [1927, 948, 1963, 976], [1972, 948, 2021, 976], [2032, 948, 2130, 985], [438, 1000, 485, 1036], [503, 999, 553, 1027], [572, 999, 694, 1036], [711, 999, 873, 1036], [890, 999, 1083, 1036], [1102, 996, 1179, 1037], [1199, 1003, 1227, 1030], [1244, 996, 1297, 1037], [1327, 1001, 1353, 1033], [1379, 1030, 1394, 1032], [1380, 996, 1450, 1037], [1470, 1003, 1498, 1030], [1516, 996, 1581, 1037], [1601, 999, 1655, 1027], [1672, 999, 1713, 1027], [1729, 1008, 1765, 1027], [1785, 1008, 1918, 1036], [1936, 999, 1985, 1027], [2003, 1008, 2020, 1027], [2037, 1003, 2175, 1027], [377, 1047, 608, 1088], [624, 1081, 639, 1083], [624, 1047, 695, 1088], [711, 1054, 739, 1081], [752, 1047, 817, 1088], [833, 1050, 904, 1078], [918, 1050, 1019, 1079], [1031, 1050, 1126, 1087], [1140, 1046, 1178, 1078], [1159, 1056, 1222, 1088], [1237, 1081, 1252, 1083], [1239, 1048, 1265, 1078], [1281, 1051, 1334, 1078], [1346, 1050, 1416, 1078], [1428, 1050, 1530, 1079], [1541, 1050, 1617, 1079], [1629, 1050, 1691, 1078], [1703, 1054, 1731, 1078], [1742, 1050, 1791, 1078], [1803, 1050, 1947, 1087], [1958, 1050, 2044, 1087], [2055, 1060, 2076, 1078], [844, 1141, 975, 1179], [992, 1155, 1020, 1164], [1036, 1173, 1051, 1175], [1036, 1139, 1221, 1180], [1239, 1152, 1303, 1170], [1304, 1173, 1319, 1175], [1306, 1140, 1423, 1172], [1426, 1136, 1444, 1154], [1425, 1161, 1436, 1180], [1463, 1139, 1704, 1180], [377, 1243, 407, 1262], [420, 1234, 468, 1262], [482, 1234, 581, 1271], [594, 1234, 625, 1262], [638, 1243, 654, 1262], [665, 1243, 780, 1263], [792, 1234, 939, 1262], [951, 1238, 1029, 1262], [1040, 1234, 1078, 1262], [1091, 1234, 1327, 1271], [1339, 1234, 1514, 1271], [1531, 1235, 1685, 1268], [1700, 1234, 1772, 1262], [1784, 1234, 1920, 1262], [1932, 1234, 2033, 1263], [2045, 1238, 2096, 1262], [2107, 1234, 2145, 1262], [2158, 1243, 2174, 1262], [374, 1285, 456, 1314], [468, 1294, 584, 1314], [596, 1285, 755, 1319], [770, 1294, 801, 1313], [814, 1285, 837, 1313], [848, 1285, 951, 1314], [962, 1294, 1045, 1322], [1058, 1294, 1130, 1314], [1143, 1284, 1164, 1322], [1177, 1289, 1205, 1316], [1218, 1284, 1248, 1314], [1265, 1285, 1428, 1313], [1441, 1282, 1517, 1323], [1533, 1289, 1561, 1316], [1575, 1282, 1628, 1323], [1645, 1298, 1673, 1307], [1689, 1316, 1704, 1318], [1689, 1282, 1760, 1323], [1776, 1289, 1804, 1316], [1817, 1282, 1870, 1323], [1885, 1289, 1966, 1313], [1976, 1285, 2059, 1313], [2075, 1285, 2174, 1322], [377, 1345, 394, 1364], [406, 1336, 580, 1373], [594, 1340, 759, 1373], [774, 1333, 850, 1374], [867, 1353, 893, 1354], [908, 1333, 960, 1374], [978, 1349, 1006, 1358], [1024, 1339, 1039, 1341], [1022, 1333, 1092, 1374], [1109, 1353, 1135, 1354], [1150, 1333, 1203, 1374], [1218, 1345, 1276, 1364], [1288, 1336, 1353, 1364], [1365, 1336, 1404, 1364], [1417, 1336, 1524, 1365], [1535, 1340, 1566, 1364], [1578, 1336, 1661, 1364], [1676, 1336, 1800, 1373], [1812, 1336, 1871, 1364], [1884, 1336, 1958, 1365], [1969, 1336, 2019, 1364], [2030, 1336, 2173, 1373], [376, 1387, 450, 1415], [464, 1396, 511, 1416], [522, 1387, 598, 1416], [610, 1387, 672, 1415], [733, 1476, 965, 1517], [980, 1510, 995, 1512], [981, 1476, 1207, 1517], [1221, 1510, 1236, 1512], [1223, 1471, 1390, 1513], [1374, 1476, 1814, 1517], [377, 1571, 433, 1599], [445, 1571, 592, 1599], [604, 1571, 652, 1599], [665, 1571, 785, 1608], [798, 1571, 933, 1599], [944, 1571, 985, 1608], [997, 1571, 1045, 1599], [1058, 1571, 1148, 1599], [1161, 1571, 1399, 1608], [1411, 1571, 1435, 1599], [1449, 1571, 1584, 1599], [1596, 1571, 1723, 1608], [1735, 1571, 1770, 1599], [1784, 1571, 2042, 1600], [2055, 1571, 2174, 1600], [377, 1631, 407, 1650], [420, 1622, 490, 1651], [502, 1622, 630, 1659], [643, 1619, 719, 1660], [735, 1626, 763, 1653], [776, 1619, 829, 1660], [848, 1624, 874, 1656], [891, 1619, 967, 1660], [984, 1639, 1010, 1640], [1024, 1619, 1089, 1660], [376, 1803, 413, 1843], [475, 1802, 923, 1855], [941, 1802, 1014, 1844], [1030, 1802, 1257, 1855], [1275, 1789, 1393, 1844], [1347, 1829, 1360, 1857], [376, 1909, 409, 1936], [421, 1908, 480, 1936], [493, 1908, 645, 1945], [657, 1917, 705, 1937], [716, 1912, 838, 1945], [849, 1908, 957, 1936], [970, 1908, 1006, 1936], [1016, 1917, 1033, 1936], [1043, 1908, 1346, 1945], [1359, 1908, 1437, 1943], [1452, 1908, 1604, 1945], [1616, 1912, 1647, 1936], [1660, 1908, 1781, 1945], [1794, 1908, 1843, 1936], [1856, 1908, 2078, 1945], [2090, 1908, 2179, 1945], [376, 1959, 438, 1987], [451, 1959, 536, 1994], [554, 1959, 713, 1996], [725, 1959, 897, 1996], [911, 1959, 1098, 1996], [1112, 1968, 1161, 1987], [1174, 1959, 1364, 1996], [1378, 1959, 1515, 1996], [1527, 1963, 1558, 1987], [1571, 1959, 1629, 1987], [1643, 1960, 1695, 1987], [1709, 1959, 1870, 1996], [1884, 1959, 1934, 1987], [1947, 1959, 2055, 1987], [2068, 1959, 2104, 1987], [2114, 1959, 2173, 1987], [376, 2010, 544, 2039], [558, 2019, 652, 2047], [668, 2014, 698, 2038], [713, 2010, 752, 2038], [767, 2010, 870, 2038], [885, 2010, 975, 2039], [990, 2010, 1175, 2047], [1191, 2010, 1383, 2038], [1399, 2010, 1448, 2038], [1461, 2010, 1608, 2047], [1623, 2009, 1656, 2050], [1662, 2019, 1763, 2038], [1778, 2011, 1833, 2038], [1847, 2014, 2104, 2047], [2121, 2010, 2175, 2038], [375, 2061, 499, 2098], [512, 2061, 587, 2089], [598, 2065, 723, 2098], [734, 2070, 787, 2089], [799, 2061, 853, 2089], [866, 2061, 896, 2089], [907, 2061, 1075, 2098], [1089, 2070, 1105, 2089], [1117, 2061, 1234, 2098], [1247, 2061, 1368, 2089], [1379, 2061, 1439, 2089], [1451, 2061, 1540, 2089], [1551, 2061, 1588, 2089], [1601, 2061, 1719, 2098], [1731, 2065, 1760, 2089], [1773, 2061, 1856, 2089], [1866, 2061, 2015, 2098], [2029, 2061, 2088, 2089], [2099, 2061, 2173, 2090], [377, 2116, 534, 2140], [548, 2112, 662, 2140], [673, 2116, 704, 2140], [716, 2113, 773, 2146], [786, 2121, 834, 2149], [838, 2136, 853, 2146], [867, 2121, 962, 2149], [974, 2112, 1207, 2141], [1222, 2112, 1260, 2146], [1274, 2112, 1325, 2146], [1341, 2112, 1398, 2140], [1409, 2111, 1440, 2146], [1447, 2112, 1543, 2140], [1556, 2112, 1685, 2149], [1700, 2112, 1760, 2146], [1775, 2112, 1836, 2146], [438, 2162, 501, 2190], [513, 2162, 735, 2199], [747, 2162, 818, 2190], [829, 2162, 969, 2199], [981, 2162, 1057, 2197], [1070, 2162, 1096, 2190], [1110, 2171, 1127, 2190], [1137, 2162, 1449, 2190], [1460, 2162, 1516, 2197], [1531, 2171, 1565, 2190], [1578, 2162, 1601, 2190], [1611, 2162, 1704, 2190], [1714, 2162, 1753, 2190], [1766, 2162, 1873, 2191], [1883, 2162, 1973, 2199], [1987, 2171, 2004, 2190], [2015, 2162, 2128, 2199], [2141, 2162, 2177, 2190], [376, 2213, 512, 2241], [526, 2213, 599, 2241], [611, 2222, 642, 2241], [655, 2213, 763, 2242], [778, 2212, 851, 2247], [864, 2213, 1043, 2242], [1061, 2213, 1133, 2247], [1147, 2222, 1181, 2241], [1191, 2213, 1485, 2250], [1498, 2213, 1574, 2248], [1590, 2213, 1662, 2247], [1679, 2213, 1854, 2250], [1868, 2213, 1950, 2241], [1962, 2213, 2098, 2241], [2112, 2213, 2174, 2242], [375, 2264, 413, 2292], [425, 2264, 592, 2292], [603, 2264, 630, 2292], [639, 2264, 768, 2293], [780, 2264, 995, 2298], [1009, 2264, 1205, 2301], [1218, 2264, 1253, 2292], [1262, 2264, 1400, 2301], [1413, 2268, 1556, 2292], [1568, 2264, 1592, 2292], [1607, 2273, 1623, 2292], [1635, 2268, 1715, 2292], [1726, 2264, 1773, 2292], [1786, 2264, 1905, 2301], [1919, 2264, 1994, 2299], [2007, 2264, 2179, 2301], [376, 2316, 427, 2343], [439, 2315, 523, 2343], [537, 2315, 621, 2343], [630, 2315, 700, 2344], [712, 2319, 743, 2343], [756, 2315, 829, 2343], [842, 2319, 985, 2343], [997, 2315, 1203, 2352], [1217, 2324, 1264, 2344], [1275, 2315, 1412, 2343], [1424, 2315, 1473, 2343], [1485, 2315, 1590, 2343], [1603, 2315, 1709, 2344], [438, 2367, 489, 2394], [500, 2375, 571, 2394], [584, 2366, 749, 2403], [761, 2366, 792, 2394], [804, 2366, 886, 2394], [897, 2366, 955, 2403], [968, 2370, 1058, 2403], [1075, 2366, 1139, 2394], [1150, 2366, 1173, 2394], [1184, 2366, 1334, 2394], [1348, 2375, 1364, 2394], [1377, 2366, 1490, 2403], [1503, 2366, 1606, 2394], [1617, 2366, 1652, 2394], [1662, 2367, 1759, 2395], [1772, 2366, 1925, 2395], [1938, 2366, 1995, 2394], [2007, 2375, 2077, 2394], [2090, 2366, 2174, 2394], [376, 2420, 406, 2444], [421, 2420, 565, 2453], [581, 2425, 598, 2444], [612, 2416, 746, 2445], [760, 2416, 901, 2444], [924, 2416, 1018, 2450], [1035, 2416, 1058, 2444], [1070, 2425, 1141, 2444], [1157, 2416, 1215, 2444], [1230, 2416, 1363, 2444], [1377, 2420, 1408, 2444], [1424, 2416, 1505, 2444], [1520, 2416, 1570, 2444], [1584, 2416, 1722, 2453], [1737, 2416, 1796, 2444], [1810, 2425, 1901, 2445], [1915, 2416, 1947, 2444], [1961, 2416, 2011, 2444], [2025, 2416, 2174, 2444], [376, 2467, 516, 2504], [528, 2471, 559, 2495], [571, 2467, 601, 2501], [615, 2467, 760, 2504], [772, 2467, 845, 2496], [858, 2476, 875, 2495], [887, 2467, 1026, 2504], [1040, 2467, 1066, 2495], [1076, 2467, 1201, 2495], [1218, 2467, 1341, 2504], [1355, 2467, 1404, 2495], [1416, 2471, 1487, 2495], [1498, 2467, 1602, 2495], [1614, 2467, 1639, 2495], [1652, 2467, 1795, 2495], [1806, 2467, 1847, 2504], [1858, 2467, 2027, 2504], [2039, 2471, 2112, 2495], [2124, 2467, 2174, 2495], [376, 2518, 566, 2552], [584, 2518, 643, 2546], [657, 2518, 707, 2546], [721, 2518, 808, 2555], [822, 2522, 949, 2555], [973, 2519, 1025, 2546], [1040, 2527, 1097, 2546], [1110, 2518, 1149, 2546], [1163, 2518, 1310, 2555], [1325, 2527, 1357, 2546], [1373, 2527, 1411, 2546], [1424, 2518, 1585, 2546], [1599, 2518, 1635, 2546], [1647, 2518, 1697, 2546], [1711, 2518, 2035, 2555], [2048, 2518, 2174, 2546], [375, 2569, 443, 2604], [460, 2568, 547, 2604], [561, 2569, 661, 2598], [673, 2569, 722, 2597], [734, 2573, 931, 2606], [945, 2569, 981, 2597], [990, 2569, 1039, 2597], [1051, 2569, 1186, 2606], [1197, 2569, 1259, 2597], [1270, 2569, 1358, 2597], [1370, 2569, 1419, 2597], [1430, 2569, 1574, 2606], [1586, 2569, 1732, 2597], [1744, 2569, 1904, 2597], [1917, 2578, 1965, 2597], [1976, 2569, 2129, 2603], [2143, 2569, 2174, 2597], [375, 2621, 427, 2648], [438, 2620, 511, 2648], [523, 2620, 572, 2648], [584, 2620, 720, 2657], [732, 2620, 789, 2648], [801, 2620, 850, 2648], [862, 2620, 992, 2648], [1005, 2629, 1053, 2648], [1066, 2620, 1197, 2649], [1209, 2624, 1239, 2648], [1251, 2624, 1411, 2657], [1423, 2620, 1480, 2648], [1493, 2620, 1664, 2657], [438, 2670, 479, 2698], [490, 2670, 564, 2698], [576, 2670, 713, 2698], [725, 2671, 776, 2698], [789, 2670, 896, 2698], [909, 2670, 959, 2698], [971, 2670, 1066, 2699], [1078, 2670, 1224, 2699], [605, 2763, 679, 2791], [695, 2760, 812, 2801], [829, 2776, 857, 2785], [874, 2773, 943, 2797], [961, 2760, 1227, 2801], [1244, 2760, 1271, 2801], [1318, 2772, 1351, 2791], [1397, 2760, 1443, 2801], [1460, 2776, 1488, 2785], [1503, 2773, 1542, 2797], [1559, 2760, 1781, 2801], [1800, 2760, 1941, 2801], [2092, 2763, 2173, 2798], [1255, 2934, 1294, 2964], [374, 242, 476, 271], [489, 252, 503, 270], [519, 244, 545, 276], [563, 242, 580, 271], [593, 242, 619, 270], [633, 242, 722, 270], [736, 242, 838, 270], [856, 242, 929, 270], [942, 242, 1144, 279], [1157, 246, 1188, 270], [1201, 242, 1251, 270], [1264, 246, 1310, 270], [1321, 242, 1357, 270], [1367, 242, 1517, 271], [1531, 246, 1560, 270], [1572, 251, 1589, 270], [1600, 242, 1714, 276], [1729, 242, 1788, 270], [1800, 242, 1848, 270], [1860, 242, 1962, 271], [1974, 242, 2024, 270], [2037, 242, 2175, 279], [375, 292, 472, 329], [486, 292, 581, 320], [593, 292, 641, 320], [653, 292, 778, 320], [790, 292, 902, 329], [916, 292, 976, 320], [987, 292, 1021, 326], [1035, 292, 1082, 320], [1093, 292, 1174, 320], [1187, 292, 1330, 321], [1343, 296, 1373, 320], [1385, 292, 1496, 320], [1507, 292, 1639, 329], [1652, 292, 1699, 320], [1712, 292, 1857, 329], [1870, 292, 2004, 320], [2016, 301, 2062, 321], [2074, 292, 2174, 321], [375, 343, 450, 372], [462, 347, 492, 371], [506, 347, 568, 380], [581, 347, 634, 371], [645, 343, 680, 371], [688, 343, 814, 371], [831, 344, 856, 371], [867, 343, 891, 371], [905, 343, 971, 371], [984, 343, 1063, 371], [1074, 343, 1136, 371], [1147, 343, 1229, 371], [1242, 343, 1386, 372], [1401, 352, 1448, 371], [1461, 343, 1496, 371], [1505, 352, 1544, 371], [1556, 352, 1609, 371], [1622, 343, 1669, 371], [1681, 343, 1737, 371], [1751, 343, 1895, 377], [1910, 352, 1943, 371], [1956, 352, 2001, 372], [2014, 343, 2112, 371], [2125, 343, 2173, 371], [376, 394, 627, 431], [641, 398, 684, 422], [696, 387, 718, 422], [732, 404, 770, 422], [787, 391, 821, 432], [836, 418, 840, 422], [855, 418, 859, 422], [873, 418, 877, 422], [888, 391, 930, 432], [942, 391, 982, 432], [994, 394, 1029, 422], [1038, 394, 1151, 422], [1164, 398, 1215, 422], [1227, 394, 1257, 422], [1269, 394, 1289, 422], [1292, 418, 1298, 428], [1311, 394, 1410, 423], [1423, 403, 1469, 422], [1482, 394, 1530, 422], [1542, 394, 1686, 423], [1699, 403, 1745, 423], [1758, 403, 1805, 422], [1818, 394, 1975, 422], [1987, 394, 2018, 422], [2028, 394, 2179, 431], [376, 446, 464, 473], [476, 445, 525, 473], [537, 445, 667, 473], [680, 445, 721, 473], [736, 458, 764, 467], [780, 439, 908, 483], [923, 454, 970, 474], [982, 449, 1094, 473], [1105, 445, 1154, 473], [1167, 445, 1299, 474], [1308, 446, 1441, 474], [1454, 445, 1495, 473], [1495, 458, 1511, 483], [1522, 445, 1563, 482], [1576, 445, 1721, 482], [1732, 454, 1810, 474], [1825, 445, 1882, 473], [1894, 445, 2032, 473], [2045, 445, 2174, 473], [375, 496, 416, 533], [428, 488, 450, 524], [450, 520, 456, 530], [471, 496, 530, 524], [541, 496, 572, 524], [586, 505, 603, 524], [615, 496, 729, 524], [741, 505, 808, 533], [821, 496, 871, 524], [884, 496, 993, 525], [1005, 496, 1147, 533], [1163, 493, 1296, 534], [1303, 509, 1319, 533], [1323, 520, 1328, 524], [1344, 496, 1443, 533], [1455, 496, 1540, 524], [1552, 505, 1599, 525], [1610, 496, 1746, 533], [1758, 505, 1775, 524], [1786, 496, 2000, 525], [2013, 496, 2180, 524], [375, 546, 485, 583], [497, 546, 527, 574], [539, 546, 589, 574], [600, 546, 680, 574], [994, 606, 1039, 635], [1054, 604, 1091, 625], [1107, 594, 1199, 635], [1213, 614, 1239, 615], [1253, 597, 1321, 625], [1325, 589, 1362, 608], [1324, 617, 1336, 618], [1321, 622, 1335, 642], [1372, 594, 1505, 635], [1512, 611, 1527, 635], [1531, 594, 1553, 635], [2092, 597, 2173, 632], [374, 673, 476, 702], [490, 683, 513, 701], [527, 673, 552, 701], [567, 682, 584, 701], [597, 673, 737, 710], [753, 673, 812, 701], [826, 673, 855, 701], [868, 673, 995, 701], [1008, 673, 1180, 710], [1192, 677, 1265, 701], [1279, 673, 1329, 701], [1342, 673, 1532, 707], [1547, 673, 1649, 702], [1662, 673, 1710, 701], [1722, 673, 1988, 701], [2001, 673, 2129, 701], [2143, 677, 2173, 701], [377, 724, 486, 761], [498, 724, 729, 753], [740, 724, 919, 761], [936, 725, 1016, 752], [1028, 724, 1091, 752], [1102, 724, 1175, 761], [1187, 724, 1237, 752], [1249, 724, 1398, 753], [1411, 724, 1442, 752], [1454, 724, 1504, 752], [1517, 728, 1562, 752], [1573, 716, 1595, 752], [1606, 733, 1655, 752], [1666, 724, 1800, 761], [1811, 724, 1842, 752], [1854, 724, 1913, 752], [1926, 724, 2038, 758], [2052, 724, 2173, 761], [376, 775, 425, 803], [436, 779, 497, 803], [507, 775, 696, 812], [711, 775, 813, 803], [826, 775, 899, 803], [911, 775, 1021, 812], [1032, 775, 1166, 812], [1178, 775, 1355, 812], [1368, 775, 1417, 803], [1429, 775, 1546, 804], [1558, 775, 1594, 803], [1603, 775, 1653, 803], [1663, 775, 1796, 803], [1807, 775, 1938, 803], [1951, 775, 1992, 803], [1992, 788, 2007, 812], [2011, 799, 2017, 809], [2030, 775, 2131, 804], [2143, 775, 2174, 803], [376, 825, 425, 853], [437, 825, 559, 862], [572, 834, 642, 853], [654, 834, 711, 853], [724, 829, 849, 853], [860, 829, 890, 853], [903, 825, 1142, 862], [1154, 829, 1236, 853], [1249, 825, 1279, 853], [1292, 825, 1341, 853], [1355, 819, 1441, 863], [1447, 822, 1457, 863], [1473, 825, 1567, 859], [1581, 834, 1628, 854], [1640, 825, 1704, 854], [1717, 834, 1768, 853], [1780, 834, 1849, 854], [1861, 825, 1931, 854], [1944, 825, 2112, 862], [2124, 825, 2174, 853], [377, 880, 519, 904], [531, 876, 567, 904], [576, 876, 625, 904], [636, 876, 774, 913], [787, 876, 890, 905], [903, 885, 937, 904], [951, 880, 981, 904], [993, 876, 1126, 913], [1139, 876, 1178, 904], [1190, 876, 1239, 904], [1252, 880, 1331, 913], [1345, 876, 1441, 905], [1452, 876, 1624, 913], [438, 927, 521, 961], [535, 927, 662, 956], [674, 927, 735, 955], [746, 927, 794, 955], [806, 927, 882, 962], [895, 927, 944, 955], [956, 927, 1086, 955], [1098, 927, 1122, 955], [724, 1144, 900, 1172], [903, 1135, 925, 1155], [942, 1157, 970, 1166], [995, 1012, 1018, 1087], [995, 1087, 1000, 1112], [995, 1112, 1000, 1137], [995, 1137, 1000, 1162], [995, 1162, 1000, 1187], [995, 1187, 1000, 1212], [995, 1212, 1000, 1237], [995, 1236, 1018, 1311], [1059, 1016, 1184, 1044], [1044, 1066, 1090, 1094], [1153, 1066, 1279, 1094], [1138, 1144, 1184, 1172], [1248, 1144, 1265, 1172], [1334, 1139, 1339, 1143], [1349, 1151, 1354, 1155], [1364, 1164, 1369, 1168], [1239, 1216, 1244, 1220], [1254, 1229, 1259, 1233], [1269, 1241, 1274, 1245], [1334, 1216, 1339, 1220], [1349, 1229, 1354, 1233], [1364, 1241, 1369, 1245], [1422, 1222, 1468, 1250], [1327, 1272, 1374, 1300], [1437, 1272, 1454, 1300], [1494, 1012, 1517, 1087], [1513, 1087, 1517, 1112], [1513, 1112, 1517, 1137], [1513, 1137, 1517, 1162], [1513, 1162, 1517, 1187], [1513, 1187, 1517, 1212], [1513, 1212, 1517, 1237], [1494, 1236, 1517, 1311], [1543, 1150, 1564, 1174], [1581, 1133, 1811, 1172], [1820, 1168, 1824, 1172], [438, 1363, 526, 1396], [540, 1362, 668, 1391], [680, 1362, 742, 1390], [753, 1362, 905, 1391], [916, 1362, 966, 1390], [979, 1362, 1075, 1391], [1088, 1366, 1133, 1390], [1144, 1362, 1164, 1390], [1166, 1386, 1172, 1396], [1186, 1362, 1236, 1390], [1248, 1362, 1486, 1399], [1497, 1362, 1630, 1390], [1641, 1362, 1772, 1390], [1786, 1362, 1827, 1390], [1827, 1375, 1842, 1399], [1854, 1362, 1986, 1390], [1999, 1362, 2173, 1399], [376, 1413, 566, 1450], [585, 1413, 658, 1441], [672, 1413, 867, 1442], [880, 1413, 905, 1441], [919, 1413, 1033, 1441], [1045, 1413, 1178, 1441], [1191, 1413, 1263, 1441], [1275, 1422, 1323, 1442], [1336, 1422, 1393, 1441], [1406, 1413, 1531, 1450], [1544, 1417, 1688, 1450], [1701, 1413, 1751, 1441], [1763, 1413, 1910, 1450], [1924, 1413, 2073, 1441], [2087, 1412, 2110, 1441], [2112, 1426, 2128, 1450], [2144, 1426, 2172, 1435], [377, 1455, 459, 1491], [421, 1483, 433, 1484], [417, 1488, 431, 1508], [468, 1460, 602, 1501], [608, 1477, 624, 1501], [627, 1487, 633, 1497], [647, 1463, 747, 1492], [759, 1472, 815, 1491], [826, 1463, 865, 1491], [876, 1463, 956, 1491], [966, 1463, 1007, 1500], [1020, 1463, 1140, 1500], [1152, 1463, 1201, 1491], [1213, 1463, 1307, 1491], [1319, 1467, 1432, 1500], [1445, 1463, 1486, 1491], [1485, 1477, 1501, 1501], [1504, 1462, 1527, 1491], [1530, 1477, 1546, 1501], [1560, 1476, 1588, 1485], [1607, 1458, 1728, 1501], [1734, 1460, 1755, 1501], [1762, 1477, 1778, 1501], [1791, 1472, 1822, 1491], [1835, 1463, 1966, 1492], [431, 1560, 455, 1588], [479, 1560, 630, 1597], [642, 1560, 691, 1588], [703, 1560, 857, 1597], [870, 1560, 1112, 1597], [1125, 1560, 1166, 1588], [1166, 1574, 1182, 1598], [1197, 1573, 1225, 1582], [1241, 1553, 1345, 1589], [427, 1628, 455, 1656], [480, 1628, 572, 1657], [584, 1628, 633, 1656], [645, 1628, 738, 1656], [751, 1632, 864, 1665], [876, 1621, 934, 1657], [938, 1637, 959, 1656], [975, 1641, 1003, 1650], [1022, 1625, 1156, 1666], [1162, 1641, 1178, 1665], [1191, 1632, 1221, 1656], [1233, 1628, 1335, 1656], [1347, 1637, 1379, 1656], [428, 1695, 455, 1724], [480, 1695, 572, 1724], [584, 1695, 633, 1723], [645, 1695, 738, 1723], [751, 1699, 864, 1732], [876, 1694, 936, 1724], [938, 1709, 954, 1733], [969, 1708, 997, 1717], [1011, 1704, 1032, 1723], [1047, 1699, 1077, 1723], [1089, 1694, 1246, 1733], [1250, 1719, 1255, 1723], [438, 1788, 576, 1815], [589, 1787, 638, 1815], [649, 1787, 783, 1815], [794, 1787, 926, 1815], [938, 1787, 964, 1815], [978, 1787, 1042, 1815], [1055, 1787, 1244, 1824], [1258, 1787, 1296, 1815], [1309, 1787, 1465, 1824], [1477, 1787, 1724, 1824], [1736, 1796, 1792, 1815], [1804, 1787, 1843, 1815], [1855, 1787, 2020, 1824], [2032, 1787, 2062, 1815], [2076, 1787, 2175, 1815], [377, 1839, 444, 1866], [457, 1842, 486, 1866], [499, 1838, 580, 1875], [593, 1847, 609, 1866], [619, 1838, 793, 1875], [804, 1838, 910, 1866], [923, 1838, 966, 1872], [979, 1838, 1078, 1867], [1090, 1838, 1121, 1866], [1133, 1842, 1197, 1866], [1210, 1838, 1313, 1867], [1326, 1842, 1355, 1866], [1369, 1838, 1452, 1867], [1465, 1838, 1513, 1866], [1527, 1838, 1707, 1875], [1719, 1838, 1812, 1866], [1824, 1842, 1950, 1875], [1964, 1838, 2027, 1866], [2040, 1838, 2071, 1866], [2083, 1838, 2176, 1866], [376, 1889, 456, 1917], [473, 1889, 644, 1926], [656, 1889, 790, 1917], [800, 1889, 932, 1917], [945, 1893, 976, 1917], [987, 1889, 1120, 1926], [1133, 1889, 1172, 1917], [1184, 1889, 1268, 1917], [1280, 1889, 1360, 1917], [1374, 1898, 1422, 1917], [1435, 1889, 1581, 1918], [1593, 1889, 1623, 1917], [1635, 1889, 1684, 1917], [1696, 1889, 1856, 1918], [1867, 1889, 2000, 1917], [2017, 1889, 2069, 1923], [438, 1940, 502, 1968], [514, 1944, 585, 1968], [597, 1940, 710, 1968], [722, 1940, 893, 1977], [904, 1940, 930, 1968], [943, 1940, 1079, 1968], [1092, 1940, 1240, 1968], [1251, 1940, 1287, 1968], [1297, 1940, 1347, 1968], [1360, 1940, 1491, 1977], [1504, 1950, 1537, 1968], [1554, 1940, 1618, 1968], [1630, 1940, 1760, 1977], [1772, 1941, 1824, 1968], [1837, 1940, 2000, 1977], [2011, 1940, 2173, 1968], [379, 1991, 440, 2025], [454, 1991, 668, 2019], [681, 1991, 924, 2028], [936, 1991, 1027, 2028], [1039, 1991, 1209, 2028], [1222, 2000, 1280, 2019], [1296, 1992, 1453, 2025], [1467, 1991, 1516, 2019], [1527, 2000, 1582, 2019], [1593, 1991, 1734, 2028], [1745, 1991, 1803, 2019], [1817, 1991, 1923, 2019], [1934, 1991, 1960, 2019], [1973, 1991, 2175, 2028], [376, 2042, 544, 2079], [562, 2042, 602, 2071], [615, 2051, 662, 2071], [673, 2046, 767, 2070], [778, 2046, 808, 2070], [822, 2051, 838, 2070], [848, 2042, 1060, 2079], [1074, 2046, 1201, 2079], [1212, 2042, 1300, 2079], [1313, 2042, 1464, 2079], [1477, 2042, 1686, 2079], [1701, 2042, 1774, 2076], [1788, 2042, 1887, 2071], [1899, 2042, 1996, 2071], [2011, 2042, 2175, 2079], [374, 2092, 454, 2121], [476, 2092, 549, 2120], [564, 2096, 695, 2129], [709, 2092, 735, 2120], [750, 2101, 782, 2120], [797, 2092, 930, 2121], [952, 2096, 1023, 2120], [1036, 2092, 1110, 2121], [1125, 2101, 1162, 2120], [1176, 2092, 1273, 2120], [1288, 2092, 1419, 2129], [1434, 2102, 1474, 2128], [1494, 2105, 1522, 2114], [1543, 2092, 1568, 2120], [1590, 2092, 1619, 2120], [1630, 2092, 1680, 2120], [1694, 2096, 1813, 2120], [1827, 2092, 1958, 2129], [1973, 2102, 2014, 2127], [2032, 2092, 2107, 2120], [2121, 2096, 2175, 2120], [375, 2143, 502, 2180], [515, 2143, 670, 2171], [681, 2143, 825, 2171], [837, 2143, 868, 2171], [881, 2142, 912, 2180], [925, 2143, 1011, 2171], [1023, 2152, 1040, 2171], [1051, 2143, 1206, 2180], [1219, 2143, 1323, 2171], [1334, 2143, 1424, 2180], [1438, 2140, 1529, 2181], [1544, 2140, 1610, 2181], [1623, 2160, 1649, 2161], [1664, 2153, 1704, 2177], [1711, 2140, 1758, 2181], [1773, 2143, 1832, 2171], [1845, 2141, 1900, 2182], [1908, 2140, 2000, 2181], [2016, 2143, 2110, 2177], [2124, 2143, 2174, 2171], [377, 2194, 508, 2231], [521, 2204, 604, 2231], [620, 2194, 646, 2222], [660, 2198, 705, 2222], [717, 2198, 747, 2222], [760, 2194, 810, 2222], [823, 2194, 911, 2223], [924, 2194, 987, 2222], [998, 2194, 1172, 2222], [1185, 2194, 1244, 2222], [1257, 2194, 1412, 2231], [1425, 2194, 1538, 2222], [1556, 2195, 1590, 2222], [1601, 2194, 1651, 2222], [1664, 2198, 1753, 2223], [1765, 2194, 1827, 2222], [1840, 2198, 1869, 2222], [1881, 2203, 1968, 2222], [1979, 2194, 2066, 2231], [2078, 2194, 2114, 2222], [2124, 2194, 2174, 2222], [375, 2245, 543, 2282], [558, 2245, 608, 2273], [622, 2254, 689, 2274], [706, 2255, 788, 2282], [807, 2245, 832, 2273], [848, 2245, 944, 2282], [958, 2245, 1030, 2273], [1044, 2254, 1078, 2273], [1092, 2249, 1144, 2273], [1160, 2245, 1276, 2273], [1290, 2249, 1321, 2273], [1337, 2255, 1377, 2279], [1384, 2269, 1390, 2279], [1407, 2245, 1444, 2273], [1460, 2245, 1548, 2274], [1563, 2245, 1589, 2273], [1603, 2245, 1724, 2274], [1747, 2246, 1782, 2273], [1796, 2245, 1854, 2273], [1870, 2245, 2001, 2279], [2018, 2245, 2173, 2282], [377, 2296, 626, 2333], [639, 2296, 674, 2324], [684, 2295, 706, 2333], [719, 2305, 766, 2324], [778, 2296, 899, 2324], [909, 2296, 982, 2324], [996, 2305, 1012, 2324], [1023, 2296, 1103, 2333], [1115, 2296, 1233, 2333], [1246, 2306, 1269, 2324], [1282, 2296, 1306, 2324], [1319, 2296, 1420, 2324], [1437, 2296, 1498, 2324], [1511, 2296, 1659, 2333], [1672, 2296, 1708, 2324], [1717, 2305, 1733, 2324], [1746, 2296, 1872, 2333], [1884, 2296, 1908, 2324], [1921, 2296, 2076, 2324], [2086, 2296, 2173, 2333], [376, 2346, 425, 2374], [437, 2346, 595, 2383], [607, 2346, 802, 2383], [814, 2346, 966, 2374], [977, 2346, 1101, 2374], [1111, 2346, 1175, 2374], [866, 2436, 1424, 2477], [1442, 2436, 1681, 2477], [374, 2531, 474, 2560], [487, 2540, 503, 2559], [515, 2531, 665, 2559], [678, 2541, 700, 2559], [715, 2544, 743, 2553], [759, 2531, 829, 2560], [842, 2531, 940, 2560], [953, 2531, 1023, 2560], [1034, 2531, 1174, 2568], [438, 2583, 518, 2610], [533, 2582, 595, 2610], [609, 2582, 659, 2610], [673, 2582, 811, 2619], [826, 2579, 939, 2620], [957, 2582, 1055, 2619], [1068, 2582, 1107, 2610], [1121, 2582, 1305, 2619], [1320, 2582, 1351, 2610], [1365, 2582, 1415, 2610], [1430, 2582, 1588, 2610], [1603, 2582, 1700, 2611], [1715, 2582, 1742, 2610], [1753, 2591, 1779, 2610], [1793, 2582, 1848, 2610], [1863, 2586, 2065, 2619], [2082, 2586, 2110, 2610], [2124, 2582, 2174, 2610], [375, 2633, 533, 2670], [550, 2633, 609, 2661], [624, 2632, 647, 2661], [660, 2633, 762, 2670], [778, 2633, 899, 2661], [914, 2633, 972, 2661], [987, 2633, 1146, 2670], [1162, 2633, 1307, 2668], [1322, 2633, 1402, 2667], [1420, 2633, 1479, 2661], [1494, 2637, 1525, 2661], [1540, 2633, 1590, 2661], [1606, 2633, 1793, 2670], [1806, 2633, 1977, 2670], [1991, 2642, 2032, 2661], [2046, 2633, 2109, 2661], [2124, 2633, 2179, 2661], [375, 2687, 555, 2720], [566, 2683, 670, 2712], [681, 2683, 720, 2711], [732, 2683, 877, 2711], [887, 2683, 928, 2720], [942, 2683, 1082, 2720], [1095, 2683, 1215, 2711], [1227, 2683, 1277, 2711], [1290, 2683, 1419, 2711], [1431, 2683, 1560, 2720], [1577, 2684, 1618, 2711], [1632, 2683, 1755, 2711], [1768, 2683, 1827, 2711], [1840, 2692, 1981, 2717], [1995, 2692, 2042, 2712], [2055, 2683, 2175, 2720], [376, 2734, 425, 2762], [437, 2734, 645, 2771], [658, 2734, 694, 2762], [703, 2734, 753, 2762], [765, 2734, 902, 2771], [914, 2731, 1040, 2772], [1054, 2734, 1178, 2771], [1191, 2743, 1246, 2762], [1257, 2734, 1307, 2762], [1319, 2734, 1429, 2762], [1441, 2734, 1504, 2762], [1514, 2734, 1607, 2762], [1619, 2738, 1649, 2762], [1662, 2734, 1809, 2762], [1822, 2738, 2023, 2771], [2034, 2734, 2173, 2771], [376, 2785, 494, 2813], [506, 2785, 555, 2813], [567, 2785, 695, 2813], [707, 2789, 760, 2813], [1255, 2934, 1293, 2964], [373, 239, 557, 277], [571, 239, 607, 268], [622, 242, 744, 276], [756, 242, 886, 268], [897, 242, 940, 268], [950, 242, 1089, 276], [1099, 243, 1216, 269], [416, 296, 575, 327], [592, 306, 632, 331], [649, 309, 677, 318], [695, 296, 720, 330], [734, 295, 753, 324], [769, 309, 797, 318], [813, 296, 839, 330], [854, 295, 885, 330], [899, 296, 1050, 324], [1061, 300, 1227, 333], [1239, 306, 1261, 324], [417, 344, 1000, 385], [1015, 357, 1074, 381], [1092, 344, 1369, 385], [479, 411, 639, 439], [651, 411, 803, 448], [816, 411, 927, 439], [945, 421, 1028, 449], [1046, 424, 1074, 433], [1243, 402, 1261, 415], [1265, 389, 1275, 403], [1266, 409, 1277, 423], [1283, 394, 1331, 427], [1340, 393, 1403, 422], [1094, 432, 1334, 461], [1340, 432, 1412, 461], [1418, 433, 1467, 465], [1475, 432, 1552, 461], [1563, 435, 1568, 439], [479, 475, 1197, 514], [1219, 469, 1230, 488], [1218, 486, 1292, 519], [480, 526, 656, 558], [417, 578, 480, 607], [492, 577, 585, 607], [417, 631, 529, 658], [542, 639, 583, 663], [373, 742, 557, 780], [571, 742, 609, 771], [621, 746, 667, 771], [678, 745, 822, 779], [832, 745, 876, 771], [885, 745, 1144, 779], [417, 806, 472, 833], [485, 805, 532, 834], [547, 818, 575, 827], [590, 802, 759, 843], [774, 805, 859, 834], [872, 798, 973, 833], [979, 805, 1026, 834], [1029, 804, 1070, 833], [1089, 818, 1117, 827], [1133, 805, 1205, 841], [417, 855, 444, 884], [457, 850, 596, 894], [600, 855, 611, 868], [621, 853, 668, 894], [687, 858, 713, 890], [732, 856, 756, 890], [770, 858, 882, 885], [894, 855, 936, 884], [944, 880, 949, 884], [417, 916, 443, 935], [446, 900, 589, 945], [593, 905, 604, 918], [611, 904, 656, 945], [670, 907, 741, 936], [417, 956, 510, 986], [522, 954, 637, 995], [655, 963, 681, 987], [696, 967, 710, 985], [723, 957, 765, 986], [479, 1008, 609, 1045], [622, 1012, 667, 1036], [678, 1008, 713, 1036], [724, 1008, 819, 1037], [830, 1008, 1007, 1036], [1021, 1008, 1050, 1042], [1064, 1008, 1105, 1036], [1116, 1001, 1138, 1036], [1150, 1021, 1178, 1030], [1195, 1005, 1248, 1046], [1263, 1032, 1285, 1036], [1297, 1005, 1338, 1046], [1352, 1005, 1368, 1046], [1381, 1008, 1410, 1036], [479, 1059, 640, 1088], [650, 1059, 781, 1087], [793, 1059, 923, 1087], [936, 1059, 977, 1087], [976, 1072, 992, 1097], [996, 1083, 1001, 1087], [480, 1110, 572, 1139], [585, 1109, 686, 1148], [700, 1123, 728, 1132], [747, 1105, 868, 1148], [874, 1107, 895, 1148], [902, 1123, 917, 1148], [922, 1134, 927, 1138], [479, 1161, 630, 1198], [643, 1161, 772, 1198], [785, 1171, 808, 1189], [820, 1161, 909, 1198], [920, 1161, 1134, 1198], [1146, 1168, 1167, 1189], [1180, 1161, 1390, 1198], [1403, 1161, 1485, 1198], [1503, 1161, 1561, 1196], [479, 1211, 598, 1248], [610, 1220, 636, 1239], [638, 1203, 689, 1225], [643, 1231, 655, 1232], [639, 1236, 653, 1256], [707, 1224, 735, 1233], [751, 1206, 832, 1249], [827, 1231, 839, 1232], [823, 1235, 837, 1255], [852, 1228, 878, 1229], [893, 1208, 981, 1249], [479, 1262, 652, 1293], [417, 1313, 480, 1342], [492, 1312, 585, 1342], [417, 1366, 529, 1393], [541, 1359, 591, 1392], [438, 1507, 499, 1535], [511, 1507, 608, 1536], [621, 1507, 747, 1544], [760, 1507, 902, 1535], [912, 1507, 1074, 1544], [1086, 1507, 1110, 1535], [1124, 1507, 1227, 1536], [1238, 1507, 1268, 1535], [1280, 1507, 1449, 1544], [1463, 1507, 1506, 1535], [1523, 1507, 1584, 1535], [1596, 1507, 1728, 1535], [1739, 1507, 1891, 1544], [1903, 1507, 1933, 1535], [1944, 1507, 2000, 1535], [2012, 1507, 2173, 1544], [376, 1558, 400, 1586], [413, 1558, 461, 1586], [473, 1558, 640, 1587], [652, 1558, 687, 1586], [697, 1557, 728, 1595], [741, 1558, 848, 1592], [862, 1558, 1059, 1587], [1072, 1567, 1127, 1586], [1138, 1558, 1175, 1586], [1188, 1558, 1265, 1586], [1277, 1558, 1308, 1586], [1320, 1558, 1412, 1586], [1423, 1558, 1501, 1586], [1517, 1558, 1729, 1592], [1743, 1558, 1773, 1586], [1784, 1558, 1912, 1595], [1926, 1567, 1942, 1586], [1953, 1558, 2011, 1587], [2024, 1558, 2173, 1586], [376, 1618, 459, 1637], [471, 1609, 541, 1637], [554, 1609, 661, 1637], [673, 1613, 704, 1637], [716, 1609, 818, 1637], [831, 1618, 847, 1637], [859, 1609, 940, 1646], [953, 1609, 1091, 1646], [438, 1660, 569, 1694], [584, 1669, 600, 1688], [611, 1660, 668, 1688], [680, 1661, 731, 1688], [743, 1660, 880, 1688], [893, 1669, 924, 1688], [937, 1660, 1095, 1688], [1108, 1660, 1203, 1689], [1214, 1669, 1284, 1688], [1298, 1664, 1327, 1688], [1339, 1657, 1423, 1698], [1438, 1664, 1512, 1688], [1528, 1660, 1618, 1694], [1631, 1660, 1672, 1697], [1684, 1660, 1850, 1697], [1863, 1660, 1912, 1688], [1925, 1664, 2068, 1688], [2080, 1660, 2115, 1688], [2125, 1660, 2174, 1688], [375, 1710, 519, 1747], [533, 1719, 579, 1739], [591, 1719, 717, 1747], [729, 1714, 759, 1738], [771, 1710, 879, 1738], [892, 1710, 940, 1738], [953, 1704, 1040, 1748], [1046, 1707, 1056, 1748], [1071, 1714, 1136, 1738], [1147, 1719, 1200, 1747], [1211, 1710, 1346, 1738], [1358, 1710, 1393, 1738], [1403, 1719, 1419, 1738], [1431, 1710, 1551, 1747], [1562, 1711, 1613, 1738], [1626, 1710, 1784, 1747], [1795, 1714, 1825, 1738], [1839, 1719, 1855, 1738], [1866, 1710, 2037, 1738], [2049, 1710, 2178, 1738], [374, 1761, 438, 1789], [450, 1761, 649, 1798], [662, 1761, 699, 1789], [709, 1761, 759, 1789], [771, 1761, 918, 1798], [931, 1761, 1057, 1789], [1070, 1761, 1095, 1789], [1110, 1761, 1217, 1790], [1231, 1770, 1263, 1789], [1276, 1761, 1452, 1798], [1468, 1761, 1513, 1789], [1532, 1762, 1613, 1789], [1626, 1761, 1689, 1789], [1701, 1761, 1732, 1789], [1745, 1761, 1795, 1789], [1809, 1761, 1924, 1798], [1937, 1770, 2008, 1789], [2021, 1761, 2111, 1790], [2124, 1761, 2174, 1789], [374, 1812, 499, 1849], [515, 1812, 562, 1841], [579, 1822, 617, 1840], [631, 1809, 787, 1850], [804, 1821, 851, 1840], [865, 1821, 898, 1840], [911, 1812, 990, 1849], [1003, 1812, 1064, 1840], [1075, 1812, 1123, 1840], [1135, 1812, 1365, 1840], [1377, 1812, 1525, 1849], [1536, 1812, 1689, 1840], [1703, 1812, 1774, 1841], [1786, 1812, 1834, 1840], [1847, 1812, 2035, 1840], [2047, 1821, 2114, 1846], [2127, 1821, 2173, 1841], [376, 1872, 431, 1891], [442, 1863, 543, 1891], [554, 1862, 595, 1891], [612, 1863, 734, 1900], [746, 1863, 795, 1892], [807, 1863, 924, 1900], [937, 1856, 1039, 1891], [1045, 1863, 1092, 1892], [1095, 1862, 1136, 1891], [1155, 1876, 1183, 1885], [1199, 1863, 1261, 1899], [1275, 1863, 1386, 1898], [1398, 1872, 1453, 1891], [1465, 1863, 1528, 1891], [1539, 1863, 1576, 1891], [1589, 1863, 1666, 1891], [1679, 1867, 1706, 1891], [1719, 1860, 1803, 1901], [1818, 1863, 1903, 1898], [1920, 1863, 1981, 1891], [1994, 1863, 2104, 1900], [2117, 1872, 2173, 1900], [376, 1914, 411, 1942], [420, 1914, 470, 1942], [482, 1918, 599, 1942], [610, 1914, 742, 1942], [754, 1914, 778, 1942], [791, 1914, 866, 1942], [879, 1923, 910, 1942], [924, 1923, 940, 1942], [953, 1914, 1093, 1951], [1105, 1914, 1253, 1948], [1267, 1914, 1367, 1943], [1379, 1923, 1425, 1943], [1436, 1923, 1491, 1942], [1504, 1923, 1520, 1942], [1532, 1914, 1683, 1942], [1694, 1914, 1730, 1942], [1740, 1924, 1754, 1942], [1769, 1927, 1797, 1936], [1814, 1908, 1893, 1943], [1908, 1914, 1938, 1942], [1950, 1914, 2089, 1951], [376, 2043, 410, 2083], [473, 2042, 654, 2095], [671, 2042, 844, 2095], [862, 2043, 956, 2084], [973, 2042, 1144, 2094], [1163, 2043, 1256, 2084], [1274, 2042, 1606, 2095], [1625, 2043, 1790, 2084], [374, 2149, 438, 2177], [455, 2149, 572, 2186], [588, 2149, 665, 2177], [681, 2149, 713, 2177], [729, 2149, 779, 2177], [795, 2149, 999, 2186], [1017, 2158, 1066, 2177], [1082, 2149, 1243, 2186], [1259, 2149, 1291, 2177], [1306, 2149, 1388, 2178], [1403, 2149, 1536, 2183], [1556, 2149, 1647, 2186], [1664, 2149, 1738, 2178], [1754, 2149, 1830, 2177], [1846, 2149, 2099, 2186], [2115, 2149, 2174, 2177], [376, 2200, 785, 2229], [797, 2200, 930, 2229], [944, 2200, 991, 2228], [1002, 2200, 1076, 2228], [1089, 2200, 1247, 2237], [1258, 2200, 1360, 2228], [1377, 2200, 1433, 2235], [1444, 2200, 1573, 2228], [1586, 2200, 1699, 2237], [1713, 2209, 1790, 2229], [1803, 2200, 1961, 2237], [1972, 2200, 2013, 2237], [2025, 2200, 2173, 2237], [375, 2251, 500, 2279], [511, 2255, 570, 2279], [581, 2251, 668, 2288], [681, 2251, 799, 2288], [812, 2251, 892, 2279], [904, 2244, 983, 2279], [989, 2275, 993, 2279], [1007, 2252, 1122, 2288], [1136, 2251, 1229, 2288], [1242, 2251, 1299, 2279], [1307, 2251, 1453, 2288], [1465, 2244, 1477, 2264], [1492, 2260, 1539, 2279], [1551, 2251, 1683, 2288], [1697, 2251, 1840, 2280], [1853, 2251, 1910, 2279], [1922, 2251, 2088, 2288], [2099, 2251, 2174, 2279], [376, 2301, 406, 2329], [416, 2301, 514, 2338], [524, 2301, 705, 2338], [723, 2301, 856, 2338], [868, 2301, 924, 2329], [935, 2302, 1030, 2329], [1041, 2294, 1054, 2314], [1068, 2310, 1115, 2329], [1127, 2301, 1189, 2329], [1200, 2301, 1332, 2338], [1344, 2301, 1494, 2330], [1510, 2301, 1611, 2338], [1622, 2301, 1697, 2329], [1707, 2301, 1738, 2329], [1748, 2301, 1796, 2329], [1807, 2301, 1961, 2329], [1972, 2301, 2178, 2338], [376, 2352, 400, 2380], [415, 2361, 431, 2380], [441, 2352, 514, 2389], [525, 2352, 691, 2380], [704, 2352, 784, 2381], [800, 2360, 820, 2380], [837, 2352, 915, 2381], [929, 2352, 1117, 2389], [1129, 2352, 1165, 2380], [1174, 2352, 1300, 2381], [1313, 2352, 1393, 2381], [1405, 2352, 1484, 2380], [1485, 2346, 1518, 2380], [1524, 2376, 1529, 2380], [1546, 2352, 1609, 2380], [1620, 2356, 1680, 2380], [1691, 2352, 1727, 2380], [1736, 2352, 1785, 2380], [1797, 2352, 1911, 2389], [1925, 2361, 2004, 2381], [2016, 2352, 2175, 2389], [376, 2403, 494, 2431], [505, 2403, 545, 2440], [558, 2403, 607, 2431], [620, 2403, 748, 2431], [437, 2455, 493, 2482], [504, 2454, 552, 2482], [565, 2454, 653, 2483], [666, 2454, 873, 2491], [887, 2454, 935, 2482], [947, 2454, 1107, 2488], [1120, 2454, 1304, 2491], [1314, 2454, 1371, 2482], [1383, 2454, 1497, 2491], [1510, 2463, 1673, 2491], [1686, 2463, 1763, 2483], [1775, 2454, 1858, 2488], [1872, 2454, 1970, 2483], [1983, 2463, 2030, 2482], [2042, 2454, 2174, 2491], [377, 2505, 524, 2534], [537, 2509, 565, 2533], [579, 2505, 653, 2539], [669, 2505, 713, 2533], [727, 2514, 764, 2533], [776, 2505, 925, 2542], [939, 2505, 1051, 2533], [1063, 2505, 1144, 2533], [1155, 2505, 1205, 2533], [1217, 2505, 1282, 2533], [1293, 2505, 1384, 2534], [1398, 2514, 1446, 2533], [1458, 2505, 1618, 2542], [1630, 2505, 1660, 2533], [1673, 2505, 1754, 2534], [1765, 2505, 1897, 2539], [1911, 2505, 2002, 2542], [2014, 2505, 2087, 2534], [2099, 2505, 2175, 2533], [376, 2556, 623, 2593], [635, 2556, 780, 2585], [420, 2687, 1050, 2722], [1055, 2694, 1329, 2722], [421, 2728, 561, 2757], [571, 2734, 635, 2757], [644, 2735, 1618, 2763], [421, 2769, 534, 2798], [548, 2775, 676, 2798], [685, 2775, 787, 2798], [801, 2776, 1493, 2804], [421, 2810, 561, 2838], [571, 2815, 635, 2838], [644, 2816, 1675, 2844], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1648, 805, 1867, 840], [1880, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1789, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [376, 2856, 484, 2893], [497, 2855, 546, 2885], [579, 2857, 648, 2884], [660, 2856, 778, 2893], [790, 2856, 867, 2884], [879, 2856, 911, 2884], [923, 2856, 973, 2884], [986, 2856, 1190, 2893], [1203, 2856, 1341, 2893], [1353, 2856, 1427, 2885], [1439, 2856, 1516, 2884], [1529, 2856, 1608, 2884], [1621, 2856, 1653, 2884], [1664, 2856, 1772, 2893], [1791, 2857, 1910, 2893], [1924, 2856, 2085, 2893], [2096, 2856, 2174, 2885], [375, 2906, 452, 2934], [465, 2906, 566, 2934], [578, 2906, 668, 2935], [680, 2910, 710, 2934], [723, 2906, 757, 2934], [768, 2906, 798, 2934], [809, 2915, 896, 2943], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1648, 805, 1867, 840], [1880, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1789, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [754, 2856, 860, 2893], [872, 2856, 921, 2885], [951, 2856, 1049, 2893], [1061, 2856, 1195, 2885], [1209, 2856, 1245, 2884], [1254, 2856, 1368, 2893], [1381, 2856, 1456, 2884], [1468, 2856, 1499, 2884], [1511, 2856, 1560, 2884], [1572, 2856, 1781, 2893], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1648, 805, 1867, 840], [1880, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1789, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [862, 2856, 969, 2893], [981, 2856, 1030, 2884], [1060, 2856, 1229, 2893], [1240, 2856, 1346, 2884], [1360, 2856, 1407, 2884], [1419, 2856, 1468, 2884], [1480, 2860, 1537, 2884], [1548, 2856, 1672, 2893], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1648, 805, 1867, 840], [1880, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1789, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [622, 2856, 729, 2893], [741, 2856, 789, 2885], [820, 2856, 917, 2893], [930, 2856, 987, 2884], [1000, 2856, 1180, 2885], [1192, 2856, 1327, 2885], [1340, 2856, 1376, 2884], [1385, 2856, 1500, 2893], [1512, 2856, 1587, 2884], [1599, 2856, 1630, 2884], [1642, 2856, 1691, 2884], [1703, 2856, 1913, 2893], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1648, 805, 1867, 840], [1880, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1789, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [826, 2856, 933, 2893], [944, 2856, 993, 2885], [1023, 2856, 1266, 2885], [1277, 2856, 1383, 2884], [1397, 2856, 1444, 2884], [1455, 2856, 1505, 2884], [1516, 2860, 1574, 2884], [1585, 2856, 1709, 2893], [696, 2732, 803, 2769], [816, 2732, 863, 2761], [893, 2732, 921, 2760], [935, 2732, 1080, 2760], [1092, 2732, 1128, 2760], [1137, 2732, 1247, 2760], [1260, 2732, 1339, 2760], [1351, 2732, 1400, 2760], [1412, 2732, 1565, 2761], [1577, 2732, 1668, 2761], [1681, 2741, 1839, 2769], [763, 2732, 870, 2769], [883, 2732, 930, 2761], [960, 2732, 1058, 2769], [1070, 2732, 1180, 2760], [1193, 2732, 1273, 2760], [1284, 2732, 1334, 2760], [1345, 2732, 1498, 2761], [1510, 2732, 1601, 2761], [1614, 2741, 1772, 2769], [734, 2732, 841, 2769], [854, 2732, 901, 2761], [932, 2732, 1087, 2760], [1099, 2732, 1208, 2760], [1222, 2732, 1301, 2760], [1313, 2732, 1362, 2760], [1374, 2732, 1527, 2761], [1539, 2732, 1630, 2761], [1643, 2741, 1801, 2769]], "scoresstructures": {"pages": {"version": "1.0", "structure_value": [[0, 505], [505, 1029], [1029, 1701], [1701, 2278], [2278, 2649], [2649, 3277], [3277, 3754], [3754, 4221], [4221, 4733], [4733, 5386], [5386, 5732], [5732, 6390], [6390, 6780], [6780, 7351], [7351, 7742], [7742, 8265], [8265, 8609], [8609, 9107], [9107, 9426], [9426, 9899], [9899, 10263], [10263, 10703], [10703, 11172], [11172, 11745], [11745, 12117], [12117, 12759], [12759, 12973], [12973, 13246], [13246, 13576], [13576, 13948], [13948, 14423], [14423, 14917], [14917, 15387], [15387, 15989], [15989, 16491], [16491, 17108], [17108, 17639], [17639, 18305], [18305, 18744], [18744, 19082], [19082, 19646], [19646, 20198], [20198, 20848], [20848, 21252], [21252, 21803], [21803, 22253], [22253, 22824], [22824, 23363], [23363, 23889], [23889, 24447], [24447, 24889], [24889, 25380], [25380, 25895], [25895, 26260], [26260, 26677], [26677, 27214], [27214, 27789], [27789, 28449], [28449, 28886], [28886, 28958], [28958, 29016], [29016, 29072], [29072, 29132], [29132, 29188], [29188, 29199], [29199, 29208], [29208, 29217]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 5], [5, 7], [7, 8], [8, 10], [10, 11], [11, 22], [22, 30], [30, 32], [32, 33], [33, 39], [39, 46], [46, 47], [47, 62], [62, 76], [76, 94], [94, 110], [110, 123], [123, 136], [136, 150], [150, 167], [167, 183], [183, 198], [198, 217], [217, 219], [219, 234], [234, 247], [247, 262], [262, 276], [276, 286], [286, 292], [292, 293], [293, 317], [317, 325], [325, 342], [342, 343], [343, 344], [344, 345], [345, 346], [346, 347], [347, 349], [349, 350], [350, 351], [351, 352], [352, 353], [353, 358], [358, 359], [359, 360], [360, 370], [370, 371], [371, 387], [387, 396], [396, 397], [397, 398], [398, 401], [401, 402], [402, 403], [403, 404], [404, 405], [405, 406], [406, 407], [407, 409], [409, 410], [410, 411], [411, 414], [414, 415], [415, 416], [416, 418], [418, 419], [419, 420], [420, 421], [421, 422], [422, 443], [443, 453], [453, 469], [469, 470], [470, 471], [471, 472], [472, 473], [473, 474], [474, 475], [475, 476], [476, 477], [477, 478], [478, 479], [479, 480], [480, 481], [481, 482], [482, 483], [483, 484], [484, 485], [485, 486], [486, 487], [487, 488], [488, 489], [489, 490], [490, 491], [491, 492], [492, 493], [493, 494], [494, 495], [495, 496], [496, 497], [497, 498], [498, 499], [499, 500], [500, 501], [501, 502], [502, 503], [503, 504], [504, 505], [505, 507], [507, 510], [510, 513], [513, 522], [522, 523], [523, 524], [524, 525], [525, 526], [526, 527], [527, 528], [528, 530], [530, 531], [531, 532], [532, 538], [538, 539], [539, 540], [540, 541], [541, 542], [542, 544], [544, 545], [545, 546], [546, 550], [550, 551], [551, 552], [552, 567], [567, 580], [580, 596], [596, 615], [615, 616], [616, 626], [626, 627], [627, 628], [628, 629], [629, 630], [630, 632], [632, 633], [633, 634], [634, 635], [635, 638], [638, 639], [639, 640], [640, 656], [656, 671], [671, 678], [678, 679], [679, 691], [691, 705], [705, 721], [721, 739], [739, 753], [753, 764], [764, 782], [782, 785], [785, 787], [787, 803], [803, 810], [810, 828], [828, 848], [848, 852], [852, 867], [867, 880], [880, 896], [896, 907], [907, 919], [919, 920], [920, 937], [937, 938], [938, 953], [953, 954], [954, 967], [967, 983], [983, 999], [999, 1015], [1015, 1028], [1028, 1029], [1029, 1044], [1044, 1055], [1055, 1071], [1071, 1081], [1081, 1098], [1098, 1118], [1118, 1135], [1135, 1136], [1136, 1139], [1139, 1158], [1158, 1167], [1167, 1183], [1183, 1198], [1198, 1205], [1205, 1210], [1210, 1211], [1211, 1214], [1214, 1223], [1223, 1238], [1238, 1254], [1254, 1269], [1269, 1287], [1287, 1302], [1302, 1318], [1318, 1336], [1336, 1353], [1353, 1374], [1374, 1394], [1394, 1407], [1407, 1422], [1422, 1439], [1439, 1459], [1459, 1474], [1474, 1489], [1489, 1498], [1498, 1517], [1517, 1538], [1538, 1554], [1554, 1568], [1568, 1573], [1573, 1591], [1591, 1609], [1609, 1628], [1628, 1640], [1640, 1645], [1645, 1647], [1647, 1658], [1658, 1675], [1675, 1688], [1688, 1691], [1691, 1700], [1700, 1701], [1701, 1717], [1717, 1737], [1737, 1751], [1751, 1752], [1752, 1758], [1758, 1759], [1759, 1760], [1760, 1779], [1779, 1796], [1796, 1813], [1813, 1818], [1818, 1832], [1832, 1833], [1833, 1834], [1834, 1835], [1835, 1836], [1836, 1839], [1839, 1840], [1840, 1863], [1863, 1881], [1881, 1895], [1895, 1911], [1911, 1928], [1928, 1937], [1937, 1953], [1953, 1973], [1973, 1979], [1979, 1994], [1994, 1995], [1995, 2005], [2005, 2011], [2011, 2026], [2026, 2041], [2041, 2054], [2054, 2072], [2072, 2084], [2084, 2100], [2100, 2119], [2119, 2137], [2137, 2155], [2155, 2167], [2167, 2173], [2173, 2174], [2174, 2175], [2175, 2192], [2192, 2199], [2199, 2213], [2213, 2223], [2223, 2224], [2224, 2225], [2225, 2226], [2226, 2228], [2228, 2229], [2229, 2230], [2230, 2231], [2231, 2232], [2232, 2236], [2236, 2237], [2237, 2252], [2252, 2258], [2258, 2261], [2261, 2262], [2262, 2263], [2263, 2264], [2264, 2265], [2265, 2270], [2270, 2271], [2271, 2273], [2273, 2274], [2274, 2275], [2275, 2276], [2276, 2277], [2277, 2278], [2278, 2295], [2295, 2296], [2296, 2297], [2297, 2298], [2298, 2299], [2299, 2304], [2304, 2305], [2305, 2308], [2308, 2309], [2309, 2331], [2331, 2332], [2332, 2334], [2334, 2345], [2345, 2346], [2346, 2347], [2347, 2348], [2348, 2349], [2349, 2350], [2350, 2351], [2351, 2354], [2354, 2358], [2358, 2359], [2359, 2360], [2360, 2361], [2361, 2362], [2362, 2363], [2363, 2364], [2364, 2365], [2365, 2366], [2366, 2367], [2367, 2371], [2371, 2372], [2372, 2387], [2387, 2388], [2388, 2389], [2389, 2390], [2390, 2391], [2391, 2392], [2392, 2395], [2395, 2396], [2396, 2397], [2397, 2398], [2398, 2401], [2401, 2402], [2402, 2422], [2422, 2426], [2426, 2436], [2436, 2453], [2453, 2471], [2471, 2492], [2492, 2501], [2501, 2520], [2520, 2521], [2521, 2524], [2524, 2525], [2525, 2526], [2526, 2527], [2527, 2530], [2530, 2531], [2531, 2532], [2532, 2552], [2552, 2573], [2573, 2574], [2574, 2575], [2575, 2576], [2576, 2577], [2577, 2578], [2578, 2579], [2579, 2580], [2580, 2581], [2581, 2582], [2582, 2583], [2583, 2584], [2584, 2585], [2585, 2586], [2586, 2587], [2587, 2588], [2588, 2589], [2589, 2590], [2590, 2592], [2592, 2615], [2615, 2640], [2640, 2648], [2648, 2649], [2649, 2657], [2657, 2667], [2667, 2683], [2683, 2686], [2686, 2688], [2688, 2689], [2689, 2703], [2703, 2704], [2704, 2706], [2706, 2707], [2707, 2714], [2714, 2715], [2715, 2724], [2724, 2725], [2725, 2727], [2727, 2728], [2728, 2750], [2750, 2751], [2751, 2757], [2757, 2758], [2758, 2766], [2766, 2767], [2767, 2769], [2769, 2770], [2770, 2783], [2783, 2784], [2784, 2798], [2798, 2799], [2799, 2805], [2805, 2806], [2806, 2819], [2819, 2820], [2820, 2834], [2834, 2835], [2835, 2837], [2837, 2838], [2838, 2844], [2844, 2845], [2845, 2858], [2858, 2859], [2859, 2873], [2873, 2874], [2874, 2876], [2876, 2877], [2877, 2879], [2879, 2880], [2880, 2881], [2881, 2884], [2884, 2898], [2898, 2919], [2919, 2938], [2938, 2958], [2958, 2977], [2977, 2999], [2999, 3016], [3016, 3034], [3034, 3054], [3054, 3069], [3069, 3083], [3083, 3099], [3099, 3116], [3116, 3135], [3135, 3141], [3141, 3158], [3158, 3174], [3174, 3192], [3192, 3209], [3209, 3214], [3214, 3231], [3231, 3244], [3244, 3262], [3262, 3276], [3276, 3277], [3277, 3278], [3278, 3279], [3279, 3280], [3280, 3281], [3281, 3282], [3282, 3283], [3283, 3284], [3284, 3285], [3285, 3286], [3286, 3305], [3305, 3326], [3326, 3342], [3342, 3361], [3361, 3385], [3385, 3405], [3405, 3425], [3425, 3445], [3445, 3462], [3462, 3483], [3483, 3505], [3505, 3511], [3511, 3525], [3525, 3542], [3542, 3561], [3561, 3581], [3581, 3599], [3599, 3621], [3621, 3640], [3640, 3656], [3656, 3674], [3674, 3678], [3678, 3697], [3697, 3715], [3715, 3729], [3729, 3743], [3743, 3753], [3753, 3754], [3754, 3760], [3760, 3761], [3761, 3762], [3762, 3777], [3777, 3796], [3796, 3798], [3798, 3814], [3814, 3830], [3830, 3845], [3845, 3854], [3854, 3873], [3873, 3891], [3891, 3900], [3900, 3908], [3908, 3909], [3909, 3910], [3910, 3924], [3924, 3925], [3925, 3926], [3926, 3940], [3940, 3941], [3941, 3942], [3942, 3951], [3951, 3952], [3952, 3953], [3953, 3960], [3960, 3961], [3961, 3962], [3962, 3974], [3974, 3975], [3975, 3976], [3976, 3982], [3982, 3983], [3983, 3989], [3989, 4005], [4005, 4015], [4015, 4033], [4033, 4056], [4056, 4070], [4070, 4084], [4084, 4101], [4101, 4117], [4117, 4134], [4134, 4137], [4137, 4138], [4138, 4139], [4139, 4140], [4140, 4150], [4150, 4151], [4151, 4152], [4152, 4153], [4153, 4158], [4158, 4166], [4166, 4167], [4167, 4168], [4168, 4169], [4169, 4180], [4180, 4181], [4181, 4201], [4201, 4220], [4220, 4221], [4221, 4229], [4229, 4233], [4233, 4234], [4234, 4235], [4235, 4236], [4236, 4237], [4237, 4238], [4238, 4239], [4239, 4240], [4240, 4241], [4241, 4242], [4242, 4243], [4243, 4244], [4244, 4245], [4245, 4247], [4247, 4248], [4248, 4251], [4251, 4252], [4252, 4260], [4260, 4261], [4261, 4262], [4262, 4263], [4263, 4264], [4264, 4265], [4265, 4276], [4276, 4277], [4277, 4278], [4278, 4279], [4279, 4291], [4291, 4292], [4292, 4293], [4293, 4294], [4294, 4300], [4300, 4301], [4301, 4302], [4302, 4303], [4303, 4304], [4304, 4305], [4305, 4306], [4306, 4307], [4307, 4308], [4308, 4309], [4309, 4310], [4310, 4311], [4311, 4314], [4314, 4315], [4315, 4316], [4316, 4317], [4317, 4318], [4318, 4319], [4319, 4321], [4321, 4322], [4322, 4328], [4328, 4329], [4329, 4330], [4330, 4331], [4331, 4332], [4332, 4333], [4333, 4334], [4334, 4335], [4335, 4346], [4346, 4347], [4347, 4348], [4348, 4349], [4349, 4350], [4350, 4351], [4351, 4353], [4353, 4354], [4354, 4365], [4365, 4366], [4366, 4367], [4367, 4368], [4368, 4369], [4369, 4370], [4370, 4378], [4378, 4379], [4379, 4380], [4380, 4381], [4381, 4382], [4382, 4383], [4383, 4385], [4385, 4386], [4386, 4387], [4387, 4388], [4388, 4391], [4391, 4392], [4392, 4393], [4393, 4394], [4394, 4395], [4395, 4396], [4396, 4398], [4398, 4399], [4399, 4409], [4409, 4410], [4410, 4411], [4411, 4412], [4412, 4414], [4414, 4415], [4415, 4419], [4419, 4420], [4420, 4421], [4421, 4422], [4422, 4423], [4423, 4424], [4424, 4425], [4425, 4434], [4434, 4435], [4435, 4436], [4436, 4437], [4437, 4447], [4447, 4448], [4448, 4450], [4450, 4451], [4451, 4461], [4461, 4462], [4462, 4463], [4463, 4464], [4464, 4466], [4466, 4467], [4467, 4469], [4469, 4470], [4470, 4471], [4471, 4472], [4472, 4473], [4473, 4474], [4474, 4475], [4475, 4476], [4476, 4477], [4477, 4478], [4478, 4479], [4479, 4485], [4485, 4486], [4486, 4487], [4487, 4488], [4488, 4489], [4489, 4490], [4490, 4497], [4497, 4498], [4498, 4499], [4499, 4500], [4500, 4502], [4502, 4503], [4503, 4512], [4512, 4515], [4515, 4523], [4523, 4524], [4524, 4525], [4525, 4545], [4545, 4553], [4553, 4571], [4571, 4585], [4585, 4602], [4602, 4619], [4619, 4638], [4638, 4655], [4655, 4675], [4675, 4679], [4679, 4691], [4691, 4707], [4707, 4725], [4725, 4732], [4732, 4733], [4733, 4734], [4734, 4736], [4736, 4739], [4739, 4740], [4740, 4741], [4741, 4742], [4742, 4743], [4743, 4745], [4745, 4749], [4749, 4751], [4751, 4756], [4756, 4767], [4767, 4788], [4788, 4795], [4795, 4797], [4797, 4820], [4820, 4839], [4839, 4858], [4858, 4883], [4883, 4892], [4892, 4913], [4913, 4932], [4932, 4949], [4949, 4971], [4971, 4990], [4990, 4991], [4991, 4992], [4992, 4993], [4993, 4994], [4994, 4995], [4995, 4997], [4997, 4998], [4998, 4999], [4999, 5000], [5000, 5001], [5001, 5021], [5021, 5044], [5044, 5051], [5051, 5052], [5052, 5053], [5053, 5054], [5054, 5069], [5069, 5070], [5070, 5071], [5071, 5074], [5074, 5075], [5075, 5076], [5076, 5077], [5077, 5078], [5078, 5079], [5079, 5080], [5080, 5081], [5081, 5083], [5083, 5084], [5084, 5085], [5085, 5086], [5086, 5087], [5087, 5088], [5088, 5105], [5105, 5124], [5124, 5145], [5145, 5146], [5146, 5148], [5148, 5154], [5154, 5176], [5176, 5199], [5199, 5217], [5217, 5233], [5233, 5248], [5248, 5267], [5267, 5279], [5279, 5298], [5298, 5314], [5314, 5332], [5332, 5345], [5345, 5354], [5354, 5370], [5370, 5385], [5385, 5386], [5386, 5387], [5387, 5388], [5388, 5389], [5389, 5390], [5390, 5391], [5391, 5392], [5392, 5393], [5393, 5394], [5394, 5395], [5395, 5396], [5396, 5397], [5397, 5417], [5417, 5438], [5438, 5455], [5455, 5478], [5478, 5502], [5502, 5523], [5523, 5543], [5543, 5566], [5566, 5572], [5572, 5588], [5588, 5605], [5605, 5619], [5619, 5635], [5635, 5655], [5655, 5672], [5672, 5689], [5689, 5707], [5707, 5723], [5723, 5731], [5731, 5732], [5732, 5750], [5750, 5768], [5768, 5783], [5783, 5805], [5805, 5824], [5824, 5844], [5844, 5845], [5845, 5860], [5860, 5878], [5878, 5900], [5900, 5921], [5921, 5940], [5940, 5949], [5949, 5955], [5955, 5956], [5956, 5957], [5957, 5972], [5972, 5976], [5976, 5977], [5977, 5978], [5978, 5979], [5979, 5980], [5980, 5981], [5981, 5982], [5982, 5985], [5985, 5986], [5986, 5991], [5991, 5992], [5992, 6007], [6007, 6014], [6014, 6015], [6015, 6016], [6016, 6018], [6018, 6019], [6019, 6020], [6020, 6021], [6021, 6022], [6022, 6026], [6026, 6027], [6027, 6044], [6044, 6057], [6057, 6058], [6058, 6059], [6059, 6060], [6060, 6061], [6061, 6062], [6062, 6063], [6063, 6065], [6065, 6080], [6080, 6081], [6081, 6086], [6086, 6087], [6087, 6088], [6088, 6089], [6089, 6090], [6090, 6093], [6093, 6094], [6094, 6098], [6098, 6109], [6109, 6110], [6110, 6111], [6111, 6112], [6112, 6113], [6113, 6114], [6114, 6115], [6115, 6120], [6120, 6121], [6121, 6143], [6143, 6160], [6160, 6179], [6179, 6197], [6197, 6214], [6214, 6216], [6216, 6232], [6232, 6253], [6253, 6277], [6277, 6288], [6288, 6301], [6301, 6316], [6316, 6333], [6333, 6349], [6349, 6359], [6359, 6378], [6378, 6389], [6389, 6390], [6390, 6391], [6391, 6392], [6392, 6393], [6393, 6394], [6394, 6395], [6395, 6396], [6396, 6397], [6397, 6398], [6398, 6399], [6399, 6400], [6400, 6401], [6401, 6402], [6402, 6403], [6403, 6404], [6404, 6406], [6406, 6427], [6427, 6450], [6450, 6476], [6476, 6488], [6488, 6498], [6498, 6499], [6499, 6502], [6502, 6503], [6503, 6509], [6509, 6510], [6510, 6511], [6511, 6512], [6512, 6513], [6513, 6514], [6514, 6515], [6515, 6516], [6516, 6517], [6517, 6518], [6518, 6519], [6519, 6520], [6520, 6521], [6521, 6522], [6522, 6524], [6524, 6525], [6525, 6526], [6526, 6527], [6527, 6536], [6536, 6537], [6537, 6538], [6538, 6539], [6539, 6540], [6540, 6541], [6541, 6542], [6542, 6543], [6543, 6544], [6544, 6545], [6545, 6546], [6546, 6547], [6547, 6549], [6549, 6550], [6550, 6551], [6551, 6552], [6552, 6557], [6557, 6575], [6575, 6597], [6597, 6616], [6616, 6621], [6621, 6622], [6622, 6623], [6623, 6638], [6638, 6641], [6641, 6642], [6642, 6644], [6644, 6645], [6645, 6646], [6646, 6647], [6647, 6648], [6648, 6653], [6653, 6654], [6654, 6671], [6671, 6677], [6677, 6693], [6693, 6712], [6712, 6729], [6729, 6744], [6744, 6745], [6745, 6752], [6752, 6757], [6757, 6759], [6759, 6760], [6760, 6779], [6779, 6780], [6780, 6804], [6804, 6823], [6823, 6846], [6846, 6867], [6867, 6870], [6870, 6889], [6889, 6903], [6903, 6910], [6910, 6920], [6920, 6921], [6921, 6922], [6922, 6923], [6923, 6924], [6924, 6925], [6925, 6927], [6927, 6928], [6928, 6947], [6947, 6971], [6971, 6973], [6973, 6974], [6974, 6975], [6975, 6976], [6976, 6987], [6987, 6988], [6988, 6989], [6989, 6990], [6990, 6991], [6991, 6993], [6993, 6994], [6994, 6995], [6995, 6999], [6999, 7000], [7000, 7001], [7001, 7019], [7019, 7020], [7020, 7029], [7029, 7030], [7030, 7031], [7031, 7035], [7035, 7036], [7036, 7042], [7042, 7048], [7048, 7049], [7049, 7050], [7050, 7051], [7051, 7052], [7052, 7053], [7053, 7056], [7056, 7057], [7057, 7058], [7058, 7059], [7059, 7060], [7060, 7062], [7062, 7063], [7063, 7064], [7064, 7068], [7068, 7069], [7069, 7070], [7070, 7071], [7071, 7073], [7073, 7074], [7074, 7076], [7076, 7077], [7077, 7078], [7078, 7079], [7079, 7080], [7080, 7081], [7081, 7082], [7082, 7084], [7084, 7085], [7085, 7086], [7086, 7087], [7087, 7088], [7088, 7090], [7090, 7091], [7091, 7092], [7092, 7094], [7094, 7095], [7095, 7097], [7097, 7098], [7098, 7099], [7099, 7100], [7100, 7101], [7101, 7103], [7103, 7104], [7104, 7105], [7105, 7106], [7106, 7124], [7124, 7138], [7138, 7154], [7154, 7173], [7173, 7189], [7189, 7208], [7208, 7209], [7209, 7227], [7227, 7244], [7244, 7249], [7249, 7250], [7250, 7251], [7251, 7254], [7254, 7255], [7255, 7256], [7256, 7257], [7257, 7258], [7258, 7259], [7259, 7260], [7260, 7279], [7279, 7298], [7298, 7314], [7314, 7317], [7317, 7318], [7318, 7319], [7319, 7323], [7323, 7324], [7324, 7325], [7325, 7329], [7329, 7350], [7350, 7351], [7351, 7357], [7357, 7364], [7364, 7365], [7365, 7366], [7366, 7367], [7367, 7368], [7368, 7369], [7369, 7370], [7370, 7379], [7379, 7381], [7381, 7386], [7386, 7389], [7389, 7394], [7394, 7397], [7397, 7398], [7398, 7400], [7400, 7401], [7401, 7402], [7402, 7404], [7404, 7405], [7405, 7407], [7407, 7408], [7408, 7409], [7409, 7411], [7411, 7413], [7413, 7420], [7420, 7426], [7426, 7430], [7430, 7436], [7436, 7437], [7437, 7438], [7438, 7447], [7447, 7448], [7448, 7450], [7450, 7452], [7452, 7470], [7470, 7489], [7489, 7507], [7507, 7521], [7521, 7526], [7526, 7527], [7527, 7528], [7528, 7541], [7541, 7542], [7542, 7543], [7543, 7545], [7545, 7546], [7546, 7548], [7548, 7549], [7549, 7550], [7550, 7551], [7551, 7552], [7552, 7556], [7556, 7557], [7557, 7574], [7574, 7591], [7591, 7612], [7612, 7628], [7628, 7646], [7646, 7650], [7650, 7657], [7657, 7667], [7667, 7670], [7670, 7671], [7671, 7672], [7672, 7673], [7673, 7678], [7678, 7679], [7679, 7694], [7694, 7696], [7696, 7697], [7697, 7699], [7699, 7700], [7700, 7701], [7701, 7702], [7702, 7705], [7705, 7706], [7706, 7718], [7718, 7725], [7725, 7734], [7734, 7735], [7735, 7736], [7736, 7741], [7741, 7742], [7742, 7762], [7762, 7778], [7778, 7784], [7784, 7805], [7805, 7816], [7816, 7818], [7818, 7819], [7819, 7821], [7821, 7822], [7822, 7823], [7823, 7824], [7824, 7825], [7825, 7826], [7826, 7827], [7827, 7828], [7828, 7829], [7829, 7830], [7830, 7831], [7831, 7832], [7832, 7833], [7833, 7842], [7842, 7844], [7844, 7845], [7845, 7846], [7846, 7847], [7847, 7848], [7848, 7849], [7849, 7859], [7859, 7860], [7860, 7861], [7861, 7864], [7864, 7865], [7865, 7866], [7866, 7867], [7867, 7868], [7868, 7869], [7869, 7871], [7871, 7872], [7872, 7873], [7873, 7874], [7874, 7875], [7875, 7876], [7876, 7877], [7877, 7878], [7878, 7879], [7879, 7880], [7880, 7881], [7881, 7882], [7882, 7883], [7883, 7884], [7884, 7885], [7885, 7891], [7891, 7892], [7892, 7896], [7896, 7899], [7899, 7908], [7908, 7917], [7917, 7918], [7918, 7919], [7919, 7922], [7922, 7923], [7923, 7924], [7924, 7925], [7925, 7946], [7946, 7958], [7958, 7961], [7961, 7962], [7962, 7963], [7963, 7964], [7964, 7966], [7966, 7967], [7967, 7968], [7968, 7969], [7969, 7970], [7970, 7971], [7971, 7972], [7972, 7975], [7975, 7976], [7976, 7977], [7977, 7978], [7978, 7983], [7983, 7984], [7984, 7985], [7985, 7988], [7988, 7989], [7989, 7990], [7990, 7991], [7991, 7992], [7992, 7993], [7993, 7994], [7994, 7995], [7995, 7996], [7996, 7997], [7997, 8000], [8000, 8001], [8001, 8002], [8002, 8003], [8003, 8005], [8005, 8006], [8006, 8007], [8007, 8008], [8008, 8009], [8009, 8010], [8010, 8011], [8011, 8012], [8012, 8013], [8013, 8031], [8031, 8042], [8042, 8043], [8043, 8044], [8044, 8048], [8048, 8049], [8049, 8050], [8050, 8051], [8051, 8053], [8053, 8054], [8054, 8055], [8055, 8056], [8056, 8057], [8057, 8058], [8058, 8059], [8059, 8060], [8060, 8063], [8063, 8064], [8064, 8065], [8065, 8066], [8066, 8067], [8067, 8073], [8073, 8091], [8091, 8104], [8104, 8110], [8110, 8128], [8128, 8143], [8143, 8158], [8158, 8175], [8175, 8192], [8192, 8196], [8196, 8198], [8198, 8199], [8199, 8200], [8200, 8201], [8201, 8205], [8205, 8206], [8206, 8226], [8226, 8233], [8233, 8234], [8234, 8236], [8236, 8237], [8237, 8250], [8250, 8254], [8254, 8255], [8255, 8264], [8264, 8265], [8265, 8269], [8269, 8276], [8276, 8283], [8283, 8289], [8289, 8302], [8302, 8316], [8316, 8324], [8324, 8325], [8325, 8327], [8327, 8329], [8329, 8346], [8346, 8349], [8349, 8357], [8357, 8358], [8358, 8359], [8359, 8360], [8360, 8361], [8361, 8369], [8369, 8370], [8370, 8372], [8372, 8392], [8392, 8400], [8400, 8401], [8401, 8402], [8402, 8405], [8405, 8406], [8406, 8407], [8407, 8408], [8408, 8409], [8409, 8410], [8410, 8413], [8413, 8434], [8434, 8445], [8445, 8450], [8450, 8455], [8455, 8456], [8456, 8470], [8470, 8472], [8472, 8473], [8473, 8474], [8474, 8476], [8476, 8477], [8477, 8478], [8478, 8479], [8479, 8480], [8480, 8483], [8483, 8484], [8484, 8503], [8503, 8521], [8521, 8539], [8539, 8540], [8540, 8546], [8546, 8563], [8563, 8570], [8570, 8573], [8573, 8593], [8593, 8600], [8600, 8603], [8603, 8604], [8604, 8605], [8605, 8607], [8607, 8608], [8608, 8609], [8609, 8610], [8610, 8627], [8627, 8646], [8646, 8659], [8659, 8674], [8674, 8680], [8680, 8694], [8694, 8710], [8710, 8713], [8713, 8717], [8717, 8718], [8718, 8719], [8719, 8720], [8720, 8721], [8721, 8722], [8722, 8723], [8723, 8725], [8725, 8726], [8726, 8734], [8734, 8742], [8742, 8760], [8760, 8762], [8762, 8763], [8763, 8765], [8765, 8766], [8766, 8767], [8767, 8768], [8768, 8769], [8769, 8770], [8770, 8771], [8771, 8772], [8772, 8773], [8773, 8774], [8774, 8789], [8789, 8794], [8794, 8815], [8815, 8835], [8835, 8844], [8844, 8859], [8859, 8880], [8880, 8894], [8894, 8910], [8910, 8926], [8926, 8936], [8936, 8940], [8940, 8950], [8950, 8951], [8951, 8952], [8952, 8953], [8953, 8954], [8954, 8959], [8959, 8979], [8979, 8996], [8996, 9001], [9001, 9018], [9018, 9033], [9033, 9051], [9051, 9053], [9053, 9074], [9074, 9089], [9089, 9106], [9106, 9107], [9107, 9111], [9111, 9119], [9119, 9120], [9120, 9122], [9122, 9128], [9128, 9134], [9134, 9137], [9137, 9138], [9138, 9144], [9144, 9147], [9147, 9148], [9148, 9149], [9149, 9151], [9151, 9154], [9154, 9158], [9158, 9159], [9159, 9160], [9160, 9165], [9165, 9166], [9166, 9172], [9172, 9173], [9173, 9174], [9174, 9177], [9177, 9178], [9178, 9179], [9179, 9181], [9181, 9183], [9183, 9184], [9184, 9185], [9185, 9186], [9186, 9187], [9187, 9188], [9188, 9189], [9189, 9190], [9190, 9191], [9191, 9192], [9192, 9193], [9193, 9195], [9195, 9196], [9196, 9198], [9198, 9200], [9200, 9217], [9217, 9227], [9227, 9233], [9233, 9247], [9247, 9253], [9253, 9254], [9254, 9255], [9255, 9258], [9258, 9259], [9259, 9268], [9268, 9269], [9269, 9283], [9283, 9289], [9289, 9291], [9291, 9292], [9292, 9295], [9295, 9296], [9296, 9315], [9315, 9332], [9332, 9349], [9349, 9356], [9356, 9375], [9375, 9394], [9394, 9395], [9395, 9411], [9411, 9415], [9415, 9416], [9416, 9417], [9417, 9419], [9419, 9420], [9420, 9425], [9425, 9426], [9426, 9434], [9434, 9435], [9435, 9436], [9436, 9439], [9439, 9440], [9440, 9442], [9442, 9443], [9443, 9459], [9459, 9481], [9481, 9495], [9495, 9496], [9496, 9505], [9505, 9506], [9506, 9507], [9507, 9508], [9508, 9509], [9509, 9510], [9510, 9513], [9513, 9514], [9514, 9534], [9534, 9549], [9549, 9550], [9550, 9554], [9554, 9555], [9555, 9556], [9556, 9557], [9557, 9558], [9558, 9574], [9574, 9591], [9591, 9610], [9610, 9611], [9611, 9612], [9612, 9614], [9614, 9615], [9615, 9616], [9616, 9617], [9617, 9618], [9618, 9623], [9623, 9628], [9628, 9631], [9631, 9656], [9656, 9678], [9678, 9682], [9682, 9683], [9683, 9684], [9684, 9686], [9686, 9695], [9695, 9712], [9712, 9727], [9727, 9735], [9735, 9750], [9750, 9751], [9751, 9755], [9755, 9756], [9756, 9760], [9760, 9761], [9761, 9762], [9762, 9763], [9763, 9764], [9764, 9765], [9765, 9767], [9767, 9770], [9770, 9771], [9771, 9772], [9772, 9773], [9773, 9776], [9776, 9777], [9777, 9778], [9778, 9779], [9779, 9780], [9780, 9781], [9781, 9782], [9782, 9784], [9784, 9785], [9785, 9786], [9786, 9787], [9787, 9788], [9788, 9789], [9789, 9790], [9790, 9792], [9792, 9793], [9793, 9799], [9799, 9801], [9801, 9802], [9802, 9803], [9803, 9804], [9804, 9805], [9805, 9806], [9806, 9807], [9807, 9808], [9808, 9809], [9809, 9810], [9810, 9812], [9812, 9813], [9813, 9817], [9817, 9818], [9818, 9819], [9819, 9820], [9820, 9822], [9822, 9823], [9823, 9829], [9829, 9845], [9845, 9862], [9862, 9879], [9879, 9891], [9891, 9892], [9892, 9898], [9898, 9899], [9899, 9907], [9907, 9908], [9908, 9909], [9909, 9913], [9913, 9914], [9914, 9920], [9920, 9922], [9922, 9923], [9923, 9924], [9924, 9926], [9926, 9927], [9927, 9929], [9929, 9930], [9930, 9931], [9931, 9932], [9932, 9933], [9933, 9934], [9934, 9935], [9935, 9938], [9938, 9939], [9939, 9940], [9940, 9941], [9941, 9942], [9942, 9945], [9945, 9946], [9946, 9951], [9951, 9954], [9954, 9956], [9956, 9957], [9957, 9959], [9959, 9961], [9961, 9974], [9974, 9975], [9975, 9976], [9976, 9977], [9977, 9978], [9978, 9979], [9979, 9980], [9980, 9982], [9982, 9983], [9983, 9985], [9985, 9986], [9986, 9987], [9987, 9988], [9988, 9991], [9991, 9992], [9992, 9993], [9993, 9995], [9995, 9996], [9996, 9997], [9997, 9998], [9998, 9999], [9999, 10000], [10000, 10003], [10003, 10004], [10004, 10005], [10005, 10006], [10006, 10007], [10007, 10010], [10010, 10011], [10011, 10028], [10028, 10039], [10039, 10055], [10055, 10071], [10071, 10072], [10072, 10076], [10076, 10077], [10077, 10078], [10078, 10079], [10079, 10080], [10080, 10081], [10081, 10082], [10082, 10084], [10084, 10085], [10085, 10086], [10086, 10087], [10087, 10088], [10088, 10089], [10089, 10090], [10090, 10091], [10091, 10092], [10092, 10093], [10093, 10094], [10094, 10095], [10095, 10098], [10098, 10099], [10099, 10100], [10100, 10101], [10101, 10102], [10102, 10105], [10105, 10106], [10106, 10123], [10123, 10134], [10134, 10138], [10138, 10155], [10155, 10157], [10157, 10158], [10158, 10159], [10159, 10174], [10174, 10189], [10189, 10197], [10197, 10214], [10214, 10222], [10222, 10223], [10223, 10224], [10224, 10228], [10228, 10244], [10244, 10253], [10253, 10254], [10254, 10255], [10255, 10256], [10256, 10257], [10257, 10258], [10258, 10259], [10259, 10260], [10260, 10261], [10261, 10262], [10262, 10263], [10263, 10283], [10283, 10290], [10290, 10298], [10298, 10303], [10303, 10304], [10304, 10305], [10305, 10306], [10306, 10313], [10313, 10336], [10336, 10353], [10353, 10371], [10371, 10389], [10389, 10408], [10408, 10430], [10430, 10447], [10447, 10452], [10452, 10453], [10453, 10454], [10454, 10455], [10455, 10458], [10458, 10459], [10459, 10460], [10460, 10461], [10461, 10462], [10462, 10463], [10463, 10464], [10464, 10465], [10465, 10466], [10466, 10467], [10467, 10468], [10468, 10469], [10469, 10470], [10470, 10471], [10471, 10472], [10472, 10473], [10473, 10474], [10474, 10476], [10476, 10492], [10492, 10495], [10495, 10496], [10496, 10497], [10497, 10498], [10498, 10499], [10499, 10500], [10500, 10501], [10501, 10502], [10502, 10521], [10521, 10542], [10542, 10546], [10546, 10547], [10547, 10548], [10548, 10550], [10550, 10558], [10558, 10570], [10570, 10571], [10571, 10572], [10572, 10576], [10576, 10577], [10577, 10578], [10578, 10579], [10579, 10581], [10581, 10592], [10592, 10593], [10593, 10594], [10594, 10596], [10596, 10600], [10600, 10601], [10601, 10602], [10602, 10603], [10603, 10606], [10606, 10607], [10607, 10608], [10608, 10610], [10610, 10611], [10611, 10612], [10612, 10613], [10613, 10614], [10614, 10615], [10615, 10616], [10616, 10617], [10617, 10618], [10618, 10619], [10619, 10620], [10620, 10621], [10621, 10622], [10622, 10623], [10623, 10624], [10624, 10625], [10625, 10626], [10626, 10629], [10629, 10630], [10630, 10631], [10631, 10632], [10632, 10634], [10634, 10635], [10635, 10636], [10636, 10638], [10638, 10639], [10639, 10641], [10641, 10642], [10642, 10644], [10644, 10666], [10666, 10684], [10684, 10702], [10702, 10703], [10703, 10721], [10721, 10725], [10725, 10726], [10726, 10727], [10727, 10728], [10728, 10729], [10729, 10734], [10734, 10736], [10736, 10737], [10737, 10738], [10738, 10739], [10739, 10740], [10740, 10741], [10741, 10742], [10742, 10743], [10743, 10745], [10745, 10746], [10746, 10747], [10747, 10748], [10748, 10749], [10749, 10750], [10750, 10751], [10751, 10752], [10752, 10753], [10753, 10754], [10754, 10755], [10755, 10756], [10756, 10758], [10758, 10759], [10759, 10760], [10760, 10761], [10761, 10762], [10762, 10763], [10763, 10764], [10764, 10765], [10765, 10766], [10766, 10767], [10767, 10777], [10777, 10781], [10781, 10782], [10782, 10790], [10790, 10794], [10794, 10795], [10795, 10796], [10796, 10798], [10798, 10799], [10799, 10800], [10800, 10801], [10801, 10803], [10803, 10804], [10804, 10806], [10806, 10807], [10807, 10808], [10808, 10809], [10809, 10810], [10810, 10811], [10811, 10812], [10812, 10813], [10813, 10814], [10814, 10818], [10818, 10820], [10820, 10821], [10821, 10822], [10822, 10823], [10823, 10824], [10824, 10825], [10825, 10827], [10827, 10828], [10828, 10846], [10846, 10847], [10847, 10848], [10848, 10849], [10849, 10850], [10850, 10851], [10851, 10854], [10854, 10855], [10855, 10857], [10857, 10858], [10858, 10859], [10859, 10860], [10860, 10861], [10861, 10862], [10862, 10863], [10863, 10864], [10864, 10865], [10865, 10866], [10866, 10867], [10867, 10872], [10872, 10873], [10873, 10874], [10874, 10875], [10875, 10876], [10876, 10877], [10877, 10879], [10879, 10893], [10893, 10912], [10912, 10922], [10922, 10930], [10930, 10935], [10935, 10936], [10936, 10937], [10937, 10938], [10938, 10939], [10939, 10940], [10940, 10942], [10942, 10943], [10943, 10944], [10944, 10945], [10945, 10946], [10946, 10947], [10947, 10948], [10948, 10949], [10949, 10950], [10950, 10955], [10955, 10956], [10956, 10957], [10957, 10958], [10958, 10970], [10970, 10976], [10976, 10996], [10996, 10999], [10999, 11016], [11016, 11017], [11017, 11018], [11018, 11021], [11021, 11022], [11022, 11023], [11023, 11025], [11025, 11026], [11026, 11030], [11030, 11031], [11031, 11032], [11032, 11033], [11033, 11035], [11035, 11036], [11036, 11040], [11040, 11041], [11041, 11042], [11042, 11047], [11047, 11048], [11048, 11059], [11059, 11060], [11060, 11065], [11065, 11081], [11081, 11084], [11084, 11085], [11085, 11087], [11087, 11088], [11088, 11089], [11089, 11093], [11093, 11094], [11094, 11095], [11095, 11099], [11099, 11100], [11100, 11117], [11117, 11118], [11118, 11121], [11121, 11122], [11122, 11123], [11123, 11124], [11124, 11126], [11126, 11128], [11128, 11129], [11129, 11137], [11137, 11138], [11138, 11140], [11140, 11141], [11141, 11150], [11150, 11156], [11156, 11157], [11157, 11158], [11158, 11159], [11159, 11160], [11160, 11161], [11161, 11162], [11162, 11164], [11164, 11165], [11165, 11166], [11166, 11167], [11167, 11169], [11169, 11170], [11170, 11171], [11171, 11172], [11172, 11179], [11179, 11191], [11191, 11208], [11208, 11222], [11222, 11228], [11228, 11246], [11246, 11256], [11256, 11259], [11259, 11263], [11263, 11274], [11274, 11282], [11282, 11283], [11283, 11285], [11285, 11298], [11298, 11299], [11299, 11300], [11300, 11301], [11301, 11304], [11304, 11305], [11305, 11306], [11306, 11307], [11307, 11308], [11308, 11309], [11309, 11310], [11310, 11312], [11312, 11313], [11313, 11314], [11314, 11316], [11316, 11317], [11317, 11318], [11318, 11319], [11319, 11320], [11320, 11321], [11321, 11322], [11322, 11349], [11349, 11358], [11358, 11382], [11382, 11398], [11398, 11399], [11399, 11400], [11400, 11401], [11401, 11402], [11402, 11403], [11403, 11404], [11404, 11405], [11405, 11408], [11408, 11409], [11409, 11429], [11429, 11445], [11445, 11446], [11446, 11447], [11447, 11448], [11448, 11449], [11449, 11450], [11450, 11452], [11452, 11453], [11453, 11473], [11473, 11481], [11481, 11496], [11496, 11506], [11506, 11507], [11507, 11508], [11508, 11509], [11509, 11510], [11510, 11511], [11511, 11512], [11512, 11513], [11513, 11514], [11514, 11515], [11515, 11516], [11516, 11518], [11518, 11519], [11519, 11520], [11520, 11539], [11539, 11545], [11545, 11546], [11546, 11561], [11561, 11564], [11564, 11565], [11565, 11582], [11582, 11600], [11600, 11602], [11602, 11603], [11603, 11609], [11609, 11618], [11618, 11633], [11633, 11642], [11642, 11646], [11646, 11664], [11664, 11680], [11680, 11681], [11681, 11684], [11684, 11694], [11694, 11710], [11710, 11725], [11725, 11742], [11742, 11744], [11744, 11745], [11745, 11747], [11747, 11748], [11748, 11752], [11752, 11766], [11766, 11769], [11769, 11787], [11787, 11788], [11788, 11795], [11795, 11805], [11805, 11830], [11830, 11848], [11848, 11849], [11849, 11865], [11865, 11883], [11883, 11885], [11885, 11886], [11886, 11887], [11887, 11888], [11888, 11889], [11889, 11890], [11890, 11891], [11891, 11892], [11892, 11893], [11893, 11894], [11894, 11895], [11895, 11897], [11897, 11899], [11899, 11900], [11900, 11903], [11903, 11905], [11905, 11907], [11907, 11909], [11909, 11911], [11911, 11912], [11912, 11913], [11913, 11914], [11914, 11916], [11916, 11917], [11917, 11918], [11918, 11920], [11920, 11922], [11922, 11923], [11923, 11924], [11924, 11925], [11925, 11926], [11926, 11927], [11927, 11928], [11928, 11929], [11929, 11930], [11930, 11931], [11931, 11933], [11933, 11935], [11935, 11937], [11937, 11940], [11940, 11941], [11941, 11957], [11957, 11958], [11958, 11962], [11962, 11973], [11973, 11990], [11990, 11995], [11995, 12003], [12003, 12013], [12013, 12025], [12025, 12034], [12034, 12041], [12041, 12058], [12058, 12059], [12059, 12062], [12062, 12079], [12079, 12081], [12081, 12094], [12094, 12110], [12110, 12116], [12116, 12117], [12117, 12134], [12134, 12154], [12154, 12171], [12171, 12187], [12187, 12206], [12206, 12226], [12226, 12241], [12241, 12246], [12246, 12261], [12261, 12266], [12266, 12280], [12280, 12296], [12296, 12297], [12297, 12314], [12314, 12332], [12332, 12344], [12344, 12358], [12358, 12362], [12362, 12379], [12379, 12393], [12393, 12408], [12408, 12425], [12425, 12440], [12440, 12450], [12450, 12454], [12454, 12470], [12470, 12488], [12488, 12505], [12505, 12523], [12523, 12536], [12536, 12542], [12542, 12561], [12561, 12578], [12578, 12598], [12598, 12616], [12616, 12633], [12633, 12651], [12651, 12666], [12666, 12678], [12678, 12686], [12686, 12702], [12702, 12718], [12718, 12728], [12728, 12743], [12743, 12758], [12758, 12759], [12759, 12775], [12775, 12776], [12776, 12781], [12781, 12795], [12795, 12805], [12805, 12806], [12806, 12808], [12808, 12809], [12809, 12813], [12813, 12816], [12816, 12818], [12818, 12830], [12830, 12849], [12849, 12865], [12865, 12882], [12882, 12897], [12897, 12898], [12898, 12912], [12912, 12925], [12925, 12933], [12933, 12949], [12949, 12965], [12965, 12972], [12972, 12973], [12973, 12992], [12992, 12993], [12993, 12994], [12994, 13004], [13004, 13011], [13011, 13030], [13030, 13048], [13048, 13063], [13063, 13065], [13065, 13084], [13084, 13087], [13087, 13109], [13109, 13131], [13131, 13137], [13137, 13158], [13158, 13164], [13164, 13182], [13182, 13196], [13196, 13207], [13207, 13227], [13227, 13245], [13245, 13246], [13246, 13265], [13265, 13266], [13266, 13267], [13267, 13281], [13281, 13282], [13282, 13288], [13288, 13294], [13294, 13300], [13300, 13301], [13301, 13315], [13315, 13335], [13335, 13356], [13356, 13372], [13372, 13382], [13382, 13398], [13398, 13415], [13415, 13436], [13436, 13455], [13455, 13473], [13473, 13489], [13489, 13503], [13503, 13521], [13521, 13538], [13538, 13560], [13560, 13575], [13575, 13576], [13576, 13577], [13577, 13578], [13578, 13579], [13579, 13580], [13580, 13581], [13581, 13582], [13582, 13583], [13583, 13584], [13584, 13585], [13585, 13586], [13586, 13587], [13587, 13588], [13588, 13589], [13589, 13590], [13590, 13592], [13592, 13593], [13593, 13594], [13594, 13595], [13595, 13596], [13596, 13597], [13597, 13598], [13598, 13599], [13599, 13602], [13602, 13605], [13605, 13608], [13608, 13611], [13611, 13614], [13614, 13615], [13615, 13616], [13616, 13617], [13617, 13618], [13618, 13619], [13619, 13620], [13620, 13621], [13621, 13622], [13622, 13623], [13623, 13624], [13624, 13625], [13625, 13626], [13626, 13627], [13627, 13628], [13628, 13629], [13629, 13631], [13631, 13632], [13632, 13633], [13633, 13634], [13634, 13635], [13635, 13636], [13636, 13637], [13637, 13638], [13638, 13641], [13641, 13644], [13644, 13647], [13647, 13650], [13650, 13653], [13653, 13654], [13654, 13671], [13671, 13672], [13672, 13687], [13687, 13688], [13688, 13689], [13689, 13690], [13690, 13691], [13691, 13692], [13692, 13693], [13693, 13694], [13694, 13695], [13695, 13696], [13696, 13697], [13697, 13698], [13698, 13699], [13699, 13700], [13700, 13701], [13701, 13702], [13702, 13703], [13703, 13704], [13704, 13705], [13705, 13707], [13707, 13708], [13708, 13709], [13709, 13710], [13710, 13711], [13711, 13712], [13712, 13713], [13713, 13714], [13714, 13717], [13717, 13718], [13718, 13719], [13719, 13720], [13720, 13721], [13721, 13722], [13722, 13723], [13723, 13724], [13724, 13725], [13725, 13726], [13726, 13727], [13727, 13728], [13728, 13729], [13729, 13730], [13730, 13731], [13731, 13732], [13732, 13733], [13733, 13734], [13734, 13735], [13735, 13736], [13736, 13737], [13737, 13739], [13739, 13740], [13740, 13741], [13741, 13742], [13742, 13743], [13743, 13744], [13744, 13745], [13745, 13746], [13746, 13749], [13749, 13750], [13750, 13751], [13751, 13752], [13752, 13753], [13753, 13769], [13769, 13770], [13770, 13773], [13773, 13785], [13785, 13804], [13804, 13816], [13816, 13822], [13822, 13828], [13828, 13829], [13829, 13843], [13843, 13862], [13862, 13878], [13878, 13892], [13892, 13910], [13910, 13920], [13920, 13931], [13931, 13947], [13947, 13948], [13948, 13949], [13949, 13950], [13950, 13951], [13951, 13952], [13952, 13953], [13953, 13954], [13954, 13955], [13955, 13956], [13956, 13957], [13957, 13958], [13958, 13959], [13959, 13960], [13960, 13961], [13961, 13963], [13963, 13964], [13964, 13965], [13965, 13966], [13966, 13967], [13967, 13968], [13968, 13969], [13969, 13970], [13970, 13974], [13974, 13975], [13975, 13976], [13976, 13977], [13977, 13978], [13978, 13979], [13979, 13980], [13980, 13981], [13981, 13982], [13982, 13983], [13983, 13984], [13984, 13985], [13985, 13986], [13986, 13987], [13987, 13988], [13988, 13989], [13989, 13990], [13990, 13991], [13991, 13992], [13992, 13994], [13994, 13995], [13995, 13996], [13996, 13997], [13997, 13998], [13998, 13999], [13999, 14000], [14000, 14001], [14001, 14006], [14006, 14007], [14007, 14008], [14008, 14009], [14009, 14010], [14010, 14011], [14011, 14012], [14012, 14013], [14013, 14014], [14014, 14015], [14015, 14016], [14016, 14017], [14017, 14018], [14018, 14019], [14019, 14020], [14020, 14021], [14021, 14022], [14022, 14023], [14023, 14024], [14024, 14026], [14026, 14027], [14027, 14028], [14028, 14029], [14029, 14030], [14030, 14031], [14031, 14032], [14032, 14033], [14033, 14037], [14037, 14038], [14038, 14039], [14039, 14040], [14040, 14041], [14041, 14042], [14042, 14061], [14061, 14066], [14066, 14067], [14067, 14079], [14079, 14085], [14085, 14086], [14086, 14087], [14087, 14088], [14088, 14089], [14089, 14090], [14090, 14091], [14091, 14092], [14092, 14093], [14093, 14094], [14094, 14095], [14095, 14096], [14096, 14097], [14097, 14098], [14098, 14099], [14099, 14100], [14100, 14101], [14101, 14102], [14102, 14103], [14103, 14107], [14107, 14108], [14108, 14109], [14109, 14110], [14110, 14111], [14111, 14112], [14112, 14113], [14113, 14114], [14114, 14115], [14115, 14116], [14116, 14117], [14117, 14118], [14118, 14119], [14119, 14120], [14120, 14121], [14121, 14122], [14122, 14123], [14123, 14124], [14124, 14125], [14125, 14126], [14126, 14127], [14127, 14128], [14128, 14129], [14129, 14130], [14130, 14131], [14131, 14135], [14135, 14136], [14136, 14137], [14137, 14138], [14138, 14139], [14139, 14140], [14140, 14141], [14141, 14142], [14142, 14143], [14143, 14144], [14144, 14145], [14145, 14146], [14146, 14147], [14147, 14148], [14148, 14149], [14149, 14150], [14150, 14151], [14151, 14152], [14152, 14153], [14153, 14154], [14154, 14155], [14155, 14156], [14156, 14157], [14157, 14158], [14158, 14162], [14162, 14163], [14163, 14164], [14164, 14165], [14165, 14166], [14166, 14167], [14167, 14168], [14168, 14169], [14169, 14170], [14170, 14171], [14171, 14172], [14172, 14173], [14173, 14174], [14174, 14175], [14175, 14176], [14176, 14177], [14177, 14178], [14178, 14179], [14179, 14180], [14180, 14181], [14181, 14182], [14182, 14183], [14183, 14184], [14184, 14185], [14185, 14186], [14186, 14191], [14191, 14192], [14192, 14193], [14193, 14194], [14194, 14195], [14195, 14196], [14196, 14197], [14197, 14198], [14198, 14199], [14199, 14200], [14200, 14201], [14201, 14202], [14202, 14203], [14203, 14204], [14204, 14205], [14205, 14206], [14206, 14207], [14207, 14208], [14208, 14209], [14209, 14210], [14210, 14211], [14211, 14212], [14212, 14213], [14213, 14214], [14214, 14215], [14215, 14220], [14220, 14221], [14221, 14222], [14222, 14223], [14223, 14224], [14224, 14225], [14225, 14226], [14226, 14227], [14227, 14228], [14228, 14229], [14229, 14230], [14230, 14231], [14231, 14232], [14232, 14233], [14233, 14234], [14234, 14235], [14235, 14236], [14236, 14237], [14237, 14238], [14238, 14239], [14239, 14240], [14240, 14241], [14241, 14242], [14242, 14243], [14243, 14244], [14244, 14248], [14248, 14249], [14249, 14250], [14250, 14251], [14251, 14252], [14252, 14253], [14253, 14272], [14272, 14283], [14283, 14284], [14284, 14290], [14290, 14301], [14301, 14318], [14318, 14340], [14340, 14360], [14360, 14380], [14380, 14397], [14397, 14417], [14417, 14422], [14422, 14423], [14423, 14439], [14439, 14460], [14460, 14483], [14483, 14502], [14502, 14520], [14520, 14541], [14541, 14556], [14556, 14572], [14572, 14578], [14578, 14587], [14587, 14588], [14588, 14599], [14599, 14617], [14617, 14634], [14634, 14636], [14636, 14641], [14641, 14642], [14642, 14643], [14643, 14644], [14644, 14645], [14645, 14646], [14646, 14647], [14647, 14648], [14648, 14649], [14649, 14650], [14650, 14651], [14651, 14652], [14652, 14653], [14653, 14654], [14654, 14655], [14655, 14657], [14657, 14658], [14658, 14659], [14659, 14660], [14660, 14661], [14661, 14662], [14662, 14663], [14663, 14664], [14664, 14667], [14667, 14668], [14668, 14669], [14669, 14670], [14670, 14671], [14671, 14672], [14672, 14673], [14673, 14674], [14674, 14675], [14675, 14676], [14676, 14677], [14677, 14678], [14678, 14679], [14679, 14681], [14681, 14682], [14682, 14683], [14683, 14684], [14684, 14685], [14685, 14686], [14686, 14687], [14687, 14688], [14688, 14691], [14691, 14692], [14692, 14693], [14693, 14703], [14703, 14704], [14704, 14714], [14714, 14719], [14719, 14725], [14725, 14743], [14743, 14747], [14747, 14748], [14748, 14749], [14749, 14750], [14750, 14751], [14751, 14756], [14756, 14757], [14757, 14759], [14759, 14760], [14760, 14773], [14773, 14774], [14774, 14783], [14783, 14804], [14804, 14819], [14819, 14822], [14822, 14840], [14840, 14859], [14859, 14868], [14868, 14876], [14876, 14877], [14877, 14881], [14881, 14890], [14890, 14891], [14891, 14898], [14898, 14909], [14909, 14910], [14910, 14916], [14916, 14917], [14917, 14919], [14919, 14920], [14920, 14922], [14922, 14923], [14923, 14925], [14925, 14926], [14926, 14928], [14928, 14929], [14929, 14930], [14930, 14933], [14933, 14934], [14934, 14936], [14936, 14937], [14937, 14940], [14940, 14941], [14941, 14943], [14943, 14944], [14944, 14945], [14945, 14953], [14953, 14956], [14956, 14968], [14968, 14969], [14969, 14970], [14970, 14971], [14971, 14975], [14975, 14976], [14976, 14993], [14993, 14997], [14997, 15005], [15005, 15006], [15006, 15017], [15017, 15018], [15018, 15020], [15020, 15023], [15023, 15024], [15024, 15026], [15026, 15040], [15040, 15049], [15049, 15059], [15059, 15060], [15060, 15061], [15061, 15081], [15081, 15100], [15100, 15115], [15115, 15132], [15132, 15144], [15144, 15160], [15160, 15161], [15161, 15162], [15162, 15170], [15170, 15172], [15172, 15174], [15174, 15175], [15175, 15181], [15181, 15203], [15203, 15220], [15220, 15228], [15228, 15232], [15232, 15250], [15250, 15265], [15265, 15282], [15282, 15284], [15284, 15285], [15285, 15301], [15301, 15321], [15321, 15326], [15326, 15333], [15333, 15344], [15344, 15365], [15365, 15386], [15386, 15387], [15387, 15405], [15405, 15415], [15415, 15422], [15422, 15438], [15438, 15457], [15457, 15458], [15458, 15459], [15459, 15460], [15460, 15461], [15461, 15462], [15462, 15463], [15463, 15464], [15464, 15465], [15465, 15467], [15467, 15468], [15468, 15469], [15469, 15470], [15470, 15471], [15471, 15472], [15472, 15473], [15473, 15474], [15474, 15475], [15475, 15476], [15476, 15477], [15477, 15478], [15478, 15479], [15479, 15480], [15480, 15481], [15481, 15482], [15482, 15483], [15483, 15484], [15484, 15485], [15485, 15486], [15486, 15487], [15487, 15488], [15488, 15489], [15489, 15490], [15490, 15491], [15491, 15492], [15492, 15498], [15498, 15499], [15499, 15500], [15500, 15501], [15501, 15502], [15502, 15503], [15503, 15504], [15504, 15505], [15505, 15506], [15506, 15507], [15507, 15508], [15508, 15509], [15509, 15510], [15510, 15512], [15512, 15513], [15513, 15514], [15514, 15515], [15515, 15516], [15516, 15517], [15517, 15518], [15518, 15519], [15519, 15520], [15520, 15521], [15521, 15522], [15522, 15523], [15523, 15524], [15524, 15525], [15525, 15526], [15526, 15527], [15527, 15528], [15528, 15529], [15529, 15530], [15530, 15531], [15531, 15532], [15532, 15533], [15533, 15534], [15534, 15535], [15535, 15536], [15536, 15537], [15537, 15543], [15543, 15544], [15544, 15545], [15545, 15546], [15546, 15547], [15547, 15548], [15548, 15549], [15549, 15550], [15550, 15551], [15551, 15553], [15553, 15554], [15554, 15555], [15555, 15556], [15556, 15557], [15557, 15558], [15558, 15559], [15559, 15560], [15560, 15561], [15561, 15562], [15562, 15563], [15563, 15564], [15564, 15565], [15565, 15566], [15566, 15567], [15567, 15568], [15568, 15569], [15569, 15570], [15570, 15571], [15571, 15572], [15572, 15573], [15573, 15574], [15574, 15575], [15575, 15576], [15576, 15577], [15577, 15578], [15578, 15584], [15584, 15585], [15585, 15586], [15586, 15587], [15587, 15588], [15588, 15589], [15589, 15590], [15590, 15591], [15591, 15592], [15592, 15593], [15593, 15594], [15594, 15596], [15596, 15597], [15597, 15598], [15598, 15599], [15599, 15600], [15600, 15601], [15601, 15602], [15602, 15603], [15603, 15604], [15604, 15605], [15605, 15606], [15606, 15607], [15607, 15608], [15608, 15609], [15609, 15610], [15610, 15611], [15611, 15612], [15612, 15613], [15613, 15614], [15614, 15615], [15615, 15616], [15616, 15617], [15617, 15618], [15618, 15619], [15619, 15620], [15620, 15621], [15621, 15627], [15627, 15628], [15628, 15629], [15629, 15630], [15630, 15631], [15631, 15632], [15632, 15633], [15633, 15634], [15634, 15635], [15635, 15636], [15636, 15637], [15637, 15638], [15638, 15640], [15640, 15641], [15641, 15642], [15642, 15643], [15643, 15644], [15644, 15645], [15645, 15646], [15646, 15647], [15647, 15648], [15648, 15649], [15649, 15650], [15650, 15651], [15651, 15652], [15652, 15653], [15653, 15654], [15654, 15655], [15655, 15656], [15656, 15657], [15657, 15658], [15658, 15659], [15659, 15660], [15660, 15661], [15661, 15662], [15662, 15663], [15663, 15664], [15664, 15665], [15665, 15671], [15671, 15672], [15672, 15673], [15673, 15674], [15674, 15675], [15675, 15676], [15676, 15677], [15677, 15678], [15678, 15679], [15679, 15680], [15680, 15682], [15682, 15683], [15683, 15684], [15684, 15685], [15685, 15686], [15686, 15687], [15687, 15688], [15688, 15689], [15689, 15690], [15690, 15691], [15691, 15692], [15692, 15693], [15693, 15694], [15694, 15695], [15695, 15696], [15696, 15697], [15697, 15698], [15698, 15699], [15699, 15700], [15700, 15701], [15701, 15702], [15702, 15703], [15703, 15704], [15704, 15705], [15705, 15706], [15706, 15707], [15707, 15713], [15713, 15714], [15714, 15715], [15715, 15732], [15732, 15737], [15737, 15756], [15756, 15759], [15759, 15772], [15772, 15789], [15789, 15812], [15812, 15815], [15815, 15832], [15832, 15852], [15852, 15855], [15855, 15856], [15856, 15870], [15870, 15888], [15888, 15893], [15893, 15898], [15898, 15916], [15916, 15932], [15932, 15950], [15950, 15966], [15966, 15978], [15978, 15986], [15986, 15988], [15988, 15989], [15989, 16004], [16004, 16013], [16013, 16014], [16014, 16015], [16015, 16018], [16018, 16023], [16023, 16028], [16028, 16029], [16029, 16033], [16033, 16034], [16034, 16039], [16039, 16040], [16040, 16044], [16044, 16060], [16060, 16076], [16076, 16091], [16091, 16101], [16101, 16102], [16102, 16110], [16110, 16113], [16113, 16114], [16114, 16122], [16122, 16127], [16127, 16141], [16141, 16147], [16147, 16159], [16159, 16163], [16163, 16169], [16169, 16189], [16189, 16204], [16204, 16206], [16206, 16229], [16229, 16246], [16246, 16256], [16256, 16272], [16272, 16287], [16287, 16303], [16303, 16306], [16306, 16307], [16307, 16308], [16308, 16309], [16309, 16310], [16310, 16311], [16311, 16312], [16312, 16313], [16313, 16314], [16314, 16315], [16315, 16316], [16316, 16317], [16317, 16320], [16320, 16321], [16321, 16327], [16327, 16329], [16329, 16333], [16333, 16337], [16337, 16338], [16338, 16354], [16354, 16375], [16375, 16396], [16396, 16411], [16411, 16429], [16429, 16447], [16447, 16468], [16468, 16487], [16487, 16490], [16490, 16491], [16491, 16509], [16509, 16523], [16523, 16539], [16539, 16547], [16547, 16548], [16548, 16558], [16558, 16572], [16572, 16573], [16573, 16574], [16574, 16577], [16577, 16594], [16594, 16604], [16604, 16605], [16605, 16606], [16606, 16608], [16608, 16612], [16612, 16613], [16613, 16614], [16614, 16615], [16615, 16620], [16620, 16636], [16636, 16654], [16654, 16674], [16674, 16681], [16681, 16682], [16682, 16683], [16683, 16695], [16695, 16697], [16697, 16705], [16705, 16706], [16706, 16707], [16707, 16710], [16710, 16711], [16711, 16712], [16712, 16713], [16713, 16714], [16714, 16717], [16717, 16719], [16719, 16720], [16720, 16727], [16727, 16728], [16728, 16729], [16729, 16741], [16741, 16762], [16762, 16768], [16768, 16774], [16774, 16785], [16785, 16803], [16803, 16820], [16820, 16830], [16830, 16838], [16838, 16847], [16847, 16853], [16853, 16869], [16869, 16885], [16885, 16895], [16895, 16908], [16908, 16924], [16924, 16936], [16936, 16952], [16952, 16968], [16968, 16984], [16984, 16999], [16999, 17015], [17015, 17026], [17026, 17027], [17027, 17028], [17028, 17029], [17029, 17030], [17030, 17031], [17031, 17032], [17032, 17033], [17033, 17036], [17036, 17037], [17037, 17038], [17038, 17039], [17039, 17040], [17040, 17041], [17041, 17061], [17061, 17079], [17079, 17099], [17099, 17107], [17107, 17108], [17108, 17130], [17130, 17145], [17145, 17165], [17165, 17185], [17185, 17191], [17191, 17192], [17192, 17198], [17198, 17199], [17199, 17200], [17200, 17201], [17201, 17202], [17202, 17203], [17203, 17204], [17204, 17205], [17205, 17206], [17206, 17207], [17207, 17208], [17208, 17209], [17209, 17210], [17210, 17211], [17211, 17212], [17212, 17213], [17213, 17214], [17214, 17215], [17215, 17216], [17216, 17217], [17217, 17218], [17218, 17219], [17219, 17220], [17220, 17221], [17221, 17222], [17222, 17223], [17223, 17224], [17224, 17225], [17225, 17226], [17226, 17227], [17227, 17228], [17228, 17229], [17229, 17230], [17230, 17231], [17231, 17232], [17232, 17233], [17233, 17234], [17234, 17235], [17235, 17236], [17236, 17237], [17237, 17238], [17238, 17253], [17253, 17264], [17264, 17270], [17270, 17273], [17273, 17274], [17274, 17275], [17275, 17276], [17276, 17277], [17277, 17291], [17291, 17310], [17310, 17327], [17327, 17345], [17345, 17364], [17364, 17384], [17384, 17399], [17399, 17413], [17413, 17429], [17429, 17434], [17434, 17451], [17451, 17460], [17460, 17477], [17477, 17491], [17491, 17509], [17509, 17515], [17515, 17532], [17532, 17547], [17547, 17561], [17561, 17576], [17576, 17578], [17578, 17595], [17595, 17613], [17613, 17614], [17614, 17632], [17632, 17638], [17638, 17639], [17639, 17641], [17641, 17643], [17643, 17645], [17645, 17647], [17647, 17648], [17648, 17649], [17649, 17650], [17650, 17651], [17651, 17652], [17652, 17653], [17653, 17654], [17654, 17655], [17655, 17656], [17656, 17657], [17657, 17658], [17658, 17659], [17659, 17660], [17660, 17661], [17661, 17662], [17662, 17663], [17663, 17664], [17664, 17665], [17665, 17666], [17666, 17667], [17667, 17668], [17668, 17669], [17669, 17670], [17670, 17671], [17671, 17672], [17672, 17674], [17674, 17675], [17675, 17678], [17678, 17679], [17679, 17680], [17680, 17681], [17681, 17682], [17682, 17683], [17683, 17684], [17684, 17685], [17685, 17686], [17686, 17688], [17688, 17690], [17690, 17692], [17692, 17694], [17694, 17695], [17695, 17696], [17696, 17697], [17697, 17698], [17698, 17699], [17699, 17700], [17700, 17701], [17701, 17702], [17702, 17703], [17703, 17704], [17704, 17705], [17705, 17706], [17706, 17707], [17707, 17708], [17708, 17709], [17709, 17710], [17710, 17711], [17711, 17712], [17712, 17713], [17713, 17714], [17714, 17715], [17715, 17716], [17716, 17717], [17717, 17718], [17718, 17719], [17719, 17721], [17721, 17722], [17722, 17725], [17725, 17726], [17726, 17727], [17727, 17728], [17728, 17729], [17729, 17730], [17730, 17731], [17731, 17732], [17732, 17733], [17733, 17735], [17735, 17737], [17737, 17739], [17739, 17740], [17740, 17741], [17741, 17742], [17742, 17743], [17743, 17744], [17744, 17745], [17745, 17746], [17746, 17747], [17747, 17748], [17748, 17749], [17749, 17750], [17750, 17751], [17751, 17752], [17752, 17753], [17753, 17754], [17754, 17755], [17755, 17756], [17756, 17757], [17757, 17758], [17758, 17759], [17759, 17760], [17760, 17761], [17761, 17762], [17762, 17763], [17763, 17764], [17764, 17765], [17765, 17767], [17767, 17768], [17768, 17771], [17771, 17772], [17772, 17773], [17773, 17774], [17774, 17775], [17775, 17776], [17776, 17777], [17777, 17778], [17778, 17779], [17779, 17781], [17781, 17783], [17783, 17785], [17785, 17786], [17786, 17787], [17787, 17788], [17788, 17789], [17789, 17790], [17790, 17791], [17791, 17792], [17792, 17793], [17793, 17794], [17794, 17795], [17795, 17796], [17796, 17797], [17797, 17798], [17798, 17799], [17799, 17800], [17800, 17801], [17801, 17802], [17802, 17803], [17803, 17804], [17804, 17805], [17805, 17806], [17806, 17807], [17807, 17808], [17808, 17809], [17809, 17810], [17810, 17811], [17811, 17813], [17813, 17814], [17814, 17817], [17817, 17818], [17818, 17819], [17819, 17820], [17820, 17821], [17821, 17822], [17822, 17823], [17823, 17824], [17824, 17825], [17825, 17827], [17827, 17829], [17829, 17831], [17831, 17832], [17832, 17833], [17833, 17834], [17834, 17835], [17835, 17836], [17836, 17837], [17837, 17838], [17838, 17839], [17839, 17840], [17840, 17841], [17841, 17842], [17842, 17843], [17843, 17844], [17844, 17845], [17845, 17846], [17846, 17847], [17847, 17848], [17848, 17849], [17849, 17850], [17850, 17851], [17851, 17852], [17852, 17853], [17853, 17854], [17854, 17855], [17855, 17856], [17856, 17857], [17857, 17859], [17859, 17860], [17860, 17863], [17863, 17864], [17864, 17865], [17865, 17866], [17866, 17867], [17867, 17868], [17868, 17869], [17869, 17870], [17870, 17871], [17871, 17873], [17873, 17875], [17875, 17877], [17877, 17879], [17879, 17880], [17880, 17881], [17881, 17882], [17882, 17883], [17883, 17884], [17884, 17885], [17885, 17886], [17886, 17887], [17887, 17888], [17888, 17889], [17889, 17890], [17890, 17891], [17891, 17892], [17892, 17893], [17893, 17894], [17894, 17895], [17895, 17896], [17896, 17897], [17897, 17898], [17898, 17899], [17899, 17900], [17900, 17901], [17901, 17902], [17902, 17903], [17903, 17904], [17904, 17906], [17906, 17907], [17907, 17910], [17910, 17911], [17911, 17912], [17912, 17913], [17913, 17914], [17914, 17915], [17915, 17916], [17916, 17917], [17917, 17918], [17918, 17920], [17920, 17922], [17922, 17924], [17924, 17925], [17925, 17926], [17926, 17927], [17927, 17928], [17928, 17929], [17929, 17930], [17930, 17931], [17931, 17932], [17932, 17933], [17933, 17934], [17934, 17935], [17935, 17936], [17936, 17937], [17937, 17938], [17938, 17939], [17939, 17940], [17940, 17941], [17941, 17942], [17942, 17943], [17943, 17944], [17944, 17945], [17945, 17946], [17946, 17947], [17947, 17948], [17948, 17949], [17949, 17950], [17950, 17952], [17952, 17954], [17954, 17956], [17956, 17957], [17957, 17960], [17960, 17961], [17961, 17962], [17962, 17963], [17963, 17964], [17964, 17965], [17965, 17966], [17966, 17967], [17967, 17968], [17968, 17970], [17970, 17972], [17972, 17974], [17974, 17975], [17975, 17976], [17976, 17977], [17977, 17978], [17978, 17979], [17979, 17980], [17980, 17981], [17981, 17982], [17982, 17983], [17983, 17984], [17984, 17985], [17985, 17986], [17986, 17987], [17987, 17988], [17988, 17989], [17989, 17990], [17990, 17991], [17991, 17992], [17992, 17993], [17993, 17994], [17994, 17995], [17995, 17996], [17996, 17997], [17997, 17998], [17998, 17999], [17999, 18001], [18001, 18002], [18002, 18005], [18005, 18006], [18006, 18007], [18007, 18008], [18008, 18009], [18009, 18010], [18010, 18011], [18011, 18012], [18012, 18013], [18013, 18015], [18015, 18017], [18017, 18018], [18018, 18019], [18019, 18020], [18020, 18021], [18021, 18022], [18022, 18023], [18023, 18024], [18024, 18025], [18025, 18026], [18026, 18027], [18027, 18028], [18028, 18029], [18029, 18030], [18030, 18031], [18031, 18032], [18032, 18033], [18033, 18034], [18034, 18035], [18035, 18036], [18036, 18037], [18037, 18038], [18038, 18039], [18039, 18040], [18040, 18041], [18041, 18042], [18042, 18043], [18043, 18044], [18044, 18046], [18046, 18048], [18048, 18050], [18050, 18053], [18053, 18054], [18054, 18055], [18055, 18056], [18056, 18057], [18057, 18058], [18058, 18059], [18059, 18060], [18060, 18061], [18061, 18063], [18063, 18065], [18065, 18067], [18067, 18068], [18068, 18069], [18069, 18070], [18070, 18071], [18071, 18072], [18072, 18073], [18073, 18074], [18074, 18075], [18075, 18076], [18076, 18077], [18077, 18078], [18078, 18079], [18079, 18080], [18080, 18081], [18081, 18082], [18082, 18083], [18083, 18084], [18084, 18085], [18085, 18086], [18086, 18087], [18087, 18088], [18088, 18089], [18089, 18090], [18090, 18091], [18091, 18092], [18092, 18093], [18093, 18095], [18095, 18096], [18096, 18099], [18099, 18100], [18100, 18101], [18101, 18102], [18102, 18103], [18103, 18104], [18104, 18105], [18105, 18106], [18106, 18107], [18107, 18109], [18109, 18111], [18111, 18112], [18112, 18113], [18113, 18114], [18114, 18115], [18115, 18116], [18116, 18117], [18117, 18118], [18118, 18119], [18119, 18120], [18120, 18121], [18121, 18122], [18122, 18123], [18123, 18124], [18124, 18125], [18125, 18126], [18126, 18127], [18127, 18128], [18128, 18129], [18129, 18130], [18130, 18131], [18131, 18132], [18132, 18133], [18133, 18134], [18134, 18135], [18135, 18136], [18136, 18137], [18137, 18138], [18138, 18140], [18140, 18142], [18142, 18144], [18144, 18145], [18145, 18148], [18148, 18149], [18149, 18150], [18150, 18151], [18151, 18152], [18152, 18153], [18153, 18154], [18154, 18155], [18155, 18156], [18156, 18158], [18158, 18160], [18160, 18161], [18161, 18162], [18162, 18163], [18163, 18164], [18164, 18165], [18165, 18166], [18166, 18167], [18167, 18168], [18168, 18169], [18169, 18170], [18170, 18171], [18171, 18172], [18172, 18173], [18173, 18174], [18174, 18175], [18175, 18176], [18176, 18177], [18177, 18178], [18178, 18179], [18179, 18180], [18180, 18181], [18181, 18182], [18182, 18183], [18183, 18184], [18184, 18185], [18185, 18186], [18186, 18187], [18187, 18189], [18189, 18190], [18190, 18193], [18193, 18194], [18194, 18195], [18195, 18196], [18196, 18197], [18197, 18198], [18198, 18199], [18199, 18200], [18200, 18201], [18201, 18218], [18218, 18224], [18224, 18240], [18240, 18257], [18257, 18274], [18274, 18288], [18288, 18304], [18304, 18305], [18305, 18307], [18307, 18309], [18309, 18311], [18311, 18313], [18313, 18314], [18314, 18315], [18315, 18316], [18316, 18317], [18317, 18318], [18318, 18319], [18319, 18320], [18320, 18321], [18321, 18322], [18322, 18323], [18323, 18326], [18326, 18327], [18327, 18328], [18328, 18329], [18329, 18330], [18330, 18331], [18331, 18332], [18332, 18333], [18333, 18334], [18334, 18336], [18336, 18338], [18338, 18340], [18340, 18342], [18342, 18343], [18343, 18344], [18344, 18345], [18345, 18346], [18346, 18347], [18347, 18348], [18348, 18349], [18349, 18350], [18350, 18351], [18351, 18352], [18352, 18353], [18353, 18354], [18354, 18357], [18357, 18358], [18358, 18359], [18359, 18360], [18360, 18361], [18361, 18362], [18362, 18363], [18363, 18364], [18364, 18365], [18365, 18367], [18367, 18369], [18369, 18371], [18371, 18372], [18372, 18373], [18373, 18374], [18374, 18375], [18375, 18376], [18376, 18377], [18377, 18378], [18378, 18379], [18379, 18380], [18380, 18381], [18381, 18382], [18382, 18385], [18385, 18386], [18386, 18387], [18387, 18388], [18388, 18389], [18389, 18390], [18390, 18391], [18391, 18392], [18392, 18393], [18393, 18395], [18395, 18397], [18397, 18399], [18399, 18400], [18400, 18401], [18401, 18402], [18402, 18403], [18403, 18404], [18404, 18405], [18405, 18406], [18406, 18407], [18407, 18408], [18408, 18409], [18409, 18410], [18410, 18411], [18411, 18414], [18414, 18415], [18415, 18416], [18416, 18417], [18417, 18418], [18418, 18419], [18419, 18420], [18420, 18421], [18421, 18422], [18422, 18424], [18424, 18426], [18426, 18428], [18428, 18429], [18429, 18430], [18430, 18431], [18431, 18432], [18432, 18433], [18433, 18434], [18434, 18435], [18435, 18436], [18436, 18437], [18437, 18438], [18438, 18439], [18439, 18440], [18440, 18441], [18441, 18442], [18442, 18445], [18445, 18446], [18446, 18447], [18447, 18448], [18448, 18449], [18449, 18450], [18450, 18451], [18451, 18452], [18452, 18453], [18453, 18455], [18455, 18457], [18457, 18459], [18459, 18461], [18461, 18462], [18462, 18463], [18463, 18464], [18464, 18465], [18465, 18466], [18466, 18467], [18467, 18468], [18468, 18469], [18469, 18470], [18470, 18471], [18471, 18472], [18472, 18475], [18475, 18476], [18476, 18477], [18477, 18478], [18478, 18479], [18479, 18480], [18480, 18481], [18481, 18482], [18482, 18483], [18483, 18485], [18485, 18487], [18487, 18489], [18489, 18490], [18490, 18491], [18491, 18492], [18492, 18493], [18493, 18494], [18494, 18495], [18495, 18496], [18496, 18497], [18497, 18498], [18498, 18499], [18499, 18500], [18500, 18501], [18501, 18502], [18502, 18503], [18503, 18506], [18506, 18507], [18507, 18508], [18508, 18509], [18509, 18510], [18510, 18511], [18511, 18512], [18512, 18513], [18513, 18514], [18514, 18516], [18516, 18518], [18518, 18520], [18520, 18521], [18521, 18522], [18522, 18523], [18523, 18524], [18524, 18525], [18525, 18526], [18526, 18527], [18527, 18528], [18528, 18529], [18529, 18530], [18530, 18531], [18531, 18534], [18534, 18535], [18535, 18536], [18536, 18537], [18537, 18538], [18538, 18539], [18539, 18540], [18540, 18541], [18541, 18542], [18542, 18544], [18544, 18546], [18546, 18547], [18547, 18548], [18548, 18549], [18549, 18550], [18550, 18551], [18551, 18552], [18552, 18553], [18553, 18554], [18554, 18555], [18555, 18556], [18556, 18557], [18557, 18558], [18558, 18561], [18561, 18562], [18562, 18563], [18563, 18564], [18564, 18565], [18565, 18566], [18566, 18567], [18567, 18568], [18568, 18569], [18569, 18571], [18571, 18573], [18573, 18575], [18575, 18576], [18576, 18577], [18577, 18578], [18578, 18579], [18579, 18580], [18580, 18581], [18581, 18582], [18582, 18583], [18583, 18584], [18584, 18585], [18585, 18586], [18586, 18587], [18587, 18588], [18588, 18591], [18591, 18592], [18592, 18593], [18593, 18594], [18594, 18595], [18595, 18596], [18596, 18597], [18597, 18598], [18598, 18599], [18599, 18601], [18601, 18603], [18603, 18604], [18604, 18605], [18605, 18606], [18606, 18607], [18607, 18608], [18608, 18609], [18609, 18610], [18610, 18611], [18611, 18612], [18612, 18613], [18613, 18614], [18614, 18615], [18615, 18616], [18616, 18619], [18619, 18620], [18620, 18621], [18621, 18622], [18622, 18623], [18623, 18624], [18624, 18625], [18625, 18626], [18626, 18627], [18627, 18629], [18629, 18631], [18631, 18632], [18632, 18633], [18633, 18634], [18634, 18635], [18635, 18636], [18636, 18637], [18637, 18638], [18638, 18639], [18639, 18640], [18640, 18641], [18641, 18642], [18642, 18643], [18643, 18644], [18644, 18647], [18647, 18648], [18648, 18649], [18649, 18650], [18650, 18651], [18651, 18652], [18652, 18653], [18653, 18654], [18654, 18655], [18655, 18671], [18671, 18680], [18680, 18698], [18698, 18706], [18706, 18709], [18709, 18725], [18725, 18743], [18743, 18744], [18744, 18754], [18754, 18758], [18758, 18759], [18759, 18761], [18761, 18768], [18768, 18771], [18771, 18772], [18772, 18776], [18776, 18782], [18782, 18784], [18784, 18790], [18790, 18791], [18791, 18795], [18795, 18799], [18799, 18801], [18801, 18807], [18807, 18808], [18808, 18813], [18813, 18817], [18817, 18818], [18818, 18819], [18819, 18820], [18820, 18825], [18825, 18826], [18826, 18836], [18836, 18838], [18838, 18839], [18839, 18847], [18847, 18856], [18856, 18858], [18858, 18861], [18861, 18862], [18862, 18866], [18866, 18867], [18867, 18872], [18872, 18876], [18876, 18877], [18877, 18880], [18880, 18881], [18881, 18887], [18887, 18895], [18895, 18896], [18896, 18904], [18904, 18905], [18905, 18906], [18906, 18907], [18907, 18913], [18913, 18921], [18921, 18941], [18941, 18955], [18955, 18976], [18976, 18997], [18997, 19013], [19013, 19020], [19020, 19037], [19037, 19055], [19055, 19071], [19071, 19081], [19081, 19082], [19082, 19083], [19083, 19084], [19084, 19085], [19085, 19086], [19086, 19087], [19087, 19088], [19088, 19089], [19089, 19092], [19092, 19093], [19093, 19094], [19094, 19095], [19095, 19096], [19096, 19097], [19097, 19098], [19098, 19099], [19099, 19100], [19100, 19105], [19105, 19106], [19106, 19107], [19107, 19108], [19108, 19109], [19109, 19110], [19110, 19111], [19111, 19114], [19114, 19115], [19115, 19116], [19116, 19117], [19117, 19118], [19118, 19119], [19119, 19120], [19120, 19121], [19121, 19122], [19122, 19127], [19127, 19128], [19128, 19129], [19129, 19130], [19130, 19131], [19131, 19132], [19132, 19133], [19133, 19136], [19136, 19137], [19137, 19138], [19138, 19139], [19139, 19140], [19140, 19141], [19141, 19142], [19142, 19143], [19143, 19144], [19144, 19149], [19149, 19150], [19150, 19151], [19151, 19152], [19152, 19153], [19153, 19154], [19154, 19155], [19155, 19156], [19156, 19157], [19157, 19160], [19160, 19161], [19161, 19162], [19162, 19163], [19163, 19164], [19164, 19165], [19165, 19166], [19166, 19167], [19167, 19168], [19168, 19173], [19173, 19174], [19174, 19175], [19175, 19176], [19176, 19177], [19177, 19178], [19178, 19179], [19179, 19182], [19182, 19183], [19183, 19184], [19184, 19185], [19185, 19186], [19186, 19187], [19187, 19188], [19188, 19189], [19189, 19190], [19190, 19195], [19195, 19196], [19196, 19197], [19197, 19198], [19198, 19199], [19199, 19200], [19200, 19201], [19201, 19204], [19204, 19205], [19205, 19206], [19206, 19207], [19207, 19208], [19208, 19209], [19209, 19210], [19210, 19211], [19211, 19212], [19212, 19217], [19217, 19218], [19218, 19219], [19219, 19220], [19220, 19221], [19221, 19222], [19222, 19223], [19223, 19224], [19224, 19225], [19225, 19228], [19228, 19229], [19229, 19230], [19230, 19231], [19231, 19232], [19232, 19233], [19233, 19234], [19234, 19235], [19235, 19236], [19236, 19241], [19241, 19242], [19242, 19243], [19243, 19244], [19244, 19245], [19245, 19246], [19246, 19247], [19247, 19248], [19248, 19251], [19251, 19252], [19252, 19253], [19253, 19254], [19254, 19255], [19255, 19256], [19256, 19257], [19257, 19258], [19258, 19259], [19259, 19264], [19264, 19275], [19275, 19279], [19279, 19295], [19295, 19314], [19314, 19321], [19321, 19322], [19322, 19342], [19342, 19351], [19351, 19352], [19352, 19353], [19353, 19354], [19354, 19355], [19355, 19358], [19358, 19359], [19359, 19378], [19378, 19395], [19395, 19412], [19412, 19430], [19430, 19446], [19446, 19464], [19464, 19481], [19481, 19498], [19498, 19519], [19519, 19521], [19521, 19538], [19538, 19558], [19558, 19578], [19578, 19592], [19592, 19596], [19596, 19610], [19610, 19625], [19625, 19645], [19645, 19646], [19646, 19647], [19647, 19648], [19648, 19649], [19649, 19650], [19650, 19651], [19651, 19655], [19655, 19656], [19656, 19657], [19657, 19658], [19658, 19659], [19659, 19660], [19660, 19662], [19662, 19663], [19663, 19664], [19664, 19668], [19668, 19669], [19669, 19670], [19670, 19671], [19671, 19672], [19672, 19673], [19673, 19677], [19677, 19678], [19678, 19679], [19679, 19681], [19681, 19682], [19682, 19683], [19683, 19687], [19687, 19706], [19706, 19724], [19724, 19745], [19745, 19763], [19763, 19776], [19776, 19789], [19789, 19803], [19803, 19818], [19818, 19836], [19836, 19855], [19855, 19875], [19875, 19890], [19890, 19896], [19896, 19897], [19897, 19909], [19909, 19928], [19928, 19946], [19946, 19952], [19952, 19969], [19969, 19986], [19986, 20006], [20006, 20023], [20023, 20037], [20037, 20049], [20049, 20054], [20054, 20069], [20069, 20082], [20082, 20083], [20083, 20084], [20084, 20085], [20085, 20090], [20090, 20091], [20091, 20093], [20093, 20110], [20110, 20121], [20121, 20122], [20122, 20123], [20123, 20124], [20124, 20129], [20129, 20130], [20130, 20131], [20131, 20132], [20132, 20152], [20152, 20167], [20167, 20184], [20184, 20187], [20187, 20188], [20188, 20194], [20194, 20196], [20196, 20197], [20197, 20198], [20198, 20200], [20200, 20202], [20202, 20203], [20203, 20204], [20204, 20205], [20205, 20206], [20206, 20207], [20207, 20208], [20208, 20209], [20209, 20210], [20210, 20211], [20211, 20212], [20212, 20213], [20213, 20214], [20214, 20215], [20215, 20216], [20216, 20217], [20217, 20218], [20218, 20219], [20219, 20220], [20220, 20221], [20221, 20222], [20222, 20223], [20223, 20224], [20224, 20225], [20225, 20226], [20226, 20227], [20227, 20228], [20228, 20230], [20230, 20232], [20232, 20235], [20235, 20236], [20236, 20237], [20237, 20238], [20238, 20239], [20239, 20240], [20240, 20241], [20241, 20242], [20242, 20243], [20243, 20245], [20245, 20247], [20247, 20248], [20248, 20249], [20249, 20250], [20250, 20251], [20251, 20252], [20252, 20253], [20253, 20254], [20254, 20255], [20255, 20256], [20256, 20257], [20257, 20258], [20258, 20259], [20259, 20260], [20260, 20261], [20261, 20262], [20262, 20263], [20263, 20264], [20264, 20265], [20265, 20266], [20266, 20267], [20267, 20268], [20268, 20269], [20269, 20270], [20270, 20271], [20271, 20272], [20272, 20273], [20273, 20274], [20274, 20276], [20276, 20278], [20278, 20281], [20281, 20282], [20282, 20283], [20283, 20284], [20284, 20285], [20285, 20286], [20286, 20287], [20287, 20288], [20288, 20289], [20289, 20291], [20291, 20293], [20293, 20294], [20294, 20295], [20295, 20296], [20296, 20297], [20297, 20298], [20298, 20299], [20299, 20300], [20300, 20301], [20301, 20302], [20302, 20303], [20303, 20304], [20304, 20305], [20305, 20306], [20306, 20307], [20307, 20308], [20308, 20309], [20309, 20310], [20310, 20311], [20311, 20312], [20312, 20313], [20313, 20314], [20314, 20315], [20315, 20316], [20316, 20317], [20317, 20318], [20318, 20319], [20319, 20320], [20320, 20322], [20322, 20324], [20324, 20327], [20327, 20328], [20328, 20329], [20329, 20330], [20330, 20331], [20331, 20332], [20332, 20333], [20333, 20334], [20334, 20335], [20335, 20337], [20337, 20338], [20338, 20339], [20339, 20340], [20340, 20341], [20341, 20342], [20342, 20343], [20343, 20344], [20344, 20345], [20345, 20346], [20346, 20347], [20347, 20348], [20348, 20349], [20349, 20350], [20350, 20351], [20351, 20352], [20352, 20353], [20353, 20354], [20354, 20355], [20355, 20356], [20356, 20357], [20357, 20358], [20358, 20359], [20359, 20360], [20360, 20361], [20361, 20362], [20362, 20363], [20363, 20364], [20364, 20366], [20366, 20368], [20368, 20371], [20371, 20372], [20372, 20373], [20373, 20374], [20374, 20375], [20375, 20376], [20376, 20377], [20377, 20378], [20378, 20379], [20379, 20381], [20381, 20382], [20382, 20383], [20383, 20384], [20384, 20385], [20385, 20386], [20386, 20387], [20387, 20388], [20388, 20389], [20389, 20390], [20390, 20391], [20391, 20392], [20392, 20393], [20393, 20394], [20394, 20395], [20395, 20396], [20396, 20397], [20397, 20398], [20398, 20399], [20399, 20400], [20400, 20401], [20401, 20402], [20402, 20403], [20403, 20404], [20404, 20405], [20405, 20406], [20406, 20407], [20407, 20408], [20408, 20410], [20410, 20412], [20412, 20415], [20415, 20416], [20416, 20417], [20417, 20418], [20418, 20419], [20419, 20420], [20420, 20421], [20421, 20422], [20422, 20423], [20423, 20425], [20425, 20427], [20427, 20428], [20428, 20429], [20429, 20430], [20430, 20431], [20431, 20432], [20432, 20433], [20433, 20434], [20434, 20435], [20435, 20436], [20436, 20437], [20437, 20438], [20438, 20439], [20439, 20440], [20440, 20441], [20441, 20442], [20442, 20443], [20443, 20444], [20444, 20445], [20445, 20446], [20446, 20447], [20447, 20448], [20448, 20449], [20449, 20450], [20450, 20451], [20451, 20452], [20452, 20453], [20453, 20455], [20455, 20457], [20457, 20459], [20459, 20462], [20462, 20463], [20463, 20464], [20464, 20465], [20465, 20466], [20466, 20467], [20467, 20468], [20468, 20469], [20469, 20470], [20470, 20472], [20472, 20473], [20473, 20474], [20474, 20475], [20475, 20476], [20476, 20477], [20477, 20478], [20478, 20479], [20479, 20480], [20480, 20481], [20481, 20482], [20482, 20483], [20483, 20484], [20484, 20485], [20485, 20486], [20486, 20487], [20487, 20488], [20488, 20489], [20489, 20490], [20490, 20491], [20491, 20492], [20492, 20493], [20493, 20494], [20494, 20495], [20495, 20496], [20496, 20497], [20497, 20498], [20498, 20499], [20499, 20501], [20501, 20503], [20503, 20505], [20505, 20508], [20508, 20509], [20509, 20510], [20510, 20511], [20511, 20512], [20512, 20513], [20513, 20514], [20514, 20515], [20515, 20516], [20516, 20518], [20518, 20519], [20519, 20520], [20520, 20521], [20521, 20522], [20522, 20523], [20523, 20524], [20524, 20525], [20525, 20526], [20526, 20527], [20527, 20528], [20528, 20529], [20529, 20530], [20530, 20531], [20531, 20532], [20532, 20533], [20533, 20534], [20534, 20535], [20535, 20536], [20536, 20537], [20537, 20538], [20538, 20539], [20539, 20540], [20540, 20541], [20541, 20542], [20542, 20543], [20543, 20544], [20544, 20545], [20545, 20547], [20547, 20549], [20549, 20552], [20552, 20553], [20553, 20554], [20554, 20555], [20555, 20556], [20556, 20557], [20557, 20558], [20558, 20559], [20559, 20560], [20560, 20562], [20562, 20563], [20563, 20564], [20564, 20565], [20565, 20566], [20566, 20567], [20567, 20568], [20568, 20569], [20569, 20570], [20570, 20571], [20571, 20572], [20572, 20573], [20573, 20574], [20574, 20575], [20575, 20576], [20576, 20577], [20577, 20578], [20578, 20579], [20579, 20580], [20580, 20581], [20581, 20582], [20582, 20583], [20583, 20584], [20584, 20585], [20585, 20586], [20586, 20587], [20587, 20588], [20588, 20589], [20589, 20590], [20590, 20592], [20592, 20594], [20594, 20597], [20597, 20598], [20598, 20599], [20599, 20600], [20600, 20601], [20601, 20602], [20602, 20603], [20603, 20604], [20604, 20605], [20605, 20607], [20607, 20608], [20608, 20609], [20609, 20610], [20610, 20611], [20611, 20612], [20612, 20613], [20613, 20614], [20614, 20615], [20615, 20616], [20616, 20617], [20617, 20618], [20618, 20619], [20619, 20620], [20620, 20621], [20621, 20622], [20622, 20623], [20623, 20624], [20624, 20625], [20625, 20626], [20626, 20627], [20627, 20628], [20628, 20629], [20629, 20630], [20630, 20631], [20631, 20632], [20632, 20633], [20633, 20634], [20634, 20636], [20636, 20638], [20638, 20640], [20640, 20643], [20643, 20644], [20644, 20645], [20645, 20646], [20646, 20647], [20647, 20648], [20648, 20649], [20649, 20650], [20650, 20651], [20651, 20653], [20653, 20654], [20654, 20655], [20655, 20656], [20656, 20657], [20657, 20658], [20658, 20659], [20659, 20660], [20660, 20661], [20661, 20662], [20662, 20663], [20663, 20664], [20664, 20665], [20665, 20666], [20666, 20667], [20667, 20668], [20668, 20669], [20669, 20670], [20670, 20671], [20671, 20672], [20672, 20673], [20673, 20674], [20674, 20675], [20675, 20676], [20676, 20677], [20677, 20678], [20678, 20679], [20679, 20680], [20680, 20682], [20682, 20684], [20684, 20686], [20686, 20689], [20689, 20690], [20690, 20691], [20691, 20692], [20692, 20693], [20693, 20694], [20694, 20695], [20695, 20696], [20696, 20697], [20697, 20699], [20699, 20700], [20700, 20701], [20701, 20702], [20702, 20703], [20703, 20704], [20704, 20705], [20705, 20706], [20706, 20707], [20707, 20708], [20708, 20709], [20709, 20710], [20710, 20711], [20711, 20712], [20712, 20713], [20713, 20714], [20714, 20715], [20715, 20716], [20716, 20717], [20717, 20718], [20718, 20719], [20719, 20720], [20720, 20721], [20721, 20722], [20722, 20723], [20723, 20724], [20724, 20725], [20725, 20726], [20726, 20727], [20727, 20729], [20729, 20731], [20731, 20733], [20733, 20736], [20736, 20737], [20737, 20738], [20738, 20739], [20739, 20740], [20740, 20741], [20741, 20742], [20742, 20743], [20743, 20744], [20744, 20759], [20759, 20767], [20767, 20779], [20779, 20786], [20786, 20802], [20802, 20811], [20811, 20812], [20812, 20813], [20813, 20822], [20822, 20838], [20838, 20847], [20847, 20848], [20848, 20850], [20850, 20852], [20852, 20853], [20853, 20854], [20854, 20855], [20855, 20856], [20856, 20857], [20857, 20858], [20858, 20859], [20859, 20860], [20860, 20861], [20861, 20862], [20862, 20863], [20863, 20864], [20864, 20867], [20867, 20868], [20868, 20869], [20869, 20870], [20870, 20871], [20871, 20872], [20872, 20873], [20873, 20874], [20874, 20875], [20875, 20877], [20877, 20879], [20879, 20880], [20880, 20881], [20881, 20882], [20882, 20883], [20883, 20884], [20884, 20885], [20885, 20886], [20886, 20887], [20887, 20888], [20888, 20891], [20891, 20892], [20892, 20893], [20893, 20894], [20894, 20895], [20895, 20896], [20896, 20897], [20897, 20898], [20898, 20899], [20899, 20901], [20901, 20903], [20903, 20904], [20904, 20905], [20905, 20906], [20906, 20907], [20907, 20908], [20908, 20909], [20909, 20910], [20910, 20911], [20911, 20912], [20912, 20913], [20913, 20914], [20914, 20915], [20915, 20918], [20918, 20919], [20919, 20920], [20920, 20921], [20921, 20922], [20922, 20923], [20923, 20924], [20924, 20925], [20925, 20926], [20926, 20928], [20928, 20929], [20929, 20930], [20930, 20931], [20931, 20932], [20932, 20933], [20933, 20934], [20934, 20935], [20935, 20936], [20936, 20937], [20937, 20938], [20938, 20939], [20939, 20940], [20940, 20943], [20943, 20944], [20944, 20945], [20945, 20946], [20946, 20947], [20947, 20948], [20948, 20949], [20949, 20950], [20950, 20951], [20951, 20953], [20953, 20954], [20954, 20955], [20955, 20956], [20956, 20957], [20957, 20958], [20958, 20959], [20959, 20960], [20960, 20961], [20961, 20962], [20962, 20963], [20963, 20964], [20964, 20965], [20965, 20968], [20968, 20969], [20969, 20970], [20970, 20971], [20971, 20972], [20972, 20973], [20973, 20974], [20974, 20975], [20975, 20976], [20976, 20978], [20978, 20980], [20980, 20981], [20981, 20982], [20982, 20983], [20983, 20984], [20984, 20985], [20985, 20986], [20986, 20987], [20987, 20988], [20988, 20991], [20991, 20992], [20992, 20993], [20993, 20994], [20994, 20995], [20995, 20996], [20996, 20997], [20997, 20998], [20998, 20999], [20999, 21001], [21001, 21002], [21002, 21003], [21003, 21004], [21004, 21005], [21005, 21006], [21006, 21007], [21007, 21008], [21008, 21009], [21009, 21010], [21010, 21011], [21011, 21012], [21012, 21013], [21013, 21014], [21014, 21017], [21017, 21018], [21018, 21019], [21019, 21020], [21020, 21021], [21021, 21022], [21022, 21023], [21023, 21024], [21024, 21025], [21025, 21027], [21027, 21028], [21028, 21029], [21029, 21030], [21030, 21031], [21031, 21032], [21032, 21033], [21033, 21034], [21034, 21035], [21035, 21036], [21036, 21037], [21037, 21038], [21038, 21039], [21039, 21040], [21040, 21043], [21043, 21044], [21044, 21045], [21045, 21046], [21046, 21047], [21047, 21048], [21048, 21049], [21049, 21050], [21050, 21051], [21051, 21053], [21053, 21054], [21054, 21055], [21055, 21056], [21056, 21057], [21057, 21058], [21058, 21059], [21059, 21060], [21060, 21061], [21061, 21062], [21062, 21063], [21063, 21064], [21064, 21065], [21065, 21068], [21068, 21069], [21069, 21070], [21070, 21071], [21071, 21072], [21072, 21073], [21073, 21074], [21074, 21075], [21075, 21076], [21076, 21078], [21078, 21079], [21079, 21080], [21080, 21081], [21081, 21082], [21082, 21083], [21083, 21084], [21084, 21085], [21085, 21086], [21086, 21087], [21087, 21088], [21088, 21089], [21089, 21092], [21092, 21093], [21093, 21094], [21094, 21095], [21095, 21096], [21096, 21097], [21097, 21098], [21098, 21099], [21099, 21100], [21100, 21102], [21102, 21103], [21103, 21104], [21104, 21105], [21105, 21106], [21106, 21107], [21107, 21108], [21108, 21109], [21109, 21110], [21110, 21111], [21111, 21112], [21112, 21113], [21113, 21116], [21116, 21117], [21117, 21118], [21118, 21119], [21119, 21120], [21120, 21121], [21121, 21122], [21122, 21123], [21123, 21124], [21124, 21126], [21126, 21127], [21127, 21128], [21128, 21129], [21129, 21130], [21130, 21131], [21131, 21132], [21132, 21133], [21133, 21134], [21134, 21135], [21135, 21136], [21136, 21137], [21137, 21138], [21138, 21139], [21139, 21140], [21140, 21141], [21141, 21142], [21142, 21145], [21145, 21146], [21146, 21147], [21147, 21148], [21148, 21149], [21149, 21150], [21150, 21151], [21151, 21152], [21152, 21153], [21153, 21169], [21169, 21178], [21178, 21183], [21183, 21198], [21198, 21220], [21220, 21228], [21228, 21239], [21239, 21240], [21240, 21241], [21241, 21242], [21242, 21243], [21243, 21246], [21246, 21250], [21250, 21251], [21251, 21252], [21252, 21262], [21262, 21263], [21263, 21266], [21266, 21267], [21267, 21269], [21269, 21270], [21270, 21273], [21273, 21274], [21274, 21276], [21276, 21277], [21277, 21280], [21280, 21281], [21281, 21283], [21283, 21296], [21296, 21305], [21305, 21308], [21308, 21309], [21309, 21310], [21310, 21320], [21320, 21337], [21337, 21345], [21345, 21365], [21365, 21384], [21384, 21400], [21400, 21417], [21417, 21434], [21434, 21445], [21445, 21452], [21452, 21463], [21463, 21480], [21480, 21487], [21487, 21506], [21506, 21521], [21521, 21538], [21538, 21556], [21556, 21574], [21574, 21591], [21591, 21607], [21607, 21608], [21608, 21609], [21609, 21610], [21610, 21611], [21611, 21612], [21612, 21613], [21613, 21614], [21614, 21615], [21615, 21617], [21617, 21618], [21618, 21619], [21619, 21620], [21620, 21621], [21621, 21622], [21622, 21623], [21623, 21624], [21624, 21625], [21625, 21626], [21626, 21627], [21627, 21628], [21628, 21629], [21629, 21630], [21630, 21631], [21631, 21632], [21632, 21633], [21633, 21634], [21634, 21635], [21635, 21636], [21636, 21637], [21637, 21638], [21638, 21639], [21639, 21640], [21640, 21641], [21641, 21642], [21642, 21645], [21645, 21646], [21646, 21647], [21647, 21648], [21648, 21649], [21649, 21650], [21650, 21651], [21651, 21652], [21652, 21653], [21653, 21654], [21654, 21655], [21655, 21656], [21656, 21658], [21658, 21659], [21659, 21660], [21660, 21661], [21661, 21662], [21662, 21663], [21663, 21664], [21664, 21665], [21665, 21666], [21666, 21667], [21667, 21668], [21668, 21669], [21669, 21670], [21670, 21671], [21671, 21672], [21672, 21673], [21673, 21674], [21674, 21675], [21675, 21676], [21676, 21677], [21677, 21678], [21678, 21679], [21679, 21680], [21680, 21681], [21681, 21682], [21682, 21683], [21683, 21686], [21686, 21687], [21687, 21688], [21688, 21689], [21689, 21690], [21690, 21691], [21691, 21692], [21692, 21693], [21693, 21694], [21694, 21695], [21695, 21696], [21696, 21697], [21697, 21699], [21699, 21700], [21700, 21701], [21701, 21702], [21702, 21703], [21703, 21704], [21704, 21705], [21705, 21706], [21706, 21707], [21707, 21708], [21708, 21709], [21709, 21710], [21710, 21711], [21711, 21712], [21712, 21713], [21713, 21714], [21714, 21715], [21715, 21716], [21716, 21717], [21717, 21718], [21718, 21719], [21719, 21720], [21720, 21721], [21721, 21722], [21722, 21723], [21723, 21724], [21724, 21727], [21727, 21728], [21728, 21729], [21729, 21730], [21730, 21747], [21747, 21754], [21754, 21769], [21769, 21786], [21786, 21802], [21802, 21803], [21803, 21804], [21804, 21805], [21805, 21806], [21806, 21807], [21807, 21808], [21808, 21809], [21809, 21810], [21810, 21811], [21811, 21813], [21813, 21814], [21814, 21815], [21815, 21816], [21816, 21817], [21817, 21820], [21820, 21821], [21821, 21822], [21822, 21823], [21823, 21824], [21824, 21825], [21825, 21826], [21826, 21827], [21827, 21828], [21828, 21829], [21829, 21830], [21830, 21831], [21831, 21832], [21832, 21834], [21834, 21835], [21835, 21836], [21836, 21837], [21837, 21838], [21838, 21841], [21841, 21842], [21842, 21843], [21843, 21844], [21844, 21845], [21845, 21846], [21846, 21847], [21847, 21848], [21848, 21849], [21849, 21850], [21850, 21851], [21851, 21852], [21852, 21854], [21854, 21855], [21855, 21856], [21856, 21857], [21857, 21858], [21858, 21861], [21861, 21862], [21862, 21863], [21863, 21864], [21864, 21880], [21880, 21890], [21890, 21907], [21907, 21926], [21926, 21944], [21944, 21959], [21959, 21965], [21965, 21981], [21981, 21983], [21983, 21995], [21995, 22013], [22013, 22030], [22030, 22045], [22045, 22064], [22064, 22068], [22068, 22085], [22085, 22102], [22102, 22121], [22121, 22122], [22122, 22123], [22123, 22124], [22124, 22134], [22134, 22141], [22141, 22160], [22160, 22175], [22175, 22176], [22176, 22194], [22194, 22205], [22205, 22210], [22210, 22211], [22211, 22224], [22224, 22230], [22230, 22245], [22245, 22252], [22252, 22253], [22253, 22265], [22265, 22278], [22278, 22279], [22279, 22295], [22295, 22311], [22311, 22330], [22330, 22344], [22344, 22345], [22345, 22361], [22361, 22371], [22371, 22390], [22390, 22400], [22400, 22403], [22403, 22422], [22422, 22434], [22434, 22452], [22452, 22458], [22458, 22474], [22474, 22488], [22488, 22502], [22502, 22510], [22510, 22524], [22524, 22532], [22532, 22544], [22544, 22559], [22559, 22570], [22570, 22571], [22571, 22589], [22589, 22596], [22596, 22607], [22607, 22609], [22609, 22627], [22627, 22633], [22633, 22650], [22650, 22657], [22657, 22672], [22672, 22681], [22681, 22697], [22697, 22706], [22706, 22721], [22721, 22731], [22731, 22750], [22750, 22757], [22757, 22771], [22771, 22783], [22783, 22801], [22801, 22806], [22806, 22822], [22822, 22823], [22823, 22824], [22824, 22839], [22839, 22843], [22843, 22858], [22858, 22865], [22865, 22884], [22884, 22907], [22907, 22915], [22915, 22933], [22933, 22935], [22935, 22952], [22952, 22960], [22960, 22976], [22976, 22981], [22981, 22996], [22996, 23003], [23003, 23021], [23021, 23024], [23024, 23039], [23039, 23054], [23054, 23064], [23064, 23069], [23069, 23084], [23084, 23092], [23092, 23110], [23110, 23117], [23117, 23134], [23134, 23145], [23145, 23146], [23146, 23160], [23160, 23166], [23166, 23181], [23181, 23188], [23188, 23203], [23203, 23217], [23217, 23218], [23218, 23235], [23235, 23240], [23240, 23256], [23256, 23264], [23264, 23282], [23282, 23283], [23283, 23298], [23298, 23302], [23302, 23317], [23317, 23323], [23323, 23340], [23340, 23343], [23343, 23362], [23362, 23363], [23363, 23378], [23378, 23383], [23383, 23401], [23401, 23406], [23406, 23424], [23424, 23434], [23434, 23450], [23450, 23459], [23459, 23460], [23460, 23478], [23478, 23483], [23483, 23502], [23502, 23505], [23505, 23521], [23521, 23539], [23539, 23541], [23541, 23562], [23562, 23570], [23570, 23587], [23587, 23591], [23591, 23604], [23604, 23612], [23612, 23635], [23635, 23637], [23637, 23658], [23658, 23661], [23661, 23679], [23679, 23686], [23686, 23699], [23699, 23705], [23705, 23717], [23717, 23733], [23733, 23734], [23734, 23747], [23747, 23749], [23749, 23764], [23764, 23767], [23767, 23784], [23784, 23785], [23785, 23803], [23803, 23805], [23805, 23820], [23820, 23837], [23837, 23839], [23839, 23855], [23855, 23867], [23867, 23885], [23885, 23888], [23888, 23889], [23889, 23908], [23908, 23921], [23921, 23935], [23935, 23938], [23938, 23954], [23954, 23955], [23955, 23972], [23972, 23983], [23983, 23997], [23997, 23999], [23999, 24015], [24015, 24032], [24032, 24038], [24038, 24052], [24052, 24056], [24056, 24072], [24072, 24091], [24091, 24094], [24094, 24112], [24112, 24121], [24121, 24136], [24136, 24141], [24141, 24159], [24159, 24173], [24173, 24191], [24191, 24200], [24200, 24219], [24219, 24222], [24222, 24241], [24241, 24252], [24252, 24255], [24255, 24278], [24278, 24292], [24292, 24297], [24297, 24316], [24316, 24322], [24322, 24343], [24343, 24348], [24348, 24367], [24367, 24377], [24377, 24386], [24386, 24402], [24402, 24420], [24420, 24424], [24424, 24440], [24440, 24446], [24446, 24447], [24447, 24450], [24450, 24469], [24469, 24470], [24470, 24494], [24494, 24509], [24509, 24514], [24514, 24515], [24515, 24536], [24536, 24547], [24547, 24548], [24548, 24549], [24549, 24550], [24550, 24552], [24552, 24554], [24554, 24555], [24555, 24556], [24556, 24557], [24557, 24567], [24567, 24587], [24587, 24596], [24596, 24599], [24599, 24600], [24600, 24602], [24602, 24603], [24603, 24625], [24625, 24649], [24649, 24665], [24665, 24670], [24670, 24692], [24692, 24693], [24693, 24694], [24694, 24696], [24696, 24697], [24697, 24698], [24698, 24699], [24699, 24708], [24708, 24716], [24716, 24727], [24727, 24752], [24752, 24755], [24755, 24756], [24756, 24757], [24757, 24760], [24760, 24764], [24764, 24765], [24765, 24766], [24766, 24767], [24767, 24768], [24768, 24769], [24769, 24785], [24785, 24803], [24803, 24815], [24815, 24833], [24833, 24840], [24840, 24841], [24841, 24842], [24842, 24853], [24853, 24869], [24869, 24887], [24887, 24888], [24888, 24889], [24889, 24908], [24908, 24909], [24909, 24910], [24910, 24913], [24913, 24914], [24914, 24915], [24915, 24916], [24916, 24918], [24918, 24919], [24919, 24920], [24920, 24921], [24921, 24922], [24922, 24923], [24923, 24938], [24938, 24941], [24941, 24942], [24942, 24943], [24943, 24944], [24944, 24945], [24945, 24946], [24946, 24947], [24947, 24948], [24948, 24949], [24949, 24957], [24957, 24971], [24971, 24990], [24990, 25012], [25012, 25036], [25036, 25037], [25037, 25038], [25038, 25058], [25058, 25061], [25061, 25086], [25086, 25106], [25106, 25108], [25108, 25128], [25128, 25146], [25146, 25148], [25148, 25164], [25164, 25178], [25178, 25194], [25194, 25195], [25195, 25212], [25212, 25213], [25213, 25214], [25214, 25216], [25216, 25233], [25233, 25255], [25255, 25271], [25271, 25289], [25289, 25291], [25291, 25294], [25294, 25295], [25295, 25296], [25296, 25297], [25297, 25298], [25298, 25309], [25309, 25328], [25328, 25351], [25351, 25354], [25354, 25356], [25356, 25357], [25357, 25358], [25358, 25359], [25359, 25360], [25360, 25376], [25376, 25379], [25379, 25380], [25380, 25394], [25394, 25404], [25404, 25426], [25426, 25438], [25438, 25440], [25440, 25443], [25443, 25445], [25445, 25446], [25446, 25464], [25464, 25480], [25480, 25498], [25498, 25512], [25512, 25518], [25518, 25519], [25519, 25526], [25526, 25531], [25531, 25532], [25532, 25539], [25539, 25540], [25540, 25541], [25541, 25543], [25543, 25546], [25546, 25547], [25547, 25548], [25548, 25560], [25560, 25561], [25561, 25562], [25562, 25564], [25564, 25567], [25567, 25568], [25568, 25569], [25569, 25570], [25570, 25571], [25571, 25589], [25589, 25615], [25615, 25618], [25618, 25619], [25619, 25620], [25620, 25621], [25621, 25622], [25622, 25625], [25625, 25627], [25627, 25628], [25628, 25629], [25629, 25630], [25630, 25631], [25631, 25632], [25632, 25633], [25633, 25634], [25634, 25636], [25636, 25637], [25637, 25638], [25638, 25640], [25640, 25641], [25641, 25642], [25642, 25643], [25643, 25644], [25644, 25646], [25646, 25647], [25647, 25648], [25648, 25649], [25649, 25651], [25651, 25652], [25652, 25653], [25653, 25654], [25654, 25655], [25655, 25658], [25658, 25659], [25659, 25660], [25660, 25661], [25661, 25662], [25662, 25663], [25663, 25664], [25664, 25665], [25665, 25666], [25666, 25668], [25668, 25669], [25669, 25670], [25670, 25671], [25671, 25672], [25672, 25673], [25673, 25674], [25674, 25677], [25677, 25678], [25678, 25679], [25679, 25680], [25680, 25681], [25681, 25683], [25683, 25684], [25684, 25689], [25689, 25690], [25690, 25691], [25691, 25692], [25692, 25702], [25702, 25718], [25718, 25737], [25737, 25742], [25742, 25743], [25743, 25744], [25744, 25745], [25745, 25746], [25746, 25747], [25747, 25748], [25748, 25749], [25749, 25750], [25750, 25752], [25752, 25755], [25755, 25756], [25756, 25757], [25757, 25758], [25758, 25759], [25759, 25760], [25760, 25761], [25761, 25762], [25762, 25763], [25763, 25764], [25764, 25765], [25765, 25787], [25787, 25805], [25805, 25824], [25824, 25832], [25832, 25850], [25850, 25866], [25866, 25872], [25872, 25879], [25879, 25894], [25894, 25895], [25895, 25914], [25914, 25918], [25918, 25919], [25919, 25920], [25920, 25921], [25921, 25922], [25922, 25923], [25923, 25925], [25925, 25926], [25926, 25927], [25927, 25928], [25928, 25929], [25929, 25930], [25930, 25931], [25931, 25932], [25932, 25933], [25933, 25934], [25934, 25936], [25936, 25937], [25937, 25938], [25938, 25939], [25939, 25940], [25940, 25941], [25941, 25943], [25943, 25944], [25944, 25945], [25945, 25947], [25947, 25948], [25948, 25949], [25949, 25950], [25950, 25952], [25952, 25953], [25953, 25954], [25954, 25955], [25955, 25956], [25956, 25957], [25957, 25970], [25970, 25971], [25971, 25972], [25972, 25974], [25974, 25992], [25992, 26008], [26008, 26013], [26013, 26016], [26016, 26033], [26033, 26047], [26047, 26065], [26065, 26077], [26077, 26080], [26080, 26097], [26097, 26115], [26115, 26120], [26120, 26128], [26128, 26132], [26132, 26148], [26148, 26165], [26165, 26182], [26182, 26197], [26197, 26198], [26198, 26206], [26206, 26215], [26215, 26216], [26216, 26217], [26217, 26218], [26218, 26219], [26219, 26220], [26220, 26221], [26221, 26222], [26222, 26224], [26224, 26225], [26225, 26226], [26226, 26227], [26227, 26228], [26228, 26229], [26229, 26230], [26230, 26231], [26231, 26232], [26232, 26235], [26235, 26237], [26237, 26238], [26238, 26241], [26241, 26242], [26242, 26243], [26243, 26244], [26244, 26256], [26256, 26257], [26257, 26258], [26258, 26259], [26259, 26260], [26260, 26269], [26269, 26270], [26270, 26271], [26271, 26272], [26272, 26273], [26273, 26274], [26274, 26275], [26275, 26276], [26276, 26277], [26277, 26278], [26278, 26279], [26279, 26282], [26282, 26283], [26283, 26285], [26285, 26286], [26286, 26287], [26287, 26288], [26288, 26289], [26289, 26290], [26290, 26293], [26293, 26301], [26301, 26303], [26303, 26304], [26304, 26305], [26305, 26306], [26306, 26307], [26307, 26308], [26308, 26311], [26311, 26312], [26312, 26313], [26313, 26314], [26314, 26315], [26315, 26316], [26316, 26317], [26317, 26318], [26318, 26320], [26320, 26321], [26321, 26322], [26322, 26327], [26327, 26346], [26346, 26358], [26358, 26361], [26361, 26362], [26362, 26364], [26364, 26366], [26366, 26367], [26367, 26368], [26368, 26369], [26369, 26372], [26372, 26374], [26374, 26375], [26375, 26376], [26376, 26377], [26377, 26378], [26378, 26379], [26379, 26381], [26381, 26382], [26382, 26383], [26383, 26384], [26384, 26385], [26385, 26386], [26386, 26387], [26387, 26388], [26388, 26391], [26391, 26392], [26392, 26393], [26393, 26394], [26394, 26395], [26395, 26396], [26396, 26397], [26397, 26398], [26398, 26399], [26399, 26400], [26400, 26427], [26427, 26430], [26430, 26445], [26445, 26468], [26468, 26470], [26470, 26471], [26471, 26483], [26483, 26498], [26498, 26504], [26504, 26505], [26505, 26506], [26506, 26511], [26511, 26535], [26535, 26542], [26542, 26566], [26566, 26567], [26567, 26591], [26591, 26596], [26596, 26611], [26611, 26612], [26612, 26613], [26613, 26629], [26629, 26640], [26640, 26641], [26641, 26642], [26642, 26656], [26656, 26657], [26657, 26662], [26662, 26663], [26663, 26667], [26667, 26668], [26668, 26669], [26669, 26674], [26674, 26675], [26675, 26676], [26676, 26677], [26677, 26697], [26697, 26712], [26712, 26726], [26726, 26732], [26732, 26738], [26738, 26739], [26739, 26740], [26740, 26754], [26754, 26759], [26759, 26760], [26760, 26775], [26775, 26794], [26794, 26807], [26807, 26816], [26816, 26831], [26831, 26841], [26841, 26862], [26862, 26867], [26867, 26874], [26874, 26875], [26875, 26882], [26882, 26886], [26886, 26887], [26887, 26899], [26899, 26917], [26917, 26938], [26938, 26947], [26947, 26948], [26948, 26949], [26949, 26950], [26950, 26968], [26968, 26984], [26984, 26985], [26985, 27008], [27008, 27011], [27011, 27012], [27012, 27032], [27032, 27041], [27041, 27056], [27056, 27080], [27080, 27101], [27101, 27117], [27117, 27120], [27120, 27121], [27121, 27122], [27122, 27123], [27123, 27124], [27124, 27125], [27125, 27126], [27126, 27127], [27127, 27128], [27128, 27129], [27129, 27130], [27130, 27131], [27131, 27132], [27132, 27133], [27133, 27134], [27134, 27135], [27135, 27136], [27136, 27150], [27150, 27153], [27153, 27154], [27154, 27156], [27156, 27158], [27158, 27159], [27159, 27160], [27160, 27162], [27162, 27164], [27164, 27165], [27165, 27180], [27180, 27186], [27186, 27190], [27190, 27191], [27191, 27192], [27192, 27193], [27193, 27194], [27194, 27196], [27196, 27197], [27197, 27198], [27198, 27199], [27199, 27200], [27200, 27201], [27201, 27202], [27202, 27203], [27203, 27204], [27204, 27205], [27205, 27206], [27206, 27207], [27207, 27210], [27210, 27211], [27211, 27212], [27212, 27213], [27213, 27214], [27214, 27231], [27231, 27232], [27232, 27233], [27233, 27234], [27234, 27235], [27235, 27236], [27236, 27237], [27237, 27238], [27238, 27239], [27239, 27240], [27240, 27259], [27259, 27260], [27260, 27261], [27261, 27262], [27262, 27263], [27263, 27264], [27264, 27265], [27265, 27266], [27266, 27267], [27267, 27286], [27286, 27306], [27306, 27307], [27307, 27311], [27311, 27312], [27312, 27313], [27313, 27330], [27330, 27347], [27347, 27364], [27364, 27373], [27373, 27374], [27374, 27384], [27384, 27385], [27385, 27386], [27386, 27393], [27393, 27394], [27394, 27395], [27395, 27406], [27406, 27408], [27408, 27409], [27409, 27411], [27411, 27412], [27412, 27413], [27413, 27414], [27414, 27416], [27416, 27434], [27434, 27450], [27450, 27451], [27451, 27457], [27457, 27465], [27465, 27479], [27479, 27483], [27483, 27484], [27484, 27485], [27485, 27486], [27486, 27487], [27487, 27488], [27488, 27489], [27489, 27504], [27504, 27514], [27514, 27519], [27519, 27520], [27520, 27536], [27536, 27552], [27552, 27567], [27567, 27586], [27586, 27602], [27602, 27620], [27620, 27635], [27635, 27651], [27651, 27664], [27664, 27683], [27683, 27702], [27702, 27721], [27721, 27737], [27737, 27754], [27754, 27767], [27767, 27775], [27775, 27787], [27787, 27788], [27788, 27789], [27789, 27811], [27811, 27829], [27829, 27853], [27853, 27878], [27878, 27897], [27897, 27910], [27910, 27918], [27918, 27922], [27922, 27925], [27925, 27926], [27926, 27927], [27927, 27928], [27928, 27929], [27929, 27930], [27930, 27933], [27933, 27934], [27934, 27951], [27951, 27969], [27969, 27985], [27985, 27988], [27988, 28008], [28008, 28021], [28021, 28029], [28029, 28030], [28030, 28031], [28031, 28032], [28032, 28033], [28033, 28034], [28034, 28035], [28035, 28036], [28036, 28037], [28037, 28038], [28038, 28039], [28039, 28040], [28040, 28041], [28041, 28042], [28042, 28043], [28043, 28044], [28044, 28045], [28045, 28046], [28046, 28047], [28047, 28048], [28048, 28049], [28049, 28050], [28050, 28051], [28051, 28052], [28052, 28053], [28053, 28054], [28054, 28055], [28055, 28056], [28056, 28057], [28057, 28058], [28058, 28059], [28059, 28060], [28060, 28061], [28061, 28062], [28062, 28063], [28063, 28064], [28064, 28065], [28065, 28067], [28067, 28068], [28068, 28085], [28085, 28101], [28101, 28102], [28102, 28103], [28103, 28104], [28104, 28105], [28105, 28107], [28107, 28121], [28121, 28127], [28127, 28134], [28134, 28136], [28136, 28149], [28149, 28156], [28156, 28160], [28160, 28161], [28161, 28176], [28176, 28196], [28196, 28212], [28212, 28228], [28228, 28242], [28242, 28257], [28257, 28278], [28278, 28298], [28298, 28319], [28319, 28340], [28340, 28360], [28360, 28366], [28366, 28368], [28368, 28377], [28377, 28395], [28395, 28412], [28412, 28428], [28428, 28444], [28444, 28448], [28448, 28449], [28449, 28456], [28456, 28467], [28467, 28470], [28470, 28475], [28475, 28476], [28476, 28477], [28477, 28479], [28479, 28480], [28480, 28484], [28484, 28485], [28485, 28486], [28486, 28487], [28487, 28488], [28488, 28489], [28489, 28491], [28491, 28493], [28493, 28499], [28499, 28507], [28507, 28509], [28509, 28511], [28511, 28512], [28512, 28517], [28517, 28518], [28518, 28519], [28519, 28520], [28520, 28521], [28521, 28523], [28523, 28528], [28528, 28542], [28542, 28547], [28547, 28548], [28548, 28550], [28550, 28554], [28554, 28555], [28555, 28564], [28564, 28566], [28566, 28567], [28567, 28568], [28568, 28569], [28569, 28571], [28571, 28572], [28572, 28575], [28575, 28576], [28576, 28578], [28578, 28580], [28580, 28596], [28596, 28615], [28615, 28623], [28623, 28642], [28642, 28662], [28662, 28681], [28681, 28698], [28698, 28707], [28707, 28720], [28720, 28741], [28741, 28749], [28749, 28765], [28765, 28778], [28778, 28796], [28796, 28813], [28813, 28826], [28826, 28834], [28834, 28838], [28838, 28853], [28853, 28872], [28872, 28874], [28874, 28876], [28876, 28879], [28879, 28883], [28883, 28886], [28886, 28890], [28890, 28894], [28894, 28898], [28898, 28902], [28902, 28906], [28906, 28910], [28910, 28914], [28914, 28918], [28918, 28922], [28922, 28926], [28926, 28930], [28930, 28934], [28934, 28951], [28951, 28958], [28958, 28962], [28962, 28966], [28966, 28970], [28970, 28974], [28974, 28978], [28978, 28982], [28982, 28986], [28986, 28990], [28990, 28994], [28994, 28998], [28998, 29002], [29002, 29006], [29006, 29016], [29016, 29020], [29020, 29024], [29024, 29028], [29028, 29032], [29032, 29036], [29036, 29040], [29040, 29044], [29044, 29048], [29048, 29052], [29052, 29056], [29056, 29060], [29060, 29064], [29064, 29072], [29072, 29076], [29076, 29080], [29080, 29084], [29084, 29088], [29088, 29092], [29092, 29096], [29096, 29100], [29100, 29104], [29104, 29108], [29108, 29112], [29112, 29116], [29116, 29120], [29120, 29132], [29132, 29136], [29136, 29140], [29140, 29144], [29144, 29148], [29148, 29152], [29152, 29156], [29156, 29160], [29160, 29164], [29164, 29168], [29168, 29172], [29172, 29176], [29176, 29180], [29180, 29188], [29188, 29199], [29199, 29208], [29208, 29217]], "positions": [[512, 270, 2036, 335], [866, 363, 1684, 428], [387, 502, 396, 510], [375, 513, 652, 543], [1617, 519, 2171, 544], [374, 563, 1570, 597], [372, 609, 1063, 643], [375, 681, 572, 711], [1865, 687, 2172, 712], [373, 735, 1119, 769], [372, 786, 1295, 820], [1205, 874, 1344, 901], [534, 943, 2070, 977], [478, 990, 2070, 1025], [478, 1036, 2069, 1070], [478, 1083, 2069, 1117], [478, 1129, 2073, 1163], [480, 1176, 2071, 1210], [479, 1222, 2070, 1256], [479, 1269, 2070, 1303], [478, 1316, 2073, 1350], [479, 1362, 2070, 1396], [479, 1409, 2060, 1443], [379, 1535, 787, 1577], [377, 1642, 2179, 1679], [376, 1692, 2173, 1730], [375, 1743, 2174, 1781], [377, 1795, 1804, 1832], [439, 1845, 1595, 1882], [985, 1935, 1561, 1976], [2097, 1938, 2173, 1973], [374, 2027, 2175, 2068], [377, 2081, 1593, 2118], [437, 2125, 2178, 2169], [376, 2182, 1344, 2219], [741, 2293, 815, 2334], [842, 2281, 880, 2301], [846, 2297, 946, 2325], [949, 2288, 960, 2307], [946, 2293, 1075, 2341], [1102, 2281, 1140, 2301], [1106, 2309, 1134, 2318], [1167, 2272, 1305, 2351], [1245, 2330, 1300, 2355], [1318, 2265, 1656, 2351], [1700, 2296, 1806, 2332], [2097, 2296, 2173, 2331], [376, 2411, 1155, 2449], [1158, 2401, 1211, 2430], [1188, 2409, 2175, 2452], [374, 2463, 1512, 2500], [682, 2594, 727, 2622], [728, 2591, 755, 2604], [728, 2578, 937, 2637], [903, 2606, 931, 2615], [974, 2556, 1001, 2569], [960, 2582, 1016, 2640], [960, 2651, 1016, 2671], [1125, 2582, 1181, 2640], [1027, 2651, 1277, 2680], [1290, 2550, 1390, 2661], [1324, 2582, 1380, 2640], [1323, 2651, 1378, 2676], [1401, 2578, 1562, 2633], [1529, 2592, 1666, 2639], [1671, 2578, 1699, 2607], [1667, 2590, 1749, 2639], [1756, 2549, 1850, 2661], [1860, 2617, 1864, 2629], [2097, 2593, 2173, 2628], [421, 2725, 431, 2736], [435, 2726, 2174, 2756], [376, 2766, 1433, 2796], [423, 2801, 1639, 2837], [1269, 2935, 1280, 2963], [97, 2307, 134, 2350], [97, 2277, 133, 2314], [83, 2230, 133, 2288], [83, 2204, 133, 2226], [98, 2159, 133, 2206], [103, 2144, 134, 2155], [82, 2100, 133, 2131], [82, 2050, 133, 2096], [82, 2016, 133, 2047], [82, 1975, 133, 2006], [125, 1955, 134, 1966], [82, 1906, 134, 1947], [83, 1865, 134, 1905], [82, 1823, 134, 1864], [82, 1781, 134, 1823], [98, 1740, 133, 1787], [82, 1698, 134, 1739], [81, 1636, 142, 1655], [97, 1596, 134, 1629], [87, 1568, 134, 1599], [97, 1531, 134, 1574], [87, 1508, 134, 1539], [125, 1499, 134, 1510], [83, 1416, 133, 1493], [83, 1370, 133, 1418], [81, 1347, 142, 1366], [82, 1256, 134, 1297], [82, 1214, 134, 1255], [83, 1137, 133, 1194], [97, 1094, 134, 1135], [97, 1059, 134, 1098], [82, 999, 133, 1038], [82, 955, 134, 996], [82, 919, 133, 950], [83, 872, 133, 912], [374, 228, 543, 272], [510, 242, 960, 289], [967, 240, 2178, 284], [376, 294, 1085, 331], [492, 425, 536, 453], [539, 416, 552, 435], [537, 421, 742, 468], [769, 387, 800, 404], [758, 413, 814, 471], [760, 482, 810, 501], [823, 381, 918, 479], [852, 413, 908, 471], [852, 482, 907, 507], [928, 393, 1336, 479], [1350, 428, 1378, 455], [1402, 387, 1434, 404], [1392, 413, 1448, 471], [1391, 482, 1446, 507], [1456, 381, 1551, 479], [1486, 413, 1542, 471], [1488, 482, 1538, 501], [1561, 393, 1963, 479], [1971, 448, 1975, 460], [2097, 426, 2173, 461], [438, 557, 2175, 594], [376, 608, 2174, 645], [375, 658, 2178, 696], [438, 709, 2174, 746], [376, 760, 652, 790], [658, 760, 1430, 797], [747, 871, 849, 900], [876, 847, 913, 867], [879, 871, 958, 898], [973, 872, 976, 887], [973, 862, 1150, 899], [1053, 905, 1122, 927], [1208, 855, 1219, 874], [1207, 854, 1387, 905], [1374, 859, 1788, 901], [1795, 886, 1799, 890], [2097, 861, 2173, 897], [374, 978, 2174, 1015], [377, 1028, 2073, 1065], [843, 1118, 1704, 1165], [2097, 1121, 2173, 1156], [375, 1213, 1554, 1250], [438, 1264, 2174, 1301], [375, 1315, 2177, 1353], [376, 1365, 2175, 1404], [377, 1416, 2174, 1454], [377, 1467, 1861, 1504], [437, 1517, 2173, 1558], [376, 1569, 756, 1606], [378, 1683, 783, 1718], [376, 1767, 2173, 1804], [376, 1818, 1201, 1855], [439, 1911, 2174, 1948], [479, 1961, 2175, 1998], [479, 2012, 1046, 2049], [439, 2075, 2179, 2112], [479, 2126, 2174, 2163], [478, 2177, 2174, 2214], [478, 2227, 1741, 2265], [439, 2290, 1706, 2331], [528, 2376, 549, 2379], [571, 2359, 2133, 2396], [528, 2431, 549, 2434], [571, 2414, 2175, 2451], [571, 2464, 718, 2492], [439, 2544, 2179, 2581], [476, 2595, 2179, 2632], [479, 2646, 2179, 2683], [478, 2697, 2175, 2734], [478, 2747, 1945, 2784], [1265, 2935, 1284, 2963], [439, 242, 2177, 279], [479, 285, 1809, 329], [374, 385, 2173, 422], [376, 436, 1591, 473], [376, 511, 2175, 548], [377, 562, 2174, 599], [376, 613, 2176, 650], [376, 657, 518, 692], [378, 778, 772, 813], [374, 863, 2175, 900], [375, 913, 1348, 950], [437, 964, 2175, 1001], [375, 1015, 2173, 1052], [377, 1066, 872, 1103], [438, 1117, 1048, 1154], [1052, 1107, 1083, 1127], [1052, 1107, 1256, 1155], [1224, 1117, 2174, 1161], [376, 1166, 2174, 1204], [377, 1218, 2175, 1255], [377, 1269, 2179, 1306], [438, 1320, 2176, 1357], [376, 1371, 2173, 1408], [375, 1420, 2174, 1458], [375, 1471, 2133, 1509], [438, 1522, 2179, 1560], [373, 1574, 2175, 1611], [375, 1625, 2175, 1662], [377, 1675, 1733, 1712], [438, 1726, 2173, 1763], [376, 1777, 2175, 1814], [375, 1827, 2175, 1865], [377, 1879, 2173, 1916], [377, 1930, 2173, 1967], [376, 1980, 1436, 2017], [438, 2031, 2177, 2068], [374, 2082, 2177, 2119], [376, 2132, 2177, 2170], [376, 2184, 1639, 2221], [378, 2298, 967, 2342], [374, 2382, 2175, 2419], [375, 2432, 2173, 2470], [374, 2484, 2179, 2521], [374, 2525, 1829, 2572], [1797, 2535, 2174, 2573], [376, 2576, 591, 2623], [556, 2586, 2174, 2630], [374, 2636, 2173, 2673], [377, 2687, 2173, 2724], [421, 2762, 939, 2797], [421, 2802, 1413, 2838], [1266, 2935, 1282, 2964], [377, 241, 2175, 279], [376, 291, 2174, 329], [377, 343, 2174, 380], [377, 398, 470, 431], [376, 523, 1352, 576], [1355, 510, 1402, 539], [1356, 550, 1369, 578], [373, 628, 2175, 666], [377, 680, 2174, 717], [375, 731, 2173, 768], [376, 782, 907, 819], [438, 832, 1895, 870], [1014, 925, 1081, 953], [1006, 960, 1086, 982], [1147, 918, 1158, 937], [1146, 917, 1326, 967], [1313, 922, 1540, 963], [2097, 925, 2173, 960], [374, 1032, 1922, 1073], [438, 1084, 2174, 1121], [376, 1134, 2175, 1171], [375, 1185, 2173, 1222], [376, 1236, 2171, 1273], [377, 1287, 1462, 1324], [438, 1338, 2175, 1375], [376, 1388, 2174, 1425], [376, 1439, 1029, 1476], [438, 1481, 2171, 1527], [2140, 1509, 2151, 1528], [375, 1531, 1542, 1578], [1507, 1541, 2174, 1585], [376, 1592, 2173, 1629], [377, 1642, 2177, 1679], [377, 1690, 2175, 1731], [375, 1743, 2174, 1781], [374, 1794, 1620, 1832], [438, 1846, 2175, 1883], [375, 1896, 2173, 1933], [374, 1947, 2175, 1984], [375, 1997, 2174, 2035], [375, 2049, 1648, 2086], [376, 2163, 1126, 2207], [1129, 2154, 1167, 2177], [1130, 2187, 1142, 2209], [373, 2248, 2174, 2285], [377, 2299, 905, 2336], [437, 2349, 2173, 2386], [376, 2400, 1538, 2437], [913, 2492, 980, 2520], [936, 2532, 957, 2545], [1006, 2485, 1017, 2504], [1005, 2483, 1109, 2535], [1113, 2489, 1155, 2530], [1163, 2484, 1176, 2503], [1163, 2501, 1257, 2531], [1260, 2483, 1282, 2503], [1287, 2489, 1634, 2530], [2097, 2492, 2173, 2527], [373, 2595, 1766, 2640], [1753, 2602, 2173, 2640], [760, 2707, 916, 2748], [922, 2698, 935, 2717], [950, 2714, 978, 2741], [992, 2686, 1110, 2757], [1051, 2744, 1102, 2763], [1126, 2707, 1435, 2748], [1442, 2698, 1455, 2717], [1469, 2707, 1642, 2748], [1658, 2727, 1684, 2728], [1698, 2707, 1752, 2748], [1758, 2698, 1771, 2717], [1786, 2734, 1790, 2738], [1265, 2935, 1284, 2963], [376, 242, 1826, 279], [716, 342, 783, 370], [739, 382, 760, 395], [804, 324, 880, 389], [862, 376, 913, 395], [928, 339, 1238, 380], [1244, 330, 1257, 349], [1272, 339, 1830, 380], [2097, 342, 2173, 377], [375, 457, 2007, 494], [2023, 445, 2074, 496], [2066, 467, 2170, 497], [376, 508, 1462, 545], [496, 608, 563, 636], [523, 648, 536, 661], [584, 590, 661, 655], [643, 642, 693, 661], [708, 605, 1219, 646], [1225, 596, 1238, 615], [1252, 605, 2050, 646], [374, 711, 960, 748], [705, 812, 772, 840], [732, 852, 745, 865], [793, 793, 870, 858], [852, 846, 902, 865], [917, 809, 1001, 850], [1017, 829, 1043, 830], [1058, 809, 1101, 850], [1107, 800, 1120, 819], [1135, 836, 1139, 848], [1193, 809, 1841, 850], [2097, 812, 2173, 847], [375, 915, 1660, 952], [689, 1038, 756, 1066], [716, 1078, 729, 1091], [795, 1001, 813, 1014], [777, 1027, 833, 1085], [779, 1096, 829, 1115], [846, 1010, 1042, 1085], [1059, 1055, 1085, 1056], [1099, 1035, 1142, 1076], [1149, 1026, 1162, 1045], [1169, 1035, 1857, 1076], [2097, 1037, 2173, 1073], [374, 1165, 2173, 1202], [376, 1206, 721, 1253], [690, 1216, 1648, 1254], [438, 1266, 2174, 1304], [376, 1314, 2176, 1355], [376, 1367, 2174, 1405], [376, 1419, 1326, 1456], [438, 1470, 2173, 1507], [376, 1521, 437, 1549], [633, 1623, 786, 1647], [846, 1626, 874, 1635], [930, 1610, 1187, 1651], [1204, 1630, 1230, 1631], [1244, 1610, 1726, 1651], [1786, 1626, 1814, 1635], [1870, 1623, 1914, 1649], [374, 1698, 2174, 1742], [376, 1756, 2173, 1793], [377, 1811, 536, 1844], [534, 2461, 561, 2502], [696, 2461, 710, 2501], [850, 2461, 877, 2501], [1008, 2461, 1035, 2502], [1167, 2461, 1194, 2501], [1325, 2461, 1352, 2502], [1483, 2461, 1510, 2502], [1642, 2461, 1668, 2501], [1799, 2461, 1826, 2502], [1957, 2461, 2159, 2502], [475, 2415, 535, 2456], [475, 2310, 535, 2350], [475, 2204, 535, 2244], [508, 2099, 535, 2140], [1335, 2517, 1341, 2564], [409, 2216, 444, 2243], [1064, 1925, 1616, 1986], [376, 2699, 2174, 2736], [376, 2746, 2173, 2783], [377, 2794, 877, 2821], [1265, 2934, 1282, 2964], [373, 239, 1235, 277], [397, 295, 1167, 329], [394, 342, 1445, 376], [1460, 333, 1611, 379], [394, 388, 668, 416], [393, 439, 416, 461], [495, 433, 1556, 470], [1571, 451, 1595, 452], [1609, 433, 1889, 470], [394, 484, 416, 507], [495, 481, 1100, 515], [394, 531, 416, 554], [550, 528, 1266, 562], [394, 578, 416, 600], [495, 574, 646, 601], [395, 625, 416, 647], [495, 619, 1892, 656], [394, 672, 416, 695], [495, 668, 1085, 695], [381, 718, 416, 740], [550, 714, 1268, 748], [381, 765, 416, 787], [495, 761, 646, 788], [381, 811, 416, 833], [495, 807, 1980, 841], [381, 858, 416, 880], [552, 854, 1793, 888], [381, 904, 416, 926], [551, 900, 1045, 928], [381, 950, 416, 973], [607, 947, 1777, 981], [381, 997, 416, 1020], [606, 994, 1643, 1028], [381, 1044, 416, 1066], [551, 1040, 643, 1067], [381, 1091, 416, 1113], [551, 1087, 1044, 1121], [381, 1137, 416, 1160], [607, 1133, 1775, 1167], [378, 1184, 416, 1206], [606, 1180, 1645, 1214], [378, 1230, 416, 1252], [551, 1226, 643, 1253], [378, 1277, 416, 1299], [495, 1273, 587, 1300], [378, 1324, 416, 1346], [495, 1321, 582, 1349], [378, 1366, 590, 1393], [378, 1413, 1520, 1447], [438, 1561, 2173, 1598], [376, 1612, 2174, 1649], [375, 1661, 2174, 1699], [376, 1712, 2174, 1750], [376, 1764, 2173, 1801], [376, 1815, 2176, 1852], [376, 1866, 1997, 1903], [438, 1917, 2174, 1954], [376, 1967, 2177, 2004], [374, 2018, 2175, 2055], [376, 2069, 2174, 2106], [376, 2120, 2177, 2157], [376, 2171, 2173, 2208], [376, 2218, 989, 2259], [438, 2272, 2173, 2309], [376, 2323, 2174, 2360], [374, 2374, 2173, 2411], [377, 2425, 2179, 2462], [376, 2535, 1198, 2573], [373, 2615, 2174, 2652], [376, 2666, 2175, 2703], [376, 2717, 2174, 2754], [376, 2767, 2172, 2804], [1265, 2935, 1283, 2964], [233, 288, 302, 337], [855, 288, 924, 337], [1472, 288, 1541, 337], [233, 674, 302, 723], [855, 674, 924, 723], [1472, 674, 1541, 723], [233, 1051, 302, 1100], [855, 1051, 924, 1100], [1472, 1051, 1541, 1100], [376, 1440, 2175, 1477], [376, 1488, 2173, 1522], [375, 1535, 2173, 1569], [376, 1581, 2174, 1615], [376, 1628, 2174, 1662], [377, 1674, 2174, 1708], [376, 1721, 2174, 1755], [377, 1768, 2177, 1802], [375, 1814, 2174, 1848], [376, 1861, 2175, 1895], [375, 1907, 2173, 1941], [376, 1954, 993, 1988], [375, 2084, 2173, 2121], [376, 2135, 2175, 2172], [376, 2186, 2175, 2223], [376, 2237, 2174, 2274], [376, 2288, 2174, 2325], [376, 2339, 2174, 2376], [377, 2389, 2177, 2426], [376, 2440, 2173, 2477], [376, 2491, 2174, 2528], [375, 2542, 780, 2579], [437, 2593, 2172, 2630], [376, 2643, 2173, 2680], [376, 2694, 2174, 2731], [374, 2745, 2175, 2782], [376, 2796, 1904, 2832], [1265, 2936, 1283, 2963], [376, 237, 1273, 281], [1276, 228, 1314, 251], [1277, 262, 1289, 284], [373, 322, 2175, 359], [376, 373, 2174, 410], [376, 424, 621, 461], [438, 475, 2174, 512], [376, 525, 2175, 562], [375, 576, 2175, 613], [375, 627, 1341, 664], [438, 678, 2173, 715], [376, 729, 2177, 766], [376, 799, 1730, 837], [431, 876, 1092, 913], [427, 935, 455, 963], [483, 927, 498, 929], [480, 933, 1715, 972], [428, 994, 455, 1023], [478, 1025, 493, 1027], [480, 992, 1717, 1031], [427, 1053, 455, 1081], [482, 1045, 497, 1047], [480, 1052, 1218, 1090], [427, 1111, 455, 1141], [481, 1144, 496, 1146], [480, 1111, 1159, 1149], [427, 1171, 455, 1200], [478, 1165, 493, 1167], [479, 1164, 1719, 1208], [427, 1232, 455, 1259], [476, 1262, 491, 1264], [479, 1231, 929, 1268], [939, 1262, 954, 1264], [941, 1229, 1729, 1268], [375, 1315, 2174, 1352], [376, 1365, 1479, 1402], [375, 2225, 2174, 2262], [375, 2272, 2173, 2307], [377, 2320, 1420, 2354], [438, 2417, 2173, 2454], [376, 2468, 2174, 2505], [376, 2519, 2054, 2556], [438, 2570, 2174, 2607], [376, 2621, 810, 2658], [811, 2652, 826, 2654], [813, 2619, 839, 2655], [856, 2613, 871, 2615], [853, 2619, 1554, 2658], [1558, 2652, 1573, 2654], [1558, 2620, 1588, 2655], [1603, 2613, 1618, 2615], [1601, 2620, 2174, 2658], [376, 2671, 1091, 2708], [1091, 2703, 1106, 2705], [1093, 2669, 1120, 2705], [1137, 2664, 1152, 2666], [1134, 2669, 2175, 2708], [377, 2754, 392, 2756], [377, 2714, 2174, 2759], [376, 2773, 2177, 2810], [1266, 2935, 1282, 2964], [373, 239, 1395, 277], [397, 300, 632, 326], [644, 296, 658, 297], [646, 301, 696, 326], [707, 330, 721, 331], [710, 301, 761, 326], [777, 294, 791, 295], [775, 300, 834, 326], [849, 330, 863, 331], [848, 300, 946, 331], [958, 330, 972, 331], [960, 299, 1140, 334], [1156, 294, 1170, 295], [1154, 299, 1325, 334], [394, 347, 668, 375], [394, 397, 416, 419], [494, 384, 1230, 427], [393, 444, 416, 466], [495, 434, 1287, 474], [1303, 434, 1317, 435], [1301, 434, 1387, 469], [1398, 456, 1422, 457], [1435, 449, 1473, 474], [394, 490, 416, 513], [494, 487, 1444, 521], [394, 536, 416, 559], [495, 524, 710, 561], [394, 584, 416, 606], [551, 580, 1538, 618], [1555, 574, 1569, 575], [1553, 579, 1576, 606], [395, 630, 416, 652], [552, 624, 1070, 661], [1077, 656, 1091, 657], [1080, 624, 1146, 661], [1158, 622, 1172, 623], [1159, 627, 1179, 657], [1190, 656, 1204, 657], [1192, 625, 1387, 660], [1404, 620, 1418, 621], [1401, 625, 1508, 660], [1522, 656, 1536, 657], [1522, 626, 1622, 657], [1637, 620, 1651, 621], [1636, 626, 1830, 657], [1842, 622, 1856, 623], [1844, 627, 1919, 655], [394, 677, 416, 700], [551, 673, 687, 700], [381, 723, 416, 745], [495, 719, 587, 746], [381, 770, 416, 792], [495, 766, 1213, 800], [1230, 795, 1244, 796], [1230, 766, 1289, 792], [1304, 795, 1318, 796], [1303, 766, 1360, 795], [1370, 795, 1384, 796], [1372, 765, 1475, 800], [381, 817, 416, 839], [494, 813, 1457, 840], [381, 863, 416, 885], [495, 859, 519, 885], [538, 889, 552, 890], [538, 859, 636, 887], [643, 850, 656, 854], [641, 859, 740, 886], [381, 910, 416, 932], [551, 906, 1485, 941], [1486, 939, 1497, 940], [1490, 918, 1540, 936], [1552, 935, 1566, 936], [1555, 905, 1578, 932], [381, 955, 416, 978], [552, 948, 1146, 987], [1156, 982, 1170, 983], [1159, 953, 1179, 983], [1190, 982, 1204, 983], [1192, 951, 1299, 986], [1315, 946, 1329, 947], [1313, 951, 1538, 986], [1552, 982, 1566, 983], [1551, 952, 1652, 983], [1667, 946, 1681, 947], [1666, 952, 1860, 983], [1870, 982, 1884, 983], [1873, 953, 1948, 981], [381, 1002, 416, 1025], [551, 999, 687, 1026], [381, 1049, 416, 1071], [495, 1045, 587, 1072], [381, 1096, 416, 1118], [494, 1092, 1213, 1126], [381, 1143, 416, 1166], [495, 1133, 636, 1171], [643, 1130, 656, 1134], [641, 1139, 750, 1166], [378, 1189, 416, 1211], [551, 1179, 829, 1219], [847, 1179, 861, 1180], [844, 1184, 897, 1214], [918, 1172, 927, 1175], [915, 1174, 973, 1196], [914, 1207, 970, 1229], [378, 1246, 416, 1268], [551, 1236, 1204, 1276], [1211, 1233, 1224, 1237], [1209, 1242, 1228, 1268], [378, 1292, 416, 1314], [551, 1284, 1274, 1322], [378, 1339, 416, 1361], [495, 1335, 587, 1362], [378, 1385, 416, 1407], [494, 1381, 1244, 1415], [378, 1431, 416, 1454], [495, 1428, 519, 1454], [538, 1457, 552, 1458], [538, 1419, 720, 1460], [378, 1485, 416, 1508], [551, 1482, 757, 1516], [772, 1512, 786, 1513], [774, 1481, 829, 1508], [842, 1512, 856, 1513], [844, 1481, 933, 1511], [941, 1465, 950, 1468], [938, 1472, 976, 1489], [980, 1493, 991, 1494], [981, 1472, 996, 1489], [925, 1504, 981, 1526], [378, 1543, 416, 1565], [551, 1539, 1122, 1573], [1139, 1568, 1153, 1569], [1139, 1539, 1197, 1565], [1215, 1530, 1228, 1534], [1212, 1539, 1231, 1565], [378, 1589, 416, 1611], [551, 1585, 1186, 1619], [1199, 1615, 1213, 1616], [1202, 1586, 1276, 1611], [378, 1636, 416, 1659], [495, 1632, 587, 1659], [378, 1683, 416, 1705], [495, 1679, 1175, 1713], [378, 1725, 590, 1752], [378, 1772, 981, 1807], [998, 1766, 1012, 1767], [995, 1771, 1018, 1798], [377, 1921, 2173, 1958], [376, 1971, 1310, 2008], [437, 2022, 2174, 2059], [377, 2073, 2175, 2110], [376, 2124, 2174, 2161], [376, 2175, 2174, 2212], [374, 2225, 2172, 2262], [376, 2276, 2174, 2313], [375, 2321, 2173, 2365], [377, 2378, 786, 2415], [438, 2429, 1708, 2466], [376, 2539, 2175, 2577], [377, 2589, 2173, 2628], [377, 2642, 967, 2676], [1265, 2935, 1283, 2964], [856, 235, 979, 265], [1529, 235, 1915, 271], [399, 285, 940, 326], [1530, 282, 1632, 326], [400, 342, 592, 378], [855, 342, 904, 369], [1529, 342, 1586, 369], [400, 393, 742, 422], [855, 393, 1481, 430], [855, 444, 1077, 481], [1529, 393, 2081, 430], [638, 556, 1910, 593], [439, 680, 2174, 717], [375, 731, 1100, 768], [1106, 810, 1441, 849], [376, 890, 2173, 929], [376, 943, 2174, 980], [376, 993, 2174, 1031], [376, 1045, 2172, 1082], [377, 1096, 1034, 1133], [438, 1146, 2174, 1184], [376, 1197, 2173, 1234], [376, 1248, 2177, 1285], [376, 1299, 2175, 1336], [377, 1342, 1995, 1387], [903, 1448, 918, 1450], [900, 1454, 972, 1490], [992, 1426, 1174, 1462], [1077, 1485, 1088, 1512], [1194, 1469, 1222, 1478], [1243, 1420, 1408, 1465], [1424, 1420, 1439, 1422], [1422, 1424, 1633, 1465], [1432, 1485, 1443, 1512], [1644, 1480, 1648, 1492], [374, 1545, 2173, 1590], [376, 1602, 2175, 1641], [376, 1654, 922, 1691], [938, 1646, 953, 1648], [937, 1653, 1040, 1689], [1047, 1646, 1062, 1648], [1044, 1646, 2091, 1691], [770, 1752, 785, 1754], [767, 1758, 839, 1794], [860, 1724, 1033, 1770], [1050, 1749, 1076, 1750], [1090, 1729, 1253, 1770], [1269, 1724, 1284, 1726], [1267, 1731, 1462, 1766], [1155, 1790, 1166, 1817], [1482, 1773, 1510, 1782], [1529, 1752, 1544, 1754], [1526, 1758, 1638, 1794], [1657, 1731, 1717, 1761], [1733, 1724, 1748, 1726], [1732, 1731, 1764, 1766], [1705, 1790, 1716, 1817], [1776, 1784, 1780, 1796], [374, 1851, 2173, 1888], [376, 1902, 2173, 1939], [375, 1945, 1907, 1990], [1922, 1984, 1937, 1986], [1922, 1952, 2173, 1987], [376, 2004, 769, 2032], [438, 2054, 2173, 2091], [375, 2094, 2174, 2142], [376, 2156, 2174, 2193], [376, 2207, 2174, 2244], [376, 2258, 2173, 2295], [375, 2308, 2172, 2345], [377, 2359, 1385, 2396], [438, 2410, 2174, 2447], [376, 2461, 2173, 2498], [375, 2512, 2173, 2549], [377, 2563, 1720, 2600], [376, 2674, 1704, 2718], [374, 2759, 2179, 2796], [374, 2810, 2173, 2847], [1259, 2935, 1295, 2964], [265, 323, 301, 348], [874, 323, 910, 348], [1485, 323, 1521, 348], [265, 713, 301, 738], [874, 713, 910, 738], [1485, 713, 1521, 738], [265, 1105, 301, 1130], [874, 1105, 910, 1130], [1485, 1105, 1521, 1130], [485, 1480, 539, 1505], [1210, 1480, 1264, 1505], [376, 1843, 2175, 1880], [375, 1892, 2173, 1926], [376, 1938, 2174, 1972], [377, 1985, 2177, 2019], [375, 2031, 2174, 2065], [375, 2078, 2173, 2112], [376, 2125, 2177, 2159], [377, 2171, 2173, 2205], [375, 2218, 885, 2252], [376, 2348, 2175, 2385], [375, 2399, 2174, 2436], [375, 2450, 2060, 2487], [438, 2501, 2173, 2538], [375, 2552, 2174, 2589], [376, 2602, 2177, 2639], [376, 2653, 2174, 2690], [376, 2704, 2173, 2741], [374, 2752, 2174, 2793], [376, 2806, 1273, 2843], [1259, 2935, 1291, 2963], [438, 242, 2174, 279], [375, 292, 2174, 329], [376, 343, 2174, 380], [376, 387, 2177, 432], [376, 445, 2173, 482], [376, 489, 2174, 534], [376, 550, 544, 583], [438, 597, 2180, 634], [376, 648, 2175, 685], [376, 692, 2173, 736], [375, 750, 2178, 787], [374, 801, 2174, 838], [376, 851, 1468, 888], [376, 962, 1266, 1006], [1269, 953, 1306, 976], [1270, 986, 1282, 1008], [377, 1047, 2174, 1084], [376, 1098, 848, 1135], [895, 1185, 982, 1219], [1043, 1178, 1054, 1197], [1042, 1177, 1222, 1228], [1209, 1189, 1265, 1223], [1279, 1161, 1397, 1232], [1338, 1219, 1388, 1238], [1410, 1182, 1651, 1223], [2097, 1185, 2173, 1220], [374, 1270, 769, 1311], [772, 1265, 832, 1284], [772, 1273, 2174, 1313], [376, 1324, 1104, 1361], [761, 1397, 851, 1432], [911, 1390, 922, 1409], [910, 1388, 1013, 1440], [1017, 1394, 1060, 1435], [1068, 1389, 1081, 1408], [1068, 1406, 1162, 1436], [1164, 1388, 1186, 1408], [1191, 1394, 1785, 1435], [2097, 1397, 2173, 1432], [374, 1471, 2174, 1508], [375, 1522, 1493, 1559], [761, 1603, 828, 1631], [784, 1643, 805, 1656], [848, 1585, 925, 1650], [907, 1637, 958, 1656], [973, 1600, 1251, 1641], [1257, 1591, 1270, 1610], [1324, 1600, 1786, 1641], [374, 1699, 1473, 1736], [1489, 1687, 1541, 1738], [1533, 1699, 1873, 1739], [631, 1784, 698, 1812], [658, 1824, 671, 1837], [708, 1765, 785, 1830], [767, 1818, 817, 1837], [833, 1781, 1016, 1822], [1023, 1772, 1036, 1791], [1090, 1781, 1916, 1822], [376, 1868, 1795, 1905], [584, 1961, 651, 1989], [611, 2001, 624, 2014], [661, 1943, 738, 2008], [720, 1995, 770, 2014], [787, 1933, 1083, 2008], [1089, 1949, 1102, 1968], [1149, 1958, 1962, 1999], [2097, 1961, 2173, 1996], [438, 2045, 2177, 2086], [374, 2098, 2174, 2136], [377, 2150, 2174, 2187], [376, 2199, 2101, 2237], [438, 2251, 2174, 2288], [374, 2293, 613, 2339], [582, 2302, 2177, 2340], [376, 2350, 2174, 2391], [377, 2403, 2174, 2441], [374, 2453, 1278, 2491], [439, 2505, 2173, 2542], [376, 2556, 2175, 2593], [374, 2607, 2173, 2644], [375, 2658, 2173, 2695], [376, 2708, 1334, 2745], [438, 2759, 2173, 2796], [376, 2810, 1474, 2847], [1259, 2935, 1295, 2963], [505, 799, 683, 841], [827, 799, 855, 840], [987, 799, 1014, 841], [1148, 799, 1176, 840], [1310, 799, 1498, 841], [1633, 799, 1660, 840], [1792, 799, 1820, 841], [1954, 799, 2158, 841], [478, 670, 505, 712], [478, 563, 506, 604], [478, 456, 506, 497], [478, 348, 506, 390], [1320, 857, 1326, 904], [410, 552, 447, 580], [1043, 261, 1607, 322], [376, 1038, 2179, 1076], [374, 1087, 2173, 1121], [374, 1132, 2179, 1169], [374, 1181, 1250, 1215], [373, 1272, 1367, 1310], [394, 1341, 416, 1363], [488, 1328, 1280, 1371], [395, 1387, 416, 1409], [490, 1381, 1030, 1418], [1037, 1413, 1051, 1414], [1041, 1381, 1111, 1418], [1128, 1379, 1142, 1380], [1129, 1384, 1148, 1414], [1163, 1413, 1177, 1414], [1165, 1382, 1502, 1417], [1522, 1378, 1536, 1379], [1519, 1382, 1754, 1417], [1772, 1399, 1796, 1400], [1810, 1392, 1857, 1414], [1874, 1413, 1888, 1414], [1874, 1383, 2002, 1414], [2020, 1378, 2034, 1379], [2019, 1383, 2177, 1414], [439, 1431, 490, 1456], [502, 1425, 516, 1426], [503, 1431, 578, 1459], [381, 1472, 1111, 1512], [1126, 1506, 1140, 1507], [1129, 1478, 1148, 1508], [1163, 1506, 1177, 1507], [1165, 1476, 1400, 1511], [1418, 1493, 1442, 1494], [1456, 1486, 1502, 1508], [1522, 1471, 1536, 1472], [1519, 1476, 1857, 1511], [1874, 1506, 1888, 1507], [1874, 1477, 2002, 1508], [2020, 1471, 2034, 1472], [2019, 1477, 2177, 1508], [439, 1524, 490, 1549], [500, 1553, 514, 1554], [503, 1524, 578, 1552], [376, 1651, 1371, 1693], [373, 1757, 2174, 1798], [375, 1809, 2174, 1846], [376, 1858, 1724, 1900], [376, 1972, 1015, 2016], [1018, 1962, 1056, 1985], [1018, 1996, 1032, 2018], [376, 2057, 1675, 2094], [829, 2137, 1077, 2178], [1099, 2133, 1110, 2152], [1098, 2131, 1202, 2183], [1206, 2137, 1248, 2178], [1256, 2132, 1269, 2151], [1256, 2149, 1350, 2179], [1352, 2131, 1374, 2151], [1380, 2137, 1718, 2178], [2097, 2140, 2173, 2175], [376, 2224, 2175, 2261], [376, 2275, 1053, 2312], [437, 2326, 2179, 2363], [374, 2377, 2179, 2414], [376, 2427, 2175, 2465], [376, 2478, 2173, 2515], [375, 2529, 551, 2566], [438, 2580, 1298, 2617], [1042, 2654, 1437, 2701], [1040, 2724, 1507, 2765], [2097, 2694, 2173, 2729], [374, 2807, 1944, 2848], [1259, 2935, 1293, 2964], [438, 239, 2174, 280], [376, 285, 2173, 330], [376, 336, 2174, 380], [380, 391, 2174, 432], [380, 442, 550, 483], [438, 489, 2177, 534], [376, 546, 1577, 583], [438, 591, 1088, 635], [1075, 591, 1778, 636], [1047, 688, 1182, 723], [1186, 680, 1223, 699], [1240, 706, 1266, 707], [1284, 686, 1366, 727], [1375, 680, 1412, 699], [1374, 689, 1501, 728], [2097, 689, 2173, 724], [374, 780, 2178, 817], [376, 830, 2174, 865], [376, 881, 573, 909], [1128, 927, 1396, 970], [1389, 956, 1419, 971], [2097, 932, 2173, 967], [377, 1004, 1461, 1044], [1034, 1095, 1047, 1123], [1018, 1150, 1049, 1179], [1042, 1177, 1060, 1190], [1082, 1136, 1110, 1145], [1274, 1089, 1378, 1133], [1365, 1114, 1378, 1133], [1130, 1147, 1181, 1179], [1160, 1147, 1517, 1190], [1530, 1147, 1534, 1151], [2097, 1122, 2173, 1158], [438, 1234, 2174, 1272], [377, 1278, 696, 1316], [674, 1278, 1297, 1324], [1276, 1282, 1312, 1324], [1320, 1279, 1356, 1298], [1362, 1279, 1630, 1323], [1617, 1278, 1740, 1324], [1719, 1278, 2174, 1324], [375, 1336, 1071, 1371], [743, 1504, 806, 1522], [825, 1465, 867, 1500], [825, 1521, 856, 1550], [849, 1547, 867, 1560], [919, 1507, 947, 1516], [993, 1491, 1172, 1532], [1181, 1485, 1218, 1504], [1180, 1493, 1296, 1533], [1300, 1485, 1337, 1504], [1344, 1491, 1375, 1532], [1538, 1459, 1641, 1504], [1628, 1485, 1641, 1504], [1394, 1518, 1444, 1550], [1423, 1518, 1781, 1560], [1794, 1518, 1798, 1530], [919, 1624, 947, 1633], [993, 1621, 1056, 1639], [1078, 1577, 1182, 1621], [1169, 1582, 1259, 1621], [1263, 1577, 1413, 1621], [1400, 1602, 1413, 1621], [1197, 1634, 1295, 1677], [1282, 1659, 1295, 1678], [1426, 1635, 1430, 1647], [919, 1742, 947, 1751], [993, 1739, 1056, 1757], [1078, 1695, 1182, 1739], [1169, 1720, 1182, 1739], [1081, 1752, 1179, 1795], [1166, 1778, 1179, 1797], [1206, 1696, 1287, 1796], [1309, 1698, 1413, 1739], [1350, 1756, 1371, 1786], [1422, 1696, 1467, 1796], [376, 1884, 594, 1912], [950, 1957, 1187, 1978], [1209, 1916, 1313, 1960], [1300, 1941, 1313, 1960], [1212, 1973, 1310, 2017], [1297, 1999, 1310, 2018], [1337, 1918, 1418, 2018], [1440, 1919, 1544, 1960], [1481, 1978, 1502, 2008], [1553, 1918, 1598, 2018], [2097, 1950, 2173, 1985], [438, 2046, 2174, 2091], [377, 2101, 1502, 2142], [438, 2155, 2173, 2192], [377, 2205, 2173, 2242], [376, 2256, 2174, 2293], [376, 2301, 2138, 2347], [2145, 2331, 2150, 2335], [438, 2358, 2175, 2395], [376, 2409, 2175, 2446], [377, 2459, 873, 2496], [980, 2519, 1006, 2538], [1008, 2502, 1059, 2524], [1077, 2507, 1296, 2553], [1299, 2503, 1309, 2521], [1325, 2527, 1351, 2528], [1365, 2507, 1511, 2548], [1513, 2503, 1523, 2521], [1529, 2507, 1567, 2548], [2097, 2510, 2173, 2545], [438, 2585, 2176, 2622], [376, 2633, 2174, 2674], [376, 2680, 2177, 2724], [376, 2747, 754, 2785], [769, 2728, 838, 2803], [793, 2771, 852, 2793], [861, 2728, 1734, 2803], [1750, 2728, 1880, 2803], [1818, 2777, 1836, 2790], [1889, 2728, 2174, 2803], [374, 2807, 2174, 2848], [1259, 2935, 1295, 2963], [373, 239, 1089, 277], [416, 296, 850, 330], [417, 346, 510, 376], [527, 339, 529, 366], [527, 341, 643, 390], [630, 346, 721, 385], [728, 339, 730, 366], [728, 344, 1198, 390], [479, 391, 1285, 435], [1264, 398, 1356, 436], [479, 441, 908, 485], [887, 448, 1152, 487], [479, 492, 902, 536], [881, 508, 1067, 537], [480, 571, 625, 589], [648, 546, 716, 575], [723, 542, 733, 556], [723, 563, 733, 577], [650, 581, 730, 612], [720, 600, 730, 614], [756, 541, 940, 616], [889, 584, 905, 604], [951, 541, 982, 616], [417, 620, 585, 650], [417, 674, 589, 706], [373, 785, 1175, 823], [416, 842, 853, 883], [417, 898, 810, 936], [479, 945, 945, 987], [966, 943, 977, 962], [964, 945, 1127, 993], [479, 995, 1256, 1039], [479, 1052, 652, 1083], [417, 1102, 585, 1132], [417, 1148, 591, 1182], [375, 1296, 2174, 1339], [376, 1348, 2173, 1385], [376, 1397, 2174, 1435], [375, 1448, 1767, 1486], [375, 1563, 1018, 1607], [1022, 1554, 1065, 1577], [1018, 1595, 1036, 1616], [375, 1648, 1464, 1688], [841, 1740, 908, 1768], [864, 1780, 885, 1793], [929, 1737, 1065, 1778], [1087, 1733, 1098, 1752], [1086, 1731, 1189, 1783], [1193, 1737, 1236, 1778], [1244, 1732, 1257, 1751], [1244, 1749, 1338, 1779], [1340, 1731, 1362, 1751], [1367, 1737, 1705, 1781], [2097, 1740, 2173, 1775], [374, 1843, 2175, 1884], [376, 1896, 2179, 1934], [375, 1948, 2174, 1985], [377, 1999, 2174, 2036], [375, 2050, 2174, 2087], [377, 2100, 892, 2129], [376, 2211, 1121, 2252], [374, 2290, 1211, 2331], [865, 2380, 1154, 2421], [1176, 2376, 1187, 2395], [1175, 2380, 1345, 2425], [1353, 2375, 1366, 2394], [1353, 2380, 1682, 2423], [2097, 2383, 2173, 2418], [376, 2475, 1680, 2512], [922, 2567, 1090, 2602], [1093, 2564, 1104, 2577], [1113, 2565, 1230, 2606], [1252, 2560, 1263, 2579], [1251, 2565, 1421, 2610], [1429, 2559, 1442, 2578], [1429, 2565, 1625, 2608], [2076, 2568, 2173, 2603], [374, 2657, 1669, 2706], [1676, 2660, 2175, 2697], [377, 2711, 1547, 2748], [1063, 2812, 1095, 2831], [1101, 2800, 1112, 2813], [1130, 2800, 1484, 2849], [1259, 2934, 1293, 2964], [376, 242, 2173, 279], [376, 292, 2174, 329], [376, 343, 1022, 380], [438, 394, 2174, 431], [375, 445, 1527, 482], [753, 538, 921, 573], [925, 536, 936, 549], [945, 536, 1062, 577], [1084, 532, 1095, 551], [1083, 536, 1252, 581], [1260, 531, 1273, 550], [1260, 538, 1351, 577], [1373, 528, 1429, 586], [1432, 573, 1441, 592], [1453, 549, 1481, 567], [1482, 534, 1498, 553], [1482, 560, 1491, 579], [1504, 520, 1570, 581], [1617, 539, 1793, 573], [2076, 539, 2173, 574], [374, 630, 1166, 668], [959, 713, 1416, 754], [1425, 708, 1480, 733], [1422, 725, 1517, 761], [1519, 708, 1576, 733], [1585, 740, 1589, 752], [2076, 716, 2173, 751], [374, 795, 1799, 838], [523, 878, 553, 905], [483, 914, 592, 943], [604, 890, 1129, 933], [1082, 913, 1150, 943], [1160, 877, 1235, 935], [1244, 890, 1310, 931], [1319, 885, 1356, 904], [1316, 918, 1332, 937], [1363, 885, 1656, 935], [1608, 913, 1676, 943], [1686, 877, 1761, 935], [1809, 887, 1843, 908], [1794, 913, 1862, 943], [1872, 877, 1946, 935], [1956, 890, 2023, 931], [2031, 885, 2068, 904], [2028, 918, 2044, 937], [724, 968, 955, 1011], [958, 960, 1016, 985], [958, 991, 967, 1010], [1021, 963, 1152, 1013], [1166, 973, 1181, 975], [1156, 979, 1215, 1011], [374, 1050, 854, 1094], [814, 1054, 906, 1100], [884, 1053, 1197, 1096], [1173, 1050, 1526, 1096], [1533, 1054, 2174, 1096], [376, 1106, 1577, 1143], [940, 1188, 1332, 1229], [1335, 1183, 1393, 1208], [1398, 1184, 1575, 1234], [1551, 1200, 1583, 1219], [1586, 1182, 1608, 1202], [2076, 1191, 2173, 1226], [438, 1277, 2176, 1314], [377, 1320, 1461, 1356], [930, 1410, 1342, 1451], [1344, 1402, 1402, 1427], [1349, 1433, 1361, 1434], [1345, 1437, 1359, 1457], [1408, 1405, 1546, 1455], [1558, 1415, 1573, 1417], [1548, 1422, 1580, 1441], [1584, 1403, 1606, 1423], [1587, 1430, 1599, 1431], [1584, 1434, 1617, 1454], [2076, 1413, 2173, 1448], [373, 1504, 1019, 1543], [1022, 1495, 1080, 1520], [1027, 1526, 1039, 1527], [1023, 1530, 1037, 1550], [1086, 1498, 1690, 1548], [771, 1619, 853, 1656], [815, 1648, 827, 1649], [811, 1625, 1155, 1672], [1167, 1630, 1182, 1632], [1158, 1637, 1190, 1656], [1193, 1618, 1215, 1638], [1197, 1645, 1209, 1646], [1193, 1649, 1207, 1669], [1220, 1612, 1277, 1670], [1296, 1626, 1370, 1656], [1375, 1619, 1412, 1638], [1429, 1645, 1455, 1646], [1474, 1590, 1622, 1633], [1633, 1598, 1648, 1600], [1624, 1589, 1682, 1624], [1663, 1615, 1675, 1616], [1659, 1590, 1759, 1639], [1480, 1651, 1624, 1688], [1606, 1677, 1618, 1678], [1602, 1682, 1616, 1702], [1629, 1654, 1702, 1685], [1717, 1660, 1732, 1662], [1707, 1666, 1759, 1695], [1773, 1652, 1777, 1656], [2076, 1627, 2173, 1663], [375, 1740, 2174, 1777], [375, 1791, 1460, 1828], [689, 1911, 810, 1952], [817, 1906, 854, 1925], [861, 1911, 1321, 1952], [1359, 1886, 1466, 1914], [1474, 1897, 1486, 1898], [1470, 1901, 1484, 1921], [1489, 1876, 1634, 1926], [1641, 1897, 1653, 1898], [1637, 1901, 1651, 1921], [1656, 1866, 1696, 1926], [1702, 1880, 1842, 1921], [1431, 1942, 1738, 1983], [1741, 1937, 1859, 1987], [2076, 1914, 2173, 1949], [374, 2040, 721, 2071], [724, 2031, 782, 2056], [729, 2062, 741, 2063], [725, 2066, 739, 2086], [788, 2026, 845, 2084], [851, 2042, 1526, 2079], [438, 2092, 2174, 2129], [375, 2140, 1582, 2181], [375, 2252, 1285, 2294], [374, 2332, 2174, 2369], [376, 2382, 2173, 2420], [376, 2434, 1712, 2471], [438, 2485, 2173, 2525], [375, 2535, 2174, 2572], [374, 2586, 650, 2615], [870, 2637, 1025, 2671], [1029, 2628, 1051, 2648], [1082, 2628, 1183, 2665], [1187, 2637, 1330, 2673], [1334, 2629, 1677, 2679], [2076, 2637, 2173, 2672], [374, 2701, 2173, 2752], [377, 2753, 863, 2797], [870, 2783, 875, 2787], [899, 2759, 1108, 2793], [1113, 2758, 1124, 2771], [1143, 2752, 2173, 2796], [377, 2807, 702, 2848], [707, 2798, 764, 2823], [781, 2807, 1427, 2850], [1259, 2935, 1294, 2964], [373, 239, 909, 277], [417, 295, 980, 333], [417, 347, 824, 382], [417, 396, 981, 434], [479, 445, 1338, 486], [479, 496, 1475, 539], [479, 547, 1021, 588], [479, 601, 652, 632], [417, 651, 585, 681], [417, 704, 590, 737], [438, 851, 2174, 888], [376, 899, 2173, 940], [376, 953, 1226, 990], [867, 1045, 1034, 1088], [1055, 1038, 1066, 1057], [1054, 1036, 1357, 1088], [1344, 1032, 1679, 1084], [374, 1138, 1162, 1175], [1041, 1227, 1078, 1267], [1096, 1227, 1506, 1268], [374, 1315, 2175, 1360], [376, 1373, 1286, 1410], [789, 1462, 949, 1503], [952, 1456, 974, 1476], [980, 1462, 1215, 1503], [1151, 1500, 1213, 1522], [1225, 1474, 1243, 1493], [1247, 1456, 1269, 1476], [1274, 1462, 1560, 1503], [1565, 1462, 1576, 1475], [1583, 1453, 1758, 1503], [377, 1572, 2175, 1609], [377, 1623, 1416, 1660], [376, 1737, 1021, 1781], [374, 1822, 698, 1851], [702, 1813, 733, 1833], [701, 1822, 2175, 1860], [375, 1873, 482, 1901], [889, 1924, 979, 1958], [1039, 1916, 1050, 1935], [1038, 1915, 1141, 1966], [1145, 1921, 1188, 1962], [1195, 1916, 1208, 1935], [1195, 1933, 1290, 1962], [1292, 1915, 1314, 1935], [1319, 1921, 1657, 1962], [2076, 1924, 2173, 1959], [374, 1999, 2173, 2036], [375, 2047, 2173, 2088], [376, 2101, 2173, 2138], [376, 2152, 525, 2180], [376, 2280, 1493, 2333], [373, 2387, 2173, 2424], [376, 2438, 1355, 2475], [376, 2552, 887, 2596], [374, 2637, 2173, 2674], [377, 2688, 1063, 2725], [1024, 2785, 1288, 2826], [1301, 2770, 1387, 2835], [1360, 2822, 1411, 2841], [1423, 2785, 1522, 2826], [2097, 2788, 2173, 2823], [1259, 2935, 1294, 2963], [374, 242, 1183, 277], [437, 292, 2174, 329], [376, 343, 2174, 380], [376, 393, 2173, 431], [374, 445, 2175, 482], [376, 490, 835, 535], [808, 493, 2175, 536], [375, 546, 2173, 583], [376, 597, 661, 634], [842, 653, 1191, 694], [1119, 704, 1137, 717], [1248, 649, 1259, 668], [1247, 648, 1428, 699], [1415, 660, 1470, 695], [1484, 638, 1570, 703], [1543, 690, 1593, 709], [1606, 653, 1705, 694], [2097, 656, 2173, 691], [375, 751, 1350, 793], [1368, 751, 2172, 788], [376, 799, 2179, 840], [855, 920, 1292, 961], [1048, 999, 1086, 1037], [1235, 1102, 1678, 1147], [1459, 1334, 1533, 1346], [1091, 1306, 1250, 1340], [1096, 1352, 1244, 1384], [1279, 1306, 1438, 1340], [1284, 1352, 1432, 1384], [1554, 1306, 1713, 1340], [1559, 1352, 1707, 1384], [889, 1088, 1039, 1115], [890, 1133, 1038, 1165], [376, 1453, 1766, 1491], [1742, 1454, 2173, 1493], [376, 1503, 2176, 1537], [376, 1549, 2174, 1583], [375, 1596, 1328, 1630], [438, 1692, 2174, 1730], [377, 1743, 2174, 1780], [376, 1794, 2175, 1831], [374, 1844, 2174, 1881], [376, 1895, 2174, 1932], [374, 1946, 1493, 1983], [376, 2057, 907, 2095], [374, 2136, 1432, 2173], [968, 2229, 1035, 2257], [992, 2269, 1010, 2282], [1092, 2221, 1103, 2240], [1091, 2221, 1272, 2271], [1259, 2226, 1579, 2267], [374, 2332, 2177, 2369], [374, 2383, 2174, 2420], [374, 2433, 894, 2470], [438, 2484, 2173, 2521], [376, 2535, 2174, 2572], [376, 2586, 2174, 2623], [377, 2637, 544, 2666], [438, 2687, 2174, 2724], [373, 2738, 2177, 2775], [376, 2789, 2177, 2826], [1259, 2935, 1293, 2964], [373, 239, 893, 277], [417, 296, 1003, 333], [1010, 320, 1015, 324], [417, 347, 1058, 383], [417, 397, 981, 435], [479, 449, 1064, 491], [1074, 446, 1243, 487], [479, 503, 983, 537], [479, 550, 1110, 593], [1121, 547, 1283, 588], [479, 605, 1020, 638], [479, 652, 652, 683], [417, 702, 585, 732], [417, 753, 603, 788], [373, 867, 990, 905], [417, 923, 1090, 960], [1096, 947, 1101, 951], [417, 968, 757, 1010], [747, 974, 1250, 1013], [417, 1024, 1004, 1062], [479, 1075, 958, 1113], [540, 1120, 575, 1163], [566, 1136, 741, 1169], [751, 1120, 798, 1165], [787, 1124, 814, 1165], [479, 1176, 605, 1206], [480, 1237, 604, 1265], [632, 1221, 643, 1240], [624, 1257, 651, 1270], [666, 1225, 705, 1267], [709, 1222, 763, 1269], [754, 1248, 764, 1266], [479, 1278, 958, 1316], [543, 1324, 575, 1358], [565, 1324, 845, 1371], [834, 1324, 935, 1368], [926, 1350, 936, 1368], [479, 1380, 605, 1410], [479, 1431, 641, 1462], [417, 1481, 585, 1511], [417, 1533, 591, 1567], [375, 1682, 2174, 1719], [376, 1732, 1771, 1770], [376, 1843, 1357, 1881], [374, 1923, 2175, 1960], [376, 1974, 949, 2008], [1087, 2025, 1154, 2053], [1111, 2065, 1129, 2078], [1206, 2022, 1460, 2063], [2097, 2025, 2173, 2060], [377, 2111, 970, 2152], [991, 2112, 1011, 2151], [987, 2110, 2173, 2151], [377, 2165, 892, 2202], [1045, 2225, 1170, 2253], [1192, 2208, 1203, 2227], [1191, 2213, 1503, 2258], [2097, 2216, 2173, 2251], [374, 2291, 2175, 2336], [375, 2342, 2173, 2379], [376, 2393, 2173, 2430], [377, 2444, 1069, 2481], [438, 2494, 2174, 2532], [376, 2538, 2010, 2583], [1993, 2545, 2174, 2580], [376, 2596, 2162, 2633], [865, 2686, 1214, 2727], [1142, 2737, 1160, 2750], [1272, 2681, 1283, 2700], [1271, 2686, 1354, 2731], [1361, 2680, 1374, 2699], [1361, 2686, 1681, 2727], [1259, 2935, 1294, 2964], [374, 242, 1216, 279], [917, 332, 984, 360], [931, 367, 971, 393], [997, 329, 1428, 370], [1435, 347, 1444, 351], [1430, 331, 1630, 371], [2097, 331, 2173, 367], [374, 442, 2174, 479], [376, 492, 2173, 530], [376, 543, 1685, 580], [1691, 558, 1700, 562], [1686, 543, 2175, 582], [1035, 634, 1102, 662], [1059, 674, 1077, 687], [1154, 632, 1220, 668], [1227, 659, 1234, 662], [1223, 664, 1247, 679], [1260, 631, 1435, 679], [1448, 631, 1511, 672], [376, 736, 2174, 773], [375, 785, 1809, 823], [993, 876, 1150, 922], [1163, 874, 1457, 915], [1464, 902, 1471, 905], [1460, 907, 1484, 922], [1496, 874, 1554, 915], [2097, 877, 2173, 912], [374, 968, 2175, 1005], [376, 1019, 2174, 1056], [376, 1070, 2174, 1107], [376, 1120, 495, 1157], [836, 1211, 917, 1256], [929, 1208, 1221, 1253], [1232, 1208, 1293, 1249], [810, 1280, 890, 1314], [897, 1305, 904, 1308], [893, 1310, 917, 1325], [929, 1277, 1221, 1322], [1232, 1277, 1556, 1322], [1567, 1277, 1737, 1318], [374, 1369, 2174, 1420], [374, 1427, 2173, 1464], [376, 1475, 827, 1512], [834, 1502, 841, 1505], [830, 1507, 854, 1522], [866, 1475, 950, 1522], [960, 1477, 1931, 1514], [438, 1528, 2174, 1565], [376, 1579, 2178, 1616], [373, 1676, 1410, 1714], [417, 1733, 1816, 1770], [1822, 1757, 1827, 1761], [417, 1784, 715, 1819], [721, 1784, 839, 1818], [417, 1835, 950, 1872], [459, 1896, 539, 1930], [545, 1920, 552, 1923], [542, 1925, 566, 1940], [578, 1893, 627, 1934], [654, 1880, 691, 1900], [657, 1900, 896, 1938], [906, 1893, 1076, 1934], [459, 1964, 540, 2009], [552, 1961, 601, 2002], [628, 1949, 665, 1969], [631, 1973, 870, 2006], [880, 1961, 941, 2002], [460, 2032, 539, 2067], [546, 2057, 553, 2060], [542, 2062, 566, 2077], [578, 2029, 627, 2070], [654, 2017, 692, 2037], [658, 2032, 814, 2067], [821, 2057, 828, 2060], [817, 2062, 841, 2077], [854, 2029, 990, 2070], [460, 2101, 540, 2145], [552, 2098, 601, 2139], [628, 2085, 666, 2105], [632, 2101, 789, 2145], [802, 2098, 938, 2139], [417, 2151, 981, 2189], [480, 2211, 599, 2240], [621, 2195, 632, 2214], [620, 2226, 633, 2245], [655, 2195, 746, 2245], [752, 2227, 759, 2230], [749, 2232, 773, 2247], [783, 2202, 863, 2247], [883, 2202, 943, 2233], [945, 2195, 1007, 2245], [479, 2253, 652, 2284], [417, 2303, 585, 2333], [418, 2354, 575, 2399], [587, 2352, 872, 2393], [879, 2379, 886, 2382], [875, 2384, 899, 2400], [912, 2352, 970, 2393], [417, 2405, 594, 2435], [613, 2405, 761, 2434], [376, 2578, 1460, 2616], [374, 2658, 2174, 2695], [376, 2705, 2172, 2746], [376, 2759, 2179, 2796], [374, 2810, 1502, 2847], [1516, 2804, 1586, 2849], [1559, 2807, 2175, 2851], [1255, 2935, 1295, 2964], [373, 239, 1435, 277], [417, 296, 1090, 333], [1096, 320, 1101, 324], [417, 340, 710, 382], [700, 346, 1198, 386], [417, 396, 1004, 434], [480, 468, 604, 496], [624, 447, 666, 471], [671, 443, 728, 472], [706, 443, 787, 474], [790, 438, 797, 452], [790, 447, 862, 473], [866, 438, 873, 452], [865, 443, 887, 473], [715, 482, 800, 507], [898, 483, 903, 487], [479, 509, 958, 547], [543, 555, 575, 589], [565, 570, 735, 599], [724, 587, 767, 614], [777, 558, 819, 599], [830, 553, 841, 572], [828, 555, 887, 609], [878, 558, 1039, 599], [542, 618, 579, 652], [570, 618, 889, 666], [878, 621, 1080, 666], [479, 674, 605, 704], [479, 726, 641, 757], [417, 776, 585, 806], [417, 828, 591, 862], [375, 975, 2174, 1012], [376, 1025, 562, 1062], [557, 1146, 624, 1174], [581, 1186, 599, 1199], [690, 1109, 717, 1122], [676, 1135, 732, 1193], [678, 1204, 728, 1223], [743, 1143, 876, 1184], [937, 1146, 1004, 1174], [891, 1186, 1047, 1205], [1116, 1109, 1143, 1122], [1101, 1135, 1157, 1193], [1103, 1204, 1154, 1223], [1168, 1143, 1735, 1184], [848, 1294, 876, 1311], [937, 1285, 1004, 1313], [891, 1324, 1047, 1343], [1090, 1294, 1165, 1313], [1059, 1324, 1193, 1343], [1261, 1248, 1288, 1261], [1247, 1273, 1303, 1331], [1249, 1342, 1299, 1361], [1319, 1264, 1518, 1339], [1520, 1275, 1542, 1295], [1520, 1282, 1732, 1323], [1749, 1266, 1769, 1293], [1750, 1313, 1767, 1341], [1780, 1282, 1946, 1323], [1952, 1264, 1989, 1339], [374, 1409, 2174, 1446], [376, 1460, 1059, 1497], [438, 1510, 2173, 1548], [377, 1562, 2173, 1599], [376, 1612, 618, 1640], [497, 1699, 846, 1740], [774, 1750, 792, 1763], [904, 1695, 915, 1714], [903, 1694, 1083, 1745], [1070, 1706, 1126, 1741], [1139, 1684, 1225, 1749], [1198, 1736, 1248, 1755], [1261, 1699, 1360, 1740], [667, 1834, 695, 1851], [756, 1825, 823, 1853], [710, 1864, 866, 1883], [908, 1834, 984, 1853], [878, 1864, 1012, 1883], [1072, 1817, 1083, 1836], [1071, 1816, 1251, 1867], [1238, 1829, 1294, 1863], [1322, 1788, 1349, 1801], [1307, 1813, 1363, 1871], [1310, 1883, 1360, 1902], [1379, 1805, 1578, 1880], [1580, 1815, 1602, 1835], [1580, 1822, 1792, 1863], [1810, 1807, 1830, 1834], [1811, 1853, 1828, 1881], [1840, 1822, 2006, 1863], [2012, 1805, 2050, 1880], [374, 1949, 2173, 1986], [377, 2000, 1641, 2037], [376, 2110, 928, 2148], [374, 2190, 2174, 2227], [376, 2241, 584, 2279], [573, 2274, 580, 2288], [594, 2265, 599, 2269], [617, 2241, 2174, 2278], [375, 2292, 2173, 2329], [376, 2342, 1323, 2379], [438, 2393, 2176, 2430], [379, 2444, 1089, 2481], [1072, 2534, 1139, 2562], [1096, 2574, 1114, 2587], [1190, 2531, 1475, 2572], [376, 2634, 2173, 2672], [374, 2685, 1377, 2722], [943, 2775, 1010, 2803], [967, 2815, 985, 2828], [1019, 2784, 1094, 2803], [1047, 2815, 1065, 2834], [1141, 2772, 1236, 2813], [1241, 2766, 1263, 2786], [1267, 2772, 1517, 2813], [1521, 2772, 1532, 2785], [1541, 2772, 1604, 2813], [1255, 2935, 1291, 2963], [374, 241, 2180, 279], [376, 292, 989, 329], [999, 382, 1509, 423], [997, 445, 1436, 487], [1440, 445, 1451, 458], [1457, 445, 1549, 486], [1002, 514, 1017, 516], [997, 508, 1507, 549], [374, 603, 2174, 641], [375, 653, 2174, 691], [379, 705, 2173, 742], [376, 756, 2174, 793], [377, 807, 2175, 844], [377, 857, 2179, 896], [437, 908, 2171, 945], [376, 959, 1014, 996], [925, 1077, 952, 1090], [911, 1102, 967, 1160], [913, 1172, 963, 1191], [977, 1111, 1154, 1152], [1174, 1044, 1197, 1119], [1174, 1119, 1179, 1144], [1174, 1144, 1197, 1219], [1213, 1044, 1226, 1119], [1213, 1119, 1215, 1144], [1213, 1144, 1226, 1219], [1256, 1049, 1308, 1084], [1281, 1118, 1286, 1122], [1281, 1134, 1286, 1138], [1281, 1151, 1286, 1155], [1249, 1178, 1316, 1212], [1340, 1044, 1354, 1119], [1351, 1119, 1354, 1144], [1340, 1123, 1399, 1219], [1403, 1044, 1426, 1119], [1422, 1119, 1426, 1144], [1403, 1111, 1637, 1219], [374, 1267, 1758, 1304], [975, 1356, 1360, 1397], [1382, 1352, 1393, 1371], [1381, 1351, 1561, 1402], [1548, 1379, 1573, 1398], [1024, 1452, 1106, 1480], [1130, 1420, 1276, 1520], [1165, 1478, 1277, 1509], [1300, 1420, 1336, 1520], [374, 1567, 2179, 1604], [374, 1617, 2175, 1655], [375, 1669, 816, 1714], [824, 1687, 833, 1696], [824, 1702, 833, 1716], [854, 1678, 1096, 1717], [1116, 1669, 1952, 1711], [438, 1719, 1717, 1756], [975, 1843, 1043, 1871], [999, 1883, 1017, 1896], [1094, 1840, 1347, 1881], [1375, 1806, 1402, 1819], [1361, 1831, 1417, 1889], [1363, 1901, 1413, 1920], [1427, 1840, 1571, 1881], [377, 1973, 1216, 2014], [1240, 1969, 1251, 1988], [1239, 1970, 1419, 2019], [1406, 1973, 2175, 2015], [377, 2027, 752, 2064], [781, 2157, 796, 2159], [777, 2164, 800, 2183], [803, 2146, 854, 2168], [872, 2164, 1115, 2199], [1118, 2147, 1128, 2165], [1144, 2172, 1170, 2173], [1184, 2152, 1306, 2193], [1309, 2147, 1319, 2165], [1325, 2152, 1411, 2193], [1436, 2118, 1463, 2131], [1422, 2143, 1478, 2201], [1424, 2213, 1474, 2232], [1489, 2151, 1532, 2183], [1519, 2164, 1564, 2193], [1566, 2147, 1576, 2165], [1566, 2174, 1575, 2193], [1581, 2110, 1603, 2235], [769, 2263, 961, 2297], [964, 2252, 1221, 2298], [1224, 2253, 1234, 2271], [781, 2331, 796, 2333], [775, 2337, 801, 2356], [803, 2320, 854, 2342], [803, 2337, 1047, 2368], [1037, 2362, 1044, 2376], [1058, 2325, 1097, 2366], [1099, 2321, 1109, 2339], [1099, 2325, 1779, 2367], [775, 2410, 801, 2429], [803, 2392, 854, 2414], [803, 2404, 963, 2441], [965, 2392, 1016, 2414], [965, 2398, 1223, 2441], [1226, 2394, 1236, 2412], [1226, 2400, 1538, 2439], [376, 2491, 2175, 2532], [376, 2541, 2173, 2582], [376, 2594, 2059, 2634], [1255, 2935, 1295, 2963], [438, 241, 2174, 279], [375, 292, 911, 329], [827, 376, 894, 404], [851, 416, 869, 429], [952, 369, 963, 388], [951, 368, 1131, 419], [1118, 373, 1438, 415], [789, 458, 894, 486], [830, 492, 890, 519], [949, 450, 1104, 496], [1091, 455, 1385, 496], [1388, 453, 1396, 468], [1401, 455, 1624, 496], [1628, 453, 1636, 468], [1642, 482, 1646, 494], [789, 548, 894, 576], [830, 582, 890, 609], [903, 557, 979, 576], [932, 588, 948, 601], [1033, 540, 1189, 586], [1176, 545, 1469, 586], [1473, 543, 1481, 558], [1485, 545, 1572, 586], [1576, 539, 1598, 559], [1605, 545, 1720, 586], [1724, 543, 1732, 558], [1736, 545, 1758, 586], [789, 638, 894, 666], [851, 678, 869, 691], [903, 647, 979, 666], [932, 678, 948, 691], [1033, 630, 1189, 676], [1176, 635, 1409, 676], [1414, 635, 1425, 648], [1411, 635, 1563, 676], [1566, 629, 1588, 649], [1593, 647, 1624, 666], [374, 738, 1184, 768], [1171, 732, 1512, 778], [1528, 756, 1554, 757], [1569, 736, 2174, 777], [376, 790, 976, 827], [853, 883, 873, 902], [876, 866, 927, 888], [946, 883, 1131, 912], [1120, 907, 1130, 921], [1166, 883, 1186, 902], [1190, 867, 1200, 885], [1215, 867, 1335, 912], [1338, 867, 1348, 885], [1363, 867, 1479, 912], [1482, 867, 1492, 885], [1508, 891, 1534, 892], [1549, 883, 1572, 902], [1575, 866, 1627, 885], [1633, 871, 1659, 912], [1666, 866, 1698, 916], [850, 955, 873, 974], [876, 937, 927, 959], [946, 955, 1216, 991], [1206, 955, 1343, 993], [1347, 938, 1357, 956], [1373, 963, 1399, 964], [1412, 956, 1432, 974], [1435, 938, 1445, 956], [1451, 955, 1471, 974], [1474, 937, 1543, 988], [1560, 970, 1564, 974], [374, 1029, 2060, 1072], [2079, 1038, 2109, 1057], [551, 1152, 630, 1179], [632, 1170, 717, 1199], [727, 1156, 738, 1175], [726, 1168, 848, 1206], [838, 1140, 1117, 1201], [1045, 1191, 1063, 1204], [1126, 1140, 1261, 1181], [1282, 1109, 1412, 1146], [1339, 1171, 1356, 1199], [1427, 1140, 1629, 1181], [1634, 1135, 1671, 1154], [1677, 1135, 1731, 1181], [1740, 1140, 1850, 1181], [1855, 1135, 1892, 1154], [1897, 1140, 1963, 1181], [1971, 1135, 1984, 1154], [1971, 1162, 1996, 1181], [949, 1241, 1263, 1278], [1300, 1229, 1404, 1270], [1409, 1224, 1446, 1243], [1453, 1224, 1507, 1270], [1515, 1229, 1625, 1270], [1630, 1224, 1667, 1243], [1673, 1225, 1757, 1275], [376, 1316, 2174, 1353], [376, 1367, 2173, 1404], [377, 1417, 1545, 1455], [1531, 1418, 2174, 1456], [376, 1469, 937, 1506], [763, 1584, 891, 1613], [880, 1608, 890, 1622], [909, 1572, 1139, 1613], [1156, 1543, 1304, 1643], [1232, 1623, 1250, 1636], [1313, 1572, 1448, 1613], [1466, 1557, 1488, 1575], [1469, 1604, 1486, 1632], [1500, 1572, 1617, 1613], [1622, 1567, 1659, 1586], [1664, 1572, 1714, 1613], [1722, 1567, 1735, 1586], [1722, 1594, 1735, 1613], [1739, 1543, 1784, 1643], [987, 1676, 1315, 1709], [1325, 1664, 1361, 1705], [1365, 1659, 1402, 1678], [1408, 1664, 1467, 1705], [376, 1751, 1519, 1793], [1528, 1750, 2177, 1788], [376, 1802, 2179, 1839], [376, 1914, 931, 1949], [376, 1997, 1828, 2036], [460, 2106, 504, 2134], [507, 2096, 520, 2115], [505, 2102, 678, 2149], [694, 2086, 785, 2151], [753, 2138, 803, 2157], [815, 2080, 969, 2159], [893, 2138, 948, 2163], [986, 2073, 1316, 2159], [1330, 2109, 1358, 2136], [1372, 2086, 1462, 2151], [1430, 2138, 1485, 2163], [1496, 2080, 1651, 2159], [1575, 2138, 1625, 2157], [1667, 2073, 1996, 2159], [2003, 2129, 2007, 2133], [2097, 2105, 2173, 2140], [374, 2210, 837, 2247], [841, 2200, 873, 2220], [838, 2210, 1603, 2254], [1606, 2200, 1638, 2220], [1605, 2210, 2179, 2254], [376, 2260, 2174, 2297], [375, 2311, 616, 2340], [820, 2353, 900, 2391], [866, 2359, 1027, 2406], [1043, 2344, 1120, 2409], [1102, 2396, 1152, 2415], [1169, 2359, 1386, 2402], [1399, 2344, 1485, 2409], [1457, 2396, 1512, 2421], [1529, 2359, 1726, 2402], [2097, 2362, 2173, 2397], [374, 2444, 1798, 2494], [1763, 2479, 1805, 2498], [1811, 2454, 2163, 2491], [960, 2544, 1058, 2578], [1120, 2537, 1131, 2556], [1119, 2536, 1327, 2587], [1312, 2535, 1493, 2582], [1458, 2541, 1586, 2588], [2097, 2544, 2173, 2579], [374, 2643, 1091, 2684], [1110, 2627, 1187, 2702], [1191, 2640, 1265, 2692], [1251, 2666, 1284, 2691], [1303, 2643, 2177, 2684], [377, 2706, 1032, 2743], [682, 2800, 780, 2835], [841, 2793, 852, 2812], [840, 2792, 1048, 2843], [1033, 2799, 1126, 2839], [1141, 2780, 1217, 2855], [1220, 2834, 1229, 2853], [1244, 2797, 1415, 2841], [1420, 2780, 1517, 2855], [1532, 2780, 1608, 2855], [1610, 2834, 1623, 2859], [1639, 2797, 1822, 2841], [1827, 2780, 1865, 2855], [2076, 2800, 2173, 2835], [1255, 2935, 1293, 2964], [374, 232, 1133, 279], [1098, 242, 2172, 286], [377, 292, 2177, 329], [376, 334, 1778, 380], [1744, 343, 2174, 387], [377, 394, 2174, 431], [377, 445, 1445, 482], [376, 559, 989, 603], [376, 634, 788, 680], [754, 643, 1887, 688], [438, 702, 980, 731], [983, 691, 1036, 720], [1013, 700, 1100, 727], [1109, 702, 2175, 743], [376, 753, 947, 790], [435, 882, 480, 910], [482, 879, 509, 892], [482, 866, 632, 925], [598, 894, 626, 903], [669, 844, 696, 857], [655, 870, 711, 928], [655, 939, 711, 959], [791, 870, 847, 928], [723, 939, 914, 968], [925, 837, 1021, 936], [955, 870, 1011, 928], [954, 939, 1009, 964], [1036, 878, 1441, 923], [1459, 898, 1485, 899], [1498, 878, 1865, 923], [1870, 879, 1901, 898], [1909, 850, 1997, 936], [2007, 905, 2011, 917], [2076, 881, 2173, 916], [374, 1016, 2174, 1057], [376, 1069, 1110, 1107], [438, 1118, 2174, 1159], [376, 1171, 1899, 1209], [922, 1272, 967, 1300], [968, 1269, 995, 1282], [968, 1268, 1100, 1315], [1116, 1253, 1202, 1318], [1176, 1304, 1232, 1324], [1246, 1260, 1302, 1318], [1305, 1302, 1358, 1331], [1375, 1268, 1624, 1313], [2076, 1271, 2173, 1306], [374, 1375, 2173, 1419], [376, 1426, 2163, 1464], [1009, 1518, 1097, 1552], [1125, 1511, 1136, 1530], [1124, 1510, 1307, 1560], [1292, 1517, 1438, 1556], [1439, 1516, 1466, 1529], [1439, 1515, 1538, 1562], [2076, 1518, 2173, 1553], [374, 1608, 2179, 1646], [377, 1660, 1216, 1697], [438, 1711, 2174, 1748], [376, 1752, 1099, 1798], [1113, 1765, 1203, 1789], [860, 1860, 948, 1895], [976, 1853, 987, 1872], [975, 1852, 1159, 1903], [1144, 1864, 1201, 1899], [1215, 1842, 1301, 1907], [1275, 1893, 1331, 1913], [1344, 1849, 1400, 1907], [1403, 1891, 1457, 1920], [1470, 1851, 1550, 1889], [1515, 1869, 1654, 1905], [1661, 1853, 1686, 1903], [2076, 1860, 2173, 1895], [374, 1965, 2173, 2002], [376, 2016, 802, 2045], [805, 2007, 837, 2027], [851, 2016, 2174, 2050], [376, 2067, 528, 2096], [532, 2057, 564, 2077], [578, 2066, 2175, 2104], [377, 2118, 2175, 2155], [376, 2168, 481, 2197], [482, 2166, 509, 2179], [482, 2159, 1045, 2213], [1059, 2168, 2174, 2205], [376, 2219, 2172, 2256], [374, 2270, 1528, 2307], [376, 2398, 1235, 2451], [373, 2505, 2173, 2542], [374, 2556, 1839, 2593], [1843, 2547, 1875, 2567], [1843, 2556, 2173, 2594], [376, 2607, 1430, 2641], [438, 2658, 2174, 2695], [376, 2708, 2176, 2745], [375, 2759, 2244, 2796], [376, 2810, 552, 2847], [1255, 2935, 1295, 2963], [376, 237, 544, 272], [547, 228, 584, 251], [548, 237, 1231, 284], [377, 313, 1924, 359], [1892, 326, 2178, 360], [376, 373, 2172, 410], [376, 424, 452, 452], [376, 534, 1189, 572], [373, 614, 1364, 651], [419, 670, 2175, 715], [468, 725, 2173, 766], [469, 778, 513, 814], [405, 845, 2179, 888], [468, 898, 1963, 939], [807, 1693, 968, 1715], [640, 1653, 679, 1679], [877, 1653, 916, 1679], [1112, 1653, 1151, 1679], [450, 1405, 471, 1421], [450, 1401, 471, 1403], [456, 1376, 471, 1396], [456, 1359, 472, 1373], [450, 1343, 477, 1349], [456, 1328, 472, 1340], [450, 1320, 477, 1326], [486, 1539, 531, 1564], [486, 1364, 531, 1390], [492, 1188, 531, 1214], [711, 1049, 1026, 1079], [621, 1111, 796, 1132], [620, 1138, 809, 1160], [621, 1166, 840, 1188], [621, 1194, 801, 1216], [620, 1223, 692, 1241], [619, 1252, 703, 1269], [620, 1279, 676, 1297], [620, 1307, 805, 1329], [621, 1336, 740, 1357], [825, 1749, 858, 1777], [1674, 1692, 1803, 1719], [1478, 1653, 1523, 1679], [1718, 1653, 1757, 1679], [1953, 1653, 1992, 1679], [1291, 1405, 1312, 1421], [1291, 1401, 1312, 1403], [1297, 1376, 1312, 1396], [1297, 1359, 1313, 1373], [1291, 1343, 1318, 1349], [1297, 1328, 1313, 1340], [1291, 1320, 1318, 1326], [1327, 1602, 1372, 1627], [1327, 1338, 1372, 1364], [1327, 1074, 1372, 1100], [1513, 1049, 1889, 1079], [1666, 1748, 1700, 1777], [375, 1853, 1698, 1890], [1702, 1843, 1734, 1863], [1702, 1853, 2173, 1891], [377, 1904, 1304, 1941], [437, 2003, 2174, 2040], [376, 2054, 894, 2082], [439, 2138, 1394, 2175], [439, 2205, 1507, 2242], [439, 2272, 1695, 2309], [439, 2340, 1401, 2377], [439, 2407, 1172, 2444], [439, 2474, 1876, 2512], [1880, 2465, 1911, 2485], [1880, 2475, 2179, 2513], [439, 2542, 2174, 2579], [479, 2593, 792, 2630], [439, 2659, 1985, 2697], [439, 2727, 2175, 2765], [478, 2779, 1075, 2816], [1255, 2934, 1293, 2964], [438, 242, 2174, 279], [375, 292, 2174, 329], [376, 343, 2174, 380], [376, 394, 1938, 431], [438, 439, 2174, 482], [376, 495, 2137, 533], [438, 546, 2173, 583], [377, 597, 842, 626], [439, 677, 2174, 714], [479, 728, 1225, 765], [439, 809, 2174, 846], [479, 854, 2173, 898], [480, 911, 602, 948], [439, 990, 2175, 1031], [479, 1044, 2173, 1081], [479, 1094, 2174, 1131], [478, 1145, 2175, 1182], [479, 1196, 1067, 1225], [439, 1278, 2175, 1315], [479, 1329, 2173, 1366], [479, 1379, 2175, 1416], [479, 1430, 2173, 1467], [478, 1481, 2177, 1518], [479, 1532, 1406, 1569], [376, 1641, 848, 1671], [374, 1715, 2174, 1759], [374, 1772, 2173, 1809], [377, 1823, 2174, 1860], [376, 1874, 2173, 1911], [375, 1924, 1779, 1961], [376, 2034, 1086, 2072], [376, 2114, 2174, 2151], [377, 2165, 2175, 2202], [376, 2215, 2174, 2252], [376, 2266, 2173, 2303], [377, 2317, 2179, 2354], [374, 2368, 2176, 2405], [376, 2419, 2173, 2456], [376, 2469, 2173, 2506], [376, 2520, 1361, 2557], [438, 2571, 2177, 2608], [374, 2622, 2174, 2659], [376, 2673, 1379, 2710], [439, 2759, 2173, 2796], [478, 2810, 2177, 2847], [1255, 2935, 1294, 2964], [375, 1603, 1678, 1640], [1682, 1594, 1714, 1614], [1682, 1603, 2173, 1641], [377, 1654, 1799, 1691], [670, 1792, 1606, 1829], [1610, 1782, 1641, 1802], [1610, 1792, 1865, 1830], [782, 1869, 906, 1896], [1255, 1868, 1757, 1905], [782, 1959, 1123, 1996], [1285, 1959, 1768, 1996], [782, 2009, 1747, 2047], [479, 2166, 2174, 2203], [479, 2217, 2174, 2254], [478, 2268, 2174, 2305], [479, 2319, 2173, 2356], [479, 2374, 569, 2398], [439, 2454, 2174, 2491], [478, 2504, 2173, 2541], [480, 2555, 1327, 2592], [439, 2639, 2175, 2676], [478, 2690, 2175, 2727], [479, 2741, 1464, 2778], [1255, 2935, 1294, 2963], [376, 1603, 2129, 1640], [2133, 1594, 2164, 1614], [2133, 1620, 2179, 1641], [375, 1654, 1622, 1691], [376, 1787, 1226, 1825], [374, 1866, 2177, 1903], [374, 1917, 2173, 1954], [376, 1968, 2173, 2005], [375, 2023, 623, 2056], [439, 2070, 2173, 2107], [377, 2120, 716, 2149], [419, 2181, 2174, 2222], [468, 2232, 2173, 2273], [468, 2285, 1161, 2322], [405, 2356, 2174, 2394], [467, 2405, 1115, 2446], [438, 2492, 2174, 2529], [374, 2543, 2172, 2580], [375, 2593, 1594, 2630], [437, 2643, 2175, 2681], [376, 2695, 2157, 2732], [1255, 2935, 1293, 2964], [376, 1603, 2129, 1640], [2133, 1594, 2164, 1614], [2133, 1620, 2179, 1641], [375, 1654, 2173, 1691], [375, 1705, 530, 1742], [376, 1832, 1302, 1876], [376, 1916, 1058, 1954], [375, 1996, 836, 2025], [839, 1987, 871, 2007], [838, 1996, 2174, 2034], [375, 2047, 2174, 2084], [377, 2092, 2176, 2135], [376, 2142, 2173, 2185], [376, 2199, 1409, 2236], [438, 2250, 2174, 2287], [377, 2301, 2174, 2338], [376, 2349, 2174, 2390], [377, 2402, 2177, 2440], [376, 2452, 2173, 2490], [377, 2504, 2174, 2541], [377, 2555, 2043, 2592], [438, 2606, 2174, 2643], [377, 2657, 2176, 2694], [377, 2704, 2174, 2745], [374, 2757, 2174, 2795], [1255, 2935, 1294, 2964], [645, 873, 670, 893], [672, 864, 679, 877], [878, 873, 902, 893], [905, 864, 913, 877], [1110, 873, 1135, 893], [1138, 864, 1146, 877], [494, 769, 519, 789], [523, 759, 540, 772], [494, 614, 519, 634], [523, 605, 539, 618], [494, 459, 519, 479], [522, 450, 530, 463], [494, 305, 519, 325], [522, 296, 529, 309], [807, 899, 983, 923], [458, 624, 477, 643], [457, 618, 477, 621], [462, 589, 477, 614], [462, 573, 477, 589], [457, 555, 481, 562], [462, 540, 477, 553], [457, 529, 481, 536], [714, 261, 1071, 299], [614, 331, 958, 357], [614, 362, 938, 388], [612, 394, 878, 420], [612, 426, 859, 452], [825, 961, 858, 989], [1481, 872, 1506, 892], [1508, 862, 1527, 875], [1719, 872, 1744, 892], [1746, 862, 1754, 875], [1951, 872, 1976, 892], [1979, 862, 1987, 875], [1335, 845, 1360, 865], [1363, 834, 1381, 847], [1335, 665, 1360, 685], [1363, 655, 1381, 668], [1335, 486, 1360, 506], [1363, 475, 1381, 488], [1335, 306, 1360, 326], [1363, 296, 1378, 309], [1673, 898, 1799, 928], [1295, 623, 1318, 641], [1295, 618, 1318, 621], [1301, 592, 1318, 614], [1301, 574, 1319, 589], [1295, 555, 1325, 562], [1301, 540, 1319, 553], [1295, 530, 1325, 537], [1522, 262, 1948, 300], [1455, 332, 1799, 357], [1455, 363, 1780, 388], [1454, 394, 1719, 420], [1454, 426, 1700, 452], [1666, 960, 1700, 989], [376, 1056, 2175, 1093], [374, 1097, 454, 1135], [422, 1106, 1840, 1145], [645, 1841, 670, 1861], [673, 1831, 681, 1844], [878, 1841, 903, 1861], [905, 1831, 913, 1844], [1111, 1841, 1135, 1861], [1138, 1831, 1146, 1844], [494, 1723, 519, 1743], [522, 1713, 540, 1726], [494, 1633, 519, 1653], [522, 1623, 540, 1636], [494, 1543, 519, 1563], [522, 1533, 540, 1546], [494, 1453, 519, 1473], [522, 1442, 537, 1455], [494, 1363, 519, 1383], [522, 1352, 530, 1365], [494, 1272, 519, 1292], [523, 1262, 527, 1275], [807, 1867, 984, 1891], [454, 1591, 477, 1609], [454, 1586, 477, 1589], [460, 1560, 477, 1582], [460, 1542, 478, 1557], [454, 1523, 484, 1530], [460, 1507, 478, 1520], [454, 1497, 484, 1504], [715, 1229, 1073, 1267], [614, 1297, 669, 1318], [613, 1329, 648, 1350], [614, 1361, 723, 1382], [825, 1927, 858, 1955], [1481, 1839, 1506, 1859], [1508, 1829, 1527, 1842], [1719, 1839, 1744, 1859], [1746, 1829, 1754, 1842], [1952, 1839, 1976, 1859], [1979, 1829, 1987, 1842], [1335, 1749, 1360, 1769], [1363, 1739, 1381, 1752], [1335, 1630, 1360, 1650], [1363, 1620, 1381, 1633], [1335, 1511, 1360, 1531], [1363, 1500, 1381, 1513], [1335, 1392, 1360, 1412], [1363, 1381, 1378, 1394], [1335, 1272, 1360, 1292], [1363, 1262, 1371, 1275], [1673, 1865, 1799, 1895], [1295, 1590, 1318, 1608], [1295, 1585, 1318, 1588], [1301, 1559, 1318, 1581], [1301, 1541, 1319, 1556], [1295, 1521, 1325, 1528], [1301, 1506, 1319, 1519], [1295, 1496, 1325, 1503], [1522, 1229, 1948, 1267], [1455, 1297, 1510, 1318], [1454, 1329, 1490, 1350], [1455, 1361, 1564, 1382], [1666, 1926, 1700, 1955], [376, 2031, 1871, 2068], [1875, 2022, 1907, 2042], [1874, 2031, 2174, 2069], [376, 2082, 1485, 2119], [375, 2215, 2175, 2252], [377, 2266, 1697, 2303], [376, 2377, 1060, 2415], [375, 2456, 839, 2485], [842, 2447, 874, 2467], [839, 2456, 2173, 2501], [376, 2506, 2174, 2548], [377, 2557, 2173, 2595], [376, 2609, 2175, 2646], [376, 2659, 2174, 2697], [376, 2704, 1179, 2748], [1195, 2711, 2172, 2748], [375, 2761, 1747, 2798], [1256, 2935, 1295, 2964], [459, 665, 481, 685], [553, 665, 577, 685], [648, 665, 672, 685], [742, 665, 766, 685], [837, 665, 861, 685], [931, 665, 955, 685], [435, 647, 466, 667], [435, 555, 466, 575], [435, 471, 452, 484], [454, 463, 459, 472], [435, 372, 459, 392], [435, 288, 452, 301], [453, 280, 459, 289], [647, 691, 767, 706], [409, 503, 424, 516], [409, 500, 424, 502], [413, 482, 424, 497], [413, 470, 424, 480], [409, 457, 428, 461], [413, 446, 424, 455], [409, 440, 428, 444], [548, 259, 865, 284], [517, 305, 577, 318], [517, 326, 598, 339], [518, 348, 544, 361], [517, 369, 581, 382], [657, 740, 690, 768], [1048, 665, 1070, 685], [1142, 665, 1166, 685], [1237, 665, 1261, 685], [1331, 665, 1355, 685], [1426, 665, 1450, 685], [1520, 665, 1544, 685], [1024, 647, 1055, 667], [1024, 555, 1055, 575], [1024, 471, 1041, 484], [1043, 463, 1048, 472], [1024, 372, 1048, 392], [1024, 288, 1041, 301], [1042, 280, 1048, 289], [1236, 691, 1356, 706], [998, 503, 1013, 516], [998, 500, 1013, 502], [1002, 482, 1013, 497], [1002, 470, 1013, 480], [998, 457, 1017, 461], [1002, 446, 1013, 455], [998, 440, 1017, 444], [1137, 259, 1453, 284], [1106, 305, 1166, 318], [1106, 326, 1187, 339], [1107, 348, 1133, 361], [1106, 369, 1170, 382], [1245, 739, 1280, 768], [1637, 665, 1659, 685], [1731, 665, 1755, 685], [1826, 665, 1850, 685], [1920, 665, 1944, 685], [2015, 665, 2039, 685], [2109, 665, 2133, 685], [1613, 647, 1644, 667], [1613, 555, 1644, 575], [1613, 471, 1630, 484], [1632, 463, 1637, 472], [1613, 372, 1637, 392], [1613, 288, 1630, 301], [1631, 280, 1637, 289], [1826, 691, 1945, 706], [1587, 503, 1602, 516], [1587, 500, 1602, 502], [1591, 482, 1602, 497], [1591, 470, 1602, 480], [1587, 457, 1606, 461], [1591, 446, 1602, 455], [1587, 440, 1606, 444], [1737, 259, 2031, 284], [1695, 305, 1755, 318], [1695, 326, 1776, 339], [1696, 348, 1722, 361], [1695, 369, 1759, 382], [1835, 740, 1868, 768], [376, 835, 2175, 872], [375, 886, 943, 923], [947, 876, 978, 896], [944, 886, 2179, 930], [376, 937, 849, 974], [466, 1456, 497, 1475], [583, 1456, 613, 1475], [703, 1456, 727, 1475], [820, 1456, 844, 1475], [937, 1456, 961, 1475], [440, 1438, 477, 1457], [440, 1347, 477, 1366], [440, 1257, 477, 1276], [440, 1167, 470, 1186], [440, 1076, 463, 1095], [709, 1478, 719, 1494], [413, 1297, 428, 1309], [417, 1286, 428, 1295], [417, 1274, 428, 1284], [413, 1270, 428, 1272], [417, 1252, 433, 1261], [417, 1240, 428, 1250], [417, 1228, 433, 1238], [535, 1054, 893, 1079], [527, 1099, 586, 1112], [527, 1121, 607, 1134], [528, 1142, 554, 1155], [527, 1163, 590, 1176], [662, 1530, 695, 1558], [1055, 1456, 1086, 1475], [1172, 1456, 1203, 1475], [1292, 1456, 1316, 1475], [1409, 1456, 1433, 1475], [1526, 1456, 1550, 1475], [1029, 1438, 1066, 1457], [1029, 1365, 1066, 1384], [1029, 1293, 1066, 1312], [1029, 1221, 1060, 1240], [1029, 1149, 1053, 1167], [1029, 1076, 1053, 1095], [1299, 1478, 1309, 1494], [1002, 1297, 1017, 1309], [1006, 1286, 1017, 1295], [1006, 1274, 1017, 1284], [1002, 1270, 1017, 1272], [1006, 1252, 1022, 1261], [1006, 1240, 1017, 1250], [1006, 1228, 1022, 1238], [1124, 1054, 1482, 1079], [1116, 1099, 1175, 1112], [1116, 1121, 1196, 1134], [1117, 1142, 1143, 1155], [1116, 1163, 1179, 1176], [1250, 1529, 1285, 1558], [1644, 1456, 1675, 1475], [1761, 1456, 1792, 1475], [1881, 1456, 1905, 1475], [1998, 1456, 2022, 1475], [2115, 1456, 2139, 1475], [1618, 1438, 1655, 1457], [1618, 1347, 1655, 1366], [1618, 1257, 1655, 1276], [1618, 1167, 1649, 1186], [1618, 1076, 1642, 1095], [1888, 1478, 1898, 1494], [1592, 1297, 1607, 1309], [1596, 1286, 1607, 1295], [1596, 1274, 1607, 1284], [1592, 1270, 1607, 1272], [1596, 1252, 1612, 1261], [1596, 1240, 1607, 1250], [1596, 1228, 1612, 1238], [1724, 1054, 2060, 1079], [1706, 1099, 1765, 1112], [1706, 1121, 1785, 1134], [1707, 1142, 1732, 1155], [1706, 1163, 1769, 1176], [1840, 1530, 1873, 1558], [455, 2020, 486, 2040], [573, 2020, 604, 2040], [695, 2020, 719, 2040], [813, 2020, 837, 2040], [931, 2020, 955, 2040], [435, 2001, 466, 2021], [435, 1910, 466, 1930], [435, 1826, 452, 1839], [454, 1818, 459, 1827], [435, 1727, 459, 1747], [435, 1636, 459, 1656], [701, 2043, 712, 2059], [409, 1858, 424, 1871], [409, 1855, 424, 1857], [413, 1837, 424, 1852], [413, 1825, 424, 1835], [409, 1812, 428, 1816], [413, 1801, 424, 1810], [409, 1795, 428, 1799], [525, 1614, 887, 1639], [517, 1660, 577, 1673], [517, 1681, 598, 1694], [518, 1703, 544, 1716], [517, 1725, 581, 1738], [656, 2094, 691, 2123], [1044, 2020, 1075, 2040], [1162, 2020, 1193, 2040], [1284, 2020, 1308, 2040], [1402, 2020, 1426, 2040], [1520, 2020, 1544, 2040], [1024, 2001, 1055, 2021], [1024, 1910, 1055, 1930], [1024, 1826, 1041, 1839], [1043, 1818, 1048, 1827], [1024, 1727, 1048, 1747], [1024, 1636, 1048, 1656], [1290, 2043, 1301, 2059], [998, 1858, 1013, 1871], [998, 1855, 1013, 1857], [1002, 1837, 1013, 1852], [1002, 1825, 1013, 1835], [998, 1812, 1017, 1816], [1002, 1801, 1013, 1810], [998, 1795, 1017, 1799], [1114, 1614, 1476, 1639], [1106, 1660, 1166, 1673], [1106, 1681, 1187, 1694], [1107, 1703, 1133, 1716], [1106, 1725, 1170, 1738], [1246, 2095, 1279, 2123], [1633, 2020, 1664, 2040], [1752, 2020, 1782, 2040], [1873, 2020, 1897, 2040], [1991, 2020, 2015, 2040], [2109, 2020, 2133, 2040], [1613, 2001, 1644, 2021], [1613, 1910, 1644, 1930], [1613, 1826, 1630, 1839], [1632, 1818, 1637, 1827], [1613, 1727, 1637, 1747], [1613, 1636, 1637, 1656], [1880, 2043, 1891, 2059], [1587, 1858, 1602, 1871], [1587, 1855, 1602, 1857], [1591, 1837, 1602, 1852], [1591, 1825, 1602, 1835], [1587, 1812, 1606, 1816], [1591, 1801, 1602, 1810], [1587, 1795, 1606, 1799], [1714, 1614, 2054, 1639], [1695, 1660, 1755, 1673], [1695, 1681, 1776, 1694], [1696, 1703, 1722, 1716], [1695, 1725, 1759, 1738], [1837, 2094, 1866, 2123], [376, 2190, 2174, 2227], [377, 2241, 1477, 2278], [1480, 2231, 1512, 2251], [1477, 2241, 2174, 2285], [376, 2292, 1318, 2329], [438, 2424, 2174, 2465], [377, 2476, 2173, 2513], [376, 2527, 2174, 2564], [375, 2578, 2173, 2615], [377, 2622, 2177, 2665], [376, 2678, 2173, 2720], [375, 2730, 1038, 2767], [1256, 2935, 1291, 2964], [438, 242, 2174, 279], [376, 291, 2173, 329], [377, 342, 2174, 380], [377, 388, 2174, 431], [377, 445, 2172, 482], [377, 496, 2173, 533], [376, 546, 2174, 583], [376, 597, 2137, 634], [376, 708, 1077, 746], [375, 788, 1205, 825], [1209, 778, 1241, 798], [1208, 787, 2179, 826], [375, 837, 2176, 875], [375, 888, 2173, 929], [376, 931, 519, 969], [484, 940, 938, 984], [712, 1602, 744, 1628], [919, 1602, 951, 1628], [1126, 1602, 1158, 1628], [578, 1586, 601, 1604], [603, 1577, 619, 1588], [578, 1507, 601, 1525], [603, 1498, 619, 1509], [578, 1419, 619, 1445], [578, 1340, 616, 1366], [578, 1269, 601, 1287], [603, 1260, 610, 1271], [578, 1190, 601, 1208], [604, 1181, 607, 1192], [578, 1102, 610, 1128], [857, 1634, 1013, 1655], [543, 1392, 563, 1407], [543, 1387, 563, 1389], [548, 1363, 563, 1382], [548, 1347, 564, 1360], [543, 1330, 569, 1336], [548, 1316, 564, 1328], [543, 1308, 569, 1314], [773, 1070, 1096, 1103], [684, 1133, 717, 1152], [870, 1691, 903, 1719], [1458, 1609, 1482, 1627], [1484, 1600, 1500, 1611], [1670, 1609, 1693, 1627], [1695, 1600, 1702, 1611], [1877, 1609, 1900, 1627], [1902, 1600, 1909, 1611], [1329, 1522, 1352, 1540], [1354, 1513, 1370, 1524], [1329, 1308, 1370, 1334], [1329, 1102, 1367, 1128], [1631, 1631, 1742, 1658], [1294, 1391, 1314, 1406], [1294, 1386, 1314, 1388], [1299, 1362, 1314, 1381], [1299, 1346, 1315, 1359], [1294, 1329, 1320, 1335], [1299, 1315, 1315, 1327], [1294, 1307, 1320, 1313], [1494, 1070, 1877, 1103], [1435, 1133, 1468, 1152], [1621, 1690, 1655, 1719], [375, 1793, 1170, 1831], [1173, 1785, 1205, 1805], [1172, 1794, 2174, 1833], [377, 1845, 758, 1882], [376, 1999, 1423, 2037], [373, 2078, 2174, 2115], [376, 2129, 684, 2157], [889, 2180, 956, 2208], [912, 2220, 930, 2233], [1013, 2173, 1024, 2192], [1012, 2172, 1228, 2222], [1215, 2177, 1552, 2218], [1556, 2171, 1587, 2191], [1556, 2177, 1658, 2218], [2097, 2179, 2173, 2215], [374, 2274, 1312, 2312], [1316, 2266, 1347, 2286], [1316, 2275, 2177, 2314], [376, 2326, 2172, 2363], [377, 2376, 2173, 2414], [377, 2428, 609, 2457], [438, 2479, 2174, 2516], [376, 2529, 2177, 2566], [375, 2580, 1174, 2617], [439, 2663, 1293, 2701], [1297, 2655, 1328, 2675], [1297, 2663, 1507, 2703], [439, 2731, 1451, 2772], [1455, 2722, 1486, 2742], [1452, 2732, 2175, 2776], [480, 2782, 1596, 2820], [1597, 2782, 1613, 2801], [1597, 2783, 2175, 2827], [1256, 2935, 1295, 2964], [166, 19, 527, 67], [310, 250, 396, 270], [518, 204, 640, 224], [305, 329, 405, 359], [865, 19, 1322, 67], [1057, 190, 1143, 210], [1253, 192, 1399, 212], [1052, 329, 1152, 359], [1183, 251, 1215, 271], [39, 461, 653, 521], [310, 692, 396, 712], [518, 646, 640, 666], [305, 771, 405, 801], [796, 461, 1396, 521], [1057, 632, 1143, 652], [1253, 634, 1399, 654], [1052, 771, 1152, 801], [1183, 693, 1215, 713], [729, 1132, 1806, 1169], [479, 1271, 717, 1322], [658, 1280, 1594, 1324], [1597, 1274, 1629, 1294], [1594, 1280, 1730, 1328], [1750, 1263, 1872, 1338], [1813, 1252, 2168, 1338], [2175, 1307, 2179, 1311], [479, 1343, 2174, 1383], [480, 1394, 756, 1423], [439, 1460, 1395, 1498], [1399, 1451, 1430, 1471], [1399, 1458, 2172, 1499], [480, 1520, 519, 1562], [523, 1522, 595, 1564], [610, 1503, 808, 1578], [811, 1510, 828, 1524], [811, 1514, 904, 1544], [911, 1503, 2179, 1578], [480, 1582, 1283, 1623], [439, 1652, 1349, 1693], [1353, 1643, 1385, 1663], [1350, 1677, 1396, 1697], [438, 1737, 2173, 1774], [376, 1788, 2174, 1825], [375, 1838, 2174, 1876], [376, 1889, 2173, 1926], [377, 1940, 1600, 1977], [438, 1988, 2180, 2029], [376, 2041, 463, 2076], [466, 2032, 498, 2052], [466, 2039, 1219, 2087], [1234, 2051, 1433, 2084], [1412, 2058, 1469, 2089], [1477, 2066, 1482, 2070], [1507, 2042, 2175, 2079], [375, 2093, 2174, 2130], [376, 2143, 2176, 2180], [377, 2194, 1087, 2231], [376, 2305, 1160, 2343], [374, 2385, 2174, 2422], [375, 2434, 2174, 2472], [377, 2486, 2173, 2523], [376, 2538, 474, 2566], [477, 2527, 509, 2547], [477, 2536, 2173, 2575], [375, 2588, 2174, 2625], [375, 2639, 936, 2676], [437, 2687, 1172, 2726], [1191, 2689, 2174, 2723], [376, 2739, 2175, 2777], [376, 2788, 2179, 2829], [1256, 2935, 1293, 2964], [374, 241, 2171, 279], [377, 283, 1558, 329], [1527, 292, 2175, 331], [377, 343, 2173, 380], [376, 394, 2177, 431], [376, 445, 537, 473], [558, 1024, 587, 1048], [781, 1024, 810, 1048], [337, 913, 374, 937], [337, 791, 358, 807], [360, 782, 374, 793], [337, 660, 358, 676], [360, 651, 374, 662], [609, 1054, 720, 1081], [307, 946, 323, 960], [311, 930, 323, 943], [306, 925, 323, 928], [311, 911, 323, 922], [308, 901, 323, 909], [306, 898, 323, 901], [311, 883, 323, 896], [311, 870, 323, 883], [306, 849, 323, 862], [306, 844, 323, 847], [311, 831, 323, 842], [308, 821, 323, 829], [311, 810, 323, 821], [311, 795, 323, 807], [311, 781, 323, 793], [311, 768, 323, 781], [308, 751, 323, 759], [311, 739, 323, 752], [311, 718, 323, 731], [311, 702, 328, 715], [308, 694, 323, 702], [306, 691, 323, 694], [311, 667, 323, 688], [311, 655, 323, 667], [311, 631, 323, 652], [417, 534, 915, 559], [459, 965, 507, 980], [459, 987, 628, 1007], [1052, 1024, 1081, 1048], [1283, 1024, 1313, 1048], [1515, 1024, 1544, 1048], [1003, 944, 1024, 960], [1026, 935, 1040, 946], [1003, 822, 1024, 838], [1026, 813, 1040, 824], [1003, 691, 1040, 715], [1003, 577, 1024, 593], [1026, 568, 1032, 579], [1275, 1054, 1386, 1081], [973, 946, 989, 960], [977, 930, 989, 943], [972, 925, 989, 928], [977, 911, 989, 922], [974, 901, 989, 909], [972, 898, 989, 901], [977, 883, 989, 896], [977, 870, 989, 883], [972, 849, 989, 862], [972, 844, 989, 847], [977, 831, 989, 842], [974, 821, 989, 829], [977, 810, 989, 821], [977, 795, 989, 807], [977, 781, 989, 793], [977, 768, 989, 781], [974, 751, 989, 759], [977, 739, 989, 752], [977, 718, 989, 731], [977, 702, 994, 715], [974, 694, 989, 702], [972, 691, 989, 694], [977, 667, 989, 688], [977, 655, 989, 667], [977, 631, 989, 652], [1074, 534, 1590, 559], [1125, 965, 1173, 980], [1125, 987, 1294, 1007], [1735, 1024, 1764, 1048], [1973, 1024, 2003, 1048], [2212, 1024, 2241, 1048], [1669, 853, 1690, 869], [1692, 844, 1706, 855], [1669, 659, 1706, 683], [1941, 1054, 2052, 1081], [1639, 946, 1655, 960], [1643, 930, 1655, 943], [1638, 925, 1655, 928], [1643, 911, 1655, 922], [1640, 901, 1655, 909], [1638, 898, 1655, 901], [1643, 883, 1655, 896], [1643, 870, 1655, 883], [1638, 849, 1655, 862], [1638, 844, 1655, 847], [1643, 831, 1655, 842], [1640, 821, 1655, 829], [1643, 810, 1655, 821], [1643, 795, 1655, 807], [1643, 781, 1655, 793], [1643, 768, 1655, 781], [1640, 751, 1655, 759], [1643, 739, 1655, 752], [1643, 718, 1655, 731], [1643, 702, 1660, 715], [1640, 694, 1655, 702], [1638, 691, 1655, 694], [1643, 667, 1655, 688], [1643, 655, 1655, 667], [1643, 631, 1655, 652], [1739, 534, 2256, 559], [1791, 965, 1839, 980], [1791, 987, 1960, 1007], [397, 1601, 426, 1625], [642, 1601, 671, 1625], [887, 1601, 916, 1625], [337, 1510, 374, 1534], [337, 1417, 374, 1441], [337, 1333, 358, 1349], [360, 1324, 374, 1335], [337, 1232, 366, 1256], [609, 1631, 720, 1658], [307, 1523, 323, 1537], [311, 1508, 323, 1521], [306, 1502, 323, 1505], [311, 1489, 323, 1500], [308, 1478, 323, 1486], [306, 1475, 323, 1478], [311, 1460, 323, 1473], [311, 1448, 323, 1461], [306, 1426, 323, 1439], [306, 1421, 323, 1424], [311, 1408, 323, 1419], [308, 1398, 323, 1406], [311, 1387, 323, 1398], [311, 1372, 323, 1384], [311, 1359, 323, 1371], [311, 1345, 323, 1358], [308, 1328, 323, 1336], [311, 1316, 323, 1329], [311, 1295, 323, 1308], [311, 1279, 328, 1292], [308, 1271, 323, 1279], [306, 1268, 323, 1271], [311, 1244, 323, 1265], [311, 1232, 323, 1244], [311, 1208, 323, 1229], [417, 1111, 915, 1136], [459, 1542, 507, 1557], [459, 1565, 628, 1585], [1091, 1601, 1120, 1625], [1339, 1601, 1368, 1625], [1587, 1601, 1617, 1625], [1003, 1566, 1024, 1582], [1026, 1557, 1040, 1568], [1003, 1449, 1040, 1473], [1003, 1349, 1024, 1365], [1026, 1340, 1040, 1351], [1003, 1232, 1032, 1256], [1275, 1631, 1386, 1658], [973, 1523, 989, 1537], [977, 1508, 989, 1521], [972, 1502, 989, 1505], [977, 1489, 989, 1500], [974, 1478, 989, 1486], [972, 1475, 989, 1478], [977, 1460, 989, 1473], [977, 1448, 989, 1461], [972, 1426, 989, 1439], [972, 1421, 989, 1424], [977, 1408, 989, 1419], [974, 1398, 989, 1406], [977, 1387, 989, 1398], [977, 1372, 989, 1384], [977, 1359, 989, 1371], [977, 1345, 989, 1358], [974, 1328, 989, 1336], [977, 1316, 989, 1329], [977, 1295, 989, 1308], [977, 1279, 994, 1292], [974, 1271, 989, 1279], [972, 1268, 989, 1271], [977, 1244, 989, 1265], [977, 1232, 989, 1244], [977, 1208, 989, 1229], [1074, 1111, 1590, 1136], [1125, 1542, 1173, 1557], [1125, 1565, 1294, 1585], [1758, 1601, 1787, 1625], [2007, 1601, 2036, 1625], [2255, 1601, 2284, 1625], [1668, 1538, 1689, 1554], [1691, 1529, 1706, 1540], [1668, 1393, 1706, 1417], [1668, 1257, 1706, 1281], [1940, 1631, 2050, 1658], [1639, 1524, 1655, 1538], [1643, 1508, 1655, 1521], [1638, 1503, 1655, 1506], [1643, 1489, 1655, 1500], [1640, 1479, 1655, 1487], [1638, 1476, 1655, 1479], [1643, 1461, 1655, 1474], [1643, 1448, 1655, 1461], [1638, 1427, 1655, 1440], [1638, 1422, 1655, 1425], [1643, 1409, 1655, 1420], [1640, 1399, 1655, 1407], [1643, 1388, 1655, 1399], [1643, 1373, 1655, 1385], [1643, 1360, 1655, 1372], [1643, 1346, 1655, 1359], [1640, 1329, 1655, 1337], [1643, 1317, 1655, 1330], [1643, 1296, 1655, 1309], [1643, 1281, 1660, 1294], [1640, 1272, 1655, 1280], [1638, 1269, 1655, 1272], [1643, 1246, 1655, 1267], [1643, 1233, 1655, 1245], [1643, 1210, 1655, 1231], [1739, 1113, 2254, 1138], [1790, 1542, 1838, 1557], [1790, 1565, 1959, 1585], [376, 1746, 2174, 1783], [376, 1797, 1011, 1834], [438, 1906, 2176, 1943], [376, 1947, 704, 1994], [673, 1957, 2175, 1995], [376, 2007, 2174, 2044], [375, 2056, 2175, 2095], [376, 2099, 636, 2146], [604, 2109, 2174, 2147], [377, 2158, 2173, 2197], [376, 2203, 592, 2246], [580, 2205, 797, 2253], [784, 2204, 2174, 2249], [375, 2261, 2174, 2298], [376, 2312, 864, 2349], [376, 2423, 1426, 2461], [376, 2503, 2174, 2540], [376, 2553, 2177, 2590], [375, 2603, 2173, 2641], [377, 2655, 2174, 2692], [376, 2699, 1367, 2744], [1375, 2700, 2174, 2744], [374, 2757, 645, 2794], [1256, 2935, 1295, 2964], [374, 270, 2173, 307], [376, 320, 1213, 358], [850, 397, 974, 424], [1118, 397, 1165, 424], [1254, 395, 1696, 430], [850, 486, 1689, 524], [850, 537, 1689, 567], [850, 589, 950, 618], [1085, 588, 1689, 618], [850, 640, 981, 669], [1085, 639, 1689, 669], [850, 691, 908, 718], [1088, 689, 1689, 719], [438, 847, 2175, 884], [376, 897, 2173, 934], [376, 948, 2173, 985], [375, 999, 1438, 1036], [1442, 990, 1474, 1010], [1442, 999, 2178, 1037], [374, 1050, 564, 1079], [567, 1040, 599, 1060], [566, 1050, 1497, 1088], [376, 1164, 1300, 1208], [373, 1249, 2173, 1286], [377, 1290, 960, 1336], [925, 1299, 2173, 1344], [376, 1350, 952, 1387], [376, 1461, 1299, 1499], [376, 1541, 2174, 1578], [376, 1589, 1897, 1628], [1912, 1591, 2175, 1619], [375, 1642, 2173, 1679], [376, 1693, 2173, 1730], [376, 1744, 1232, 1781], [438, 1794, 2174, 1832], [376, 1845, 2174, 1882], [376, 1895, 2173, 1933], [376, 1947, 660, 1984], [931, 2029, 998, 2057], [950, 2064, 978, 2084], [1053, 2026, 1220, 2067], [1228, 2021, 1241, 2040], [1226, 2028, 1318, 2067], [1347, 1992, 1365, 2005], [1328, 2017, 1384, 2075], [1331, 2087, 1382, 2106], [1410, 1992, 1437, 2005], [1395, 2017, 1451, 2075], [1395, 2087, 1451, 2112], [1465, 2026, 1616, 2069], [2097, 2028, 2173, 2064], [374, 2143, 962, 2186], [1044, 2262, 1171, 2304], [1194, 2232, 1441, 2332], [1228, 2299, 1441, 2330], [1468, 2232, 1504, 2332], [374, 2379, 1689, 2419], [438, 2430, 2173, 2467], [376, 2477, 2179, 2518], [374, 2531, 2175, 2568], [375, 2582, 2174, 2619], [374, 2633, 2173, 2670], [377, 2684, 2173, 2721], [377, 2734, 2174, 2771], [376, 2784, 666, 2820], [1256, 2934, 1293, 2964], [438, 242, 2175, 279], [374, 292, 2175, 329], [376, 343, 2175, 380], [375, 393, 1125, 431], [1127, 385, 1161, 405], [1126, 394, 2173, 438], [375, 450, 1820, 488], [1822, 442, 1855, 462], [1821, 477, 1863, 496], [1868, 451, 2173, 488], [376, 501, 2173, 539], [376, 551, 1506, 593], [1508, 544, 1541, 564], [1507, 578, 1549, 597], [1554, 562, 1656, 581], [1673, 553, 2020, 590], [2022, 544, 2055, 564], [2024, 572, 2061, 597], [2068, 562, 2177, 587], [375, 604, 1075, 641], [437, 655, 2173, 692], [377, 705, 2174, 742], [375, 755, 2174, 793], [376, 807, 947, 844], [948, 798, 982, 818], [947, 832, 989, 851], [995, 807, 2174, 844], [377, 858, 621, 895], [437, 908, 1647, 946], [1649, 899, 1683, 919], [1648, 934, 1690, 953], [1695, 909, 2107, 946], [992, 1008, 1059, 1036], [1011, 1042, 1039, 1062], [1113, 1005, 1281, 1046], [1289, 999, 1302, 1018], [1287, 998, 1461, 1046], [1427, 1005, 1555, 1052], [2097, 1007, 2173, 1043], [376, 1120, 871, 1158], [873, 1112, 906, 1132], [872, 1147, 914, 1166], [919, 1121, 2175, 1158], [375, 1171, 2178, 1209], [376, 1223, 1054, 1260], [439, 1314, 920, 1352], [439, 1382, 1672, 1420], [439, 1449, 2173, 1487], [479, 1501, 2132, 1538], [439, 1567, 1380, 1605], [439, 1635, 1198, 1673], [439, 1702, 1266, 1740], [439, 1770, 1046, 1808], [439, 1837, 2174, 1875], [479, 1889, 2174, 1926], [479, 1940, 1606, 1969], [376, 2032, 2174, 2069], [375, 2083, 2174, 2120], [376, 2134, 2177, 2171], [374, 2184, 2177, 2221], [374, 2235, 2175, 2272], [376, 2280, 2174, 2323], [375, 2337, 2174, 2374], [377, 2388, 2174, 2425], [375, 2438, 1799, 2476], [1802, 2432, 1853, 2454], [1874, 2452, 1902, 2461], [1969, 2431, 1980, 2450], [1926, 2460, 1951, 2489], [1953, 2449, 2069, 2488], [2072, 2432, 2123, 2454], [2144, 2452, 2172, 2461], [377, 2501, 631, 2543], [668, 2506, 685, 2519], [688, 2493, 696, 2506], [652, 2501, 956, 2549], [978, 2500, 989, 2519], [977, 2501, 1143, 2549], [438, 2557, 2175, 2595], [374, 2609, 2177, 2646], [374, 2659, 2177, 2696], [376, 2710, 1397, 2747], [1256, 2935, 1294, 2964], [374, 270, 2174, 306], [376, 318, 2173, 352], [376, 365, 2174, 399], [375, 412, 2177, 446], [375, 458, 932, 492], [761, 531, 863, 567], [995, 530, 1789, 567], [760, 622, 944, 657], [1045, 622, 1095, 651], [1237, 622, 1285, 651], [1428, 626, 1456, 650], [1659, 626, 1687, 650], [762, 673, 854, 710], [1035, 672, 1104, 702], [1248, 677, 1276, 701], [1428, 677, 1456, 701], [1659, 677, 1687, 701], [761, 723, 897, 751], [1056, 727, 1084, 751], [1256, 723, 1267, 751], [1428, 727, 1456, 751], [1659, 727, 1687, 751], [761, 774, 896, 811], [1056, 778, 1084, 802], [1248, 778, 1276, 802], [1428, 773, 1456, 803], [1659, 778, 1687, 802], [761, 829, 822, 853], [1056, 829, 1084, 853], [1248, 829, 1276, 853], [1428, 829, 1456, 853], [1648, 825, 1694, 854], [761, 876, 860, 904], [1035, 875, 1104, 905], [1248, 880, 1276, 904], [1428, 875, 1456, 905], [1659, 880, 1687, 904], [761, 931, 887, 955], [1056, 931, 1084, 955], [1248, 931, 1276, 955], [1428, 926, 1456, 956], [1648, 927, 1698, 956], [760, 977, 905, 1014], [1056, 981, 1084, 1005], [1252, 977, 1271, 1005], [1428, 976, 1456, 1006], [1659, 981, 1687, 1005], [438, 1130, 2177, 1168], [376, 1181, 1728, 1219], [929, 1293, 1392, 1335], [1412, 1262, 1601, 1306], [1586, 1288, 1602, 1307], [1422, 1319, 1592, 1363], [1577, 1345, 1593, 1364], [1613, 1320, 1617, 1332], [374, 1408, 1650, 1445], [438, 1459, 2173, 1496], [376, 1509, 2175, 1546], [376, 1560, 2173, 1597], [377, 1611, 2174, 1648], [375, 1662, 2172, 1699], [375, 1713, 2030, 1750], [439, 1794, 2174, 1831], [480, 1845, 2175, 1882], [478, 1896, 1038, 1933], [439, 1967, 2173, 2004], [480, 2018, 1372, 2055], [439, 2089, 2180, 2126], [479, 2140, 2174, 2177], [478, 2191, 2174, 2228], [478, 2241, 1311, 2278], [439, 2312, 2174, 2349], [480, 2363, 2174, 2400], [479, 2414, 2175, 2451], [478, 2465, 2173, 2502], [480, 2516, 649, 2553], [439, 2587, 2177, 2624], [480, 2637, 2175, 2674], [478, 2688, 619, 2716], [439, 2759, 2180, 2796], [479, 2810, 1329, 2847], [1256, 2935, 1294, 2964], [584, 700, 683, 726], [468, 668, 504, 688], [664, 668, 701, 688], [862, 668, 896, 688], [309, 629, 326, 643], [313, 616, 327, 627], [309, 611, 326, 613], [313, 597, 327, 609], [310, 591, 327, 597], [309, 586, 326, 588], [314, 574, 326, 585], [313, 561, 327, 572], [309, 542, 327, 553], [309, 537, 326, 539], [313, 524, 327, 534], [310, 518, 327, 524], [313, 504, 327, 516], [313, 493, 326, 502], [313, 480, 327, 490], [313, 468, 327, 479], [310, 454, 327, 460], [313, 441, 327, 452], [313, 422, 327, 433], [313, 409, 331, 420], [310, 402, 327, 408], [309, 397, 326, 399], [313, 378, 326, 394], [314, 366, 327, 375], [313, 346, 326, 362], [338, 484, 374, 504], [343, 281, 374, 300], [350, 235, 859, 265], [440, 470, 553, 488], [440, 493, 497, 507], [440, 515, 572, 529], [439, 538, 480, 555], [440, 560, 540, 574], [440, 583, 536, 600], [441, 605, 463, 618], [441, 627, 464, 640], [1250, 700, 1349, 726], [1052, 668, 1088, 688], [1240, 668, 1277, 688], [1428, 668, 1462, 688], [975, 629, 992, 643], [979, 616, 993, 627], [975, 611, 992, 613], [979, 597, 993, 609], [976, 591, 993, 597], [975, 586, 992, 588], [980, 574, 992, 585], [979, 561, 993, 572], [975, 542, 993, 553], [975, 537, 992, 539], [979, 524, 993, 534], [976, 518, 993, 524], [979, 504, 993, 516], [979, 493, 992, 502], [979, 480, 993, 490], [979, 468, 993, 479], [976, 454, 993, 460], [979, 441, 993, 452], [979, 422, 993, 433], [979, 409, 997, 420], [976, 402, 993, 408], [975, 397, 992, 399], [979, 378, 992, 394], [980, 366, 993, 375], [979, 346, 992, 362], [1004, 475, 1040, 494], [1009, 287, 1040, 307], [1016, 235, 1520, 265], [1106, 470, 1219, 488], [1106, 493, 1163, 507], [1106, 515, 1238, 529], [1105, 538, 1146, 555], [1106, 560, 1206, 574], [1106, 583, 1202, 600], [1107, 605, 1129, 618], [1107, 627, 1130, 640], [1916, 700, 2015, 726], [1814, 668, 1851, 688], [2001, 668, 2035, 688], [2189, 668, 2220, 688], [1641, 629, 1658, 643], [1645, 616, 1659, 627], [1641, 611, 1658, 613], [1645, 597, 1659, 609], [1642, 591, 1659, 597], [1641, 586, 1658, 588], [1646, 574, 1658, 585], [1645, 561, 1659, 572], [1641, 542, 1659, 553], [1641, 537, 1658, 539], [1645, 524, 1659, 534], [1642, 518, 1659, 524], [1645, 504, 1659, 516], [1645, 493, 1658, 502], [1645, 480, 1659, 490], [1645, 468, 1659, 479], [1642, 454, 1659, 460], [1645, 441, 1659, 452], [1645, 422, 1659, 433], [1645, 409, 1663, 420], [1642, 402, 1659, 408], [1641, 397, 1658, 399], [1645, 378, 1658, 394], [1646, 366, 1659, 375], [1645, 346, 1658, 362], [1670, 488, 1706, 507], [1675, 291, 1706, 310], [1682, 235, 2191, 265], [1772, 470, 1885, 488], [1772, 493, 1829, 507], [1772, 515, 1904, 529], [1771, 538, 1812, 555], [1772, 560, 1872, 574], [1772, 583, 1868, 600], [1773, 605, 1795, 618], [1773, 627, 1796, 640], [584, 1215, 683, 1241], [452, 1183, 489, 1202], [629, 1183, 663, 1202], [808, 1183, 839, 1202], [309, 1144, 326, 1158], [313, 1131, 327, 1142], [309, 1126, 326, 1128], [313, 1111, 327, 1123], [310, 1105, 327, 1111], [309, 1101, 326, 1103], [314, 1089, 326, 1100], [313, 1076, 327, 1087], [309, 1056, 327, 1067], [309, 1051, 326, 1053], [313, 1039, 327, 1049], [310, 1032, 327, 1038], [313, 1019, 327, 1031], [313, 1008, 326, 1017], [313, 995, 327, 1005], [313, 982, 327, 993], [310, 969, 327, 975], [313, 956, 327, 967], [313, 937, 327, 948], [313, 924, 331, 935], [310, 917, 327, 923], [309, 912, 326, 914], [313, 893, 326, 909], [314, 880, 327, 889], [313, 860, 326, 876], [338, 1002, 374, 1021], [343, 810, 374, 830], [350, 750, 859, 780], [440, 985, 553, 1003], [440, 1007, 497, 1021], [440, 1030, 572, 1044], [439, 1053, 480, 1070], [440, 1074, 540, 1088], [440, 1098, 536, 1115], [441, 1120, 463, 1133], [441, 1142, 464, 1155], [1250, 1215, 1349, 1241], [1056, 1183, 1093, 1202], [1232, 1183, 1266, 1202], [1412, 1183, 1443, 1202], [975, 1144, 992, 1158], [979, 1131, 993, 1142], [975, 1126, 992, 1128], [979, 1111, 993, 1123], [976, 1105, 993, 1111], [975, 1101, 992, 1103], [980, 1089, 992, 1100], [979, 1076, 993, 1087], [975, 1056, 993, 1067], [975, 1051, 992, 1053], [979, 1039, 993, 1049], [976, 1032, 993, 1038], [979, 1019, 993, 1031], [979, 1008, 992, 1017], [979, 995, 993, 1005], [979, 982, 993, 993], [976, 969, 993, 975], [979, 956, 993, 967], [979, 937, 993, 948], [979, 924, 997, 935], [976, 917, 993, 923], [975, 912, 992, 914], [979, 893, 992, 909], [980, 880, 993, 889], [979, 860, 992, 876], [1004, 1003, 1040, 1022], [1009, 801, 1040, 821], [1016, 750, 1525, 780], [1106, 985, 1219, 1003], [1106, 1007, 1163, 1021], [1106, 1030, 1238, 1044], [1105, 1053, 1146, 1070], [1106, 1074, 1206, 1088], [1106, 1098, 1202, 1115], [1107, 1120, 1129, 1133], [1107, 1142, 1130, 1155], [1916, 1215, 2015, 1241], [1762, 1183, 1798, 1202], [1944, 1183, 1981, 1202], [2127, 1183, 2160, 1202], [1641, 1137, 1658, 1151], [1645, 1124, 1659, 1135], [1641, 1119, 1658, 1121], [1645, 1105, 1659, 1117], [1642, 1099, 1659, 1105], [1641, 1094, 1658, 1096], [1646, 1082, 1658, 1093], [1645, 1069, 1659, 1080], [1641, 1050, 1659, 1061], [1641, 1045, 1658, 1047], [1645, 1033, 1659, 1043], [1642, 1026, 1659, 1032], [1645, 1012, 1659, 1024], [1645, 1001, 1658, 1010], [1645, 988, 1659, 998], [1645, 976, 1659, 987], [1642, 962, 1659, 968], [1645, 950, 1659, 961], [1645, 930, 1659, 941], [1645, 917, 1663, 928], [1642, 910, 1659, 916], [1641, 906, 1658, 908], [1645, 886, 1658, 902], [1646, 874, 1659, 883], [1645, 854, 1658, 870], [1670, 983, 1706, 1002], [1675, 781, 1706, 801], [1729, 752, 2143, 781], [1772, 985, 1885, 1003], [1772, 1007, 1829, 1021], [1772, 1030, 1904, 1044], [1771, 1053, 1812, 1070], [1772, 1074, 1872, 1088], [1772, 1098, 1868, 1115], [1773, 1120, 1795, 1133], [1773, 1142, 1796, 1155], [584, 1730, 683, 1756], [438, 1698, 475, 1717], [620, 1698, 654, 1717], [806, 1698, 837, 1717], [309, 1652, 326, 1666], [313, 1639, 327, 1650], [309, 1634, 326, 1636], [313, 1620, 327, 1632], [310, 1614, 327, 1620], [309, 1609, 326, 1611], [314, 1597, 326, 1608], [313, 1584, 327, 1595], [309, 1565, 327, 1576], [309, 1560, 326, 1562], [313, 1547, 327, 1557], [310, 1541, 327, 1547], [313, 1527, 327, 1539], [313, 1516, 326, 1525], [313, 1503, 327, 1513], [313, 1490, 327, 1501], [310, 1477, 327, 1483], [313, 1464, 327, 1475], [313, 1445, 327, 1456], [313, 1432, 331, 1443], [310, 1425, 327, 1431], [309, 1420, 326, 1422], [313, 1401, 326, 1417], [314, 1389, 327, 1398], [313, 1369, 326, 1385], [338, 1585, 374, 1604], [338, 1493, 374, 1513], [338, 1400, 374, 1420], [343, 1307, 374, 1327], [376, 1266, 820, 1295], [440, 1500, 553, 1518], [440, 1522, 497, 1536], [440, 1544, 572, 1558], [439, 1568, 480, 1585], [440, 1589, 540, 1603], [440, 1612, 536, 1629], [441, 1634, 463, 1647], [441, 1657, 464, 1670], [1250, 1730, 1349, 1756], [1175, 1698, 1212, 1717], [1363, 1698, 1396, 1717], [975, 1652, 992, 1666], [979, 1639, 993, 1650], [975, 1634, 992, 1636], [979, 1620, 993, 1632], [976, 1614, 993, 1620], [975, 1609, 992, 1611], [980, 1597, 992, 1608], [979, 1584, 993, 1595], [975, 1565, 993, 1576], [975, 1560, 992, 1562], [979, 1547, 993, 1557], [976, 1541, 993, 1547], [979, 1527, 993, 1539], [979, 1516, 992, 1525], [979, 1503, 993, 1513], [979, 1490, 993, 1501], [976, 1477, 993, 1483], [979, 1464, 993, 1475], [979, 1445, 993, 1456], [979, 1432, 997, 1443], [976, 1425, 993, 1431], [975, 1420, 992, 1422], [979, 1401, 992, 1417], [980, 1389, 993, 1398], [979, 1369, 992, 1385], [1004, 1502, 1040, 1521], [1009, 1298, 1040, 1317], [1043, 1266, 1486, 1295], [1106, 1500, 1219, 1518], [1106, 1522, 1163, 1536], [1106, 1544, 1238, 1558], [1105, 1568, 1146, 1585], [1106, 1589, 1206, 1603], [1106, 1612, 1202, 1629], [1107, 1634, 1129, 1647], [1107, 1657, 1130, 1670], [1916, 1730, 2015, 1756], [1858, 1698, 1892, 1717], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1641, 1652, 1658, 1666], [1645, 1639, 1659, 1650], [1641, 1634, 1658, 1636], [1645, 1620, 1659, 1632], [1642, 1614, 1659, 1620], [1641, 1609, 1658, 1611], [1646, 1597, 1658, 1608], [1645, 1584, 1659, 1595], [1641, 1565, 1659, 1576], [1641, 1560, 1658, 1562], [1645, 1547, 1659, 1557], [1642, 1541, 1659, 1547], [1645, 1527, 1659, 1539], [1645, 1516, 1658, 1525], [1645, 1503, 1659, 1513], [1645, 1490, 1659, 1501], [1642, 1477, 1659, 1483], [1645, 1464, 1659, 1475], [1645, 1445, 1659, 1456], [1645, 1432, 1663, 1443], [1642, 1425, 1659, 1431], [1641, 1420, 1658, 1422], [1645, 1401, 1658, 1417], [1646, 1389, 1659, 1398], [1645, 1369, 1658, 1385], [1670, 1594, 1706, 1613], [1670, 1492, 1706, 1512], [1670, 1390, 1706, 1409], [1745, 1266, 2125, 1295], [1772, 1500, 1885, 1518], [1772, 1522, 1829, 1536], [1772, 1544, 1904, 1558], [1771, 1568, 1812, 1585], [1772, 1589, 1872, 1603], [1772, 1612, 1868, 1629], [1773, 1634, 1795, 1647], [1773, 1657, 1796, 1670], [584, 2244, 683, 2270], [429, 2212, 465, 2232], [609, 2212, 643, 2232], [792, 2212, 823, 2232], [309, 2166, 326, 2180], [313, 2154, 327, 2165], [309, 2149, 326, 2151], [313, 2134, 327, 2146], [310, 2128, 327, 2134], [309, 2124, 326, 2126], [314, 2112, 326, 2123], [313, 2099, 327, 2110], [309, 2079, 327, 2090], [309, 2074, 326, 2076], [313, 2062, 327, 2072], [310, 2055, 327, 2061], [313, 2042, 327, 2054], [313, 2031, 326, 2040], [313, 2018, 327, 2028], [313, 2005, 327, 2016], [310, 1992, 327, 1998], [313, 1979, 327, 1990], [313, 1960, 327, 1971], [313, 1947, 331, 1958], [310, 1940, 327, 1946], [309, 1935, 326, 1937], [313, 1916, 326, 1932], [314, 1903, 327, 1912], [313, 1883, 326, 1899], [338, 2022, 374, 2042], [343, 1812, 374, 1831], [399, 1781, 812, 1810], [440, 2015, 553, 2033], [440, 2037, 497, 2051], [440, 2059, 572, 2073], [439, 2082, 480, 2099], [440, 2104, 540, 2118], [440, 2127, 536, 2144], [441, 2149, 463, 2162], [441, 2171, 464, 2184], [1250, 2244, 1349, 2270], [1129, 2212, 1163, 2232], [1307, 2212, 1338, 2232], [1481, 2212, 1510, 2232], [975, 2166, 992, 2180], [979, 2154, 993, 2165], [975, 2149, 992, 2151], [979, 2134, 993, 2146], [976, 2128, 993, 2134], [975, 2124, 992, 2126], [980, 2112, 992, 2123], [979, 2099, 993, 2110], [975, 2079, 993, 2090], [975, 2074, 992, 2076], [979, 2062, 993, 2072], [976, 2055, 993, 2061], [979, 2042, 993, 2054], [979, 2031, 992, 2040], [979, 2018, 993, 2028], [979, 2005, 993, 2016], [976, 1992, 993, 1998], [979, 1979, 993, 1990], [979, 1960, 993, 1971], [979, 1947, 997, 1958], [976, 1940, 993, 1946], [975, 1935, 992, 1937], [979, 1916, 992, 1932], [980, 1903, 993, 1912], [979, 1883, 992, 1899], [1004, 2106, 1040, 2125], [1004, 2015, 1040, 2034], [1004, 1924, 1040, 1943], [1009, 1833, 1040, 1852], [1048, 1781, 1487, 1810], [1106, 2015, 1219, 2033], [1106, 2037, 1163, 2051], [1106, 2059, 1238, 2073], [1105, 2082, 1146, 2099], [1106, 2104, 1206, 2118], [1106, 2127, 1202, 2144], [1107, 2149, 1129, 2162], [1107, 2171, 1130, 2184], [1916, 2244, 2015, 2270], [1715, 2212, 1749, 2232], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1641, 2166, 1658, 2180], [1645, 2154, 1659, 2165], [1641, 2149, 1658, 2151], [1645, 2134, 1659, 2146], [1642, 2128, 1659, 2134], [1641, 2124, 1658, 2126], [1646, 2112, 1658, 2123], [1645, 2099, 1659, 2110], [1641, 2079, 1659, 2090], [1641, 2074, 1658, 2076], [1645, 2062, 1659, 2072], [1642, 2055, 1659, 2061], [1645, 2042, 1659, 2054], [1645, 2031, 1658, 2040], [1645, 2018, 1659, 2028], [1645, 2005, 1659, 2016], [1642, 1992, 1659, 1998], [1645, 1979, 1659, 1990], [1645, 1960, 1659, 1971], [1645, 1947, 1663, 1958], [1642, 1940, 1659, 1946], [1641, 1935, 1658, 1937], [1645, 1916, 1658, 1932], [1646, 1903, 1659, 1912], [1645, 1883, 1658, 1899], [1670, 2050, 1706, 2070], [1675, 1825, 1706, 1844], [1704, 1781, 2157, 1810], [1772, 2015, 1885, 2033], [1772, 2037, 1829, 2051], [1772, 2059, 1904, 2073], [1771, 2082, 1812, 2099], [1772, 2104, 1872, 2118], [1772, 2127, 1868, 2144], [1773, 2149, 1795, 2162], [1773, 2171, 1796, 2184], [375, 2356, 2173, 2393], [376, 2406, 1159, 2443], [438, 2540, 2179, 2577], [373, 2591, 2174, 2628], [375, 2641, 2175, 2678], [377, 2692, 2175, 2729], [376, 2743, 1994, 2780], [1256, 2935, 1293, 2964], [584, 700, 683, 726], [468, 668, 504, 688], [664, 668, 701, 688], [862, 668, 896, 688], [317, 495, 334, 498], [317, 478, 335, 492], [317, 463, 334, 476], [317, 445, 334, 459], [364, 651, 373, 665], [345, 583, 371, 597], [365, 515, 370, 529], [346, 447, 371, 461], [364, 379, 373, 393], [345, 311, 371, 325], [350, 235, 859, 265], [738, 470, 851, 488], [738, 493, 796, 507], [738, 515, 870, 529], [737, 538, 778, 555], [738, 560, 838, 574], [738, 583, 834, 600], [739, 605, 761, 618], [739, 627, 762, 640], [1250, 700, 1349, 726], [1052, 668, 1088, 688], [1240, 668, 1277, 688], [1428, 668, 1462, 688], [983, 495, 1000, 498], [983, 478, 1001, 492], [983, 463, 1000, 476], [983, 445, 1000, 459], [1030, 651, 1039, 665], [1011, 603, 1037, 617], [1031, 555, 1036, 569], [1012, 507, 1037, 521], [1030, 458, 1039, 472], [1011, 410, 1037, 424], [1030, 362, 1039, 376], [1011, 314, 1037, 328], [1016, 235, 1520, 265], [1404, 470, 1517, 488], [1404, 493, 1462, 507], [1404, 515, 1536, 529], [1403, 538, 1444, 555], [1404, 560, 1504, 574], [1404, 583, 1500, 600], [1405, 605, 1427, 618], [1405, 627, 1428, 640], [1916, 700, 2015, 726], [1814, 668, 1851, 688], [2001, 668, 2035, 688], [2189, 668, 2220, 688], [1669, 495, 1686, 498], [1669, 478, 1687, 492], [1669, 463, 1686, 476], [1669, 445, 1686, 459], [1696, 651, 1705, 665], [1697, 587, 1702, 601], [1696, 523, 1705, 537], [1696, 459, 1705, 473], [1696, 395, 1705, 409], [1696, 331, 1705, 345], [1682, 235, 2191, 265], [2070, 470, 2183, 488], [2070, 493, 2128, 507], [2070, 515, 2202, 529], [2069, 538, 2110, 555], [2070, 560, 2170, 574], [2070, 583, 2166, 600], [2071, 605, 2093, 618], [2071, 627, 2094, 640], [584, 1215, 683, 1241], [452, 1183, 489, 1202], [629, 1183, 663, 1202], [808, 1183, 839, 1202], [337, 1010, 354, 1013], [337, 993, 355, 1007], [337, 978, 354, 991], [337, 960, 354, 974], [364, 1166, 373, 1180], [365, 1105, 370, 1119], [364, 1044, 373, 1058], [364, 982, 373, 996], [364, 921, 373, 935], [364, 860, 373, 874], [364, 799, 373, 813], [350, 750, 859, 780], [738, 985, 851, 1003], [738, 1007, 796, 1021], [738, 1030, 870, 1044], [737, 1053, 778, 1070], [738, 1074, 838, 1088], [738, 1098, 834, 1115], [739, 1120, 761, 1133], [739, 1142, 762, 1155], [1250, 1215, 1349, 1241], [1056, 1183, 1093, 1202], [1232, 1183, 1266, 1202], [1412, 1183, 1443, 1202], [983, 1010, 1000, 1013], [983, 993, 1001, 1007], [983, 978, 1000, 991], [983, 960, 1000, 974], [1030, 1166, 1039, 1180], [1011, 1120, 1037, 1134], [1031, 1075, 1036, 1089], [1012, 1029, 1037, 1043], [1030, 984, 1039, 998], [1011, 938, 1037, 952], [1030, 893, 1039, 907], [1011, 847, 1037, 861], [1030, 802, 1039, 816], [1016, 750, 1525, 780], [1404, 985, 1517, 1003], [1404, 1007, 1462, 1021], [1404, 1030, 1536, 1044], [1403, 1053, 1444, 1070], [1404, 1074, 1504, 1088], [1404, 1098, 1500, 1115], [1405, 1120, 1427, 1133], [1405, 1142, 1428, 1155], [1916, 1215, 2015, 1241], [1762, 1183, 1798, 1202], [1944, 1183, 1981, 1202], [2127, 1183, 2160, 1202], [1669, 1003, 1686, 1006], [1669, 987, 1687, 1001], [1669, 971, 1686, 984], [1669, 953, 1686, 967], [1696, 1166, 1705, 1180], [1697, 1106, 1702, 1120], [1696, 1046, 1705, 1060], [1696, 986, 1705, 1000], [1696, 926, 1705, 940], [1696, 866, 1705, 880], [1696, 806, 1705, 820], [1729, 752, 2143, 781], [2070, 985, 2183, 1003], [2070, 1007, 2128, 1021], [2070, 1030, 2202, 1044], [2069, 1053, 2110, 1070], [2070, 1074, 2170, 1088], [2070, 1098, 2166, 1115], [2071, 1120, 2093, 1133], [2071, 1142, 2094, 1155], [584, 1730, 683, 1756], [438, 1698, 475, 1717], [620, 1698, 654, 1717], [806, 1698, 837, 1717], [337, 1518, 354, 1521], [337, 1501, 355, 1515], [337, 1486, 354, 1499], [337, 1468, 354, 1482], [364, 1681, 373, 1695], [365, 1633, 370, 1647], [364, 1585, 373, 1599], [364, 1537, 373, 1551], [364, 1490, 373, 1504], [364, 1442, 373, 1456], [364, 1394, 373, 1408], [364, 1347, 373, 1361], [364, 1299, 373, 1313], [376, 1266, 820, 1295], [738, 1500, 851, 1518], [738, 1522, 796, 1536], [738, 1544, 870, 1558], [737, 1568, 778, 1585], [738, 1589, 838, 1603], [738, 1612, 834, 1629], [739, 1634, 761, 1647], [739, 1657, 762, 1670], [1250, 1730, 1349, 1756], [1175, 1698, 1212, 1717], [1363, 1698, 1396, 1717], [996, 1518, 1013, 1521], [996, 1501, 1014, 1515], [996, 1486, 1013, 1499], [996, 1468, 1013, 1482], [1023, 1648, 1039, 1662], [1023, 1595, 1039, 1609], [1023, 1542, 1039, 1556], [1030, 1490, 1039, 1504], [1030, 1437, 1039, 1451], [1030, 1384, 1039, 1398], [1030, 1331, 1039, 1345], [1043, 1266, 1486, 1295], [1404, 1500, 1517, 1518], [1404, 1522, 1462, 1536], [1404, 1544, 1536, 1558], [1403, 1568, 1444, 1585], [1404, 1589, 1504, 1603], [1404, 1612, 1500, 1629], [1405, 1634, 1427, 1647], [1405, 1657, 1428, 1670], [1916, 1730, 2015, 1756], [1858, 1698, 1892, 1717], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1669, 1518, 1686, 1521], [1669, 1501, 1687, 1515], [1669, 1486, 1686, 1499], [1669, 1468, 1686, 1482], [1696, 1681, 1705, 1695], [1697, 1604, 1702, 1618], [1696, 1527, 1705, 1541], [1696, 1451, 1705, 1465], [1696, 1374, 1705, 1388], [1696, 1298, 1705, 1312], [1745, 1266, 2125, 1295], [2070, 1500, 2183, 1518], [2070, 1522, 2128, 1536], [2070, 1544, 2202, 1558], [2069, 1568, 2110, 1585], [2070, 1589, 2170, 1603], [2070, 1612, 2166, 1629], [2071, 1634, 2093, 1647], [2071, 1657, 2094, 1670], [584, 2244, 683, 2270], [429, 2212, 465, 2232], [609, 2212, 643, 2232], [792, 2212, 823, 2232], [337, 2033, 354, 2036], [337, 2016, 355, 2030], [337, 2001, 354, 2014], [337, 1983, 354, 1997], [364, 2195, 373, 2209], [365, 2141, 370, 2155], [364, 2087, 373, 2101], [364, 2033, 373, 2047], [364, 1979, 373, 1993], [364, 1925, 373, 1939], [364, 1871, 373, 1885], [364, 1817, 373, 1831], [399, 1781, 812, 1810], [738, 2015, 851, 2033], [738, 2037, 796, 2051], [738, 2059, 870, 2073], [737, 2082, 778, 2099], [738, 2104, 838, 2118], [738, 2127, 834, 2144], [739, 2149, 761, 2162], [739, 2171, 762, 2184], [1250, 2244, 1349, 2270], [1129, 2212, 1163, 2232], [1307, 2212, 1338, 2232], [1481, 2212, 1510, 2232], [990, 2033, 1007, 2036], [990, 2016, 1008, 2030], [990, 2001, 1007, 2014], [990, 1983, 1007, 1997], [1030, 2195, 1039, 2209], [1030, 2134, 1039, 2148], [1030, 2072, 1039, 2086], [1030, 2011, 1039, 2025], [1030, 1949, 1039, 1963], [1018, 1888, 1037, 1902], [1018, 1826, 1037, 1840], [1048, 1781, 1487, 1810], [1404, 2015, 1517, 2033], [1404, 2037, 1462, 2051], [1404, 2059, 1536, 2073], [1403, 2082, 1444, 2099], [1404, 2104, 1504, 2118], [1404, 2127, 1500, 2144], [1405, 2149, 1427, 2162], [1405, 2171, 1428, 2184], [1916, 2244, 2015, 2270], [1715, 2212, 1749, 2232], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1669, 2033, 1686, 2036], [1669, 2016, 1687, 2030], [1669, 2001, 1686, 2014], [1669, 1983, 1686, 1997], [1696, 2195, 1705, 2209], [1697, 2133, 1702, 2147], [1696, 2070, 1705, 2084], [1696, 2008, 1705, 2022], [1696, 1945, 1705, 1959], [1696, 1883, 1705, 1897], [1696, 1820, 1705, 1834], [1704, 1781, 2157, 1810], [2070, 2015, 2183, 2033], [2070, 2037, 2128, 2051], [2070, 2059, 2202, 2073], [2069, 2082, 2110, 2099], [2070, 2104, 2170, 2118], [2070, 2127, 2166, 2144], [2071, 2149, 2093, 2162], [2071, 2171, 2094, 2184], [376, 2296, 2175, 2333], [376, 2347, 1493, 2384], [437, 2480, 2173, 2518], [375, 2532, 1188, 2569], [376, 2642, 983, 2680], [376, 2722, 2173, 2759], [376, 2773, 2173, 2810], [1256, 2935, 1294, 2964], [609, 270, 1436, 310], [1409, 276, 1927, 314], [415, 352, 542, 380], [876, 352, 1053, 389], [415, 442, 1479, 480], [791, 494, 1270, 531], [792, 562, 818, 563], [877, 545, 1316, 582], [786, 596, 1431, 633], [415, 687, 707, 724], [791, 687, 1467, 718], [792, 755, 818, 756], [876, 738, 1205, 767], [786, 789, 1135, 818], [416, 881, 653, 918], [791, 881, 1483, 918], [792, 949, 818, 950], [877, 932, 1455, 969], [786, 982, 1135, 1011], [415, 1074, 700, 1103], [792, 1091, 818, 1092], [877, 1074, 959, 1103], [786, 1125, 1298, 1154], [415, 1216, 534, 1245], [791, 1216, 2135, 1253], [876, 1267, 1133, 1304], [792, 1335, 818, 1336], [876, 1318, 1967, 1355], [786, 1369, 1782, 1406], [415, 1461, 669, 1498], [791, 1462, 1114, 1492], [792, 1528, 818, 1529], [877, 1511, 1428, 1548], [792, 1579, 818, 1580], [876, 1562, 1518, 1599], [786, 1613, 1288, 1650], [415, 1705, 623, 1742], [791, 1706, 1114, 1736], [792, 1772, 818, 1773], [877, 1755, 1453, 1784], [786, 1806, 1780, 1843], [415, 1898, 636, 1927], [791, 1898, 1573, 1935], [792, 1966, 818, 1967], [877, 1949, 959, 1978], [792, 2017, 818, 2018], [876, 2000, 1555, 2037], [786, 2050, 1645, 2087], [376, 2207, 2174, 2244], [375, 2257, 2179, 2294], [375, 2308, 2173, 2345], [377, 2359, 2174, 2396], [375, 2410, 2174, 2447], [377, 2461, 1241, 2498], [437, 2511, 2174, 2548], [377, 2562, 2171, 2599], [376, 2613, 2175, 2650], [377, 2664, 1221, 2701], [1255, 2935, 1295, 2964], [376, 637, 796, 652], [338, 599, 348, 614], [338, 540, 348, 555], [338, 481, 348, 496], [328, 422, 348, 437], [328, 363, 348, 378], [328, 304, 348, 319], [485, 656, 651, 676], [302, 484, 317, 496], [302, 480, 317, 482], [306, 462, 317, 477], [306, 450, 317, 460], [302, 438, 321, 442], [306, 421, 317, 436], [306, 409, 317, 418], [302, 404, 321, 408], [429, 236, 709, 256], [889, 637, 1300, 652], [841, 606, 862, 621], [831, 534, 862, 549], [831, 463, 862, 478], [830, 391, 862, 406], [830, 319, 862, 334], [996, 657, 1157, 675], [805, 488, 820, 500], [805, 484, 820, 486], [809, 467, 820, 482], [809, 455, 820, 465], [805, 443, 824, 447], [809, 426, 820, 441], [809, 416, 820, 424], [805, 410, 824, 414], [933, 246, 1223, 265], [1384, 637, 1804, 652], [1336, 581, 1356, 596], [1336, 509, 1356, 524], [1335, 437, 1356, 452], [1335, 365, 1356, 380], [1335, 292, 1356, 307], [1493, 656, 1659, 676], [1310, 484, 1325, 496], [1310, 480, 1325, 482], [1314, 462, 1325, 477], [1314, 450, 1325, 460], [1310, 438, 1329, 442], [1314, 421, 1325, 436], [1314, 409, 1325, 418], [1310, 404, 1329, 408], [1428, 236, 1725, 256], [1897, 637, 2308, 652], [1839, 614, 1870, 629], [1838, 564, 1870, 579], [1838, 514, 1870, 529], [1838, 464, 1870, 479], [1838, 415, 1870, 430], [1838, 365, 1870, 380], [1838, 315, 1870, 330], [2004, 657, 2165, 675], [1813, 488, 1828, 500], [1813, 484, 1828, 486], [1817, 467, 1828, 482], [1817, 455, 1828, 465], [1813, 443, 1832, 447], [1817, 426, 1828, 441], [1817, 416, 1828, 424], [1813, 410, 1832, 414], [1961, 246, 2211, 265], [385, 1098, 796, 1113], [337, 1047, 358, 1062], [327, 969, 358, 984], [327, 891, 358, 906], [326, 813, 358, 828], [326, 735, 358, 750], [492, 1118, 653, 1136], [301, 948, 316, 960], [301, 945, 316, 947], [305, 927, 316, 942], [305, 915, 316, 925], [301, 903, 320, 907], [305, 886, 316, 901], [305, 876, 316, 884], [301, 870, 320, 874], [438, 706, 710, 725], [898, 1099, 1299, 1113], [839, 1050, 871, 1064], [829, 978, 871, 992], [829, 906, 871, 920], [828, 834, 871, 848], [828, 762, 871, 776], [1001, 1118, 1161, 1136], [804, 950, 819, 962], [804, 947, 819, 949], [808, 930, 819, 944], [808, 918, 819, 927], [804, 905, 823, 910], [808, 890, 819, 904], [808, 879, 819, 887], [804, 873, 823, 877], [941, 710, 1225, 729], [1402, 1099, 1803, 1113], [1333, 1049, 1375, 1063], [1332, 1003, 1375, 1017], [1332, 956, 1375, 970], [1332, 910, 1375, 924], [1332, 864, 1375, 878], [1332, 817, 1375, 831], [1332, 771, 1375, 785], [1505, 1118, 1665, 1136], [1308, 950, 1323, 962], [1308, 947, 1323, 949], [1312, 930, 1323, 944], [1312, 918, 1323, 927], [1308, 905, 1327, 910], [1312, 890, 1323, 904], [1312, 879, 1323, 887], [1308, 873, 1327, 877], [1439, 710, 1732, 729], [1892, 1097, 2308, 1112], [1856, 1043, 1861, 1058], [1839, 962, 1865, 977], [1855, 881, 1865, 896], [1838, 799, 1865, 814], [1868, 714, 1907, 729], [1907, 706, 1914, 716], [2000, 1118, 2165, 1137], [1813, 946, 1828, 958], [1813, 943, 1828, 945], [1817, 925, 1828, 940], [1817, 913, 1828, 923], [1813, 900, 1832, 904], [1817, 883, 1828, 898], [1817, 872, 1828, 881], [1813, 867, 1832, 871], [1948, 701, 2218, 721], [703, 1222, 1845, 1259], [375, 1355, 1079, 1393], [374, 1433, 2173, 1471], [376, 1484, 2173, 1522], [375, 1536, 956, 1573], [1119, 1587, 1427, 1624], [374, 1663, 2177, 1700], [375, 1713, 1357, 1750], [982, 1806, 1050, 1834], [1002, 1841, 1030, 1861], [1107, 1798, 1118, 1817], [1106, 1798, 1383, 1848], [1368, 1803, 1564, 1844], [2097, 1805, 2173, 1841], [374, 1911, 2173, 1952], [376, 1964, 1892, 2001], [438, 2014, 2174, 2052], [375, 2066, 2174, 2103], [375, 2117, 2173, 2154], [376, 2168, 2173, 2205], [375, 2218, 2174, 2255], [375, 2268, 2173, 2306], [374, 2320, 2174, 2357], [374, 2371, 679, 2408], [437, 2421, 2173, 2459], [375, 2471, 2174, 2509], [375, 2523, 2174, 2560], [374, 2574, 2174, 2611], [376, 2625, 703, 2662], [438, 2675, 2174, 2713], [375, 2726, 2174, 2763], [376, 2776, 2073, 2814], [1255, 2935, 1291, 2963], [829, 263, 931, 299], [1063, 262, 1267, 291], [1428, 263, 1609, 290], [828, 353, 1012, 388], [1105, 353, 1225, 381], [1349, 352, 1686, 390], [830, 404, 922, 441], [1097, 404, 1233, 441], [1433, 404, 1605, 433], [829, 455, 966, 483], [1127, 455, 1204, 483], [1447, 454, 1590, 484], [829, 506, 964, 543], [1105, 506, 1225, 534], [1360, 505, 1676, 543], [829, 561, 890, 585], [1097, 557, 1233, 594], [1423, 557, 1617, 586], [829, 607, 928, 635], [1090, 607, 1240, 636], [1352, 606, 1687, 641], [829, 662, 955, 686], [1127, 658, 1204, 686], [1447, 657, 1590, 687], [828, 709, 973, 746], [1105, 709, 1225, 737], [1318, 709, 1717, 746], [374, 856, 2173, 892], [376, 905, 2174, 939], [375, 951, 2176, 985], [376, 998, 2174, 1032], [376, 1045, 1651, 1079], [438, 1164, 2175, 1201], [376, 1214, 2173, 1251], [376, 1265, 2179, 1302], [374, 1316, 2176, 1353], [376, 1367, 2174, 1404], [376, 1418, 2174, 1455], [376, 1468, 2174, 1505], [376, 1513, 1028, 1556], [1035, 1543, 1040, 1547], [1065, 1519, 2174, 1556], [376, 1569, 2175, 1607], [376, 1621, 2176, 1658], [376, 1672, 1109, 1709], [437, 1722, 2178, 1759], [376, 1773, 2173, 1810], [376, 1824, 2173, 1861], [377, 1875, 2174, 1912], [377, 1926, 1610, 1963], [438, 1977, 1729, 2014], [376, 2084, 1167, 2122], [374, 2163, 2173, 2201], [374, 2213, 1266, 2252], [895, 2293, 982, 2327], [1043, 2286, 1054, 2305], [1042, 2285, 1222, 2335], [1209, 2290, 1546, 2331], [1549, 2283, 1581, 2303], [1549, 2290, 1652, 2331], [438, 2370, 2174, 2408], [375, 2422, 1253, 2459], [811, 2499, 910, 2534], [971, 2492, 982, 2511], [970, 2491, 1178, 2542], [1163, 2496, 1607, 2538], [1608, 2490, 1642, 2510], [1610, 2496, 1735, 2544], [2097, 2498, 2173, 2534], [376, 2577, 2174, 2614], [376, 2627, 1992, 2665], [438, 2678, 2174, 2716], [376, 2730, 779, 2767], [775, 2817, 1069, 2853], [1048, 2805, 1620, 2859], [1599, 2805, 1740, 2859], [1746, 2800, 1771, 2850], [1255, 2935, 1295, 2963], [584, 700, 683, 726], [524, 668, 558, 688], [755, 668, 786, 688], [309, 629, 326, 643], [313, 616, 327, 627], [309, 611, 326, 613], [313, 597, 327, 609], [310, 591, 327, 597], [309, 586, 326, 588], [314, 574, 326, 585], [313, 561, 327, 572], [309, 542, 327, 553], [309, 537, 326, 539], [313, 524, 327, 534], [310, 518, 327, 524], [313, 504, 327, 516], [313, 493, 326, 502], [313, 480, 327, 490], [313, 468, 327, 479], [310, 454, 327, 460], [313, 441, 327, 452], [313, 422, 327, 433], [313, 409, 331, 420], [310, 402, 327, 408], [309, 397, 326, 399], [313, 378, 326, 394], [314, 366, 327, 375], [313, 346, 326, 362], [338, 527, 374, 546], [338, 379, 374, 399], [312, 235, 885, 265], [440, 471, 567, 488], [440, 494, 567, 511], [440, 516, 567, 533], [440, 538, 567, 555], [441, 561, 486, 578], [441, 583, 496, 600], [441, 605, 496, 622], [441, 627, 496, 644], [1250, 700, 1349, 726], [1066, 668, 1100, 688], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [975, 629, 992, 643], [979, 616, 993, 627], [975, 611, 992, 613], [979, 597, 993, 609], [976, 591, 993, 597], [975, 586, 992, 588], [980, 574, 992, 585], [979, 561, 993, 572], [975, 542, 993, 553], [975, 537, 992, 539], [979, 524, 993, 534], [976, 518, 993, 524], [979, 504, 993, 516], [979, 493, 992, 502], [979, 480, 993, 490], [979, 468, 993, 479], [976, 454, 993, 460], [979, 441, 993, 452], [979, 422, 993, 433], [979, 409, 997, 420], [976, 402, 993, 408], [975, 397, 992, 399], [979, 378, 992, 394], [980, 366, 993, 375], [979, 346, 992, 362], [1004, 520, 1040, 539], [1004, 379, 1040, 398], [977, 235, 1546, 265], [1106, 471, 1233, 488], [1106, 494, 1233, 511], [1106, 516, 1233, 533], [1106, 538, 1233, 555], [1107, 561, 1152, 578], [1107, 583, 1162, 600], [1107, 605, 1162, 622], [1107, 627, 1162, 644], [1916, 700, 2015, 726], [1696, 668, 1730, 688], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1641, 629, 1658, 643], [1645, 616, 1659, 627], [1641, 611, 1658, 613], [1645, 597, 1659, 609], [1642, 591, 1659, 597], [1641, 586, 1658, 588], [1646, 574, 1658, 585], [1645, 561, 1659, 572], [1641, 542, 1659, 553], [1641, 537, 1658, 539], [1645, 524, 1659, 534], [1642, 518, 1659, 524], [1645, 504, 1659, 516], [1645, 493, 1658, 502], [1645, 480, 1659, 490], [1645, 468, 1659, 479], [1642, 454, 1659, 460], [1645, 441, 1659, 452], [1645, 422, 1659, 433], [1645, 409, 1663, 420], [1642, 402, 1659, 408], [1641, 397, 1658, 399], [1645, 378, 1658, 394], [1646, 366, 1659, 375], [1645, 346, 1658, 362], [1670, 517, 1706, 537], [1670, 378, 1706, 397], [1643, 235, 2217, 265], [1772, 471, 1899, 488], [1772, 494, 1899, 511], [1772, 516, 1899, 533], [1772, 538, 1899, 555], [1773, 561, 1818, 578], [1773, 583, 1828, 600], [1773, 605, 1828, 622], [1773, 627, 1828, 644], [584, 1215, 683, 1241], [517, 1183, 548, 1202], [738, 1183, 767, 1202], [309, 1144, 326, 1158], [313, 1131, 327, 1142], [309, 1126, 326, 1128], [313, 1111, 327, 1123], [310, 1105, 327, 1111], [309, 1101, 326, 1103], [314, 1089, 326, 1100], [313, 1076, 327, 1087], [309, 1056, 327, 1067], [309, 1051, 326, 1053], [313, 1039, 327, 1049], [310, 1032, 327, 1038], [313, 1019, 327, 1031], [313, 1008, 326, 1017], [313, 995, 327, 1005], [313, 982, 327, 993], [310, 969, 327, 975], [313, 956, 327, 967], [313, 937, 327, 948], [313, 924, 331, 935], [310, 917, 327, 923], [309, 912, 326, 914], [313, 893, 326, 909], [314, 880, 327, 889], [313, 860, 326, 876], [338, 1034, 374, 1053], [338, 893, 374, 913], [312, 750, 885, 780], [440, 986, 567, 1003], [440, 1008, 567, 1025], [440, 1031, 567, 1048], [440, 1053, 567, 1070], [441, 1075, 486, 1092], [441, 1098, 496, 1115], [441, 1120, 496, 1137], [441, 1142, 496, 1159], [1250, 1215, 1349, 1241], [1164, 1183, 1195, 1202], [1369, 1183, 1398, 1202], [975, 1144, 992, 1158], [979, 1131, 993, 1142], [975, 1126, 992, 1128], [979, 1111, 993, 1123], [976, 1105, 993, 1111], [975, 1101, 992, 1103], [980, 1089, 992, 1100], [979, 1076, 993, 1087], [975, 1056, 993, 1067], [975, 1051, 992, 1053], [979, 1039, 993, 1049], [976, 1032, 993, 1038], [979, 1019, 993, 1031], [979, 1008, 992, 1017], [979, 995, 993, 1005], [979, 982, 993, 993], [976, 969, 993, 975], [979, 956, 993, 967], [979, 937, 993, 948], [979, 924, 997, 935], [976, 917, 993, 923], [975, 912, 992, 914], [979, 893, 992, 909], [980, 880, 993, 889], [979, 860, 992, 876], [1004, 1035, 1040, 1054], [1004, 893, 1040, 913], [977, 750, 1551, 780], [1106, 986, 1233, 1003], [1106, 1008, 1233, 1025], [1106, 1031, 1233, 1048], [1106, 1053, 1233, 1070], [1107, 1075, 1152, 1092], [1107, 1098, 1162, 1115], [1107, 1120, 1162, 1137], [1107, 1142, 1162, 1159], [1916, 1215, 2015, 1241], [1816, 1183, 1850, 1202], [2046, 1183, 2077, 1202], [1641, 1137, 1658, 1151], [1645, 1124, 1659, 1135], [1641, 1119, 1658, 1121], [1645, 1105, 1659, 1117], [1642, 1099, 1659, 1105], [1641, 1094, 1658, 1096], [1646, 1082, 1658, 1093], [1645, 1069, 1659, 1080], [1641, 1050, 1659, 1061], [1641, 1045, 1658, 1047], [1645, 1033, 1659, 1043], [1642, 1026, 1659, 1032], [1645, 1012, 1659, 1024], [1645, 1001, 1658, 1010], [1645, 988, 1659, 998], [1645, 976, 1659, 987], [1642, 962, 1659, 968], [1645, 950, 1659, 961], [1645, 930, 1659, 941], [1645, 917, 1663, 928], [1642, 910, 1659, 916], [1641, 906, 1658, 908], [1645, 886, 1658, 902], [1646, 874, 1659, 883], [1645, 854, 1658, 870], [1670, 1140, 1706, 1159], [1670, 1008, 1706, 1027], [1670, 875, 1706, 895], [1691, 752, 2169, 781], [1772, 986, 1899, 1003], [1772, 1008, 1899, 1025], [1772, 1031, 1899, 1048], [1772, 1053, 1899, 1070], [1773, 1075, 1818, 1092], [1773, 1098, 1828, 1115], [1773, 1120, 1828, 1137], [1773, 1142, 1828, 1159], [584, 1730, 683, 1756], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [309, 1652, 326, 1666], [313, 1639, 327, 1650], [309, 1634, 326, 1636], [313, 1620, 327, 1632], [310, 1614, 327, 1620], [309, 1609, 326, 1611], [314, 1597, 326, 1608], [313, 1584, 327, 1595], [309, 1565, 327, 1576], [309, 1560, 326, 1562], [313, 1547, 327, 1557], [310, 1541, 327, 1547], [313, 1527, 327, 1539], [313, 1516, 326, 1525], [313, 1503, 327, 1513], [313, 1490, 327, 1501], [310, 1477, 327, 1483], [313, 1464, 327, 1475], [313, 1445, 327, 1456], [313, 1432, 331, 1443], [310, 1425, 327, 1431], [309, 1420, 326, 1422], [313, 1401, 326, 1417], [314, 1389, 327, 1398], [313, 1369, 326, 1385], [338, 1636, 374, 1656], [338, 1512, 374, 1532], [338, 1388, 374, 1408], [338, 1266, 847, 1295], [440, 1501, 567, 1518], [440, 1523, 567, 1540], [440, 1545, 567, 1562], [440, 1568, 567, 1585], [441, 1590, 486, 1607], [441, 1612, 496, 1629], [441, 1634, 496, 1651], [441, 1657, 496, 1674], [1250, 1730, 1349, 1756], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [975, 1652, 992, 1666], [979, 1639, 993, 1650], [975, 1634, 992, 1636], [979, 1620, 993, 1632], [976, 1614, 993, 1620], [975, 1609, 992, 1611], [980, 1597, 992, 1608], [979, 1584, 993, 1595], [975, 1565, 993, 1576], [975, 1560, 992, 1562], [979, 1547, 993, 1557], [976, 1541, 993, 1547], [979, 1527, 993, 1539], [979, 1516, 992, 1525], [979, 1503, 993, 1513], [979, 1490, 993, 1501], [976, 1477, 993, 1483], [979, 1464, 993, 1475], [979, 1445, 993, 1456], [979, 1432, 997, 1443], [976, 1425, 993, 1431], [975, 1420, 992, 1422], [979, 1401, 992, 1417], [980, 1389, 993, 1398], [979, 1369, 992, 1385], [1004, 1554, 1040, 1573], [1004, 1400, 1040, 1420], [1005, 1266, 1512, 1295], [1106, 1501, 1233, 1518], [1106, 1523, 1233, 1540], [1106, 1545, 1233, 1562], [1106, 1568, 1233, 1585], [1107, 1590, 1152, 1607], [1107, 1612, 1162, 1629], [1107, 1634, 1162, 1651], [1107, 1657, 1162, 1674], [1916, 1730, 2015, 1756], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1641, 1652, 1658, 1666], [1645, 1639, 1659, 1650], [1641, 1634, 1658, 1636], [1645, 1620, 1659, 1632], [1642, 1614, 1659, 1620], [1641, 1609, 1658, 1611], [1646, 1597, 1658, 1608], [1645, 1584, 1659, 1595], [1641, 1565, 1659, 1576], [1641, 1560, 1658, 1562], [1645, 1547, 1659, 1557], [1642, 1541, 1659, 1547], [1645, 1527, 1659, 1539], [1645, 1516, 1658, 1525], [1645, 1503, 1659, 1513], [1645, 1490, 1659, 1501], [1642, 1477, 1659, 1483], [1645, 1464, 1659, 1475], [1645, 1445, 1659, 1456], [1645, 1432, 1663, 1443], [1642, 1425, 1659, 1431], [1641, 1420, 1658, 1422], [1645, 1401, 1658, 1417], [1646, 1389, 1659, 1398], [1645, 1369, 1658, 1385], [1670, 1542, 1706, 1561], [1670, 1400, 1706, 1420], [1707, 1266, 2151, 1295], [1772, 1501, 1899, 1518], [1772, 1523, 1899, 1540], [1772, 1545, 1899, 1562], [1772, 1568, 1899, 1585], [1773, 1590, 1818, 1607], [1773, 1612, 1828, 1629], [1773, 1634, 1828, 1651], [1773, 1657, 1828, 1674], [584, 2244, 683, 2270], [553, 2212, 584, 2232], [762, 2212, 791, 2232], [309, 2166, 326, 2180], [313, 2154, 327, 2165], [309, 2149, 326, 2151], [313, 2134, 327, 2146], [310, 2128, 327, 2134], [309, 2124, 326, 2126], [314, 2112, 326, 2123], [313, 2099, 327, 2110], [309, 2079, 327, 2090], [309, 2074, 326, 2076], [313, 2062, 327, 2072], [310, 2055, 327, 2061], [313, 2042, 327, 2054], [313, 2031, 326, 2040], [313, 2018, 327, 2028], [313, 2005, 327, 2016], [310, 1992, 327, 1998], [313, 1979, 327, 1990], [313, 1960, 327, 1971], [313, 1947, 331, 1958], [310, 1940, 327, 1946], [309, 1935, 326, 1937], [313, 1916, 326, 1932], [314, 1903, 327, 1912], [313, 1883, 326, 1899], [338, 2146, 374, 2165], [338, 2022, 374, 2041], [338, 1897, 374, 1916], [361, 1781, 838, 1810], [440, 2016, 567, 2033], [440, 2038, 567, 2055], [440, 2060, 567, 2077], [440, 2082, 567, 2099], [441, 2105, 486, 2122], [441, 2127, 496, 2144], [441, 2149, 496, 2166], [441, 2171, 496, 2188], [1250, 2244, 1349, 2270], [1217, 2212, 1246, 2232], [1439, 2212, 1471, 2232], [975, 2166, 992, 2180], [979, 2154, 993, 2165], [975, 2149, 992, 2151], [979, 2134, 993, 2146], [976, 2128, 993, 2134], [975, 2124, 992, 2126], [980, 2112, 992, 2123], [979, 2099, 993, 2110], [975, 2079, 993, 2090], [975, 2074, 992, 2076], [979, 2062, 993, 2072], [976, 2055, 993, 2061], [979, 2042, 993, 2054], [979, 2031, 992, 2040], [979, 2018, 993, 2028], [979, 2005, 993, 2016], [976, 1992, 993, 1998], [979, 1979, 993, 1990], [979, 1960, 993, 1971], [979, 1947, 997, 1958], [976, 1940, 993, 1946], [975, 1935, 992, 1937], [979, 1916, 992, 1932], [980, 1903, 993, 1912], [979, 1883, 992, 1899], [1004, 2153, 1040, 2173], [1004, 2029, 1040, 2049], [1004, 1905, 1040, 1925], [1010, 1781, 1513, 1810], [1106, 2016, 1233, 2033], [1106, 2038, 1233, 2055], [1106, 2060, 1233, 2077], [1106, 2082, 1233, 2099], [1107, 2105, 1152, 2122], [1107, 2127, 1162, 2144], [1107, 2149, 1162, 2166], [1107, 2171, 1162, 2188], [1916, 2244, 2015, 2270], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1641, 2166, 1658, 2180], [1645, 2154, 1659, 2165], [1641, 2149, 1658, 2151], [1645, 2134, 1659, 2146], [1642, 2128, 1659, 2134], [1641, 2124, 1658, 2126], [1646, 2112, 1658, 2123], [1645, 2099, 1659, 2110], [1641, 2079, 1659, 2090], [1641, 2074, 1658, 2076], [1645, 2062, 1659, 2072], [1642, 2055, 1659, 2061], [1645, 2042, 1659, 2054], [1645, 2031, 1658, 2040], [1645, 2018, 1659, 2028], [1645, 2005, 1659, 2016], [1642, 1992, 1659, 1998], [1645, 1979, 1659, 1990], [1645, 1960, 1659, 1971], [1645, 1947, 1663, 1958], [1642, 1940, 1659, 1946], [1641, 1935, 1658, 1937], [1645, 1916, 1658, 1932], [1646, 1903, 1659, 1912], [1645, 1883, 1658, 1899], [1670, 2121, 1706, 2141], [1670, 2008, 1706, 2027], [1670, 1895, 1706, 1915], [1666, 1781, 2183, 1810], [1772, 2016, 1899, 2033], [1772, 2038, 1899, 2055], [1772, 2060, 1899, 2077], [1772, 2082, 1899, 2099], [1773, 2105, 1818, 2122], [1773, 2127, 1828, 2144], [1773, 2149, 1828, 2166], [1773, 2171, 1828, 2188], [376, 2356, 2177, 2393], [376, 2406, 1279, 2443], [438, 2530, 1550, 2577], [1519, 2540, 2179, 2584], [376, 2591, 2175, 2628], [377, 2641, 1188, 2678], [1189, 2632, 1223, 2652], [1191, 2661, 1229, 2686], [1236, 2641, 2174, 2678], [375, 2691, 2174, 2729], [375, 2743, 1445, 2780], [1255, 2935, 1293, 2964], [584, 700, 683, 726], [524, 668, 558, 688], [755, 668, 786, 688], [317, 495, 334, 498], [317, 478, 335, 492], [317, 463, 334, 476], [317, 445, 334, 459], [346, 638, 371, 652], [346, 580, 371, 594], [346, 522, 371, 536], [346, 464, 371, 478], [364, 406, 373, 420], [345, 348, 371, 362], [345, 290, 371, 304], [312, 235, 885, 265], [738, 471, 865, 488], [738, 494, 865, 511], [738, 516, 865, 533], [738, 538, 865, 555], [739, 561, 785, 578], [739, 583, 795, 600], [739, 605, 795, 622], [739, 627, 795, 644], [1250, 700, 1349, 726], [1066, 668, 1100, 688], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [983, 495, 1000, 498], [983, 478, 1001, 492], [983, 463, 1000, 476], [983, 445, 1000, 459], [1012, 620, 1037, 634], [1030, 459, 1039, 473], [1011, 298, 1037, 312], [977, 235, 1546, 265], [1404, 471, 1531, 488], [1404, 494, 1531, 511], [1404, 516, 1531, 533], [1404, 538, 1531, 555], [1405, 561, 1451, 578], [1405, 583, 1461, 600], [1405, 605, 1461, 622], [1405, 627, 1461, 644], [1916, 700, 2015, 726], [1696, 668, 1730, 688], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1649, 495, 1666, 498], [1649, 478, 1667, 492], [1649, 463, 1666, 476], [1649, 445, 1666, 459], [1678, 600, 1703, 614], [1696, 535, 1705, 549], [1677, 471, 1703, 485], [1677, 407, 1703, 421], [1677, 343, 1703, 357], [1677, 278, 1703, 292], [1643, 235, 2217, 265], [2070, 471, 2197, 488], [2070, 494, 2197, 511], [2070, 516, 2197, 533], [2070, 538, 2197, 555], [2071, 561, 2116, 578], [2071, 583, 2127, 600], [2071, 605, 2127, 622], [2071, 627, 2127, 644], [584, 1215, 683, 1241], [517, 1183, 548, 1202], [738, 1183, 767, 1202], [317, 1010, 334, 1013], [317, 993, 335, 1007], [317, 978, 334, 991], [317, 960, 334, 974], [346, 1115, 371, 1129], [364, 1052, 373, 1066], [345, 989, 371, 1003], [345, 926, 371, 940], [345, 863, 371, 877], [345, 800, 371, 814], [312, 750, 885, 780], [738, 986, 865, 1003], [738, 1008, 865, 1025], [738, 1031, 865, 1048], [738, 1053, 865, 1070], [739, 1075, 785, 1092], [739, 1098, 795, 1115], [739, 1120, 795, 1137], [739, 1142, 795, 1159], [1250, 1215, 1349, 1241], [1164, 1183, 1195, 1202], [1369, 1183, 1398, 1202], [983, 1010, 1000, 1013], [983, 993, 1001, 1007], [983, 978, 1000, 991], [983, 960, 1000, 974], [1012, 1131, 1037, 1145], [1012, 1068, 1037, 1082], [1030, 1005, 1039, 1019], [1011, 942, 1037, 956], [1011, 879, 1037, 893], [1011, 815, 1037, 829], [977, 750, 1551, 780], [1404, 986, 1531, 1003], [1404, 1008, 1531, 1025], [1404, 1031, 1531, 1048], [1404, 1053, 1531, 1070], [1405, 1075, 1451, 1092], [1405, 1098, 1461, 1115], [1405, 1120, 1461, 1137], [1405, 1142, 1461, 1159], [1916, 1215, 2015, 1241], [1816, 1183, 1850, 1202], [2046, 1183, 2077, 1202], [1649, 1003, 1666, 1006], [1649, 987, 1667, 1001], [1649, 971, 1666, 984], [1649, 953, 1666, 967], [1696, 1081, 1705, 1095], [1677, 979, 1703, 993], [1696, 878, 1705, 892], [1691, 752, 2169, 781], [2070, 986, 2197, 1003], [2070, 1008, 2197, 1025], [2070, 1031, 2197, 1048], [2070, 1053, 2197, 1070], [2071, 1075, 2116, 1092], [2071, 1098, 2127, 1115], [2071, 1120, 2127, 1137], [2071, 1142, 2127, 1159], [584, 1730, 683, 1756], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [317, 1518, 334, 1521], [317, 1501, 335, 1515], [317, 1486, 334, 1499], [317, 1468, 334, 1482], [364, 1632, 373, 1646], [345, 1580, 371, 1594], [364, 1528, 373, 1542], [345, 1476, 371, 1490], [364, 1423, 373, 1437], [345, 1371, 371, 1385], [364, 1319, 373, 1333], [338, 1266, 847, 1295], [738, 1501, 865, 1518], [738, 1523, 865, 1540], [738, 1545, 865, 1562], [738, 1568, 865, 1585], [739, 1590, 785, 1607], [739, 1612, 795, 1629], [739, 1634, 795, 1651], [739, 1657, 795, 1674], [1250, 1730, 1349, 1756], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [983, 1518, 1000, 1521], [983, 1501, 1001, 1515], [983, 1486, 1000, 1499], [983, 1468, 1000, 1482], [1012, 1671, 1037, 1685], [1012, 1612, 1037, 1626], [1030, 1552, 1039, 1566], [1011, 1493, 1037, 1507], [1011, 1434, 1037, 1448], [1011, 1375, 1037, 1389], [1011, 1316, 1037, 1330], [1005, 1266, 1512, 1295], [1404, 1501, 1531, 1518], [1404, 1523, 1531, 1540], [1404, 1545, 1531, 1562], [1404, 1568, 1531, 1585], [1405, 1590, 1451, 1607], [1405, 1612, 1461, 1629], [1405, 1634, 1461, 1651], [1405, 1657, 1461, 1674], [1916, 1730, 2015, 1756], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1649, 1518, 1666, 1521], [1649, 1501, 1667, 1515], [1649, 1486, 1666, 1499], [1649, 1468, 1666, 1482], [1678, 1653, 1703, 1667], [1678, 1581, 1703, 1595], [1696, 1510, 1705, 1524], [1677, 1438, 1703, 1452], [1677, 1366, 1703, 1380], [1707, 1266, 2151, 1295], [2070, 1501, 2197, 1518], [2070, 1523, 2197, 1540], [2070, 1545, 2197, 1562], [2070, 1568, 2197, 1585], [2071, 1590, 2116, 1607], [2071, 1612, 2127, 1629], [2071, 1634, 2127, 1651], [2071, 1657, 2127, 1674], [584, 2244, 683, 2270], [553, 2212, 584, 2232], [762, 2212, 791, 2232], [317, 2033, 334, 2036], [317, 2016, 335, 2030], [317, 2001, 334, 2014], [317, 1983, 334, 1997], [365, 2189, 370, 2203], [346, 2105, 371, 2119], [364, 2021, 373, 2035], [345, 1936, 371, 1950], [364, 1852, 373, 1866], [361, 1781, 838, 1810], [738, 2016, 865, 2033], [738, 2038, 865, 2055], [738, 2060, 865, 2077], [738, 2082, 865, 2099], [739, 2105, 785, 2122], [739, 2127, 795, 2144], [739, 2149, 795, 2166], [739, 2171, 795, 2188], [1250, 2244, 1349, 2270], [1217, 2212, 1246, 2232], [1439, 2212, 1471, 2232], [1003, 2033, 1020, 2036], [1003, 2016, 1021, 2030], [1003, 2001, 1020, 2014], [1003, 1983, 1020, 1997], [1030, 2152, 1039, 2166], [1030, 2075, 1039, 2089], [1030, 1998, 1039, 2012], [1030, 1921, 1039, 1935], [1030, 1845, 1039, 1859], [1010, 1781, 1513, 1810], [1404, 2016, 1531, 2033], [1404, 2038, 1531, 2055], [1404, 2060, 1531, 2077], [1404, 2082, 1531, 2099], [1405, 2105, 1451, 2122], [1405, 2127, 1461, 2144], [1405, 2149, 1461, 2166], [1405, 2171, 1461, 2188], [1916, 2244, 2015, 2270], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1649, 2033, 1666, 2036], [1649, 2016, 1667, 2030], [1649, 2001, 1666, 2014], [1649, 1983, 1666, 1997], [1678, 2165, 1703, 2179], [1696, 2123, 1705, 2137], [1677, 2081, 1703, 2095], [1696, 2039, 1705, 2053], [1677, 1996, 1703, 2010], [1696, 1954, 1705, 1968], [1677, 1912, 1703, 1926], [1696, 1870, 1705, 1884], [1677, 1828, 1703, 1842], [1666, 1781, 2183, 1810], [2070, 2016, 2197, 2033], [2070, 2038, 2197, 2055], [2070, 2060, 2197, 2077], [2070, 2082, 2197, 2099], [2071, 2105, 2116, 2122], [2071, 2127, 2127, 2144], [2071, 2149, 2127, 2166], [2071, 2171, 2127, 2188], [376, 2356, 2175, 2393], [376, 2406, 1493, 2443], [376, 2533, 1292, 2577], [373, 2617, 2173, 2655], [376, 2667, 2174, 2705], [375, 2712, 1032, 2749], [1037, 2719, 1874, 2756], [942, 2810, 1030, 2844], [1089, 2803, 1100, 2822], [1088, 2807, 1269, 2852], [1277, 2802, 1290, 2821], [1275, 2801, 1449, 2848], [1415, 2807, 1604, 2854], [2097, 2809, 2173, 2845], [1255, 2935, 1295, 2963], [628, 262, 1921, 299], [627, 353, 780, 382], [915, 352, 1090, 382], [1326, 352, 1366, 382], [1661, 352, 1810, 382], [627, 404, 813, 441], [919, 404, 1090, 433], [1316, 404, 1376, 433], [1645, 404, 1826, 433], [627, 455, 742, 492], [915, 454, 1089, 484], [1327, 455, 1366, 484], [1639, 455, 1836, 483], [654, 602, 1882, 638], [374, 725, 1214, 772], [1179, 760, 1295, 779], [1323, 736, 1418, 764], [1421, 726, 1434, 746], [1420, 732, 2174, 779], [376, 785, 2174, 823], [376, 836, 1124, 873], [437, 887, 2174, 924], [375, 938, 2173, 975], [376, 989, 2173, 1026], [376, 1039, 2174, 1077], [376, 1090, 2173, 1127], [376, 1141, 1701, 1178], [439, 1224, 1067, 1262], [439, 1292, 1336, 1330], [439, 1359, 2177, 1397], [479, 1411, 1282, 1448], [376, 1495, 2175, 1532], [376, 1546, 2174, 1583], [377, 1597, 2175, 1634], [376, 1647, 2173, 1684], [376, 1698, 2174, 1735], [374, 1749, 2173, 1786], [377, 1800, 1993, 1837], [569, 2396, 591, 2412], [593, 2387, 599, 2398], [802, 2396, 823, 2412], [825, 2387, 831, 2398], [337, 2308, 374, 2332], [337, 2188, 358, 2204], [360, 2179, 374, 2190], [337, 2051, 374, 2075], [609, 2417, 720, 2444], [307, 2310, 323, 2324], [311, 2294, 323, 2307], [306, 2289, 323, 2292], [311, 2275, 323, 2286], [308, 2265, 323, 2273], [306, 2262, 323, 2265], [311, 2247, 323, 2260], [311, 2234, 323, 2247], [306, 2213, 323, 2226], [306, 2207, 323, 2210], [311, 2194, 323, 2205], [308, 2185, 323, 2193], [311, 2173, 323, 2184], [311, 2158, 323, 2170], [311, 2145, 323, 2157], [311, 2131, 323, 2144], [308, 2115, 323, 2123], [311, 2102, 323, 2115], [311, 2081, 323, 2094], [311, 2066, 328, 2079], [308, 2057, 323, 2065], [306, 2054, 323, 2057], [311, 2031, 323, 2052], [311, 2018, 323, 2030], [311, 1995, 323, 2016], [433, 1898, 901, 1930], [452, 2304, 499, 2323], [453, 2327, 572, 2343], [454, 2352, 493, 2367], [1203, 2396, 1224, 2412], [1226, 2387, 1232, 2398], [1434, 2396, 1456, 2412], [1458, 2387, 1464, 2398], [1003, 2314, 1040, 2338], [1003, 2184, 1040, 2208], [1003, 2063, 1024, 2079], [1026, 2054, 1040, 2065], [1275, 2417, 1386, 2444], [973, 2310, 989, 2324], [977, 2294, 989, 2307], [972, 2289, 989, 2292], [977, 2275, 989, 2286], [974, 2265, 989, 2273], [972, 2262, 989, 2265], [977, 2247, 989, 2260], [977, 2234, 989, 2247], [972, 2213, 989, 2226], [972, 2207, 989, 2210], [977, 2194, 989, 2205], [974, 2185, 989, 2193], [977, 2173, 989, 2184], [977, 2158, 989, 2170], [977, 2145, 989, 2157], [977, 2131, 989, 2144], [974, 2115, 989, 2123], [977, 2102, 989, 2115], [977, 2081, 989, 2094], [977, 2066, 994, 2079], [974, 2057, 989, 2065], [972, 2054, 989, 2057], [977, 2031, 989, 2052], [977, 2018, 989, 2030], [977, 1995, 989, 2016], [1088, 1898, 1578, 1930], [1118, 2304, 1165, 2323], [1119, 2327, 1238, 2343], [1120, 2352, 1159, 2367], [1816, 2396, 1837, 2412], [1839, 2387, 1845, 2398], [2048, 2396, 2070, 2412], [2072, 2387, 2078, 2398], [1669, 2297, 1706, 2321], [1669, 2178, 1690, 2194], [1692, 2169, 1706, 2180], [1669, 2042, 1706, 2066], [1941, 2417, 2052, 2444], [1639, 2310, 1655, 2324], [1643, 2294, 1655, 2307], [1638, 2289, 1655, 2292], [1643, 2275, 1655, 2286], [1640, 2265, 1655, 2273], [1638, 2262, 1655, 2265], [1643, 2247, 1655, 2260], [1643, 2234, 1655, 2247], [1638, 2213, 1655, 2226], [1638, 2207, 1655, 2210], [1643, 2194, 1655, 2205], [1640, 2185, 1655, 2193], [1643, 2173, 1655, 2184], [1643, 2158, 1655, 2170], [1643, 2145, 1655, 2157], [1643, 2131, 1655, 2144], [1640, 2115, 1655, 2123], [1643, 2102, 1655, 2115], [1643, 2081, 1655, 2094], [1643, 2066, 1660, 2079], [1640, 2057, 1655, 2065], [1638, 2054, 1655, 2057], [1643, 2031, 1655, 2052], [1643, 2018, 1655, 2030], [1643, 1995, 1655, 2016], [1785, 1898, 2212, 1930], [1784, 2304, 1831, 2323], [1785, 2327, 1904, 2343], [1786, 2352, 1825, 2367], [375, 2532, 2173, 2569], [376, 2583, 1312, 2620], [439, 2684, 2174, 2721], [374, 2734, 2175, 2771], [377, 2785, 2173, 2822], [1255, 2934, 1293, 2964], [550, 747, 580, 772], [791, 747, 821, 772], [337, 732, 347, 749], [338, 654, 347, 671], [337, 577, 346, 594], [337, 499, 347, 516], [337, 422, 347, 439], [338, 345, 347, 362], [591, 778, 706, 806], [307, 540, 324, 542], [307, 523, 324, 536], [307, 503, 324, 517], [307, 483, 324, 498], [408, 240, 893, 273], [830, 660, 878, 680], [831, 685, 953, 701], [832, 710, 872, 726], [1182, 747, 1212, 772], [1422, 747, 1452, 772], [1003, 732, 1013, 749], [1004, 664, 1013, 681], [1003, 596, 1012, 613], [1003, 528, 1013, 545], [1003, 460, 1013, 477], [1004, 392, 1013, 409], [1003, 325, 1013, 342], [1257, 778, 1372, 806], [973, 540, 990, 542], [973, 523, 990, 536], [973, 503, 990, 517], [973, 483, 990, 498], [1063, 240, 1570, 273], [1496, 660, 1544, 680], [1497, 685, 1619, 701], [1498, 710, 1537, 726], [1793, 747, 1823, 772], [2034, 747, 2064, 772], [1669, 732, 1679, 749], [1670, 646, 1679, 663], [1669, 561, 1678, 578], [1669, 476, 1679, 493], [1669, 391, 1679, 408], [1670, 306, 1679, 323], [1923, 778, 2038, 806], [1639, 540, 1656, 542], [1639, 523, 1656, 536], [1639, 503, 1656, 517], [1639, 483, 1656, 498], [1761, 240, 2205, 273], [2162, 660, 2210, 680], [2163, 685, 2285, 701], [2164, 710, 2203, 726], [376, 835, 2175, 872], [376, 886, 1647, 923], [376, 1019, 2173, 1056], [376, 1070, 2175, 1107], [377, 1121, 2177, 1158], [439, 1205, 2175, 1242], [480, 1256, 1165, 1293], [439, 1327, 2174, 1364], [479, 1378, 591, 1406], [439, 1450, 1687, 1487], [439, 1521, 2175, 1558], [480, 1572, 2174, 1609], [479, 1623, 2173, 1660], [479, 1674, 2173, 1711], [479, 1724, 1033, 1761], [438, 1808, 2176, 1845], [376, 1859, 2174, 1896], [376, 1910, 2174, 1947], [375, 1961, 535, 1998], [375, 2075, 763, 2119], [387, 2151, 396, 2158], [376, 2159, 2177, 2197], [377, 2209, 2175, 2245], [376, 2260, 2174, 2298], [376, 2312, 2013, 2349], [377, 2441, 651, 2483], [399, 2547, 2173, 2584], [466, 2598, 2054, 2635], [399, 2653, 677, 2687], [705, 2644, 714, 2651], [694, 2653, 2175, 2690], [462, 2704, 1269, 2741], [399, 2759, 2178, 2796], [465, 2810, 1438, 2847], [1255, 2935, 1294, 2964], [399, 242, 1982, 279], [399, 296, 2175, 334], [465, 347, 745, 376], [399, 402, 2174, 439], [466, 453, 2123, 490], [399, 499, 2179, 545], [465, 559, 2177, 596], [465, 610, 555, 639], [399, 665, 2173, 702], [464, 715, 1774, 752], [399, 761, 2174, 807], [464, 820, 2177, 858], [465, 872, 1075, 909], [379, 927, 2175, 961], [464, 978, 1877, 1015], [379, 1033, 2179, 1070], [465, 1084, 1210, 1121], [379, 1139, 2173, 1176], [465, 1189, 2051, 1226], [379, 1244, 2174, 1281], [465, 1295, 1603, 1332], [378, 1350, 2176, 1387], [463, 1401, 1421, 1438], [378, 1455, 1971, 1493], [378, 1511, 2173, 1548], [466, 1562, 2176, 1599], [465, 1612, 555, 1641], [379, 1667, 2177, 1704], [464, 1718, 1643, 1755], [379, 1773, 2175, 1810], [467, 1824, 699, 1855], [379, 1879, 2174, 1916], [465, 1930, 1510, 1967], [379, 1985, 2173, 2022], [466, 2035, 1439, 2073], [378, 2091, 2173, 2128], [465, 2141, 1670, 2178], [378, 2196, 2173, 2233], [465, 2246, 1751, 2284], [378, 2302, 2175, 2339], [462, 2353, 1794, 2390], [379, 2408, 2174, 2445], [465, 2459, 1602, 2496], [379, 2513, 2174, 2551], [466, 2564, 1999, 2601], [379, 2619, 2174, 2656], [465, 2670, 1111, 2707], [378, 2725, 2177, 2762], [465, 2776, 555, 2805], [1255, 2935, 1294, 2963], [379, 242, 2177, 279], [465, 292, 1148, 326], [379, 347, 2174, 384], [465, 397, 1634, 433], [378, 453, 1819, 490], [378, 508, 2174, 545], [464, 558, 1623, 596], [379, 614, 2177, 651], [465, 664, 761, 700], [379, 720, 2173, 757], [465, 769, 1929, 807], [378, 825, 2181, 862], [460, 876, 1202, 913], [379, 930, 2179, 968], [464, 981, 1526, 1019], [378, 1037, 2173, 1074], [464, 1088, 965, 1123], [379, 1142, 2083, 1178], [379, 1198, 2174, 1235], [464, 1247, 2176, 1285], [466, 1299, 1550, 1335], [378, 1354, 2179, 1391], [463, 1404, 1730, 1442], [378, 1460, 2174, 1497], [465, 1511, 1537, 1548], [379, 1566, 2175, 1603], [465, 1617, 2176, 1654], [466, 1667, 1145, 1703], [379, 1722, 2173, 1759], [464, 1773, 1374, 1810], [379, 1828, 2174, 1865], [466, 1879, 1478, 1916], [379, 1934, 2174, 1971], [466, 1985, 2174, 2022], [466, 2036, 1681, 2072], [378, 2090, 2177, 2128], [466, 2141, 1237, 2178], [379, 2196, 2175, 2233], [464, 2247, 1605, 2284], [379, 2301, 2177, 2339], [466, 2353, 803, 2382], [379, 2408, 2177, 2445], [464, 2458, 1030, 2496], [379, 2514, 2178, 2551], [460, 2564, 1221, 2601], [379, 2618, 2176, 2656], [464, 2670, 951, 2705], [379, 2724, 2144, 2762], [1255, 2935, 1293, 2964], [379, 241, 2173, 279], [462, 292, 1233, 329], [379, 346, 2175, 384], [465, 398, 1268, 435], [378, 452, 2174, 490], [465, 503, 1848, 541], [379, 558, 2179, 596], [464, 609, 2183, 647], [467, 661, 1319, 697], [379, 714, 2176, 752], [463, 766, 1270, 803], [379, 820, 2178, 858], [463, 872, 864, 909], [379, 926, 1851, 964], [378, 981, 2179, 1019], [465, 1033, 1282, 1070], [378, 1088, 2175, 1125], [466, 1139, 1488, 1176], [378, 1194, 2174, 1231], [462, 1244, 849, 1281], [379, 1299, 2174, 1336], [462, 1349, 1466, 1387], [379, 1405, 2177, 1442], [465, 1455, 680, 1490], [379, 1511, 2174, 1548], [465, 1562, 811, 1599], [379, 1616, 2177, 1654], [463, 1666, 1159, 1701], [379, 1722, 2177, 1759], [465, 1773, 1225, 1810], [379, 1828, 1745, 1865], [378, 1881, 2178, 1920], [465, 1934, 555, 1963], [379, 1989, 2177, 2026], [465, 2039, 701, 2074], [379, 2095, 2178, 2132], [465, 2145, 1421, 2181], [379, 2200, 2177, 2237], [465, 2251, 555, 2280], [379, 2306, 2174, 2343], [465, 2356, 824, 2392], [379, 2411, 2178, 2449], [379, 2467, 2174, 2504], [465, 2517, 780, 2553], [379, 2572, 2175, 2610], [465, 2623, 2044, 2661], [378, 2678, 2174, 2715], [463, 2728, 824, 2763], [1255, 2935, 1294, 2964], [379, 242, 2177, 279], [465, 292, 2174, 329], [463, 343, 2175, 380], [468, 394, 1736, 430], [379, 449, 2177, 486], [465, 500, 555, 529], [379, 555, 2175, 592], [465, 606, 1998, 643], [378, 661, 2173, 698], [464, 711, 707, 748], [379, 766, 2079, 803], [379, 821, 2176, 858], [464, 871, 1290, 909], [378, 927, 2173, 964], [465, 978, 1231, 1013], [379, 1032, 2178, 1070], [379, 1087, 2179, 1125], [463, 1139, 983, 1174], [379, 1194, 2174, 1231], [465, 1243, 1396, 1281], [378, 1299, 2177, 1336], [464, 1349, 1344, 1385], [379, 1405, 2174, 1442], [465, 1455, 2165, 1493], [379, 1511, 2173, 1548], [465, 1562, 1623, 1599], [379, 1617, 2173, 1654], [466, 1667, 1027, 1704], [379, 1722, 2174, 1759], [465, 1773, 2177, 1810], [464, 1824, 751, 1858], [379, 1879, 2175, 1916], [465, 1930, 2173, 1967], [463, 1980, 1184, 2018], [379, 2036, 2178, 2073], [464, 2085, 1262, 2123], [379, 2141, 2173, 2178], [467, 2192, 1180, 2229], [378, 2246, 2175, 2284], [465, 2298, 2174, 2335], [465, 2349, 1519, 2386], [379, 2404, 2179, 2441], [379, 2459, 2178, 2496], [464, 2509, 907, 2544], [379, 2564, 2174, 2601], [464, 2615, 1288, 2652], [1255, 2934, 1295, 2964], [376, 229, 1154, 282], [373, 335, 2174, 372], [376, 386, 491, 414], [437, 434, 2174, 475], [377, 485, 1386, 526], [956, 577, 1592, 618], [2088, 580, 2173, 615], [374, 669, 2174, 710], [369, 722, 1324, 760], [925, 847, 1268, 888], [1284, 860, 1287, 875], [1284, 857, 1321, 878], [1341, 805, 1617, 930], [1370, 882, 1524, 918], [1543, 880, 1563, 919], [1540, 881, 1615, 918], [2088, 850, 2173, 885], [374, 975, 1001, 1013], [438, 1024, 2175, 1067], [376, 1075, 1156, 1116], [1001, 1167, 1337, 1208], [1341, 1167, 1352, 1180], [1371, 1168, 1545, 1212], [2088, 1170, 2173, 1205], [374, 1259, 2173, 1300], [374, 1310, 2174, 1353], [376, 1364, 2174, 1401], [374, 1414, 918, 1452], [376, 1496, 1878, 1537], [1078, 1589, 1127, 1619], [1108, 1584, 1356, 1629], [1335, 1588, 1421, 1639], [1429, 1583, 1442, 1602], [1429, 1588, 1469, 1629], [2088, 1591, 2173, 1626], [374, 1683, 1483, 1720], [375, 1766, 929, 1804], [376, 1851, 1661, 1888], [376, 1932, 2176, 1974], [376, 1980, 563, 2023], [548, 1979, 990, 2025], [978, 1980, 1158, 2029], [1145, 1983, 1255, 2025], [930, 2076, 1279, 2117], [1182, 2121, 1251, 2143], [1288, 2071, 1437, 2117], [1425, 2070, 1605, 2121], [1592, 2098, 1616, 2117], [2088, 2078, 2173, 2114], [376, 2194, 1557, 2232], [439, 2277, 2173, 2316], [376, 2329, 1535, 2367], [376, 2410, 1789, 2451], [973, 2497, 1519, 2550], [1524, 2502, 1574, 2543], [2088, 2505, 2173, 2540], [374, 2597, 1198, 2634], [374, 2681, 2175, 2718], [374, 2732, 2175, 2769], [377, 2783, 560, 2820], [1255, 2934, 1291, 2964], [376, 239, 1965, 280], [973, 331, 1022, 360], [962, 366, 1031, 388], [1077, 329, 1586, 370], [2088, 332, 2173, 367], [973, 417, 1022, 446], [963, 453, 1032, 475], [1077, 415, 1202, 456], [1206, 409, 1228, 429], [1232, 415, 1344, 456], [1349, 415, 1360, 428], [1369, 415, 1434, 456], [2088, 418, 2173, 453], [374, 523, 1557, 560], [858, 610, 1054, 651], [995, 648, 1064, 670], [1085, 610, 1245, 651], [1247, 604, 1269, 624], [1274, 612, 1447, 644], [1390, 648, 1455, 670], [1475, 610, 1629, 651], [1631, 604, 1653, 624], [1658, 622, 1689, 649], [374, 718, 1376, 755], [437, 801, 2173, 838], [376, 851, 2117, 889], [376, 927, 2174, 971], [376, 983, 2177, 1022], [377, 1033, 626, 1074], [888, 1084, 1660, 1125], [438, 1169, 2175, 1206], [376, 1219, 601, 1256], [376, 1295, 2174, 1340], [377, 1349, 1855, 1391], [1860, 1361, 1981, 1395], [438, 1434, 2177, 1471], [375, 1482, 2045, 1524], [2050, 1494, 2173, 1528], [439, 1536, 2174, 1573], [377, 1587, 2173, 1624], [377, 1638, 2173, 1675], [376, 1693, 528, 1726], [376, 1770, 2174, 1808], [376, 1821, 413, 1858], [766, 1869, 1020, 1910], [1040, 1869, 1782, 1910], [438, 1954, 2176, 1991], [377, 1998, 2173, 2042], [375, 2056, 2060, 2093], [376, 2136, 2174, 2175], [375, 2189, 514, 2226], [1014, 2237, 1239, 2278], [1252, 2232, 1296, 2282], [1300, 2231, 1322, 2251], [1327, 2238, 1494, 2270], [1500, 2232, 1534, 2282], [438, 2322, 1707, 2359], [375, 2400, 2173, 2442], [377, 2454, 2173, 2492], [377, 2505, 1094, 2548], [837, 2631, 969, 2672], [1004, 2595, 1020, 2614], [985, 2622, 1041, 2680], [985, 2692, 1041, 2712], [1048, 2631, 1711, 2672], [438, 2758, 2174, 2796], [376, 2810, 659, 2838], [1255, 2934, 1295, 2964], [376, 238, 1635, 280], [439, 325, 1191, 363], [439, 407, 2105, 448], [439, 486, 1372, 533], [1360, 488, 1464, 536], [1451, 493, 1612, 532], [1630, 491, 1769, 532], [1757, 491, 1878, 533], [438, 577, 2174, 615], [376, 628, 2174, 665], [376, 679, 2174, 716], [376, 730, 1860, 767], [438, 781, 1179, 820], [1191, 778, 1230, 820], [1233, 778, 1823, 827], [375, 870, 1076, 911], [1089, 868, 1128, 910], [1131, 868, 1633, 918], [1646, 868, 1685, 910], [1688, 864, 1879, 918], [1867, 865, 1967, 914], [1954, 870, 2122, 910], [2144, 884, 2172, 893], [378, 926, 467, 967], [455, 926, 1416, 978], [1436, 921, 1447, 940], [1435, 926, 1516, 971], [1519, 923, 1617, 975], [1604, 928, 1761, 967], [1779, 942, 1850, 951], [1862, 926, 1901, 968], [1904, 928, 1965, 975], [1949, 949, 1976, 974], [375, 1012, 2175, 1050], [376, 1063, 2175, 1101], [376, 1114, 725, 1151], [724, 1213, 791, 1241], [747, 1253, 765, 1266], [801, 1201, 857, 1259], [821, 1271, 834, 1296], [868, 1205, 1033, 1253], [1021, 1210, 1103, 1255], [1111, 1205, 1124, 1224], [1111, 1213, 1251, 1251], [1208, 1253, 1226, 1266], [1261, 1201, 1317, 1259], [1281, 1271, 1294, 1296], [1328, 1212, 1404, 1262], [1424, 1205, 1482, 1244], [1470, 1210, 1553, 1255], [1561, 1205, 1574, 1224], [1561, 1232, 1585, 1251], [1141, 1332, 1251, 1360], [1208, 1372, 1226, 1385], [1261, 1320, 1317, 1378], [1281, 1390, 1294, 1415], [1346, 1341, 1421, 1360], [1327, 1366, 1435, 1401], [1449, 1322, 1497, 1368], [1473, 1336, 1567, 1376], [1587, 1324, 1598, 1343], [1586, 1329, 1668, 1374], [1676, 1323, 1689, 1342], [1676, 1351, 1701, 1370], [1141, 1505, 1169, 1514], [1224, 1501, 1300, 1520], [1184, 1527, 1339, 1562], [1349, 1492, 1416, 1520], [1373, 1532, 1391, 1545], [1436, 1435, 1459, 1510], [1436, 1481, 1519, 1584], [1483, 1550, 1496, 1575], [1528, 1483, 1576, 1528], [1552, 1496, 1646, 1536], [1666, 1485, 1677, 1504], [1665, 1489, 1747, 1534], [1755, 1484, 1768, 1503], [1755, 1511, 1768, 1530], [1773, 1435, 1796, 1510], [1773, 1509, 1823, 1584], [1141, 1630, 1169, 1639], [1229, 1617, 1296, 1645], [1184, 1652, 1339, 1687], [1356, 1609, 1367, 1628], [1355, 1614, 1390, 1659], [1397, 1605, 1453, 1663], [1418, 1675, 1431, 1700], [1463, 1608, 1540, 1657], [1527, 1636, 1552, 1655], [377, 1751, 836, 1789], [854, 1765, 925, 1774], [937, 1749, 976, 1791], [979, 1751, 1043, 1799], [1028, 1752, 1902, 1797], [438, 1835, 2173, 1873], [376, 1887, 2177, 1924], [377, 1938, 860, 1975], [595, 2030, 662, 2058], [569, 2065, 682, 2095], [569, 2099, 682, 2130], [703, 2023, 714, 2042], [702, 2027, 894, 2072], [902, 2022, 915, 2041], [902, 2043, 1001, 2068], [1109, 2030, 1176, 2058], [1084, 2065, 1196, 2095], [1060, 2099, 1222, 2130], [1243, 2023, 1254, 2042], [1242, 2027, 1499, 2072], [1507, 2022, 1520, 2041], [1507, 2043, 1606, 2068], [1692, 2030, 1759, 2058], [1675, 2065, 1771, 2095], [1664, 2100, 1782, 2130], [1803, 2023, 1814, 2042], [1802, 2022, 1977, 2072], [1964, 2049, 1977, 2068], [374, 2180, 2174, 2218], [376, 2232, 2173, 2269], [375, 2282, 2173, 2319], [376, 2333, 1131, 2372], [376, 2414, 2175, 2456], [376, 2465, 1679, 2506], [1052, 2557, 1488, 2605], [1026, 2625, 1521, 2672], [376, 2720, 1570, 2758], [1255, 2934, 1293, 2964], [375, 241, 2101, 279], [847, 331, 1128, 378], [1085, 374, 1103, 387], [1138, 327, 1291, 372], [1279, 331, 1437, 376], [1444, 326, 1457, 345], [1444, 353, 1469, 372], [1019, 426, 1144, 445], [1061, 451, 1149, 477], [1160, 417, 1227, 445], [1184, 456, 1202, 469], [1236, 407, 1284, 453], [1289, 421, 1354, 448], [1373, 409, 1384, 428], [1372, 414, 1531, 459], [1538, 408, 1551, 427], [1538, 436, 1563, 455], [1019, 516, 1144, 535], [1061, 542, 1149, 568], [1160, 498, 1415, 545], [1403, 504, 1668, 549], [1675, 499, 1688, 518], [1675, 526, 1700, 545], [1019, 597, 1140, 625], [1061, 632, 1149, 658], [1167, 590, 1178, 609], [1166, 589, 1268, 639], [1255, 606, 1347, 635], [1350, 588, 1372, 608], [1377, 606, 1408, 633], [1019, 686, 1140, 714], [1061, 721, 1149, 747], [1167, 679, 1178, 698], [1166, 683, 1323, 728], [1331, 678, 1344, 697], [1331, 683, 1550, 724], [374, 796, 1871, 834], [1890, 806, 2031, 833], [2036, 796, 2047, 809], [2055, 797, 2174, 834], [376, 845, 2172, 886], [377, 895, 2175, 943], [376, 946, 806, 988], [376, 1079, 879, 1131], [374, 1185, 2178, 1222], [375, 1235, 2174, 1272], [376, 1286, 2173, 1323], [375, 1337, 1503, 1374], [372, 1413, 741, 1448], [377, 1488, 2174, 1525], [374, 1539, 2174, 1576], [376, 1590, 926, 1627], [438, 1641, 1032, 1678], [372, 1717, 791, 1754], [375, 1792, 2095, 1833], [437, 1843, 2172, 1880], [374, 1894, 2171, 1934], [375, 1945, 2175, 1982], [376, 1996, 579, 2024], [378, 2124, 1616, 2177], [374, 2230, 1528, 2268], [607, 2354, 674, 2382], [634, 2394, 647, 2407], [702, 2317, 720, 2330], [684, 2343, 740, 2401], [686, 2412, 736, 2431], [753, 2351, 942, 2392], [948, 2342, 961, 2361], [975, 2351, 1940, 2392], [2090, 2354, 2173, 2389], [375, 2481, 438, 2510], [554, 2555, 621, 2583], [583, 2590, 592, 2594], [581, 2597, 594, 2610], [649, 2518, 667, 2531], [631, 2543, 687, 2601], [633, 2613, 683, 2632], [701, 2526, 928, 2601], [913, 2552, 1002, 2593], [1008, 2543, 1021, 2562], [1028, 2552, 1722, 2593], [1707, 2553, 1857, 2591], [1842, 2564, 1993, 2591], [2090, 2555, 2173, 2590], [368, 2665, 1497, 2703], [1516, 2665, 1574, 2688], [1559, 2665, 1594, 2694], [1600, 2690, 1605, 2694], [1255, 2934, 1295, 2964], [375, 242, 1272, 279], [578, 368, 797, 409], [832, 334, 850, 347], [813, 360, 869, 418], [815, 429, 865, 448], [882, 368, 1071, 409], [1077, 359, 1090, 378], [1105, 375, 1133, 402], [1146, 328, 1205, 347], [1148, 360, 1204, 418], [1150, 429, 1200, 448], [1217, 368, 1395, 409], [1411, 388, 1437, 389], [1450, 368, 1553, 409], [1565, 328, 1625, 347], [1568, 360, 1624, 418], [1570, 429, 1620, 448], [1635, 368, 1768, 409], [1785, 388, 1811, 389], [1825, 368, 1970, 409], [376, 498, 1426, 535], [954, 587, 1595, 628], [2090, 590, 2173, 625], [1254, 651, 1506, 692], [2090, 654, 2173, 689], [1292, 716, 1479, 753], [2090, 716, 2173, 752], [1098, 777, 1276, 818], [1292, 797, 1318, 798], [1331, 777, 1479, 818], [2090, 780, 2173, 815], [1069, 840, 1202, 881], [1218, 860, 1244, 861], [1258, 840, 1479, 881], [2090, 843, 2173, 878], [375, 945, 1572, 983], [1589, 932, 1737, 961], [1647, 968, 1680, 990], [1759, 946, 2102, 975], [438, 997, 2172, 1034], [376, 1048, 1314, 1085], [883, 1131, 1041, 1172], [1026, 1131, 1072, 1172], [818, 1187, 1088, 1237], [1073, 1193, 1138, 1234], [1159, 1179, 1185, 1180], [1272, 1131, 1388, 1172], [1373, 1131, 1461, 1172], [1208, 1187, 1435, 1237], [1420, 1193, 1528, 1234], [1550, 1160, 1613, 1184], [1594, 1171, 1675, 1196], [1697, 1150, 1708, 1157], [1689, 1161, 1737, 1198], [2090, 1162, 2173, 1197], [1396, 1258, 1648, 1299], [2090, 1261, 2173, 1296], [1442, 1331, 1453, 1338], [1433, 1342, 1485, 1369], [1504, 1321, 1515, 1328], [1496, 1332, 1620, 1369], [2069, 1333, 2173, 1368], [1248, 1394, 1259, 1401], [1239, 1393, 1417, 1434], [1433, 1413, 1459, 1414], [1473, 1393, 1620, 1434], [2069, 1396, 2173, 1431], [1218, 1455, 1229, 1462], [1210, 1464, 1343, 1505], [1359, 1484, 1385, 1485], [1404, 1466, 1415, 1473], [1400, 1464, 1620, 1505], [2069, 1467, 2173, 1502], [375, 1559, 2176, 1597], [375, 1611, 590, 1648], [439, 1660, 2173, 1698], [376, 1711, 2179, 1749], [376, 1761, 625, 1792], [630, 1762, 641, 1775], [658, 1763, 1820, 1800], [439, 1847, 1805, 1884], [439, 1928, 824, 1969], [887, 1930, 903, 1943], [846, 1953, 871, 1982], [873, 1931, 1478, 1981], [439, 2019, 2171, 2060], [480, 2072, 1404, 2109], [439, 2154, 2174, 2195], [480, 2205, 1810, 2246], [439, 2289, 2173, 2330], [480, 2343, 995, 2380], [439, 2424, 1523, 2465], [1543, 2415, 1554, 2422], [1535, 2424, 2178, 2465], [479, 2474, 1729, 2515], [439, 2560, 1245, 2597], [1265, 2549, 1276, 2556], [1257, 2560, 2007, 2597], [439, 2644, 1540, 2681], [1559, 2633, 1570, 2640], [1551, 2642, 1838, 2683], [1854, 2662, 1880, 2663], [1894, 2642, 2171, 2683], [479, 2684, 920, 2734], [936, 2713, 962, 2714], [977, 2693, 1326, 2734], [1342, 2713, 1368, 2714], [1382, 2693, 1603, 2734], [1255, 2934, 1293, 2964], [374, 241, 2177, 279], [377, 292, 1546, 329], [438, 342, 1553, 380], [1538, 342, 2173, 380], [376, 388, 763, 432], [830, 393, 846, 406], [789, 416, 814, 445], [817, 394, 2174, 441], [376, 458, 850, 499], [861, 449, 872, 456], [853, 458, 2174, 499], [376, 511, 2175, 548], [376, 562, 1797, 599], [376, 741, 1930, 794], [376, 847, 2173, 885], [376, 899, 1439, 936], [375, 978, 2173, 1019], [376, 1032, 915, 1069], [898, 1029, 1567, 1070], [1578, 1063, 1593, 1065], [1579, 1029, 2179, 1070], [376, 1082, 738, 1119], [794, 1215, 809, 1217], [795, 1181, 1755, 1222], [438, 1257, 2174, 1295], [377, 1308, 2173, 1346], [375, 1359, 1097, 1397], [924, 1498, 1623, 1539], [923, 1595, 938, 1597], [924, 1561, 1623, 1602], [437, 1654, 2174, 1691], [377, 1705, 2173, 1742], [376, 1753, 1158, 1794], [438, 1804, 2173, 1845], [377, 1857, 612, 1886], [624, 1889, 639, 1891], [625, 1854, 2174, 1895], [376, 1908, 1490, 1945], [438, 1959, 2175, 1996], [376, 2007, 2174, 2048], [376, 2058, 2174, 2099], [377, 2111, 2173, 2148], [377, 2162, 643, 2196], [841, 2244, 856, 2246], [838, 2250, 915, 2286], [933, 2244, 948, 2246], [930, 2250, 1111, 2286], [1130, 2244, 1145, 2246], [1127, 2250, 1207, 2286], [1226, 2244, 1241, 2246], [1223, 2250, 1247, 2288], [1298, 2283, 1313, 2285], [1301, 2250, 1377, 2286], [1391, 2283, 1406, 2285], [1393, 2250, 1574, 2286], [1587, 2283, 1602, 2285], [1589, 2250, 1670, 2286], [1683, 2283, 1698, 2285], [1686, 2250, 1709, 2280], [376, 2342, 2174, 2379], [375, 2393, 679, 2430], [893, 2477, 931, 2511], [912, 2477, 1031, 2521], [1011, 2477, 1234, 2521], [1214, 2507, 1247, 2521], [1301, 2477, 1339, 2511], [1320, 2477, 1439, 2521], [1419, 2477, 1642, 2521], [1622, 2507, 1655, 2521], [376, 2573, 2180, 2610], [376, 2624, 950, 2661], [440, 2748, 700, 2789], [739, 2708, 748, 2727], [716, 2740, 772, 2798], [715, 2809, 770, 2834], [782, 2745, 820, 2779], [799, 2748, 1101, 2796], [1171, 2764, 1199, 2773], [1238, 2708, 1247, 2727], [1214, 2740, 1270, 2798], [1214, 2809, 1269, 2834], [1281, 2745, 1319, 2779], [1298, 2771, 1332, 2796], [1387, 2754, 1402, 2756], [1386, 2748, 1666, 2789], [1673, 2743, 1688, 2745], [1670, 2749, 1694, 2787], [1747, 2783, 1762, 2785], [1747, 2748, 1956, 2789], [2025, 2752, 2079, 2779], [2081, 2783, 2096, 2785], [2084, 2749, 2107, 2779], [1255, 2934, 1294, 2964], [377, 242, 1917, 279], [939, 335, 950, 362], [952, 365, 967, 367], [954, 332, 1014, 362], [1029, 365, 1044, 367], [1030, 331, 1579, 372], [1587, 326, 1602, 328], [1584, 332, 1607, 370], [377, 435, 411, 454], [422, 457, 437, 459], [424, 418, 2157, 463], [980, 550, 995, 552], [981, 516, 1207, 557], [1221, 550, 1236, 552], [1223, 517, 1247, 555], [1302, 522, 1317, 524], [1301, 516, 1527, 557], [1546, 511, 1561, 513], [1543, 517, 1567, 547], [373, 611, 2173, 648], [377, 662, 1879, 699], [607, 785, 622, 787], [607, 751, 1250, 792], [1305, 757, 1320, 759], [1304, 751, 1940, 794], [376, 846, 2174, 883], [376, 897, 2174, 934], [376, 948, 2130, 985], [438, 996, 1353, 1037], [1379, 1030, 1394, 1032], [1380, 996, 2175, 1037], [377, 1047, 608, 1088], [624, 1081, 639, 1083], [624, 1046, 1178, 1088], [1159, 1056, 1222, 1088], [1237, 1081, 1252, 1083], [1239, 1048, 2076, 1087], [844, 1141, 1020, 1179], [1036, 1173, 1051, 1175], [1036, 1139, 1303, 1180], [1304, 1173, 1319, 1175], [1306, 1140, 1423, 1172], [1426, 1136, 1444, 1154], [1425, 1139, 1704, 1180], [377, 1234, 2174, 1271], [374, 1282, 1673, 1323], [1689, 1316, 1704, 1318], [1689, 1282, 2174, 1323], [377, 1333, 1039, 1374], [1022, 1333, 2173, 1374], [376, 1387, 672, 1416], [733, 1476, 965, 1517], [980, 1510, 995, 1512], [981, 1476, 1207, 1517], [1221, 1510, 1236, 1512], [1223, 1471, 1390, 1513], [1374, 1476, 1814, 1517], [377, 1571, 2174, 1608], [377, 1619, 1089, 1660], [376, 1789, 1393, 1855], [1347, 1829, 1360, 1857], [376, 1908, 2179, 1945], [376, 1959, 2173, 1996], [376, 2009, 2175, 2050], [375, 2061, 2173, 2098], [377, 2111, 1836, 2149], [438, 2162, 2177, 2199], [376, 2212, 2174, 2250], [375, 2264, 2179, 2301], [376, 2315, 1709, 2352], [438, 2366, 2174, 2403], [376, 2416, 2174, 2453], [376, 2467, 2174, 2504], [376, 2518, 2174, 2555], [375, 2568, 2174, 2606], [375, 2620, 1664, 2657], [438, 2670, 1224, 2699], [605, 2760, 1941, 2801], [2092, 2763, 2173, 2798], [1255, 2934, 1294, 2964], [374, 242, 2175, 279], [375, 292, 2174, 329], [375, 343, 2173, 380], [376, 387, 2179, 432], [376, 439, 2174, 483], [375, 488, 1319, 534], [1323, 496, 2180, 533], [375, 546, 680, 583], [994, 594, 1199, 635], [1213, 614, 1239, 615], [1253, 597, 1321, 625], [1325, 589, 1362, 608], [1324, 617, 1336, 618], [1321, 622, 1335, 642], [1372, 594, 1553, 635], [2092, 597, 2173, 632], [374, 673, 2173, 710], [377, 716, 2173, 761], [376, 775, 2007, 812], [2011, 775, 2174, 809], [376, 819, 2174, 863], [377, 876, 1624, 913], [438, 927, 1122, 962], [724, 1144, 900, 1172], [903, 1135, 925, 1155], [942, 1157, 970, 1166], [995, 1012, 1018, 1087], [995, 1087, 1000, 1112], [995, 1112, 1000, 1137], [995, 1137, 1000, 1162], [995, 1162, 1000, 1187], [995, 1187, 1000, 1212], [995, 1212, 1000, 1237], [995, 1236, 1018, 1311], [1059, 1016, 1184, 1044], [1044, 1066, 1090, 1094], [1153, 1066, 1279, 1094], [1138, 1144, 1184, 1172], [1248, 1144, 1265, 1172], [1334, 1139, 1339, 1143], [1349, 1151, 1354, 1155], [1364, 1164, 1369, 1168], [1239, 1216, 1244, 1220], [1254, 1229, 1259, 1233], [1269, 1241, 1274, 1245], [1334, 1216, 1339, 1220], [1349, 1229, 1354, 1233], [1364, 1241, 1369, 1245], [1422, 1222, 1468, 1250], [1327, 1272, 1374, 1300], [1437, 1272, 1454, 1300], [1494, 1012, 1517, 1087], [1513, 1087, 1517, 1112], [1513, 1112, 1517, 1137], [1513, 1137, 1517, 1162], [1513, 1162, 1517, 1187], [1513, 1187, 1517, 1212], [1513, 1212, 1517, 1237], [1494, 1236, 1517, 1311], [1543, 1133, 1811, 1174], [1820, 1168, 1824, 1172], [438, 1362, 2173, 1399], [376, 1412, 2128, 1450], [2144, 1426, 2172, 1435], [377, 1455, 459, 1491], [421, 1483, 433, 1484], [417, 1488, 431, 1508], [468, 1460, 624, 1501], [627, 1462, 1546, 1501], [1560, 1458, 1966, 1501], [431, 1560, 1182, 1598], [1197, 1553, 1345, 1589], [427, 1621, 1379, 1666], [428, 1694, 954, 1733], [969, 1694, 1246, 1733], [1250, 1719, 1255, 1723], [438, 1787, 2175, 1824], [377, 1838, 2176, 1875], [376, 1889, 2069, 1926], [438, 1940, 2173, 1977], [379, 1991, 2175, 2028], [376, 2042, 2175, 2079], [374, 2092, 2175, 2129], [375, 2140, 2174, 2182], [377, 2194, 2174, 2231], [375, 2245, 2173, 2282], [377, 2295, 2173, 2333], [376, 2346, 1175, 2383], [866, 2436, 1681, 2477], [374, 2531, 1174, 2568], [438, 2579, 2174, 2620], [375, 2632, 2179, 2670], [375, 2683, 2175, 2720], [376, 2731, 2173, 2772], [376, 2785, 760, 2813], [1255, 2934, 1293, 2964], [373, 239, 1216, 277], [416, 295, 1261, 333], [417, 344, 1369, 385], [479, 411, 1074, 449], [1243, 402, 1261, 415], [1265, 389, 1275, 403], [1266, 394, 1331, 427], [1340, 393, 1403, 422], [1094, 432, 1552, 465], [1563, 435, 1568, 439], [479, 475, 1197, 514], [1219, 469, 1230, 488], [1218, 486, 1292, 519], [480, 526, 656, 558], [417, 577, 585, 607], [417, 631, 583, 663], [373, 742, 1144, 780], [417, 798, 1070, 843], [1089, 805, 1205, 841], [417, 850, 596, 894], [600, 855, 611, 868], [621, 853, 936, 894], [944, 880, 949, 884], [417, 916, 443, 935], [446, 900, 589, 945], [593, 905, 604, 918], [611, 904, 741, 945], [417, 954, 765, 995], [479, 1001, 1410, 1046], [479, 1059, 992, 1097], [996, 1083, 1001, 1087], [480, 1109, 686, 1148], [700, 1105, 917, 1148], [922, 1134, 927, 1138], [479, 1161, 1561, 1198], [479, 1211, 636, 1248], [638, 1203, 689, 1225], [643, 1231, 655, 1232], [639, 1236, 653, 1256], [707, 1206, 832, 1249], [827, 1231, 839, 1232], [823, 1208, 981, 1255], [479, 1262, 652, 1293], [417, 1312, 585, 1342], [417, 1359, 591, 1393], [438, 1507, 2173, 1544], [376, 1557, 2173, 1595], [376, 1609, 1091, 1646], [438, 1657, 2174, 1698], [375, 1704, 2178, 1748], [374, 1761, 2174, 1798], [374, 1809, 2173, 1850], [376, 1856, 1136, 1900], [1155, 1860, 2173, 1901], [376, 1908, 2089, 1951], [376, 2042, 1790, 2095], [374, 2149, 2174, 2186], [376, 2200, 2173, 2237], [375, 2244, 2174, 2288], [376, 2294, 2178, 2338], [376, 2346, 1518, 2389], [1524, 2352, 2175, 2389], [376, 2403, 748, 2440], [437, 2454, 2174, 2491], [377, 2505, 2175, 2542], [376, 2556, 780, 2593], [420, 2687, 1329, 2722], [421, 2728, 1618, 2763], [421, 2769, 1493, 2804], [421, 2810, 1675, 2844], [469, 805, 899, 840], [1059, 805, 1489, 840], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [376, 2855, 2174, 2893], [375, 2906, 896, 2943], [469, 805, 899, 840], [1059, 805, 1489, 840], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [754, 2856, 1781, 2893], [469, 805, 899, 840], [1059, 805, 1489, 840], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [862, 2856, 1672, 2893], [469, 805, 899, 840], [1059, 805, 1489, 840], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [622, 2856, 1913, 2893], [469, 805, 899, 840], [1059, 805, 1489, 840], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [826, 2856, 1709, 2893], [696, 2732, 1839, 2769], [763, 2732, 1772, 2769], [734, 2732, 1801, 2769]]}}}}, {"tool_name": "tesseract", "text": "Modular proximal optimization for multidimensional total-variation regularization Alvaro Barbero alvaro.barbero@inv.uam.es Instituto de Ingenieria del Conocimiento and Universidad Aut\u00e9noma de Madrid Francisco Tomas y Valiente 11, Madrid, Spain Suvrit Sra* suvrit@mit.edu Laboratory for Information and Decision Systems Massachusetts Institute of Technology (MIT), Cambridge, MA Abstract We study TV regularization, a widely used technique for eliciting structured sparsity. In particular, we propose efficient algorithms for computing prox-operators for \u00a3,-norm TV. The most important among these is \u00a3;-norm TV, for whose prox-operator we present a new geometric analysis which unveils a hitherto unknown connection to taut-string methods. This connection turns out to be remarkably useful as it shows how our geometry guided implementation results in efficient weighted and unweighted 1D-TV solvers, surpassing state-of-the-art methods. Our 1D-TV solvers provide the backbone for building more complex (two or higher-dimensional) TV solvers within a modular proximal optimization approach. We review the literature for an array of methods exploiting this strategy, and illustrate the benefits of our modular design through extensive suite of experiments on (i) image denoising, (ii) image deconvolution, (iti) four variants of fused-lasso, and (iv) video denoising. To underscore our claims and permit easy reproducibility, we provide all the reviewed and our new TV solvers in an easy to use multi-threaded C++, Matlab and Python library. 1 Introduction Sparsity impacts the entire data analysis pipeline, touching algorithmic, modeling, as well as practical aspects. Most commonly, sparsity is elicited via \u00a3;-norm regularization [20, 84]. However, numerous applications rely on more refined \u201cstructured\u201d notions of sparsity, e.g., groupwise-sparsity [6, 57, 63, 97], hierarchical sparsity [4, 61], gradient sparsity [76, 86, 90], or sparsity over structured \u2018atoms\u2019 [24]. Such regularizers typically arise in optimization problems of the form Mingern O(a) := &(a)+r(ax), (1.1) where \u00a3 : R\u201d \u2014 R is a smooth loss function (often convex), while r : R\u201d \u2014 RU {+co} is a lower semicontinuous, convex, and nonsmooth regularizer that induces sparsity. We focus on instances of (1.1) where r is a weighted anisotropic Total-Variation (TV) regularizer:', which, for a vector x \u20ac IR\u201d and fixed weights w > 0 is defined as def def n\u2014-1 1/p r(v@) = Tv, (w; a) = \u2018o> wiles \u2014 231\") pol. (1.2) J=1 More generally, if X is an order-m tensor in RIG.\" with entries X we define the weighted m-dimensional anisotropic TV regularizer as m Mp1 1/pe m def nwew:x) 232 (> wig KE), XH P) | (1.3) k=1Iy={i1,...,im}\\ix * I=1 im A <4; <n; forl <7 <m); 2112s; *An initial version of this work was performed during 2013-14, when the author was with the Max Planck Institute for Intelligent Systems, Tiibingen, Germany, and with Carnegie Mellon University, Pittsburgh. 'We use the term \u201canisotropic\u201d to refer to the specific TV penalties considered in this paper. where xl = Xin scsi i shinstyesim> WIy,7 = 0 are weights, and p = [p, > 1] for 1 < k < m. If Xis a matrix, expression (1.3) reduces to (note, p, g > 1) ny ng\u2014-\u2014l1 1/p nea ny\u2014l1 1/q Tv5,q(W; X) = >\u00bb ( S- wig lPige1 \u2014 Vij \u201d) + \u00bb{ S- we il2ipig \u2014 21\") (1.4) i=l j= j=l i=l These definitions look formidable; already 2D-TV (1.4) or even the simplest 1D-TV (1.2) are fairly complex, which further complicates the overall optimization problem (1.1). Fortunately, this complexity can be \u201clocalized\u201d by invoking prox-operators [65], which are now widely used across machine learning [68, 81]. The main idea of using prox-operators while solving (1.1) is as follows. Suppose \u00ae is a convex Isc function ona set VY C R\u201d. The prox-operator of \u00ae is defined as the map proxg @ y> argmin $\\la\u2014 y||Z 4+ O(a) for y eR\u201d. (1.5) eerX A popular method based on prox-operators is the proximal gradient method (also known as \u2018forward backward splitting\u2019), which performs a gradient (forward) step followed by a proximal (backward) step to iterate B41 = proxy, (fe \u2014MeVE(@x)), &=O0,1,.... (1.6) Numerous other proximal methods exist\u2014see e.g., [13, 27, 46, 66, 79]. To implement the proximal-gradient iteration (1.6) efficiently, we require a subroutine that computes the prox-operator prox,.. An additional concern is whether the overall algorithm requires an exact computation of prox,, or merely a moderately inexact computation. This concern is justified: rarely does r admit an exact algorithm for computing prox,.. Fortunately, proximal methods easily admit inexactness, e.g., [78-80], which allows approximate prox-operators (as long as the approximation is sufficiently accurate). We study both exact and inexact prox-operators in this paper, contingent upon the \u00a3,-norm used and on the data dimensionality \u2122. 1.1. Contributions In particular, we review, analyze, implement, and experiment with a variety of fast algorithms. The ensuing contributions of this paper are summarized below. e Geometric analysis that leads to a new, efficient version of the classic Taut String Method [32], whose origins can be traced back to [10] \u2014 this version turns out to perform better than most of the recently developed TV proximity methods. e A previously unknown connection between (a variation of) this classic algorithm and Condat\u2019s un- weighted TV method [28]. This connection provides a geometric, more intuitive interpretation and helps us define a hybrid taut-string algorithm that combines the strengths of both methods, while also providing a new efficient algorithm for weighted \u00a3;-norm 1D-TV proximity. e Efficient prox-operators for general \u00a3,,-norm (p > 1) 1D-TV. In particular, \u2014 For p = 2, we present a specialized Newton method based on the root-finding strategy of [64], \u2014 For the general p > 1 case we describe both \u201cprojection-free\u201d and projection based first-order methods. e Scalable proximal-splitting algorithms for computing 2D (1.4) and higher-D TV (1.3) prox-operators. We review an array of methods in the literature that use prox-splitting, and through extensive experi- ments show that a splitting strategy based on alternating reflections is the most effective in practice. Furthermore, this modular construction of 2D and higher-D TV solvers allows reuse of our fast 1D-TV routines and exploitation of the massive parallelization inherent in matrix and tensor TV. e The final most important contribution of our paper is a well-tuned, multi-threaded open-source C++, Matlab and Python implementation of all the reviewed and developed methods.\u201d To complement our algorithms, we illustrate several applications of TV prox-operators to: (i) image and video denoising; (ii) image deconvolution; and (iii) four variants of fused-lasso. Note: We have invested great efforts to ensure reproducibility of our results. In particular, given the vast attention that TV problems have received in the literature, we believe it is valuable to both users of TV and other researchers to have access to our code, datasets, and scripts, to independently verify our claims, if desired.? 1.2 Related work The literature on TV is too large to permit a comprehensive review here. Instead, we mention the most directly related work to help place our contributions in perspective. We focus on anisotropic-TV (in the sense of [16]), in contrast to isotropic-TV [76]. Isotropic TV regularization arises frequently in image denoising and signal processing, and quite a few TV-based denoising algorithms exist [98, see e.g.]. The anisotropic TV regularizers Tv> and Tv) arise in image denoising and deconvolution [31], in the fused-lasso [86], in logistic fused-lasso [50], in change-point detection [39], in graph-cut based image segmentation [21], in submodular optimization [43]; see also the related work in [89]. This broad applicability and importance of anisotropic TV is the key motivation towards developing carefully tuned proximity operators. There is a rich literature of methods tailored to anisotropic TV, e.g., those developed in the context of fused-lasso [34, 60], graph-cuts [21], ADMM-style approaches [27, 91], or fast methods based on dynamic programming [45] or KKT conditions analysis [28]. However, it seems that anisotropic TV norms other than \u00a3, has not been studied much in the literature, although recognized as a form of Sobolev semi-norms [70]. For 1D-TV and for the particular \u20ac; norm, there exist several direct methods that are exceptionally fast. We treat this problem in detail in Section 2, and hence refer the reader to that section for discussion of closely related work on fast solvers. We note here, however, that in contrast to many of the previous fast solvers, our solvers allow weights, a capability that can be very important in applications [43]. Regarding 2D-TV, Goldstein T. [36] presented a so-called \u201cSplit-Bregman\u201d (SB). It turns out that this method is essentially a variant of the well-known ADMM method. In contrast to the 2D approach presented here, the SB strategy followed by Goldstein T. [36] is to rely on \u00a3-soft thresholding substeps instead of 1D-TV substeps. From an implementation viewpoint, the SB approach is somewhat simpler, but not necessarily more accurate. Incidentally, sometimes such direct ADMM approaches turn out to be less effective than ADMM methods that rely on more complex 1D-TV prox-operators [71]. Itis worth highlighting that it is not just proximal solvers such as FISTA [13], SpaRSA [93], SALSA [1], TwIST [16], TRIP [46], that can benefit from our fast prox-operators. All other 2D and higher-D TV solvers, e.g., [95], as well as the recent ADMM based trend-filtering solvers of Tibshirani [87] immediately benefit, not only in speed but also by gaining the ability to solve weighted problems. 1.3. Summary of the paper The remainder of the paper is organized as follows. In Section 2 we consider prox operators for 1D-TV problems when using the most common /; norm. The highlight of this section is our analysis on taut-string TV solvers, which lead to the development a new hybrid method and a weighted TV solver (Sections 2.3, 2.4). Thereafter, we discuss variants of 1D-TV (Section 3), including a specialized Tvs? solver, and a more general Typ? method based on a projected-Newton strategy. Subsequently, we describe multi-dimensional TV problems and study their prox-operators in Section 4, paying special attention to 2D-TV; for both 2D and multi-D, prox-splitting methods are used. After these theoretical sections, we describe experiments 2See https://github.com/albarji/proxTV 3This material shall be made available at: http://suvrit.de/work/soft/tv.html and applications in Section 5. In particular, extensive experiments for 1D-TV are presented in Section 5.1; 2D-TV experiments are in Section 5.3, while an application of multi-D TV is the subject of Section 5.4. The appendices to the paper include further technical details and additional information about the experimental setup. 2 TV-L1: Fast prox-operators for TyiP We begin with the 1D-TV problem (1.2) for an \u20ac, norm choice, for which we review several carefully tuned algorithms. Using such well\u2014tuned algorithms pays off: we can find fast, robust, and low-memory (in fact, in place) algorithms, which are not only of independent value, but also ideal building blocks for scalably solving 2D- and higher-D TV problems. Computation of the \u00a3;-norm TV prox-operator can be compactly written as the problem min 3l|e@\u2014yll2+Al|Dali, (2.1) where D is the differencing matrix, all zeros except dj; = \u20141 and dj,414 =10 <i<n-\u2014D). To solve (2.1) we will analyze an approach based on the line of \u201ctaut-string\u201d methods. We first introduce these methods for the unweighted TV-L/ problem (2.1), before discussing the elementwise weighted TV problem (2.6). Most of the previous fastest methods handle only unweighted-TV. It is often nontrivial to extend them to handle weighted-TV, a problem that is crucial to several applications, e.g., segmentation [21] and certain submodular optimization problems Jegelka et al. [43]. A remarkably efficient approach to TV-L1 was presented in [28]. We will show Condat\u2019s fast algorithm can be interpreted as a \u201clinearized\u201d version of the taut-string approach, a view that paves the way to obtain an equally fast solver for weighted TV-L1. Before proceeding we note that other than [28], other efficient methods to address unweighted Tvi> proximity have been proposed. Johnson [45] shows how solving Tv? proximity is equivalent to computing the data likelihood of an specific Hidden Markov Model (HMM), which suggests a dynamic programming approach based on the well-known Viterbi algorithm for HMMs. The resulting algorithm is very competitive, and guarantees an overall O(n) performance while requiring approximately 8n storage. Another similarly performing algorithm was presented by Kolmogorov et al [51] in the form of a message passing method. We will also consider these algorithms in our experimental comparison in 85.1. Yet another family of methods is based on projected-Netwon (PN) techniques: we also present in Appendix EaPN approach for its instructive value, and also because it provides key subroutines for solving TV problems with p > 1. Our derivation may also be helpful to readers seeking to implement efficient prox-operators for problems that have structure similar to TV, for instance \u00a3;-trend filtering [47, 87]. Indeed, the PN approach proves to be foundational for the fast \u201cgroup fused-lasso\u201d algorithms of [94]. 2.1 The taut-string method for Tv}? While taut-string methods seem to be largely unknown in machine learning, they have been widely applied in statistics\u2014see e.g., [10, 32, 38]. We start by transforming the problem as follows. For TV-L1, elementary manipulations, e.g., using Proposition A.4, yield the dual (re-written as a minimization problem) min 3||DPull3 \u2014ul Dy, s.t. |lulloo <A. (2.2) Without changing the minimizer, the objective (2.2) can be replaced by || D7 u \u2014 y||3, which then unfolds into n\u2014-1 (ua \u2014 ya) + (\u2014ui-1 + ui \u2014 yi)\u201d + (-un-1 \u2014 Yn) : Introducing the fixed extreme points ug = u,, = 0, we can replace the problem (2.2) by . n 2 min S 1! w\u20141 tui \u2014 yi)\u201d, St. |lttlloo SA, Uo = Un = 0. (2.3) Now we perform a change of variables by defining the new set of variables s = r \u2014 wu, where r; := eet Uk is the cumulative sum of input signal values. Thus, (2.3) becomes . n 2 min S (7-1 t+ si-1 +7: \u2014 81 \u2014 yi), 8-t |S \u2014P loo <A, 0 -\u2014 809 =n \u2014 Sn =O, 8 a=1 which upon simplification becomes nm . 2 min ) 1 (si-1\u20148:)\u00b0, st. ||[s\u2014Tllo <A, 809 =0, 52, =Tn. (2.4) Now the key trick: problem (2.4) can be shown to share the same optimum as min So lt (si-1 \u2014 51), st. |s\u2014 Plo SA, 80 =0, Sn = Tn. (2.5) i=l A proof of this relationship may be found in [82]; for completeness, and also because it will help us generalize to the weighted Tv\\P variant, we include an alternative proof in Appendix C. The name \u201ctaut-string\u201d is explained as follows. The objective in (2.5) can be interpreted as the Euclidean length of a polyline through the points (2, s;). Thus, (2.5) seeks the minimum length polyline (the taut-string) crossing a tube of height \\ with center the cumulative sum r and having the fixed endpoints (sg, s,). An example illustrating this description is shown in Figure 1. Once the taut string is found, the solution for the original TV problem (2.1) can be recovered by observing that S81 = MOU M-1-w-1) = YWrutu-1 = %, where we used the primal-dual relation 2 = y\u2014 Du. Intuitively, the above argument shows that the solution to the TV-L1 proximity problem is obtained as the discrete gradient of the taut string, or as the slope of its segments. Taut-string solution Figure 1: Example of the taut string method. The cumulative sum r of the input signal values y is shown as the dashed line; the black dots mark the points (7,7;). The bottom and top of the 4-width tube are shown in red. The taut string solution s is shown as a blue line. Algorithm 1 Taut string algorithm for TV-L1-proximity 1: Inputs: input signal y of length n, regularizer 4. 2: Initialize i = 0, concmajorant = S, convminorant = 2, ri = an Yk- 3: whilei < ndo 4 Add new segment: concmajorant = concmajorant U ((i \u2014 1, ri\u20141 \u2014 A) > (4,74 \u2014 A)). 5: while concmajorant is not concave do 6 Merge the last two segments of concmajorant 7 end while 8 Add new segment: conuminorant = conuminorant U ((\u00e9 \u2014 1, ri\u20141 + A) > (4,74 + A)). 9: while conuminorant is not convex do 10: Merge the last two segments of conuminorant 11: end while 12: if slope(left-most segment in concmajorant) > slope(lest-most segment in conuminorant) then 13: break = left-most point where either the majorant or the minorant touched the tube 14: if break \u20ac conuminorant then 15: Remove left-most segment of the minorant, add it to the taut-string solution a. 16: Majorant is recalculated as a straight line from break to its last point. 17: end if 18: if break \u20ac concmajorant then 19: Remove left-most segment of the majorant, add it to the taut-string solution x. 20: Minorant is recalculated as a straight line from brea\u00e9 to its last point. 21: end if 22: end if 23: a+t+ 24: end while 25: Add last segment from either the majorant or minorant to the solution a. It remains to describe how to find the taut string. The most widely used approach seems to be the one due to Davies and Kovac [32]. This approach starts from the fixed point sg = 0, and incrementally computes the greatest convex minorant of the upper bounds on the A tube, as well as the smallest concave majorant of the lower bounds on the \\ tube. When both curves intersect, the /eft-most point where either the majorant or the minorant touched the tube is used to fix a first segment of the taut string. The procedure is then resumed at the end of the identified segment, and iterated until all taut string segments have been obtained. Pseudocode of this method is presented as Algorithm 1, while an example of this procedure is shown in Figure 2. It is important to note that since we have a discrete number of points in the tube, the greatest convex minorant can be expressed as a piecewise linear function with segments of monotonically increasing slope, while the smallest concave majorant is another piecewise linear function with segments of monotonically decreasing slope. Another relevant fact is that each segment in the tube upper/lower bound enters the minorant/majorant exactly once in the algorithm, and is also removed exactly once. This limits the extent of the inner loops in the algorithm, and in fact an analysis of the computational complexity of this behavior leads to an overall O(n) performance [32]. In spite of this, Condat [28] notes that maintaining the minorant and majorant functions in memory is inefficient, and views a taut-string approach as potentially inferior to his proposed method. To this observation we make two claims: Condat\u2019s method can be interpreted as a linearized version of the taut-string method (see Section 2.2); and that a careful implementation of the taut-string method can be highly competitive in practice. 2.1.1 Efficient implementation of taut-strings We propose now an efficient implementation of the taut-string method. The main idea is to carefully use double-ended queues [49] to store the majorant and minorant information. Therewith, all majorant/minorant Operations such as appending a segment or removing segments from either the beginning or the end of the majorant can be performend in constant time. Note however that usual double-ended queue implementations (7) gy (9) Figure 2: Example of the evolution of the taut string method. The smallest concave majorant (blue) and largest convex minorant (green) are updated are every step. At step (1) the algorithm is initialized. Steps (2) to (4) successfully manage to update majorant and minorant without producing crossings between them. Note how while the concave majorant keeps adding segments without issue, the convex minorant must remove and merge existing segments with new ones to mantain a convex function from the origin to the new points. At step (5) the end of the tube is reached, but the minorant and majorant slopes overlap, and so it is necessary to break the segment at the left-most point where the majorant/minorant touched the tube. Since the left-most touching point is in the concave majorant it\u2019s leftmost segment is removed and placed in the solution, while the convex minorant is updated as a straight line from the detected breakpoint to the last explored point, resulting in (6). The algorithm would then continue adding segments, but since the majorant/minorant slopes are still crossing, the procedure of fixing segments to the solution is repeated through steps (6), (7) and (8). Finally at step (9) the slopes are no longer crossing and the method would continue adding tube segments, but since the end of the tube has already been reached the algorithm stops. use doubly linked lists, dynamic arrays or circular buffers: these approaches require dynamically reallocating memory chunks at some of the insert or remove operations. But in the taut-string algorithm, the maximum number of segments of the majorant/minorant is just the size of the input signal (7), and also the number of segments to be inserted in the queue throughout the algorithm will be n. Making use of these facts we implement a specialized queue based on a contiguous array of fixed length n. New segments are added from the start of the array on, and a couple of pointers are maintained to keep track of the first and last valid segments in the array, much in the way of a circular buffer. This implementation, however, does not require of the usual circular logic. Overall, this double-ended queue requires a single memory allocation at the beginning of the algorithm, keeping the rest of queue operations free from memory management and all but the simplest pointer or index algebra. We also store for each segment the following values: x length of the segment, y length and slope. Slopes might seem as redundant given the other two factors, but given the number of times the algorithm requires comparing slopes between segments (e.g., to preserve convexity/concavity) it pays off to precompute these values. This fact together with other calculation and code optimization details produces our implementation; these can be reviewed in the code itself athttps://github.com/albarji/proxTV. 2.2 Linearized taut-string method for Tv}? We now present a variant, linearized version of the taut-string method. Surprisingly, the resulting algorithm tums out to be equivalent to the fast algorithm of Condat [28], though now with a clearer interpretation based on taut-strings. The key idea is to build linear approximations to the greatest convex minorant and smallest concave majorant, producing exactly the same results but significantly reducing the bookkeeping of the method to a handful of simple variables. We therefore replace the greatest convex minorant and smallest convex majorant by a greatest affine minorant and smallest affine majorant. An example of the method is presented in Figure 4. A proof showing that this linearization does not change the resultant taut-string is given in Appendix D. In what follows, we describe the linearized method in depth. Details. Linearized taut-string requires only the following bookkeeping variables: 1. zo: index of the current segment start 2. 6: slope of the line joining segment start with majorant at the current point 3. 6: slope of the line joining segment start with minorant at the current point 4. h: height of majorant w.rt. the \\-tube center 5. fh: height of minorant w.r.t. \\-tube center 6. 7: index of last point where 5 was updated\u2014potential majorant break point 7. 2: index of last point where 6 was updated\u2014potential minorant break point. Figure 3 gives a geometric interpretation of these variables; we use these variables to detect minorant-majorant intersections, without the need to compute or store them explicitly. 10 i 4 Figure 3: Illustration of the geometric concepts involved in the linearized taut string method. The greatest linear minorant (of the tube ceiling) is depicted in green, while the smallest linear majorant (of the tube bottom) is shown in blue. The 6 slopes and h heights are presented updated up to the index shown as i. Algorithm 2 presents full pseudocode of the linearized taut-string method. Broadly, the algorithm proceeds in the same fashion as the classic taut-string method, updating the affine approximations to the majorant and minorant at each step, and introducing a breakpoint whenever the slopes of these two functions cross. More precisely, at each each iteration the method steps one point further through the tube, updating the minorant/majorant slopes (6, 5) as well their heights at the current point (/, h). To check for minorant/majorant crossings it suffices to compare the slopes (4, 5), or equivalently, to check whether the height of the minorant h falls below the tube bottom (since the minorant follows the tube ceiling) or the height of the majorant h grows above the tube ceiling (since the majorant follows the tube bottom). We make use of this last variant, Algorithm 2 Linearized taut string algorithm for TV-L1-proximity 1: Initialize i =i =i=h=h=0,6 =yo+r,6=yo A 2: while i < n do . . 3: Find tube height: AX = A ifi < n\u20141, else A = 0 : Update majorant height following current slope: h = h +6 \u2014 y;. 4 5: /* Check for ceiling violation: majorant is above tube ceiling */ 6: if h > \\ then 7 Build valid segment up to last majorant breaking point: 2; 41.4 = \u00e9. 8 Start new segment after break: (t0,7) =7,6 =yt+2A6=y,h=Ah=\u2014-Aji=itl 9 : continue 10: end if 11: Update minorant height following current slope: h = h + 6 \u2014 y. 12: /* Check for bottom violation: minorant is below tube bottom */ 13: if h < \u2014\\ then 14: Build valid segment up to last minorant breaking point: #i,+1: = 6. 15: Start new segment after break: (i9,1) = 1,6 = yi,d = 2A +y,,h =Ah=\u2014-Ai=it1 16: continue 17: end if 18: /* Check if majorant height is below the floor */ 19: if h<\u2014. then 20: Correct slope: 6 = 6 + Azh 21: The majorant now touches the floor: h = \u2014d 22: This is a possible majorant breaking point: 7 = i 23: end if 24: /* Check if minorant height is above the ceiling */ 25: if h > then 26: Correct slope: 6 = 6 + a 27: The minorant now touches the ceiling: h = rv 28: This is a possible minorant breaking point: i = 7 29: end if 30: Continue building current segment: i = i + 1 31: end while 32: Build last valid segment: %i,+1:n = 6. since updating heights turns out to be slightly cheaper than updating slopes, and so it is faster to ensure no crossing will take place before performing such updates. When a crossing is detected, we perform similar steps as in the classic taut-string method but with one significant difference: the algorithm is completely restarted at the newly introduced breakpoint. This restart idea is in contrast with the classic method, where we simply re-use the previously computed information about the minorant and majorant to update their estimates and continue working with them. In the linearized version we do not keep enough information to perform such an operation, so all data about minorant and majorant is discarded and the algorithm begins anew. Because of this choice the same tube segment might be reprocessed up to O(n) times in the method, and therefore the overall worst case performance is O(n\u201d). This fact was already observed in [28]. In what follows we describe the rationale behind the height update formulae. Height variables. To implement the method described above, the height variables / are not strictly necessary as they can be obtained from the slopes 6. However, explicitly including them leads to efficient updating rules at each iteration, as we show below. Classic Linearized (Condat\u2019s) Worst-case performance | O(n) O(n?) In\u2014memory No Yes Other considerations Fast bookkeeping through double- | Very fast iteration, cache friendly ended queues Table 1: Comparison of the main features of reviewed taut-string algorithms. Suppose we are updating the heights and slopes from their estimates at step 2 \u2014 1 to step 2. Updating the heights is immediate given the slopes, since hy; =hy_y +6 \u2014 y. In other words, since we are following a line with slope 6, the change in height from one step to the next is given by precisely such a slope. Note, however, that in this algorithm we do not compute absolute heights but instead relative heights with respect to the A-tube center. Therefore we need to account for the change in the tube center between steps 7 \u2014 1 and 2, which is given by r; \u2014 r;_1 = y;. This completes the update, which is shown in Algorithm 2 as lines 4 and 11. However, it is possible that the new height / runs over or under the tube. This would mean that we cannot continue using the current slope in the majorant or minorant, and a recalculation is needed, which again can be done efficiently by using the height information. Assume without loss of generality that the starting index of the current segment is 0 and the absolute height of the starting point of the segment is given by a. Then, for adjusting the minorant slope 6; so that it touches the tube ceiling at the current point, we note that 5 dtm oo At (um) +r \u2014a ) 4 4 where we have also added and subtracted the current value of h;. Observe that this value was computed using the estimate 6;_1 of the slope so far, so we can rewrite it as the projection of the initial point in the segment following such a slope, that is, as h; = 76; \u2014 r; + a. Doing so for one of the added heights i; produces A= hj 5, Ata taht a 5 . 4 4 4 which generates a simple updating rule. A similar derivation holds for the minorant. The resulting updates are included in the algorithm in lines 20 and 26. After recomputing this slope we need to adjust the corresponding height back to the tube: since the heights are relative to the tube center we can just set h \u2014 A, h = \u2014A; this is done in lines 21 and 27. Notice also that the special case of the last point in the tube where the taut-string must meet s,, = r,, is handled by line 3, where ) is set to 0 at such a point to enforce this constraint. Overall, one iteration of the method is very efficient, as mostly just additions and subtractions are involved with the sole exception of the division required for the slope updates, which are not performed at every iteration. Moreover, no additional memory is required beyond the constant number of bookkeeping variables, and in-place updates are also possible because y, values for already fixed sections of the taut-string are not required again, so the output 7 and the input y can both refer to the same memory locations. The resulting algorithm turns out to be equivalent, almost line by line, to the method of Condat [28], even though its theoretical grounds are radically different: while the approach presented here has a strong geometric basis due to its taut-string relationship, [28] is based solely on analysis of KKT conditions. Therefore, we have shown that Condat\u2019s fast TV method is, in fact, a linearized taut-string algorithm. 2.3. Comparison of taut-string methods and a hybrid strategy Table | summarizes the main features of the classic and linearized taut-string methods reviewed so far. Although the classic taut-string method has been largely neglected in the machine learning literature, its 10 iy ii ig i i ini (7) (8) (9) Figure 4: Example of the evolution of the linearized taut string method. The smallest affine majorant of the tube bottom (blue) and greatest affine minorant of the tube ceiling (green) are updated at every step. At step (1) the algorithm is initialized. Steps (2) to (4) successfully manage to update majorant/minorant without crossings. At step (5), however, the slopes cross, and so it is necessary to break the segment. Since the left-most tube touching point is the one in the majorant, the majorant is broken down at that point and its left-hand side is added to the solution, resulting in (6). The method is then restarted at the break point, with majorant/minorant being updated at step (7), though at step (8) once again a crossing is detected. Hence, at step (9) a breaking point is introduced again and the algorithm is restarted once more. Following this, step (10) manages to update majorant/minorant slopes up to the end of the tube, and so at step (11) the final segment is built using the (now equal) slopes. guarantee in linear performance makes it an attractive choice. Furthermore, although we could not find any references on implementation details of this method, we have empirically seen that a very efficient solver can be produced by making use of a double-ended queue to bookkeep the majorant/minorant information. In contrast to this, the linearized taut-string method (equivalent to [28]) features a much better performance per step in the tube traversal, mainly due to not requiring additional memory and making use of only a small constant number of variables, making the method friendly for CPU cache or registers calculation. As a tradeoff of keeping such scarce information in memory, the method does not guarantee linear performance, falling to a quadratic theoretical runtime in the worst case. This fact was already observed in [28], though such worst case was deemed as pathological, claiming a O(n) performance in all practical situations. We shall review these claims in the experimental sections in this manuscript. 11 The key points of Table | show that no taut-string variant is clearly superior. While the classic method provides a safe linear time solution to the problem, the linearized method is potentially faster but riskier in terms of worst case performance. Following these observations we propose here a simple hybrid method combining both approaches: run the linearized algorithm up to a prefixed number of steps n\u00b0, S \u20ac (1, 2), and if the solution has not yet been found, we switch to the classic method. We therefore limit the worst-case scenario to O(n*) + O(n) ~ O(n*), because once the classic method kicks, it will ensure an O(n) performance guarantee. Implementation of this hybrid method is easy upon realizing the similarities between algorithms: a switch\u2014 check is added to the linearized method every time a segment of the taut-string has been identified (Algorithm 2, lines 7, 14). If it is confirmed that the method has already run for n* steps without reaching the solution, the remaining part of the signal for which the taut-string has not yet been found is passed on to the classic method, whose solution is concatenated to the part the linearized method managed to find so far. We also report the empirical performance of this method in the experimental section. 2.4 Taut-string methods for weighted Tv}? Several applications TV require penalizing the discrete gradients individually, which can be done by solving the weighted TV-L1 problem . 1 2 n\u2014-1 ming pla\u2014yla+ > o wi|zip1 \u2014 2, (2.6) where the weights {wi} are all positive. To solve (2.6) using a taut-string approach, we again begin with its dual (written as a minimization problem) min, 4||D?ull;\u2014u\u2019Dy st. lul<wi, 1<i<n. (2.7) Then, we repeat the derivation of the unweighted taut-string method but with a few key modifications. More precisely, we transform (2.7) by introducing 19 = wu, = 0 to obtain : n 2 : min S\u2014 (Yi \u2014 Up +r)\u201d St. Jug] < wy, L<i<n. u i=1 Then, we perform the change of variables s = r \u2014 wu, where r; := eed yp, and consider n min S> (s;\u2014 1)\u2019 st.|si\u2014ril<wi, 1<i<ns9 =0, sn =Tn. 8s i=1 Finally, applying Theorem C.1 we obtain the equivalent weighted taut-string problem : n 2 : min S 1+ (8; \u2014s;-1)\u00b0 st. |s;\u20141r;| << wi, 1<i<n, s9 =0, 5, =Tn. (2.8) 8s i=1 Problem (2.8) differs from its unweighted counterpart (2.5) in the constraints |s; \u2014 7r;| < w; (1 <i <n), which allow different weights for each component instead of using the same value \\. Our geometric intuition also carries over to the weighted problem, albeit with a slight modification: the tube we are trying to traverse now has varying widths at each step instead of the previous fixed \\ width\u2014Figure 5 illustrates this idea. As a consequence of the above derivation and intuition, taut-string methods can be produced to solve the weighted TviP problem. The original formulation of the classic taut-string method in [32] defines the limits of the tube through possibly varying bottom and ceiling values (1;,u;) Vi, and so this method easily extends to solve the weighted TV problem by assigning J; = r; \u2014 wi, us = 7; + w;. In our pseudocode in Algorithm 1 we just need to replace \\ by the appropriate w,; values. Similar considerations apply for the linearized version (Algorithm 2), in particular, when checking ceiling/floor violations as well as when checking slope recomputations and restarts, we must account for varying tube heights. Algorithm 3 presents the precise modifications that we must make to Algorithm 2 to handle weights. Regarding the convergence of this method, the proof of equivalence with the classic taut-string method still holds in the weighted case (see Appendix D). The very same analysis as portrayed in Table | applies here: both the benefits and problems of the two taut-string solvers carry on to the weighted variant of the problem. 12 Taut\u2014sitring solution Figure 5: Example of the weighted taut string method with w = (1.35, 3.03, 0.73, 0.06, 0.71, 0.20, 0.12, 1.49, 1.41). The cumulative sum 7 of the input signal values y is shown as the dashed line, with the black dots marking the points (i, 7;). The bottom and ceiling of the tube are shown in red, which vary in width at each step following the weights w;. The weighted taut string solution s is shown as a blue line. Algorithm 3 Modified lines for weighted version of Algorithm 2 3: Find tube height: \\- wisi ifi <n \u20141, else 4-0 8: Start new segment after break: (i9,4) = 7,6 = ys + wea + wi, bd = ys t+ wi-1 \u2014 wi, h = wi, h = \u2014wi, i=it+l 15: Start new segment after break: (i9,4) = 4, 6 = ys + wi-a \u2014 wi, 6 = Yi + wi-1 + wi, h = wi, h = \u2014wi, @=24+1 3 Other one-dimensional TV variants While more infrequent, replacing the 2; norm of the standard TV regularizer by an \u00a3,-norm version can also be useful. In this section we focus first on a specialized solver for p = 2, before discussing a less efficient but more general solver for any \u00a3,, with p > 1. We also briefly cover the p = oo case. 3.1 TV-L2: Proximity for Tv,\u201d For TV-L2 proximity (p = 2) the dual to the prox-operator for (1.2) reduces to ming, (w) = 4$||/D? ull} \u2014u\" Dy, s.t. |lullo <A. (3.1) Problem (3.1) is nothing but a version of the well-known trust-region subproblem (TRS), for which a variety of numerical approaches are known [30]. We derive a specialized algorithm based on the classic Mor\u00e9-Sorensen Newton (MSN) method of [64]. This method in general can be quite expensive, but for (3.1) the Hessian is tridiagonal which can be well- exploited (see Appendix E). Curiously, experiments show that for a limited range of values, even ordinary gradient-projection (GP) can be competitive. But for overall best performance, a hybrid MSN-GP approach is preferable. Towards solving (3.1), consider its KKT conditions: (DD? + alu = Dy, (3.2) a(||ull2\u2014A)=0, a> 0, where a is a Lagrange multiplier. There are two possible cases: either ||ts||2 < A or ||26|/2 = A. 13 If ||ee||2 < A, then the KKT condition a(||t2||2 \u2014 A) = 0, implies that a = 0 must hold and u can be obtained immediately by solving the linear system DD? u = Dy. This can be done in O(n) time owing to the bidiagonal structure of D. Conversely, if the solution to DD\u2019 u = Dy lies in the interior of the ball ||e||> < A, then it solves (3.2). Therefore, this case is trivial, and we need to consider only the harder case Jatli2 =. For any given a one can obtain the corresponding vector u as ua, = (DD? + aI)~!Dy. Therefore, optimizing for w reduces to the problem of finding the \u201ctrue\u201d value of a. An obvious approach is to solve ||2.||5 = A?. Less obvious is the MSN equation he = -* = |lttally? = 0, (3.3) which has the benefit of being almost linear in the search interval, which results in fast convergence [64]. Thus, the task is to find the root of the function fh, for which we use Newton\u2019s method, which in this case leads to the iteration aca\u2014h,/hi,. (3.4) Some calculation shows that the derivative h\u2019 can be computed as 1 alls \u2014_ = Nala (3.5) hi, wh(DDT + al) te, The key idea in MSN is to eliminate the matrix inverse in (3.5) by using the Cholesky decomposition DD? + al = R?R, and defining a vector q,, = (R\")~ 1a, so that ||q..|[3 = u2 (DD? + aI) lu. Asa result, the Newton iteration (3.4) becomes |/therll3 ul (DDT + al) u,\u2019 || tel] \u2014 AW\" teed a- Fe = a~ (llttalla\" \u2014A~\")- Il Qall5 2 9 \u2014 wall ( - vol) | Ildeulls A and therefore ] \\2 \\ata| Ua 2 Ua|/2 a 1 ), (3.6) llaall5 ( n As shown for TV-L, (Appendix E), the tridiagonal structure of (DDD? + aJ) allows one to compute both R,, and qz, in linear time, so the overall iteration runs in O(n) time. The above ideas are presented as pseudocode in Algorithm 4. As a stopping criterion two conditions are checked: whether the duality gap is small enough, and whether wu is close enough to the boundary. This latter check is useful because intermediate solutions could be dual-infeasible, thus making the duality gap an inadequate optimality measure on its own. In practice we use tolerance values \u20ac, = 10~\u00ae and egap = 107\u00b0. Even though Algorithm 4 requires only linear time per iteration, it is fairly sophisticated, and in fact a much simpler method can be devised. This is illustrated here by a gradient-projection method with a fixed stepsize Qo, whose iteration is ult? = Phcy(u\u2019\u2014 apVo(u')). (3.7) The theoretically ideal choice for the stepsize ag is given by the inverse of the Lipschitz constant L of the gradient Vd(w) [13, 66]. Since d(t) is a convex quadratic, L is simply the largest eigenvalue of the Hessian D.D\u2122. Owing to its special structure, the eigenvalues of the Hessian have closed-form expressions, namely A; = 2 \u2014 2.cos (4) (for 1 <i <n). The largest one is A, = 2 \u2014 2cos (22) , which tends to 4 as n \u2014 oo; thus the choice ap = 1/4 is a good and cheap approximation. Pseudocode showing the whole 14 Algorithm 4 MSN based TV-L2 proximity Initialize: a = 0, Ug = 0. while |||2<.||3 \u2014 A| > \u20ac, or gap(ta) > egap do Compute Cholesky decomp. DD? + al = R? Ry. Obtain u,, by solving RER Que = Dy. Obtain qq, by solving RU qa = Ua. oma \u2014 Walle (1 _ ucla) laall5 end while return ty, Algorithm 5 GP algorithm for TV-L2 proximity Initialize uo \u20ac RN, t = 0. while (\u2014 converged) do Gradient update: vt = u? \u2014 Vf (ut). Projection: ut = max(1 \u2014 A/||v\"||2, 0) - vt. t<ct4+l1. end while return u\u00b0. procedure is presented in Algorithm 5. Combining this with the fact that the projection P).\\,<) is also trivial to compute, the GP iteration (3.7) turns out to be very attractive. Indeed, sometimes it can even outperform the more sophisticated MSN method, though only for a very limited range of \\ values. Therefore, in practice we recommend a hybrid of GP and MSN, as suggested by our experiments (see \u00a75.2.1). 3.2. TV-Lp: Proximity for Tv,\u201d For TV-L,, proximity (for 1 < p < oo) the dual problem becomes min O(t) = 5| D7 alls \u2014u' Dy, st. |\\ullg <A, (3.8) where g = 1/(1 \u2014 1/p). Problem (3.8) is not particularly amenable to Newton-type approaches, as neither PN (Appendix E), nor MSN-type methods (83.1) can be applied easily. It is partially amenable to gradient- projection (GP), for which the same update rule as in (3.7) applies, but unlike the g = 2 case, the projection step here is much more involved. Thus, to complement GP, we may favor the projection-free Frank-Wolfe (FW) method. As expected, the overall best performing approach is actually a hybrid of GP and FW. We summarize both choices below. 3.2.1 Efficient projection onto the \u00a3,-ball The problem of projecting onto the \u00a3,-norm ball is min d(w) := $||w\u2014ull5, s.t. |jwl|g <A. (3.9) For this problem, it turns out to be more convenient to address its Fenchel dual ming d*(w) = $||w \u2014 ull5 + Allwllp, (3.10) which is actually nothing but prox Alli (M4) The optimal solution, say w*, to (3.9) can be obtained by solving (3.10), by using the Moreau-decomposition (A.6) which yields w* =uU\u2014 PTOX) |.) (W). 15 Projection (3.9) is computed many times within GP, so it is crucial to solve it rapidly and accurately. To this end, we first turn (3.10) into a differentiable problem and then derive a projected-Newton method following our approach presented in Appendix E. Assume therefore, without loss of generality that w > 0, so that w > 0 also holds (the signs can be restored after solving this problem). Thus, instead of (3.10), we solve ming d*(w) = $])w \u2014 ull} + (> wy)? st w > 0. (3.11) The gradient of d* may be compactly written as Vd*(w) = w\u2014 ut Aljwl|> Pw? ?, (3.12) where w?~1! denotes elementwise exponentiation of w. Elementary calculation yields wie U (w) = 64j(1+ Mp\u2014 1) (qe)? Leolp) + AC PEE)? GREY ally! = 6:5 (1 _ cw? *) + cW;W;, where \u00a2 = \\(1 \u2014 p)||w||51, @ = w/||wl|p, \u00ae = (w/||w||,)?~!, and 6,; is the Dirac delta. In matrix notation, this Hessian\u2019s diagonal plus rank-1 structure becomes apparent H(w) = Diag(1 \u2014 ew?) + cw w\" (3.13) To develop an efficient Newton method it is imperative to exploit this structure. It is not hard to see that for a set of non-active variables J the reduced Hessian takes the form Hy(w) = Diag(1 \u2014 cw?) + ewyw7. (3.14) With the shorthand A = Diag (1 \u2014 cw?) , the matrix-inversion lemma yields AW tcp piw7 At -1 _ \u2014 \u2014T\\-1_ a-1 HH (w) = (A+ cwyw; ) =A Ty eA, (3.15) Furthermore, since in PN the inverse of the reduced Hessian always operates on the reduced gradient, we can rearrange the terms in this operation for further efficiency; that is, (v \u00a9 wz) (v \u00a9 wr)\u2019 Vrf(w) 1/c+ w;(v \u00a9 w;) H,(w) 'V7f(w) = 0 \u00a9 Vrf(w) \u2014 ; (3.16) ~p\u2014-2\\\u20141 . where v := (1 \u2014 ewe *) , and \u00a9 denotes componentwise product. The relevant point of the above derivations is that the Newton direction, and thus the overall PN iteration can be computed in O(n) time, which results in a highly effective solver. 3.2.2 Frank-Wolfe algorithm for TV-L, proximity The Frank-Wolfe (FW) algorithm (see e.g., [42] for a recent overview), also known as the conditional gradient method [15] solves differentiable optimization problems over compact convex sets, and can be quite effective if we have access to a subroutine to solve linear problems over the constraint set. The generic FW iteration is illustrated in Algorithm 6. FW offers an attractive strategy for TV-L, because both the descent-direction as well as stepsizes can be computed easily. Specifically, to find the descent direction we need to solve ming s\u2019(DD'u\u2014Dy), st. ||sl\\g <.. (3.17) This problem can be solved by observing that max) ,))<1 s' z is attained by some vector s proportional to z, of the form |s*| x |z|?~+. Therefore, s* in (3.17) is found by taking z = DD?u \u2014 Dy, computing s = \u2014sgn(z) \u00a9 |z|\u2019 * and then rescaling s to meet \\|Sl|q =. 16 Algorithm 6 Frank-Wolfe (FW) Inputs: f{, compact convex set D. Initialize x \u20ac D,t = 0. while stopping criteria not met do Find descent direction: min, s - V f(a) s.t. \u00a2 \u20ac D. Determine stepsize: min, f(a; + y(s \u2014 a\u00a2)) s.t. y \u20ac [0, 1]. Update: a441 = a, + y(s \u2014 x4) tc\u2014t+l. end while return x;. The stepsize can also be computed in closed form owing to the objective function being quadratic. Note the update in FW takes the form u + y(s \u2014 uw), which can be rewritten as u + yd with d = s \u2014 wu. Using this notation the optimal stepsize is obtained by solving . T min,e(o,1) 5||D* (w+ 7d)|3 \u2014 (w+ yd)\" Dy. A brief calculation on the above problem yields y\" = min {max {7,1} ,0}, where \u00a5 = \u2014(d?DD?u + d? Dy)/(d? DD\" d) is the unconstrained optimal stepsize. We note that following [42] we also check a \u201csurrogate duality-gap\u201d g(a) = a7 V f(a) \u2014 mins\u2019 V f(x) = (w \u2014 s*)\" Vf (a), sED at the end of each iteration. If this gap is smaller than the desired tolerance, the real duality gap is computed and checked; if it also meets the tolerance, the algorithm stops. 3.3. Prox operator for TV-L.,. The final case is Tv proximity. We mention this case only for completeness. The dual to the prox-operator here is min, $||D?ul|} \u2014u? Dy, s.t. |jul], <A. (3.18) This problem can be again easily solved by invoking GP, where the only non-trivial step is projection onto the ,-ball. But the latter is an extremely well-studied operation (see e.g., [48, 58]), and so O(7) time routines for this purpose are readily available. By integrating them in our GP framework an efficient prox solver is obtained. 4 Prox operators for multidimensional TV We now move onto discussing how use the efficient 1D-TV prox operators derived above within a prox-splitting framework to handle multidimensional TV (1.3) proximity. 4.1 Proximity stacking The basic composite objective (1.1) is a special case of the more general class of models where one may have several regularizers, so that we now solve ming f(#) +0\" rile), (4.1) 17 where each r; (for 1 <2 < m) is Isc and convex. Just like the basic problem (1.1), the more complex problem (4.1) can also be tackled via proximal methods. The key to doing so is to use inexact proximal methods along with a technique we should call proximity stacking. Inexact proximal methods allow one to use approximately computed prox operators without impeding overall convergence, while proximity stacking allows one to compute the prox operator for the entire sum r(a@) = 57\", r;(a) by \u201cstacking\u201d the individual r; prox operators. This stacking leads to a highly modular design; see Figure 6 for a visualization. In other words, proximity stacking involves computing the prox operator prox,(y) =argmin }|e\u2014yl|3+ 2\" ri(w), (4.2) by iteratively invoking the individual prox operators prox,, and then combining their outputs. This mixing is done by means of a combiner method, which guarantees convergence to the solution of the overall prox,.(y). Proximal method Figure 6: Design schema in proximal optimization for minimizing the function f(a) + 577\". ri(a). Proximal stacking makes the sum of regularizers appear as a single one to the proximal method, while retaining modularity in the design of each proximity step through the use of a combiner method. For non-smooth f the same schema applies by just replacing the f gradient operator by its corresponding proximity operator. Different proximal combiners can used for computing prox,. (4.2). In what follows we briefly describe some of the possibilities. The crux of all of them is that their key steps will be proximity steps over the individual 7; terms. Thus, using proximal stacking and combination, any convex machine learning problem with multiple regularizers can be solved in a highly modular proximal framework. After this section we exemplify these ideas by applying them to two- and higher-dimensional TV proximity, which we then use within proximal solvers for addressing a wide array of applications. 4.1.1 Proximal Dykstra (PD) The Proximal Dykstra method [27] solves problems of the form min 5||% \u2014yll> + ri(w) + 1ro(a), which is a particular case of (4.2) form = 2. The method follows the procedure detailed in Algorithm 7, which is guaranteed to converge to the desired solution. Using PD for proximal stacking for 2D Total-Variation was previously proposed in [8]. It has also been shown that the application of this method is equivalent to performing alternating projections onto certain dual polytopes [43], a procedure whose effectiveness varies depending on the relative orientation of such polytopes. A more efficient method based on reflections instead of projections is possible, as we will see below. More generally, if more than two regularizers are present (i.e., 7m > 2), then it is more fitting to use Parallel-Proximal Dykstra (PPD) [26] (see Alg. 8), a generalization obtained via the \u201cproduct-space trick\u201d of Pierra [69]. This parallel proximal method is attractive because it not only combines an arbitrary number of 18 Algorithm 7 Proximal Dykstra Inputs: 71, r2, input signal y \u20ac IR\u201d. Initialize xo = y, po = Qo = 0, t = 0. while stopping criteria not met do rg proximity operator: 2; \u2014 prox,., (az + pr). rg Step: Pepi = Le + Pe \u2014 %. ry proximity operator: #41 = prox, (2 + qt). ry, step: Ge41 = 21 + Qt \u2014 Ve41. t<ct4+l1. end while Return x;. Algorithm 8 Parallel-Proximal Dykstra Inputs: 71,..., 7, input signal y \u20ac R\u201d. Initialize ao = y, 2 = 0, fori =1,...,m;t=0 while stopping criterion not met do for 1 = 1 to m in parallel do Pi, = prox,,, (24) end for @41 = - Dy Pi for 1 = 1 to m in parallel do 21 = E41 + 2; \u2014 Dh end for t<-t+l end while Return x; regularizers, but also allows parallelizing the calls to the individual prox operators. This feature allows us to develop a highly parallel implementation for multidimensional TV proximity (84.3). 4.1.2 Alternating reflections \u2014 Douglas-Rachford (DR) The Douglas-Rachford (DR) method was originally devised for minimizing the sum of two (nonsmooth) convex functions [27], in the form: min fi (a) + fe (a), (4.3) such that (ri dom f,) M (ri dom fo) 4 @. The method operates by iterating a series of reflections, and in its simplest form can be written as Zrii = a [Rp Rp, +1) 20, (4.4) where the reflection operator Ry := 2 prox, \u2014I. This method is not cleanly applicable to problem (4.2) because of the squared norm term. Nevertheless in [43] a suitable transformation was proposed by making use of arguments from submodular optimization; a minimal background on this topic is given in Appendix A. We summarize the key ideas from [43] below. Assume m = 2 and r1, rg being Lovasz extensions to some submodular functions (Total-Variation is the Lovasz extension of a submodular graph-cut problem, see [5]). Defining #,(x) = r,(x) \u2014 x7 y, ?, is also a Lovasz extension of some submodular function (see Appendix A). Therefore, we may consider the problem prox,(y) = argmin 5|\\a|/> + 71(w) + ro(a), x 19 which can be rewritten (using Proposition A.11) as min la\u2014 Olle, st ae\u2014B,,b\u20acB,,, (4.5) where B, denotes the base polytope of submodular function corresponding to r (see Appendix A). The original solution can be recovered through \u00ab = a \u2014 b. Problem (4.5) is still not in a form amenable to DR (4.3)\u2014nevertheless, if we apply DR to the indicator functions of the sets \u20145;,, B,,, that is, to the problem min 6_p,, (#) + dp,, (#), it can be shown [12] that the sequence (4.4) generated by DR is divergent, but that after a correction through projection converges to the desired solution of (4.5). Such solution is given by the pair b= Us,., (x), a= H_s,., (b). (4.6) Although in this derivation many concepts have been introduced, suprisingly all the operations in the algorithm can be reduced to performing proximity steps. Note first that the projections onto a base polytope required to get a solution (4.6) can be written in terms of proximity operators (Proposition A.12), which in this case implies Ip,, (2) =z \u2014 prox, (2), I_p,, (2) = 2 + prox,,(\u2014z) = 2 + prox, (2 +9), where we use the fact that for f(a) = \u00a2(a) + wu\u2019 a, prox (a) = prox,(a# \u2014 u). The reflection operations in which the DR iteration is based (4.4) can also be written in terms of proximity steps, as we are applying DR to the indicator functions d_,., 6,.,, and proximity for an indicator function equals projection. This alternating reflections variant of DR is presented in Algorithm 9. Note that in contrast with the original DR method, this variant does not require tuning any hyperparameters, thus enhancing its practicality. Algorithm 9 Alternating reflections - Douglas Rachford (DR) Inputs: 7, rz Lovasz extensions of some submodular function, input signal y \u20ac R\u201d. Initialize z9 \u20ac R\u201d,\u00a2 = 0. Define the following operations: IL_p,, (2) \u201c2 + prox,,(-2 + y). def Up,,, (2) = 2% \u2014prox,,(z). R_p,, (2) \u00a9 2U_p,, (2) \u2014z. Rp,,(2) \u00a9 2p, (2) \u2014z. while stopping criteria not met do Zt41 = 4 [R_B,, Re, + q| Zk tc\u2014t+l. end while b= Ilz,., (44), a=Il_s,, (b). Return z* = a \u2014 b. 4.1.3 Alternating-Direction Method of Multipliers (ADMM) Although many times presented as a particular algorithm for solving problems involving the minimization of a certain objetive f(a) + g( Lx) with L a linear operator [27], the Alternating-Direction Method of Multipliers can be thought as general splitting strategy for solving the unconstrained minimization of a sum of functions. This strategy boils down to transforming a problem in the form min, aa f;(a) into a saddle-point problem 20 Algorithm 10 Alternating Direction Method of Multipliers (ADMM) Inputs: r1,..., 7m, input signal y \u20ac IR\u201d. Initialize xy = 2), = y fori =1,...,m;t=0 while stopping criterion not met do yrds (ute) Lt. = Timp for 1 = 1 to m in parallel do Zz = proxa,,,(\u20145 Ut + L141) . ep . Uigy = Utes + P(Z 44 \u2014 Bes) end for t<t+4+1 end while Return x; by introducing consensus constraints and incorporating them into the objective through augmented Lagrange multipliers, m m min S fi(vz)= min S file;) st 21=@,...,2m =, we mm i=l i=l \u00a9, Z1,.--, z ~ p = min max ) (file) + uP (@: \u2014 2) + Sz; \u2014 2/2) . DZ 1 5--+5 2m Uls--+5 Um j=l 2 The method then proceeds to solve this problem by alternating steps of minimization on x, minimization on every 2;, and a gradient step on every 2;. In [95] a proposal using this method was presented to solve m\u2014dimensional anisotropic TV (1.3). This approach applies equally to the more general proximal stacking framework under discussion here (4.2), by the transformation m prox,(y) :=argmin $|\\a \u2014 yll5 + et r(x), x m = \u2018 T p = nim, max sla \u2014 wl +0 (hla) teller \u20142) + bles). \u2014 The steps for obtaining a solution then follow as Algorithm 10. Similar to Parallel Proximal Dykstra, this approach allows computing the prox-operator of each function 7; in parallel. 4.1.4 Dual proximity methods Another family of approaches to solve (4.2) is to compute the global proximity operator using the Fenchel duals prox,.. This can be advantageous in settings where dual prox-operator is easier to compute than the primal operator; isotropic Total- Variation problems are an instance of such a setting, and thus investigating this approach for their anisotropic variants is worthwhile. Indeed, in the context of image processing a popular splitting approach is given by Chambolle and Pock [22], which consider a problem in the form min F(Kka)+G(a), for KC some linear operator, F\u2019,G convex lower-semicontinuous functions. Through a strategy similar to ADMM an equivalent saddle point problem can be obtained, minmax (Ka) y+G(a)\u2014 F*(y), ey 21 with F\u2019* convex conjugate of F\u2019. This problem is then solved by alternating maximization on y and minimiza- tion on x through proximity steps, as Yt+1 = Proxy px (Yt + COKE) E141 = prox,g(#_ \u2014 TK yt41) Bip. = Ce + O(@ey1 \u2014 #4), where K\u2122 is the conjugate transpose of Kk. 0, 7 and @ are algorithm parameters that should be either selected under some bounds [22, Algorithm 1] or readjusted every iteration making use of Lipschitz convexity of G (22, Algorithm 2], resulting in an accelerating scheme much in the style of FISTA [13]. The overall procedure can also be shown to be an instance of preconditioned ADMM, where the preconditioning is given by the application of a proximity step for the maximization of y (instead of the usal dual gradient step of ADMM) and the auxiliary point %. Note also how proximity is computed over the dual F'* instead of the primal prox p. Now, this decomposition strategy can be applied for some instances of proximal stacking (4.2) when the r; terms allow the particular composition m Ky Sen) =F |]: |e] = Puce), al Ky, which does not hold in general but holds for 2D TV (1.4) when taking the identities F(@) = |\\a||1,G(@) = 5 || \u2014 ys, TaD K- |e) with D the differencing matrix as before, \u00ae denotes Kronecker product, and & a vectorization of the 2D input. The iterates above can then be applied easily: proximity over G is trivial and proximity over F\u2122 is also easy upon realizing that PLOX.)x = PLOXs) ) = Tl).\\|..<1, which is solved through thresholding. A generalization of this approach is presented by Condat [29], who considers m min f(a) + g(a) +) ri(Lia), al a problem that cleanly fits into (4.2) with f(a) = 4||a \u2014 y||3, g(@) = 0, L = I. The procedure to find a solution is proposed as m gt PIX, 9 (= \u2014TV f(a\") \u20147+ S- tx!) i=l np = pe + (1\u2014 pat ait = PTOX 5p, (ut + oD; (28444 _ z)) Vi= 1, --+,\u2122M, ult! = pult' + (1\u2014 p)ut Vi=1,...,m, for 7, p parameters of the algorithm. When applying this procedure to 2D TV (m = 2, r1(a) = proximity over rows, 7'2(a) = proximity over columns) an algorithm almost equivalent to Chambolle and Pock [22] is obtained, the only difference being that here the gradient of f is used, instead of the prox, operation. 22 Finally, another related method is the splitting approach of Kolmogorov et al [51], which form = 2 performs the following splitting: min 5 ||% \u2014yll2 + ri(w) + ro(w), =min |ja\u2014ylls+ri(w)+ro(a\u2019) sta=a', wa =min max || ax \u2014 yl|2 + ri(@) + ro(a\u2019) + 27 (a \u2014 2\u2019), wel 2 =minmax |ja \u2014 y|/3 + ri(a)\u2014 r3(z) + az. x z where we have made use of the Fenchel dual r3(z) = max,\u2019 27x! \u2014 ro(x\u2019). This problem can be solved through a primal-dual minimization: gitt \u2014 PIOX gt ps (2' + 0\u00b0 (a + O(a\" \u2014 a ))), t+1 _ t t,t+1 xz = PPOX,\u00a3(|).-y 2471) (x \u2014-T Zz ) . The primal proximity operator over the squared norm term plus r; can be rewritten in terms of prox,, as 1+7t 2 = prox(yy7\u20141)-1,, (CL + tT\") M(y +7 lw)). jet\") y+ tw)|l3, pr (w) = argmin ry (a) + \u2018OX 1 r(ra+5 || ull) Regarding the dual step, in the previously presented methods the decompositions allowed to disentangle the effect of a linear operator L; from each r;. The present decomposition, however, does not take into account this possibility, thus increasing the complexity of computing 73. To address this difficulty the Moreau decomposition (A.3) is helpful, as _ . o 1,12 prox,,\u00ab (w) = w\u2014o | argminr2(@) + ple \u2014o ~wil5), x =w\u2014oprox,-1,,(0 'w), thus solving the dual proximity operator in terms of the primal prox,.,. Regarding the algorithm parameters 0, 7 and o, they can be adjusted at every iteration for greater performance making use of Lipschitz convexity [23]. 4.2 Two-dimensional TV Recall that for a matrix X \u20ac IR\"!*\u201d*, the anisotropic 2D-TV regularizer takes the form 2 ny ng-l1 1/p na ni-l 1/q TV;,,q(X) = an Oo lei gra \u2014 iy ) + Oe, |Pitaj \u2014 I\") . (4.7) This regularizer applies a Typ? regularization over each row of X, and a Tv,> regularization over each column. Introducing differencing matrices D,, and D,,, for the row and column dimensions, the regularizer (4.7) can be rewritten as 2D _ n m TplX) =D) Dneiclly +), lDmasilla (4.8) where 2; , denotes the 7-th row of X, and x. ; its j-th column. The corresponding Tv, -proximity problem is minx $||X \u2014 \u00a5 jp + ATv,2,(X), (4.9) where we use the Frobenius norm ||X||p = \\/)7;; rj; = ||vec(X)||2, where vec(X) is the vectorization of X. Using (4.8), problem (4.9) becomes minx |X \u2014\u00a51R+A (YD, Dnaiclp) +\u00a5(2, Dmaslla) (4.10) 23 where the parentheses make explicit that Typ is a combination of two regularizers: one acting over the rows and the other over the columns. Formulation (4.10) fits the model solvable by the strategies presented above, though with an important difference: each of the two regularizers that make up Typ is itself composed of a sum of several (n or 7m) 1D-TV regularizers. Moreover, each of the 1D row (column) regularizers operates on a different row (columns), and can thus be solved independently. 4.3 Higher-dimensional TV Going even beyond Tv is the general multidimensional TV (1.3), which we recall below. Let X be an order-m tensor in IRI j=1 , whose components are indexed as X im (1 <4; <n, for 1 <4 <m); we define TV for X as V1 12,006, Ne\u2014-l1 m def \u201c De 1/P Tv, (X) \u2014 S- S- (> IXis sig ead tlie pees tm \u2014 Xin sin advins pores im| ) ; (4.11) k=1 {iq,..jim}\\ix J=1 where p = [p1,.--,Pm| is a vector of scalars p;, > 1. This corresponds to applying a 1D-TV to each of the 1D fibers of X along each of the dimensions. Introducing the multi-index i(k) = (i1,..-,7n\u20141,4k41,---;%m), which iterates over every 1-dimensional fiber of X along the k-th dimension, the regularizer (4.11) can be written more compactly as Tw = So, ie) | Dn Pic) Ile (4.12) where x ;(,) denotes a row of X along the k-th dimension, and D,,, is a differencing matrix of appropriate size for the 1D-fibers along dimension k (of size n;). The corresponding m-dimensional-TV proximity problem is minx $||X \u2014 Y|lp + AT v(x), (4.13) where \\ > 0 is a penalty parameter, and the Frobenius norm for a tensor just denotes the ordinary sum-of- squares norm over the vectorization of such tensor. Problem (4.13) looks very challenging, but it enjoys decomposability as suggested by (4.12) and made more explicit by writing it as a sum of Tv!\u201d terms minx 3X \u2014YIF+ So, | Sosy Moe (aay): (4.14) The proximity task (4.14) can be regarded as the sum of m proximity terms, each of which further decomposes into a number of inner Tv!\u201d terms. These inner terms are trivial to address since, as in the 2D-TV case, each of the Tv! terms operates on different entries of X. Regarding the m major terms, we can handle them by applying any of the combiner strategies presented above for m > 2, which ultimately yield the prox operator for Tv, by just repeatedly calling Tv!\u201d prox operators. Most importantly, both proximal stacking and the natural decomposition of the problem provide a vast potential for parallel multithreaded computing, which is valuable when dealing with such complex and high-dimensional data. 5 Experiments and Applications We will now demostrate the effectiveness of the various solvers covered in a wide array of experiments, as well as showing many of their practical applications. We will start by focusing on the TviP methods, moving then to other 1D-TV variants, and then to multidimensional TV. All the solvers implemented for this paper were coded in C++ for efficiency. Our publicy available library proxTV includes all these implementations, plus bindings for easy usage in Matlab or Python: https://github.com/albarji/proxT V. Matrix operations have been implented by exploiting the LAPACK (FORTRAN) library [3]. 24 5.1 Tv}? experiments and Applications Since the most important components of the presented modular framework are the efficient TviP prox operators, let us begin by highlighting their empirical performance. We will do so both on synthetic and natural images data. 5.1.1 Running time results for synthetic data We test the solvers under two scenarios of synthetic signals: I) Increasing input size ranging from n = 10! ton = 10\u201d. A penalty X \u20ac [0,50] is chosen at random for each run, and the data vector y with uniformly random entries y; \u20ac [\u20142A, 2A] (proportionally scaled to A). Il) Varying penalty parameter \\ ranging from 10~\u00b0 (negligible regularization) to 10\u00b0 (the TV term domi- nates); here 7 is set to 1000 and y; is randomly generated in the range [\u20142, 2] (uniformly). TV1 increasing sizes TV1 increasing penalties A \u2014v-\u2014Projected Newton \u2014-\u2014 Classic Taut-String \u2014v-\u2014 Linearized Taut-String 10\u00b0F \u2014w\u2014 Hybrid Taut-String sot Condat Johnson SLEP ow Condat Taut-string soa Kolmogorov 10? 104 10\u00b0 Problem size Penalty > (a) (b) Figure 7: Running times (in secs) for proposed and state of the art solvers for Tv,> -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. We benchmark the performance of the following methods, including both our proposals and state of the art methods found in the literature: e Our proposed Projected Newton method (Appendix E). e Our efficient implementation of the classic taut string method. e Another implementation of the classic taut string method by Condat [28]. e Animplementation of the linearized taut string method. e Our proposed hybrid taut string approach. e The FLSA function (C implementation) of the SLEP library of Liu et al. [59] for Tv\\P -proximity [60]. e The state-of-the-art method of Condat [28], which we have seen to be equivalent to a linearized taut-string method. e The dynamic programming method of Johnson [45], which guarantees linear running time. e The message passing method of Kolmogorov et al [51], which allows generalization for computing a Total Variation regularizer on a tree. 25 Another implementation of the classic taut string method, found in the literature, has been added to the benchmark to test whether the implementation we have proposed is on par with the state of the art. We would like to note the surprising lack of widely available implementations of this method: the only working and efficient code we could find was part of the same paper where Condat\u2019s method was proposed. For Projected Newton and SLEP a duality gap of 10~\u00b0 is used as the stopping criterion. For the hybrid taut-string method the switch parameter is set as S = 1.05. The rest of algorithms do not have parameters. Timing results are presented in Figure 7 for both experimental scenarios. The following interesting facts are drawn from these results e Direct methods (Taut string methods, Condat, Johnson, Kolmogorov) prove to be much faster than iterative methods (Projected Newton, SLEP). e Although Condat\u2019s (and hence linearized taut string) method, has a theoretical worst-case performance of O(n), the practical performance seems to follow an O(n) behavior, at least for these synthetic signals. e Even if Johnson and Kolmogorov methods have a guaranteed running time of O(n), they turn out to be slower than the linearized taut string and Condat\u2019s methods. This is in line with our previous observations of the cache-friendly properties of in-memory methods; in contrast Johnson\u2019s method requires an extra ~ 8m memory storage. Kolmogorov\u2019s method has less memory requirements but nevetheless shows similar behavior. e The same performance observation applies to the classic taut string method. It is also noticeable that our implementation of this method turns out to be faster than previously available implementations (Condat\u2019s Taut-string), even becoming slightly faster than the state of the art Johnson and Kolmogorov methods. This result is surprising, and shows that the full potential of the classic taut-string method has been largely unexploited by the research community, or at least that proper efficient implementations of this method have not been made readily available so far. 5.1.2 Worst case scenario The point about comparing O(n) and O(n?) algorithms deserves more attention. As an illustrative experiment we have generated a signal following the worst case description in Condat [28], and tested again the methods above on it, for increasing signal lengths. Figure 8 plots the results. Condat\u2019s method and consequently the linearized taut string method shows much worse performance than the rest of the direct methods. It is also remarkable how the hybrid method manages to avoid quadratic runtimes in this case. 5.1.3 Running times on natural images In the light of the previous results the following question arises: in practical settings, are the problems to be solved closer to the worst or the average runtime scenario? This fact will determine whether the guaranteed linear time or the more risky quadratic methods are more apt for practical use. To test this we devise the following experiment: we take a large benchmark of natural images and run each solver over all the rows and columns of all the images in the set, counting total running times, for different regularization values. The benchmark is made from images obtained from the datasets detailed in Table 2. We run this benchmark for the methods showing better performance in the experiments above: our implementation of the classic taut-string method, Condat\u2019s method (= linearized taut-string method), our proposed Hybrid taut-string method, Johnson\u2019s method and Kolmogorov et al\u2019s method. Figure 9 shows runtime results for different penalty values over the whole INRIA holidays dataset [44], while Figure 10 shows similar results for the whole Large Scale Visual Recognition Challenge 2010 validation dataset [77]. The following facts of interest can be observed: e Condat\u2019s method (linearized taut-string) shows top performance for low penalty values, but bad scaling when moving to higher penalties. This can be explained using the geometric intuition developed above: 26 TV1 Worst scenario \u2014@\u00ae\u2014 Classic taut-string method _ | \u2014a Condat's method 10\u00b0\" | \u2014*\u2014 Hybrid method \u2014@\u2014 Johnson's method \u00bb ..., | \u201c> Kolmogorov's method = rt \u2014*\u2014 Condat's taut-string method xX 1073 4 10~* 5 Signal length Figure 8: Running times (in secs) for proposed and state of the art solvers for TviP -proximity in the worst-case scenario for Condat\u2019s method, for increasing input sizes. Both axes are on a log-scale. Table 2: Detail of image datasets used for large-scale Tv\\P experiments. Dataset Images Average image size INRIA holidays [44] 812 1817 x 2233 x 3 px LSVRC 2010 val set [77] 50000 391 x 450 x 3 px for large penalty values the width of the tube is very large, and thus the taut-string will be composed of very long segments. This is troublesome for a linearized taut-string method, as each backtrack will require recomputing a large number of steps. On the contrary for smaller penalties the tube will be narrow, and the taut-string composed of many small segments, thus resulting in very cheap backtracking costs. e The performance of Classic taut-string, Johnson and Kolmogorov becomes slightly worse for large penalties, but suffers significantly less than the linearized taut-string. Surprisingly, the best performing approach tends to be the classic taut-string method. e The proposed hybrid strategy closely follows the performance of Condat\u2019s method for the low penalty regime, while adapting to a behaviour akin to Kolmogorov for large penalties, thus resulting in very good performances over the whole regularization spectrum. 27 TV1 INRIA Holidays pee \u2014\u00ae\u2014 Classic taut-string method 00 \u2014l\u2014 Condat's method 1400 + \u2014*\u2014 Hybrid taut-string method > \u2014@\u2014 Johnson's method e 1200 | \u2014*\u2014 Kolmogorov's method 21000 + = Cc = g00 4 Ss \u00b0 F 600 + 400 + 200 + T T T T T T Lo 10-3 107} 10! 10? 10\u00b0 Penalty Figure 9: Running times (in secs) for the top performing proposed and state of the art solvers for Tvi> - proximity over the whole INRIA Holidays dataset, for increasing penalties. 5.1.4 Running time results for weighted TV-L1 An advantage of the solvers proposed in this paper is their flexibility to easily deal with the more difficult, weighted version of the TV-L1 proximity problem. To illustrate this, Figure 11 shows the running times of the Projected Newton and (linearized) Taut String methods when solving both the standard and weighted TV-L1 prox operators. Since for this set of experiments a whole vector of weights w is needed, we have adjusted the experimental scenarios as follows: I) nis generated as in the general setting, penalties w \u20ac [0, 100] are chosen at random for each run, and the data vector y with uniformly random entries y; \u20ac [\u20142A, 2A], with \\ the mean of w, using also this A choice for the uniform (unweighted) case. Il A and n are generated as in the general setting, and the weights vector w is drawn randomly from the uniform distribution w,; \u20ac [0.5A, 1.5A]. As can be readily observed, performance for both versions of the problem is almost identical, even if the weighted problem is conceptually harder. Conversely, adapting the other reviewed algorithms to address this problem while keeping up with performance is not a straightforward task. We would also like to point out that in the paper [53] a practical application of this method for energy minimization in computer vision is presented, where exactly the code behind this paper has been put to use. 28 TV1 Imagenet \u2014\u00ae\u2014 Classic taut-string method 3000 | ~~ Condat's method \u2014*\u2014 Hybrid taut-string method > \u2014@\u2014 Johnson's method \u00ae 2500 7 \u2014*\u2014 Kolmogorov's method D Cc E c > 2000 + a 1500 + 1000 + \u2018 . 1 1 1 t 10\"? 10-7 107} 101 107 10\u00b0 Penalty Figure 10: Running times (in secs) for the top performing proposed and state of the art solvers for Tvi> - proximity over the whole Large Scale Visual Recognition Challenge 2010 validation dataset, for increasing penalties. 5.2. Experiments for other 1D-TV variants 5.2.1 Running time results for TV-L2 Next we show results for TviP proximity. To our knowledge, this version of TV has not been explicitly treated before, so there do not exist highly-tuned solvers for it. Thus, we show running time results only for the MSN and GP methods. We use a duality gap of 10~\u00b0 as the stopping criterion; we also add an extra boundary check for MSN with tolerance 10~\u00b0 to avoid early stopping due to potentially infeasible intermediate iterates. Figure 12 shows results for the two experimental scenarios under test. The results indicate that the performance of MSN and GP differs noticeably in the two experimental scenarios. While the results for the first scenario (Figure 12(a)) might suggest that GP converges faster than MSN for large inputs, it actually does so depending on the size of X relative to ||y||2. Indeed, the second scenario (Figure 12(b)) shows that although for small values of 4, GP runs faster than MSN, as A increases, GP\u2019s performance worsens dramatically, so much that for moderately large A, it is unable to find an acceptable solution even after 10,000 iterations (an upper limit imposed in our implementation). Conversely, MSN finds a solution satisfying the stopping criterion under every situation, thus showing a more robust behavior. These results suggest that it is preferable to employ a hybrid approach that combines the strengths of MSN and GP. Such a hybrid approach is guided using the following (empirically determined) rule of thumb: if A < ||y||2 use GP, otherwise use MSN. Further, as a safeguard, if GP is invoked but fails to find a solution within 50 iterations, the hybrid should switch to MSN. This combination guarantees rapid convergence in 29 TV1 increasing sizes TV1 increasing penalties \u2014Projected Newton (Weighted) 10\u00b0 \u2014Projected Newton (Weighted) ---Projected Newton (Uniform) - - -Projected Newton (Uniform) \u2014Taut String (Weighted) \u2014Taut String (Weighted) o (EZ -Taut String (Uniform) - --Taut String (Uniform) 10\u00b0 + a iE 10\u00b0 10 \u201cAves. ee 5 Fey ee -4 1 1 1 10\u00b0 10\u00b0 10\u00b0 \u00b0 10\u00b0 10\u00b0 10\u00b0 Problem size Penalty 7 (b) (a) Figure 11: Running times (in secs) for Projected Newton and Taut String solvers for weighted and uniform Tv} -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. TV2 increasing sizes -=-MSN -+-GP TV2 increasing penalties eee eee eee ==-MSN ~--GP ,/LTS MSN+GP Problem size (a) 1 Penalty 7 (b) Figure 12: Running times (in secs) for MSN, GP and a hybrid MSN+GP approach for TviP -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. practice. Results for this hybrid approach are also included in the plots in Figure 12, and show how it successfully mimics the behavior of the better algorithm amongst MSN and GP. 5.2.2 Running time results for TV-Lp Now we show results for Tv? proximity. Again, to our knowledge efficient solvers for this version of TV are not available; still proposals for solving the \u00a3,-ball projection problem do exist, such as the epp function in SLEP library [59], based on a zero finding approach. Consequently, we present here a comparison between this reference projection subroutine and our PN\u2014based projection when embedded in our proposed Gradient Projection solver of \u00a73.2. The alternative proposal given by the Frank\u2014Wolfe algorithm of 83.2.2 is also present in the comparison. We use a duality gap of 10~\u00b0 as stopping criterion both for GP and FW. Figure 13 shows results for the two experimental scenarios under test, for p values of 1.5, 1.9 and 3. 30 TVp increasing sizes p=1.5 TVp increasing sizes p=1.9 ---GP-PN ---GP-SLEP a TVp increasing sizes p=3 ---GP-PN ---GP-SLEP 10 40\" 10\u00b0 10\u00b0 10\u00b0 10\u00b0 10\u00b0 40\" 10\u00b0 10\u00b0 10\u00b0 10\u00b0 10\u00b0 Problem size Problem size Problem size (a) (b) (c) Figure 13: Running times (in secs) for GP with PN projection, GP with SLEP\u2019s epp projection, FW and a hybrid GP+FW algorithm, for Typ? -proximity with increasing input sizes and three different choices of p. Both axes are on a log-scale. TVp increasing penalties p=1.5 TVp increasing penalties p=1.9 TVp increasing penalties p=3 io\u00b0 . 10 10) ~ -=-GP-PN ot ~--GP-PN ~--GP-PN \u2018 ia ---GP-SLEP ---GP-SLEP if t Ww ~--FW if, L yor [GP HFM, are wesenoee senatapes7 V \u00a5 Qa & 10 = 10 s a 15 10 a io\u201d io\u201d io\u00b0 io* io\u201d io! io\" io\u00b0 io* io\u201d io! io\" io\u00b0 (b) (c) 4 TVp increasing penalties p=1.9 4 TVp increasing penalties p=3 10 10 ==-GP-PN ==-GP-PN ~~ -GP-SLEP ms ---GP-SLEP a ---FW 44 ---FW \u2018: jo? [GP sew io jo? [GP sew i (e) \u00ae Figure 14: Attained duality gaps (a-c) and running times (d-f, in secs) for GP with PN projection, GP with SLEP\u2019s epp projection, FW and a hybrid GP+FW algorithm, for Tv? -proximity with increasing penalties and three different choices of p. Both axes are on a log-scale. A number of interesting conclusions can be drawn from the results. First, our Projected Newton \u00a3,-ball subroutine is far more efficient than epp when in the context of the GP solver. Two factors seem to be the cause of this: in the first place our Projected Newton approach proves to be faster than the zero finding method used by epp. Secondly, in order for the GP solver to find a solution within the desired duality gap, the projection subroutine must provide very accurate results (about 10~!? in terms of duality gap). Given its Newton nature, our \u00a3,-ball subroutine scales better in term of running times as a factor of the desired accuracy, which explains he observed differences in performance. 31 It is also of relevance noting that Frank\u2014Wolfe is significantly faster than Projected Newton. This should discourage the use of Projected Newton, but we find it to be extremely useful in the range of penalties where A is large, but not enough to render the problem trivial (a = 0 solution). In this range the two variants of PN and also FW are unable to find a solution within the desired duality gap (10~\u00b0), getting stuck at suboptimal solutions. We solve this issue by means of a hybrid GP+FW algorithm, in which updates from both methods are interleaved at a ratio of 10 FW updates per | GP update, as FW updates are faster. As both algorithms guarantee improvement in each iteration but follow different procedures for doing so, they complement each other nicely, resulting a superior method attaining the objective duality gap and performing faster than GP. 5.2.3 Running time results for TV-Loo For completeness we also include results for our Tvl? solver based on GP +a standard \u00a3 -projection subroutine. Figure 15 presents running times for the two experimental scenarios under test. Since \u00a3;-projection is an easier problem than the general \u00a3,-projection the resultant algorithm converges faster to the solution than the general GP Tv? prox solver, as expected. TVeo increasing sizes TVeo increasing penalties 1 Problem size Penalty 4 (a) (b) Figure 15: Running times (in secs) for GP for Tv 2 -proximity with increasing a) input sizes, b) penalties. Both axes are on a log-scale. 5.2.4 Application: Proximal optimization for Fused-Lasso We now present a key application that benefits from our TV prox operators: Fused-Lasso (FL) [86], a model that takes the form min 4 || Ax \u2014 yll3 + Arljalla + AoT Vy? (a). (5.1) The \u00a3,-norm in (5.1) forces many x; to be zero, while Tv> favors nonzero components to appear in blocks of equal values 2,4 = 2; = 2441 = .... The FL model has been successfully applied in several bioinformatics applications [34, 72, 85], as it encodes prior knowledge about consecutive elements in microarrays becoming active at once. Following the ideas presented in Sec. 4, since the FL model uses two regularizers, we can use Proximal Dykstra as the combiner to handle the prox operator. To illustrate the benefits of this framework in terms of reusability, we apply it to several variants of FL. e Fused-Lasso (FL): Least-squares loss +2, + Tv> as in (5.1) e \u00a3,-Variable Fusion (VF): Least-squares loss +\u00a3, + Typ? . Though Variable Fusion was already studied by Land and Friedman [54], their approach proposed an f2-like regularizer in the sense that 32 Fused Lasso Variable Fusion LAr \u2014yl3 + Aalfella + ALTV!(z) sllAe\u2014yll2 + Aallzll, + AsTVZP(z) ra C_EISTA Logistic Fused Lasso Djog(#,e) + Arllella + TV) Log. Variable Fusion Lhog(t,e) + Aallz|l1 + AgTV}? (2) I Dosen, Figure 16: Fused-Lasso models addressed by proximal splitting. _ _ 1/p (aw) = 2\") [2.41 \u2014 2]? is used instead of the TV regularizer Tv? (2) = (oa lrig1 \u2014ailP) Using Tv, leads to a more conservative penalty that does not oversmooth the estimates. This FL variant seems to be new. Logistic-fused lasso (LFL): Logistic-loss +\u00a3, + Tv, where the loss takes the form \u00e9(a,c) = do, log (1 + eowlalnte)), and can be used in a FL formulation to obtain models more appropri- ate for classification on a dataset {(a;, y;)} [50]. e Logistic + \u00a3,-fusion (LVF): Logistic loss +, + Typ? . To solve these variants of FL, all that remains is to compute the gradients of the loss functions, but this task is trivial. Each of these four models can be then solved easily by invoking any proximal splitting method by appropriately plugging in gradient and prox operators. Incidentally, the SLEP library [60] includes an implementation of FISTA [13] carefully tuned for Fused Lasso, which we base our experiments on. Figure 16 shows a schematic of the algorithmic modules for solving each FL model. Remark: A further algorithmic improvement can be obtained by realizing that for r(a) = A4||a|/1 + det vy? (a) the prox operator prox, = prox Aue \u00a9 PFOXagTvi2(.)- Such a decomposition does not usually hold, but it can be shown to hold for this particular case [73, 86, 96]. Therefore, for FL and LFL we can compute the proximal operator for the combined regularizer r directly, thus removing the need for a combiner algorithm. This is also shown in Figure 16. 5.2.5 Fused-Lasso experiments: simulation The standard FL model has been well-studied in the literature, so a number of practical algorithms addressing it have already been proposed. The aforementioned Fused-Lasso algorithm in the SLEP library can be regarded as the state of the art, making extensive use of an efficient proximity subroutine (FLSA). Our experiments on Tv,> -proximity (85.1) have already shown superiority of our prox solvers over FLSA; what remains to be checked is whether this benefit has a significant impact on the overall FL solver. To do so, we compare running times with synthetic data. We generate random matrices A \u20ac R\u201d*\u2122 with iid. entries drawn from a zero mean, unit variance gaussian. We set the penalties to 43 = Az = 10. We select the vector of responses y using the formula y = sen(Aa,+v), where 2;, and v are random vectors whose entries have variances | and 0.01, respectively. 33 Relative distance to optimum Relative distance to optimum The numerical results are summarized in Figure 17, which compares out of the box SLEP (version 4.0) [59] against the very same algorithm employing our fast taut\u2014string Tv\\P solver instead of the default FLSA subroutine of SLEP. Comparison is done by showing the relative distance to the problem\u2019s optimum versus time. The optimal values in each setting were estimated by running both algorithms for a very large number of iterations. Fused Lasso matrix 50 x 5000000 Fused Lasso matrix 100 x 2000000 Fused Lasso matrix 200 x 1000000 10\u00b0) \u2018 4 E \u20ac 10 zZ zZ 192 Bio 8 8 107 * g g We yy 8 102 & * c \u00a9 107 . g g 10\u00b0 x a x a \u2018 \u2014\u00ae\u2014SLEP \u2018 \u00ab10 \u2014\u00ae\u2014SLEP 1 \u2014O\u00ae\u2014 SLEP 1 = aR - SLEP +Taut-String \u2018 =F - SLEP +Taut-String \u2018 = ay - SLEP+Taut-String \u2018 ; \u00a5 ; \u2014_* ; _ 10 10\u00b0 10\u00b0 10\u00b0 10\u00b0 10\u00b0 10\u00b0 10\u00b0 Time (s) Time (s) Time (s) Fused Lasso matrix 500 x 500000 Fused Lasso matrix 1000 x 200000 Fused Lasso matrix 2000 x 100000 \u20ac \u20ac zZ 2 a a \u00b0 \u00b0 8 8 VY VY e e 8 8g a 2 oO oO s g p 2 a Ss @ we 3 10\u00b0} \u2014e\u2014sLep =F = SLEP +Taut-String 10\u201c = 3% = SLEP+Taut-String = ay = SLEP +Taut-String 10\u00b0 10\u00b0 1 10\u00b0 10 10\" 10\u00b0 lo 10\" Time (s) Time (s) Time (s) Figure 17: Relative distance to optimum vs time of the Fused Lasso optimizers under comparison, for the different layouts of synthetic matrices. The plots show a clear trend: when the input matrices feature a very large column dimension the use of our taut-string Tv\\P solver turns into speedups in optimization times, which however become negligible for matrices with a more balanced rows/columns ratio. This result is reasonable, as the vector x under optimization has size equal to the number of columns of the data matrix A. If A has a large number of columns the cost of solving Tv,> is significant, and thus any improvement in this step has a noticeable impact on the overall algorithm. Conversely, when the number of rows in A is large the cost of computing the gradient of the loss function (V $|| Aa \u2014 y||3 = AT (Aa \u2014 y)) dominates, getting limited benefits from such improvements in prox computations. Therefore, it is for data with a very large number of features where our proposed method can provide a useful speedup. 5.2.6 Fused-Lasso Experiments: Microarray classification Now we report results of applying the four FL models on a series of problems from bioinformatics. We test the FL models on binary classification tasks for the following real microarray datasets: ArrayCGH [83], Leukemias [37], Colon [88], Ovarian [75] and Rat [40]. Each dataset was split into three equal parts (ensuring similar proportion of classes in every split) for training, validation and test. The penalty parameters were found by exhaustive grid search in the range \\1, \\2 \u20ac [10~*, 10\u00b0] to maximize classification accuracy on the validation splits. 34 Table 3: Classification accuracies for the presented Fused\u2014Lasso models on microarray data. For the Variable Fusion models an \u00a32 version of TV was employed. Dataset FL VF-\u00a3 LFL ~~ LVF-\u00a32 ArrayCGH 73.6% 73.6% 84.2% 73.6% Leukemias 92.0% 88.0% 92.0% 88.0% Colon 77.2% 77.2% 77.2% T7.2% Ovarian 88.8% 83.3% 83.3% 83.3% Rat 68.8% 65.5% 721% 72.1% Table 3 shows test accuracies. In general, as expected the logistic-loss based FL models yield better classification accuracies than those based on least-squares, as such loss function tends to be more appropriate for classification problems. However the Ovarian dataset proves to be an exception, showing better performance under a squared loss. Regarding the TV-regularizer, the classic TviP -penalty seems to perform better in general, with the Tvs? -penalty showing competitive results in some settings. 5.3. 2D-TV: Experiments and Applications We address now several practical applications that benefit from two-dimensional TV regularization; our results show again how the presented Tv prox operators fits in seamlessly into our modular framework to produce efficient proximal splitting solvers. 5.3.1 Image denoising through anisotropic filtering Our first example is related to the classic problem of image denoising, but with the twist that we deal with noise of an anisotropic character. More specifically, suppose that the true image pz \u20ac IR\u201d\u00ae*\u201d\u201d is contaminated by additive noise N, so that only ug = + N is observed. The denoising problem estimates py given just the noisy version jig. This problem is highly ill-posed and as such not approachable unless additional assumptions on the noise (or on the underlying image) are made. Isotropic and anisotropic models: an extremely common choice is to simply assume the noise to be gaussian, or some other zero-mean distribution. Under these conditions, a classic method to perform such denoising task is the Rudin-Osher-Fatemi (ROF) model [76], which finds an approximation X to the original image by solving min |X \u2014 pole + AY] | xasle, (5.2) i=2 j=2 where 0x, ; is the discrete gradient That is, it is the vector of differences of X;; and its neighbors along both axes. The objective of the first term in the ROF model is to penalize any deviation of X from the observed image 19, While the second term can be readily recognized as a mixed (2, 1)-norm over the discrete gradient of X. This regularizer models caters to some prior knowledge: in natural images sharp discontinuities in intensity between neighboring points only appear in borders of objects, while the rest of the pixels usually show smooth variations in intensity. It makes sense, therefore, to penalize large values of the gradient, as sharp changes have a higher probability of having being produced by noise. Conversely, as the mean of the noise is zero, it is also sensible to maintain the denoised image X close to the observed jig. Merging these two goals produces the ROF model (5.2). 35 A closer look at the ROF regularizer reveals that it follows the spirit of the reviewed 2D-TV regularizer which also penalizes sharp variations between neighboring pixels. Indeed, all such regularizers are broadly categorized as TV regularizers within the image processing community. It is clear, though, that the ROF regularizer (5.2) does not coincide with the Tv, regularizer used in this paper. Some authors [16] differentiate between these regularizers by naming the ROF approach as isotropic TV and the Ty, style approach as anisotropic TV. This naming comes from the fact that isotropic TV penalizes each component of the discrete gradient Ox,,; following an 2 norm, whereas the anisotropic Tv,,-horm and in particular Tv -norm, penalize rows and columns independently. While image filtering using isotropic TV is generally preferred for natural images denoising [17], in some settings anisotropic filtering can produce better results, and in fact has been favored by some authors in the past [25, 55]. This is specially true on those images that present a \u201cblocky\u201d structure, and thus are better suited to the structure modeled by the Typ -norm. Therefore, efficient methods to perform anisotropic filtering are also important. Anisotropic denoising experiments: denoising using the anisotropic Tv, norm reduces to solving min ||X \u2014 poll + ATV, q(X). (5.3) But (5.3) is nothing but the Tv;0,-proximity problem, and hence can be directly solved by applying the 2D-TV prox operators described above. We solve (5.3) below for the choice p = g = 1 (which is common in practice), for the following selection of algorithms: e Proximal Dykstra (\u00a7 4.1.1) e The Douglas-Rachford variant based on alternating projections (\u00a7 4.1.2) e The Split Bregman method of Goldstein T. [36], which follows an ADMM-like approach to split the \u00a3, norm apart from the discrete gradient operator, thus not requiring the use of a 1D-TV prox operator. e Chambolle-Pock\u2019s method applied to 2D TV (8 4.1.4). e Condat\u2019s general splitting method (8 4.1.4). e Kolmogorov et al primal-dual method (8 4.1.4). e Yang\u2019s method (ADMM) (\u00a7 4.1.3) e The maximum flow approach by Goldfarb and Yin [35], which shows the relationship between the 2D-TV proximity minimization and the maximum flow problem over a grid, and thus applies an efficient maximum flow method to solve a discrete-valued version of 2D-TV. In Proximal Dykstra, Douglas-Rachford and ADMM we use the linearized taut\u2014string strategy presented before as solver for the base proximity operators. All algorithm parameters were set as recommended in their corresponding papers or public implementations, except for Proximal Dykstra and Douglas-Rachford, which are parameter free. For Chambolle-Pock we tried both the scheme with fixed algorithm parameters [22, Algorithm 1] and the scheme with acceleration [22, Algorithm 2]; however the accelerated version did not converge to the desired solution within enough accuracy (relative difference of 10~\u00b0), therefore only the results for the fixed version are reported. For Kolmogorov we follow the recommendations in Chambolle and Pock [23], taking into account the Lipschitz constants of the optimized functions and selecting the parameter updating strategy that produced faster performance in the experiments: 0\u00b0t! \u2014 yo it t girl,t gittl~ _\u00ab_ go yj 7O\u20141 o = 1. ) gttl> ) 2) The images used in the experiments are displayed in Appendix F as Figure 25. To test the filters under a variety of scenarios, different kinds of noise were introduced for each image. Table 4 gives details on this, while the noisy images are shown in Figure 26. All QR barcode images used the same kind and parameters of noise. Noise was introduced using Matlab\u2019s imnoise function. 36 Table 4: Types of noise and parameters for each test image. A @ indicates that such noise was not applied for the image. Gaussian and Speckle correspond to gaussian additive and multiplicative (respectively) noises with zero mean and the indicated variance. Salt & Pepper noise turns into black or white the indicated fraction of image pixels. Poisson regenerates each pixel by drawing a random value from a Poisson distribution with mean equal to the original pixel value, thus producing a more realistic noise. Image Gaussian Speckle Poisson Salt & Pepper randomQR 0.2 0.3 @ @ shape 0.05 @ @ @ trollface @ 1 @ @ diagram @ @ v @ text @ @ @ 0.1 comic 0.05 @ v @ contour @ @ v 0.4 phantom @ 2 v @ Values for the regularization parameter \\ were found by maximizing the quality of the reconstruction, measured using Improved Signal-to-Noise Ratio (SNR) [1]. ISNR is defined as Ivo \u2014 Xl ISNR(X, 1, Ho) 10 logy |X \u2014 pll2 , where yp is the original image, jig its noisy variant, and X the reconstruction. To compare the algorithms we run all of them for each image and measured its ISNR and relative distance to the optimal objective value of the current solution at each iteration through their execution. The only exception to this procedure is the method of Goldfarb and Yin, which is non-iterative and thus always returns an exact solution, and so we just measure the time required to finish. The optimal objective value was estimated by running all methods for a very large number of iterations and taking the minimum value of them all. This produced the plots shown in Figures 18\u201419. From them the following observations are of relevance: e Condat\u2019s method and Chambolle-Pock\u2019s method are reduced to essentially the same algorithm when applied to the particular case of anisotropic 2D TV denoising. Furthermore, they seem to perform slowly when compared to other methods. e ADMM (Yang\u2019s method) exhibits slow performance at the beginning, but when run for sufficient time is able to achieve a good approximation to the optimum. e The Split Bregman method, in spite of being an ADMM-like method much like Condat\u2019s or Chambolle- Pock, performs significantly better than those. We attribute this to the very efficient implementation provided by its authors, and to the fact that a fast approximate method is employed to compute the required matrix inversions throughout the method. e The method by Goldfarb and Yin is slower than other approaches and seems to provide suboptimal solutions. We attribute this to the fact that this method solves a discrete (integer-rounded) approximation to the problem. We acknowledge that other methods exploiting the Total Variation - Minimum-cut relationship have been proposed with varying speed results, e.g. [33], however the suboptimality issues still apply. e The method by Kolmogorov et al, when properly accelerated by a suitable choice of adaptive stepsizes, seems to be the best choice for finding very accurate solutions, though it is very closely followed by ADMM. e The parameter free methods PD and DR are the fastest to achieve a mid-quality solution, with Douglas- Rachford performing better than Proximal Dykstra. 37 Relative distance to optimum Relative distance to optimum Relative distance to optimum Relative distance to optimum Denoising algorithms: randomQR-0 10\u00b0 ww Split-Bregman \u00bb Condat \u00bb Chambolle-Pock se Yang * Goldfarb-Yin ~~&> Kalmagorav \u2014*-PD \u2014*DR 10% Time (s) 10% Denoising algorithms: randomQR-3 ee 10\u00b0 from ~~ Split-Bregman \u00bb Condat \u00bb Chambolle-Pock soe Yang * Goldfarb-Yin ov\u2019 Kalmagorav \u2014sPD \u2014*DR 10\" 10\u00b0 Time (s) 10? Denoising algorithms: trollface Dota wget 10\u00b0 ~~ Split-Bregman \u00bb Condat \u00bb Chambolle-Pock ~ Yang *\u00ae Goldfarb-Yin ~~\u00e9~ Kalmagorav \u2014ePD \u2014*DR 10\" 10\u00b0 Time (s) 10? Denoising algorithms: comic ee ~~ Split-Bregman \u00bb Condat \u00bb Chambolle-Pock somes Yang * Goldfarb-Yin ~~@~ Kalmagorav \u2014*-PD \u2014=DR Relative distance to optimum Relative distance to optimum Relative distance to optimum Relative distance to optimum 10\u00b0 10\u00b0 5... Denoising algorithms: randomQR-1 SRO Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014*-PD \u2014*DR 107 10% Time (s) 10% Denoising algorithms: randomQR-4 ener Teena oe Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014*DR 107 10\u00b0 Time (s) 10? Denoising algorithms: diagram 10\u00b0 Fonte, ~~ Split-Bregman Condat Chambolle-Pock Yang *\u00ae Goldfarb-Yin ~~\u00e9~ Kalmagorav \u2014ePD \u2014*DR 0\u00b0 107 Time (s) 10? Denoising algorithms: contour encanta ag Owe, Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014*-PD \u2014DR 4 10\u00b0 Time (s) 107 Relative distance to optimum Relative distance to optimum Relative distance to optimum Relative distance to optimum Denoising algorithms: randomQR-2 a RO Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014*-PD \u2014wDR 0\u00b0 107 Time (s) 10% Denoising algorithms: shape Brett neon: tn. Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014wDR 10? 107 Time (s) 10\u00b0 Denoising algorithms: text ~~ Split-Bregman Condat Chambolle-Pock Yang *\u00ae Goldfarb-Yin ~~\u00e9~ Kalmagorav \u2014ePD \u2014*DR 10\" 10\u00b0 10' Time (s) Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin Kalmagorav \u2014e-PD \u2014=DR 10\u00b0 10\" Time (s) 107 Figure 18: Relative distance to optimum vs time of the denoising 2D-TV algorithms under comparison, for the different images considered in the experiments. Considering these facts, the method of choice among the ones considered depends on the desired accuracy. We argue, however, that for the purpose of image processing a mid-quality solution is sufficient. The ISNR plots of Figure 19 certainly seem to support this, as the perceived quality of the reconstruction, roughly approximated by the ISNR, saturates rapidly and no significant improvements are obtained through further optimization. Given this, the proposed methods seem to be the best suited for the considered task. 38 Denoising algorithms: randomQR-0 ont\u00bb Split-Bregman ondat hambolle-Pock soo\u00bb Yang * Goldfarb-Yin ~& Kalmagorav \u2014*PD \u2014*DR 10% 10% 107 Time (s) Denoising algorithms: randomQR-3 6 5 4 oc a 3 ~~ Split-Bregman 2 2 *\u00ae =Goldfarb-Yin 1 of\u00bb Kolmogorov PD DR 0 10? 10\" 10\u00b0 Time (s) Denoising algorithms: trollface 8 * 7 6 5 oc Za : Qn ow\u00bb Split-Bregman ondat 3 hambolle-Pock \u2018ang 2 * Goldfarb-Yin ~o& Kalmagorav 1 PD \u2014*DR 0 10? 10\" 10\u00b0 Time (s) Denoising algorithms: comic 7 6 5 o4 2 a ~~~ Split-Bregman 3 ondat hambolle-Pock 2 soos Yang *\u00ae Goldfarb-Yin ~o& Kalmagorav 1 \u2014sPD \u2014*DR 0 107 107 10\u00b0 Time (s) Denoising algorithms: randomQR-1 3.5 3 25 \u00a32 a _ ow\u00bb Split-Bregman _ \u00bb Condat 15 ~-+\u00bb Chambolle-Pock sos Yang 1 * Goldfarb-Yin ~& Kalmagorav 05 PD \u2014*-DR 0 10% 10% 107 Time (s) Denoising algorithms: randomQR-4 4 3.5 3 25 oc a 2 \u00bb\u00bb Split-Bregman - \u00bb Condat 1.5 \u00bb Chambolle-Pack ve\u00bb Yang 1 * =Goldfarb-Yin ~&\u00bb Kalmagorav 0.5 \u2014s\u2014PD DR 0 10? 10\" 10\u00b0 Time (s) Denoising algorithms: diagram 6 4 2 oc Zo : Qn ow\u00bb Split-Bregman ~ Condat 2 \u00bb Chambolle-Pack oe\u00bb Yang -4 * Goldfarb-Yin ~o& Kalmagorav PD 6 DR 10? 107 Time (s) Denoising algorithms: contour ISNR ~~ Split-Bregman ~ Condat \u00bb Chambolle-Pock \u00bb\u00bb Yang Golefarb-Yin \u00bb- Kalmagorav \u2014*PD \u2014*DR 107 10\u00b0 10\" Time (s) Denoising algorithms: randomQR-2 Split-Bregman Condat Chambolle-Pock se\u00bb Yang * Goldfarb-Yin ~~\u00bb Kalmagorev \u2014*PD \u2014*DR 10% 107 10\u00b0 Time (s) Denoising algorithms: shape 6 5 4 oc 2 a3 Split-Bregman Condat Chambolle-Pock 2 woes Yang *\u00ae =Goldfarb-Yin 1 ~o\u00e9\u00bb Kalmagorav PD \u2014*DR 0 10% 10? 107 Time (s) Denoising algorithms: text Split-Bregman Condat Chambolle-Pock Yang Golefarb-Yin ~~\u00bb Kalmagorav \u2014ePD \u2014*-DR 10\" 10\u00b0 10' Time (s) Denoising algorithms: phantom ISNR wo Split-Bregman Condat Chambolle-Pock oe\u00bb Yang *\u00ae Goldfarb-Yin ~&\u00bb Kalmagorev \u2014-PD \u2014*DR 0 107 10\u00b0 10\" Time (s) Figure 19: Increased Signal to Noise Ratio (SNR) vs time of the denoising 2D-TV algorithms under comparison, for the different images considered in the experiments. For quick reference, Table 5 presents a summary of key points of the compared methods, along with some recommendations about when to put them to use. 5.3.2. Parallelization experiments In addition to the previous experiments and to illustrate the parallelization potential of the presented anisotropic filtering method, Figure 20 plots running times for the PD algorithm as the number of processor core ranges 39 Table 5: Summary of key points of the compared Tv7_; proximity (denoising) methods. Method Key points Douglas Rachford ++ Fast convergence to medium-quality Embarrassingly parallel Slow for higher accuracies Ideal for standard denoising tasks Proximal Dykstra | + | J 1 Attainable accuracies similar to DR But slower than DR Use DR instead Split Bregman + 1 Eventually performs similarly to DR Slow convergence at first iterations Use DR instead Chambolle\u2014Pock 1 Slow Use other method instead Condat + Solves objectives involving a sum of smooth/non\u2014smooth functions with linear operators Reduces to Chambolle\u2014Pock when solving basic image denoising Use only when dealing with more complex functionals ADMM (Yang) i+ | i More accurate Slightly slower than Kolmogorov Bad behavior for mid-quality solutions Use Kolmogorov instead Kolmogorov i+ | i 1 More accurate Slower than DR for low accuracies Useful when extremely accurate solutions are required Goldfarb- Yin + 1 Solves the discrete version of the problem Slow Poor accuracy for the continuous version Apply only when solving the discrete problem from 1 through 16. We see that for the smaller images, the gains due to more processors essentially flatten out by 8 cores, where synchronization and memory contention offsets potential computational gains (first row). For the larger images, there is steadier speedup as the number of cores increase (in each plot there seems to be a \u201cbump\u201d at 14 processors; we attribute this to a quirk of the multicore machine that we used). From all the plots, however, the message is clear: our TV prox operators exploit parallelization well, and show substantial speedups as more processor cores become available. We should also note in passing that the Split Bregman method, which in the previous experiments showed a reasonable performance, turns out to be much harder to parallelize. This fact was already observed by [92] in the context of isotropic TV. Therefore when several processor cores are available the proposed modular strategy seems to be even more suitable to the task. 40 TV-L1 times for image: shape TV-LI times for image: trollface TV-L1 times for image: diagram TV-L1 times for image: text 16 30 14 250 700 12 25 600 a __ 200 e _ E10 E E E500 > = @ 20 = o o \u00a3 \u2014 150 \u00a3 \u00a3 400 Fs e = 15 300 6 100 200 10 4 50 100 2 4 6 8 10 12 14 \u00ab16 2 4 6 8 10 12 #14 \u00ab16 2 4 6 8 10 12 14 \u00ab16 2 4 6 8 10 \u00ab12 \u00ab14 # processor cores # processor cores # processor cores # processor cores TV-L1 times for image: comic TV-L1 times for image: contour TV-L1 times for image: phantom jo? TV-L1 times for image: gausi 250 2500 4500 25 200 4000 2000 =_ -_ -~ 3500 ef a \u00a3150 \u2014 \u2014\u00a3 & 2 @ @ 1900 @ 3000 \u00ae E E E E e - -F 2500 15 100 1000 2000 50 500 1500 1 2 6 8 10 12 14 16 2 4 6 8 10 12 14 \u00ab16 2 4 6 8 10 12 14 \u00ab16 2 4 6 8 10 12 14 16 # processor cores # processor cores # processor cores # processor cores Figure 20: Multicore speedups on different images (see also Table 6) 5.3.3 Anisotropic image deconvolution Taking a step forward we now confront the problem of image deconvolution (or image deblurring). This setting is more complex since the task of image recovery is made harder by the presence of a convolution kernel K that distorts the image as bo = Kx b+ N \u2019 where IN is noise as before and * denotes convolution. To recover the original image py from the observed jug, it is common to solve the following deconvolution problem min 4 ||F * X \u2014 pllp + Ar(X). (5.4) As before, the regularizer r(X ) can be isotropic or anisotropic TV, among others. Here we focus again on the anisotropic TV case to show how the presented solvers can also be used for this image task. Problem (5.4) also fits the proximal splitting framework, and so we employ the popular FISTA [13] method for image processing. The gradient of the loss can be dealt efficiently by exploiting K being a convolution operator, which through the well-known convolution theorem is equivalent to a dot product in the frequencies space, and so the computation is done by means of fast Fourier transforms and products. Several other solvers that explicitly deal with convolution operators are also available [1, 16]. A notable solver specific for the isotropic case is given by the work of Krishnan and Fergus [52], that handles even nonconvex isotropic TV-norms (0 < p < 1). But this approach does not extend to the anisotropic case, so we focus on general proximal splitting. We use the same test images as for our denoising experiments (Figure 25), with identical noise patterns (Table 4) for the QR images, and gaussian noise with variance 0.05 for the rest. In addition, we convolve each image with a different type of kernel to assess the behavior for a variety of convolutions; Table 6 shows the kernels applied. We constructed these kernels using Matlab\u2019s fspecial function; the convolved images are shown in Figure 28. The values for the regularizer \\ were determined by maximizing the reconstruction quality measured in ISNR. Since deconvolution is much more expensive than denoising, instead of performing an exhaustive search for the best A, we used a Focused Grid Search strategy [7, 9] to find the best performing values. 41 Image Convolution Parameters randomQR Motion Length 5, Angle 35\u00b0 shape Average Size 3 x 3 trollface Disk Radius 5 diagram Motion Length 5, Angle 0\u00b0 text Average Size 1 x 10 comic Gaussian Size 15, Deviation 2 contour Disk Radius 5 phantom Motion Length 100, Angle 240\u00b0 Table 6: Convolution kernels used for each test image. Average substitutes each pixel with the average of its surrounding n X m neighbors. Disk performs the same operation within a disk-shaped neighborhood of the shown radius. Gaussian uses a7 X 7 neighborhood and assigns different weights to each neighbor following the value of a gaussian distribution of the indicated deviation centered at the current pixel. Motion emulates the distortions produced when taking a picture in motion, defining a neighborhood following a vector of the indicated length and angle. Any denoising subroutine can be plugged into the aforementioned deconvolution methods, however for comparison purposes we run our experiments with the best proposed method, Douglas Rachford (Alternating Reflections), and the best competing method among those reviewed from the literature, Kolmogorov et al. A key parameter in deconvolution performance is for how long should these methods be run at each FISTA iteration. To select this, we first run FISTA with 100 iterations of Douglas Rachford per step, for a large number of FISTA steps, and take the final objective value as an estimate of the optimum. Then we find the minimum number of Douglas Rachford and Kolmogorov iterations for which FISTA can achieve a relative distance to such optimum below 10~\u00b0. The reason for doing this is that for larger distances the attained ISNR values are still far from convergence. This turned to be 5 iterations for Douglas Rachford an 10 for Kolmogorov. We then run FISTA for such configurations of the inner solvers, and others with a larger number of inner iterations, for comparison purposes. Figures 21-22 show the evolution of objective values and ISNR for all the tested configurations. In general, Douglas Rachford seems to be slightly better at finding more accurate solutions, and also faster at converging to the final ISNR value. We explain this by the fact that the major advantage of Douglas Rachford is its aforementioned ability to find medium\u2014quality solutions in a very small number of iterations: this is why with a small number of inner DR iterates we can converge to good ISRN levels. For reference we also provide the resultant deconvoluted images as Figure 29. 5.3.4 2D Fused-Lasso Signal Approximator The Fused\u2014Lasso Signal Approximator (FLSA) [34] can be regarded as a particular case of Fused-Lasso where the input matrix A is the identity matrix J, 1.e., ming \u2014 \u00a7l|e \u2014 yll3 + Arial, + AvT vy? (@). This problem can be solved immediately using the methods presented in \u00a75.2.4. A slightly less trivial problem is the one posed by the 2D variant of FLSA: minx 3||X \u2014 \u00a5 |p + Ailivec(X)|\\1 + AT v7 (X). (5.5) Friedman et al. [34] used this model for denoising images where a large number of pixels are known to be completely black (intensity 0), which aligns well with the structure imposed by the @ regularizer. Akin to the 1D-case, 2D-FLSA (5.5) can also be solved by decomposing its computation into two prox operators [34]; formally, PFO, | itaste,()(\u00a5) = Prox, i, (PPOXagrv@,(-y(\u00a5)): 42 Deconvolution algorithms: randomQR-0 oot Kalmagorov(1 ~ Kalmagerav(2t ~ Kalmagerav(3t ~~~ Kalmagorav(5t \u2014*\u2014DR(5) \u2014r\u2014 DR(10) \u2014\u00bb\u2014DR(20) \u2014r- DR(50! Relative distance to optimum 8339 107 10\u00b0 Time (s) Deconvolution algorithms: randomQR-3 ~ Kalmagorovt ~~~ Kalmagorevi \u2014r\u2014DR(5) Relative distance to optimum Time (s) Deconvolution algorithms: trollface oe ~~~ Kalmagorov(1 ~ Kalmagerav(2t \u00bb Kalmagerav(3t ~-e~ Kalmagorayv(5t \u2014r\u2014 DR(5) Relative distance to optimum 2839 10\u00b0 10' Time (s) Deconvolution algorithms: comic ~~~ Kalmagorav(10) ~ Kalmagorav(20) ~ Kalmagorav(30) oo: Kolmogorov(50) \u2014*\u2014DR(5) \u2014*\u2014DR(10) 10 \u00ae + \u2014--DR(20) \u2014\u00bb\u2014DR(S0) Relative distance to optimum 3S b Deconvolution algorithms: randomQR-1 oot Kalmagorov(1 Kalmagerav(2t Kalmagerav(3t ~~~ Kalmagorav(5t \u2014*\u2014DR(5) \u2014r\u2014 DR(10) \u2014\u00bb\u2014DR(20) \u2014r- DR(50! 0 0) 0) 0) Relative distance to optimum 107 10\u00b0 10\" Time (s) Deconvolution algorithms: randomQR-4 ~~~ Kolmogorov Kalmagorov{ Relative distance to optimum Time (s) Deconvolution algorithms: diagram ~~~ Kalmagorov(1 Kalmagerav(2t Kalmagerav(3t Kalmagerav(5t \u2014r\u2014 DR(5) Relative distance to optimum $885 10\u00b0 10' Time (s) Deconvolution algorithms: contour ~~~ Kalmagorav(10) Kalmagerav{20) Kalmagerav{30) oo: Kolmogorov(50) \u2014*\u2014DR(5) \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014-~DR(S0) Relative distance to optimum Ss b Deconvolution algorithms: randomQR-2 eo no ote: Kolmogorav(10) Kalmagerav{20) Kalmagerav{30) (50) Relative distance to optimum 10% ~~~ Kalmagorevi \u2014=-DR(5) \u2014*\u2014DR(10} \u2014\u00bb\u2014DR(20} \u2014s-DR(50} 107 10\u00b0 10\" Time (s) Deconvolution algorithms: shape Relative distance to optimum Time (s) Deconvolution algorithms: text SS ~~~ Kolmogorov ( ( Kolmogorov(: ~~\u00bb Kalmagorov(! \u2014r\u2014 DR(5) Relative distance to optimum 10\u00b0 10' 10? Time (s) Deconvolution algorithms: phantom ~~~ Kalmagorav(10 Kalmagorav(20) Kalmagarav(30) ow\u00bb Kalmagorav(50 \u2014*\u2014DR(5) \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014-~DR(S0) Relative distance to optimum 10\" 107 105 Time (s) Figure 21: Relative distance to optimum vs time of the deconvolution 2D-TV algorithms under comparison, for the different images considered in the experiments. Thus, to solve (5.5) we merely invoke one of the presented Tv) prox operators and then apply soft- thresholding to the results. Since soft-thresholding is done in closed form, the performance of a 2D-FLSA solver depends only on its ability to compute Tv), -proximity efficiently. We can then safely claim that the results summarized in table 5 apply equivalently to 2D-FLSA, and so the proposed Douglas Rachford method performs best when reconstruction ISNR is the primary concern. 43 Deconvolution algorithms: randomQR-0 oom Kalmagorov(1 olmagorav(2' almagorav(3t ~-e\u00bb Kalmagoarev(5t \u2014\u00bb\u2014DR(5) \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014*\u2014DR(S0) 0 0) 0) 0) 107 10\u00b0 Time (s) Deconvolution algorithms: randomQR-3 28 2.6 24 cc H22 2 ~~ Kolmogorov \u2014vr\u2014DR(5) \u2014=-DR(10) 18 \u2014\u00bb-DR(20) \u2014*-DR(50) 10\u00b0 10' Time (s) Deconvolution algorithms: trollface 5 ae 45 4 cc 5 3.5 GB (10) 3 (20) (30) 25 ~os Kolmogarov(50) \u00b0 \u2014*-DR(5} \u2014\u00bb\u2014DR(10) 2 \u2014\u00bb-DR(20) \u2014=\u2014DR(50) 10\u00b0 10' Time (s) Deconvolution algorithms: comic 2.5 ISNR ow\u00bb Kolmogorov (10) (20) almagorav(30) sows Kolmagorov(50) \u2014*\u2014DR(5) \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014\u00bb\u2014DR(S0) Deconvolution algorithms: randomQR-1 2.5 ISNR ro oom Kalmagorov(1 ~-\u00ae\u00bb Kalmagarav(2t ~~\u00bb Kalmagorav(3t ~-e\u00bb Kalmagoarev(5t \u2014\u00bb\u2014DR(5) \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014*\u2014DR(S0) 0 0) 0) 0) 107 10\u00b0 10\" Time (s) Deconvolution algorithms: randomQR-4 2.6 24 2.2 a a ~~ Kolmagorov(10) = 2 \u00bb Kolmagorov(20} ~\u00ae\u00bb Kalmagoarav(30) ~om\u00bb Kolmogarov(50) 18 \u2014*-DR(5) \u2014\u00bb-DR(10) 16 \u2014*-DR(20) : \u2014*\u2014DR(S0) 10\u00b0 10' Time (s) Deconvolution algorithms: diagram 2 H22 ~~~ Kolmagorow(10) ~\u00bb Kalmagorav(20) 2 om\u00bb Kalmagarav(30) ~~ Kolmagorov(50) \u2014*-DR(5} 1.8 \u2014r\u2014DR(10) \u2014\u00bb\u2014DR(20) \u2014\u00bb\u2014DR(S0) 1.6 10\u00b0 10! Time (s) Deconvolution algorithms: contour ~~ Kolmagorav(10) ~-\u00ae\u00bb Kalmagoarav(20) ~ Kalmagorav(30) (50) 4 ow\u00bb Kolmogorov \u2014*-DR(5) \u2014*\u2014DR(10) 3 \u2014\u00bb-DR(20) \u2014\u00bb\u2014DR(S0) 10! 10\u00b0 Deconvolution algorithms: randomQR-2 2.8 2.6 oc He22 te\u00bb Kolmogorov(10) _ Kolmogorov(20) Kolmogorov(30) 2 ~-%\u00bb Kalmogorov(50) \u2014r\u2014 DR(5) \u2014r\u2014DR(10) 18 \u2014\u00bb-DR(20) i \u2014r\u2014DR(50) 107 10\u00b0 10! Time (s) Deconvolution algorithms: shape Kalmagorov{ Kalmagorov{ Kalmagorov{ ~e\u00bb Kalmagorevi \u2014vr\u2014DR(5) \u2014\u00bb\u2014DR(10) \u2014*\u2014DR(20) \u2014*\u2014DR(50) 10\" 10\u00b0 Time (s) Deconvolution algorithms: text 2.4 ~~~ Kalmogorav(10) Kalmagorav{20) Kalmagorav(30) ~~# Kalmogorov(50) \u2014r- DR(5) \u2014\u00bb\u2014DR(10) \u2014\u00bb\u2014DR(20) 1.6 , \u2014*\u2014DR(50) 10\u00b0 10' 10? Time (s) Deconvolution algorithms: phantom ow\u00bb Kolmogorov (10) 3 Kalmagorav{20) Kolmogorov(30) 25 ow\u00bb Kalmogorov(50) \u2014*\u2014DR(5) 2 \u2014*\u2014DR(10) \u2014\u00bb\u2014DR(20) 15 \u2014\u00bb\u2014DR(50) 107 10? 10\u00b0 Time (s) Figure 22: Increased Signal to Noise Ratio (ISNR) vs time of the deconvolution 2D-TV algorithms under comparison, for the different images considered in the experiments. 5.4 Application of higher-dimensional TV We now apply the presented multidimensional TV regularizer to anisotropic filtering for video denoising. The extension to videos from images is natural. Say a video contains f frames of size n x m pixels; this video can be viewed as a 3D-tensor X \u20ac R\u201d*\u201d\u2122*, on which a 3D-TV based filter can be effected by minx P1,P2,P3 44 3IX \u2014 Valle + AT Vp? po.p9(%)s (5.6) Relative distance to optimum BR \u00b0 be \u00b0 & BR \u00b0 d Sequence Frame resolution Number of frames Total number of pixels salesman 288 x 352 50 5 million coastguard 176 x 144 300 7.6 million bicycle 720 x 576 30 12.4 million Table 7: Size details of video sequences used in the video denoising experiments. where Ug is the observed noisy video, and Typ. p2.p3 = Tv, with p = [p1,p2,p3|. Application of the filter (5.6) is nothing but computation of the prox operator, which can be done using the Parallel-Proximal Dykstra (PPD) algorithm presented in Sec. 4. We apply this idea to the video sequences detailed in Table 7. All of the sequences are made of grayscale pixels. Figure 30 in the Appendix shows some of the frames of the salesman sequence. We noise every frame of these sequences by applying gaussian noise with zero mean and variance 0.01, using Matlab\u2019s imnoise function. Then we solve problem 5.6 for each sequence, adjusting the regularization value so as to maximize ISNR of the reconstructed signal. We test the following algorithms, which have been previously applied in the literature for solving 3D-TV, with the only exception Parallel Proximal Dykstra: e Parallel Proximal Dykstra (\u00a7 4.1.1). e Yang\u2019s method, which is based on ADMM (8 4.1.1) e The maximum flow approach by Goldfarb and Yin [35], which features an implementation for 3D grids, thus solving a discrete-valued version of 3D-TV. For both PPD and ADMM we again make use of linearized taut-string 1D TV solver. We must also point out that other image denoising methods seem amenable for extension into the multidimensional setting, such as Condat\u2019s and Chambolle-Pock methods. However in the light of our image denoising results we do not deem them as good choices for this problem. A more reasonable choice might be to extend Split-Bregman to multiple dimensions, but such an extension has not been implemented or proposed as far as we know. We would also like to note that we have considered extending the Douglas Rachford method to a multidimensional setting, however such task is complex and thus we decided to focus on Parallel Proximal Dykstra. Denoising algorithms: salesman Denoising algorithms: coastguard Denoising algorithms: bicycle Deena PO - BR \u00b0 be \u00b0 & Relative distance to optimum Relative distance to optimum oon Yang a oon Yang a 10\u00b0; oa Yang a ke Goldfarb-\u00a5in a 10\u00b0} 4% Goldfarb-\u00a5in 5 %e Goldfarb-\u00a5in 5 \u2014e\u2014PPD 5 \u2014e\u2014PPD h \u2014e\u2014PPD 4 4 10 10\u00b0 wo 10\u00b0 10\u00b0 ; 10\u00b0 Time (s) Time (s) Time (s) Figure 23: Relative distance to optimum vs time of the denoising 3D-TV algorithms under comparison, for the different video sequences considered in the experiments. Similarly to our previous image denoising experiments, we ran the algorithms under comparison for each video sequence and measured its ISNR and relative distance to the optimal objective value of the current solution at each iteration through their execution. Again the exception is the Goldfarb-Yin method, which is 45 Denoising algorithms: salesman Denoising algorithms: coastguard Denoising algorithms: bicycle o vom Yang 1 a vom Yang - vom Yang oe %& Goldfarb-Yin oe %& = Goldfarb-\u00a5in oe %& = Goldfarb-\u00a5in we \u2014e\u2014 PPD a \u2014e\u2014 PPD we \u2014e\u2014 PPD \u201d 1 2 om 1 2 om 1 2 10 10 10 ; 10 10 ; 10 Time (s) Time (s) Time (s) Figure 24: Increased Signal to Noise Ratio (SNR) vs time of the denoising 3D-TV algorithms under comparison, for the different video sequences considered in the experiments. non-iterative and so we only report the time required for its termination. The optimal objective value was estimated by running all methods for a very large number of iterations and taking the minimum value of them all. This produced the plots shown in Figures 23-24. From them the following observations are of relevance: e Following the pattern observed in the image denoising experiments, ADMM (Yang\u2019s method) is best suited for finding very accurate solutions. e The method by Goldfarb and Yin again provides suboptimal solutions, due to the discrete approximation it uses. e Parallel Proximal Dykstra is the fastest to achieve a mid-quality solution. e Intermediate solutions prior to convergence of the PPD run result in better ISNR values for the coastguard and bicycle datasets. This hints that the denoising model used in this experiment may not be optimal for these kind of signals; indeed, more advanced denoising models abound in the signal processing literature. Hence we do not claim novel results in terms of ISNR quality, but just in solving this classic denoising model more efficiently. The ISNR plots in Figure 24 also show how both Parallel Proximal Dykstra and ADMM (Yang\u2019s method) converge to equivalent solutions in practice. Therefore, for the purpose of video denoising PPD seems to be the best choice, unless for some reason a high degree of accuracy is required, for which ADMM should be preferred. Acknowledgments AB acknowledges partial financial support from Spain\u2019s grants TIN2010-21575-C02-01, TIN2013-42351-P, $2013/ICE-2845 CASI-CAM-CM, TIN2016-76406-P and TIN2015-70308-REDT (MINECO/FEDER EU) during the long period leading to the writing of this manuscript. We thank R. Tibshirani for bringing [45] to our attention, and S. Jegelka for alerting us to the importance of weighted total-variation problems. References [1] M. V. Afonso, J. M. Bioucas-Dias, and M. A. T. Figueiredo. Fast image recovery using variable splitting and constrained optimization. IEEE Transactions on Image Processing, 19(9), September 2010. [2] C. M. Alaiz, A. Barbero, and J. R. Dorronsoro. Group fused lasso. Artificial Neural Networks and Machine Learning-ICANN 2013, page 66, 2013. [3] E. Anderson et al. LAPACK Users\u2019 Guide. Society for Industrial and Applied Mathematics, Philadelphia, PA, third edition, 1999. ISBN 0-89871-447-8 (paperback). 46 [4] [5] [6] [7] [10] [11] [12] [13] [14] [15] [16] [17] [18] [19] [20] [21] [22] [23] [24] [25] [26] [27] F. Bach. Structured sparsity-inducing norms through submodular functions. In NIPS, 2010. Bach, Francis Learning with Submodular Functions: A Convex Optimization Perspective arXiv preprint arXiv:1111.6453 F. Bach, R. Jenatton, J. Mairal, and G. Obozinski. Convex optimization with sparsity-inducing norms. In S. Sra, S. Nowozin, and S. J. Wright, editors, Optimization for Machine Learning. MIT Press, 2011. A. Barbero, J. L\u00e9pez, and J. R. Dorronsoro. Finding Optimal Model Parameters by Discrete Grid Search. In Advances in Soft Computing: Innovations in Hybrid Intelligent Systems 44, pages 120-127. Springer, 2008. Barbero, A., Sra, S. Fast Newton-type methods for total variation regularization. In Proceedings of the 28th International Conference on Machine Learning (ICML-1I1) (pp. 313-320). A. Barbero, J. L\u00e9pez, and J. R. Dorronsoro. Finding Optimal Model Parameters by Deterministic and Annealed Focused Grid Search. Neurocomputing, 72(13-15):2824\u20142832, 2009. ISSN 0925-2312. doi: DOI:10.1016/j.neucom.2008.09.024. Barlow, R. E., Bartholomew, D. J., Bremner, J. M., Brunk, H. D. Statistical inference under order restrictions: The theory and application of isotonic regression New York: Wiley, 1972 H. H. Bauschke and P. L. Combettes. Convex analysis and monotone operator theory in Hilbert spaces. CMS Books in Mathematics. Springer, 2011. Heinz H. Bauschke, Patrick L. Combettes, D. Russell Luke Finding best approximation pairs relative to two closed convex sets in Hilbert spaces Journal of Approximation Theory 127 (2004) 178-192 A. Beck and M. Teboulle. A Fast Iterative Shrinkage-Thresholding Algorithm for Linear Inverse Problems. SIAM Journal of Imgaging Sciences, 2(1):183-\u2014202, 2009. D. P. Bertsekas. Projected newton methods for optimization problems with simple constraints. SIAM Journal on Control and Optimization, 20(2), March 1982. D. P. Bertsekas. Nonlinear Programming. Athena Scientific, 2nd edition, September 1999. J. M. Bioucas-Dias and M. A. T. Figueiredo. A new twist: Two-step iterative shrinkage/thresholding algorithms for image restoration. IEEE Transactions on Image Processing, 16(12):2992-3004, December 2007. J. M. Bioucas-Dias, M. A. T. Figueiredo, and J. P. Oliveira. Total variation-based image deconvolution: A majorization-minimization approach. In ICASSP Proceedings, 2006. BM3D. Bm3d software and test sequences, 2013. URL http://www.cs.tut.fi/~foi/ GCF-BM3D/. R. H. Byrd, P. Lu, J. Nocedal, and C. Zhu. A limited memory algorithm for bound constrained optimization. Technical report, Northwestern University, 1994. E. J. Cand\u00e9s and T. Tao. Near-optimal signal recovery from random projections: universal encoding strategies. IEEE Trans. Info. Theory, 52:5406\u20145425, 2004. A. Chambolle and J. Darbon. On total variation minimization and surface evolution using parametric maximum flows. International Journal of Computer Vision, 84(3), 2009. A. Chambolle and T. Pock. A first-order primal-dual algorithm for convex problems with applications to imaging. Journal of Mathematical Imaging and Vision, 40(1):120-145, 2011. Chambolle, A., Pock, T. On the ergodic convergence rates of a first-order primal-dual algorithm Mathematical Programming. September 2016, Volume 159, Issue 1, pp 253-287 V. Chandrasekaran, B. Recht, P. A. Parrilo, and A. S. Willsky. The Convex Geometry of Linear Inverse Problems. Foundations of Computational Mathematics, 12(6), 2012. R. Choksi, Y. van Gennip, and A. Oberman. Anisotropic Total Variation Regularized L1-Approximation and Denoising/Deblurring of 2D Bar Codes. Technical report, McGill University, July 2010. P. L. Combettes. Iterative construction of the resolvent of a sum of maximal monotone operators. Journal of Convex Analysis, 16:727-748, 2009. P. L. Combettes and J.-C. Pesquet. Proximal splitting methods in signal processing. arXiv:0912.3522, 2009. 47 [28] L. Condat. A direct algorithm for 1d total variation denoising. Technical report, GREYC laboratory, CNRS-ENSICAEN- Univ. of Caen, 2012. [29] L. Condat. A generic proximal algorithm for convex optimization - application to total variation minimization. IEEE SIGNAL PROC. LETTERS, 21(8):985\u2014989, 2014. [30] A. R. Conn, N. I. M. Gould, and P. L. Toint. Trust-Region Methods. SIAM, 2000. [31] J. Dahl, P. C. Hansen, S. H. Jensen, and T. L. Jensen. Algorithms and software for total variation image reconstruction via first-order methods. Numer Algor, 53:67\u201492, 2010. [32] P. L. Davies and A. Kovac. Local extremes, runs, strings and multiresolution. The Annals of Statistics, 29(1):1-65, 2001. [33] Y. Duan and X.-C. Tai. Domain decomposition methods with graph cuts algorithms for total variation minimization. Adv Comput Math, 36:175-199, 2012. doi: 10.1007/s10444-011-9213-4. [34] J. Friedman, T. Hastie, H. HOfling, and R. Tibshirani. Pathwise coordinate optimization. Annals of Applied Statistics, 1(2):302\u2014332, Aug. 2007. [35] D. Goldfarb and W. Yin. Parametric maximum flow algorithms for fast total variation minimization. SIAM Journal on Scientific Computing, 31(5):3712\u20143743, 2009. [36] O. 8. Goldstein T. The Split Bregman Method for L1 Regularized Problems. SIAM Journal on Imaging Sciences, 2(2):323\u2014-343, 2009. (37] T. R. Golub et al. Molecular classification of cancer. Science, 286(5439):531\u2014537, October 1999. [38] M. Grasmair. The equivalence of the taut string algorithm and bv-regularization. Journal of Mathematical Imaging and Vision, 27(1):59-66, 2007. ISSN 0924-9907. doi: 10.1007/s10851-006-9796-4. URL http://dx.doi.org/10.1007/s10851-006-9796-4. [39] Z. Harchaoui and C. L\u00e9vy-Leduc. Multiple Change-Point Estimation With a Total Variation Penalty. Journal of the American Statistical Association, 105(492):1480-1493, 2010. [40] J. Hua, W. D. Tembe, and E. R. Dougherty. Performance of feature-selection methods in the classification of high-dimension data. Pattern Recognition, 42:409-424, 2009. [41] K. Ito and K. Kunisch. An active set strategy based on the augmented lagrangian formulation for image restoration. ESAIM: Mathematical Modelling and Numerical Analysis, 33(1):1-21, 1999. URL http://eudml.org/doc/193911. [42] M. Jaggi. Revisiting frank-wolfe: Projection-free sparse convex optimization. In Proceedings of the 30th International Conference on Machine Learning,, 2013. [43] S. Jegelka, F. Bach, and S. Sra. Reflection methods for user-friendly submodular optimization. Advances in Neural Information Processing Systems 2013: 1313-1321. [44] Jegou, H., Douze, M., Schmid, C. Hamming Embedding and Weak geometry consistency for large scale image search Proceedings of the 10th European conference on Computer vision, October, 2008 http://lear.inrialpes.fr/~jegou/data.php#holidays [45] N. A. Johnson. A dynamic programming algorithm for the fused Lasso and [g-segmentation. J. Computational and Graphical Statistics, 2013. [46] D. Kim, S. Sra, and I. Dhillon. A scalable trust-region algorithm with application to mixed-norm regression. In International Conference on Machine Learning, 2010. [47] S. Kim, K. Koh, S. Boyd, and D. Gorinevsky. \u00a3, trend filtering. SIAM Review, 51(2):339-360, 2009. doi: 10.1137/070690274. [48] K. C. Kiwiel. Variable fixing algorithms for the continuous quadratic knapsack problem. J. Optim. Theory Appl., 136:445-458, 2008. [49] Knuth, Donald E. The art of computer programming, volume 1: fundamental algorithms. CA, USA: Addison Wesley Longman Publishing Co., Inc [50] M. Kolar, L. Song, A. Ahmed, and E. Xing. Estimaging time-varying networks. The Annals of Applied Statistics, 4(1):94-123, 2010. [51] Kolmogorov, V., Pock, T., Rolinek, M. Total variation on a tree SIAM J. Imaging Sci., 9(2), 605-636. 48 [52] D. Krishnan and R. Fergus. Fast image deconvolution using hyper-laplacian priors. In Advances in Neural Information Processing Systems, 2009. [53] Kumar, K.S., Barbero, A., Jegelka, S., Sra, S., and Bach, F. Convex optimization for parallel energy minimization. arXiv preprint arXiv: 1503.01563. [54] S.R. Land and J. H. Friedman. Variable fusion: A new adaptive signal regression method. Technical Report 656, Department of Statistics, Carnegie Mellon University Pittsburgh, 1997. [55] Y. Li and F. Santosa. A computational algorithm for minimizing total variation in image restoration. IEEE Transactions on Image Processing, 5(6):987-995, 1996. URL http://dblp.uni-trier. de/db/journals/tip/tip5. html#Lis96. [56] C.-J. Lin and J. J. Mor\u00e9. Newton\u2019s method for large bound-constrained optimization problems. SIAM Journal on Optimization, 9(4):1 100-1127, 1999. [57] H. Liu and J. Zhang. Estimation Consistency of the Group Lasso and its Applications. In Int. Conf: Mach. Learning (ICML), 2009. [58] J. Liu and J. Ye. Efficient Euclidean projections in linear time. In JCML, Jun. 2009. [59] J. Liu, S. Ji, and J. Ye. SLEP: Sparse Learning with Efficient Projections. Arizona State University, 2009. http://www. public.asu.edu/ jye02/Software/SLEP. [60] J. Liu, L. Yuan, and J. Ye. An efficient algorithm for a class of fused lasso problems. In ACM SIGKDD Conference on Knowledge Discovery and Data Mining, 2010. [61] J. Mairal, R. Jenatton, G. Obozinski, and F. Bach. Network Flow Algorithms for Structured Sparsity. In NIPS, 2010. To appear. [62] B. Martinet. R\u00e9gularisation d\u2019in\u00e9quations variationnelles par approximations successives. Mod\u00e9lisation Math\u00e9matique et Analyse Num\u00e9rique, 4(R3):154\u2014158, 1970. [63] L. Meier, S. van de Geer, and P. Btihlmann. The group lasso for logistic regression. J. R. Statist. Soc., 70: 53-71, 2008. [64] J.J. Mor\u00e9 and D. C. Sorensen. Computing a trust region step. SIAM Journal of Scientific Computing, 4 (3), September 1983. [65] J. J. Moreau. Fonctions convexes duales et points proximaux dans un espace hilbertien. C. R. Acad. Sci. Paris S\u00e9r. A Math., 255:2897\u20142899, 1962. [66] Y. Nesterov. Gradient methods for minimizing composite objective function. Technical Report 76, Catholic University of Louvain, CORE, 2007. [67] J. Nocedal and S. J. Wright. Numerical Optimization. Springer Verlag, 2000. [68] N. Parikh, S. Boyd, et al. Proximal algorithms. Foundations and Trends) in Optimization, 1(3):127-239, 2014. [69] G. Pierra. Decomposition through formalization in a product space. Mathematical Programming, 28(1): 96-115, 1984. [70] C. Pontow and O. Scherzer. A derivative free approach for total variation regularization. arXiv:091 1.1293, 2009. URL http: //arxiv.org/abs/0911.1293. [71] A. Ramdas and R. J. Tibshirani. Fast and flexible admm algorithms for trend filtering. arXiv: 1406.2082, 2014. [72] F. Rapaport and E. B. J.-P. Vert. Classification of arrayCGH data using fused SVM. Bioinformatics, 24 (13):1375=41382, 2008. [73] A. Rinaldo. Properties and refinements of the fused lasso. Annals of Statistics, 37(5B):2922-2952, 2009. [74] R. T. Rockafellar. Monotone operators and hte proximal point algorithm. SZAM J. Control and Opt., 14 (5):877-898, 1976. [75] S. Rogers, M. Girolami, C. Campbell, and R. Breitling. The latent process decomposition of cdna microarray data sets. IEEE/ACM Trans. Comp. Bio. and Bioinformatics, 2(2), April-June 2005. [76] L. I. Rudin, S. Osher, and E. Fatemi. Nonlinear total variation based noise removal algorithms. Physica D, 60:259-268, 1992. 49 [77] Russakovsky, O., Deng, J., Su, H., Krause, J., Satheesh, S., Ma, S., Huang, Z., Karpathy A., Khosla, A., Bernstein, M., Berg, A.C., Fei-Fei, L. ImageNet Large Scale Visual Recognition Challenge International Journal of Computer Vision (IJCV), Year 2015, Volume 115, Number 3, pages 211-252 http:// image-net.org/challenges/LSVRC/2010/download-public [78] S. Salzo and S. Villa. Inexact and accelerated proximal point algorithms. J. Convex Analysis, 19(4), 2012. [79] M. Schmidt, N. L. Roux, and F. Bach. Convergence Rates of Inexact Proximal-Gradient Methods for Convex Optimization. In Advances in Neural Information Processing Systems (NIPS), 2011. [80] S. Sra. Scalable nonconvex inexact proximal splitting. In Advances in Neural Information Processing Systems, 2012. [81] S. Sra, S. Nowozin, and S. Wright, editors. Optimization for machine learning. MIT Press, 2011. [82] G. Steidl, S. Didas, and J. Neumann. Relations between higher order tv regularization and support vector regression. In Scale-Space, pages 515-527, 2005. [83] N. Stransky et al. Regional copy number-independent deregulation of transcription in cancer. Nature Genetics, 38(12):1386\u20141396, December 2006. [84] R. Tibshirani. Regression shrinkage and selection via the lasso. J. R. Statist. Soc., 58(1):267\u2014288, 1996. [85] R. Tibshirani and P. Wang. Spatial smoothing and hot spot detection for CGH data using the fused lasso. Biostatistics, 9(11):18\u201429, 2008. [86] R. Tibshirani, M. Saunders, S. Rosset, J. Zhu, and K. Knight. Sparsity and smoothness via the fused lasso. J. Royal Stat. Soc.: Series B, 67(1):91-108, 2005. [87] R. J. Tibshirani. Adaptive piecewise polynomial estimation via trend filtering. The Annals of Statistics, 42(1):285-323, 02 2014. doi: 10.1214/13-AOS1189. [88] U. Alon et al. Broad patterns of gene expression revealed by clustering analysis of tumor and normal colon tissues probed by oligonucleotide arrays. Proc. Natl. Acad. Sci. USA, 96:6745\u2014-6750, June 1999. [89] J.-P. Vert and K. Bleakley. Fast detection of multiple change-points shared by many signals using group LARS. In Advances in Neural Information Processing Systems, 2010. [90] C.R. Vogel and M. E. Oman. Iterative methods for total variation denoising. SIAM Journal on Scientific Computing, 17(1):227\u2014238, 1996. [91] B. Wahlberg, S. Boyd, M. Annergren, and Y. Wang. An ADMM Algorithm for a Class of Total Variation Regularized Estimation Problems. In Proceedings 16th IFAC Symposium on System Identification, volume 16, 2012. [92] J. Wang and Q. Li and S. Yang and W. Fan and P. Wonka and J. Ye. A Highly Scalable Parallel Algorithm for Isotropic Total Variation Models In Proceedings of the 31st International Conference on Machine Learning (ICML-14), pages 235-243, 2014. [93] S. J. Wright, R. D. Nowak, and M. A. T. Figueiredo. Sparse reconstruction by separable approximation. IEEE Trans. Sig. Proc., 57(7):2479-2493, 2009. [94] M. Wytock, S. Sra, and J. Z. Kolter. Fast Newton Methods for the Group Fused Lasso. In Conference on Uncertainty in Artificial Intelligence, 2014. [95] S. Yang, J. Wang, W. Fan, X. Zhang, P. Wonka, and J. Ye. An Efficient ADMM Algorithm for Multidimensional Anisotropic Total Variation Regularization Problems. In ACM Knowledge Discovery and Data Mining (KDD), Chicago, Illinois, USA, August 2013. [96] Y. Yu. On decomposing the proximal map. In Advances in Neural Information Processing Systems, 2013. [97] M. Yuan and Y. Lin. Model Selection and Estimation in Regression with Grouped Variables. J. R. Statist. Soc. B, 68(1):49-67, 2006. [98] M. Zhu and T. Chan. An efficient primal-dual hybrid gradient algorithm for total variation image restoration. Technical report, UCLA CAM, 2008. 50 A Mathematical background We begin by recalling a few basic ideas from convex analysis; we recommend the recent book [11] for more details. Let \u00a5 C R\u201d be any set. A function r : \u00a5 > RU {\u2014co, +00} is called lower semicontinuous if for every x \u20ac X anda sequence (\u00ab;,) that converges to x, it holds that Ly, > we => r(@) < liminf, r(a,). (A.1) The set of proper Isc convex functions on \u00a5 is denoted by I'9(4\u2019) (such functions are also called closed convex functions). The indicator function of a set C' is defined as So: \u00ae > [Oco]iar J eee (A.2) oo, ifa ZC, which is Isc if and only if C' is closed. The convex conjugate of r is given by r*(z) := suPgedomr (@, 2) \u2014 r(x), and a particularly important example is the Fenchel conjugate of a norm ||-|| ifr =||-||, then r* = dy.) <1, (A.3) where the norm ||-||, is dual to ||-||. Let r and A be proper convex functions. The infimal convolution of r with h is the convex function given by (r 0 h)(#) := infyex(r(y) + h(w \u2014 y)). For our purposes, the most important special case is infimal convolution of a convex function with the squared euclidean norm, which yields the Moreau envelope [65]. Proposition A.1. Let r \u00a9 [o9(4) and let y > 0. The Moreau envelope of r indexed by + is EXC) = 7 O (35/113). (A.4) The Moreau envelope (A.4) is convex, real-valued, and continuous. Proof. See e.g. [11, Prop. 12.15]. O Using the Moreau envelope (A.4), we now formally introduce prox operators. Definition A.2 (Prox operator). Let r \u20ac [o(4), and let y \u00a9 X. Then prox, y is the unique point in X that satisfies Ex(y) = mingex(r(a) + 4||a \u2014 y||Z), ie, prox,.(y) := argmin r(x) + $ la \u2014 yll5, (A.5) we and the nonlinear map prox, : X \u2014 4 is called the prox operator of r. Sometimes the Fenchel conjugate r* is easier to use than r; similarly, sometimes the operator prox,... is easier to compute than prox,.. The result below shows the connection. Proposition A.3 (Moreau decomposition). Let r \u20ac T9(4\u2019), y > 0, and y \u00a9 X. Then, Y = prox,, y + Y Prox;\u00ab 4 (y~1y). (A.6) Proof. A brief exercise; see e.g., [11, Thm. 14.3]. | This decomposition provides the necessary tools to exploit useful primal\u2014dual relations. For the sake of clarity we also present an additional result regarding a particular primal-dual relation that plays a key role in our algorithms. 51 Proposition A.4. Ler f \u00a9 To(\u00a5) andr \u20ac T9(Z). The problems below form a primal-dual pair. inf f(@)+r(Ba) st. Bue Z (A.7) inf f*(\u2014Blu) +r*(u). (A.8) Proof. Introduce an extra variable z = Bz, so that the dual function is _: T . _ oT glu) = inf f(a) +u\" Ba + inf r(z)\u2014 uz, which upon rewriting using Fenchel conjugates yields (A.8). O Notions on submodular optimization are also required to introduce some of the decomposition techniques for 2D-TV in this paper. For a more thorough read on this topic we recommend the monograph Bach [5]. Definition A.5 (Submodular function). A set-function F : 2\u201d \u2014 R, for 2\u201d the power set of some set V, is submodular if and only if it fulfills the diminishing returns property, that is, for A C BC V andk \u20ac V, k \u00a2 B we have F(AU {k}) \u2014 F(A) > F(BU f{k}) \u2014 FCB). Intuitively, a set-function is submodular if adding a new element to the set results in less value as the set grows in size. Definition A.6 (Modular function). A set-function F : 2\u201d \u2014 R, for 2 the power set of some set V, F (0) = 0 is modular (and also submodular) if and only if there exists 8 \u00a9 IR? such that F(A) = Yoyhc 4 8k- That is, a function is modular if it always assigns the same value for each element added to the set, regardless of the other elements in the set. A common shorthand for modular functions is s(A) = }0,.\u00a24 $k: Submodular functions can be thought as convex functions in the realm of discrete optimization, in the sense that they feature useful properties that allow for efficient optimization. Similarly, modular functions are connected to linear functions. To make such connections explicit we require of the following geometric concepts. Definition A.7 (Base polytope). The base polytope Bp of a submodular function F is the polyhedron given by Br = {yeR\" :y(A) < F(A) VACV, yV) = FYV)}. That is, the base polytope is a polyhedron defined through linear inequality constraints on the values of F for every one of the n elements of the powerset 2\u201d, and an equality constraint for the complete set. This results in a combinatorial number of contraints, but fortunately this polytope will not be used directly. Definition A.8 (Support function). The support function h, for some non-empty closed convex set A \u00a9 R\u201d is given by ha(a) = sup {a\u2019a:a@\u20ac A}. The support function is useful when connected with the following definition. Definition A.9 (Lovdsz extension). Suppose a set-function F' such that F()) = 0. Its Lovdsz extension f : R? \u2014 Ris defined through the following mechanism. Take w \u00a9 R? input to f, and order its components in decreasing order w,;, >... > W;,> then f(w) = SFC, --+)Jdk}) \u2014 PS, de-a}))- k=1 Other equivalent definitions are possible: see Bach [5] for details. The following result links all the definitions so far. 52 Proposition A.10. For F\u2019 submodular function such that F()) = 0 we have e Its Lovdsz extension f is a convex function. e The support function of its base polytope is equal to its Lovdsz extension, that is, hp, (a@) = f(a). e The problem mingcy F(S) is dual to ming f(x) + 4||x\\|3, with S* = {k|a} > O}. For proofs on these points we refer to Bach [5]. The takeaway from them is that any minimization on a submodular function can be cast into a convex optimization problem. Furthermore, for those convex minimization problems whose objective turns out to be the Lovasz extension of some other function, we can trace the steps the other way round, obtaining the minimization of a submodular function. Consider now a composite problem mingcy >), Fj(S). The following results hold Proposition A.11. The problem mingcy >), Fj(S) is equivalent to min, >), fj(@) + alka 3, with S* = 2 . * * 5, with x = \u2014 >) Uj. Proof. The first equivalence is a direct result of the properties of Lovasz extensions [5], in particular that for F, G set-functions with Lovasz extensions f, g, the Lovasz extension of Ff\u2019 + Gis f + g. For the second equivalence we have: min Y> f(@) + 3llal3 J {k|zj; > O}. Furthermore it is also equivalent to miny,\u20acBp, Vj 5D; y5\\ min) hee, + 5llel/3, x - 3 J \u2014 ni Tey Mepll2 = mn yj; e+ d\\\\arl|3, _ aye + y SB yy me Dove alee | = amin aldo yslla yb vy, 2 yylls, and the dual relationship a* = \u2014 S> j y; comes from solving the inner ming problem for a. O Therefore any decomposable submodular minimization, or sum of Lovdsz extensions plus \u00a32 term, can be casted into a geometric problem in terms of the base polytopes. For two functions the resultant problem is of special interest if rewritten as - 4 2 . 1 2 - 4 2 min 5% +yll2 = =omin 5l\u00a5\u2014(\u2014y)ll2 = min gla\u2014bl/5 yicBr, 2 yweBr, 2 acBr, 2 ye Br, \u2014mwe\u2014-Br, be\u2014-Bry with a = yi, b = \u2014ype, as this results in the classic geometric problem of finding the closest points between two convex sets. Many algorithms have been proposed to tackle problems in this form, most of them making use of alternating projection operations onto the two sets. Thus, a legitimate concern is how easy it is to compute such projections for Br, and \u2014Bp,. Proposition A.12. Given a submodular function F and its base polytope Br, the projections I1p,(z) and Il_p,(2) of a point z onto Bp or its negated counterpart can be computed as pp (2) = 2 \u2014 prox;(2), Il_p,(z)=2+ prox \u00a2(\u20142), with prox proximity operator of a function, f the Lovdsz extension of F\u2019. 53 Proof. We start with the proximity of f and work our way to a relationship with the projection operator, prox (2) = min f(a) + 5||@\u2014 2/3, _ _ oT lim \u2014 \u00bbI\\2 = max ming\u2019 a + 9||a@ \u2014 lo, _ Py 1 \u2014y)\u2014 zl? ~ max y (2\u2014y) + sl(@\u2014 y) \u2014 2lla, \u2014 ain lL 2 27 = gnin sllulla \u2014y 2, where solving the inner minimization problem for x gives the primal\u2014dual relationship 7* = z \u2014 y*. Using this we can obtain the solution for the projection problem from the proximity problem, as IIg,(z) = 2 \u2014 prox (z). Projection onto the negated base polytope follows from the basic geometric argument Il_p,(z) = \u2014IIg,(\u20142z). | B_proxT\u2019V toolbox All the Total\u2014Variation proximity solvers in this paper have been implemented as the proxTV toolbox for C++, Matlab and Python, available at https://github.com/albarji/proxTV. The toolbox has been designed to be used out of the box in a user friendly way; for instance, the top\u2014level Matlab function TV solves Total\u2014Variation proximity for a given signal under a variety of settings. For instance >> TV(X, lambda) solves Tv, proximity for a signal X of any dimension and a regularization value lambda. The weighted version of this problem is also seamlessly tackled by just providing a vector of weights of the appropriate length as the Lambda parameter. If a third parameter p is provided as >> TV(X, lambda, p) the general Tv, proximity problem is addressed, whereupon an adequate solver is chosen by the library. More advanced uses of the library are possible, allowing to specify which norm p and regularizer Lambda values to use for each dimension of the signal, and even applying combinations of several different Tv, regularizers along the same dimension. Please refer to the documentation within the toolbox for further information. C_ Proof on the equality of taut-string problems Theorem C.1 (Equality of taut-string problems). Given the problems min S> ($s; \u2014 8:1), st. |s; \u20141ri| <w,Vi=1,...,n\u20141,89 =0,8, =Pn, (C.1) i=1 and n . / nA 2 - . - - min 5 1+ (8; \u2014 8-1)\", st 8; \u201417;| < wi Vi=1,...,n\u20141,8 =0,8) =Tn, (C.2) 8 i=1 for a non-zero vector w, both problems share the same minimum s* = 8*. 54 Proof. The Lagrangian of problem C.1 takes the form n n-1 n\u2014-1 L(s, a, B) = S- (si \u2014 8-1)\" + S- an (8; \u2014 Ti \u2014 Wi) + S\u00a2 Bi(\u2014w; \u2014 8 +7), i=l i=l i=l and its Karush-Kuhn-Tucker optimality conditions are given by (Sita \u2014 $i) \u2014 (8i \u2014 $;-1) = \u2014 Bi, (C.3) |si \u2014Ti| < wi, (C.4) a, 3; 2 0, (C.5) Bi(\u2014w,; \u2014 8; + r;) = 0, (C.7) Vi =1,...,2\u2014 1, and where the first equation comes from the fact that ol{s,0.8) = 0 at the minimum. As the only difference between problems C.1 and C.2 is in the form of the objective, the KKT conditions for problem C.2 take the same form, but for the first one, ($i41 \u2014 8:) (8; \u2014 8i-1) V1 + (isi \u2014 8:1)? - JI + (8 \u2014 8:1) = & \u2014 Bi, (C.8) |8; \u20147i| < wi, (C.9) Gi, Bi > 0, (C.10) Gu(8i \u2014 Pi wi) = 0, (Cll) Bi(\u2014w; \u2014 8; +11) = 0, (C.12) Vi = 1,...,n\u2014 1, and where we use hat notation for the dual coefficients to tell them apart from those of problem C.1. Suppose s* minimizer to problem C.1, hence fulfilling the conditions C.3-C.7. In particular this means that it is feasible to assign values to the dual coefficients a, G in such a way that the conditions above are met. If we set $ = s* in the conditions C.8-C.12 the following observations are of relevance Condition C.9 becomes the same as condition C.4, and so it is immediately met. The operator f(x) = Toe is contractive and monotonous. The couple (@;, 3;) cannot be both non-zero at the same time, since @; > 0 enforces s; = r; + w; and 3; > 0 enforces s; = r; \u2014 w,;, and w; is non-zero. Hence and because @;, 3; > 0 and condition C.3 holds, when (s;+1 \u2014 s;) \u2014 (8; \u2014 $;-1) > 0 then a; > 0, B; = 0, and when (s;41 \u2014 s;) \u2014 (s; \u2014 s;-1) < 0 then a; = 0, 8; > 0. f(Siz1 \u2014 8;) \u2014 f(s; \u2014 8;\u20141) has the same sign as (s;41 \u2014 s;) \u2014 (8; \u2014 8;_1), since f is monotonous and as such preserves ordering. Since f is contractive, condition C.8 can be met by setting (G;, Bi) = (ka;,k8;) for some0 <k < 1. Note that this works because (@;, (3;) cannot be both zero at the same time. Condition C.10 is met for those choices of G;, Bi, as C.5 was met for a;, 3; andO< k <1. Conditions C.11 and C.12 are also met for those choices of &;, Bi as G; (8; \u2014 17; \u2014 w;) = ka; (s; \u2014 r, \u2014 wi) = Oand B;(\u2014w; \u2014 8; + ri) = kBi(\u2014w;i \u2014 8; + ri) = 0. 55 Therefore, all of the optimality conditions C.8-C.12 for problem C.2 are met for s* solution of problem C.1, and so a minimum of problem C.1 is also a minimum for problem C.2. The proof can be repeated the other way round by setting s = 8* optimal for problem C.2, defining the operator f~!(2) = iow? and observing that this operator is monotonous and expansive, so we can establish (a, 3;) = (kai, kB;) for some k > 1 and the optimality conditions C.3-C.7 for problem C.1 are met following a similar reasoning to the one presented above. Thus, a minimum for problem C.2 is also a minimum for problem C.1, which joined with the previous result completes the proof. O D_ Proof on the equivalence of linearized taut-string method Proposition D.1. Using affine approximations to the greatest convex minorant and the smallest concave majorant does not change the solution of the taut-string method. Proof. Let us note M(f) as the smallest concave majorant of some function f taking integer values, U(/) as the greatest concave minorant, a(f) as the smallest affine majorant and a(/) as the greatest affine minorant. By definition we have al f(t) <UFM) SfO SAFO) Saf) View Consider now the nature of the taut-string problem, where a vertically symmetric tube of radius \\; at each section is modelled by following the majorant of the tube bottom (f \u2014 A) and the minorant of the tube ceiling (f + A). We work the inequalities above as: Ff) \u2014 A SAF \u2014 Ai) < af) \u2014 Ai) a( f(a) + Ai) < USM + Ad) < FM +i We will show that an overlap of smallest concave majorant / greatest convex minorant takes place iff the same overlap happens when using the affine approximations. We formally define overlap as the setting where for a point 7 we have U(fi + Ai) < ACF \u2014 Ax). One side of the implication is easy: if U(f(\u00e9) + A.) < N(f(@) \u2014 A) for some i, then using the relations above we have a( f(z) + Ay) < UC (2) + Ay) < ACF (4) \u2014 As) < G@(f(@) \u2014 A,), and so the affine approximation detects any overlap taking place in the concave/convex counterpart. The opposite requires the key observation that in the taut-string method both majorant and minorant functions are clamped to the same point of origin: f(0) = 0 at the start of the method, or the point where the last segment was fixed after each restart. Let us assume f(0) = 0 without loss of generality. Suppose now that an overlap is detected by the affine approximation. Because of this affine nature the majorant/minorant slopes are constant, i.e. 6 =b9=...=b) =6, br =d.=...=8, =5. However, if we consider the convex/concave approximations these slopes can increase/decrease as the segment progresses, that is: bp SOF <1. SOR, HY SOS... > Hy. Consider now the majorant/minorant values, expressed through the slopes and taking into account the observa- tion above about the starting point. AUF \u2014 A=. LUD +A) =. AUO=-A= 1, aD +A) 48. 56 Since an overlap has been detected in the affine approximation, we have that for some point 2 id = al f(t) + Ax) < A(f (4) \u2014 Au) = 46, ~~ so 6 < 6. Consider now the values of the affine minorant/majorant at the point immediately after the origin, a(fi-A1)= 8, (fr +A1) = 4. We will show now that the convex/convex counterpart must take exactly the same values at these points. To do so we take into account the following fact: there must exist points x and y, x,y < 2, where a( fx + Av) = fe + Ax = Ufa + Ax), GCfy \u2014 Ay) = fy \u2014 Ay = 1 fy \u2014 Ay); that is to say, the affine minorant/majorant must touch the tube ceiling/bottom at some point, otherwise we could obtain a greater minorant / smaller majorant by reducing this distance. The equalities to the convex minorant / concave majorant are then obtained by exploiting the inequalities at the beginning of the proof. By the already presented inequalities U(f, + 41) > a(fi + A1), but let us suppose for a moment UCfi + A1) > @(fi + 1). This would imply 67\u2019 > 6. We then would have that at the touching point x as the slopes in a convex minorant must be monotonically increasing. However, such function would not be a valid convex minorant, as it would grow over f + A. Therefore U( fy + A1) = @( fi + A1) must hold. Using asymmetric argument, M(f, \u2014 A1) = @(f1 \u2014 A1) can also be shown to hold. Joining this with the previous facts we have that U(fi + Ax) = a(fi +1) = 8 $6 = Afr \u2014 Ad) = Nf \u2014 Ar), and therefore the overlap detected by the affine approximation is detected through its convex/concave version as well through U( fi + A1) < NCf1 \u2014 A1). O E_ Projected-newton for weighted Tvl? In this appendix we present details of a projected-Newton (PN) approach to solving the weighted-TV prob- lem (2.6). Although taut-string approaches are empirically superior to this PN approach, the details of this derivation prove to be useful when developing subroutines for handling \u00a3,-norm TV prox-operators, but perhaps their greatest use lies in presenting a general method that could be applied to other problems that have structures similar to TV, e.g., group total-variation [2, 94] and @,-trend filtering [47, 87]. The weighted-TV dual problem (2.7) is a bound-constrained QP, so it could be solved using a variety of methods such as TRON [56], L-BFGS-B [19], or projected-Newton (PN) [14]. Obviously, these methods will be inefficient if invoked off-the-shelf; exploitation of problem structure is a must for solving (2.7) efficiently. PN lends itself well to such structure exploitation; we describe the details below. PN runs iteratively in three key steps: first it identifies a special subset of active variables and uses these to compute a reduced Hessian. Then, it uses this Hessian to scale the gradient and move in the direction opposite to it, damping with a stepsize, if needed. Finally, the next iterate is obtained by projecting onto the constraints, and the cycle repeats. PN can be regarded as an extension of the gradient-projection method (GP, [15]), where the components of the gradient that make the updating direction infeasible are removed; in PN both the gradient and the Hessian are reduced to guarantee this feasibility. At each iteration PN selects the active variables T= {i | (u = \u2014w,; and [Ve(w)]; > \u00a9) or (u; = w, and [Vela]; < \u2014e)}, (E.1) 37 where \u20ac > 0 is small scalar. This corresponds to the set of variables at a bound, and for which the gradient points inside the feasible region; that is, for these variables to further improve the objective function we would have to step out of bounds. It is thus clear that these variables are of no use for this iteration, so we define the complementary set J := {1...n}\\J of indices not in J, which are the variables we are interested in updating. From the Hessian H = V?6(w) we extract the reduced Hessian Hy; by selecting rows and columns indexed by J, and in a similar way the reduce gradient [V\u00a2(u)|;. Using these we perform a Newton-like \u201creduced\u201d update in the form uz \u2014 P(uy \u2014 aH; *[V9(u)];), (E.2) where a is a stepsize, and P denotes projection onto the constraints, which for box\u2014constraints reduces to simple element\u2014wise projection. Note that only the variables in the set J are updated in this iterate, leaving the rest unchanged. While such update requires computing the inverse of the reduced Hessian H;, which in the general case can amount to computational costs in the O(n?) order, we will see now how exploiting the structure of the problem allows us to perform all the steps above efficiently. First, observe that for (2.7) the Hessian is H=DD\"\u2122= -1 2\u00b0. \u20ac RO-Dx m1) . \u2014l \u2014-l 2 Next, observe that whatever the active set J, the corresponding reduced Hessian 7 remains symmetric tridiagonal. This observation is crucial because then we can quickly compute the updating direction dy = H;* [V\u00e9(u)]7, which can be done by solving the linear system Hyd; = [V\u00a2(u*)]; as follows: 1. Compute the Cholesky decomposition H; = R? R. 2. Solve the linear system R? vy = [V\u00a2(2)]7 to obtain v. 3. Solve the linear system Rd; = v to obtain dy. Because the reduced Hessian is also tridiagonal, its Cholesky decomposition can be computed in linear time to yield a bidiagonal matrix R, which in turn allows to solve the subsequent linear systems also in linear time. Extremely efficient routines to perform all these tasks are available in the LAPACK libraries [3]. The next crucial ingredient is efficient selection of the stepsize a. The original PN algorithm Bertsekas [14] recommends Armijo-search along projection arc. However, for our problem this search is inordinately expensive. So we resort to a backtracking strategy using quadratic interpolation [67], which works admirably well. This strategy is as follows: start with an initial stepsize ag = 1. If the current stepsize a; does not provide sufficient decrease in $, build a quadratic model using (1), O(a \u2014 a7), and 0, o(a). Then, the stepsize Q;+1 1S set to the value that minimizes this quadratic model. In the event that at some point of the procedure the new a;,+4, is larger than or too similar to a;, its value is halved. In this fashion, quadratic approximations of \u00a2@ are iterated until a good enough a is found. The goodness of a stepsize is measured using the following Armijo-like sufficient descent rule o(u) \u2014 O(P |u \u2014axd]) > o- an (Vou) -d), where a tolerance \u00a2 = 0.05 works well practice. Note that the gradient V\u00e9(w) might be misleading in the condition above if w has components at the boundary and d points outside this boundary (because then, due to the subsequent projection no real im- provement would be obtained by stepping outside the feasible region). To address this concern, we modify the computation of the gradient V d(w), zeroing our the entries that relate to direction components pointing outside the feasible set. 58 Algorithm 11 Stepsize selection for Projected Newton Initialize: ag = 1, k = 0, d, tolerance parameter o while 6(u) \u2014 \u00a2(Plu\u2014 a;xd]) < 0 - ay, -(Vob(u) - d) do aKa, P(t) 2(o(u)\u2014d(u-an)+anda, O(u))* if Apt. > Ay, OF Api, Y Ap, then Ansys = FOR. kek+1 end while return a, Minimize quadratic model: a,41 = Algorithm 12 PN algorithm for TV-L1-proximity Let W = Diag(w;); solve DD? Wu* = Dy. if ||Wta* ||. < 1, return u*. u\u00b0 = Pliu*|,t=0. while gap(1) > \u00ab do Identify set of active constraints J; let J = {1...n}\\ I. Construct reduced Hessian Hi. Solve Hyd; = [Vo(u\")];. Compute stepsize a using backtracking + interpolation (Alg. 11). Update ui! = Plu\u2019 \u2014 adj]. Ectt+l. end while return w\u2019. The whole stepsize selection procedure is shown in Algorithm |1. The costliest operation in this procedure is the evaluation of @, which, nevertheless can be done in linear time. Furthermore, in practice a few iterations more than suffice to obtain a good stepsize. Overall, a full PN iteration as described above runs at O(n) cost. Thus, by exploiting the structure of the problem, we manage to reduce the O(n*) cost per iteration of a general PN algorithm to a linear-cost method. The pseudocode of the resulting method is shown as Algorithm 12. Note that in the special case when the weights W := Diag(w;) are so large that the unconstrained optimum coincides with the constrained one, we can obtain u* directly via solving DD? Wu* = Dy (which can also be done at O(n) cost). The duality gap of the current solution is used as a stopping criterion, where we use a tolerance of \u00ab = 10~\u00b0 in practice. F_ Testing images and videos, and experimental results The images used in the experiments are displayed in what follows, along with their noisy/denoised and convoluted/deconvoluted versions for each algorithm tested. QR barcode images were generated by encoding random text using Google chart API*. Images shape and phantom \u00b0 are publicly available and frequently used in image processing. trollface and comic \u00b0 are also publicly available. gaudi, used in the multicore experiments, is a high resolution 3197 x 3361 photograph of Gaudi\u2019s Casa Batll6\u2019. The rest of the images were originally created by the authors. For the video experiments, the salesman, coastguard and bicycle sequences were used, which are publicly available at [18]. As an example, frames from the first video are displayed in what follows, along with their noisy/denoised versions. 4nttp://code.google.com/intl/en-EN/apis/chart/ \u2018Extracted from http: //en.wikipedia.org/wiki/File:Shepp_logan.png 6 Author: Francisco Molina. http: //www.afrikislife.net/english/ 7Extracted from http://www. flickr.com/photos/jeffschwartz/202423023/ o randomQR-0 (100 x 100) shape (128 x 128) trollface (888 x 388) Class Database diagram (259 x 259) Modifications of the SVM tele text (665 x 665) comic (402 x 402) Running times reduction letter contour (1000 x 1000) phantom (1713 x 1713) Figure 25: Test images used in the experiments together with their sizes in pixels. Images displayed have been scaled down to fit in page. uesas peek 1 | ~~ \u2014 ene \u2014 \u2014 ame shape (128 x 128) ee Folder] Object Datsbase 0 diagram (259 x 259) 242 Modifications of Che SVM lated ~ ~ em ete ode \u2018 \u201c? . bow \u201c . aw I~ wit \u2018 7 \u2018 + ol we \u2018 + hy # 1 ' sppert Vector Chretien 22 Support Very Negripdhew =\u00bb oe comic (402 x 402) Running times reduction etter \u00b0 si is : \u2014 | Woe ae ne y ha contour (1000 x 1000) phantom (1713 x 1713) Figure 26: Noisy versions of images used in the experiments. randomQR-4 (500 x 500) shape (128 x 128) diagram (259 x 259) 22 Mewelificeeticrtes of Chee SVM teeentet Heugmet Veeres Cleaitientinn Fi S25 Suppers Veenas Hegreicnn text (665 x 665) comic (402 x 402) Runng Wmes reduction letter contour (1000 x 1000) phantom (1713 x 1713) Denoising results for the test images. S = aS 4 i oD oD on\u2122 ' : Saal oO ry ' => te x N ' 1D Sal a i \u00a9 > | Oo x gS x } | , } ae i i | x oc} oa 5 i el N N | | } 8 a 1 re \u00a5 tif ; \u2018 i wa ~ i 4 it mS Y & i ; | . aT g 5 s | 5 g O\u00b0 cs j i | a) Ss z Tha bine S a ae | j a = } oD \u201c~~ ' nd \u2018,\u201d 19 S ia\u201d |B 4 ~ } ty / t Me 2 \u2122~ 4 a = > mH ua \" pe tl BS z fo) x x 0 a gS = 7 iaaheaacbae tote it S x 5 x a 12 { \u00a9 erm . . BS 3 g > t * oy i eres or matee NU = oe Arh ob, = | |/2 cS Z| | Sa AEP Spy | \u201cw] &| |/s i as ote . , riven g S| | ewe eae phat Sg \u201d | l a E 2 S Us aE ha es rng q Vu AA) Ss] lle 8 a \u00a9. c \u2014*s . Mr uz a Wy edna a \\ 7 aekk wath ts ah a j : Po pone ta ~ DML oe es = ~~ 8 e \u2014 o> + - a a x x pee ad S 5 iS | | ew x : So A SS et 3) @ S ~ Ny: ey * 1 ~ oO \u2014 o ot oO} |i g 2 g S| lew 5 Ss =| \u00a3 a a = = Noisy and convoluted versions of images used in the experiments. Figure 28: randomQR-0 (100 x 100) randomQR-1 (175 x 175) * Sa he a\u201d randomQR-?2 (300 x 300) randomQR-3 (375 x 375) randomQR-4 (500 x 500) cree P EES itestge fo A nine ta shape (128 x 128) tt) dF trollface (888 x 388) \u2018a SRO hi \u2018% _\u2014 f \u2018 ax ay Gass: 7 Le 5 \u2014 j= | P= Fema BSaiaess es 5 diagram (259 x 259) text (665 x 665) - Tw . OD - As ar oy. comic (402 x 402) contour (1000 x 1000) phantom (1713 x 1713) Figure 29: Deconvolution results for the test images. 7 7 MH Th VU a ih hal Figure 30: A selection of frames from the salesman video sequence. Figure 31: Noisy frames from the salesman video sequence. Figure 32: Denoised frames from the salesman video sequence.", "common_format": {"doc_id": "./1411.0589v3.hocr", "tokens": ["Modular", "proximal", "optimization", "for", "multidimensional", "total-variation", "regularization", "Alvaro", "Barbero", "alvaro.barbero@inv.uam.es", "Instituto", "de", "Ingenieria", "del", "Conocimiento", "and", "Universidad", "Aut\u00e9noma", "de", "Madrid", "Francisco", "Tomas", "y", "Valiente", "11,", "Madrid,", "Spain", "Suvrit", "Sra*", "suvrit@mit.edu", "Laboratory", "for", "Information", "and", "Decision", "Systems", "Massachusetts", "Institute", "of", "Technology", "(MIT),", "Cambridge,", "MA", "Abstract", "We", "study", "TV", "regularization,", "a", "widely", "used", "technique", "for", "eliciting", "structured", "sparsity.", "In", "particular,", "we", "propose", "efficient", "algorithms", "for", "computing", "prox-operators", "for", "\u00a3,-norm", "TV.", "The", "most", "important", "among", "these", "is", "\u00a3;-norm", "TV,", "for", "whose", "prox-operator", "we", "present", "a", "new", "geometric", "analysis", "which", "unveils", "a", "hitherto", "unknown", "connection", "to", "taut-string", "methods.", "This", "connection", "turns", "out", "to", "be", "remarkably", "useful", "as", "it", "shows", "how", "our", "geometry", "guided", "implementation", "results", "in", "efficient", "weighted", "and", "unweighted", "1D-TV", "solvers,", "surpassing", "state-of-the-art", "methods.", "Our", "1D-TV", "solvers", "provide", "the", "backbone", "for", "building", "more", "complex", "(two", "or", "higher-dimensional)", "TV", "solvers", "within", "a", "modular", "proximal", "optimization", "approach.", "We", "review", "the", "literature", "for", "an", "array", "of", "methods", "exploiting", "this", "strategy,", "and", "illustrate", "the", "benefits", "of", "our", "modular", "design", "through", "extensive", "suite", "of", "experiments", "on", "(i)", "image", "denoising,", "(ii)", "image", "deconvolution,", "(iti)", "four", "variants", "of", "fused-lasso,", "and", "(iv)", "video", "denoising.", "To", "underscore", "our", "claims", "and", "permit", "easy", "reproducibility,", "we", "provide", "all", "the", "reviewed", "and", "our", "new", "TV", "solvers", "in", "an", "easy", "to", "use", "multi-threaded", "C++,", "Matlab", "and", "Python", "library.", "1", "Introduction", "Sparsity", "impacts", "the", "entire", "data", "analysis", "pipeline,", "touching", "algorithmic,", "modeling,", "as", "well", "as", "practical", "aspects.", "Most", "commonly,", "sparsity", "is", "elicited", "via", "\u00a3;-norm", "regularization", "[20,", "84].", "However,", "numerous", "applications", "rely", "on", "more", "refined", "\u201cstructured\u201d", "notions", "of", "sparsity,", "e.g.,", "groupwise-sparsity", "[6,", "57,", "63,", "97],", "hierarchical", "sparsity", "[4,", "61],", "gradient", "sparsity", "[76,", "86,", "90],", "or", "sparsity", "over", "structured", "\u2018atoms\u2019", "[24].", "Such", "regularizers", "typically", "arise", "in", "optimization", "problems", "of", "the", "form", "Mingern", "O(a)", ":=", "&(a)+r(ax),", "(1.1)", "where", "\u00a3", ":", "R\u201d", "\u2014", "R", "is", "a", "smooth", "loss", "function", "(often", "convex),", "while", "r", ":", "R\u201d", "\u2014", "RU", "{+co}", "is", "a", "lower", "semicontinuous,", "convex,", "and", "nonsmooth", "regularizer", "that", "induces", "sparsity.", "We", "focus", "on", "instances", "of", "(1.1)", "where", "r", "is", "a", "weighted", "anisotropic", "Total-Variation", "(TV)", "regularizer:',", "which,", "for", "a", "vector", "x", "\u20ac", "IR\u201d", "and", "fixed", "weights", "w", ">", "0", "is", "defined", "as", "def", "def", "n\u2014-1", "1/p", "r(v@)", "=", "Tv,", "(w;", "a)", "=", "\u2018o>", "wiles", "\u2014", "231\")", "pol.", "(1.2)", "J=1", "More", "generally,", "if", "X", "is", "an", "order-m", "tensor", "in", "RIG.\"", "with", "entries", "X", "we", "define", "the", "weighted", "m-dimensional", "anisotropic", "TV", "regularizer", "as", "m", "Mp1", "1/pe", "m", "def", "nwew:x)", "232", "(>", "wig", "KE),", "XH", "P)", "|", "(1.3)", "k=1Iy={i1,...,im}\\ix", "*", "I=1", "im", "A", "<4;", "<n;", "forl", "<7", "<m);", "2112s;", "*An", "initial", "version", "of", "this", "work", "was", "performed", "during", "2013-14,", "when", "the", "author", "was", "with", "the", "Max", "Planck", "Institute", "for", "Intelligent", "Systems,", "Tiibingen,", "Germany,", "and", "with", "Carnegie", "Mellon", "University,", "Pittsburgh.", "'We", "use", "the", "term", "\u201canisotropic\u201d", "to", "refer", "to", "the", "specific", "TV", "penalties", "considered", "in", "this", "paper.", "where", "xl", "=", "Xin", "scsi", "i", "shinstyesim>", "WIy,7", "=", "0", "are", "weights,", "and", "p", "=", "[p,", ">", "1]", "for", "1", "<", "k", "<", "m.", "If", "Xis", "a", "matrix,", "expression", "(1.3)", "reduces", "to", "(note,", "p,", "g", ">", "1)", "ny", "ng\u2014-\u2014l1", "1/p", "nea", "ny\u2014l1", "1/q", "Tv5,q(W;", "X)", "=", ">\u00bb", "(", "S-", "wig", "lPige1", "\u2014", "Vij", "\u201d)", "+", "\u00bb{", "S-", "we", "il2ipig", "\u2014", "21\")", "(1.4)", "i=l", "j=", "j=l", "i=l", "These", "definitions", "look", "formidable;", "already", "2D-TV", "(1.4)", "or", "even", "the", "simplest", "1D-TV", "(1.2)", "are", "fairly", "complex,", "which", "further", "complicates", "the", "overall", "optimization", "problem", "(1.1).", "Fortunately,", "this", "complexity", "can", "be", "\u201clocalized\u201d", "by", "invoking", "prox-operators", "[65],", "which", "are", "now", "widely", "used", "across", "machine", "learning", "[68,", "81].", "The", "main", "idea", "of", "using", "prox-operators", "while", "solving", "(1.1)", "is", "as", "follows.", "Suppose", "\u00ae", "is", "a", "convex", "Isc", "function", "ona", "set", "VY", "C", "R\u201d.", "The", "prox-operator", "of", "\u00ae", "is", "defined", "as", "the", "map", "proxg", "@", "y>", "argmin", "$\\la\u2014", "y||Z", "4+", "O(a)", "for", "y", "eR\u201d.", "(1.5)", "eerX", "A", "popular", "method", "based", "on", "prox-operators", "is", "the", "proximal", "gradient", "method", "(also", "known", "as", "\u2018forward", "backward", "splitting\u2019),", "which", "performs", "a", "gradient", "(forward)", "step", "followed", "by", "a", "proximal", "(backward)", "step", "to", "iterate", "B41", "=", "proxy,", "(fe", "\u2014MeVE(@x)),", "&=O0,1,....", "(1.6)", "Numerous", "other", "proximal", "methods", "exist\u2014see", "e.g.,", "[13,", "27,", "46,", "66,", "79].", "To", "implement", "the", "proximal-gradient", "iteration", "(1.6)", "efficiently,", "we", "require", "a", "subroutine", "that", "computes", "the", "prox-operator", "prox,..", "An", "additional", "concern", "is", "whether", "the", "overall", "algorithm", "requires", "an", "exact", "computation", "of", "prox,,", "or", "merely", "a", "moderately", "inexact", "computation.", "This", "concern", "is", "justified:", "rarely", "does", "r", "admit", "an", "exact", "algorithm", "for", "computing", "prox,..", "Fortunately,", "proximal", "methods", "easily", "admit", "inexactness,", "e.g.,", "[78-80],", "which", "allows", "approximate", "prox-operators", "(as", "long", "as", "the", "approximation", "is", "sufficiently", "accurate).", "We", "study", "both", "exact", "and", "inexact", "prox-operators", "in", "this", "paper,", "contingent", "upon", "the", "\u00a3,-norm", "used", "and", "on", "the", "data", "dimensionality", "\u2122.", "1.1.", "Contributions", "In", "particular,", "we", "review,", "analyze,", "implement,", "and", "experiment", "with", "a", "variety", "of", "fast", "algorithms.", "The", "ensuing", "contributions", "of", "this", "paper", "are", "summarized", "below.", "e", "Geometric", "analysis", "that", "leads", "to", "a", "new,", "efficient", "version", "of", "the", "classic", "Taut", "String", "Method", "[32],", "whose", "origins", "can", "be", "traced", "back", "to", "[10]", "\u2014", "this", "version", "turns", "out", "to", "perform", "better", "than", "most", "of", "the", "recently", "developed", "TV", "proximity", "methods.", "e", "A", "previously", "unknown", "connection", "between", "(a", "variation", "of)", "this", "classic", "algorithm", "and", "Condat\u2019s", "un-", "weighted", "TV", "method", "[28].", "This", "connection", "provides", "a", "geometric,", "more", "intuitive", "interpretation", "and", "helps", "us", "define", "a", "hybrid", "taut-string", "algorithm", "that", "combines", "the", "strengths", "of", "both", "methods,", "while", "also", "providing", "a", "new", "efficient", "algorithm", "for", "weighted", "\u00a3;-norm", "1D-TV", "proximity.", "e", "Efficient", "prox-operators", "for", "general", "\u00a3,,-norm", "(p", ">", "1)", "1D-TV.", "In", "particular,", "\u2014", "For", "p", "=", "2,", "we", "present", "a", "specialized", "Newton", "method", "based", "on", "the", "root-finding", "strategy", "of", "[64],", "\u2014", "For", "the", "general", "p", ">", "1", "case", "we", "describe", "both", "\u201cprojection-free\u201d", "and", "projection", "based", "first-order", "methods.", "e", "Scalable", "proximal-splitting", "algorithms", "for", "computing", "2D", "(1.4)", "and", "higher-D", "TV", "(1.3)", "prox-operators.", "We", "review", "an", "array", "of", "methods", "in", "the", "literature", "that", "use", "prox-splitting,", "and", "through", "extensive", "experi-", "ments", "show", "that", "a", "splitting", "strategy", "based", "on", "alternating", "reflections", "is", "the", "most", "effective", "in", "practice.", "Furthermore,", "this", "modular", "construction", "of", "2D", "and", "higher-D", "TV", "solvers", "allows", "reuse", "of", "our", "fast", "1D-TV", "routines", "and", "exploitation", "of", "the", "massive", "parallelization", "inherent", "in", "matrix", "and", "tensor", "TV.", "e", "The", "final", "most", "important", "contribution", "of", "our", "paper", "is", "a", "well-tuned,", "multi-threaded", "open-source", "C++,", "Matlab", "and", "Python", "implementation", "of", "all", "the", "reviewed", "and", "developed", "methods.\u201d", "To", "complement", "our", "algorithms,", "we", "illustrate", "several", "applications", "of", "TV", "prox-operators", "to:", "(i)", "image", "and", "video", "denoising;", "(ii)", "image", "deconvolution;", "and", "(iii)", "four", "variants", "of", "fused-lasso.", "Note:", "We", "have", "invested", "great", "efforts", "to", "ensure", "reproducibility", "of", "our", "results.", "In", "particular,", "given", "the", "vast", "attention", "that", "TV", "problems", "have", "received", "in", "the", "literature,", "we", "believe", "it", "is", "valuable", "to", "both", "users", "of", "TV", "and", "other", "researchers", "to", "have", "access", "to", "our", "code,", "datasets,", "and", "scripts,", "to", "independently", "verify", "our", "claims,", "if", "desired.?", "1.2", "Related", "work", "The", "literature", "on", "TV", "is", "too", "large", "to", "permit", "a", "comprehensive", "review", "here.", "Instead,", "we", "mention", "the", "most", "directly", "related", "work", "to", "help", "place", "our", "contributions", "in", "perspective.", "We", "focus", "on", "anisotropic-TV", "(in", "the", "sense", "of", "[16]),", "in", "contrast", "to", "isotropic-TV", "[76].", "Isotropic", "TV", "regularization", "arises", "frequently", "in", "image", "denoising", "and", "signal", "processing,", "and", "quite", "a", "few", "TV-based", "denoising", "algorithms", "exist", "[98,", "see", "e.g.].", "The", "anisotropic", "TV", "regularizers", "Tv>", "and", "Tv)", "arise", "in", "image", "denoising", "and", "deconvolution", "[31],", "in", "the", "fused-lasso", "[86],", "in", "logistic", "fused-lasso", "[50],", "in", "change-point", "detection", "[39],", "in", "graph-cut", "based", "image", "segmentation", "[21],", "in", "submodular", "optimization", "[43];", "see", "also", "the", "related", "work", "in", "[89].", "This", "broad", "applicability", "and", "importance", "of", "anisotropic", "TV", "is", "the", "key", "motivation", "towards", "developing", "carefully", "tuned", "proximity", "operators.", "There", "is", "a", "rich", "literature", "of", "methods", "tailored", "to", "anisotropic", "TV,", "e.g.,", "those", "developed", "in", "the", "context", "of", "fused-lasso", "[34,", "60],", "graph-cuts", "[21],", "ADMM-style", "approaches", "[27,", "91],", "or", "fast", "methods", "based", "on", "dynamic", "programming", "[45]", "or", "KKT", "conditions", "analysis", "[28].", "However,", "it", "seems", "that", "anisotropic", "TV", "norms", "other", "than", "\u00a3,", "has", "not", "been", "studied", "much", "in", "the", "literature,", "although", "recognized", "as", "a", "form", "of", "Sobolev", "semi-norms", "[70].", "For", "1D-TV", "and", "for", "the", "particular", "\u20ac;", "norm,", "there", "exist", "several", "direct", "methods", "that", "are", "exceptionally", "fast.", "We", "treat", "this", "problem", "in", "detail", "in", "Section", "2,", "and", "hence", "refer", "the", "reader", "to", "that", "section", "for", "discussion", "of", "closely", "related", "work", "on", "fast", "solvers.", "We", "note", "here,", "however,", "that", "in", "contrast", "to", "many", "of", "the", "previous", "fast", "solvers,", "our", "solvers", "allow", "weights,", "a", "capability", "that", "can", "be", "very", "important", "in", "applications", "[43].", "Regarding", "2D-TV,", "Goldstein", "T.", "[36]", "presented", "a", "so-called", "\u201cSplit-Bregman\u201d", "(SB).", "It", "turns", "out", "that", "this", "method", "is", "essentially", "a", "variant", "of", "the", "well-known", "ADMM", "method.", "In", "contrast", "to", "the", "2D", "approach", "presented", "here,", "the", "SB", "strategy", "followed", "by", "Goldstein", "T.", "[36]", "is", "to", "rely", "on", "\u00a3-soft", "thresholding", "substeps", "instead", "of", "1D-TV", "substeps.", "From", "an", "implementation", "viewpoint,", "the", "SB", "approach", "is", "somewhat", "simpler,", "but", "not", "necessarily", "more", "accurate.", "Incidentally,", "sometimes", "such", "direct", "ADMM", "approaches", "turn", "out", "to", "be", "less", "effective", "than", "ADMM", "methods", "that", "rely", "on", "more", "complex", "1D-TV", "prox-operators", "[71].", "Itis", "worth", "highlighting", "that", "it", "is", "not", "just", "proximal", "solvers", "such", "as", "FISTA", "[13],", "SpaRSA", "[93],", "SALSA", "[1],", "TwIST", "[16],", "TRIP", "[46],", "that", "can", "benefit", "from", "our", "fast", "prox-operators.", "All", "other", "2D", "and", "higher-D", "TV", "solvers,", "e.g.,", "[95],", "as", "well", "as", "the", "recent", "ADMM", "based", "trend-filtering", "solvers", "of", "Tibshirani", "[87]", "immediately", "benefit,", "not", "only", "in", "speed", "but", "also", "by", "gaining", "the", "ability", "to", "solve", "weighted", "problems.", "1.3.", "Summary", "of", "the", "paper", "The", "remainder", "of", "the", "paper", "is", "organized", "as", "follows.", "In", "Section", "2", "we", "consider", "prox", "operators", "for", "1D-TV", "problems", "when", "using", "the", "most", "common", "/;", "norm.", "The", "highlight", "of", "this", "section", "is", "our", "analysis", "on", "taut-string", "TV", "solvers,", "which", "lead", "to", "the", "development", "a", "new", "hybrid", "method", "and", "a", "weighted", "TV", "solver", "(Sections", "2.3,", "2.4).", "Thereafter,", "we", "discuss", "variants", "of", "1D-TV", "(Section", "3),", "including", "a", "specialized", "Tvs?", "solver,", "and", "a", "more", "general", "Typ?", "method", "based", "on", "a", "projected-Newton", "strategy.", "Subsequently,", "we", "describe", "multi-dimensional", "TV", "problems", "and", "study", "their", "prox-operators", "in", "Section", "4,", "paying", "special", "attention", "to", "2D-TV;", "for", "both", "2D", "and", "multi-D,", "prox-splitting", "methods", "are", "used.", "After", "these", "theoretical", "sections,", "we", "describe", "experiments", "2See", "https://github.com/albarji/proxTV", "3This", "material", "shall", "be", "made", "available", "at:", "http://suvrit.de/work/soft/tv.html", "and", "applications", "in", "Section", "5.", "In", "particular,", "extensive", "experiments", "for", "1D-TV", "are", "presented", "in", "Section", "5.1;", "2D-TV", "experiments", "are", "in", "Section", "5.3,", "while", "an", "application", "of", "multi-D", "TV", "is", "the", "subject", "of", "Section", "5.4.", "The", "appendices", "to", "the", "paper", "include", "further", "technical", "details", "and", "additional", "information", "about", "the", "experimental", "setup.", "2", "TV-L1:", "Fast", "prox-operators", "for", "TyiP", "We", "begin", "with", "the", "1D-TV", "problem", "(1.2)", "for", "an", "\u20ac,", "norm", "choice,", "for", "which", "we", "review", "several", "carefully", "tuned", "algorithms.", "Using", "such", "well\u2014tuned", "algorithms", "pays", "off:", "we", "can", "find", "fast,", "robust,", "and", "low-memory", "(in", "fact,", "in", "place)", "algorithms,", "which", "are", "not", "only", "of", "independent", "value,", "but", "also", "ideal", "building", "blocks", "for", "scalably", "solving", "2D-", "and", "higher-D", "TV", "problems.", "Computation", "of", "the", "\u00a3;-norm", "TV", "prox-operator", "can", "be", "compactly", "written", "as", "the", "problem", "min", "3l|e@\u2014yll2+Al|Dali,", "(2.1)", "where", "D", "is", "the", "differencing", "matrix,", "all", "zeros", "except", "dj;", "=", "\u20141", "and", "dj,414", "=10", "<i<n-\u2014D).", "To", "solve", "(2.1)", "we", "will", "analyze", "an", "approach", "based", "on", "the", "line", "of", "\u201ctaut-string\u201d", "methods.", "We", "first", "introduce", "these", "methods", "for", "the", "unweighted", "TV-L/", "problem", "(2.1),", "before", "discussing", "the", "elementwise", "weighted", "TV", "problem", "(2.6).", "Most", "of", "the", "previous", "fastest", "methods", "handle", "only", "unweighted-TV.", "It", "is", "often", "nontrivial", "to", "extend", "them", "to", "handle", "weighted-TV,", "a", "problem", "that", "is", "crucial", "to", "several", "applications,", "e.g.,", "segmentation", "[21]", "and", "certain", "submodular", "optimization", "problems", "Jegelka", "et", "al.", "[43].", "A", "remarkably", "efficient", "approach", "to", "TV-L1", "was", "presented", "in", "[28].", "We", "will", "show", "Condat\u2019s", "fast", "algorithm", "can", "be", "interpreted", "as", "a", "\u201clinearized\u201d", "version", "of", "the", "taut-string", "approach,", "a", "view", "that", "paves", "the", "way", "to", "obtain", "an", "equally", "fast", "solver", "for", "weighted", "TV-L1.", "Before", "proceeding", "we", "note", "that", "other", "than", "[28],", "other", "efficient", "methods", "to", "address", "unweighted", "Tvi>", "proximity", "have", "been", "proposed.", "Johnson", "[45]", "shows", "how", "solving", "Tv?", "proximity", "is", "equivalent", "to", "computing", "the", "data", "likelihood", "of", "an", "specific", "Hidden", "Markov", "Model", "(HMM),", "which", "suggests", "a", "dynamic", "programming", "approach", "based", "on", "the", "well-known", "Viterbi", "algorithm", "for", "HMMs.", "The", "resulting", "algorithm", "is", "very", "competitive,", "and", "guarantees", "an", "overall", "O(n)", "performance", "while", "requiring", "approximately", "8n", "storage.", "Another", "similarly", "performing", "algorithm", "was", "presented", "by", "Kolmogorov", "et", "al", "[51]", "in", "the", "form", "of", "a", "message", "passing", "method.", "We", "will", "also", "consider", "these", "algorithms", "in", "our", "experimental", "comparison", "in", "85.1.", "Yet", "another", "family", "of", "methods", "is", "based", "on", "projected-Netwon", "(PN)", "techniques:", "we", "also", "present", "in", "Appendix", "EaPN", "approach", "for", "its", "instructive", "value,", "and", "also", "because", "it", "provides", "key", "subroutines", "for", "solving", "TV", "problems", "with", "p", ">", "1.", "Our", "derivation", "may", "also", "be", "helpful", "to", "readers", "seeking", "to", "implement", "efficient", "prox-operators", "for", "problems", "that", "have", "structure", "similar", "to", "TV,", "for", "instance", "\u00a3;-trend", "filtering", "[47,", "87].", "Indeed,", "the", "PN", "approach", "proves", "to", "be", "foundational", "for", "the", "fast", "\u201cgroup", "fused-lasso\u201d", "algorithms", "of", "[94].", "2.1", "The", "taut-string", "method", "for", "Tv}?", "While", "taut-string", "methods", "seem", "to", "be", "largely", "unknown", "in", "machine", "learning,", "they", "have", "been", "widely", "applied", "in", "statistics\u2014see", "e.g.,", "[10,", "32,", "38].", "We", "start", "by", "transforming", "the", "problem", "as", "follows.", "For", "TV-L1,", "elementary", "manipulations,", "e.g.,", "using", "Proposition", "A.4,", "yield", "the", "dual", "(re-written", "as", "a", "minimization", "problem)", "min", "3||DPull3", "\u2014ul", "Dy,", "s.t.", "|lulloo", "<A.", "(2.2)", "Without", "changing", "the", "minimizer,", "the", "objective", "(2.2)", "can", "be", "replaced", "by", "||", "D7", "u", "\u2014", "y||3,", "which", "then", "unfolds", "into", "n\u2014-1", "(ua", "\u2014", "ya)", "+", "(\u2014ui-1", "+", "ui", "\u2014", "yi)\u201d", "+", "(-un-1", "\u2014", "Yn)", ":", "Introducing", "the", "fixed", "extreme", "points", "ug", "=", "u,,", "=", "0,", "we", "can", "replace", "the", "problem", "(2.2)", "by", ".", "n", "2", "min", "S", "1!", "w\u20141", "tui", "\u2014", "yi)\u201d,", "St.", "|lttlloo", "SA,", "Uo", "=", "Un", "=", "0.", "(2.3)", "Now", "we", "perform", "a", "change", "of", "variables", "by", "defining", "the", "new", "set", "of", "variables", "s", "=", "r", "\u2014", "wu,", "where", "r;", ":=", "eet", "Uk", "is", "the", "cumulative", "sum", "of", "input", "signal", "values.", "Thus,", "(2.3)", "becomes", ".", "n", "2", "min", "S", "(7-1", "t+", "si-1", "+7:", "\u2014", "81", "\u2014", "yi),", "8-t", "|S", "\u2014P", "loo", "<A,", "0", "-\u2014", "809", "=n", "\u2014", "Sn", "=O,", "8", "a=1", "which", "upon", "simplification", "becomes", "nm", ".", "2", "min", ")", "1", "(si-1\u20148:)\u00b0,", "st.", "||[s\u2014Tllo", "<A,", "809", "=0,", "52,", "=Tn.", "(2.4)", "Now", "the", "key", "trick:", "problem", "(2.4)", "can", "be", "shown", "to", "share", "the", "same", "optimum", "as", "min", "So", "lt", "(si-1", "\u2014", "51),", "st.", "|s\u2014", "Plo", "SA,", "80", "=0,", "Sn", "=", "Tn.", "(2.5)", "i=l", "A", "proof", "of", "this", "relationship", "may", "be", "found", "in", "[82];", "for", "completeness,", "and", "also", "because", "it", "will", "help", "us", "generalize", "to", "the", "weighted", "Tv\\P", "variant,", "we", "include", "an", "alternative", "proof", "in", "Appendix", "C.", "The", "name", "\u201ctaut-string\u201d", "is", "explained", "as", "follows.", "The", "objective", "in", "(2.5)", "can", "be", "interpreted", "as", "the", "Euclidean", "length", "of", "a", "polyline", "through", "the", "points", "(2,", "s;).", "Thus,", "(2.5)", "seeks", "the", "minimum", "length", "polyline", "(the", "taut-string)", "crossing", "a", "tube", "of", "height", "\\", "with", "center", "the", "cumulative", "sum", "r", "and", "having", "the", "fixed", "endpoints", "(sg,", "s,).", "An", "example", "illustrating", "this", "description", "is", "shown", "in", "Figure", "1.", "Once", "the", "taut", "string", "is", "found,", "the", "solution", "for", "the", "original", "TV", "problem", "(2.1)", "can", "be", "recovered", "by", "observing", "that", "S81", "=", "MOU", "M-1-w-1)", "=", "YWrutu-1", "=", "%,", "where", "we", "used", "the", "primal-dual", "relation", "2", "=", "y\u2014", "Du.", "Intuitively,", "the", "above", "argument", "shows", "that", "the", "solution", "to", "the", "TV-L1", "proximity", "problem", "is", "obtained", "as", "the", "discrete", "gradient", "of", "the", "taut", "string,", "or", "as", "the", "slope", "of", "its", "segments.", "Taut-string", "solution", "Figure", "1:", "Example", "of", "the", "taut", "string", "method.", "The", "cumulative", "sum", "r", "of", "the", "input", "signal", "values", "y", "is", "shown", "as", "the", "dashed", "line;", "the", "black", "dots", "mark", "the", "points", "(7,7;).", "The", "bottom", "and", "top", "of", "the", "4-width", "tube", "are", "shown", "in", "red.", "The", "taut", "string", "solution", "s", "is", "shown", "as", "a", "blue", "line.", "Algorithm", "1", "Taut", "string", "algorithm", "for", "TV-L1-proximity", "1:", "Inputs:", "input", "signal", "y", "of", "length", "n,", "regularizer", "4.", "2:", "Initialize", "i", "=", "0,", "concmajorant", "=", "S,", "convminorant", "=", "2,", "ri", "=", "an", "Yk-", "3:", "whilei", "<", "ndo", "4", "Add", "new", "segment:", "concmajorant", "=", "concmajorant", "U", "((i", "\u2014", "1,", "ri\u20141", "\u2014", "A)", ">", "(4,74", "\u2014", "A)).", "5:", "while", "concmajorant", "is", "not", "concave", "do", "6", "Merge", "the", "last", "two", "segments", "of", "concmajorant", "7", "end", "while", "8", "Add", "new", "segment:", "conuminorant", "=", "conuminorant", "U", "((\u00e9", "\u2014", "1,", "ri\u20141", "+", "A)", ">", "(4,74", "+", "A)).", "9:", "while", "conuminorant", "is", "not", "convex", "do", "10:", "Merge", "the", "last", "two", "segments", "of", "conuminorant", "11:", "end", "while", "12:", "if", "slope(left-most", "segment", "in", "concmajorant)", ">", "slope(lest-most", "segment", "in", "conuminorant)", "then", "13:", "break", "=", "left-most", "point", "where", "either", "the", "majorant", "or", "the", "minorant", "touched", "the", "tube", "14:", "if", "break", "\u20ac", "conuminorant", "then", "15:", "Remove", "left-most", "segment", "of", "the", "minorant,", "add", "it", "to", "the", "taut-string", "solution", "a.", "16:", "Majorant", "is", "recalculated", "as", "a", "straight", "line", "from", "break", "to", "its", "last", "point.", "17:", "end", "if", "18:", "if", "break", "\u20ac", "concmajorant", "then", "19:", "Remove", "left-most", "segment", "of", "the", "majorant,", "add", "it", "to", "the", "taut-string", "solution", "x.", "20:", "Minorant", "is", "recalculated", "as", "a", "straight", "line", "from", "brea\u00e9", "to", "its", "last", "point.", "21:", "end", "if", "22:", "end", "if", "23:", "a+t+", "24:", "end", "while", "25:", "Add", "last", "segment", "from", "either", "the", "majorant", "or", "minorant", "to", "the", "solution", "a.", "It", "remains", "to", "describe", "how", "to", "find", "the", "taut", "string.", "The", "most", "widely", "used", "approach", "seems", "to", "be", "the", "one", "due", "to", "Davies", "and", "Kovac", "[32].", "This", "approach", "starts", "from", "the", "fixed", "point", "sg", "=", "0,", "and", "incrementally", "computes", "the", "greatest", "convex", "minorant", "of", "the", "upper", "bounds", "on", "the", "A", "tube,", "as", "well", "as", "the", "smallest", "concave", "majorant", "of", "the", "lower", "bounds", "on", "the", "\\", "tube.", "When", "both", "curves", "intersect,", "the", "/eft-most", "point", "where", "either", "the", "majorant", "or", "the", "minorant", "touched", "the", "tube", "is", "used", "to", "fix", "a", "first", "segment", "of", "the", "taut", "string.", "The", "procedure", "is", "then", "resumed", "at", "the", "end", "of", "the", "identified", "segment,", "and", "iterated", "until", "all", "taut", "string", "segments", "have", "been", "obtained.", "Pseudocode", "of", "this", "method", "is", "presented", "as", "Algorithm", "1,", "while", "an", "example", "of", "this", "procedure", "is", "shown", "in", "Figure", "2.", "It", "is", "important", "to", "note", "that", "since", "we", "have", "a", "discrete", "number", "of", "points", "in", "the", "tube,", "the", "greatest", "convex", "minorant", "can", "be", "expressed", "as", "a", "piecewise", "linear", "function", "with", "segments", "of", "monotonically", "increasing", "slope,", "while", "the", "smallest", "concave", "majorant", "is", "another", "piecewise", "linear", "function", "with", "segments", "of", "monotonically", "decreasing", "slope.", "Another", "relevant", "fact", "is", "that", "each", "segment", "in", "the", "tube", "upper/lower", "bound", "enters", "the", "minorant/majorant", "exactly", "once", "in", "the", "algorithm,", "and", "is", "also", "removed", "exactly", "once.", "This", "limits", "the", "extent", "of", "the", "inner", "loops", "in", "the", "algorithm,", "and", "in", "fact", "an", "analysis", "of", "the", "computational", "complexity", "of", "this", "behavior", "leads", "to", "an", "overall", "O(n)", "performance", "[32].", "In", "spite", "of", "this,", "Condat", "[28]", "notes", "that", "maintaining", "the", "minorant", "and", "majorant", "functions", "in", "memory", "is", "inefficient,", "and", "views", "a", "taut-string", "approach", "as", "potentially", "inferior", "to", "his", "proposed", "method.", "To", "this", "observation", "we", "make", "two", "claims:", "Condat\u2019s", "method", "can", "be", "interpreted", "as", "a", "linearized", "version", "of", "the", "taut-string", "method", "(see", "Section", "2.2);", "and", "that", "a", "careful", "implementation", "of", "the", "taut-string", "method", "can", "be", "highly", "competitive", "in", "practice.", "2.1.1", "Efficient", "implementation", "of", "taut-strings", "We", "propose", "now", "an", "efficient", "implementation", "of", "the", "taut-string", "method.", "The", "main", "idea", "is", "to", "carefully", "use", "double-ended", "queues", "[49]", "to", "store", "the", "majorant", "and", "minorant", "information.", "Therewith,", "all", "majorant/minorant", "Operations", "such", "as", "appending", "a", "segment", "or", "removing", "segments", "from", "either", "the", "beginning", "or", "the", "end", "of", "the", "majorant", "can", "be", "performend", "in", "constant", "time.", "Note", "however", "that", "usual", "double-ended", "queue", "implementations", "(7)", "gy", "(9)", "Figure", "2:", "Example", "of", "the", "evolution", "of", "the", "taut", "string", "method.", "The", "smallest", "concave", "majorant", "(blue)", "and", "largest", "convex", "minorant", "(green)", "are", "updated", "are", "every", "step.", "At", "step", "(1)", "the", "algorithm", "is", "initialized.", "Steps", "(2)", "to", "(4)", "successfully", "manage", "to", "update", "majorant", "and", "minorant", "without", "producing", "crossings", "between", "them.", "Note", "how", "while", "the", "concave", "majorant", "keeps", "adding", "segments", "without", "issue,", "the", "convex", "minorant", "must", "remove", "and", "merge", "existing", "segments", "with", "new", "ones", "to", "mantain", "a", "convex", "function", "from", "the", "origin", "to", "the", "new", "points.", "At", "step", "(5)", "the", "end", "of", "the", "tube", "is", "reached,", "but", "the", "minorant", "and", "majorant", "slopes", "overlap,", "and", "so", "it", "is", "necessary", "to", "break", "the", "segment", "at", "the", "left-most", "point", "where", "the", "majorant/minorant", "touched", "the", "tube.", "Since", "the", "left-most", "touching", "point", "is", "in", "the", "concave", "majorant", "it\u2019s", "leftmost", "segment", "is", "removed", "and", "placed", "in", "the", "solution,", "while", "the", "convex", "minorant", "is", "updated", "as", "a", "straight", "line", "from", "the", "detected", "breakpoint", "to", "the", "last", "explored", "point,", "resulting", "in", "(6).", "The", "algorithm", "would", "then", "continue", "adding", "segments,", "but", "since", "the", "majorant/minorant", "slopes", "are", "still", "crossing,", "the", "procedure", "of", "fixing", "segments", "to", "the", "solution", "is", "repeated", "through", "steps", "(6),", "(7)", "and", "(8).", "Finally", "at", "step", "(9)", "the", "slopes", "are", "no", "longer", "crossing", "and", "the", "method", "would", "continue", "adding", "tube", "segments,", "but", "since", "the", "end", "of", "the", "tube", "has", "already", "been", "reached", "the", "algorithm", "stops.", "use", "doubly", "linked", "lists,", "dynamic", "arrays", "or", "circular", "buffers:", "these", "approaches", "require", "dynamically", "reallocating", "memory", "chunks", "at", "some", "of", "the", "insert", "or", "remove", "operations.", "But", "in", "the", "taut-string", "algorithm,", "the", "maximum", "number", "of", "segments", "of", "the", "majorant/minorant", "is", "just", "the", "size", "of", "the", "input", "signal", "(7),", "and", "also", "the", "number", "of", "segments", "to", "be", "inserted", "in", "the", "queue", "throughout", "the", "algorithm", "will", "be", "n.", "Making", "use", "of", "these", "facts", "we", "implement", "a", "specialized", "queue", "based", "on", "a", "contiguous", "array", "of", "fixed", "length", "n.", "New", "segments", "are", "added", "from", "the", "start", "of", "the", "array", "on,", "and", "a", "couple", "of", "pointers", "are", "maintained", "to", "keep", "track", "of", "the", "first", "and", "last", "valid", "segments", "in", "the", "array,", "much", "in", "the", "way", "of", "a", "circular", "buffer.", "This", "implementation,", "however,", "does", "not", "require", "of", "the", "usual", "circular", "logic.", "Overall,", "this", "double-ended", "queue", "requires", "a", "single", "memory", "allocation", "at", "the", "beginning", "of", "the", "algorithm,", "keeping", "the", "rest", "of", "queue", "operations", "free", "from", "memory", "management", "and", "all", "but", "the", "simplest", "pointer", "or", "index", "algebra.", "We", "also", "store", "for", "each", "segment", "the", "following", "values:", "x", "length", "of", "the", "segment,", "y", "length", "and", "slope.", "Slopes", "might", "seem", "as", "redundant", "given", "the", "other", "two", "factors,", "but", "given", "the", "number", "of", "times", "the", "algorithm", "requires", "comparing", "slopes", "between", "segments", "(e.g.,", "to", "preserve", "convexity/concavity)", "it", "pays", "off", "to", "precompute", "these", "values.", "This", "fact", "together", "with", "other", "calculation", "and", "code", "optimization", "details", "produces", "our", "implementation;", "these", "can", "be", "reviewed", "in", "the", "code", "itself", "athttps://github.com/albarji/proxTV.", "2.2", "Linearized", "taut-string", "method", "for", "Tv}?", "We", "now", "present", "a", "variant,", "linearized", "version", "of", "the", "taut-string", "method.", "Surprisingly,", "the", "resulting", "algorithm", "tums", "out", "to", "be", "equivalent", "to", "the", "fast", "algorithm", "of", "Condat", "[28],", "though", "now", "with", "a", "clearer", "interpretation", "based", "on", "taut-strings.", "The", "key", "idea", "is", "to", "build", "linear", "approximations", "to", "the", "greatest", "convex", "minorant", "and", "smallest", "concave", "majorant,", "producing", "exactly", "the", "same", "results", "but", "significantly", "reducing", "the", "bookkeeping", "of", "the", "method", "to", "a", "handful", "of", "simple", "variables.", "We", "therefore", "replace", "the", "greatest", "convex", "minorant", "and", "smallest", "convex", "majorant", "by", "a", "greatest", "affine", "minorant", "and", "smallest", "affine", "majorant.", "An", "example", "of", "the", "method", "is", "presented", "in", "Figure", "4.", "A", "proof", "showing", "that", "this", "linearization", "does", "not", "change", "the", "resultant", "taut-string", "is", "given", "in", "Appendix", "D.", "In", "what", "follows,", "we", "describe", "the", "linearized", "method", "in", "depth.", "Details.", "Linearized", "taut-string", "requires", "only", "the", "following", "bookkeeping", "variables:", "1.", "zo:", "index", "of", "the", "current", "segment", "start", "2.", "6:", "slope", "of", "the", "line", "joining", "segment", "start", "with", "majorant", "at", "the", "current", "point", "3.", "6:", "slope", "of", "the", "line", "joining", "segment", "start", "with", "minorant", "at", "the", "current", "point", "4.", "h:", "height", "of", "majorant", "w.rt.", "the", "\\-tube", "center", "5.", "fh:", "height", "of", "minorant", "w.r.t.", "\\-tube", "center", "6.", "7:", "index", "of", "last", "point", "where", "5", "was", "updated\u2014potential", "majorant", "break", "point", "7.", "2:", "index", "of", "last", "point", "where", "6", "was", "updated\u2014potential", "minorant", "break", "point.", "Figure", "3", "gives", "a", "geometric", "interpretation", "of", "these", "variables;", "we", "use", "these", "variables", "to", "detect", "minorant-majorant", "intersections,", "without", "the", "need", "to", "compute", "or", "store", "them", "explicitly.", "10", "i", "4", "Figure", "3:", "Illustration", "of", "the", "geometric", "concepts", "involved", "in", "the", "linearized", "taut", "string", "method.", "The", "greatest", "linear", "minorant", "(of", "the", "tube", "ceiling)", "is", "depicted", "in", "green,", "while", "the", "smallest", "linear", "majorant", "(of", "the", "tube", "bottom)", "is", "shown", "in", "blue.", "The", "6", "slopes", "and", "h", "heights", "are", "presented", "updated", "up", "to", "the", "index", "shown", "as", "i.", "Algorithm", "2", "presents", "full", "pseudocode", "of", "the", "linearized", "taut-string", "method.", "Broadly,", "the", "algorithm", "proceeds", "in", "the", "same", "fashion", "as", "the", "classic", "taut-string", "method,", "updating", "the", "affine", "approximations", "to", "the", "majorant", "and", "minorant", "at", "each", "step,", "and", "introducing", "a", "breakpoint", "whenever", "the", "slopes", "of", "these", "two", "functions", "cross.", "More", "precisely,", "at", "each", "each", "iteration", "the", "method", "steps", "one", "point", "further", "through", "the", "tube,", "updating", "the", "minorant/majorant", "slopes", "(6,", "5)", "as", "well", "their", "heights", "at", "the", "current", "point", "(/,", "h).", "To", "check", "for", "minorant/majorant", "crossings", "it", "suffices", "to", "compare", "the", "slopes", "(4,", "5),", "or", "equivalently,", "to", "check", "whether", "the", "height", "of", "the", "minorant", "h", "falls", "below", "the", "tube", "bottom", "(since", "the", "minorant", "follows", "the", "tube", "ceiling)", "or", "the", "height", "of", "the", "majorant", "h", "grows", "above", "the", "tube", "ceiling", "(since", "the", "majorant", "follows", "the", "tube", "bottom).", "We", "make", "use", "of", "this", "last", "variant,", "Algorithm", "2", "Linearized", "taut", "string", "algorithm", "for", "TV-L1-proximity", "1:", "Initialize", "i", "=i", "=i=h=h=0,6", "=yo+r,6=yo", "A", "2:", "while", "i", "<", "n", "do", ".", ".", "3:", "Find", "tube", "height:", "AX", "=", "A", "ifi", "<", "n\u20141,", "else", "A", "=", "0", ":", "Update", "majorant", "height", "following", "current", "slope:", "h", "=", "h", "+6", "\u2014", "y;.", "4", "5:", "/*", "Check", "for", "ceiling", "violation:", "majorant", "is", "above", "tube", "ceiling", "*/", "6:", "if", "h", ">", "\\", "then", "7", "Build", "valid", "segment", "up", "to", "last", "majorant", "breaking", "point:", "2;", "41.4", "=", "\u00e9.", "8", "Start", "new", "segment", "after", "break:", "(t0,7)", "=7,6", "=yt+2A6=y,h=Ah=\u2014-Aji=itl", "9", ":", "continue", "10:", "end", "if", "11:", "Update", "minorant", "height", "following", "current", "slope:", "h", "=", "h", "+", "6", "\u2014", "y.", "12:", "/*", "Check", "for", "bottom", "violation:", "minorant", "is", "below", "tube", "bottom", "*/", "13:", "if", "h", "<", "\u2014\\", "then", "14:", "Build", "valid", "segment", "up", "to", "last", "minorant", "breaking", "point:", "#i,+1:", "=", "6.", "15:", "Start", "new", "segment", "after", "break:", "(i9,1)", "=", "1,6", "=", "yi,d", "=", "2A", "+y,,h", "=Ah=\u2014-Ai=it1", "16:", "continue", "17:", "end", "if", "18:", "/*", "Check", "if", "majorant", "height", "is", "below", "the", "floor", "*/", "19:", "if", "h<\u2014.", "then", "20:", "Correct", "slope:", "6", "=", "6", "+", "Azh", "21:", "The", "majorant", "now", "touches", "the", "floor:", "h", "=", "\u2014d", "22:", "This", "is", "a", "possible", "majorant", "breaking", "point:", "7", "=", "i", "23:", "end", "if", "24:", "/*", "Check", "if", "minorant", "height", "is", "above", "the", "ceiling", "*/", "25:", "if", "h", ">", "then", "26:", "Correct", "slope:", "6", "=", "6", "+", "a", "27:", "The", "minorant", "now", "touches", "the", "ceiling:", "h", "=", "rv", "28:", "This", "is", "a", "possible", "minorant", "breaking", "point:", "i", "=", "7", "29:", "end", "if", "30:", "Continue", "building", "current", "segment:", "i", "=", "i", "+", "1", "31:", "end", "while", "32:", "Build", "last", "valid", "segment:", "%i,+1:n", "=", "6.", "since", "updating", "heights", "turns", "out", "to", "be", "slightly", "cheaper", "than", "updating", "slopes,", "and", "so", "it", "is", "faster", "to", "ensure", "no", "crossing", "will", "take", "place", "before", "performing", "such", "updates.", "When", "a", "crossing", "is", "detected,", "we", "perform", "similar", "steps", "as", "in", "the", "classic", "taut-string", "method", "but", "with", "one", "significant", "difference:", "the", "algorithm", "is", "completely", "restarted", "at", "the", "newly", "introduced", "breakpoint.", "This", "restart", "idea", "is", "in", "contrast", "with", "the", "classic", "method,", "where", "we", "simply", "re-use", "the", "previously", "computed", "information", "about", "the", "minorant", "and", "majorant", "to", "update", "their", "estimates", "and", "continue", "working", "with", "them.", "In", "the", "linearized", "version", "we", "do", "not", "keep", "enough", "information", "to", "perform", "such", "an", "operation,", "so", "all", "data", "about", "minorant", "and", "majorant", "is", "discarded", "and", "the", "algorithm", "begins", "anew.", "Because", "of", "this", "choice", "the", "same", "tube", "segment", "might", "be", "reprocessed", "up", "to", "O(n)", "times", "in", "the", "method,", "and", "therefore", "the", "overall", "worst", "case", "performance", "is", "O(n\u201d).", "This", "fact", "was", "already", "observed", "in", "[28].", "In", "what", "follows", "we", "describe", "the", "rationale", "behind", "the", "height", "update", "formulae.", "Height", "variables.", "To", "implement", "the", "method", "described", "above,", "the", "height", "variables", "/", "are", "not", "strictly", "necessary", "as", "they", "can", "be", "obtained", "from", "the", "slopes", "6.", "However,", "explicitly", "including", "them", "leads", "to", "efficient", "updating", "rules", "at", "each", "iteration,", "as", "we", "show", "below.", "Classic", "Linearized", "(Condat\u2019s)", "Worst-case", "performance", "|", "O(n)", "O(n?)", "In\u2014memory", "No", "Yes", "Other", "considerations", "Fast", "bookkeeping", "through", "double-", "|", "Very", "fast", "iteration,", "cache", "friendly", "ended", "queues", "Table", "1:", "Comparison", "of", "the", "main", "features", "of", "reviewed", "taut-string", "algorithms.", "Suppose", "we", "are", "updating", "the", "heights", "and", "slopes", "from", "their", "estimates", "at", "step", "2", "\u2014", "1", "to", "step", "2.", "Updating", "the", "heights", "is", "immediate", "given", "the", "slopes,", "since", "hy;", "=hy_y", "+6", "\u2014", "y.", "In", "other", "words,", "since", "we", "are", "following", "a", "line", "with", "slope", "6,", "the", "change", "in", "height", "from", "one", "step", "to", "the", "next", "is", "given", "by", "precisely", "such", "a", "slope.", "Note,", "however,", "that", "in", "this", "algorithm", "we", "do", "not", "compute", "absolute", "heights", "but", "instead", "relative", "heights", "with", "respect", "to", "the", "A-tube", "center.", "Therefore", "we", "need", "to", "account", "for", "the", "change", "in", "the", "tube", "center", "between", "steps", "7", "\u2014", "1", "and", "2,", "which", "is", "given", "by", "r;", "\u2014", "r;_1", "=", "y;.", "This", "completes", "the", "update,", "which", "is", "shown", "in", "Algorithm", "2", "as", "lines", "4", "and", "11.", "However,", "it", "is", "possible", "that", "the", "new", "height", "/", "runs", "over", "or", "under", "the", "tube.", "This", "would", "mean", "that", "we", "cannot", "continue", "using", "the", "current", "slope", "in", "the", "majorant", "or", "minorant,", "and", "a", "recalculation", "is", "needed,", "which", "again", "can", "be", "done", "efficiently", "by", "using", "the", "height", "information.", "Assume", "without", "loss", "of", "generality", "that", "the", "starting", "index", "of", "the", "current", "segment", "is", "0", "and", "the", "absolute", "height", "of", "the", "starting", "point", "of", "the", "segment", "is", "given", "by", "a.", "Then,", "for", "adjusting", "the", "minorant", "slope", "6;", "so", "that", "it", "touches", "the", "tube", "ceiling", "at", "the", "current", "point,", "we", "note", "that", "5", "dtm", "oo", "At", "(um)", "+r", "\u2014a", ")", "4", "4", "where", "we", "have", "also", "added", "and", "subtracted", "the", "current", "value", "of", "h;.", "Observe", "that", "this", "value", "was", "computed", "using", "the", "estimate", "6;_1", "of", "the", "slope", "so", "far,", "so", "we", "can", "rewrite", "it", "as", "the", "projection", "of", "the", "initial", "point", "in", "the", "segment", "following", "such", "a", "slope,", "that", "is,", "as", "h;", "=", "76;", "\u2014", "r;", "+", "a.", "Doing", "so", "for", "one", "of", "the", "added", "heights", "i;", "produces", "A=", "hj", "5,", "Ata", "taht", "a", "5", ".", "4", "4", "4", "which", "generates", "a", "simple", "updating", "rule.", "A", "similar", "derivation", "holds", "for", "the", "minorant.", "The", "resulting", "updates", "are", "included", "in", "the", "algorithm", "in", "lines", "20", "and", "26.", "After", "recomputing", "this", "slope", "we", "need", "to", "adjust", "the", "corresponding", "height", "back", "to", "the", "tube:", "since", "the", "heights", "are", "relative", "to", "the", "tube", "center", "we", "can", "just", "set", "h", "\u2014", "A,", "h", "=", "\u2014A;", "this", "is", "done", "in", "lines", "21", "and", "27.", "Notice", "also", "that", "the", "special", "case", "of", "the", "last", "point", "in", "the", "tube", "where", "the", "taut-string", "must", "meet", "s,,", "=", "r,,", "is", "handled", "by", "line", "3,", "where", ")", "is", "set", "to", "0", "at", "such", "a", "point", "to", "enforce", "this", "constraint.", "Overall,", "one", "iteration", "of", "the", "method", "is", "very", "efficient,", "as", "mostly", "just", "additions", "and", "subtractions", "are", "involved", "with", "the", "sole", "exception", "of", "the", "division", "required", "for", "the", "slope", "updates,", "which", "are", "not", "performed", "at", "every", "iteration.", "Moreover,", "no", "additional", "memory", "is", "required", "beyond", "the", "constant", "number", "of", "bookkeeping", "variables,", "and", "in-place", "updates", "are", "also", "possible", "because", "y,", "values", "for", "already", "fixed", "sections", "of", "the", "taut-string", "are", "not", "required", "again,", "so", "the", "output", "7", "and", "the", "input", "y", "can", "both", "refer", "to", "the", "same", "memory", "locations.", "The", "resulting", "algorithm", "turns", "out", "to", "be", "equivalent,", "almost", "line", "by", "line,", "to", "the", "method", "of", "Condat", "[28],", "even", "though", "its", "theoretical", "grounds", "are", "radically", "different:", "while", "the", "approach", "presented", "here", "has", "a", "strong", "geometric", "basis", "due", "to", "its", "taut-string", "relationship,", "[28]", "is", "based", "solely", "on", "analysis", "of", "KKT", "conditions.", "Therefore,", "we", "have", "shown", "that", "Condat\u2019s", "fast", "TV", "method", "is,", "in", "fact,", "a", "linearized", "taut-string", "algorithm.", "2.3.", "Comparison", "of", "taut-string", "methods", "and", "a", "hybrid", "strategy", "Table", "|", "summarizes", "the", "main", "features", "of", "the", "classic", "and", "linearized", "taut-string", "methods", "reviewed", "so", "far.", "Although", "the", "classic", "taut-string", "method", "has", "been", "largely", "neglected", "in", "the", "machine", "learning", "literature,", "its", "10", "iy", "ii", "ig", "i", "i", "ini", "(7)", "(8)", "(9)", "Figure", "4:", "Example", "of", "the", "evolution", "of", "the", "linearized", "taut", "string", "method.", "The", "smallest", "affine", "majorant", "of", "the", "tube", "bottom", "(blue)", "and", "greatest", "affine", "minorant", "of", "the", "tube", "ceiling", "(green)", "are", "updated", "at", "every", "step.", "At", "step", "(1)", "the", "algorithm", "is", "initialized.", "Steps", "(2)", "to", "(4)", "successfully", "manage", "to", "update", "majorant/minorant", "without", "crossings.", "At", "step", "(5),", "however,", "the", "slopes", "cross,", "and", "so", "it", "is", "necessary", "to", "break", "the", "segment.", "Since", "the", "left-most", "tube", "touching", "point", "is", "the", "one", "in", "the", "majorant,", "the", "majorant", "is", "broken", "down", "at", "that", "point", "and", "its", "left-hand", "side", "is", "added", "to", "the", "solution,", "resulting", "in", "(6).", "The", "method", "is", "then", "restarted", "at", "the", "break", "point,", "with", "majorant/minorant", "being", "updated", "at", "step", "(7),", "though", "at", "step", "(8)", "once", "again", "a", "crossing", "is", "detected.", "Hence,", "at", "step", "(9)", "a", "breaking", "point", "is", "introduced", "again", "and", "the", "algorithm", "is", "restarted", "once", "more.", "Following", "this,", "step", "(10)", "manages", "to", "update", "majorant/minorant", "slopes", "up", "to", "the", "end", "of", "the", "tube,", "and", "so", "at", "step", "(11)", "the", "final", "segment", "is", "built", "using", "the", "(now", "equal)", "slopes.", "guarantee", "in", "linear", "performance", "makes", "it", "an", "attractive", "choice.", "Furthermore,", "although", "we", "could", "not", "find", "any", "references", "on", "implementation", "details", "of", "this", "method,", "we", "have", "empirically", "seen", "that", "a", "very", "efficient", "solver", "can", "be", "produced", "by", "making", "use", "of", "a", "double-ended", "queue", "to", "bookkeep", "the", "majorant/minorant", "information.", "In", "contrast", "to", "this,", "the", "linearized", "taut-string", "method", "(equivalent", "to", "[28])", "features", "a", "much", "better", "performance", "per", "step", "in", "the", "tube", "traversal,", "mainly", "due", "to", "not", "requiring", "additional", "memory", "and", "making", "use", "of", "only", "a", "small", "constant", "number", "of", "variables,", "making", "the", "method", "friendly", "for", "CPU", "cache", "or", "registers", "calculation.", "As", "a", "tradeoff", "of", "keeping", "such", "scarce", "information", "in", "memory,", "the", "method", "does", "not", "guarantee", "linear", "performance,", "falling", "to", "a", "quadratic", "theoretical", "runtime", "in", "the", "worst", "case.", "This", "fact", "was", "already", "observed", "in", "[28],", "though", "such", "worst", "case", "was", "deemed", "as", "pathological,", "claiming", "a", "O(n)", "performance", "in", "all", "practical", "situations.", "We", "shall", "review", "these", "claims", "in", "the", "experimental", "sections", "in", "this", "manuscript.", "11", "The", "key", "points", "of", "Table", "|", "show", "that", "no", "taut-string", "variant", "is", "clearly", "superior.", "While", "the", "classic", "method", "provides", "a", "safe", "linear", "time", "solution", "to", "the", "problem,", "the", "linearized", "method", "is", "potentially", "faster", "but", "riskier", "in", "terms", "of", "worst", "case", "performance.", "Following", "these", "observations", "we", "propose", "here", "a", "simple", "hybrid", "method", "combining", "both", "approaches:", "run", "the", "linearized", "algorithm", "up", "to", "a", "prefixed", "number", "of", "steps", "n\u00b0,", "S", "\u20ac", "(1,", "2),", "and", "if", "the", "solution", "has", "not", "yet", "been", "found,", "we", "switch", "to", "the", "classic", "method.", "We", "therefore", "limit", "the", "worst-case", "scenario", "to", "O(n*)", "+", "O(n)", "~", "O(n*),", "because", "once", "the", "classic", "method", "kicks,", "it", "will", "ensure", "an", "O(n)", "performance", "guarantee.", "Implementation", "of", "this", "hybrid", "method", "is", "easy", "upon", "realizing", "the", "similarities", "between", "algorithms:", "a", "switch\u2014", "check", "is", "added", "to", "the", "linearized", "method", "every", "time", "a", "segment", "of", "the", "taut-string", "has", "been", "identified", "(Algorithm", "2,", "lines", "7,", "14).", "If", "it", "is", "confirmed", "that", "the", "method", "has", "already", "run", "for", "n*", "steps", "without", "reaching", "the", "solution,", "the", "remaining", "part", "of", "the", "signal", "for", "which", "the", "taut-string", "has", "not", "yet", "been", "found", "is", "passed", "on", "to", "the", "classic", "method,", "whose", "solution", "is", "concatenated", "to", "the", "part", "the", "linearized", "method", "managed", "to", "find", "so", "far.", "We", "also", "report", "the", "empirical", "performance", "of", "this", "method", "in", "the", "experimental", "section.", "2.4", "Taut-string", "methods", "for", "weighted", "Tv}?", "Several", "applications", "TV", "require", "penalizing", "the", "discrete", "gradients", "individually,", "which", "can", "be", "done", "by", "solving", "the", "weighted", "TV-L1", "problem", ".", "1", "2", "n\u2014-1", "ming", "pla\u2014yla+", ">", "o", "wi|zip1", "\u2014", "2,", "(2.6)", "where", "the", "weights", "{wi}", "are", "all", "positive.", "To", "solve", "(2.6)", "using", "a", "taut-string", "approach,", "we", "again", "begin", "with", "its", "dual", "(written", "as", "a", "minimization", "problem)", "min,", "4||D?ull;\u2014u\u2019Dy", "st.", "lul<wi,", "1<i<n.", "(2.7)", "Then,", "we", "repeat", "the", "derivation", "of", "the", "unweighted", "taut-string", "method", "but", "with", "a", "few", "key", "modifications.", "More", "precisely,", "we", "transform", "(2.7)", "by", "introducing", "19", "=", "wu,", "=", "0", "to", "obtain", ":", "n", "2", ":", "min", "S\u2014", "(Yi", "\u2014", "Up", "+r)\u201d", "St.", "Jug]", "<", "wy,", "L<i<n.", "u", "i=1", "Then,", "we", "perform", "the", "change", "of", "variables", "s", "=", "r", "\u2014", "wu,", "where", "r;", ":=", "eed", "yp,", "and", "consider", "n", "min", "S>", "(s;\u2014", "1)\u2019", "st.|si\u2014ril<wi,", "1<i<ns9", "=0,", "sn", "=Tn.", "8s", "i=1", "Finally,", "applying", "Theorem", "C.1", "we", "obtain", "the", "equivalent", "weighted", "taut-string", "problem", ":", "n", "2", ":", "min", "S", "1+", "(8;", "\u2014s;-1)\u00b0", "st.", "|s;\u20141r;|", "<<", "wi,", "1<i<n,", "s9", "=0,", "5,", "=Tn.", "(2.8)", "8s", "i=1", "Problem", "(2.8)", "differs", "from", "its", "unweighted", "counterpart", "(2.5)", "in", "the", "constraints", "|s;", "\u2014", "7r;|", "<", "w;", "(1", "<i", "<n),", "which", "allow", "different", "weights", "for", "each", "component", "instead", "of", "using", "the", "same", "value", "\\.", "Our", "geometric", "intuition", "also", "carries", "over", "to", "the", "weighted", "problem,", "albeit", "with", "a", "slight", "modification:", "the", "tube", "we", "are", "trying", "to", "traverse", "now", "has", "varying", "widths", "at", "each", "step", "instead", "of", "the", "previous", "fixed", "\\", "width\u2014Figure", "5", "illustrates", "this", "idea.", "As", "a", "consequence", "of", "the", "above", "derivation", "and", "intuition,", "taut-string", "methods", "can", "be", "produced", "to", "solve", "the", "weighted", "TviP", "problem.", "The", "original", "formulation", "of", "the", "classic", "taut-string", "method", "in", "[32]", "defines", "the", "limits", "of", "the", "tube", "through", "possibly", "varying", "bottom", "and", "ceiling", "values", "(1;,u;)", "Vi,", "and", "so", "this", "method", "easily", "extends", "to", "solve", "the", "weighted", "TV", "problem", "by", "assigning", "J;", "=", "r;", "\u2014", "wi,", "us", "=", "7;", "+", "w;.", "In", "our", "pseudocode", "in", "Algorithm", "1", "we", "just", "need", "to", "replace", "\\", "by", "the", "appropriate", "w,;", "values.", "Similar", "considerations", "apply", "for", "the", "linearized", "version", "(Algorithm", "2),", "in", "particular,", "when", "checking", "ceiling/floor", "violations", "as", "well", "as", "when", "checking", "slope", "recomputations", "and", "restarts,", "we", "must", "account", "for", "varying", "tube", "heights.", "Algorithm", "3", "presents", "the", "precise", "modifications", "that", "we", "must", "make", "to", "Algorithm", "2", "to", "handle", "weights.", "Regarding", "the", "convergence", "of", "this", "method,", "the", "proof", "of", "equivalence", "with", "the", "classic", "taut-string", "method", "still", "holds", "in", "the", "weighted", "case", "(see", "Appendix", "D).", "The", "very", "same", "analysis", "as", "portrayed", "in", "Table", "|", "applies", "here:", "both", "the", "benefits", "and", "problems", "of", "the", "two", "taut-string", "solvers", "carry", "on", "to", "the", "weighted", "variant", "of", "the", "problem.", "12", "Taut\u2014sitring", "solution", "Figure", "5:", "Example", "of", "the", "weighted", "taut", "string", "method", "with", "w", "=", "(1.35,", "3.03,", "0.73,", "0.06,", "0.71,", "0.20,", "0.12,", "1.49,", "1.41).", "The", "cumulative", "sum", "7", "of", "the", "input", "signal", "values", "y", "is", "shown", "as", "the", "dashed", "line,", "with", "the", "black", "dots", "marking", "the", "points", "(i,", "7;).", "The", "bottom", "and", "ceiling", "of", "the", "tube", "are", "shown", "in", "red,", "which", "vary", "in", "width", "at", "each", "step", "following", "the", "weights", "w;.", "The", "weighted", "taut", "string", "solution", "s", "is", "shown", "as", "a", "blue", "line.", "Algorithm", "3", "Modified", "lines", "for", "weighted", "version", "of", "Algorithm", "2", "3:", "Find", "tube", "height:", "\\-", "wisi", "ifi", "<n", "\u20141,", "else", "4-0", "8:", "Start", "new", "segment", "after", "break:", "(i9,4)", "=", "7,6", "=", "ys", "+", "wea", "+", "wi,", "bd", "=", "ys", "t+", "wi-1", "\u2014", "wi,", "h", "=", "wi,", "h", "=", "\u2014wi,", "i=it+l", "15:", "Start", "new", "segment", "after", "break:", "(i9,4)", "=", "4,", "6", "=", "ys", "+", "wi-a", "\u2014", "wi,", "6", "=", "Yi", "+", "wi-1", "+", "wi,", "h", "=", "wi,", "h", "=", "\u2014wi,", "@=24+1", "3", "Other", "one-dimensional", "TV", "variants", "While", "more", "infrequent,", "replacing", "the", "2;", "norm", "of", "the", "standard", "TV", "regularizer", "by", "an", "\u00a3,-norm", "version", "can", "also", "be", "useful.", "In", "this", "section", "we", "focus", "first", "on", "a", "specialized", "solver", "for", "p", "=", "2,", "before", "discussing", "a", "less", "efficient", "but", "more", "general", "solver", "for", "any", "\u00a3,,", "with", "p", ">", "1.", "We", "also", "briefly", "cover", "the", "p", "=", "oo", "case.", "3.1", "TV-L2:", "Proximity", "for", "Tv,\u201d", "For", "TV-L2", "proximity", "(p", "=", "2)", "the", "dual", "to", "the", "prox-operator", "for", "(1.2)", "reduces", "to", "ming,", "(w)", "=", "4$||/D?", "ull}", "\u2014u\"", "Dy,", "s.t.", "|lullo", "<A.", "(3.1)", "Problem", "(3.1)", "is", "nothing", "but", "a", "version", "of", "the", "well-known", "trust-region", "subproblem", "(TRS),", "for", "which", "a", "variety", "of", "numerical", "approaches", "are", "known", "[30].", "We", "derive", "a", "specialized", "algorithm", "based", "on", "the", "classic", "Mor\u00e9-Sorensen", "Newton", "(MSN)", "method", "of", "[64].", "This", "method", "in", "general", "can", "be", "quite", "expensive,", "but", "for", "(3.1)", "the", "Hessian", "is", "tridiagonal", "which", "can", "be", "well-", "exploited", "(see", "Appendix", "E).", "Curiously,", "experiments", "show", "that", "for", "a", "limited", "range", "of", "values,", "even", "ordinary", "gradient-projection", "(GP)", "can", "be", "competitive.", "But", "for", "overall", "best", "performance,", "a", "hybrid", "MSN-GP", "approach", "is", "preferable.", "Towards", "solving", "(3.1),", "consider", "its", "KKT", "conditions:", "(DD?", "+", "alu", "=", "Dy,", "(3.2)", "a(||ull2\u2014A)=0,", "a>", "0,", "where", "a", "is", "a", "Lagrange", "multiplier.", "There", "are", "two", "possible", "cases:", "either", "||ts||2", "<", "A", "or", "||26|/2", "=", "A.", "13", "If", "||ee||2", "<", "A,", "then", "the", "KKT", "condition", "a(||t2||2", "\u2014", "A)", "=", "0,", "implies", "that", "a", "=", "0", "must", "hold", "and", "u", "can", "be", "obtained", "immediately", "by", "solving", "the", "linear", "system", "DD?", "u", "=", "Dy.", "This", "can", "be", "done", "in", "O(n)", "time", "owing", "to", "the", "bidiagonal", "structure", "of", "D.", "Conversely,", "if", "the", "solution", "to", "DD\u2019", "u", "=", "Dy", "lies", "in", "the", "interior", "of", "the", "ball", "||e||>", "<", "A,", "then", "it", "solves", "(3.2).", "Therefore,", "this", "case", "is", "trivial,", "and", "we", "need", "to", "consider", "only", "the", "harder", "case", "Jatli2", "=.", "For", "any", "given", "a", "one", "can", "obtain", "the", "corresponding", "vector", "u", "as", "ua,", "=", "(DD?", "+", "aI)~!Dy.", "Therefore,", "optimizing", "for", "w", "reduces", "to", "the", "problem", "of", "finding", "the", "\u201ctrue\u201d", "value", "of", "a.", "An", "obvious", "approach", "is", "to", "solve", "||2.||5", "=", "A?.", "Less", "obvious", "is", "the", "MSN", "equation", "he", "=", "-*", "=", "|lttally?", "=", "0,", "(3.3)", "which", "has", "the", "benefit", "of", "being", "almost", "linear", "in", "the", "search", "interval,", "which", "results", "in", "fast", "convergence", "[64].", "Thus,", "the", "task", "is", "to", "find", "the", "root", "of", "the", "function", "fh,", "for", "which", "we", "use", "Newton\u2019s", "method,", "which", "in", "this", "case", "leads", "to", "the", "iteration", "aca\u2014h,/hi,.", "(3.4)", "Some", "calculation", "shows", "that", "the", "derivative", "h\u2019", "can", "be", "computed", "as", "1", "alls", "\u2014_", "=", "Nala", "(3.5)", "hi,", "wh(DDT", "+", "al)", "te,", "The", "key", "idea", "in", "MSN", "is", "to", "eliminate", "the", "matrix", "inverse", "in", "(3.5)", "by", "using", "the", "Cholesky", "decomposition", "DD?", "+", "al", "=", "R?R,", "and", "defining", "a", "vector", "q,,", "=", "(R\")~", "1a,", "so", "that", "||q..|[3", "=", "u2", "(DD?", "+", "aI)", "lu.", "Asa", "result,", "the", "Newton", "iteration", "(3.4)", "becomes", "|/therll3", "ul", "(DDT", "+", "al)", "u,\u2019", "||", "tel]", "\u2014", "AW\"", "teed", "a-", "Fe", "=", "a~", "(llttalla\"", "\u2014A~\")-", "Il", "Qall5", "2", "9", "\u2014", "wall", "(", "-", "vol)", "|", "Ildeulls", "A", "and", "therefore", "]", "\\2", "\\ata|", "Ua", "2", "Ua|/2", "a", "1", "),", "(3.6)", "llaall5", "(", "n", "As", "shown", "for", "TV-L,", "(Appendix", "E),", "the", "tridiagonal", "structure", "of", "(DDD?", "+", "aJ)", "allows", "one", "to", "compute", "both", "R,,", "and", "qz,", "in", "linear", "time,", "so", "the", "overall", "iteration", "runs", "in", "O(n)", "time.", "The", "above", "ideas", "are", "presented", "as", "pseudocode", "in", "Algorithm", "4.", "As", "a", "stopping", "criterion", "two", "conditions", "are", "checked:", "whether", "the", "duality", "gap", "is", "small", "enough,", "and", "whether", "wu", "is", "close", "enough", "to", "the", "boundary.", "This", "latter", "check", "is", "useful", "because", "intermediate", "solutions", "could", "be", "dual-infeasible,", "thus", "making", "the", "duality", "gap", "an", "inadequate", "optimality", "measure", "on", "its", "own.", "In", "practice", "we", "use", "tolerance", "values", "\u20ac,", "=", "10~\u00ae", "and", "egap", "=", "107\u00b0.", "Even", "though", "Algorithm", "4", "requires", "only", "linear", "time", "per", "iteration,", "it", "is", "fairly", "sophisticated,", "and", "in", "fact", "a", "much", "simpler", "method", "can", "be", "devised.", "This", "is", "illustrated", "here", "by", "a", "gradient-projection", "method", "with", "a", "fixed", "stepsize", "Qo,", "whose", "iteration", "is", "ult?", "=", "Phcy(u\u2019\u2014", "apVo(u')).", "(3.7)", "The", "theoretically", "ideal", "choice", "for", "the", "stepsize", "ag", "is", "given", "by", "the", "inverse", "of", "the", "Lipschitz", "constant", "L", "of", "the", "gradient", "Vd(w)", "[13,", "66].", "Since", "d(t)", "is", "a", "convex", "quadratic,", "L", "is", "simply", "the", "largest", "eigenvalue", "of", "the", "Hessian", "D.D\u2122.", "Owing", "to", "its", "special", "structure,", "the", "eigenvalues", "of", "the", "Hessian", "have", "closed-form", "expressions,", "namely", "A;", "=", "2", "\u2014", "2.cos", "(4)", "(for", "1", "<i", "<n).", "The", "largest", "one", "is", "A,", "=", "2", "\u2014", "2cos", "(22)", ",", "which", "tends", "to", "4", "as", "n", "\u2014", "oo;", "thus", "the", "choice", "ap", "=", "1/4", "is", "a", "good", "and", "cheap", "approximation.", "Pseudocode", "showing", "the", "whole", "14", "Algorithm", "4", "MSN", "based", "TV-L2", "proximity", "Initialize:", "a", "=", "0,", "Ug", "=", "0.", "while", "|||2<.||3", "\u2014", "A|", ">", "\u20ac,", "or", "gap(ta)", ">", "egap", "do", "Compute", "Cholesky", "decomp.", "DD?", "+", "al", "=", "R?", "Ry.", "Obtain", "u,,", "by", "solving", "RER", "Que", "=", "Dy.", "Obtain", "qq,", "by", "solving", "RU", "qa", "=", "Ua.", "oma", "\u2014", "Walle", "(1", "_", "ucla)", "laall5", "end", "while", "return", "ty,", "Algorithm", "5", "GP", "algorithm", "for", "TV-L2", "proximity", "Initialize", "uo", "\u20ac", "RN,", "t", "=", "0.", "while", "(\u2014", "converged)", "do", "Gradient", "update:", "vt", "=", "u?", "\u2014", "Vf", "(ut).", "Projection:", "ut", "=", "max(1", "\u2014", "A/||v\"||2,", "0)", "-", "vt.", "t<ct4+l1.", "end", "while", "return", "u\u00b0.", "procedure", "is", "presented", "in", "Algorithm", "5.", "Combining", "this", "with", "the", "fact", "that", "the", "projection", "P).\\,<)", "is", "also", "trivial", "to", "compute,", "the", "GP", "iteration", "(3.7)", "turns", "out", "to", "be", "very", "attractive.", "Indeed,", "sometimes", "it", "can", "even", "outperform", "the", "more", "sophisticated", "MSN", "method,", "though", "only", "for", "a", "very", "limited", "range", "of", "\\", "values.", "Therefore,", "in", "practice", "we", "recommend", "a", "hybrid", "of", "GP", "and", "MSN,", "as", "suggested", "by", "our", "experiments", "(see", "\u00a75.2.1).", "3.2.", "TV-Lp:", "Proximity", "for", "Tv,\u201d", "For", "TV-L,,", "proximity", "(for", "1", "<", "p", "<", "oo)", "the", "dual", "problem", "becomes", "min", "O(t)", "=", "5|", "D7", "alls", "\u2014u'", "Dy,", "st.", "|\\ullg", "<A,", "(3.8)", "where", "g", "=", "1/(1", "\u2014", "1/p).", "Problem", "(3.8)", "is", "not", "particularly", "amenable", "to", "Newton-type", "approaches,", "as", "neither", "PN", "(Appendix", "E),", "nor", "MSN-type", "methods", "(83.1)", "can", "be", "applied", "easily.", "It", "is", "partially", "amenable", "to", "gradient-", "projection", "(GP),", "for", "which", "the", "same", "update", "rule", "as", "in", "(3.7)", "applies,", "but", "unlike", "the", "g", "=", "2", "case,", "the", "projection", "step", "here", "is", "much", "more", "involved.", "Thus,", "to", "complement", "GP,", "we", "may", "favor", "the", "projection-free", "Frank-Wolfe", "(FW)", "method.", "As", "expected,", "the", "overall", "best", "performing", "approach", "is", "actually", "a", "hybrid", "of", "GP", "and", "FW.", "We", "summarize", "both", "choices", "below.", "3.2.1", "Efficient", "projection", "onto", "the", "\u00a3,-ball", "The", "problem", "of", "projecting", "onto", "the", "\u00a3,-norm", "ball", "is", "min", "d(w)", ":=", "$||w\u2014ull5,", "s.t.", "|jwl|g", "<A.", "(3.9)", "For", "this", "problem,", "it", "turns", "out", "to", "be", "more", "convenient", "to", "address", "its", "Fenchel", "dual", "ming", "d*(w)", "=", "$||w", "\u2014", "ull5", "+", "Allwllp,", "(3.10)", "which", "is", "actually", "nothing", "but", "prox", "Alli", "(M4)", "The", "optimal", "solution,", "say", "w*,", "to", "(3.9)", "can", "be", "obtained", "by", "solving", "(3.10),", "by", "using", "the", "Moreau-decomposition", "(A.6)", "which", "yields", "w*", "=uU\u2014", "PTOX)", "|.)", "(W).", "15", "Projection", "(3.9)", "is", "computed", "many", "times", "within", "GP,", "so", "it", "is", "crucial", "to", "solve", "it", "rapidly", "and", "accurately.", "To", "this", "end,", "we", "first", "turn", "(3.10)", "into", "a", "differentiable", "problem", "and", "then", "derive", "a", "projected-Newton", "method", "following", "our", "approach", "presented", "in", "Appendix", "E.", "Assume", "therefore,", "without", "loss", "of", "generality", "that", "w", ">", "0,", "so", "that", "w", ">", "0", "also", "holds", "(the", "signs", "can", "be", "restored", "after", "solving", "this", "problem).", "Thus,", "instead", "of", "(3.10),", "we", "solve", "ming", "d*(w)", "=", "$])w", "\u2014", "ull}", "+", "(>", "wy)?", "st", "w", ">", "0.", "(3.11)", "The", "gradient", "of", "d*", "may", "be", "compactly", "written", "as", "Vd*(w)", "=", "w\u2014", "ut", "Aljwl|>", "Pw?", "?,", "(3.12)", "where", "w?~1!", "denotes", "elementwise", "exponentiation", "of", "w.", "Elementary", "calculation", "yields", "wie", "U", "(w)", "=", "64j(1+", "Mp\u2014", "1)", "(qe)?", "Leolp)", "+", "AC", "PEE)?", "GREY", "ally!", "=", "6:5", "(1", "_", "cw?", "*)", "+", "cW;W;,", "where", "\u00a2", "=", "\\(1", "\u2014", "p)||w||51,", "@", "=", "w/||wl|p,", "\u00ae", "=", "(w/||w||,)?~!,", "and", "6,;", "is", "the", "Dirac", "delta.", "In", "matrix", "notation,", "this", "Hessian\u2019s", "diagonal", "plus", "rank-1", "structure", "becomes", "apparent", "H(w)", "=", "Diag(1", "\u2014", "ew?)", "+", "cw", "w\"", "(3.13)", "To", "develop", "an", "efficient", "Newton", "method", "it", "is", "imperative", "to", "exploit", "this", "structure.", "It", "is", "not", "hard", "to", "see", "that", "for", "a", "set", "of", "non-active", "variables", "J", "the", "reduced", "Hessian", "takes", "the", "form", "Hy(w)", "=", "Diag(1", "\u2014", "cw?)", "+", "ewyw7.", "(3.14)", "With", "the", "shorthand", "A", "=", "Diag", "(1", "\u2014", "cw?)", ",", "the", "matrix-inversion", "lemma", "yields", "AW", "tcp", "piw7", "At", "-1", "_", "\u2014", "\u2014T\\-1_", "a-1", "HH", "(w)", "=", "(A+", "cwyw;", ")", "=A", "Ty", "eA,", "(3.15)", "Furthermore,", "since", "in", "PN", "the", "inverse", "of", "the", "reduced", "Hessian", "always", "operates", "on", "the", "reduced", "gradient,", "we", "can", "rearrange", "the", "terms", "in", "this", "operation", "for", "further", "efficiency;", "that", "is,", "(v", "\u00a9", "wz)", "(v", "\u00a9", "wr)\u2019", "Vrf(w)", "1/c+", "w;(v", "\u00a9", "w;)", "H,(w)", "'V7f(w)", "=", "0", "\u00a9", "Vrf(w)", "\u2014", ";", "(3.16)", "~p\u2014-2\\\u20141", ".", "where", "v", ":=", "(1", "\u2014", "ewe", "*)", ",", "and", "\u00a9", "denotes", "componentwise", "product.", "The", "relevant", "point", "of", "the", "above", "derivations", "is", "that", "the", "Newton", "direction,", "and", "thus", "the", "overall", "PN", "iteration", "can", "be", "computed", "in", "O(n)", "time,", "which", "results", "in", "a", "highly", "effective", "solver.", "3.2.2", "Frank-Wolfe", "algorithm", "for", "TV-L,", "proximity", "The", "Frank-Wolfe", "(FW)", "algorithm", "(see", "e.g.,", "[42]", "for", "a", "recent", "overview),", "also", "known", "as", "the", "conditional", "gradient", "method", "[15]", "solves", "differentiable", "optimization", "problems", "over", "compact", "convex", "sets,", "and", "can", "be", "quite", "effective", "if", "we", "have", "access", "to", "a", "subroutine", "to", "solve", "linear", "problems", "over", "the", "constraint", "set.", "The", "generic", "FW", "iteration", "is", "illustrated", "in", "Algorithm", "6.", "FW", "offers", "an", "attractive", "strategy", "for", "TV-L,", "because", "both", "the", "descent-direction", "as", "well", "as", "stepsizes", "can", "be", "computed", "easily.", "Specifically,", "to", "find", "the", "descent", "direction", "we", "need", "to", "solve", "ming", "s\u2019(DD'u\u2014Dy),", "st.", "||sl\\g", "<..", "(3.17)", "This", "problem", "can", "be", "solved", "by", "observing", "that", "max)", ",))<1", "s'", "z", "is", "attained", "by", "some", "vector", "s", "proportional", "to", "z,", "of", "the", "form", "|s*|", "x", "|z|?~+.", "Therefore,", "s*", "in", "(3.17)", "is", "found", "by", "taking", "z", "=", "DD?u", "\u2014", "Dy,", "computing", "s", "=", "\u2014sgn(z)", "\u00a9", "|z|\u2019", "*", "and", "then", "rescaling", "s", "to", "meet", "\\|Sl|q", "=.", "16", "Algorithm", "6", "Frank-Wolfe", "(FW)", "Inputs:", "f{,", "compact", "convex", "set", "D.", "Initialize", "x", "\u20ac", "D,t", "=", "0.", "while", "stopping", "criteria", "not", "met", "do", "Find", "descent", "direction:", "min,", "s", "-", "V", "f(a)", "s.t.", "\u00a2", "\u20ac", "D.", "Determine", "stepsize:", "min,", "f(a;", "+", "y(s", "\u2014", "a\u00a2))", "s.t.", "y", "\u20ac", "[0,", "1].", "Update:", "a441", "=", "a,", "+", "y(s", "\u2014", "x4)", "tc\u2014t+l.", "end", "while", "return", "x;.", "The", "stepsize", "can", "also", "be", "computed", "in", "closed", "form", "owing", "to", "the", "objective", "function", "being", "quadratic.", "Note", "the", "update", "in", "FW", "takes", "the", "form", "u", "+", "y(s", "\u2014", "uw),", "which", "can", "be", "rewritten", "as", "u", "+", "yd", "with", "d", "=", "s", "\u2014", "wu.", "Using", "this", "notation", "the", "optimal", "stepsize", "is", "obtained", "by", "solving", ".", "T", "min,e(o,1)", "5||D*", "(w+", "7d)|3", "\u2014", "(w+", "yd)\"", "Dy.", "A", "brief", "calculation", "on", "the", "above", "problem", "yields", "y\"", "=", "min", "{max", "{7,1}", ",0},", "where", "\u00a5", "=", "\u2014(d?DD?u", "+", "d?", "Dy)/(d?", "DD\"", "d)", "is", "the", "unconstrained", "optimal", "stepsize.", "We", "note", "that", "following", "[42]", "we", "also", "check", "a", "\u201csurrogate", "duality-gap\u201d", "g(a)", "=", "a7", "V", "f(a)", "\u2014", "mins\u2019", "V", "f(x)", "=", "(w", "\u2014", "s*)\"", "Vf", "(a),", "sED", "at", "the", "end", "of", "each", "iteration.", "If", "this", "gap", "is", "smaller", "than", "the", "desired", "tolerance,", "the", "real", "duality", "gap", "is", "computed", "and", "checked;", "if", "it", "also", "meets", "the", "tolerance,", "the", "algorithm", "stops.", "3.3.", "Prox", "operator", "for", "TV-L.,.", "The", "final", "case", "is", "Tv", "proximity.", "We", "mention", "this", "case", "only", "for", "completeness.", "The", "dual", "to", "the", "prox-operator", "here", "is", "min,", "$||D?ul|}", "\u2014u?", "Dy,", "s.t.", "|jul],", "<A.", "(3.18)", "This", "problem", "can", "be", "again", "easily", "solved", "by", "invoking", "GP,", "where", "the", "only", "non-trivial", "step", "is", "projection", "onto", "the", ",-ball.", "But", "the", "latter", "is", "an", "extremely", "well-studied", "operation", "(see", "e.g.,", "[48,", "58]),", "and", "so", "O(7)", "time", "routines", "for", "this", "purpose", "are", "readily", "available.", "By", "integrating", "them", "in", "our", "GP", "framework", "an", "efficient", "prox", "solver", "is", "obtained.", "4", "Prox", "operators", "for", "multidimensional", "TV", "We", "now", "move", "onto", "discussing", "how", "use", "the", "efficient", "1D-TV", "prox", "operators", "derived", "above", "within", "a", "prox-splitting", "framework", "to", "handle", "multidimensional", "TV", "(1.3)", "proximity.", "4.1", "Proximity", "stacking", "The", "basic", "composite", "objective", "(1.1)", "is", "a", "special", "case", "of", "the", "more", "general", "class", "of", "models", "where", "one", "may", "have", "several", "regularizers,", "so", "that", "we", "now", "solve", "ming", "f(#)", "+0\"", "rile),", "(4.1)", "17", "where", "each", "r;", "(for", "1", "<2", "<", "m)", "is", "Isc", "and", "convex.", "Just", "like", "the", "basic", "problem", "(1.1),", "the", "more", "complex", "problem", "(4.1)", "can", "also", "be", "tackled", "via", "proximal", "methods.", "The", "key", "to", "doing", "so", "is", "to", "use", "inexact", "proximal", "methods", "along", "with", "a", "technique", "we", "should", "call", "proximity", "stacking.", "Inexact", "proximal", "methods", "allow", "one", "to", "use", "approximately", "computed", "prox", "operators", "without", "impeding", "overall", "convergence,", "while", "proximity", "stacking", "allows", "one", "to", "compute", "the", "prox", "operator", "for", "the", "entire", "sum", "r(a@)", "=", "57\",", "r;(a)", "by", "\u201cstacking\u201d", "the", "individual", "r;", "prox", "operators.", "This", "stacking", "leads", "to", "a", "highly", "modular", "design;", "see", "Figure", "6", "for", "a", "visualization.", "In", "other", "words,", "proximity", "stacking", "involves", "computing", "the", "prox", "operator", "prox,(y)", "=argmin", "}|e\u2014yl|3+", "2\"", "ri(w),", "(4.2)", "by", "iteratively", "invoking", "the", "individual", "prox", "operators", "prox,,", "and", "then", "combining", "their", "outputs.", "This", "mixing", "is", "done", "by", "means", "of", "a", "combiner", "method,", "which", "guarantees", "convergence", "to", "the", "solution", "of", "the", "overall", "prox,.(y).", "Proximal", "method", "Figure", "6:", "Design", "schema", "in", "proximal", "optimization", "for", "minimizing", "the", "function", "f(a)", "+", "577\".", "ri(a).", "Proximal", "stacking", "makes", "the", "sum", "of", "regularizers", "appear", "as", "a", "single", "one", "to", "the", "proximal", "method,", "while", "retaining", "modularity", "in", "the", "design", "of", "each", "proximity", "step", "through", "the", "use", "of", "a", "combiner", "method.", "For", "non-smooth", "f", "the", "same", "schema", "applies", "by", "just", "replacing", "the", "f", "gradient", "operator", "by", "its", "corresponding", "proximity", "operator.", "Different", "proximal", "combiners", "can", "used", "for", "computing", "prox,.", "(4.2).", "In", "what", "follows", "we", "briefly", "describe", "some", "of", "the", "possibilities.", "The", "crux", "of", "all", "of", "them", "is", "that", "their", "key", "steps", "will", "be", "proximity", "steps", "over", "the", "individual", "7;", "terms.", "Thus,", "using", "proximal", "stacking", "and", "combination,", "any", "convex", "machine", "learning", "problem", "with", "multiple", "regularizers", "can", "be", "solved", "in", "a", "highly", "modular", "proximal", "framework.", "After", "this", "section", "we", "exemplify", "these", "ideas", "by", "applying", "them", "to", "two-", "and", "higher-dimensional", "TV", "proximity,", "which", "we", "then", "use", "within", "proximal", "solvers", "for", "addressing", "a", "wide", "array", "of", "applications.", "4.1.1", "Proximal", "Dykstra", "(PD)", "The", "Proximal", "Dykstra", "method", "[27]", "solves", "problems", "of", "the", "form", "min", "5||%", "\u2014yll>", "+", "ri(w)", "+", "1ro(a),", "which", "is", "a", "particular", "case", "of", "(4.2)", "form", "=", "2.", "The", "method", "follows", "the", "procedure", "detailed", "in", "Algorithm", "7,", "which", "is", "guaranteed", "to", "converge", "to", "the", "desired", "solution.", "Using", "PD", "for", "proximal", "stacking", "for", "2D", "Total-Variation", "was", "previously", "proposed", "in", "[8].", "It", "has", "also", "been", "shown", "that", "the", "application", "of", "this", "method", "is", "equivalent", "to", "performing", "alternating", "projections", "onto", "certain", "dual", "polytopes", "[43],", "a", "procedure", "whose", "effectiveness", "varies", "depending", "on", "the", "relative", "orientation", "of", "such", "polytopes.", "A", "more", "efficient", "method", "based", "on", "reflections", "instead", "of", "projections", "is", "possible,", "as", "we", "will", "see", "below.", "More", "generally,", "if", "more", "than", "two", "regularizers", "are", "present", "(i.e.,", "7m", ">", "2),", "then", "it", "is", "more", "fitting", "to", "use", "Parallel-Proximal", "Dykstra", "(PPD)", "[26]", "(see", "Alg.", "8),", "a", "generalization", "obtained", "via", "the", "\u201cproduct-space", "trick\u201d", "of", "Pierra", "[69].", "This", "parallel", "proximal", "method", "is", "attractive", "because", "it", "not", "only", "combines", "an", "arbitrary", "number", "of", "18", "Algorithm", "7", "Proximal", "Dykstra", "Inputs:", "71,", "r2,", "input", "signal", "y", "\u20ac", "IR\u201d.", "Initialize", "xo", "=", "y,", "po", "=", "Qo", "=", "0,", "t", "=", "0.", "while", "stopping", "criteria", "not", "met", "do", "rg", "proximity", "operator:", "2;", "\u2014", "prox,.,", "(az", "+", "pr).", "rg", "Step:", "Pepi", "=", "Le", "+", "Pe", "\u2014", "%.", "ry", "proximity", "operator:", "#41", "=", "prox,", "(2", "+", "qt).", "ry,", "step:", "Ge41", "=", "21", "+", "Qt", "\u2014", "Ve41.", "t<ct4+l1.", "end", "while", "Return", "x;.", "Algorithm", "8", "Parallel-Proximal", "Dykstra", "Inputs:", "71,...,", "7,", "input", "signal", "y", "\u20ac", "R\u201d.", "Initialize", "ao", "=", "y,", "2", "=", "0,", "fori", "=1,...,m;t=0", "while", "stopping", "criterion", "not", "met", "do", "for", "1", "=", "1", "to", "m", "in", "parallel", "do", "Pi,", "=", "prox,,,", "(24)", "end", "for", "@41", "=", "-", "Dy", "Pi", "for", "1", "=", "1", "to", "m", "in", "parallel", "do", "21", "=", "E41", "+", "2;", "\u2014", "Dh", "end", "for", "t<-t+l", "end", "while", "Return", "x;", "regularizers,", "but", "also", "allows", "parallelizing", "the", "calls", "to", "the", "individual", "prox", "operators.", "This", "feature", "allows", "us", "to", "develop", "a", "highly", "parallel", "implementation", "for", "multidimensional", "TV", "proximity", "(84.3).", "4.1.2", "Alternating", "reflections", "\u2014", "Douglas-Rachford", "(DR)", "The", "Douglas-Rachford", "(DR)", "method", "was", "originally", "devised", "for", "minimizing", "the", "sum", "of", "two", "(nonsmooth)", "convex", "functions", "[27],", "in", "the", "form:", "min", "fi", "(a)", "+", "fe", "(a),", "(4.3)", "such", "that", "(ri", "dom", "f,)", "M", "(ri", "dom", "fo)", "4", "@.", "The", "method", "operates", "by", "iterating", "a", "series", "of", "reflections,", "and", "in", "its", "simplest", "form", "can", "be", "written", "as", "Zrii", "=", "a", "[Rp", "Rp,", "+1)", "20,", "(4.4)", "where", "the", "reflection", "operator", "Ry", ":=", "2", "prox,", "\u2014I.", "This", "method", "is", "not", "cleanly", "applicable", "to", "problem", "(4.2)", "because", "of", "the", "squared", "norm", "term.", "Nevertheless", "in", "[43]", "a", "suitable", "transformation", "was", "proposed", "by", "making", "use", "of", "arguments", "from", "submodular", "optimization;", "a", "minimal", "background", "on", "this", "topic", "is", "given", "in", "Appendix", "A.", "We", "summarize", "the", "key", "ideas", "from", "[43]", "below.", "Assume", "m", "=", "2", "and", "r1,", "rg", "being", "Lovasz", "extensions", "to", "some", "submodular", "functions", "(Total-Variation", "is", "the", "Lovasz", "extension", "of", "a", "submodular", "graph-cut", "problem,", "see", "[5]).", "Defining", "#,(x)", "=", "r,(x)", "\u2014", "x7", "y,", "?,", "is", "also", "a", "Lovasz", "extension", "of", "some", "submodular", "function", "(see", "Appendix", "A).", "Therefore,", "we", "may", "consider", "the", "problem", "prox,(y)", "=", "argmin", "5|\\a|/>", "+", "71(w)", "+", "ro(a),", "x", "19", "which", "can", "be", "rewritten", "(using", "Proposition", "A.11)", "as", "min", "la\u2014", "Olle,", "st", "ae\u2014B,,b\u20acB,,,", "(4.5)", "where", "B,", "denotes", "the", "base", "polytope", "of", "submodular", "function", "corresponding", "to", "r", "(see", "Appendix", "A).", "The", "original", "solution", "can", "be", "recovered", "through", "\u00ab", "=", "a", "\u2014", "b.", "Problem", "(4.5)", "is", "still", "not", "in", "a", "form", "amenable", "to", "DR", "(4.3)\u2014nevertheless,", "if", "we", "apply", "DR", "to", "the", "indicator", "functions", "of", "the", "sets", "\u20145;,,", "B,,,", "that", "is,", "to", "the", "problem", "min", "6_p,,", "(#)", "+", "dp,,", "(#),", "it", "can", "be", "shown", "[12]", "that", "the", "sequence", "(4.4)", "generated", "by", "DR", "is", "divergent,", "but", "that", "after", "a", "correction", "through", "projection", "converges", "to", "the", "desired", "solution", "of", "(4.5).", "Such", "solution", "is", "given", "by", "the", "pair", "b=", "Us,.,", "(x),", "a=", "H_s,.,", "(b).", "(4.6)", "Although", "in", "this", "derivation", "many", "concepts", "have", "been", "introduced,", "suprisingly", "all", "the", "operations", "in", "the", "algorithm", "can", "be", "reduced", "to", "performing", "proximity", "steps.", "Note", "first", "that", "the", "projections", "onto", "a", "base", "polytope", "required", "to", "get", "a", "solution", "(4.6)", "can", "be", "written", "in", "terms", "of", "proximity", "operators", "(Proposition", "A.12),", "which", "in", "this", "case", "implies", "Ip,,", "(2)", "=z", "\u2014", "prox,", "(2),", "I_p,,", "(2)", "=", "2", "+", "prox,,(\u2014z)", "=", "2", "+", "prox,", "(2", "+9),", "where", "we", "use", "the", "fact", "that", "for", "f(a)", "=", "\u00a2(a)", "+", "wu\u2019", "a,", "prox", "(a)", "=", "prox,(a#", "\u2014", "u).", "The", "reflection", "operations", "in", "which", "the", "DR", "iteration", "is", "based", "(4.4)", "can", "also", "be", "written", "in", "terms", "of", "proximity", "steps,", "as", "we", "are", "applying", "DR", "to", "the", "indicator", "functions", "d_,.,", "6,.,,", "and", "proximity", "for", "an", "indicator", "function", "equals", "projection.", "This", "alternating", "reflections", "variant", "of", "DR", "is", "presented", "in", "Algorithm", "9.", "Note", "that", "in", "contrast", "with", "the", "original", "DR", "method,", "this", "variant", "does", "not", "require", "tuning", "any", "hyperparameters,", "thus", "enhancing", "its", "practicality.", "Algorithm", "9", "Alternating", "reflections", "-", "Douglas", "Rachford", "(DR)", "Inputs:", "7,", "rz", "Lovasz", "extensions", "of", "some", "submodular", "function,", "input", "signal", "y", "\u20ac", "R\u201d.", "Initialize", "z9", "\u20ac", "R\u201d,\u00a2", "=", "0.", "Define", "the", "following", "operations:", "IL_p,,", "(2)", "\u201c2", "+", "prox,,(-2", "+", "y).", "def", "Up,,,", "(2)", "=", "2%", "\u2014prox,,(z).", "R_p,,", "(2)", "\u00a9", "2U_p,,", "(2)", "\u2014z.", "Rp,,(2)", "\u00a9", "2p,", "(2)", "\u2014z.", "while", "stopping", "criteria", "not", "met", "do", "Zt41", "=", "4", "[R_B,,", "Re,", "+", "q|", "Zk", "tc\u2014t+l.", "end", "while", "b=", "Ilz,.,", "(44),", "a=Il_s,,", "(b).", "Return", "z*", "=", "a", "\u2014", "b.", "4.1.3", "Alternating-Direction", "Method", "of", "Multipliers", "(ADMM)", "Although", "many", "times", "presented", "as", "a", "particular", "algorithm", "for", "solving", "problems", "involving", "the", "minimization", "of", "a", "certain", "objetive", "f(a)", "+", "g(", "Lx)", "with", "L", "a", "linear", "operator", "[27],", "the", "Alternating-Direction", "Method", "of", "Multipliers", "can", "be", "thought", "as", "general", "splitting", "strategy", "for", "solving", "the", "unconstrained", "minimization", "of", "a", "sum", "of", "functions.", "This", "strategy", "boils", "down", "to", "transforming", "a", "problem", "in", "the", "form", "min,", "aa", "f;(a)", "into", "a", "saddle-point", "problem", "20", "Algorithm", "10", "Alternating", "Direction", "Method", "of", "Multipliers", "(ADMM)", "Inputs:", "r1,...,", "7m,", "input", "signal", "y", "\u20ac", "IR\u201d.", "Initialize", "xy", "=", "2),", "=", "y", "fori", "=1,...,m;t=0", "while", "stopping", "criterion", "not", "met", "do", "yrds", "(ute)", "Lt.", "=", "Timp", "for", "1", "=", "1", "to", "m", "in", "parallel", "do", "Zz", "=", "proxa,,,(\u20145", "Ut", "+", "L141)", ".", "ep", ".", "Uigy", "=", "Utes", "+", "P(Z", "44", "\u2014", "Bes)", "end", "for", "t<t+4+1", "end", "while", "Return", "x;", "by", "introducing", "consensus", "constraints", "and", "incorporating", "them", "into", "the", "objective", "through", "augmented", "Lagrange", "multipliers,", "m", "m", "min", "S", "fi(vz)=", "min", "S", "file;)", "st", "21=@,...,2m", "=,", "we", "mm", "i=l", "i=l", "\u00a9,", "Z1,.--,", "z", "~", "p", "=", "min", "max", ")", "(file)", "+", "uP", "(@:", "\u2014", "2)", "+", "Sz;", "\u2014", "2/2)", ".", "DZ", "1", "5--+5", "2m", "Uls--+5", "Um", "j=l", "2", "The", "method", "then", "proceeds", "to", "solve", "this", "problem", "by", "alternating", "steps", "of", "minimization", "on", "x,", "minimization", "on", "every", "2;,", "and", "a", "gradient", "step", "on", "every", "2;.", "In", "[95]", "a", "proposal", "using", "this", "method", "was", "presented", "to", "solve", "m\u2014dimensional", "anisotropic", "TV", "(1.3).", "This", "approach", "applies", "equally", "to", "the", "more", "general", "proximal", "stacking", "framework", "under", "discussion", "here", "(4.2),", "by", "the", "transformation", "m", "prox,(y)", ":=argmin", "$|\\a", "\u2014", "yll5", "+", "et", "r(x),", "x", "m", "=", "\u2018", "T", "p", "=", "nim,", "max", "sla", "\u2014", "wl", "+0", "(hla)", "teller", "\u20142)", "+", "bles).", "\u2014", "The", "steps", "for", "obtaining", "a", "solution", "then", "follow", "as", "Algorithm", "10.", "Similar", "to", "Parallel", "Proximal", "Dykstra,", "this", "approach", "allows", "computing", "the", "prox-operator", "of", "each", "function", "7;", "in", "parallel.", "4.1.4", "Dual", "proximity", "methods", "Another", "family", "of", "approaches", "to", "solve", "(4.2)", "is", "to", "compute", "the", "global", "proximity", "operator", "using", "the", "Fenchel", "duals", "prox,..", "This", "can", "be", "advantageous", "in", "settings", "where", "dual", "prox-operator", "is", "easier", "to", "compute", "than", "the", "primal", "operator;", "isotropic", "Total-", "Variation", "problems", "are", "an", "instance", "of", "such", "a", "setting,", "and", "thus", "investigating", "this", "approach", "for", "their", "anisotropic", "variants", "is", "worthwhile.", "Indeed,", "in", "the", "context", "of", "image", "processing", "a", "popular", "splitting", "approach", "is", "given", "by", "Chambolle", "and", "Pock", "[22],", "which", "consider", "a", "problem", "in", "the", "form", "min", "F(Kka)+G(a),", "for", "KC", "some", "linear", "operator,", "F\u2019,G", "convex", "lower-semicontinuous", "functions.", "Through", "a", "strategy", "similar", "to", "ADMM", "an", "equivalent", "saddle", "point", "problem", "can", "be", "obtained,", "minmax", "(Ka)", "y+G(a)\u2014", "F*(y),", "ey", "21", "with", "F\u2019*", "convex", "conjugate", "of", "F\u2019.", "This", "problem", "is", "then", "solved", "by", "alternating", "maximization", "on", "y", "and", "minimiza-", "tion", "on", "x", "through", "proximity", "steps,", "as", "Yt+1", "=", "Proxy", "px", "(Yt", "+", "COKE)", "E141", "=", "prox,g(#_", "\u2014", "TK", "yt41)", "Bip.", "=", "Ce", "+", "O(@ey1", "\u2014", "#4),", "where", "K\u2122", "is", "the", "conjugate", "transpose", "of", "Kk.", "0,", "7", "and", "@", "are", "algorithm", "parameters", "that", "should", "be", "either", "selected", "under", "some", "bounds", "[22,", "Algorithm", "1]", "or", "readjusted", "every", "iteration", "making", "use", "of", "Lipschitz", "convexity", "of", "G", "(22,", "Algorithm", "2],", "resulting", "in", "an", "accelerating", "scheme", "much", "in", "the", "style", "of", "FISTA", "[13].", "The", "overall", "procedure", "can", "also", "be", "shown", "to", "be", "an", "instance", "of", "preconditioned", "ADMM,", "where", "the", "preconditioning", "is", "given", "by", "the", "application", "of", "a", "proximity", "step", "for", "the", "maximization", "of", "y", "(instead", "of", "the", "usal", "dual", "gradient", "step", "of", "ADMM)", "and", "the", "auxiliary", "point", "%.", "Note", "also", "how", "proximity", "is", "computed", "over", "the", "dual", "F'*", "instead", "of", "the", "primal", "prox", "p.", "Now,", "this", "decomposition", "strategy", "can", "be", "applied", "for", "some", "instances", "of", "proximal", "stacking", "(4.2)", "when", "the", "r;", "terms", "allow", "the", "particular", "composition", "m", "Ky", "Sen)", "=F", "|]:", "|e]", "=", "Puce),", "al", "Ky,", "which", "does", "not", "hold", "in", "general", "but", "holds", "for", "2D", "TV", "(1.4)", "when", "taking", "the", "identities", "F(@)", "=", "|\\a||1,G(@)", "=", "5", "||", "\u2014", "ys,", "TaD", "K-", "|e)", "with", "D", "the", "differencing", "matrix", "as", "before,", "\u00ae", "denotes", "Kronecker", "product,", "and", "&", "a", "vectorization", "of", "the", "2D", "input.", "The", "iterates", "above", "can", "then", "be", "applied", "easily:", "proximity", "over", "G", "is", "trivial", "and", "proximity", "over", "F\u2122", "is", "also", "easy", "upon", "realizing", "that", "PLOX.)x", "=", "PLOXs)", ")", "=", "Tl).\\|..<1,", "which", "is", "solved", "through", "thresholding.", "A", "generalization", "of", "this", "approach", "is", "presented", "by", "Condat", "[29],", "who", "considers", "m", "min", "f(a)", "+", "g(a)", "+)", "ri(Lia),", "al", "a", "problem", "that", "cleanly", "fits", "into", "(4.2)", "with", "f(a)", "=", "4||a", "\u2014", "y||3,", "g(@)", "=", "0,", "L", "=", "I.", "The", "procedure", "to", "find", "a", "solution", "is", "proposed", "as", "m", "gt", "PIX,", "9", "(=", "\u2014TV", "f(a\")", "\u20147+", "S-", "tx!)", "i=l", "np", "=", "pe", "+", "(1\u2014", "pat", "ait", "=", "PTOX", "5p,", "(ut", "+", "oD;", "(28444", "_", "z))", "Vi=", "1,", "--+,\u2122M,", "ult!", "=", "pult'", "+", "(1\u2014", "p)ut", "Vi=1,...,m,", "for", "7,", "p", "parameters", "of", "the", "algorithm.", "When", "applying", "this", "procedure", "to", "2D", "TV", "(m", "=", "2,", "r1(a)", "=", "proximity", "over", "rows,", "7'2(a)", "=", "proximity", "over", "columns)", "an", "algorithm", "almost", "equivalent", "to", "Chambolle", "and", "Pock", "[22]", "is", "obtained,", "the", "only", "difference", "being", "that", "here", "the", "gradient", "of", "f", "is", "used,", "instead", "of", "the", "prox,", "operation.", "22", "Finally,", "another", "related", "method", "is", "the", "splitting", "approach", "of", "Kolmogorov", "et", "al", "[51],", "which", "form", "=", "2", "performs", "the", "following", "splitting:", "min", "5", "||%", "\u2014yll2", "+", "ri(w)", "+", "ro(w),", "=min", "|ja\u2014ylls+ri(w)+ro(a\u2019)", "sta=a',", "wa", "=min", "max", "||", "ax", "\u2014", "yl|2", "+", "ri(@)", "+", "ro(a\u2019)", "+", "27", "(a", "\u2014", "2\u2019),", "wel", "2", "=minmax", "|ja", "\u2014", "y|/3", "+", "ri(a)\u2014", "r3(z)", "+", "az.", "x", "z", "where", "we", "have", "made", "use", "of", "the", "Fenchel", "dual", "r3(z)", "=", "max,\u2019", "27x!", "\u2014", "ro(x\u2019).", "This", "problem", "can", "be", "solved", "through", "a", "primal-dual", "minimization:", "gitt", "\u2014", "PIOX", "gt", "ps", "(2'", "+", "0\u00b0", "(a", "+", "O(a\"", "\u2014", "a", "))),", "t+1", "_", "t", "t,t+1", "xz", "=", "PPOX,\u00a3(|).-y", "2471)", "(x", "\u2014-T", "Zz", ")", ".", "The", "primal", "proximity", "operator", "over", "the", "squared", "norm", "term", "plus", "r;", "can", "be", "rewritten", "in", "terms", "of", "prox,,", "as", "1+7t", "2", "=", "prox(yy7\u20141)-1,,", "(CL", "+", "tT\")", "M(y", "+7", "lw)).", "jet\")", "y+", "tw)|l3,", "pr", "(w)", "=", "argmin", "ry", "(a)", "+", "\u2018OX", "1", "r(ra+5", "||", "ull)", "Regarding", "the", "dual", "step,", "in", "the", "previously", "presented", "methods", "the", "decompositions", "allowed", "to", "disentangle", "the", "effect", "of", "a", "linear", "operator", "L;", "from", "each", "r;.", "The", "present", "decomposition,", "however,", "does", "not", "take", "into", "account", "this", "possibility,", "thus", "increasing", "the", "complexity", "of", "computing", "73.", "To", "address", "this", "difficulty", "the", "Moreau", "decomposition", "(A.3)", "is", "helpful,", "as", "_", ".", "o", "1,12", "prox,,\u00ab", "(w)", "=", "w\u2014o", "|", "argminr2(@)", "+", "ple", "\u2014o", "~wil5),", "x", "=w\u2014oprox,-1,,(0", "'w),", "thus", "solving", "the", "dual", "proximity", "operator", "in", "terms", "of", "the", "primal", "prox,.,.", "Regarding", "the", "algorithm", "parameters", "0,", "7", "and", "o,", "they", "can", "be", "adjusted", "at", "every", "iteration", "for", "greater", "performance", "making", "use", "of", "Lipschitz", "convexity", "[23].", "4.2", "Two-dimensional", "TV", "Recall", "that", "for", "a", "matrix", "X", "\u20ac", "IR\"!*\u201d*,", "the", "anisotropic", "2D-TV", "regularizer", "takes", "the", "form", "2", "ny", "ng-l1", "1/p", "na", "ni-l", "1/q", "TV;,,q(X)", "=", "an", "Oo", "lei", "gra", "\u2014", "iy", ")", "+", "Oe,", "|Pitaj", "\u2014", "I\")", ".", "(4.7)", "This", "regularizer", "applies", "a", "Typ?", "regularization", "over", "each", "row", "of", "X,", "and", "a", "Tv,>", "regularization", "over", "each", "column.", "Introducing", "differencing", "matrices", "D,,", "and", "D,,,", "for", "the", "row", "and", "column", "dimensions,", "the", "regularizer", "(4.7)", "can", "be", "rewritten", "as", "2D", "_", "n", "m", "TplX)", "=D)", "Dneiclly", "+),", "lDmasilla", "(4.8)", "where", "2;", ",", "denotes", "the", "7-th", "row", "of", "X,", "and", "x.", ";", "its", "j-th", "column.", "The", "corresponding", "Tv,", "-proximity", "problem", "is", "minx", "$||X", "\u2014", "\u00a5", "jp", "+", "ATv,2,(X),", "(4.9)", "where", "we", "use", "the", "Frobenius", "norm", "||X||p", "=", "\\/)7;;", "rj;", "=", "||vec(X)||2,", "where", "vec(X)", "is", "the", "vectorization", "of", "X.", "Using", "(4.8),", "problem", "(4.9)", "becomes", "minx", "|X", "\u2014\u00a51R+A", "(YD,", "Dnaiclp)", "+\u00a5(2,", "Dmaslla)", "(4.10)", "23", "where", "the", "parentheses", "make", "explicit", "that", "Typ", "is", "a", "combination", "of", "two", "regularizers:", "one", "acting", "over", "the", "rows", "and", "the", "other", "over", "the", "columns.", "Formulation", "(4.10)", "fits", "the", "model", "solvable", "by", "the", "strategies", "presented", "above,", "though", "with", "an", "important", "difference:", "each", "of", "the", "two", "regularizers", "that", "make", "up", "Typ", "is", "itself", "composed", "of", "a", "sum", "of", "several", "(n", "or", "7m)", "1D-TV", "regularizers.", "Moreover,", "each", "of", "the", "1D", "row", "(column)", "regularizers", "operates", "on", "a", "different", "row", "(columns),", "and", "can", "thus", "be", "solved", "independently.", "4.3", "Higher-dimensional", "TV", "Going", "even", "beyond", "Tv", "is", "the", "general", "multidimensional", "TV", "(1.3),", "which", "we", "recall", "below.", "Let", "X", "be", "an", "order-m", "tensor", "in", "IRI", "j=1", ",", "whose", "components", "are", "indexed", "as", "X", "im", "(1", "<4;", "<n,", "for", "1", "<4", "<m);", "we", "define", "TV", "for", "X", "as", "V1", "12,006,", "Ne\u2014-l1", "m", "def", "\u201c", "De", "1/P", "Tv,", "(X)", "\u2014", "S-", "S-", "(>", "IXis", "sig", "ead", "tlie", "pees", "tm", "\u2014", "Xin", "sin", "advins", "pores", "im|", ")", ";", "(4.11)", "k=1", "{iq,..jim}\\ix", "J=1", "where", "p", "=", "[p1,.--,Pm|", "is", "a", "vector", "of", "scalars", "p;,", ">", "1.", "This", "corresponds", "to", "applying", "a", "1D-TV", "to", "each", "of", "the", "1D", "fibers", "of", "X", "along", "each", "of", "the", "dimensions.", "Introducing", "the", "multi-index", "i(k)", "=", "(i1,..-,7n\u20141,4k41,---;%m),", "which", "iterates", "over", "every", "1-dimensional", "fiber", "of", "X", "along", "the", "k-th", "dimension,", "the", "regularizer", "(4.11)", "can", "be", "written", "more", "compactly", "as", "Tw", "=", "So,", "ie)", "|", "Dn", "Pic)", "Ile", "(4.12)", "where", "x", ";(,)", "denotes", "a", "row", "of", "X", "along", "the", "k-th", "dimension,", "and", "D,,,", "is", "a", "differencing", "matrix", "of", "appropriate", "size", "for", "the", "1D-fibers", "along", "dimension", "k", "(of", "size", "n;).", "The", "corresponding", "m-dimensional-TV", "proximity", "problem", "is", "minx", "$||X", "\u2014", "Y|lp", "+", "AT", "v(x),", "(4.13)", "where", "\\", ">", "0", "is", "a", "penalty", "parameter,", "and", "the", "Frobenius", "norm", "for", "a", "tensor", "just", "denotes", "the", "ordinary", "sum-of-", "squares", "norm", "over", "the", "vectorization", "of", "such", "tensor.", "Problem", "(4.13)", "looks", "very", "challenging,", "but", "it", "enjoys", "decomposability", "as", "suggested", "by", "(4.12)", "and", "made", "more", "explicit", "by", "writing", "it", "as", "a", "sum", "of", "Tv!\u201d", "terms", "minx", "3X", "\u2014YIF+", "So,", "|", "Sosy", "Moe", "(aay):", "(4.14)", "The", "proximity", "task", "(4.14)", "can", "be", "regarded", "as", "the", "sum", "of", "m", "proximity", "terms,", "each", "of", "which", "further", "decomposes", "into", "a", "number", "of", "inner", "Tv!\u201d", "terms.", "These", "inner", "terms", "are", "trivial", "to", "address", "since,", "as", "in", "the", "2D-TV", "case,", "each", "of", "the", "Tv!", "terms", "operates", "on", "different", "entries", "of", "X.", "Regarding", "the", "m", "major", "terms,", "we", "can", "handle", "them", "by", "applying", "any", "of", "the", "combiner", "strategies", "presented", "above", "for", "m", ">", "2,", "which", "ultimately", "yield", "the", "prox", "operator", "for", "Tv,", "by", "just", "repeatedly", "calling", "Tv!\u201d", "prox", "operators.", "Most", "importantly,", "both", "proximal", "stacking", "and", "the", "natural", "decomposition", "of", "the", "problem", "provide", "a", "vast", "potential", "for", "parallel", "multithreaded", "computing,", "which", "is", "valuable", "when", "dealing", "with", "such", "complex", "and", "high-dimensional", "data.", "5", "Experiments", "and", "Applications", "We", "will", "now", "demostrate", "the", "effectiveness", "of", "the", "various", "solvers", "covered", "in", "a", "wide", "array", "of", "experiments,", "as", "well", "as", "showing", "many", "of", "their", "practical", "applications.", "We", "will", "start", "by", "focusing", "on", "the", "TviP", "methods,", "moving", "then", "to", "other", "1D-TV", "variants,", "and", "then", "to", "multidimensional", "TV.", "All", "the", "solvers", "implemented", "for", "this", "paper", "were", "coded", "in", "C++", "for", "efficiency.", "Our", "publicy", "available", "library", "proxTV", "includes", "all", "these", "implementations,", "plus", "bindings", "for", "easy", "usage", "in", "Matlab", "or", "Python:", "https://github.com/albarji/proxT", "V.", "Matrix", "operations", "have", "been", "implented", "by", "exploiting", "the", "LAPACK", "(FORTRAN)", "library", "[3].", "24", "5.1", "Tv}?", "experiments", "and", "Applications", "Since", "the", "most", "important", "components", "of", "the", "presented", "modular", "framework", "are", "the", "efficient", "TviP", "prox", "operators,", "let", "us", "begin", "by", "highlighting", "their", "empirical", "performance.", "We", "will", "do", "so", "both", "on", "synthetic", "and", "natural", "images", "data.", "5.1.1", "Running", "time", "results", "for", "synthetic", "data", "We", "test", "the", "solvers", "under", "two", "scenarios", "of", "synthetic", "signals:", "I)", "Increasing", "input", "size", "ranging", "from", "n", "=", "10!", "ton", "=", "10\u201d.", "A", "penalty", "X", "\u20ac", "[0,50]", "is", "chosen", "at", "random", "for", "each", "run,", "and", "the", "data", "vector", "y", "with", "uniformly", "random", "entries", "y;", "\u20ac", "[\u20142A,", "2A]", "(proportionally", "scaled", "to", "A).", "Il)", "Varying", "penalty", "parameter", "\\", "ranging", "from", "10~\u00b0", "(negligible", "regularization)", "to", "10\u00b0", "(the", "TV", "term", "domi-", "nates);", "here", "7", "is", "set", "to", "1000", "and", "y;", "is", "randomly", "generated", "in", "the", "range", "[\u20142,", "2]", "(uniformly).", "TV1", "increasing", "sizes", "TV1", "increasing", "penalties", "A", "\u2014v-\u2014Projected", "Newton", "\u2014-\u2014", "Classic", "Taut-String", "\u2014v-\u2014", "Linearized", "Taut-String", "10\u00b0F", "\u2014w\u2014", "Hybrid", "Taut-String", "sot", "Condat", "Johnson", "SLEP", "ow", "Condat", "Taut-string", "soa", "Kolmogorov", "10?", "104", "10\u00b0", "Problem", "size", "Penalty", ">", "(a)", "(b)", "Figure", "7:", "Running", "times", "(in", "secs)", "for", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tv,>", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "We", "benchmark", "the", "performance", "of", "the", "following", "methods,", "including", "both", "our", "proposals", "and", "state", "of", "the", "art", "methods", "found", "in", "the", "literature:", "e", "Our", "proposed", "Projected", "Newton", "method", "(Appendix", "E).", "e", "Our", "efficient", "implementation", "of", "the", "classic", "taut", "string", "method.", "e", "Another", "implementation", "of", "the", "classic", "taut", "string", "method", "by", "Condat", "[28].", "e", "Animplementation", "of", "the", "linearized", "taut", "string", "method.", "e", "Our", "proposed", "hybrid", "taut", "string", "approach.", "e", "The", "FLSA", "function", "(C", "implementation)", "of", "the", "SLEP", "library", "of", "Liu", "et", "al.", "[59]", "for", "Tv\\P", "-proximity", "[60].", "e", "The", "state-of-the-art", "method", "of", "Condat", "[28],", "which", "we", "have", "seen", "to", "be", "equivalent", "to", "a", "linearized", "taut-string", "method.", "e", "The", "dynamic", "programming", "method", "of", "Johnson", "[45],", "which", "guarantees", "linear", "running", "time.", "e", "The", "message", "passing", "method", "of", "Kolmogorov", "et", "al", "[51],", "which", "allows", "generalization", "for", "computing", "a", "Total", "Variation", "regularizer", "on", "a", "tree.", "25", "Another", "implementation", "of", "the", "classic", "taut", "string", "method,", "found", "in", "the", "literature,", "has", "been", "added", "to", "the", "benchmark", "to", "test", "whether", "the", "implementation", "we", "have", "proposed", "is", "on", "par", "with", "the", "state", "of", "the", "art.", "We", "would", "like", "to", "note", "the", "surprising", "lack", "of", "widely", "available", "implementations", "of", "this", "method:", "the", "only", "working", "and", "efficient", "code", "we", "could", "find", "was", "part", "of", "the", "same", "paper", "where", "Condat\u2019s", "method", "was", "proposed.", "For", "Projected", "Newton", "and", "SLEP", "a", "duality", "gap", "of", "10~\u00b0", "is", "used", "as", "the", "stopping", "criterion.", "For", "the", "hybrid", "taut-string", "method", "the", "switch", "parameter", "is", "set", "as", "S", "=", "1.05.", "The", "rest", "of", "algorithms", "do", "not", "have", "parameters.", "Timing", "results", "are", "presented", "in", "Figure", "7", "for", "both", "experimental", "scenarios.", "The", "following", "interesting", "facts", "are", "drawn", "from", "these", "results", "e", "Direct", "methods", "(Taut", "string", "methods,", "Condat,", "Johnson,", "Kolmogorov)", "prove", "to", "be", "much", "faster", "than", "iterative", "methods", "(Projected", "Newton,", "SLEP).", "e", "Although", "Condat\u2019s", "(and", "hence", "linearized", "taut", "string)", "method,", "has", "a", "theoretical", "worst-case", "performance", "of", "O(n),", "the", "practical", "performance", "seems", "to", "follow", "an", "O(n)", "behavior,", "at", "least", "for", "these", "synthetic", "signals.", "e", "Even", "if", "Johnson", "and", "Kolmogorov", "methods", "have", "a", "guaranteed", "running", "time", "of", "O(n),", "they", "turn", "out", "to", "be", "slower", "than", "the", "linearized", "taut", "string", "and", "Condat\u2019s", "methods.", "This", "is", "in", "line", "with", "our", "previous", "observations", "of", "the", "cache-friendly", "properties", "of", "in-memory", "methods;", "in", "contrast", "Johnson\u2019s", "method", "requires", "an", "extra", "~", "8m", "memory", "storage.", "Kolmogorov\u2019s", "method", "has", "less", "memory", "requirements", "but", "nevetheless", "shows", "similar", "behavior.", "e", "The", "same", "performance", "observation", "applies", "to", "the", "classic", "taut", "string", "method.", "It", "is", "also", "noticeable", "that", "our", "implementation", "of", "this", "method", "turns", "out", "to", "be", "faster", "than", "previously", "available", "implementations", "(Condat\u2019s", "Taut-string),", "even", "becoming", "slightly", "faster", "than", "the", "state", "of", "the", "art", "Johnson", "and", "Kolmogorov", "methods.", "This", "result", "is", "surprising,", "and", "shows", "that", "the", "full", "potential", "of", "the", "classic", "taut-string", "method", "has", "been", "largely", "unexploited", "by", "the", "research", "community,", "or", "at", "least", "that", "proper", "efficient", "implementations", "of", "this", "method", "have", "not", "been", "made", "readily", "available", "so", "far.", "5.1.2", "Worst", "case", "scenario", "The", "point", "about", "comparing", "O(n)", "and", "O(n?)", "algorithms", "deserves", "more", "attention.", "As", "an", "illustrative", "experiment", "we", "have", "generated", "a", "signal", "following", "the", "worst", "case", "description", "in", "Condat", "[28],", "and", "tested", "again", "the", "methods", "above", "on", "it,", "for", "increasing", "signal", "lengths.", "Figure", "8", "plots", "the", "results.", "Condat\u2019s", "method", "and", "consequently", "the", "linearized", "taut", "string", "method", "shows", "much", "worse", "performance", "than", "the", "rest", "of", "the", "direct", "methods.", "It", "is", "also", "remarkable", "how", "the", "hybrid", "method", "manages", "to", "avoid", "quadratic", "runtimes", "in", "this", "case.", "5.1.3", "Running", "times", "on", "natural", "images", "In", "the", "light", "of", "the", "previous", "results", "the", "following", "question", "arises:", "in", "practical", "settings,", "are", "the", "problems", "to", "be", "solved", "closer", "to", "the", "worst", "or", "the", "average", "runtime", "scenario?", "This", "fact", "will", "determine", "whether", "the", "guaranteed", "linear", "time", "or", "the", "more", "risky", "quadratic", "methods", "are", "more", "apt", "for", "practical", "use.", "To", "test", "this", "we", "devise", "the", "following", "experiment:", "we", "take", "a", "large", "benchmark", "of", "natural", "images", "and", "run", "each", "solver", "over", "all", "the", "rows", "and", "columns", "of", "all", "the", "images", "in", "the", "set,", "counting", "total", "running", "times,", "for", "different", "regularization", "values.", "The", "benchmark", "is", "made", "from", "images", "obtained", "from", "the", "datasets", "detailed", "in", "Table", "2.", "We", "run", "this", "benchmark", "for", "the", "methods", "showing", "better", "performance", "in", "the", "experiments", "above:", "our", "implementation", "of", "the", "classic", "taut-string", "method,", "Condat\u2019s", "method", "(=", "linearized", "taut-string", "method),", "our", "proposed", "Hybrid", "taut-string", "method,", "Johnson\u2019s", "method", "and", "Kolmogorov", "et", "al\u2019s", "method.", "Figure", "9", "shows", "runtime", "results", "for", "different", "penalty", "values", "over", "the", "whole", "INRIA", "holidays", "dataset", "[44],", "while", "Figure", "10", "shows", "similar", "results", "for", "the", "whole", "Large", "Scale", "Visual", "Recognition", "Challenge", "2010", "validation", "dataset", "[77].", "The", "following", "facts", "of", "interest", "can", "be", "observed:", "e", "Condat\u2019s", "method", "(linearized", "taut-string)", "shows", "top", "performance", "for", "low", "penalty", "values,", "but", "bad", "scaling", "when", "moving", "to", "higher", "penalties.", "This", "can", "be", "explained", "using", "the", "geometric", "intuition", "developed", "above:", "26", "TV1", "Worst", "scenario", "\u2014@\u00ae\u2014", "Classic", "taut-string", "method", "_", "|", "\u2014a", "Condat's", "method", "10\u00b0\"", "|", "\u2014*\u2014", "Hybrid", "method", "\u2014@\u2014", "Johnson's", "method", "\u00bb", "...,", "|", "\u201c>", "Kolmogorov's", "method", "=", "rt", "\u2014*\u2014", "Condat's", "taut-string", "method", "xX", "1073", "4", "10~*", "5", "Signal", "length", "Figure", "8:", "Running", "times", "(in", "secs)", "for", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "TviP", "-proximity", "in", "the", "worst-case", "scenario", "for", "Condat\u2019s", "method,", "for", "increasing", "input", "sizes.", "Both", "axes", "are", "on", "a", "log-scale.", "Table", "2:", "Detail", "of", "image", "datasets", "used", "for", "large-scale", "Tv\\P", "experiments.", "Dataset", "Images", "Average", "image", "size", "INRIA", "holidays", "[44]", "812", "1817", "x", "2233", "x", "3", "px", "LSVRC", "2010", "val", "set", "[77]", "50000", "391", "x", "450", "x", "3", "px", "for", "large", "penalty", "values", "the", "width", "of", "the", "tube", "is", "very", "large,", "and", "thus", "the", "taut-string", "will", "be", "composed", "of", "very", "long", "segments.", "This", "is", "troublesome", "for", "a", "linearized", "taut-string", "method,", "as", "each", "backtrack", "will", "require", "recomputing", "a", "large", "number", "of", "steps.", "On", "the", "contrary", "for", "smaller", "penalties", "the", "tube", "will", "be", "narrow,", "and", "the", "taut-string", "composed", "of", "many", "small", "segments,", "thus", "resulting", "in", "very", "cheap", "backtracking", "costs.", "e", "The", "performance", "of", "Classic", "taut-string,", "Johnson", "and", "Kolmogorov", "becomes", "slightly", "worse", "for", "large", "penalties,", "but", "suffers", "significantly", "less", "than", "the", "linearized", "taut-string.", "Surprisingly,", "the", "best", "performing", "approach", "tends", "to", "be", "the", "classic", "taut-string", "method.", "e", "The", "proposed", "hybrid", "strategy", "closely", "follows", "the", "performance", "of", "Condat\u2019s", "method", "for", "the", "low", "penalty", "regime,", "while", "adapting", "to", "a", "behaviour", "akin", "to", "Kolmogorov", "for", "large", "penalties,", "thus", "resulting", "in", "very", "good", "performances", "over", "the", "whole", "regularization", "spectrum.", "27", "TV1", "INRIA", "Holidays", "pee", "\u2014\u00ae\u2014", "Classic", "taut-string", "method", "00", "\u2014l\u2014", "Condat's", "method", "1400", "+", "\u2014*\u2014", "Hybrid", "taut-string", "method", ">", "\u2014@\u2014", "Johnson's", "method", "e", "1200", "|", "\u2014*\u2014", "Kolmogorov's", "method", "21000", "+", "=", "Cc", "=", "g00", "4", "Ss", "\u00b0", "F", "600", "+", "400", "+", "200", "+", "T", "T", "T", "T", "T", "T", "Lo", "10-3", "107}", "10!", "10?", "10\u00b0", "Penalty", "Figure", "9:", "Running", "times", "(in", "secs)", "for", "the", "top", "performing", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tvi>", "-", "proximity", "over", "the", "whole", "INRIA", "Holidays", "dataset,", "for", "increasing", "penalties.", "5.1.4", "Running", "time", "results", "for", "weighted", "TV-L1", "An", "advantage", "of", "the", "solvers", "proposed", "in", "this", "paper", "is", "their", "flexibility", "to", "easily", "deal", "with", "the", "more", "difficult,", "weighted", "version", "of", "the", "TV-L1", "proximity", "problem.", "To", "illustrate", "this,", "Figure", "11", "shows", "the", "running", "times", "of", "the", "Projected", "Newton", "and", "(linearized)", "Taut", "String", "methods", "when", "solving", "both", "the", "standard", "and", "weighted", "TV-L1", "prox", "operators.", "Since", "for", "this", "set", "of", "experiments", "a", "whole", "vector", "of", "weights", "w", "is", "needed,", "we", "have", "adjusted", "the", "experimental", "scenarios", "as", "follows:", "I)", "nis", "generated", "as", "in", "the", "general", "setting,", "penalties", "w", "\u20ac", "[0,", "100]", "are", "chosen", "at", "random", "for", "each", "run,", "and", "the", "data", "vector", "y", "with", "uniformly", "random", "entries", "y;", "\u20ac", "[\u20142A,", "2A],", "with", "\\", "the", "mean", "of", "w,", "using", "also", "this", "A", "choice", "for", "the", "uniform", "(unweighted)", "case.", "Il", "A", "and", "n", "are", "generated", "as", "in", "the", "general", "setting,", "and", "the", "weights", "vector", "w", "is", "drawn", "randomly", "from", "the", "uniform", "distribution", "w,;", "\u20ac", "[0.5A,", "1.5A].", "As", "can", "be", "readily", "observed,", "performance", "for", "both", "versions", "of", "the", "problem", "is", "almost", "identical,", "even", "if", "the", "weighted", "problem", "is", "conceptually", "harder.", "Conversely,", "adapting", "the", "other", "reviewed", "algorithms", "to", "address", "this", "problem", "while", "keeping", "up", "with", "performance", "is", "not", "a", "straightforward", "task.", "We", "would", "also", "like", "to", "point", "out", "that", "in", "the", "paper", "[53]", "a", "practical", "application", "of", "this", "method", "for", "energy", "minimization", "in", "computer", "vision", "is", "presented,", "where", "exactly", "the", "code", "behind", "this", "paper", "has", "been", "put", "to", "use.", "28", "TV1", "Imagenet", "\u2014\u00ae\u2014", "Classic", "taut-string", "method", "3000", "|", "~~", "Condat's", "method", "\u2014*\u2014", "Hybrid", "taut-string", "method", ">", "\u2014@\u2014", "Johnson's", "method", "\u00ae", "2500", "7", "\u2014*\u2014", "Kolmogorov's", "method", "D", "Cc", "E", "c", ">", "2000", "+", "a", "1500", "+", "1000", "+", "\u2018", ".", "1", "1", "1", "t", "10\"?", "10-7", "107}", "101", "107", "10\u00b0", "Penalty", "Figure", "10:", "Running", "times", "(in", "secs)", "for", "the", "top", "performing", "proposed", "and", "state", "of", "the", "art", "solvers", "for", "Tvi>", "-", "proximity", "over", "the", "whole", "Large", "Scale", "Visual", "Recognition", "Challenge", "2010", "validation", "dataset,", "for", "increasing", "penalties.", "5.2.", "Experiments", "for", "other", "1D-TV", "variants", "5.2.1", "Running", "time", "results", "for", "TV-L2", "Next", "we", "show", "results", "for", "TviP", "proximity.", "To", "our", "knowledge,", "this", "version", "of", "TV", "has", "not", "been", "explicitly", "treated", "before,", "so", "there", "do", "not", "exist", "highly-tuned", "solvers", "for", "it.", "Thus,", "we", "show", "running", "time", "results", "only", "for", "the", "MSN", "and", "GP", "methods.", "We", "use", "a", "duality", "gap", "of", "10~\u00b0", "as", "the", "stopping", "criterion;", "we", "also", "add", "an", "extra", "boundary", "check", "for", "MSN", "with", "tolerance", "10~\u00b0", "to", "avoid", "early", "stopping", "due", "to", "potentially", "infeasible", "intermediate", "iterates.", "Figure", "12", "shows", "results", "for", "the", "two", "experimental", "scenarios", "under", "test.", "The", "results", "indicate", "that", "the", "performance", "of", "MSN", "and", "GP", "differs", "noticeably", "in", "the", "two", "experimental", "scenarios.", "While", "the", "results", "for", "the", "first", "scenario", "(Figure", "12(a))", "might", "suggest", "that", "GP", "converges", "faster", "than", "MSN", "for", "large", "inputs,", "it", "actually", "does", "so", "depending", "on", "the", "size", "of", "X", "relative", "to", "||y||2.", "Indeed,", "the", "second", "scenario", "(Figure", "12(b))", "shows", "that", "although", "for", "small", "values", "of", "4,", "GP", "runs", "faster", "than", "MSN,", "as", "A", "increases,", "GP\u2019s", "performance", "worsens", "dramatically,", "so", "much", "that", "for", "moderately", "large", "A,", "it", "is", "unable", "to", "find", "an", "acceptable", "solution", "even", "after", "10,000", "iterations", "(an", "upper", "limit", "imposed", "in", "our", "implementation).", "Conversely,", "MSN", "finds", "a", "solution", "satisfying", "the", "stopping", "criterion", "under", "every", "situation,", "thus", "showing", "a", "more", "robust", "behavior.", "These", "results", "suggest", "that", "it", "is", "preferable", "to", "employ", "a", "hybrid", "approach", "that", "combines", "the", "strengths", "of", "MSN", "and", "GP.", "Such", "a", "hybrid", "approach", "is", "guided", "using", "the", "following", "(empirically", "determined)", "rule", "of", "thumb:", "if", "A", "<", "||y||2", "use", "GP,", "otherwise", "use", "MSN.", "Further,", "as", "a", "safeguard,", "if", "GP", "is", "invoked", "but", "fails", "to", "find", "a", "solution", "within", "50", "iterations,", "the", "hybrid", "should", "switch", "to", "MSN.", "This", "combination", "guarantees", "rapid", "convergence", "in", "29", "TV1", "increasing", "sizes", "TV1", "increasing", "penalties", "\u2014Projected", "Newton", "(Weighted)", "10\u00b0", "\u2014Projected", "Newton", "(Weighted)", "---Projected", "Newton", "(Uniform)", "-", "-", "-Projected", "Newton", "(Uniform)", "\u2014Taut", "String", "(Weighted)", "\u2014Taut", "String", "(Weighted)", "o", "(EZ", "-Taut", "String", "(Uniform)", "-", "--Taut", "String", "(Uniform)", "10\u00b0", "+", "a", "iE", "10\u00b0", "10", "\u201cAves.", "ee", "5", "Fey", "ee", "-4", "1", "1", "1", "10\u00b0", "10\u00b0", "10\u00b0", "\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "Problem", "size", "Penalty", "7", "(b)", "(a)", "Figure", "11:", "Running", "times", "(in", "secs)", "for", "Projected", "Newton", "and", "Taut", "String", "solvers", "for", "weighted", "and", "uniform", "Tv}", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "TV2", "increasing", "sizes", "-=-MSN", "-+-GP", "TV2", "increasing", "penalties", "eee", "eee", "eee", "==-MSN", "~--GP", ",/LTS", "MSN+GP", "Problem", "size", "(a)", "1", "Penalty", "7", "(b)", "Figure", "12:", "Running", "times", "(in", "secs)", "for", "MSN,", "GP", "and", "a", "hybrid", "MSN+GP", "approach", "for", "TviP", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "practice.", "Results", "for", "this", "hybrid", "approach", "are", "also", "included", "in", "the", "plots", "in", "Figure", "12,", "and", "show", "how", "it", "successfully", "mimics", "the", "behavior", "of", "the", "better", "algorithm", "amongst", "MSN", "and", "GP.", "5.2.2", "Running", "time", "results", "for", "TV-Lp", "Now", "we", "show", "results", "for", "Tv?", "proximity.", "Again,", "to", "our", "knowledge", "efficient", "solvers", "for", "this", "version", "of", "TV", "are", "not", "available;", "still", "proposals", "for", "solving", "the", "\u00a3,-ball", "projection", "problem", "do", "exist,", "such", "as", "the", "epp", "function", "in", "SLEP", "library", "[59],", "based", "on", "a", "zero", "finding", "approach.", "Consequently,", "we", "present", "here", "a", "comparison", "between", "this", "reference", "projection", "subroutine", "and", "our", "PN\u2014based", "projection", "when", "embedded", "in", "our", "proposed", "Gradient", "Projection", "solver", "of", "\u00a73.2.", "The", "alternative", "proposal", "given", "by", "the", "Frank\u2014Wolfe", "algorithm", "of", "83.2.2", "is", "also", "present", "in", "the", "comparison.", "We", "use", "a", "duality", "gap", "of", "10~\u00b0", "as", "stopping", "criterion", "both", "for", "GP", "and", "FW.", "Figure", "13", "shows", "results", "for", "the", "two", "experimental", "scenarios", "under", "test,", "for", "p", "values", "of", "1.5,", "1.9", "and", "3.", "30", "TVp", "increasing", "sizes", "p=1.5", "TVp", "increasing", "sizes", "p=1.9", "---GP-PN", "---GP-SLEP", "a", "TVp", "increasing", "sizes", "p=3", "---GP-PN", "---GP-SLEP", "10", "40\"", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "40\"", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "Problem", "size", "Problem", "size", "Problem", "size", "(a)", "(b)", "(c)", "Figure", "13:", "Running", "times", "(in", "secs)", "for", "GP", "with", "PN", "projection,", "GP", "with", "SLEP\u2019s", "epp", "projection,", "FW", "and", "a", "hybrid", "GP+FW", "algorithm,", "for", "Typ?", "-proximity", "with", "increasing", "input", "sizes", "and", "three", "different", "choices", "of", "p.", "Both", "axes", "are", "on", "a", "log-scale.", "TVp", "increasing", "penalties", "p=1.5", "TVp", "increasing", "penalties", "p=1.9", "TVp", "increasing", "penalties", "p=3", "io\u00b0", ".", "10", "10)", "~", "-=-GP-PN", "ot", "~--GP-PN", "~--GP-PN", "\u2018", "ia", "---GP-SLEP", "---GP-SLEP", "if", "t", "Ww", "~--FW", "if,", "L", "yor", "[GP", "HFM,", "are", "wesenoee", "senatapes7", "V", "\u00a5", "Qa", "&", "10", "=", "10", "s", "a", "15", "10", "a", "io\u201d", "io\u201d", "io\u00b0", "io*", "io\u201d", "io!", "io\"", "io\u00b0", "io*", "io\u201d", "io!", "io\"", "io\u00b0", "(b)", "(c)", "4", "TVp", "increasing", "penalties", "p=1.9", "4", "TVp", "increasing", "penalties", "p=3", "10", "10", "==-GP-PN", "==-GP-PN", "~~", "-GP-SLEP", "ms", "---GP-SLEP", "a", "---FW", "44", "---FW", "\u2018:", "jo?", "[GP", "sew", "io", "jo?", "[GP", "sew", "i", "(e)", "\u00ae", "Figure", "14:", "Attained", "duality", "gaps", "(a-c)", "and", "running", "times", "(d-f,", "in", "secs)", "for", "GP", "with", "PN", "projection,", "GP", "with", "SLEP\u2019s", "epp", "projection,", "FW", "and", "a", "hybrid", "GP+FW", "algorithm,", "for", "Tv?", "-proximity", "with", "increasing", "penalties", "and", "three", "different", "choices", "of", "p.", "Both", "axes", "are", "on", "a", "log-scale.", "A", "number", "of", "interesting", "conclusions", "can", "be", "drawn", "from", "the", "results.", "First,", "our", "Projected", "Newton", "\u00a3,-ball", "subroutine", "is", "far", "more", "efficient", "than", "epp", "when", "in", "the", "context", "of", "the", "GP", "solver.", "Two", "factors", "seem", "to", "be", "the", "cause", "of", "this:", "in", "the", "first", "place", "our", "Projected", "Newton", "approach", "proves", "to", "be", "faster", "than", "the", "zero", "finding", "method", "used", "by", "epp.", "Secondly,", "in", "order", "for", "the", "GP", "solver", "to", "find", "a", "solution", "within", "the", "desired", "duality", "gap,", "the", "projection", "subroutine", "must", "provide", "very", "accurate", "results", "(about", "10~!?", "in", "terms", "of", "duality", "gap).", "Given", "its", "Newton", "nature,", "our", "\u00a3,-ball", "subroutine", "scales", "better", "in", "term", "of", "running", "times", "as", "a", "factor", "of", "the", "desired", "accuracy,", "which", "explains", "he", "observed", "differences", "in", "performance.", "31", "It", "is", "also", "of", "relevance", "noting", "that", "Frank\u2014Wolfe", "is", "significantly", "faster", "than", "Projected", "Newton.", "This", "should", "discourage", "the", "use", "of", "Projected", "Newton,", "but", "we", "find", "it", "to", "be", "extremely", "useful", "in", "the", "range", "of", "penalties", "where", "A", "is", "large,", "but", "not", "enough", "to", "render", "the", "problem", "trivial", "(a", "=", "0", "solution).", "In", "this", "range", "the", "two", "variants", "of", "PN", "and", "also", "FW", "are", "unable", "to", "find", "a", "solution", "within", "the", "desired", "duality", "gap", "(10~\u00b0),", "getting", "stuck", "at", "suboptimal", "solutions.", "We", "solve", "this", "issue", "by", "means", "of", "a", "hybrid", "GP+FW", "algorithm,", "in", "which", "updates", "from", "both", "methods", "are", "interleaved", "at", "a", "ratio", "of", "10", "FW", "updates", "per", "|", "GP", "update,", "as", "FW", "updates", "are", "faster.", "As", "both", "algorithms", "guarantee", "improvement", "in", "each", "iteration", "but", "follow", "different", "procedures", "for", "doing", "so,", "they", "complement", "each", "other", "nicely,", "resulting", "a", "superior", "method", "attaining", "the", "objective", "duality", "gap", "and", "performing", "faster", "than", "GP.", "5.2.3", "Running", "time", "results", "for", "TV-Loo", "For", "completeness", "we", "also", "include", "results", "for", "our", "Tvl?", "solver", "based", "on", "GP", "+a", "standard", "\u00a3", "-projection", "subroutine.", "Figure", "15", "presents", "running", "times", "for", "the", "two", "experimental", "scenarios", "under", "test.", "Since", "\u00a3;-projection", "is", "an", "easier", "problem", "than", "the", "general", "\u00a3,-projection", "the", "resultant", "algorithm", "converges", "faster", "to", "the", "solution", "than", "the", "general", "GP", "Tv?", "prox", "solver,", "as", "expected.", "TVeo", "increasing", "sizes", "TVeo", "increasing", "penalties", "1", "Problem", "size", "Penalty", "4", "(a)", "(b)", "Figure", "15:", "Running", "times", "(in", "secs)", "for", "GP", "for", "Tv", "2", "-proximity", "with", "increasing", "a)", "input", "sizes,", "b)", "penalties.", "Both", "axes", "are", "on", "a", "log-scale.", "5.2.4", "Application:", "Proximal", "optimization", "for", "Fused-Lasso", "We", "now", "present", "a", "key", "application", "that", "benefits", "from", "our", "TV", "prox", "operators:", "Fused-Lasso", "(FL)", "[86],", "a", "model", "that", "takes", "the", "form", "min", "4", "||", "Ax", "\u2014", "yll3", "+", "Arljalla", "+", "AoT", "Vy?", "(a).", "(5.1)", "The", "\u00a3,-norm", "in", "(5.1)", "forces", "many", "x;", "to", "be", "zero,", "while", "Tv>", "favors", "nonzero", "components", "to", "appear", "in", "blocks", "of", "equal", "values", "2,4", "=", "2;", "=", "2441", "=", "....", "The", "FL", "model", "has", "been", "successfully", "applied", "in", "several", "bioinformatics", "applications", "[34,", "72,", "85],", "as", "it", "encodes", "prior", "knowledge", "about", "consecutive", "elements", "in", "microarrays", "becoming", "active", "at", "once.", "Following", "the", "ideas", "presented", "in", "Sec.", "4,", "since", "the", "FL", "model", "uses", "two", "regularizers,", "we", "can", "use", "Proximal", "Dykstra", "as", "the", "combiner", "to", "handle", "the", "prox", "operator.", "To", "illustrate", "the", "benefits", "of", "this", "framework", "in", "terms", "of", "reusability,", "we", "apply", "it", "to", "several", "variants", "of", "FL.", "e", "Fused-Lasso", "(FL):", "Least-squares", "loss", "+2,", "+", "Tv>", "as", "in", "(5.1)", "e", "\u00a3,-Variable", "Fusion", "(VF):", "Least-squares", "loss", "+\u00a3,", "+", "Typ?", ".", "Though", "Variable", "Fusion", "was", "already", "studied", "by", "Land", "and", "Friedman", "[54],", "their", "approach", "proposed", "an", "f2-like", "regularizer", "in", "the", "sense", "that", "32", "Fused", "Lasso", "Variable", "Fusion", "LAr", "\u2014yl3", "+", "Aalfella", "+", "ALTV!(z)", "sllAe\u2014yll2", "+", "Aallzll,", "+", "AsTVZP(z)", "ra", "C_EISTA", "Logistic", "Fused", "Lasso", "Djog(#,e)", "+", "Arllella", "+", "TV)", "Log.", "Variable", "Fusion", "Lhog(t,e)", "+", "Aallz|l1", "+", "AgTV}?", "(2)", "I", "Dosen,", "Figure", "16:", "Fused-Lasso", "models", "addressed", "by", "proximal", "splitting.", "_", "_", "1/p", "(aw)", "=", "2\")", "[2.41", "\u2014", "2]?", "is", "used", "instead", "of", "the", "TV", "regularizer", "Tv?", "(2)", "=", "(oa", "lrig1", "\u2014ailP)", "Using", "Tv,", "leads", "to", "a", "more", "conservative", "penalty", "that", "does", "not", "oversmooth", "the", "estimates.", "This", "FL", "variant", "seems", "to", "be", "new.", "Logistic-fused", "lasso", "(LFL):", "Logistic-loss", "+\u00a3,", "+", "Tv,", "where", "the", "loss", "takes", "the", "form", "\u00e9(a,c)", "=", "do,", "log", "(1", "+", "eowlalnte)),", "and", "can", "be", "used", "in", "a", "FL", "formulation", "to", "obtain", "models", "more", "appropri-", "ate", "for", "classification", "on", "a", "dataset", "{(a;,", "y;)}", "[50].", "e", "Logistic", "+", "\u00a3,-fusion", "(LVF):", "Logistic", "loss", "+,", "+", "Typ?", ".", "To", "solve", "these", "variants", "of", "FL,", "all", "that", "remains", "is", "to", "compute", "the", "gradients", "of", "the", "loss", "functions,", "but", "this", "task", "is", "trivial.", "Each", "of", "these", "four", "models", "can", "be", "then", "solved", "easily", "by", "invoking", "any", "proximal", "splitting", "method", "by", "appropriately", "plugging", "in", "gradient", "and", "prox", "operators.", "Incidentally,", "the", "SLEP", "library", "[60]", "includes", "an", "implementation", "of", "FISTA", "[13]", "carefully", "tuned", "for", "Fused", "Lasso,", "which", "we", "base", "our", "experiments", "on.", "Figure", "16", "shows", "a", "schematic", "of", "the", "algorithmic", "modules", "for", "solving", "each", "FL", "model.", "Remark:", "A", "further", "algorithmic", "improvement", "can", "be", "obtained", "by", "realizing", "that", "for", "r(a)", "=", "A4||a|/1", "+", "det", "vy?", "(a)", "the", "prox", "operator", "prox,", "=", "prox", "Aue", "\u00a9", "PFOXagTvi2(.)-", "Such", "a", "decomposition", "does", "not", "usually", "hold,", "but", "it", "can", "be", "shown", "to", "hold", "for", "this", "particular", "case", "[73,", "86,", "96].", "Therefore,", "for", "FL", "and", "LFL", "we", "can", "compute", "the", "proximal", "operator", "for", "the", "combined", "regularizer", "r", "directly,", "thus", "removing", "the", "need", "for", "a", "combiner", "algorithm.", "This", "is", "also", "shown", "in", "Figure", "16.", "5.2.5", "Fused-Lasso", "experiments:", "simulation", "The", "standard", "FL", "model", "has", "been", "well-studied", "in", "the", "literature,", "so", "a", "number", "of", "practical", "algorithms", "addressing", "it", "have", "already", "been", "proposed.", "The", "aforementioned", "Fused-Lasso", "algorithm", "in", "the", "SLEP", "library", "can", "be", "regarded", "as", "the", "state", "of", "the", "art,", "making", "extensive", "use", "of", "an", "efficient", "proximity", "subroutine", "(FLSA).", "Our", "experiments", "on", "Tv,>", "-proximity", "(85.1)", "have", "already", "shown", "superiority", "of", "our", "prox", "solvers", "over", "FLSA;", "what", "remains", "to", "be", "checked", "is", "whether", "this", "benefit", "has", "a", "significant", "impact", "on", "the", "overall", "FL", "solver.", "To", "do", "so,", "we", "compare", "running", "times", "with", "synthetic", "data.", "We", "generate", "random", "matrices", "A", "\u20ac", "R\u201d*\u2122", "with", "iid.", "entries", "drawn", "from", "a", "zero", "mean,", "unit", "variance", "gaussian.", "We", "set", "the", "penalties", "to", "43", "=", "Az", "=", "10.", "We", "select", "the", "vector", "of", "responses", "y", "using", "the", "formula", "y", "=", "sen(Aa,+v),", "where", "2;,", "and", "v", "are", "random", "vectors", "whose", "entries", "have", "variances", "|", "and", "0.01,", "respectively.", "33", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "The", "numerical", "results", "are", "summarized", "in", "Figure", "17,", "which", "compares", "out", "of", "the", "box", "SLEP", "(version", "4.0)", "[59]", "against", "the", "very", "same", "algorithm", "employing", "our", "fast", "taut\u2014string", "Tv\\P", "solver", "instead", "of", "the", "default", "FLSA", "subroutine", "of", "SLEP.", "Comparison", "is", "done", "by", "showing", "the", "relative", "distance", "to", "the", "problem\u2019s", "optimum", "versus", "time.", "The", "optimal", "values", "in", "each", "setting", "were", "estimated", "by", "running", "both", "algorithms", "for", "a", "very", "large", "number", "of", "iterations.", "Fused", "Lasso", "matrix", "50", "x", "5000000", "Fused", "Lasso", "matrix", "100", "x", "2000000", "Fused", "Lasso", "matrix", "200", "x", "1000000", "10\u00b0)", "\u2018", "4", "E", "\u20ac", "10", "zZ", "zZ", "192", "Bio", "8", "8", "107", "*", "g", "g", "We", "yy", "8", "102", "&", "*", "c", "\u00a9", "107", ".", "g", "g", "10\u00b0", "x", "a", "x", "a", "\u2018", "\u2014\u00ae\u2014SLEP", "\u2018", "\u00ab10", "\u2014\u00ae\u2014SLEP", "1", "\u2014O\u00ae\u2014", "SLEP", "1", "=", "aR", "-", "SLEP", "+Taut-String", "\u2018", "=F", "-", "SLEP", "+Taut-String", "\u2018", "=", "ay", "-", "SLEP+Taut-String", "\u2018", ";", "\u00a5", ";", "\u2014_*", ";", "_", "10", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "10\u00b0", "Time", "(s)", "Time", "(s)", "Time", "(s)", "Fused", "Lasso", "matrix", "500", "x", "500000", "Fused", "Lasso", "matrix", "1000", "x", "200000", "Fused", "Lasso", "matrix", "2000", "x", "100000", "\u20ac", "\u20ac", "zZ", "2", "a", "a", "\u00b0", "\u00b0", "8", "8", "VY", "VY", "e", "e", "8", "8g", "a", "2", "oO", "oO", "s", "g", "p", "2", "a", "Ss", "@", "we", "3", "10\u00b0}", "\u2014e\u2014sLep", "=F", "=", "SLEP", "+Taut-String", "10\u201c", "=", "3%", "=", "SLEP+Taut-String", "=", "ay", "=", "SLEP", "+Taut-String", "10\u00b0", "10\u00b0", "1", "10\u00b0", "10", "10\"", "10\u00b0", "lo", "10\"", "Time", "(s)", "Time", "(s)", "Time", "(s)", "Figure", "17:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "Fused", "Lasso", "optimizers", "under", "comparison,", "for", "the", "different", "layouts", "of", "synthetic", "matrices.", "The", "plots", "show", "a", "clear", "trend:", "when", "the", "input", "matrices", "feature", "a", "very", "large", "column", "dimension", "the", "use", "of", "our", "taut-string", "Tv\\P", "solver", "turns", "into", "speedups", "in", "optimization", "times,", "which", "however", "become", "negligible", "for", "matrices", "with", "a", "more", "balanced", "rows/columns", "ratio.", "This", "result", "is", "reasonable,", "as", "the", "vector", "x", "under", "optimization", "has", "size", "equal", "to", "the", "number", "of", "columns", "of", "the", "data", "matrix", "A.", "If", "A", "has", "a", "large", "number", "of", "columns", "the", "cost", "of", "solving", "Tv,>", "is", "significant,", "and", "thus", "any", "improvement", "in", "this", "step", "has", "a", "noticeable", "impact", "on", "the", "overall", "algorithm.", "Conversely,", "when", "the", "number", "of", "rows", "in", "A", "is", "large", "the", "cost", "of", "computing", "the", "gradient", "of", "the", "loss", "function", "(V", "$||", "Aa", "\u2014", "y||3", "=", "AT", "(Aa", "\u2014", "y))", "dominates,", "getting", "limited", "benefits", "from", "such", "improvements", "in", "prox", "computations.", "Therefore,", "it", "is", "for", "data", "with", "a", "very", "large", "number", "of", "features", "where", "our", "proposed", "method", "can", "provide", "a", "useful", "speedup.", "5.2.6", "Fused-Lasso", "Experiments:", "Microarray", "classification", "Now", "we", "report", "results", "of", "applying", "the", "four", "FL", "models", "on", "a", "series", "of", "problems", "from", "bioinformatics.", "We", "test", "the", "FL", "models", "on", "binary", "classification", "tasks", "for", "the", "following", "real", "microarray", "datasets:", "ArrayCGH", "[83],", "Leukemias", "[37],", "Colon", "[88],", "Ovarian", "[75]", "and", "Rat", "[40].", "Each", "dataset", "was", "split", "into", "three", "equal", "parts", "(ensuring", "similar", "proportion", "of", "classes", "in", "every", "split)", "for", "training,", "validation", "and", "test.", "The", "penalty", "parameters", "were", "found", "by", "exhaustive", "grid", "search", "in", "the", "range", "\\1,", "\\2", "\u20ac", "[10~*,", "10\u00b0]", "to", "maximize", "classification", "accuracy", "on", "the", "validation", "splits.", "34", "Table", "3:", "Classification", "accuracies", "for", "the", "presented", "Fused\u2014Lasso", "models", "on", "microarray", "data.", "For", "the", "Variable", "Fusion", "models", "an", "\u00a32", "version", "of", "TV", "was", "employed.", "Dataset", "FL", "VF-\u00a3", "LFL", "~~", "LVF-\u00a32", "ArrayCGH", "73.6%", "73.6%", "84.2%", "73.6%", "Leukemias", "92.0%", "88.0%", "92.0%", "88.0%", "Colon", "77.2%", "77.2%", "77.2%", "T7.2%", "Ovarian", "88.8%", "83.3%", "83.3%", "83.3%", "Rat", "68.8%", "65.5%", "721%", "72.1%", "Table", "3", "shows", "test", "accuracies.", "In", "general,", "as", "expected", "the", "logistic-loss", "based", "FL", "models", "yield", "better", "classification", "accuracies", "than", "those", "based", "on", "least-squares,", "as", "such", "loss", "function", "tends", "to", "be", "more", "appropriate", "for", "classification", "problems.", "However", "the", "Ovarian", "dataset", "proves", "to", "be", "an", "exception,", "showing", "better", "performance", "under", "a", "squared", "loss.", "Regarding", "the", "TV-regularizer,", "the", "classic", "TviP", "-penalty", "seems", "to", "perform", "better", "in", "general,", "with", "the", "Tvs?", "-penalty", "showing", "competitive", "results", "in", "some", "settings.", "5.3.", "2D-TV:", "Experiments", "and", "Applications", "We", "address", "now", "several", "practical", "applications", "that", "benefit", "from", "two-dimensional", "TV", "regularization;", "our", "results", "show", "again", "how", "the", "presented", "Tv", "prox", "operators", "fits", "in", "seamlessly", "into", "our", "modular", "framework", "to", "produce", "efficient", "proximal", "splitting", "solvers.", "5.3.1", "Image", "denoising", "through", "anisotropic", "filtering", "Our", "first", "example", "is", "related", "to", "the", "classic", "problem", "of", "image", "denoising,", "but", "with", "the", "twist", "that", "we", "deal", "with", "noise", "of", "an", "anisotropic", "character.", "More", "specifically,", "suppose", "that", "the", "true", "image", "pz", "\u20ac", "IR\u201d\u00ae*\u201d\u201d", "is", "contaminated", "by", "additive", "noise", "N,", "so", "that", "only", "ug", "=", "+", "N", "is", "observed.", "The", "denoising", "problem", "estimates", "py", "given", "just", "the", "noisy", "version", "jig.", "This", "problem", "is", "highly", "ill-posed", "and", "as", "such", "not", "approachable", "unless", "additional", "assumptions", "on", "the", "noise", "(or", "on", "the", "underlying", "image)", "are", "made.", "Isotropic", "and", "anisotropic", "models:", "an", "extremely", "common", "choice", "is", "to", "simply", "assume", "the", "noise", "to", "be", "gaussian,", "or", "some", "other", "zero-mean", "distribution.", "Under", "these", "conditions,", "a", "classic", "method", "to", "perform", "such", "denoising", "task", "is", "the", "Rudin-Osher-Fatemi", "(ROF)", "model", "[76],", "which", "finds", "an", "approximation", "X", "to", "the", "original", "image", "by", "solving", "min", "|X", "\u2014", "pole", "+", "AY]", "|", "xasle,", "(5.2)", "i=2", "j=2", "where", "0x,", ";", "is", "the", "discrete", "gradient", "That", "is,", "it", "is", "the", "vector", "of", "differences", "of", "X;;", "and", "its", "neighbors", "along", "both", "axes.", "The", "objective", "of", "the", "first", "term", "in", "the", "ROF", "model", "is", "to", "penalize", "any", "deviation", "of", "X", "from", "the", "observed", "image", "19,", "While", "the", "second", "term", "can", "be", "readily", "recognized", "as", "a", "mixed", "(2,", "1)-norm", "over", "the", "discrete", "gradient", "of", "X.", "This", "regularizer", "models", "caters", "to", "some", "prior", "knowledge:", "in", "natural", "images", "sharp", "discontinuities", "in", "intensity", "between", "neighboring", "points", "only", "appear", "in", "borders", "of", "objects,", "while", "the", "rest", "of", "the", "pixels", "usually", "show", "smooth", "variations", "in", "intensity.", "It", "makes", "sense,", "therefore,", "to", "penalize", "large", "values", "of", "the", "gradient,", "as", "sharp", "changes", "have", "a", "higher", "probability", "of", "having", "being", "produced", "by", "noise.", "Conversely,", "as", "the", "mean", "of", "the", "noise", "is", "zero,", "it", "is", "also", "sensible", "to", "maintain", "the", "denoised", "image", "X", "close", "to", "the", "observed", "jig.", "Merging", "these", "two", "goals", "produces", "the", "ROF", "model", "(5.2).", "35", "A", "closer", "look", "at", "the", "ROF", "regularizer", "reveals", "that", "it", "follows", "the", "spirit", "of", "the", "reviewed", "2D-TV", "regularizer", "which", "also", "penalizes", "sharp", "variations", "between", "neighboring", "pixels.", "Indeed,", "all", "such", "regularizers", "are", "broadly", "categorized", "as", "TV", "regularizers", "within", "the", "image", "processing", "community.", "It", "is", "clear,", "though,", "that", "the", "ROF", "regularizer", "(5.2)", "does", "not", "coincide", "with", "the", "Tv,", "regularizer", "used", "in", "this", "paper.", "Some", "authors", "[16]", "differentiate", "between", "these", "regularizers", "by", "naming", "the", "ROF", "approach", "as", "isotropic", "TV", "and", "the", "Ty,", "style", "approach", "as", "anisotropic", "TV.", "This", "naming", "comes", "from", "the", "fact", "that", "isotropic", "TV", "penalizes", "each", "component", "of", "the", "discrete", "gradient", "Ox,,;", "following", "an", "2", "norm,", "whereas", "the", "anisotropic", "Tv,,-horm", "and", "in", "particular", "Tv", "-norm,", "penalize", "rows", "and", "columns", "independently.", "While", "image", "filtering", "using", "isotropic", "TV", "is", "generally", "preferred", "for", "natural", "images", "denoising", "[17],", "in", "some", "settings", "anisotropic", "filtering", "can", "produce", "better", "results,", "and", "in", "fact", "has", "been", "favored", "by", "some", "authors", "in", "the", "past", "[25,", "55].", "This", "is", "specially", "true", "on", "those", "images", "that", "present", "a", "\u201cblocky\u201d", "structure,", "and", "thus", "are", "better", "suited", "to", "the", "structure", "modeled", "by", "the", "Typ", "-norm.", "Therefore,", "efficient", "methods", "to", "perform", "anisotropic", "filtering", "are", "also", "important.", "Anisotropic", "denoising", "experiments:", "denoising", "using", "the", "anisotropic", "Tv,", "norm", "reduces", "to", "solving", "min", "||X", "\u2014", "poll", "+", "ATV,", "q(X).", "(5.3)", "But", "(5.3)", "is", "nothing", "but", "the", "Tv;0,-proximity", "problem,", "and", "hence", "can", "be", "directly", "solved", "by", "applying", "the", "2D-TV", "prox", "operators", "described", "above.", "We", "solve", "(5.3)", "below", "for", "the", "choice", "p", "=", "g", "=", "1", "(which", "is", "common", "in", "practice),", "for", "the", "following", "selection", "of", "algorithms:", "e", "Proximal", "Dykstra", "(\u00a7", "4.1.1)", "e", "The", "Douglas-Rachford", "variant", "based", "on", "alternating", "projections", "(\u00a7", "4.1.2)", "e", "The", "Split", "Bregman", "method", "of", "Goldstein", "T.", "[36],", "which", "follows", "an", "ADMM-like", "approach", "to", "split", "the", "\u00a3,", "norm", "apart", "from", "the", "discrete", "gradient", "operator,", "thus", "not", "requiring", "the", "use", "of", "a", "1D-TV", "prox", "operator.", "e", "Chambolle-Pock\u2019s", "method", "applied", "to", "2D", "TV", "(8", "4.1.4).", "e", "Condat\u2019s", "general", "splitting", "method", "(8", "4.1.4).", "e", "Kolmogorov", "et", "al", "primal-dual", "method", "(8", "4.1.4).", "e", "Yang\u2019s", "method", "(ADMM)", "(\u00a7", "4.1.3)", "e", "The", "maximum", "flow", "approach", "by", "Goldfarb", "and", "Yin", "[35],", "which", "shows", "the", "relationship", "between", "the", "2D-TV", "proximity", "minimization", "and", "the", "maximum", "flow", "problem", "over", "a", "grid,", "and", "thus", "applies", "an", "efficient", "maximum", "flow", "method", "to", "solve", "a", "discrete-valued", "version", "of", "2D-TV.", "In", "Proximal", "Dykstra,", "Douglas-Rachford", "and", "ADMM", "we", "use", "the", "linearized", "taut\u2014string", "strategy", "presented", "before", "as", "solver", "for", "the", "base", "proximity", "operators.", "All", "algorithm", "parameters", "were", "set", "as", "recommended", "in", "their", "corresponding", "papers", "or", "public", "implementations,", "except", "for", "Proximal", "Dykstra", "and", "Douglas-Rachford,", "which", "are", "parameter", "free.", "For", "Chambolle-Pock", "we", "tried", "both", "the", "scheme", "with", "fixed", "algorithm", "parameters", "[22,", "Algorithm", "1]", "and", "the", "scheme", "with", "acceleration", "[22,", "Algorithm", "2];", "however", "the", "accelerated", "version", "did", "not", "converge", "to", "the", "desired", "solution", "within", "enough", "accuracy", "(relative", "difference", "of", "10~\u00b0),", "therefore", "only", "the", "results", "for", "the", "fixed", "version", "are", "reported.", "For", "Kolmogorov", "we", "follow", "the", "recommendations", "in", "Chambolle", "and", "Pock", "[23],", "taking", "into", "account", "the", "Lipschitz", "constants", "of", "the", "optimized", "functions", "and", "selecting", "the", "parameter", "updating", "strategy", "that", "produced", "faster", "performance", "in", "the", "experiments:", "0\u00b0t!", "\u2014", "yo", "it", "t", "girl,t", "gittl~", "_\u00ab_", "go", "yj", "7O\u20141", "o", "=", "1.", ")", "gttl>", ")", "2)", "The", "images", "used", "in", "the", "experiments", "are", "displayed", "in", "Appendix", "F", "as", "Figure", "25.", "To", "test", "the", "filters", "under", "a", "variety", "of", "scenarios,", "different", "kinds", "of", "noise", "were", "introduced", "for", "each", "image.", "Table", "4", "gives", "details", "on", "this,", "while", "the", "noisy", "images", "are", "shown", "in", "Figure", "26.", "All", "QR", "barcode", "images", "used", "the", "same", "kind", "and", "parameters", "of", "noise.", "Noise", "was", "introduced", "using", "Matlab\u2019s", "imnoise", "function.", "36", "Table", "4:", "Types", "of", "noise", "and", "parameters", "for", "each", "test", "image.", "A", "@", "indicates", "that", "such", "noise", "was", "not", "applied", "for", "the", "image.", "Gaussian", "and", "Speckle", "correspond", "to", "gaussian", "additive", "and", "multiplicative", "(respectively)", "noises", "with", "zero", "mean", "and", "the", "indicated", "variance.", "Salt", "&", "Pepper", "noise", "turns", "into", "black", "or", "white", "the", "indicated", "fraction", "of", "image", "pixels.", "Poisson", "regenerates", "each", "pixel", "by", "drawing", "a", "random", "value", "from", "a", "Poisson", "distribution", "with", "mean", "equal", "to", "the", "original", "pixel", "value,", "thus", "producing", "a", "more", "realistic", "noise.", "Image", "Gaussian", "Speckle", "Poisson", "Salt", "&", "Pepper", "randomQR", "0.2", "0.3", "@", "@", "shape", "0.05", "@", "@", "@", "trollface", "@", "1", "@", "@", "diagram", "@", "@", "v", "@", "text", "@", "@", "@", "0.1", "comic", "0.05", "@", "v", "@", "contour", "@", "@", "v", "0.4", "phantom", "@", "2", "v", "@", "Values", "for", "the", "regularization", "parameter", "\\", "were", "found", "by", "maximizing", "the", "quality", "of", "the", "reconstruction,", "measured", "using", "Improved", "Signal-to-Noise", "Ratio", "(SNR)", "[1].", "ISNR", "is", "defined", "as", "Ivo", "\u2014", "Xl", "ISNR(X,", "1,", "Ho)", "10", "logy", "|X", "\u2014", "pll2", ",", "where", "yp", "is", "the", "original", "image,", "jig", "its", "noisy", "variant,", "and", "X", "the", "reconstruction.", "To", "compare", "the", "algorithms", "we", "run", "all", "of", "them", "for", "each", "image", "and", "measured", "its", "ISNR", "and", "relative", "distance", "to", "the", "optimal", "objective", "value", "of", "the", "current", "solution", "at", "each", "iteration", "through", "their", "execution.", "The", "only", "exception", "to", "this", "procedure", "is", "the", "method", "of", "Goldfarb", "and", "Yin,", "which", "is", "non-iterative", "and", "thus", "always", "returns", "an", "exact", "solution,", "and", "so", "we", "just", "measure", "the", "time", "required", "to", "finish.", "The", "optimal", "objective", "value", "was", "estimated", "by", "running", "all", "methods", "for", "a", "very", "large", "number", "of", "iterations", "and", "taking", "the", "minimum", "value", "of", "them", "all.", "This", "produced", "the", "plots", "shown", "in", "Figures", "18\u201419.", "From", "them", "the", "following", "observations", "are", "of", "relevance:", "e", "Condat\u2019s", "method", "and", "Chambolle-Pock\u2019s", "method", "are", "reduced", "to", "essentially", "the", "same", "algorithm", "when", "applied", "to", "the", "particular", "case", "of", "anisotropic", "2D", "TV", "denoising.", "Furthermore,", "they", "seem", "to", "perform", "slowly", "when", "compared", "to", "other", "methods.", "e", "ADMM", "(Yang\u2019s", "method)", "exhibits", "slow", "performance", "at", "the", "beginning,", "but", "when", "run", "for", "sufficient", "time", "is", "able", "to", "achieve", "a", "good", "approximation", "to", "the", "optimum.", "e", "The", "Split", "Bregman", "method,", "in", "spite", "of", "being", "an", "ADMM-like", "method", "much", "like", "Condat\u2019s", "or", "Chambolle-", "Pock,", "performs", "significantly", "better", "than", "those.", "We", "attribute", "this", "to", "the", "very", "efficient", "implementation", "provided", "by", "its", "authors,", "and", "to", "the", "fact", "that", "a", "fast", "approximate", "method", "is", "employed", "to", "compute", "the", "required", "matrix", "inversions", "throughout", "the", "method.", "e", "The", "method", "by", "Goldfarb", "and", "Yin", "is", "slower", "than", "other", "approaches", "and", "seems", "to", "provide", "suboptimal", "solutions.", "We", "attribute", "this", "to", "the", "fact", "that", "this", "method", "solves", "a", "discrete", "(integer-rounded)", "approximation", "to", "the", "problem.", "We", "acknowledge", "that", "other", "methods", "exploiting", "the", "Total", "Variation", "-", "Minimum-cut", "relationship", "have", "been", "proposed", "with", "varying", "speed", "results,", "e.g.", "[33],", "however", "the", "suboptimality", "issues", "still", "apply.", "e", "The", "method", "by", "Kolmogorov", "et", "al,", "when", "properly", "accelerated", "by", "a", "suitable", "choice", "of", "adaptive", "stepsizes,", "seems", "to", "be", "the", "best", "choice", "for", "finding", "very", "accurate", "solutions,", "though", "it", "is", "very", "closely", "followed", "by", "ADMM.", "e", "The", "parameter", "free", "methods", "PD", "and", "DR", "are", "the", "fastest", "to", "achieve", "a", "mid-quality", "solution,", "with", "Douglas-", "Rachford", "performing", "better", "than", "Proximal", "Dykstra.", "37", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Denoising", "algorithms:", "randomQR-0", "10\u00b0", "ww", "Split-Bregman", "\u00bb", "Condat", "\u00bb", "Chambolle-Pock", "se", "Yang", "*", "Goldfarb-Yin", "~~&>", "Kalmagorav", "\u2014*-PD", "\u2014*DR", "10%", "Time", "(s)", "10%", "Denoising", "algorithms:", "randomQR-3", "ee", "10\u00b0", "from", "~~", "Split-Bregman", "\u00bb", "Condat", "\u00bb", "Chambolle-Pock", "soe", "Yang", "*", "Goldfarb-Yin", "ov\u2019", "Kalmagorav", "\u2014sPD", "\u2014*DR", "10\"", "10\u00b0", "Time", "(s)", "10?", "Denoising", "algorithms:", "trollface", "Dota", "wget", "10\u00b0", "~~", "Split-Bregman", "\u00bb", "Condat", "\u00bb", "Chambolle-Pock", "~", "Yang", "*\u00ae", "Goldfarb-Yin", "~~\u00e9~", "Kalmagorav", "\u2014ePD", "\u2014*DR", "10\"", "10\u00b0", "Time", "(s)", "10?", "Denoising", "algorithms:", "comic", "ee", "~~", "Split-Bregman", "\u00bb", "Condat", "\u00bb", "Chambolle-Pock", "somes", "Yang", "*", "Goldfarb-Yin", "~~@~", "Kalmagorav", "\u2014*-PD", "\u2014=DR", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "10\u00b0", "10\u00b0", "5...", "Denoising", "algorithms:", "randomQR-1", "SRO", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014*-PD", "\u2014*DR", "107", "10%", "Time", "(s)", "10%", "Denoising", "algorithms:", "randomQR-4", "ener", "Teena", "oe", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014*DR", "107", "10\u00b0", "Time", "(s)", "10?", "Denoising", "algorithms:", "diagram", "10\u00b0", "Fonte,", "~~", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "*\u00ae", "Goldfarb-Yin", "~~\u00e9~", "Kalmagorav", "\u2014ePD", "\u2014*DR", "0\u00b0", "107", "Time", "(s)", "10?", "Denoising", "algorithms:", "contour", "encanta", "ag", "Owe,", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014*-PD", "\u2014DR", "4", "10\u00b0", "Time", "(s)", "107", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "Denoising", "algorithms:", "randomQR-2", "a", "RO", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014*-PD", "\u2014wDR", "0\u00b0", "107", "Time", "(s)", "10%", "Denoising", "algorithms:", "shape", "Brett", "neon:", "tn.", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014wDR", "10?", "107", "Time", "(s)", "10\u00b0", "Denoising", "algorithms:", "text", "~~", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "*\u00ae", "Goldfarb-Yin", "~~\u00e9~", "Kalmagorav", "\u2014ePD", "\u2014*DR", "10\"", "10\u00b0", "10'", "Time", "(s)", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "Kalmagorav", "\u2014e-PD", "\u2014=DR", "10\u00b0", "10\"", "Time", "(s)", "107", "Figure", "18:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "denoising", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "Considering", "these", "facts,", "the", "method", "of", "choice", "among", "the", "ones", "considered", "depends", "on", "the", "desired", "accuracy.", "We", "argue,", "however,", "that", "for", "the", "purpose", "of", "image", "processing", "a", "mid-quality", "solution", "is", "sufficient.", "The", "ISNR", "plots", "of", "Figure", "19", "certainly", "seem", "to", "support", "this,", "as", "the", "perceived", "quality", "of", "the", "reconstruction,", "roughly", "approximated", "by", "the", "ISNR,", "saturates", "rapidly", "and", "no", "significant", "improvements", "are", "obtained", "through", "further", "optimization.", "Given", "this,", "the", "proposed", "methods", "seem", "to", "be", "the", "best", "suited", "for", "the", "considered", "task.", "38", "Denoising", "algorithms:", "randomQR-0", "ont\u00bb", "Split-Bregman", "ondat", "hambolle-Pock", "soo\u00bb", "Yang", "*", "Goldfarb-Yin", "~&", "Kalmagorav", "\u2014*PD", "\u2014*DR", "10%", "10%", "107", "Time", "(s)", "Denoising", "algorithms:", "randomQR-3", "6", "5", "4", "oc", "a", "3", "~~", "Split-Bregman", "2", "2", "*\u00ae", "=Goldfarb-Yin", "1", "of\u00bb", "Kolmogorov", "PD", "DR", "0", "10?", "10\"", "10\u00b0", "Time", "(s)", "Denoising", "algorithms:", "trollface", "8", "*", "7", "6", "5", "oc", "Za", ":", "Qn", "ow\u00bb", "Split-Bregman", "ondat", "3", "hambolle-Pock", "\u2018ang", "2", "*", "Goldfarb-Yin", "~o&", "Kalmagorav", "1", "PD", "\u2014*DR", "0", "10?", "10\"", "10\u00b0", "Time", "(s)", "Denoising", "algorithms:", "comic", "7", "6", "5", "o4", "2", "a", "~~~", "Split-Bregman", "3", "ondat", "hambolle-Pock", "2", "soos", "Yang", "*\u00ae", "Goldfarb-Yin", "~o&", "Kalmagorav", "1", "\u2014sPD", "\u2014*DR", "0", "107", "107", "10\u00b0", "Time", "(s)", "Denoising", "algorithms:", "randomQR-1", "3.5", "3", "25", "\u00a32", "a", "_", "ow\u00bb", "Split-Bregman", "_", "\u00bb", "Condat", "15", "~-+\u00bb", "Chambolle-Pock", "sos", "Yang", "1", "*", "Goldfarb-Yin", "~&", "Kalmagorav", "05", "PD", "\u2014*-DR", "0", "10%", "10%", "107", "Time", "(s)", "Denoising", "algorithms:", "randomQR-4", "4", "3.5", "3", "25", "oc", "a", "2", "\u00bb\u00bb", "Split-Bregman", "-", "\u00bb", "Condat", "1.5", "\u00bb", "Chambolle-Pack", "ve\u00bb", "Yang", "1", "*", "=Goldfarb-Yin", "~&\u00bb", "Kalmagorav", "0.5", "\u2014s\u2014PD", "DR", "0", "10?", "10\"", "10\u00b0", "Time", "(s)", "Denoising", "algorithms:", "diagram", "6", "4", "2", "oc", "Zo", ":", "Qn", "ow\u00bb", "Split-Bregman", "~", "Condat", "2", "\u00bb", "Chambolle-Pack", "oe\u00bb", "Yang", "-4", "*", "Goldfarb-Yin", "~o&", "Kalmagorav", "PD", "6", "DR", "10?", "107", "Time", "(s)", "Denoising", "algorithms:", "contour", "ISNR", "~~", "Split-Bregman", "~", "Condat", "\u00bb", "Chambolle-Pock", "\u00bb\u00bb", "Yang", "Golefarb-Yin", "\u00bb-", "Kalmagorav", "\u2014*PD", "\u2014*DR", "107", "10\u00b0", "10\"", "Time", "(s)", "Denoising", "algorithms:", "randomQR-2", "Split-Bregman", "Condat", "Chambolle-Pock", "se\u00bb", "Yang", "*", "Goldfarb-Yin", "~~\u00bb", "Kalmagorev", "\u2014*PD", "\u2014*DR", "10%", "107", "10\u00b0", "Time", "(s)", "Denoising", "algorithms:", "shape", "6", "5", "4", "oc", "2", "a3", "Split-Bregman", "Condat", "Chambolle-Pock", "2", "woes", "Yang", "*\u00ae", "=Goldfarb-Yin", "1", "~o\u00e9\u00bb", "Kalmagorav", "PD", "\u2014*DR", "0", "10%", "10?", "107", "Time", "(s)", "Denoising", "algorithms:", "text", "Split-Bregman", "Condat", "Chambolle-Pock", "Yang", "Golefarb-Yin", "~~\u00bb", "Kalmagorav", "\u2014ePD", "\u2014*-DR", "10\"", "10\u00b0", "10'", "Time", "(s)", "Denoising", "algorithms:", "phantom", "ISNR", "wo", "Split-Bregman", "Condat", "Chambolle-Pock", "oe\u00bb", "Yang", "*\u00ae", "Goldfarb-Yin", "~&\u00bb", "Kalmagorev", "\u2014-PD", "\u2014*DR", "0", "107", "10\u00b0", "10\"", "Time", "(s)", "Figure", "19:", "Increased", "Signal", "to", "Noise", "Ratio", "(SNR)", "vs", "time", "of", "the", "denoising", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "For", "quick", "reference,", "Table", "5", "presents", "a", "summary", "of", "key", "points", "of", "the", "compared", "methods,", "along", "with", "some", "recommendations", "about", "when", "to", "put", "them", "to", "use.", "5.3.2.", "Parallelization", "experiments", "In", "addition", "to", "the", "previous", "experiments", "and", "to", "illustrate", "the", "parallelization", "potential", "of", "the", "presented", "anisotropic", "filtering", "method,", "Figure", "20", "plots", "running", "times", "for", "the", "PD", "algorithm", "as", "the", "number", "of", "processor", "core", "ranges", "39", "Table", "5:", "Summary", "of", "key", "points", "of", "the", "compared", "Tv7_;", "proximity", "(denoising)", "methods.", "Method", "Key", "points", "Douglas", "Rachford", "++", "Fast", "convergence", "to", "medium-quality", "Embarrassingly", "parallel", "Slow", "for", "higher", "accuracies", "Ideal", "for", "standard", "denoising", "tasks", "Proximal", "Dykstra", "|", "+", "|", "J", "1", "Attainable", "accuracies", "similar", "to", "DR", "But", "slower", "than", "DR", "Use", "DR", "instead", "Split", "Bregman", "+", "1", "Eventually", "performs", "similarly", "to", "DR", "Slow", "convergence", "at", "first", "iterations", "Use", "DR", "instead", "Chambolle\u2014Pock", "1", "Slow", "Use", "other", "method", "instead", "Condat", "+", "Solves", "objectives", "involving", "a", "sum", "of", "smooth/non\u2014smooth", "functions", "with", "linear", "operators", "Reduces", "to", "Chambolle\u2014Pock", "when", "solving", "basic", "image", "denoising", "Use", "only", "when", "dealing", "with", "more", "complex", "functionals", "ADMM", "(Yang)", "i+", "|", "i", "More", "accurate", "Slightly", "slower", "than", "Kolmogorov", "Bad", "behavior", "for", "mid-quality", "solutions", "Use", "Kolmogorov", "instead", "Kolmogorov", "i+", "|", "i", "1", "More", "accurate", "Slower", "than", "DR", "for", "low", "accuracies", "Useful", "when", "extremely", "accurate", "solutions", "are", "required", "Goldfarb-", "Yin", "+", "1", "Solves", "the", "discrete", "version", "of", "the", "problem", "Slow", "Poor", "accuracy", "for", "the", "continuous", "version", "Apply", "only", "when", "solving", "the", "discrete", "problem", "from", "1", "through", "16.", "We", "see", "that", "for", "the", "smaller", "images,", "the", "gains", "due", "to", "more", "processors", "essentially", "flatten", "out", "by", "8", "cores,", "where", "synchronization", "and", "memory", "contention", "offsets", "potential", "computational", "gains", "(first", "row).", "For", "the", "larger", "images,", "there", "is", "steadier", "speedup", "as", "the", "number", "of", "cores", "increase", "(in", "each", "plot", "there", "seems", "to", "be", "a", "\u201cbump\u201d", "at", "14", "processors;", "we", "attribute", "this", "to", "a", "quirk", "of", "the", "multicore", "machine", "that", "we", "used).", "From", "all", "the", "plots,", "however,", "the", "message", "is", "clear:", "our", "TV", "prox", "operators", "exploit", "parallelization", "well,", "and", "show", "substantial", "speedups", "as", "more", "processor", "cores", "become", "available.", "We", "should", "also", "note", "in", "passing", "that", "the", "Split", "Bregman", "method,", "which", "in", "the", "previous", "experiments", "showed", "a", "reasonable", "performance,", "turns", "out", "to", "be", "much", "harder", "to", "parallelize.", "This", "fact", "was", "already", "observed", "by", "[92]", "in", "the", "context", "of", "isotropic", "TV.", "Therefore", "when", "several", "processor", "cores", "are", "available", "the", "proposed", "modular", "strategy", "seems", "to", "be", "even", "more", "suitable", "to", "the", "task.", "40", "TV-L1", "times", "for", "image:", "shape", "TV-LI", "times", "for", "image:", "trollface", "TV-L1", "times", "for", "image:", "diagram", "TV-L1", "times", "for", "image:", "text", "16", "30", "14", "250", "700", "12", "25", "600", "a", "__", "200", "e", "_", "E10", "E", "E", "E500", ">", "=", "@", "20", "=", "o", "o", "\u00a3", "\u2014", "150", "\u00a3", "\u00a3", "400", "Fs", "e", "=", "15", "300", "6", "100", "200", "10", "4", "50", "100", "2", "4", "6", "8", "10", "12", "14", "\u00ab16", "2", "4", "6", "8", "10", "12", "#14", "\u00ab16", "2", "4", "6", "8", "10", "12", "14", "\u00ab16", "2", "4", "6", "8", "10", "\u00ab12", "\u00ab14", "#", "processor", "cores", "#", "processor", "cores", "#", "processor", "cores", "#", "processor", "cores", "TV-L1", "times", "for", "image:", "comic", "TV-L1", "times", "for", "image:", "contour", "TV-L1", "times", "for", "image:", "phantom", "jo?", "TV-L1", "times", "for", "image:", "gausi", "250", "2500", "4500", "25", "200", "4000", "2000", "=_", "-_", "-~", "3500", "ef", "a", "\u00a3150", "\u2014", "\u2014\u00a3", "&", "2", "@", "@", "1900", "@", "3000", "\u00ae", "E", "E", "E", "E", "e", "-", "-F", "2500", "15", "100", "1000", "2000", "50", "500", "1500", "1", "2", "6", "8", "10", "12", "14", "16", "2", "4", "6", "8", "10", "12", "14", "\u00ab16", "2", "4", "6", "8", "10", "12", "14", "\u00ab16", "2", "4", "6", "8", "10", "12", "14", "16", "#", "processor", "cores", "#", "processor", "cores", "#", "processor", "cores", "#", "processor", "cores", "Figure", "20:", "Multicore", "speedups", "on", "different", "images", "(see", "also", "Table", "6)", "5.3.3", "Anisotropic", "image", "deconvolution", "Taking", "a", "step", "forward", "we", "now", "confront", "the", "problem", "of", "image", "deconvolution", "(or", "image", "deblurring).", "This", "setting", "is", "more", "complex", "since", "the", "task", "of", "image", "recovery", "is", "made", "harder", "by", "the", "presence", "of", "a", "convolution", "kernel", "K", "that", "distorts", "the", "image", "as", "bo", "=", "Kx", "b+", "N", "\u2019", "where", "IN", "is", "noise", "as", "before", "and", "*", "denotes", "convolution.", "To", "recover", "the", "original", "image", "py", "from", "the", "observed", "jug,", "it", "is", "common", "to", "solve", "the", "following", "deconvolution", "problem", "min", "4", "||F", "*", "X", "\u2014", "pllp", "+", "Ar(X).", "(5.4)", "As", "before,", "the", "regularizer", "r(X", ")", "can", "be", "isotropic", "or", "anisotropic", "TV,", "among", "others.", "Here", "we", "focus", "again", "on", "the", "anisotropic", "TV", "case", "to", "show", "how", "the", "presented", "solvers", "can", "also", "be", "used", "for", "this", "image", "task.", "Problem", "(5.4)", "also", "fits", "the", "proximal", "splitting", "framework,", "and", "so", "we", "employ", "the", "popular", "FISTA", "[13]", "method", "for", "image", "processing.", "The", "gradient", "of", "the", "loss", "can", "be", "dealt", "efficiently", "by", "exploiting", "K", "being", "a", "convolution", "operator,", "which", "through", "the", "well-known", "convolution", "theorem", "is", "equivalent", "to", "a", "dot", "product", "in", "the", "frequencies", "space,", "and", "so", "the", "computation", "is", "done", "by", "means", "of", "fast", "Fourier", "transforms", "and", "products.", "Several", "other", "solvers", "that", "explicitly", "deal", "with", "convolution", "operators", "are", "also", "available", "[1,", "16].", "A", "notable", "solver", "specific", "for", "the", "isotropic", "case", "is", "given", "by", "the", "work", "of", "Krishnan", "and", "Fergus", "[52],", "that", "handles", "even", "nonconvex", "isotropic", "TV-norms", "(0", "<", "p", "<", "1).", "But", "this", "approach", "does", "not", "extend", "to", "the", "anisotropic", "case,", "so", "we", "focus", "on", "general", "proximal", "splitting.", "We", "use", "the", "same", "test", "images", "as", "for", "our", "denoising", "experiments", "(Figure", "25),", "with", "identical", "noise", "patterns", "(Table", "4)", "for", "the", "QR", "images,", "and", "gaussian", "noise", "with", "variance", "0.05", "for", "the", "rest.", "In", "addition,", "we", "convolve", "each", "image", "with", "a", "different", "type", "of", "kernel", "to", "assess", "the", "behavior", "for", "a", "variety", "of", "convolutions;", "Table", "6", "shows", "the", "kernels", "applied.", "We", "constructed", "these", "kernels", "using", "Matlab\u2019s", "fspecial", "function;", "the", "convolved", "images", "are", "shown", "in", "Figure", "28.", "The", "values", "for", "the", "regularizer", "\\", "were", "determined", "by", "maximizing", "the", "reconstruction", "quality", "measured", "in", "ISNR.", "Since", "deconvolution", "is", "much", "more", "expensive", "than", "denoising,", "instead", "of", "performing", "an", "exhaustive", "search", "for", "the", "best", "A,", "we", "used", "a", "Focused", "Grid", "Search", "strategy", "[7,", "9]", "to", "find", "the", "best", "performing", "values.", "41", "Image", "Convolution", "Parameters", "randomQR", "Motion", "Length", "5,", "Angle", "35\u00b0", "shape", "Average", "Size", "3", "x", "3", "trollface", "Disk", "Radius", "5", "diagram", "Motion", "Length", "5,", "Angle", "0\u00b0", "text", "Average", "Size", "1", "x", "10", "comic", "Gaussian", "Size", "15,", "Deviation", "2", "contour", "Disk", "Radius", "5", "phantom", "Motion", "Length", "100,", "Angle", "240\u00b0", "Table", "6:", "Convolution", "kernels", "used", "for", "each", "test", "image.", "Average", "substitutes", "each", "pixel", "with", "the", "average", "of", "its", "surrounding", "n", "X", "m", "neighbors.", "Disk", "performs", "the", "same", "operation", "within", "a", "disk-shaped", "neighborhood", "of", "the", "shown", "radius.", "Gaussian", "uses", "a7", "X", "7", "neighborhood", "and", "assigns", "different", "weights", "to", "each", "neighbor", "following", "the", "value", "of", "a", "gaussian", "distribution", "of", "the", "indicated", "deviation", "centered", "at", "the", "current", "pixel.", "Motion", "emulates", "the", "distortions", "produced", "when", "taking", "a", "picture", "in", "motion,", "defining", "a", "neighborhood", "following", "a", "vector", "of", "the", "indicated", "length", "and", "angle.", "Any", "denoising", "subroutine", "can", "be", "plugged", "into", "the", "aforementioned", "deconvolution", "methods,", "however", "for", "comparison", "purposes", "we", "run", "our", "experiments", "with", "the", "best", "proposed", "method,", "Douglas", "Rachford", "(Alternating", "Reflections),", "and", "the", "best", "competing", "method", "among", "those", "reviewed", "from", "the", "literature,", "Kolmogorov", "et", "al.", "A", "key", "parameter", "in", "deconvolution", "performance", "is", "for", "how", "long", "should", "these", "methods", "be", "run", "at", "each", "FISTA", "iteration.", "To", "select", "this,", "we", "first", "run", "FISTA", "with", "100", "iterations", "of", "Douglas", "Rachford", "per", "step,", "for", "a", "large", "number", "of", "FISTA", "steps,", "and", "take", "the", "final", "objective", "value", "as", "an", "estimate", "of", "the", "optimum.", "Then", "we", "find", "the", "minimum", "number", "of", "Douglas", "Rachford", "and", "Kolmogorov", "iterations", "for", "which", "FISTA", "can", "achieve", "a", "relative", "distance", "to", "such", "optimum", "below", "10~\u00b0.", "The", "reason", "for", "doing", "this", "is", "that", "for", "larger", "distances", "the", "attained", "ISNR", "values", "are", "still", "far", "from", "convergence.", "This", "turned", "to", "be", "5", "iterations", "for", "Douglas", "Rachford", "an", "10", "for", "Kolmogorov.", "We", "then", "run", "FISTA", "for", "such", "configurations", "of", "the", "inner", "solvers,", "and", "others", "with", "a", "larger", "number", "of", "inner", "iterations,", "for", "comparison", "purposes.", "Figures", "21-22", "show", "the", "evolution", "of", "objective", "values", "and", "ISNR", "for", "all", "the", "tested", "configurations.", "In", "general,", "Douglas", "Rachford", "seems", "to", "be", "slightly", "better", "at", "finding", "more", "accurate", "solutions,", "and", "also", "faster", "at", "converging", "to", "the", "final", "ISNR", "value.", "We", "explain", "this", "by", "the", "fact", "that", "the", "major", "advantage", "of", "Douglas", "Rachford", "is", "its", "aforementioned", "ability", "to", "find", "medium\u2014quality", "solutions", "in", "a", "very", "small", "number", "of", "iterations:", "this", "is", "why", "with", "a", "small", "number", "of", "inner", "DR", "iterates", "we", "can", "converge", "to", "good", "ISRN", "levels.", "For", "reference", "we", "also", "provide", "the", "resultant", "deconvoluted", "images", "as", "Figure", "29.", "5.3.4", "2D", "Fused-Lasso", "Signal", "Approximator", "The", "Fused\u2014Lasso", "Signal", "Approximator", "(FLSA)", "[34]", "can", "be", "regarded", "as", "a", "particular", "case", "of", "Fused-Lasso", "where", "the", "input", "matrix", "A", "is", "the", "identity", "matrix", "J,", "1.e.,", "ming", "\u2014", "\u00a7l|e", "\u2014", "yll3", "+", "Arial,", "+", "AvT", "vy?", "(@).", "This", "problem", "can", "be", "solved", "immediately", "using", "the", "methods", "presented", "in", "\u00a75.2.4.", "A", "slightly", "less", "trivial", "problem", "is", "the", "one", "posed", "by", "the", "2D", "variant", "of", "FLSA:", "minx", "3||X", "\u2014", "\u00a5", "|p", "+", "Ailivec(X)|\\1", "+", "AT", "v7", "(X).", "(5.5)", "Friedman", "et", "al.", "[34]", "used", "this", "model", "for", "denoising", "images", "where", "a", "large", "number", "of", "pixels", "are", "known", "to", "be", "completely", "black", "(intensity", "0),", "which", "aligns", "well", "with", "the", "structure", "imposed", "by", "the", "@", "regularizer.", "Akin", "to", "the", "1D-case,", "2D-FLSA", "(5.5)", "can", "also", "be", "solved", "by", "decomposing", "its", "computation", "into", "two", "prox", "operators", "[34];", "formally,", "PFO,", "|", "itaste,()(\u00a5)", "=", "Prox,", "i,", "(PPOXagrv@,(-y(\u00a5)):", "42", "Deconvolution", "algorithms:", "randomQR-0", "oot", "Kalmagorov(1", "~", "Kalmagerav(2t", "~", "Kalmagerav(3t", "~~~", "Kalmagorav(5t", "\u2014*\u2014DR(5)", "\u2014r\u2014", "DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014r-", "DR(50!", "Relative", "distance", "to", "optimum", "8339", "107", "10\u00b0", "Time", "(s)", "Deconvolution", "algorithms:", "randomQR-3", "~", "Kalmagorovt", "~~~", "Kalmagorevi", "\u2014r\u2014DR(5)", "Relative", "distance", "to", "optimum", "Time", "(s)", "Deconvolution", "algorithms:", "trollface", "oe", "~~~", "Kalmagorov(1", "~", "Kalmagerav(2t", "\u00bb", "Kalmagerav(3t", "~-e~", "Kalmagorayv(5t", "\u2014r\u2014", "DR(5)", "Relative", "distance", "to", "optimum", "2839", "10\u00b0", "10'", "Time", "(s)", "Deconvolution", "algorithms:", "comic", "~~~", "Kalmagorav(10)", "~", "Kalmagorav(20)", "~", "Kalmagorav(30)", "oo:", "Kolmogorov(50)", "\u2014*\u2014DR(5)", "\u2014*\u2014DR(10)", "10", "\u00ae", "+", "\u2014--DR(20)", "\u2014\u00bb\u2014DR(S0)", "Relative", "distance", "to", "optimum", "3S", "b", "Deconvolution", "algorithms:", "randomQR-1", "oot", "Kalmagorov(1", "Kalmagerav(2t", "Kalmagerav(3t", "~~~", "Kalmagorav(5t", "\u2014*\u2014DR(5)", "\u2014r\u2014", "DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014r-", "DR(50!", "0", "0)", "0)", "0)", "Relative", "distance", "to", "optimum", "107", "10\u00b0", "10\"", "Time", "(s)", "Deconvolution", "algorithms:", "randomQR-4", "~~~", "Kolmogorov", "Kalmagorov{", "Relative", "distance", "to", "optimum", "Time", "(s)", "Deconvolution", "algorithms:", "diagram", "~~~", "Kalmagorov(1", "Kalmagerav(2t", "Kalmagerav(3t", "Kalmagerav(5t", "\u2014r\u2014", "DR(5)", "Relative", "distance", "to", "optimum", "$885", "10\u00b0", "10'", "Time", "(s)", "Deconvolution", "algorithms:", "contour", "~~~", "Kalmagorav(10)", "Kalmagerav{20)", "Kalmagerav{30)", "oo:", "Kolmogorov(50)", "\u2014*\u2014DR(5)", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014-~DR(S0)", "Relative", "distance", "to", "optimum", "Ss", "b", "Deconvolution", "algorithms:", "randomQR-2", "eo", "no", "ote:", "Kolmogorav(10)", "Kalmagerav{20)", "Kalmagerav{30)", "(50)", "Relative", "distance", "to", "optimum", "10%", "~~~", "Kalmagorevi", "\u2014=-DR(5)", "\u2014*\u2014DR(10}", "\u2014\u00bb\u2014DR(20}", "\u2014s-DR(50}", "107", "10\u00b0", "10\"", "Time", "(s)", "Deconvolution", "algorithms:", "shape", "Relative", "distance", "to", "optimum", "Time", "(s)", "Deconvolution", "algorithms:", "text", "SS", "~~~", "Kolmogorov", "(", "(", "Kolmogorov(:", "~~\u00bb", "Kalmagorov(!", "\u2014r\u2014", "DR(5)", "Relative", "distance", "to", "optimum", "10\u00b0", "10'", "10?", "Time", "(s)", "Deconvolution", "algorithms:", "phantom", "~~~", "Kalmagorav(10", "Kalmagorav(20)", "Kalmagarav(30)", "ow\u00bb", "Kalmagorav(50", "\u2014*\u2014DR(5)", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014-~DR(S0)", "Relative", "distance", "to", "optimum", "10\"", "107", "105", "Time", "(s)", "Figure", "21:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "deconvolution", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "Thus,", "to", "solve", "(5.5)", "we", "merely", "invoke", "one", "of", "the", "presented", "Tv)", "prox", "operators", "and", "then", "apply", "soft-", "thresholding", "to", "the", "results.", "Since", "soft-thresholding", "is", "done", "in", "closed", "form,", "the", "performance", "of", "a", "2D-FLSA", "solver", "depends", "only", "on", "its", "ability", "to", "compute", "Tv),", "-proximity", "efficiently.", "We", "can", "then", "safely", "claim", "that", "the", "results", "summarized", "in", "table", "5", "apply", "equivalently", "to", "2D-FLSA,", "and", "so", "the", "proposed", "Douglas", "Rachford", "method", "performs", "best", "when", "reconstruction", "ISNR", "is", "the", "primary", "concern.", "43", "Deconvolution", "algorithms:", "randomQR-0", "oom", "Kalmagorov(1", "olmagorav(2'", "almagorav(3t", "~-e\u00bb", "Kalmagoarev(5t", "\u2014\u00bb\u2014DR(5)", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014*\u2014DR(S0)", "0", "0)", "0)", "0)", "107", "10\u00b0", "Time", "(s)", "Deconvolution", "algorithms:", "randomQR-3", "28", "2.6", "24", "cc", "H22", "2", "~~", "Kolmogorov", "\u2014vr\u2014DR(5)", "\u2014=-DR(10)", "18", "\u2014\u00bb-DR(20)", "\u2014*-DR(50)", "10\u00b0", "10'", "Time", "(s)", "Deconvolution", "algorithms:", "trollface", "5", "ae", "45", "4", "cc", "5", "3.5", "GB", "(10)", "3", "(20)", "(30)", "25", "~os", "Kolmogarov(50)", "\u00b0", "\u2014*-DR(5}", "\u2014\u00bb\u2014DR(10)", "2", "\u2014\u00bb-DR(20)", "\u2014=\u2014DR(50)", "10\u00b0", "10'", "Time", "(s)", "Deconvolution", "algorithms:", "comic", "2.5", "ISNR", "ow\u00bb", "Kolmogorov", "(10)", "(20)", "almagorav(30)", "sows", "Kolmagorov(50)", "\u2014*\u2014DR(5)", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014\u00bb\u2014DR(S0)", "Deconvolution", "algorithms:", "randomQR-1", "2.5", "ISNR", "ro", "oom", "Kalmagorov(1", "~-\u00ae\u00bb", "Kalmagarav(2t", "~~\u00bb", "Kalmagorav(3t", "~-e\u00bb", "Kalmagoarev(5t", "\u2014\u00bb\u2014DR(5)", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014*\u2014DR(S0)", "0", "0)", "0)", "0)", "107", "10\u00b0", "10\"", "Time", "(s)", "Deconvolution", "algorithms:", "randomQR-4", "2.6", "24", "2.2", "a", "a", "~~", "Kolmagorov(10)", "=", "2", "\u00bb", "Kolmagorov(20}", "~\u00ae\u00bb", "Kalmagoarav(30)", "~om\u00bb", "Kolmogarov(50)", "18", "\u2014*-DR(5)", "\u2014\u00bb-DR(10)", "16", "\u2014*-DR(20)", ":", "\u2014*\u2014DR(S0)", "10\u00b0", "10'", "Time", "(s)", "Deconvolution", "algorithms:", "diagram", "2", "H22", "~~~", "Kolmagorow(10)", "~\u00bb", "Kalmagorav(20)", "2", "om\u00bb", "Kalmagarav(30)", "~~", "Kolmagorov(50)", "\u2014*-DR(5}", "1.8", "\u2014r\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "\u2014\u00bb\u2014DR(S0)", "1.6", "10\u00b0", "10!", "Time", "(s)", "Deconvolution", "algorithms:", "contour", "~~", "Kolmagorav(10)", "~-\u00ae\u00bb", "Kalmagoarav(20)", "~", "Kalmagorav(30)", "(50)", "4", "ow\u00bb", "Kolmogorov", "\u2014*-DR(5)", "\u2014*\u2014DR(10)", "3", "\u2014\u00bb-DR(20)", "\u2014\u00bb\u2014DR(S0)", "10!", "10\u00b0", "Deconvolution", "algorithms:", "randomQR-2", "2.8", "2.6", "oc", "He22", "te\u00bb", "Kolmogorov(10)", "_", "Kolmogorov(20)", "Kolmogorov(30)", "2", "~-%\u00bb", "Kalmogorov(50)", "\u2014r\u2014", "DR(5)", "\u2014r\u2014DR(10)", "18", "\u2014\u00bb-DR(20)", "i", "\u2014r\u2014DR(50)", "107", "10\u00b0", "10!", "Time", "(s)", "Deconvolution", "algorithms:", "shape", "Kalmagorov{", "Kalmagorov{", "Kalmagorov{", "~e\u00bb", "Kalmagorevi", "\u2014vr\u2014DR(5)", "\u2014\u00bb\u2014DR(10)", "\u2014*\u2014DR(20)", "\u2014*\u2014DR(50)", "10\"", "10\u00b0", "Time", "(s)", "Deconvolution", "algorithms:", "text", "2.4", "~~~", "Kalmogorav(10)", "Kalmagorav{20)", "Kalmagorav(30)", "~~#", "Kalmogorov(50)", "\u2014r-", "DR(5)", "\u2014\u00bb\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "1.6", ",", "\u2014*\u2014DR(50)", "10\u00b0", "10'", "10?", "Time", "(s)", "Deconvolution", "algorithms:", "phantom", "ow\u00bb", "Kolmogorov", "(10)", "3", "Kalmagorav{20)", "Kolmogorov(30)", "25", "ow\u00bb", "Kalmogorov(50)", "\u2014*\u2014DR(5)", "2", "\u2014*\u2014DR(10)", "\u2014\u00bb\u2014DR(20)", "15", "\u2014\u00bb\u2014DR(50)", "107", "10?", "10\u00b0", "Time", "(s)", "Figure", "22:", "Increased", "Signal", "to", "Noise", "Ratio", "(ISNR)", "vs", "time", "of", "the", "deconvolution", "2D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "images", "considered", "in", "the", "experiments.", "5.4", "Application", "of", "higher-dimensional", "TV", "We", "now", "apply", "the", "presented", "multidimensional", "TV", "regularizer", "to", "anisotropic", "filtering", "for", "video", "denoising.", "The", "extension", "to", "videos", "from", "images", "is", "natural.", "Say", "a", "video", "contains", "f", "frames", "of", "size", "n", "x", "m", "pixels;", "this", "video", "can", "be", "viewed", "as", "a", "3D-tensor", "X", "\u20ac", "R\u201d*\u201d\u2122*,", "on", "which", "a", "3D-TV", "based", "filter", "can", "be", "effected", "by", "minx", "P1,P2,P3", "44", "3IX", "\u2014", "Valle", "+", "AT", "Vp?", "po.p9(%)s", "(5.6)", "Relative", "distance", "to", "optimum", "BR", "\u00b0", "be", "\u00b0", "&", "BR", "\u00b0", "d", "Sequence", "Frame", "resolution", "Number", "of", "frames", "Total", "number", "of", "pixels", "salesman", "288", "x", "352", "50", "5", "million", "coastguard", "176", "x", "144", "300", "7.6", "million", "bicycle", "720", "x", "576", "30", "12.4", "million", "Table", "7:", "Size", "details", "of", "video", "sequences", "used", "in", "the", "video", "denoising", "experiments.", "where", "Ug", "is", "the", "observed", "noisy", "video,", "and", "Typ.", "p2.p3", "=", "Tv,", "with", "p", "=", "[p1,p2,p3|.", "Application", "of", "the", "filter", "(5.6)", "is", "nothing", "but", "computation", "of", "the", "prox", "operator,", "which", "can", "be", "done", "using", "the", "Parallel-Proximal", "Dykstra", "(PPD)", "algorithm", "presented", "in", "Sec.", "4.", "We", "apply", "this", "idea", "to", "the", "video", "sequences", "detailed", "in", "Table", "7.", "All", "of", "the", "sequences", "are", "made", "of", "grayscale", "pixels.", "Figure", "30", "in", "the", "Appendix", "shows", "some", "of", "the", "frames", "of", "the", "salesman", "sequence.", "We", "noise", "every", "frame", "of", "these", "sequences", "by", "applying", "gaussian", "noise", "with", "zero", "mean", "and", "variance", "0.01,", "using", "Matlab\u2019s", "imnoise", "function.", "Then", "we", "solve", "problem", "5.6", "for", "each", "sequence,", "adjusting", "the", "regularization", "value", "so", "as", "to", "maximize", "ISNR", "of", "the", "reconstructed", "signal.", "We", "test", "the", "following", "algorithms,", "which", "have", "been", "previously", "applied", "in", "the", "literature", "for", "solving", "3D-TV,", "with", "the", "only", "exception", "Parallel", "Proximal", "Dykstra:", "e", "Parallel", "Proximal", "Dykstra", "(\u00a7", "4.1.1).", "e", "Yang\u2019s", "method,", "which", "is", "based", "on", "ADMM", "(8", "4.1.1)", "e", "The", "maximum", "flow", "approach", "by", "Goldfarb", "and", "Yin", "[35],", "which", "features", "an", "implementation", "for", "3D", "grids,", "thus", "solving", "a", "discrete-valued", "version", "of", "3D-TV.", "For", "both", "PPD", "and", "ADMM", "we", "again", "make", "use", "of", "linearized", "taut-string", "1D", "TV", "solver.", "We", "must", "also", "point", "out", "that", "other", "image", "denoising", "methods", "seem", "amenable", "for", "extension", "into", "the", "multidimensional", "setting,", "such", "as", "Condat\u2019s", "and", "Chambolle-Pock", "methods.", "However", "in", "the", "light", "of", "our", "image", "denoising", "results", "we", "do", "not", "deem", "them", "as", "good", "choices", "for", "this", "problem.", "A", "more", "reasonable", "choice", "might", "be", "to", "extend", "Split-Bregman", "to", "multiple", "dimensions,", "but", "such", "an", "extension", "has", "not", "been", "implemented", "or", "proposed", "as", "far", "as", "we", "know.", "We", "would", "also", "like", "to", "note", "that", "we", "have", "considered", "extending", "the", "Douglas", "Rachford", "method", "to", "a", "multidimensional", "setting,", "however", "such", "task", "is", "complex", "and", "thus", "we", "decided", "to", "focus", "on", "Parallel", "Proximal", "Dykstra.", "Denoising", "algorithms:", "salesman", "Denoising", "algorithms:", "coastguard", "Denoising", "algorithms:", "bicycle", "Deena", "PO", "-", "BR", "\u00b0", "be", "\u00b0", "&", "Relative", "distance", "to", "optimum", "Relative", "distance", "to", "optimum", "oon", "Yang", "a", "oon", "Yang", "a", "10\u00b0;", "oa", "Yang", "a", "ke", "Goldfarb-\u00a5in", "a", "10\u00b0}", "4%", "Goldfarb-\u00a5in", "5", "%e", "Goldfarb-\u00a5in", "5", "\u2014e\u2014PPD", "5", "\u2014e\u2014PPD", "h", "\u2014e\u2014PPD", "4", "4", "10", "10\u00b0", "wo", "10\u00b0", "10\u00b0", ";", "10\u00b0", "Time", "(s)", "Time", "(s)", "Time", "(s)", "Figure", "23:", "Relative", "distance", "to", "optimum", "vs", "time", "of", "the", "denoising", "3D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "video", "sequences", "considered", "in", "the", "experiments.", "Similarly", "to", "our", "previous", "image", "denoising", "experiments,", "we", "ran", "the", "algorithms", "under", "comparison", "for", "each", "video", "sequence", "and", "measured", "its", "ISNR", "and", "relative", "distance", "to", "the", "optimal", "objective", "value", "of", "the", "current", "solution", "at", "each", "iteration", "through", "their", "execution.", "Again", "the", "exception", "is", "the", "Goldfarb-Yin", "method,", "which", "is", "45", "Denoising", "algorithms:", "salesman", "Denoising", "algorithms:", "coastguard", "Denoising", "algorithms:", "bicycle", "o", "vom", "Yang", "1", "a", "vom", "Yang", "-", "vom", "Yang", "oe", "%&", "Goldfarb-Yin", "oe", "%&", "=", "Goldfarb-\u00a5in", "oe", "%&", "=", "Goldfarb-\u00a5in", "we", "\u2014e\u2014", "PPD", "a", "\u2014e\u2014", "PPD", "we", "\u2014e\u2014", "PPD", "\u201d", "1", "2", "om", "1", "2", "om", "1", "2", "10", "10", "10", ";", "10", "10", ";", "10", "Time", "(s)", "Time", "(s)", "Time", "(s)", "Figure", "24:", "Increased", "Signal", "to", "Noise", "Ratio", "(SNR)", "vs", "time", "of", "the", "denoising", "3D-TV", "algorithms", "under", "comparison,", "for", "the", "different", "video", "sequences", "considered", "in", "the", "experiments.", "non-iterative", "and", "so", "we", "only", "report", "the", "time", "required", "for", "its", "termination.", "The", "optimal", "objective", "value", "was", "estimated", "by", "running", "all", "methods", "for", "a", "very", "large", "number", "of", "iterations", "and", "taking", "the", "minimum", "value", "of", "them", "all.", "This", "produced", "the", "plots", "shown", "in", "Figures", "23-24.", "From", "them", "the", "following", "observations", "are", "of", "relevance:", "e", "Following", "the", "pattern", "observed", "in", "the", "image", "denoising", "experiments,", "ADMM", "(Yang\u2019s", "method)", "is", "best", "suited", "for", "finding", "very", "accurate", "solutions.", "e", "The", "method", "by", "Goldfarb", "and", "Yin", "again", "provides", "suboptimal", "solutions,", "due", "to", "the", "discrete", "approximation", "it", "uses.", "e", "Parallel", "Proximal", "Dykstra", "is", "the", "fastest", "to", "achieve", "a", "mid-quality", "solution.", "e", "Intermediate", "solutions", "prior", "to", "convergence", "of", "the", "PPD", "run", "result", "in", "better", "ISNR", "values", "for", "the", "coastguard", "and", "bicycle", "datasets.", "This", "hints", "that", "the", "denoising", "model", "used", "in", "this", "experiment", "may", "not", "be", "optimal", "for", "these", "kind", "of", "signals;", "indeed,", "more", "advanced", "denoising", "models", "abound", "in", "the", "signal", "processing", "literature.", "Hence", "we", "do", "not", "claim", "novel", "results", "in", "terms", "of", "ISNR", "quality,", "but", "just", "in", "solving", "this", "classic", "denoising", "model", "more", "efficiently.", "The", "ISNR", "plots", "in", "Figure", "24", "also", "show", "how", "both", "Parallel", "Proximal", "Dykstra", "and", "ADMM", "(Yang\u2019s", "method)", "converge", "to", "equivalent", "solutions", "in", "practice.", "Therefore,", "for", "the", "purpose", "of", "video", "denoising", "PPD", "seems", "to", "be", "the", "best", "choice,", "unless", "for", "some", "reason", "a", "high", "degree", "of", "accuracy", "is", "required,", "for", "which", "ADMM", "should", "be", "preferred.", "Acknowledgments", "AB", "acknowledges", "partial", "financial", "support", "from", "Spain\u2019s", "grants", "TIN2010-21575-C02-01,", "TIN2013-42351-P,", "$2013/ICE-2845", "CASI-CAM-CM,", "TIN2016-76406-P", "and", "TIN2015-70308-REDT", "(MINECO/FEDER", "EU)", "during", "the", "long", "period", "leading", "to", "the", "writing", "of", "this", "manuscript.", "We", "thank", "R.", "Tibshirani", "for", "bringing", "[45]", "to", "our", "attention,", "and", "S.", "Jegelka", "for", "alerting", "us", "to", "the", "importance", "of", "weighted", "total-variation", "problems.", "References", "[1]", "M.", "V.", "Afonso,", "J.", "M.", "Bioucas-Dias,", "and", "M.", "A.", "T.", "Figueiredo.", "Fast", "image", "recovery", "using", "variable", "splitting", "and", "constrained", "optimization.", "IEEE", "Transactions", "on", "Image", "Processing,", "19(9),", "September", "2010.", "[2]", "C.", "M.", "Alaiz,", "A.", "Barbero,", "and", "J.", "R.", "Dorronsoro.", "Group", "fused", "lasso.", "Artificial", "Neural", "Networks", "and", "Machine", "Learning-ICANN", "2013,", "page", "66,", "2013.", "[3]", "E.", "Anderson", "et", "al.", "LAPACK", "Users\u2019", "Guide.", "Society", "for", "Industrial", "and", "Applied", "Mathematics,", "Philadelphia,", "PA,", "third", "edition,", "1999.", "ISBN", "0-89871-447-8", "(paperback).", "46", "[4]", "[5]", "[6]", "[7]", "[10]", "[11]", "[12]", "[13]", "[14]", "[15]", "[16]", "[17]", "[18]", "[19]", "[20]", "[21]", "[22]", "[23]", "[24]", "[25]", "[26]", "[27]", "F.", "Bach.", "Structured", "sparsity-inducing", "norms", "through", "submodular", "functions.", "In", "NIPS,", "2010.", "Bach,", "Francis", "Learning", "with", "Submodular", "Functions:", "A", "Convex", "Optimization", "Perspective", "arXiv", "preprint", "arXiv:1111.6453", "F.", "Bach,", "R.", "Jenatton,", "J.", "Mairal,", "and", "G.", "Obozinski.", "Convex", "optimization", "with", "sparsity-inducing", "norms.", "In", "S.", "Sra,", "S.", "Nowozin,", "and", "S.", "J.", "Wright,", "editors,", "Optimization", "for", "Machine", "Learning.", "MIT", "Press,", "2011.", "A.", "Barbero,", "J.", "L\u00e9pez,", "and", "J.", "R.", "Dorronsoro.", "Finding", "Optimal", "Model", "Parameters", "by", "Discrete", "Grid", "Search.", "In", "Advances", "in", "Soft", "Computing:", "Innovations", "in", "Hybrid", "Intelligent", "Systems", "44,", "pages", "120-127.", "Springer,", "2008.", "Barbero,", "A.,", "Sra,", "S.", "Fast", "Newton-type", "methods", "for", "total", "variation", "regularization.", "In", "Proceedings", "of", "the", "28th", "International", "Conference", "on", "Machine", "Learning", "(ICML-1I1)", "(pp.", "313-320).", "A.", "Barbero,", "J.", "L\u00e9pez,", "and", "J.", "R.", "Dorronsoro.", "Finding", "Optimal", "Model", "Parameters", "by", "Deterministic", "and", "Annealed", "Focused", "Grid", "Search.", "Neurocomputing,", "72(13-15):2824\u20142832,", "2009.", "ISSN", "0925-2312.", "doi:", "DOI:10.1016/j.neucom.2008.09.024.", "Barlow,", "R.", "E.,", "Bartholomew,", "D.", "J.,", "Bremner,", "J.", "M.,", "Brunk,", "H.", "D.", "Statistical", "inference", "under", "order", "restrictions:", "The", "theory", "and", "application", "of", "isotonic", "regression", "New", "York:", "Wiley,", "1972", "H.", "H.", "Bauschke", "and", "P.", "L.", "Combettes.", "Convex", "analysis", "and", "monotone", "operator", "theory", "in", "Hilbert", "spaces.", "CMS", "Books", "in", "Mathematics.", "Springer,", "2011.", "Heinz", "H.", "Bauschke,", "Patrick", "L.", "Combettes,", "D.", "Russell", "Luke", "Finding", "best", "approximation", "pairs", "relative", "to", "two", "closed", "convex", "sets", "in", "Hilbert", "spaces", "Journal", "of", "Approximation", "Theory", "127", "(2004)", "178-192", "A.", "Beck", "and", "M.", "Teboulle.", "A", "Fast", "Iterative", "Shrinkage-Thresholding", "Algorithm", "for", "Linear", "Inverse", "Problems.", "SIAM", "Journal", "of", "Imgaging", "Sciences,", "2(1):183-\u2014202,", "2009.", "D.", "P.", "Bertsekas.", "Projected", "newton", "methods", "for", "optimization", "problems", "with", "simple", "constraints.", "SIAM", "Journal", "on", "Control", "and", "Optimization,", "20(2),", "March", "1982.", "D.", "P.", "Bertsekas.", "Nonlinear", "Programming.", "Athena", "Scientific,", "2nd", "edition,", "September", "1999.", "J.", "M.", "Bioucas-Dias", "and", "M.", "A.", "T.", "Figueiredo.", "A", "new", "twist:", "Two-step", "iterative", "shrinkage/thresholding", "algorithms", "for", "image", "restoration.", "IEEE", "Transactions", "on", "Image", "Processing,", "16(12):2992-3004,", "December", "2007.", "J.", "M.", "Bioucas-Dias,", "M.", "A.", "T.", "Figueiredo,", "and", "J.", "P.", "Oliveira.", "Total", "variation-based", "image", "deconvolution:", "A", "majorization-minimization", "approach.", "In", "ICASSP", "Proceedings,", "2006.", "BM3D.", "Bm3d", "software", "and", "test", "sequences,", "2013.", "URL", "http://www.cs.tut.fi/~foi/", "GCF-BM3D/.", "R.", "H.", "Byrd,", "P.", "Lu,", "J.", "Nocedal,", "and", "C.", "Zhu.", "A", "limited", "memory", "algorithm", "for", "bound", "constrained", "optimization.", "Technical", "report,", "Northwestern", "University,", "1994.", "E.", "J.", "Cand\u00e9s", "and", "T.", "Tao.", "Near-optimal", "signal", "recovery", "from", "random", "projections:", "universal", "encoding", "strategies.", "IEEE", "Trans.", "Info.", "Theory,", "52:5406\u20145425,", "2004.", "A.", "Chambolle", "and", "J.", "Darbon.", "On", "total", "variation", "minimization", "and", "surface", "evolution", "using", "parametric", "maximum", "flows.", "International", "Journal", "of", "Computer", "Vision,", "84(3),", "2009.", "A.", "Chambolle", "and", "T.", "Pock.", "A", "first-order", "primal-dual", "algorithm", "for", "convex", "problems", "with", "applications", "to", "imaging.", "Journal", "of", "Mathematical", "Imaging", "and", "Vision,", "40(1):120-145,", "2011.", "Chambolle,", "A.,", "Pock,", "T.", "On", "the", "ergodic", "convergence", "rates", "of", "a", "first-order", "primal-dual", "algorithm", "Mathematical", "Programming.", "September", "2016,", "Volume", "159,", "Issue", "1,", "pp", "253-287", "V.", "Chandrasekaran,", "B.", "Recht,", "P.", "A.", "Parrilo,", "and", "A.", "S.", "Willsky.", "The", "Convex", "Geometry", "of", "Linear", "Inverse", "Problems.", "Foundations", "of", "Computational", "Mathematics,", "12(6),", "2012.", "R.", "Choksi,", "Y.", "van", "Gennip,", "and", "A.", "Oberman.", "Anisotropic", "Total", "Variation", "Regularized", "L1-Approximation", "and", "Denoising/Deblurring", "of", "2D", "Bar", "Codes.", "Technical", "report,", "McGill", "University,", "July", "2010.", "P.", "L.", "Combettes.", "Iterative", "construction", "of", "the", "resolvent", "of", "a", "sum", "of", "maximal", "monotone", "operators.", "Journal", "of", "Convex", "Analysis,", "16:727-748,", "2009.", "P.", "L.", "Combettes", "and", "J.-C.", "Pesquet.", "Proximal", "splitting", "methods", "in", "signal", "processing.", "arXiv:0912.3522,", "2009.", "47", "[28]", "L.", "Condat.", "A", "direct", "algorithm", "for", "1d", "total", "variation", "denoising.", "Technical", "report,", "GREYC", "laboratory,", "CNRS-ENSICAEN-", "Univ.", "of", "Caen,", "2012.", "[29]", "L.", "Condat.", "A", "generic", "proximal", "algorithm", "for", "convex", "optimization", "-", "application", "to", "total", "variation", "minimization.", "IEEE", "SIGNAL", "PROC.", "LETTERS,", "21(8):985\u2014989,", "2014.", "[30]", "A.", "R.", "Conn,", "N.", "I.", "M.", "Gould,", "and", "P.", "L.", "Toint.", "Trust-Region", "Methods.", "SIAM,", "2000.", "[31]", "J.", "Dahl,", "P.", "C.", "Hansen,", "S.", "H.", "Jensen,", "and", "T.", "L.", "Jensen.", "Algorithms", "and", "software", "for", "total", "variation", "image", "reconstruction", "via", "first-order", "methods.", "Numer", "Algor,", "53:67\u201492,", "2010.", "[32]", "P.", "L.", "Davies", "and", "A.", "Kovac.", "Local", "extremes,", "runs,", "strings", "and", "multiresolution.", "The", "Annals", "of", "Statistics,", "29(1):1-65,", "2001.", "[33]", "Y.", "Duan", "and", "X.-C.", "Tai.", "Domain", "decomposition", "methods", "with", "graph", "cuts", "algorithms", "for", "total", "variation", "minimization.", "Adv", "Comput", "Math,", "36:175-199,", "2012.", "doi:", "10.1007/s10444-011-9213-4.", "[34]", "J.", "Friedman,", "T.", "Hastie,", "H.", "HOfling,", "and", "R.", "Tibshirani.", "Pathwise", "coordinate", "optimization.", "Annals", "of", "Applied", "Statistics,", "1(2):302\u2014332,", "Aug.", "2007.", "[35]", "D.", "Goldfarb", "and", "W.", "Yin.", "Parametric", "maximum", "flow", "algorithms", "for", "fast", "total", "variation", "minimization.", "SIAM", "Journal", "on", "Scientific", "Computing,", "31(5):3712\u20143743,", "2009.", "[36]", "O.", "8.", "Goldstein", "T.", "The", "Split", "Bregman", "Method", "for", "L1", "Regularized", "Problems.", "SIAM", "Journal", "on", "Imaging", "Sciences,", "2(2):323\u2014-343,", "2009.", "(37]", "T.", "R.", "Golub", "et", "al.", "Molecular", "classification", "of", "cancer.", "Science,", "286(5439):531\u2014537,", "October", "1999.", "[38]", "M.", "Grasmair.", "The", "equivalence", "of", "the", "taut", "string", "algorithm", "and", "bv-regularization.", "Journal", "of", "Mathematical", "Imaging", "and", "Vision,", "27(1):59-66,", "2007.", "ISSN", "0924-9907.", "doi:", "10.1007/s10851-006-9796-4.", "URL", "http://dx.doi.org/10.1007/s10851-006-9796-4.", "[39]", "Z.", "Harchaoui", "and", "C.", "L\u00e9vy-Leduc.", "Multiple", "Change-Point", "Estimation", "With", "a", "Total", "Variation", "Penalty.", "Journal", "of", "the", "American", "Statistical", "Association,", "105(492):1480-1493,", "2010.", "[40]", "J.", "Hua,", "W.", "D.", "Tembe,", "and", "E.", "R.", "Dougherty.", "Performance", "of", "feature-selection", "methods", "in", "the", "classification", "of", "high-dimension", "data.", "Pattern", "Recognition,", "42:409-424,", "2009.", "[41]", "K.", "Ito", "and", "K.", "Kunisch.", "An", "active", "set", "strategy", "based", "on", "the", "augmented", "lagrangian", "formulation", "for", "image", "restoration.", "ESAIM:", "Mathematical", "Modelling", "and", "Numerical", "Analysis,", "33(1):1-21,", "1999.", "URL", "http://eudml.org/doc/193911.", "[42]", "M.", "Jaggi.", "Revisiting", "frank-wolfe:", "Projection-free", "sparse", "convex", "optimization.", "In", "Proceedings", "of", "the", "30th", "International", "Conference", "on", "Machine", "Learning,,", "2013.", "[43]", "S.", "Jegelka,", "F.", "Bach,", "and", "S.", "Sra.", "Reflection", "methods", "for", "user-friendly", "submodular", "optimization.", "Advances", "in", "Neural", "Information", "Processing", "Systems", "2013:", "1313-1321.", "[44]", "Jegou,", "H.,", "Douze,", "M.,", "Schmid,", "C.", "Hamming", "Embedding", "and", "Weak", "geometry", "consistency", "for", "large", "scale", "image", "search", "Proceedings", "of", "the", "10th", "European", "conference", "on", "Computer", "vision,", "October,", "2008", "http://lear.inrialpes.fr/~jegou/data.php#holidays", "[45]", "N.", "A.", "Johnson.", "A", "dynamic", "programming", "algorithm", "for", "the", "fused", "Lasso", "and", "[g-segmentation.", "J.", "Computational", "and", "Graphical", "Statistics,", "2013.", "[46]", "D.", "Kim,", "S.", "Sra,", "and", "I.", "Dhillon.", "A", "scalable", "trust-region", "algorithm", "with", "application", "to", "mixed-norm", "regression.", "In", "International", "Conference", "on", "Machine", "Learning,", "2010.", "[47]", "S.", "Kim,", "K.", "Koh,", "S.", "Boyd,", "and", "D.", "Gorinevsky.", "\u00a3,", "trend", "filtering.", "SIAM", "Review,", "51(2):339-360,", "2009.", "doi:", "10.1137/070690274.", "[48]", "K.", "C.", "Kiwiel.", "Variable", "fixing", "algorithms", "for", "the", "continuous", "quadratic", "knapsack", "problem.", "J.", "Optim.", "Theory", "Appl.,", "136:445-458,", "2008.", "[49]", "Knuth,", "Donald", "E.", "The", "art", "of", "computer", "programming,", "volume", "1:", "fundamental", "algorithms.", "CA,", "USA:", "Addison", "Wesley", "Longman", "Publishing", "Co.,", "Inc", "[50]", "M.", "Kolar,", "L.", "Song,", "A.", "Ahmed,", "and", "E.", "Xing.", "Estimaging", "time-varying", "networks.", "The", "Annals", "of", "Applied", "Statistics,", "4(1):94-123,", "2010.", "[51]", "Kolmogorov,", "V.,", "Pock,", "T.,", "Rolinek,", "M.", "Total", "variation", "on", "a", "tree", "SIAM", "J.", "Imaging", "Sci.,", "9(2),", "605-636.", "48", "[52]", "D.", "Krishnan", "and", "R.", "Fergus.", "Fast", "image", "deconvolution", "using", "hyper-laplacian", "priors.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2009.", "[53]", "Kumar,", "K.S.,", "Barbero,", "A.,", "Jegelka,", "S.,", "Sra,", "S.,", "and", "Bach,", "F.", "Convex", "optimization", "for", "parallel", "energy", "minimization.", "arXiv", "preprint", "arXiv:", "1503.01563.", "[54]", "S.R.", "Land", "and", "J.", "H.", "Friedman.", "Variable", "fusion:", "A", "new", "adaptive", "signal", "regression", "method.", "Technical", "Report", "656,", "Department", "of", "Statistics,", "Carnegie", "Mellon", "University", "Pittsburgh,", "1997.", "[55]", "Y.", "Li", "and", "F.", "Santosa.", "A", "computational", "algorithm", "for", "minimizing", "total", "variation", "in", "image", "restoration.", "IEEE", "Transactions", "on", "Image", "Processing,", "5(6):987-995,", "1996.", "URL", "http://dblp.uni-trier.", "de/db/journals/tip/tip5.", "html#Lis96.", "[56]", "C.-J.", "Lin", "and", "J.", "J.", "Mor\u00e9.", "Newton\u2019s", "method", "for", "large", "bound-constrained", "optimization", "problems.", "SIAM", "Journal", "on", "Optimization,", "9(4):1", "100-1127,", "1999.", "[57]", "H.", "Liu", "and", "J.", "Zhang.", "Estimation", "Consistency", "of", "the", "Group", "Lasso", "and", "its", "Applications.", "In", "Int.", "Conf:", "Mach.", "Learning", "(ICML),", "2009.", "[58]", "J.", "Liu", "and", "J.", "Ye.", "Efficient", "Euclidean", "projections", "in", "linear", "time.", "In", "JCML,", "Jun.", "2009.", "[59]", "J.", "Liu,", "S.", "Ji,", "and", "J.", "Ye.", "SLEP:", "Sparse", "Learning", "with", "Efficient", "Projections.", "Arizona", "State", "University,", "2009.", "http://www.", "public.asu.edu/", "jye02/Software/SLEP.", "[60]", "J.", "Liu,", "L.", "Yuan,", "and", "J.", "Ye.", "An", "efficient", "algorithm", "for", "a", "class", "of", "fused", "lasso", "problems.", "In", "ACM", "SIGKDD", "Conference", "on", "Knowledge", "Discovery", "and", "Data", "Mining,", "2010.", "[61]", "J.", "Mairal,", "R.", "Jenatton,", "G.", "Obozinski,", "and", "F.", "Bach.", "Network", "Flow", "Algorithms", "for", "Structured", "Sparsity.", "In", "NIPS,", "2010.", "To", "appear.", "[62]", "B.", "Martinet.", "R\u00e9gularisation", "d\u2019in\u00e9quations", "variationnelles", "par", "approximations", "successives.", "Mod\u00e9lisation", "Math\u00e9matique", "et", "Analyse", "Num\u00e9rique,", "4(R3):154\u2014158,", "1970.", "[63]", "L.", "Meier,", "S.", "van", "de", "Geer,", "and", "P.", "Btihlmann.", "The", "group", "lasso", "for", "logistic", "regression.", "J.", "R.", "Statist.", "Soc.,", "70:", "53-71,", "2008.", "[64]", "J.J.", "Mor\u00e9", "and", "D.", "C.", "Sorensen.", "Computing", "a", "trust", "region", "step.", "SIAM", "Journal", "of", "Scientific", "Computing,", "4", "(3),", "September", "1983.", "[65]", "J.", "J.", "Moreau.", "Fonctions", "convexes", "duales", "et", "points", "proximaux", "dans", "un", "espace", "hilbertien.", "C.", "R.", "Acad.", "Sci.", "Paris", "S\u00e9r.", "A", "Math.,", "255:2897\u20142899,", "1962.", "[66]", "Y.", "Nesterov.", "Gradient", "methods", "for", "minimizing", "composite", "objective", "function.", "Technical", "Report", "76,", "Catholic", "University", "of", "Louvain,", "CORE,", "2007.", "[67]", "J.", "Nocedal", "and", "S.", "J.", "Wright.", "Numerical", "Optimization.", "Springer", "Verlag,", "2000.", "[68]", "N.", "Parikh,", "S.", "Boyd,", "et", "al.", "Proximal", "algorithms.", "Foundations", "and", "Trends)", "in", "Optimization,", "1(3):127-239,", "2014.", "[69]", "G.", "Pierra.", "Decomposition", "through", "formalization", "in", "a", "product", "space.", "Mathematical", "Programming,", "28(1):", "96-115,", "1984.", "[70]", "C.", "Pontow", "and", "O.", "Scherzer.", "A", "derivative", "free", "approach", "for", "total", "variation", "regularization.", "arXiv:091", "1.1293,", "2009.", "URL", "http:", "//arxiv.org/abs/0911.1293.", "[71]", "A.", "Ramdas", "and", "R.", "J.", "Tibshirani.", "Fast", "and", "flexible", "admm", "algorithms", "for", "trend", "filtering.", "arXiv:", "1406.2082,", "2014.", "[72]", "F.", "Rapaport", "and", "E.", "B.", "J.-P.", "Vert.", "Classification", "of", "arrayCGH", "data", "using", "fused", "SVM.", "Bioinformatics,", "24", "(13):1375=41382,", "2008.", "[73]", "A.", "Rinaldo.", "Properties", "and", "refinements", "of", "the", "fused", "lasso.", "Annals", "of", "Statistics,", "37(5B):2922-2952,", "2009.", "[74]", "R.", "T.", "Rockafellar.", "Monotone", "operators", "and", "hte", "proximal", "point", "algorithm.", "SZAM", "J.", "Control", "and", "Opt.,", "14", "(5):877-898,", "1976.", "[75]", "S.", "Rogers,", "M.", "Girolami,", "C.", "Campbell,", "and", "R.", "Breitling.", "The", "latent", "process", "decomposition", "of", "cdna", "microarray", "data", "sets.", "IEEE/ACM", "Trans.", "Comp.", "Bio.", "and", "Bioinformatics,", "2(2),", "April-June", "2005.", "[76]", "L.", "I.", "Rudin,", "S.", "Osher,", "and", "E.", "Fatemi.", "Nonlinear", "total", "variation", "based", "noise", "removal", "algorithms.", "Physica", "D,", "60:259-268,", "1992.", "49", "[77]", "Russakovsky,", "O.,", "Deng,", "J.,", "Su,", "H.,", "Krause,", "J.,", "Satheesh,", "S.,", "Ma,", "S.,", "Huang,", "Z.,", "Karpathy", "A.,", "Khosla,", "A.,", "Bernstein,", "M.,", "Berg,", "A.C.,", "Fei-Fei,", "L.", "ImageNet", "Large", "Scale", "Visual", "Recognition", "Challenge", "International", "Journal", "of", "Computer", "Vision", "(IJCV),", "Year", "2015,", "Volume", "115,", "Number", "3,", "pages", "211-252", "http://", "image-net.org/challenges/LSVRC/2010/download-public", "[78]", "S.", "Salzo", "and", "S.", "Villa.", "Inexact", "and", "accelerated", "proximal", "point", "algorithms.", "J.", "Convex", "Analysis,", "19(4),", "2012.", "[79]", "M.", "Schmidt,", "N.", "L.", "Roux,", "and", "F.", "Bach.", "Convergence", "Rates", "of", "Inexact", "Proximal-Gradient", "Methods", "for", "Convex", "Optimization.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems", "(NIPS),", "2011.", "[80]", "S.", "Sra.", "Scalable", "nonconvex", "inexact", "proximal", "splitting.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2012.", "[81]", "S.", "Sra,", "S.", "Nowozin,", "and", "S.", "Wright,", "editors.", "Optimization", "for", "machine", "learning.", "MIT", "Press,", "2011.", "[82]", "G.", "Steidl,", "S.", "Didas,", "and", "J.", "Neumann.", "Relations", "between", "higher", "order", "tv", "regularization", "and", "support", "vector", "regression.", "In", "Scale-Space,", "pages", "515-527,", "2005.", "[83]", "N.", "Stransky", "et", "al.", "Regional", "copy", "number-independent", "deregulation", "of", "transcription", "in", "cancer.", "Nature", "Genetics,", "38(12):1386\u20141396,", "December", "2006.", "[84]", "R.", "Tibshirani.", "Regression", "shrinkage", "and", "selection", "via", "the", "lasso.", "J.", "R.", "Statist.", "Soc.,", "58(1):267\u2014288,", "1996.", "[85]", "R.", "Tibshirani", "and", "P.", "Wang.", "Spatial", "smoothing", "and", "hot", "spot", "detection", "for", "CGH", "data", "using", "the", "fused", "lasso.", "Biostatistics,", "9(11):18\u201429,", "2008.", "[86]", "R.", "Tibshirani,", "M.", "Saunders,", "S.", "Rosset,", "J.", "Zhu,", "and", "K.", "Knight.", "Sparsity", "and", "smoothness", "via", "the", "fused", "lasso.", "J.", "Royal", "Stat.", "Soc.:", "Series", "B,", "67(1):91-108,", "2005.", "[87]", "R.", "J.", "Tibshirani.", "Adaptive", "piecewise", "polynomial", "estimation", "via", "trend", "filtering.", "The", "Annals", "of", "Statistics,", "42(1):285-323,", "02", "2014.", "doi:", "10.1214/13-AOS1189.", "[88]", "U.", "Alon", "et", "al.", "Broad", "patterns", "of", "gene", "expression", "revealed", "by", "clustering", "analysis", "of", "tumor", "and", "normal", "colon", "tissues", "probed", "by", "oligonucleotide", "arrays.", "Proc.", "Natl.", "Acad.", "Sci.", "USA,", "96:6745\u2014-6750,", "June", "1999.", "[89]", "J.-P.", "Vert", "and", "K.", "Bleakley.", "Fast", "detection", "of", "multiple", "change-points", "shared", "by", "many", "signals", "using", "group", "LARS.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2010.", "[90]", "C.R.", "Vogel", "and", "M.", "E.", "Oman.", "Iterative", "methods", "for", "total", "variation", "denoising.", "SIAM", "Journal", "on", "Scientific", "Computing,", "17(1):227\u2014238,", "1996.", "[91]", "B.", "Wahlberg,", "S.", "Boyd,", "M.", "Annergren,", "and", "Y.", "Wang.", "An", "ADMM", "Algorithm", "for", "a", "Class", "of", "Total", "Variation", "Regularized", "Estimation", "Problems.", "In", "Proceedings", "16th", "IFAC", "Symposium", "on", "System", "Identification,", "volume", "16,", "2012.", "[92]", "J.", "Wang", "and", "Q.", "Li", "and", "S.", "Yang", "and", "W.", "Fan", "and", "P.", "Wonka", "and", "J.", "Ye.", "A", "Highly", "Scalable", "Parallel", "Algorithm", "for", "Isotropic", "Total", "Variation", "Models", "In", "Proceedings", "of", "the", "31st", "International", "Conference", "on", "Machine", "Learning", "(ICML-14),", "pages", "235-243,", "2014.", "[93]", "S.", "J.", "Wright,", "R.", "D.", "Nowak,", "and", "M.", "A.", "T.", "Figueiredo.", "Sparse", "reconstruction", "by", "separable", "approximation.", "IEEE", "Trans.", "Sig.", "Proc.,", "57(7):2479-2493,", "2009.", "[94]", "M.", "Wytock,", "S.", "Sra,", "and", "J.", "Z.", "Kolter.", "Fast", "Newton", "Methods", "for", "the", "Group", "Fused", "Lasso.", "In", "Conference", "on", "Uncertainty", "in", "Artificial", "Intelligence,", "2014.", "[95]", "S.", "Yang,", "J.", "Wang,", "W.", "Fan,", "X.", "Zhang,", "P.", "Wonka,", "and", "J.", "Ye.", "An", "Efficient", "ADMM", "Algorithm", "for", "Multidimensional", "Anisotropic", "Total", "Variation", "Regularization", "Problems.", "In", "ACM", "Knowledge", "Discovery", "and", "Data", "Mining", "(KDD),", "Chicago,", "Illinois,", "USA,", "August", "2013.", "[96]", "Y.", "Yu.", "On", "decomposing", "the", "proximal", "map.", "In", "Advances", "in", "Neural", "Information", "Processing", "Systems,", "2013.", "[97]", "M.", "Yuan", "and", "Y.", "Lin.", "Model", "Selection", "and", "Estimation", "in", "Regression", "with", "Grouped", "Variables.", "J.", "R.", "Statist.", "Soc.", "B,", "68(1):49-67,", "2006.", "[98]", "M.", "Zhu", "and", "T.", "Chan.", "An", "efficient", "primal-dual", "hybrid", "gradient", "algorithm", "for", "total", "variation", "image", "restoration.", "Technical", "report,", "UCLA", "CAM,", "2008.", "50", "A", "Mathematical", "background", "We", "begin", "by", "recalling", "a", "few", "basic", "ideas", "from", "convex", "analysis;", "we", "recommend", "the", "recent", "book", "[11]", "for", "more", "details.", "Let", "\u00a5", "C", "R\u201d", "be", "any", "set.", "A", "function", "r", ":", "\u00a5", ">", "RU", "{\u2014co,", "+00}", "is", "called", "lower", "semicontinuous", "if", "for", "every", "x", "\u20ac", "X", "anda", "sequence", "(\u00ab;,)", "that", "converges", "to", "x,", "it", "holds", "that", "Ly,", ">", "we", "=>", "r(@)", "<", "liminf,", "r(a,).", "(A.1)", "The", "set", "of", "proper", "Isc", "convex", "functions", "on", "\u00a5", "is", "denoted", "by", "I'9(4\u2019)", "(such", "functions", "are", "also", "called", "closed", "convex", "functions).", "The", "indicator", "function", "of", "a", "set", "C'", "is", "defined", "as", "So:", "\u00ae", ">", "[Oco]iar", "J", "eee", "(A.2)", "oo,", "ifa", "ZC,", "which", "is", "Isc", "if", "and", "only", "if", "C'", "is", "closed.", "The", "convex", "conjugate", "of", "r", "is", "given", "by", "r*(z)", ":=", "suPgedomr", "(@,", "2)", "\u2014", "r(x),", "and", "a", "particularly", "important", "example", "is", "the", "Fenchel", "conjugate", "of", "a", "norm", "||-||", "ifr", "=||-||,", "then", "r*", "=", "dy.)", "<1,", "(A.3)", "where", "the", "norm", "||-||,", "is", "dual", "to", "||-||.", "Let", "r", "and", "A", "be", "proper", "convex", "functions.", "The", "infimal", "convolution", "of", "r", "with", "h", "is", "the", "convex", "function", "given", "by", "(r", "0", "h)(#)", ":=", "infyex(r(y)", "+", "h(w", "\u2014", "y)).", "For", "our", "purposes,", "the", "most", "important", "special", "case", "is", "infimal", "convolution", "of", "a", "convex", "function", "with", "the", "squared", "euclidean", "norm,", "which", "yields", "the", "Moreau", "envelope", "[65].", "Proposition", "A.1.", "Let", "r", "\u00a9", "[o9(4)", "and", "let", "y", ">", "0.", "The", "Moreau", "envelope", "of", "r", "indexed", "by", "+", "is", "EXC)", "=", "7", "O", "(35/113).", "(A.4)", "The", "Moreau", "envelope", "(A.4)", "is", "convex,", "real-valued,", "and", "continuous.", "Proof.", "See", "e.g.", "[11,", "Prop.", "12.15].", "O", "Using", "the", "Moreau", "envelope", "(A.4),", "we", "now", "formally", "introduce", "prox", "operators.", "Definition", "A.2", "(Prox", "operator).", "Let", "r", "\u20ac", "[o(4),", "and", "let", "y", "\u00a9", "X.", "Then", "prox,", "y", "is", "the", "unique", "point", "in", "X", "that", "satisfies", "Ex(y)", "=", "mingex(r(a)", "+", "4||a", "\u2014", "y||Z),", "ie,", "prox,.(y)", ":=", "argmin", "r(x)", "+", "$", "la", "\u2014", "yll5,", "(A.5)", "we", "and", "the", "nonlinear", "map", "prox,", ":", "X", "\u2014", "4", "is", "called", "the", "prox", "operator", "of", "r.", "Sometimes", "the", "Fenchel", "conjugate", "r*", "is", "easier", "to", "use", "than", "r;", "similarly,", "sometimes", "the", "operator", "prox,...", "is", "easier", "to", "compute", "than", "prox,..", "The", "result", "below", "shows", "the", "connection.", "Proposition", "A.3", "(Moreau", "decomposition).", "Let", "r", "\u20ac", "T9(4\u2019),", "y", ">", "0,", "and", "y", "\u00a9", "X.", "Then,", "Y", "=", "prox,,", "y", "+", "Y", "Prox;\u00ab", "4", "(y~1y).", "(A.6)", "Proof.", "A", "brief", "exercise;", "see", "e.g.,", "[11,", "Thm.", "14.3].", "|", "This", "decomposition", "provides", "the", "necessary", "tools", "to", "exploit", "useful", "primal\u2014dual", "relations.", "For", "the", "sake", "of", "clarity", "we", "also", "present", "an", "additional", "result", "regarding", "a", "particular", "primal-dual", "relation", "that", "plays", "a", "key", "role", "in", "our", "algorithms.", "51", "Proposition", "A.4.", "Ler", "f", "\u00a9", "To(\u00a5)", "andr", "\u20ac", "T9(Z).", "The", "problems", "below", "form", "a", "primal-dual", "pair.", "inf", "f(@)+r(Ba)", "st.", "Bue", "Z", "(A.7)", "inf", "f*(\u2014Blu)", "+r*(u).", "(A.8)", "Proof.", "Introduce", "an", "extra", "variable", "z", "=", "Bz,", "so", "that", "the", "dual", "function", "is", "_:", "T", ".", "_", "oT", "glu)", "=", "inf", "f(a)", "+u\"", "Ba", "+", "inf", "r(z)\u2014", "uz,", "which", "upon", "rewriting", "using", "Fenchel", "conjugates", "yields", "(A.8).", "O", "Notions", "on", "submodular", "optimization", "are", "also", "required", "to", "introduce", "some", "of", "the", "decomposition", "techniques", "for", "2D-TV", "in", "this", "paper.", "For", "a", "more", "thorough", "read", "on", "this", "topic", "we", "recommend", "the", "monograph", "Bach", "[5].", "Definition", "A.5", "(Submodular", "function).", "A", "set-function", "F", ":", "2\u201d", "\u2014", "R,", "for", "2\u201d", "the", "power", "set", "of", "some", "set", "V,", "is", "submodular", "if", "and", "only", "if", "it", "fulfills", "the", "diminishing", "returns", "property,", "that", "is,", "for", "A", "C", "BC", "V", "andk", "\u20ac", "V,", "k", "\u00a2", "B", "we", "have", "F(AU", "{k})", "\u2014", "F(A)", ">", "F(BU", "f{k})", "\u2014", "FCB).", "Intuitively,", "a", "set-function", "is", "submodular", "if", "adding", "a", "new", "element", "to", "the", "set", "results", "in", "less", "value", "as", "the", "set", "grows", "in", "size.", "Definition", "A.6", "(Modular", "function).", "A", "set-function", "F", ":", "2\u201d", "\u2014", "R,", "for", "2", "the", "power", "set", "of", "some", "set", "V,", "F", "(0)", "=", "0", "is", "modular", "(and", "also", "submodular)", "if", "and", "only", "if", "there", "exists", "8", "\u00a9", "IR?", "such", "that", "F(A)", "=", "Yoyhc", "4", "8k-", "That", "is,", "a", "function", "is", "modular", "if", "it", "always", "assigns", "the", "same", "value", "for", "each", "element", "added", "to", "the", "set,", "regardless", "of", "the", "other", "elements", "in", "the", "set.", "A", "common", "shorthand", "for", "modular", "functions", "is", "s(A)", "=", "}0,.\u00a24", "$k:", "Submodular", "functions", "can", "be", "thought", "as", "convex", "functions", "in", "the", "realm", "of", "discrete", "optimization,", "in", "the", "sense", "that", "they", "feature", "useful", "properties", "that", "allow", "for", "efficient", "optimization.", "Similarly,", "modular", "functions", "are", "connected", "to", "linear", "functions.", "To", "make", "such", "connections", "explicit", "we", "require", "of", "the", "following", "geometric", "concepts.", "Definition", "A.7", "(Base", "polytope).", "The", "base", "polytope", "Bp", "of", "a", "submodular", "function", "F", "is", "the", "polyhedron", "given", "by", "Br", "=", "{yeR\"", ":y(A)", "<", "F(A)", "VACV,", "yV)", "=", "FYV)}.", "That", "is,", "the", "base", "polytope", "is", "a", "polyhedron", "defined", "through", "linear", "inequality", "constraints", "on", "the", "values", "of", "F", "for", "every", "one", "of", "the", "n", "elements", "of", "the", "powerset", "2\u201d,", "and", "an", "equality", "constraint", "for", "the", "complete", "set.", "This", "results", "in", "a", "combinatorial", "number", "of", "contraints,", "but", "fortunately", "this", "polytope", "will", "not", "be", "used", "directly.", "Definition", "A.8", "(Support", "function).", "The", "support", "function", "h,", "for", "some", "non-empty", "closed", "convex", "set", "A", "\u00a9", "R\u201d", "is", "given", "by", "ha(a)", "=", "sup", "{a\u2019a:a@\u20ac", "A}.", "The", "support", "function", "is", "useful", "when", "connected", "with", "the", "following", "definition.", "Definition", "A.9", "(Lovdsz", "extension).", "Suppose", "a", "set-function", "F'", "such", "that", "F())", "=", "0.", "Its", "Lovdsz", "extension", "f", ":", "R?", "\u2014", "Ris", "defined", "through", "the", "following", "mechanism.", "Take", "w", "\u00a9", "R?", "input", "to", "f,", "and", "order", "its", "components", "in", "decreasing", "order", "w,;,", ">...", ">", "W;,>", "then", "f(w)", "=", "SFC,", "--+)Jdk})", "\u2014", "PS,", "de-a}))-", "k=1", "Other", "equivalent", "definitions", "are", "possible:", "see", "Bach", "[5]", "for", "details.", "The", "following", "result", "links", "all", "the", "definitions", "so", "far.", "52", "Proposition", "A.10.", "For", "F\u2019", "submodular", "function", "such", "that", "F())", "=", "0", "we", "have", "e", "Its", "Lovdsz", "extension", "f", "is", "a", "convex", "function.", "e", "The", "support", "function", "of", "its", "base", "polytope", "is", "equal", "to", "its", "Lovdsz", "extension,", "that", "is,", "hp,", "(a@)", "=", "f(a).", "e", "The", "problem", "mingcy", "F(S)", "is", "dual", "to", "ming", "f(x)", "+", "4||x\\|3,", "with", "S*", "=", "{k|a}", ">", "O}.", "For", "proofs", "on", "these", "points", "we", "refer", "to", "Bach", "[5].", "The", "takeaway", "from", "them", "is", "that", "any", "minimization", "on", "a", "submodular", "function", "can", "be", "cast", "into", "a", "convex", "optimization", "problem.", "Furthermore,", "for", "those", "convex", "minimization", "problems", "whose", "objective", "turns", "out", "to", "be", "the", "Lovasz", "extension", "of", "some", "other", "function,", "we", "can", "trace", "the", "steps", "the", "other", "way", "round,", "obtaining", "the", "minimization", "of", "a", "submodular", "function.", "Consider", "now", "a", "composite", "problem", "mingcy", ">),", "Fj(S).", "The", "following", "results", "hold", "Proposition", "A.11.", "The", "problem", "mingcy", ">),", "Fj(S)", "is", "equivalent", "to", "min,", ">),", "fj(@)", "+", "alka", "3,", "with", "S*", "=", "2", ".", "*", "*", "5,", "with", "x", "=", "\u2014", ">)", "Uj.", "Proof.", "The", "first", "equivalence", "is", "a", "direct", "result", "of", "the", "properties", "of", "Lovasz", "extensions", "[5],", "in", "particular", "that", "for", "F,", "G", "set-functions", "with", "Lovasz", "extensions", "f,", "g,", "the", "Lovasz", "extension", "of", "Ff\u2019", "+", "Gis", "f", "+", "g.", "For", "the", "second", "equivalence", "we", "have:", "min", "Y>", "f(@)", "+", "3llal3", "J", "{k|zj;", ">", "O}.", "Furthermore", "it", "is", "also", "equivalent", "to", "miny,\u20acBp,", "Vj", "5D;", "y5\\", "min)", "hee,", "+", "5llel/3,", "x", "-", "3", "J", "\u2014", "ni", "Tey", "Mepll2", "=", "mn", "yj;", "e+", "d\\\\arl|3,", "_", "aye", "+", "y", "SB", "yy", "me", "Dove", "alee", "|", "=", "amin", "aldo", "yslla", "yb", "vy,", "2", "yylls,", "and", "the", "dual", "relationship", "a*", "=", "\u2014", "S>", "j", "y;", "comes", "from", "solving", "the", "inner", "ming", "problem", "for", "a.", "O", "Therefore", "any", "decomposable", "submodular", "minimization,", "or", "sum", "of", "Lovdsz", "extensions", "plus", "\u00a32", "term,", "can", "be", "casted", "into", "a", "geometric", "problem", "in", "terms", "of", "the", "base", "polytopes.", "For", "two", "functions", "the", "resultant", "problem", "is", "of", "special", "interest", "if", "rewritten", "as", "-", "4", "2", ".", "1", "2", "-", "4", "2", "min", "5%", "+yll2", "=", "=omin", "5l\u00a5\u2014(\u2014y)ll2", "=", "min", "gla\u2014bl/5", "yicBr,", "2", "yweBr,", "2", "acBr,", "2", "ye", "Br,", "\u2014mwe\u2014-Br,", "be\u2014-Bry", "with", "a", "=", "yi,", "b", "=", "\u2014ype,", "as", "this", "results", "in", "the", "classic", "geometric", "problem", "of", "finding", "the", "closest", "points", "between", "two", "convex", "sets.", "Many", "algorithms", "have", "been", "proposed", "to", "tackle", "problems", "in", "this", "form,", "most", "of", "them", "making", "use", "of", "alternating", "projection", "operations", "onto", "the", "two", "sets.", "Thus,", "a", "legitimate", "concern", "is", "how", "easy", "it", "is", "to", "compute", "such", "projections", "for", "Br,", "and", "\u2014Bp,.", "Proposition", "A.12.", "Given", "a", "submodular", "function", "F", "and", "its", "base", "polytope", "Br,", "the", "projections", "I1p,(z)", "and", "Il_p,(2)", "of", "a", "point", "z", "onto", "Bp", "or", "its", "negated", "counterpart", "can", "be", "computed", "as", "pp", "(2)", "=", "2", "\u2014", "prox;(2),", "Il_p,(z)=2+", "prox", "\u00a2(\u20142),", "with", "prox", "proximity", "operator", "of", "a", "function,", "f", "the", "Lovdsz", "extension", "of", "F\u2019.", "53", "Proof.", "We", "start", "with", "the", "proximity", "of", "f", "and", "work", "our", "way", "to", "a", "relationship", "with", "the", "projection", "operator,", "prox", "(2)", "=", "min", "f(a)", "+", "5||@\u2014", "2/3,", "_", "_", "oT", "lim", "\u2014", "\u00bbI\\2", "=", "max", "ming\u2019", "a", "+", "9||a@", "\u2014", "lo,", "_", "Py", "1", "\u2014y)\u2014", "zl?", "~", "max", "y", "(2\u2014y)", "+", "sl(@\u2014", "y)", "\u2014", "2lla,", "\u2014", "ain", "lL", "2", "27", "=", "gnin", "sllulla", "\u2014y", "2,", "where", "solving", "the", "inner", "minimization", "problem", "for", "x", "gives", "the", "primal\u2014dual", "relationship", "7*", "=", "z", "\u2014", "y*.", "Using", "this", "we", "can", "obtain", "the", "solution", "for", "the", "projection", "problem", "from", "the", "proximity", "problem,", "as", "IIg,(z)", "=", "2", "\u2014", "prox", "(z).", "Projection", "onto", "the", "negated", "base", "polytope", "follows", "from", "the", "basic", "geometric", "argument", "Il_p,(z)", "=", "\u2014IIg,(\u20142z).", "|", "B_proxT\u2019V", "toolbox", "All", "the", "Total\u2014Variation", "proximity", "solvers", "in", "this", "paper", "have", "been", "implemented", "as", "the", "proxTV", "toolbox", "for", "C++,", "Matlab", "and", "Python,", "available", "at", "https://github.com/albarji/proxTV.", "The", "toolbox", "has", "been", "designed", "to", "be", "used", "out", "of", "the", "box", "in", "a", "user", "friendly", "way;", "for", "instance,", "the", "top\u2014level", "Matlab", "function", "TV", "solves", "Total\u2014Variation", "proximity", "for", "a", "given", "signal", "under", "a", "variety", "of", "settings.", "For", "instance", ">>", "TV(X,", "lambda)", "solves", "Tv,", "proximity", "for", "a", "signal", "X", "of", "any", "dimension", "and", "a", "regularization", "value", "lambda.", "The", "weighted", "version", "of", "this", "problem", "is", "also", "seamlessly", "tackled", "by", "just", "providing", "a", "vector", "of", "weights", "of", "the", "appropriate", "length", "as", "the", "Lambda", "parameter.", "If", "a", "third", "parameter", "p", "is", "provided", "as", ">>", "TV(X,", "lambda,", "p)", "the", "general", "Tv,", "proximity", "problem", "is", "addressed,", "whereupon", "an", "adequate", "solver", "is", "chosen", "by", "the", "library.", "More", "advanced", "uses", "of", "the", "library", "are", "possible,", "allowing", "to", "specify", "which", "norm", "p", "and", "regularizer", "Lambda", "values", "to", "use", "for", "each", "dimension", "of", "the", "signal,", "and", "even", "applying", "combinations", "of", "several", "different", "Tv,", "regularizers", "along", "the", "same", "dimension.", "Please", "refer", "to", "the", "documentation", "within", "the", "toolbox", "for", "further", "information.", "C_", "Proof", "on", "the", "equality", "of", "taut-string", "problems", "Theorem", "C.1", "(Equality", "of", "taut-string", "problems).", "Given", "the", "problems", "min", "S>", "($s;", "\u2014", "8:1),", "st.", "|s;", "\u20141ri|", "<w,Vi=1,...,n\u20141,89", "=0,8,", "=Pn,", "(C.1)", "i=1", "and", "n", ".", "/", "nA", "2", "-", ".", "-", "-", "min", "5", "1+", "(8;", "\u2014", "8-1)\",", "st", "8;", "\u201417;|", "<", "wi", "Vi=1,...,n\u20141,8", "=0,8)", "=Tn,", "(C.2)", "8", "i=1", "for", "a", "non-zero", "vector", "w,", "both", "problems", "share", "the", "same", "minimum", "s*", "=", "8*.", "54", "Proof.", "The", "Lagrangian", "of", "problem", "C.1", "takes", "the", "form", "n", "n-1", "n\u2014-1", "L(s,", "a,", "B)", "=", "S-", "(si", "\u2014", "8-1)\"", "+", "S-", "an", "(8;", "\u2014", "Ti", "\u2014", "Wi)", "+", "S\u00a2", "Bi(\u2014w;", "\u2014", "8", "+7),", "i=l", "i=l", "i=l", "and", "its", "Karush-Kuhn-Tucker", "optimality", "conditions", "are", "given", "by", "(Sita", "\u2014", "$i)", "\u2014", "(8i", "\u2014", "$;-1)", "=", "\u2014", "Bi,", "(C.3)", "|si", "\u2014Ti|", "<", "wi,", "(C.4)", "a,", "3;", "2", "0,", "(C.5)", "Bi(\u2014w,;", "\u2014", "8;", "+", "r;)", "=", "0,", "(C.7)", "Vi", "=1,...,2\u2014", "1,", "and", "where", "the", "first", "equation", "comes", "from", "the", "fact", "that", "ol{s,0.8)", "=", "0", "at", "the", "minimum.", "As", "the", "only", "difference", "between", "problems", "C.1", "and", "C.2", "is", "in", "the", "form", "of", "the", "objective,", "the", "KKT", "conditions", "for", "problem", "C.2", "take", "the", "same", "form,", "but", "for", "the", "first", "one,", "($i41", "\u2014", "8:)", "(8;", "\u2014", "8i-1)", "V1", "+", "(isi", "\u2014", "8:1)?", "-", "JI", "+", "(8", "\u2014", "8:1)", "=", "&", "\u2014", "Bi,", "(C.8)", "|8;", "\u20147i|", "<", "wi,", "(C.9)", "Gi,", "Bi", ">", "0,", "(C.10)", "Gu(8i", "\u2014", "Pi", "wi)", "=", "0,", "(Cll)", "Bi(\u2014w;", "\u2014", "8;", "+11)", "=", "0,", "(C.12)", "Vi", "=", "1,...,n\u2014", "1,", "and", "where", "we", "use", "hat", "notation", "for", "the", "dual", "coefficients", "to", "tell", "them", "apart", "from", "those", "of", "problem", "C.1.", "Suppose", "s*", "minimizer", "to", "problem", "C.1,", "hence", "fulfilling", "the", "conditions", "C.3-C.7.", "In", "particular", "this", "means", "that", "it", "is", "feasible", "to", "assign", "values", "to", "the", "dual", "coefficients", "a,", "G", "in", "such", "a", "way", "that", "the", "conditions", "above", "are", "met.", "If", "we", "set", "$", "=", "s*", "in", "the", "conditions", "C.8-C.12", "the", "following", "observations", "are", "of", "relevance", "Condition", "C.9", "becomes", "the", "same", "as", "condition", "C.4,", "and", "so", "it", "is", "immediately", "met.", "The", "operator", "f(x)", "=", "Toe", "is", "contractive", "and", "monotonous.", "The", "couple", "(@;,", "3;)", "cannot", "be", "both", "non-zero", "at", "the", "same", "time,", "since", "@;", ">", "0", "enforces", "s;", "=", "r;", "+", "w;", "and", "3;", ">", "0", "enforces", "s;", "=", "r;", "\u2014", "w,;,", "and", "w;", "is", "non-zero.", "Hence", "and", "because", "@;,", "3;", ">", "0", "and", "condition", "C.3", "holds,", "when", "(s;+1", "\u2014", "s;)", "\u2014", "(8;", "\u2014", "$;-1)", ">", "0", "then", "a;", ">", "0,", "B;", "=", "0,", "and", "when", "(s;41", "\u2014", "s;)", "\u2014", "(s;", "\u2014", "s;-1)", "<", "0", "then", "a;", "=", "0,", "8;", ">", "0.", "f(Siz1", "\u2014", "8;)", "\u2014", "f(s;", "\u2014", "8;\u20141)", "has", "the", "same", "sign", "as", "(s;41", "\u2014", "s;)", "\u2014", "(8;", "\u2014", "8;_1),", "since", "f", "is", "monotonous", "and", "as", "such", "preserves", "ordering.", "Since", "f", "is", "contractive,", "condition", "C.8", "can", "be", "met", "by", "setting", "(G;,", "Bi)", "=", "(ka;,k8;)", "for", "some0", "<k", "<", "1.", "Note", "that", "this", "works", "because", "(@;,", "(3;)", "cannot", "be", "both", "zero", "at", "the", "same", "time.", "Condition", "C.10", "is", "met", "for", "those", "choices", "of", "G;,", "Bi,", "as", "C.5", "was", "met", "for", "a;,", "3;", "andO<", "k", "<1.", "Conditions", "C.11", "and", "C.12", "are", "also", "met", "for", "those", "choices", "of", "&;,", "Bi", "as", "G;", "(8;", "\u2014", "17;", "\u2014", "w;)", "=", "ka;", "(s;", "\u2014", "r,", "\u2014", "wi)", "=", "Oand", "B;(\u2014w;", "\u2014", "8;", "+", "ri)", "=", "kBi(\u2014w;i", "\u2014", "8;", "+", "ri)", "=", "0.", "55", "Therefore,", "all", "of", "the", "optimality", "conditions", "C.8-C.12", "for", "problem", "C.2", "are", "met", "for", "s*", "solution", "of", "problem", "C.1,", "and", "so", "a", "minimum", "of", "problem", "C.1", "is", "also", "a", "minimum", "for", "problem", "C.2.", "The", "proof", "can", "be", "repeated", "the", "other", "way", "round", "by", "setting", "s", "=", "8*", "optimal", "for", "problem", "C.2,", "defining", "the", "operator", "f~!(2)", "=", "iow?", "and", "observing", "that", "this", "operator", "is", "monotonous", "and", "expansive,", "so", "we", "can", "establish", "(a,", "3;)", "=", "(kai,", "kB;)", "for", "some", "k", ">", "1", "and", "the", "optimality", "conditions", "C.3-C.7", "for", "problem", "C.1", "are", "met", "following", "a", "similar", "reasoning", "to", "the", "one", "presented", "above.", "Thus,", "a", "minimum", "for", "problem", "C.2", "is", "also", "a", "minimum", "for", "problem", "C.1,", "which", "joined", "with", "the", "previous", "result", "completes", "the", "proof.", "O", "D_", "Proof", "on", "the", "equivalence", "of", "linearized", "taut-string", "method", "Proposition", "D.1.", "Using", "affine", "approximations", "to", "the", "greatest", "convex", "minorant", "and", "the", "smallest", "concave", "majorant", "does", "not", "change", "the", "solution", "of", "the", "taut-string", "method.", "Proof.", "Let", "us", "note", "M(f)", "as", "the", "smallest", "concave", "majorant", "of", "some", "function", "f", "taking", "integer", "values,", "U(/)", "as", "the", "greatest", "concave", "minorant,", "a(f)", "as", "the", "smallest", "affine", "majorant", "and", "a(/)", "as", "the", "greatest", "affine", "minorant.", "By", "definition", "we", "have", "al", "f(t)", "<UFM)", "SfO", "SAFO)", "Saf)", "View", "Consider", "now", "the", "nature", "of", "the", "taut-string", "problem,", "where", "a", "vertically", "symmetric", "tube", "of", "radius", "\\;", "at", "each", "section", "is", "modelled", "by", "following", "the", "majorant", "of", "the", "tube", "bottom", "(f", "\u2014", "A)", "and", "the", "minorant", "of", "the", "tube", "ceiling", "(f", "+", "A).", "We", "work", "the", "inequalities", "above", "as:", "Ff)", "\u2014", "A", "SAF", "\u2014", "Ai)", "<", "af)", "\u2014", "Ai)", "a(", "f(a)", "+", "Ai)", "<", "USM", "+", "Ad)", "<", "FM", "+i", "We", "will", "show", "that", "an", "overlap", "of", "smallest", "concave", "majorant", "/", "greatest", "convex", "minorant", "takes", "place", "iff", "the", "same", "overlap", "happens", "when", "using", "the", "affine", "approximations.", "We", "formally", "define", "overlap", "as", "the", "setting", "where", "for", "a", "point", "7", "we", "have", "U(fi", "+", "Ai)", "<", "ACF", "\u2014", "Ax).", "One", "side", "of", "the", "implication", "is", "easy:", "if", "U(f(\u00e9)", "+", "A.)", "<", "N(f(@)", "\u2014", "A)", "for", "some", "i,", "then", "using", "the", "relations", "above", "we", "have", "a(", "f(z)", "+", "Ay)", "<", "UC", "(2)", "+", "Ay)", "<", "ACF", "(4)", "\u2014", "As)", "<", "G@(f(@)", "\u2014", "A,),", "and", "so", "the", "affine", "approximation", "detects", "any", "overlap", "taking", "place", "in", "the", "concave/convex", "counterpart.", "The", "opposite", "requires", "the", "key", "observation", "that", "in", "the", "taut-string", "method", "both", "majorant", "and", "minorant", "functions", "are", "clamped", "to", "the", "same", "point", "of", "origin:", "f(0)", "=", "0", "at", "the", "start", "of", "the", "method,", "or", "the", "point", "where", "the", "last", "segment", "was", "fixed", "after", "each", "restart.", "Let", "us", "assume", "f(0)", "=", "0", "without", "loss", "of", "generality.", "Suppose", "now", "that", "an", "overlap", "is", "detected", "by", "the", "affine", "approximation.", "Because", "of", "this", "affine", "nature", "the", "majorant/minorant", "slopes", "are", "constant,", "i.e.", "6", "=b9=...=b)", "=6,", "br", "=d.=...=8,", "=5.", "However,", "if", "we", "consider", "the", "convex/concave", "approximations", "these", "slopes", "can", "increase/decrease", "as", "the", "segment", "progresses,", "that", "is:", "bp", "SOF", "<1.", "SOR,", "HY", "SOS...", ">", "Hy.", "Consider", "now", "the", "majorant/minorant", "values,", "expressed", "through", "the", "slopes", "and", "taking", "into", "account", "the", "observa-", "tion", "above", "about", "the", "starting", "point.", "AUF", "\u2014", "A=.", "LUD", "+A)", "=.", "AUO=-A=", "1,", "aD", "+A)", "48.", "56", "Since", "an", "overlap", "has", "been", "detected", "in", "the", "affine", "approximation,", "we", "have", "that", "for", "some", "point", "2", "id", "=", "al", "f(t)", "+", "Ax)", "<", "A(f", "(4)", "\u2014", "Au)", "=", "46,", "~~", "so", "6", "<", "6.", "Consider", "now", "the", "values", "of", "the", "affine", "minorant/majorant", "at", "the", "point", "immediately", "after", "the", "origin,", "a(fi-A1)=", "8,", "(fr", "+A1)", "=", "4.", "We", "will", "show", "now", "that", "the", "convex/convex", "counterpart", "must", "take", "exactly", "the", "same", "values", "at", "these", "points.", "To", "do", "so", "we", "take", "into", "account", "the", "following", "fact:", "there", "must", "exist", "points", "x", "and", "y,", "x,y", "<", "2,", "where", "a(", "fx", "+", "Av)", "=", "fe", "+", "Ax", "=", "Ufa", "+", "Ax),", "GCfy", "\u2014", "Ay)", "=", "fy", "\u2014", "Ay", "=", "1", "fy", "\u2014", "Ay);", "that", "is", "to", "say,", "the", "affine", "minorant/majorant", "must", "touch", "the", "tube", "ceiling/bottom", "at", "some", "point,", "otherwise", "we", "could", "obtain", "a", "greater", "minorant", "/", "smaller", "majorant", "by", "reducing", "this", "distance.", "The", "equalities", "to", "the", "convex", "minorant", "/", "concave", "majorant", "are", "then", "obtained", "by", "exploiting", "the", "inequalities", "at", "the", "beginning", "of", "the", "proof.", "By", "the", "already", "presented", "inequalities", "U(f,", "+", "41)", ">", "a(fi", "+", "A1),", "but", "let", "us", "suppose", "for", "a", "moment", "UCfi", "+", "A1)", ">", "@(fi", "+", "1).", "This", "would", "imply", "67\u2019", ">", "6.", "We", "then", "would", "have", "that", "at", "the", "touching", "point", "x", "as", "the", "slopes", "in", "a", "convex", "minorant", "must", "be", "monotonically", "increasing.", "However,", "such", "function", "would", "not", "be", "a", "valid", "convex", "minorant,", "as", "it", "would", "grow", "over", "f", "+", "A.", "Therefore", "U(", "fy", "+", "A1)", "=", "@(", "fi", "+", "A1)", "must", "hold.", "Using", "asymmetric", "argument,", "M(f,", "\u2014", "A1)", "=", "@(f1", "\u2014", "A1)", "can", "also", "be", "shown", "to", "hold.", "Joining", "this", "with", "the", "previous", "facts", "we", "have", "that", "U(fi", "+", "Ax)", "=", "a(fi", "+1)", "=", "8", "$6", "=", "Afr", "\u2014", "Ad)", "=", "Nf", "\u2014", "Ar),", "and", "therefore", "the", "overlap", "detected", "by", "the", "affine", "approximation", "is", "detected", "through", "its", "convex/concave", "version", "as", "well", "through", "U(", "fi", "+", "A1)", "<", "NCf1", "\u2014", "A1).", "O", "E_", "Projected-newton", "for", "weighted", "Tvl?", "In", "this", "appendix", "we", "present", "details", "of", "a", "projected-Newton", "(PN)", "approach", "to", "solving", "the", "weighted-TV", "prob-", "lem", "(2.6).", "Although", "taut-string", "approaches", "are", "empirically", "superior", "to", "this", "PN", "approach,", "the", "details", "of", "this", "derivation", "prove", "to", "be", "useful", "when", "developing", "subroutines", "for", "handling", "\u00a3,-norm", "TV", "prox-operators,", "but", "perhaps", "their", "greatest", "use", "lies", "in", "presenting", "a", "general", "method", "that", "could", "be", "applied", "to", "other", "problems", "that", "have", "structures", "similar", "to", "TV,", "e.g.,", "group", "total-variation", "[2,", "94]", "and", "@,-trend", "filtering", "[47,", "87].", "The", "weighted-TV", "dual", "problem", "(2.7)", "is", "a", "bound-constrained", "QP,", "so", "it", "could", "be", "solved", "using", "a", "variety", "of", "methods", "such", "as", "TRON", "[56],", "L-BFGS-B", "[19],", "or", "projected-Newton", "(PN)", "[14].", "Obviously,", "these", "methods", "will", "be", "inefficient", "if", "invoked", "off-the-shelf;", "exploitation", "of", "problem", "structure", "is", "a", "must", "for", "solving", "(2.7)", "efficiently.", "PN", "lends", "itself", "well", "to", "such", "structure", "exploitation;", "we", "describe", "the", "details", "below.", "PN", "runs", "iteratively", "in", "three", "key", "steps:", "first", "it", "identifies", "a", "special", "subset", "of", "active", "variables", "and", "uses", "these", "to", "compute", "a", "reduced", "Hessian.", "Then,", "it", "uses", "this", "Hessian", "to", "scale", "the", "gradient", "and", "move", "in", "the", "direction", "opposite", "to", "it,", "damping", "with", "a", "stepsize,", "if", "needed.", "Finally,", "the", "next", "iterate", "is", "obtained", "by", "projecting", "onto", "the", "constraints,", "and", "the", "cycle", "repeats.", "PN", "can", "be", "regarded", "as", "an", "extension", "of", "the", "gradient-projection", "method", "(GP,", "[15]),", "where", "the", "components", "of", "the", "gradient", "that", "make", "the", "updating", "direction", "infeasible", "are", "removed;", "in", "PN", "both", "the", "gradient", "and", "the", "Hessian", "are", "reduced", "to", "guarantee", "this", "feasibility.", "At", "each", "iteration", "PN", "selects", "the", "active", "variables", "T=", "{i", "|", "(u", "=", "\u2014w,;", "and", "[Ve(w)];", ">", "\u00a9)", "or", "(u;", "=", "w,", "and", "[Vela];", "<", "\u2014e)},", "(E.1)", "37", "where", "\u20ac", ">", "0", "is", "small", "scalar.", "This", "corresponds", "to", "the", "set", "of", "variables", "at", "a", "bound,", "and", "for", "which", "the", "gradient", "points", "inside", "the", "feasible", "region;", "that", "is,", "for", "these", "variables", "to", "further", "improve", "the", "objective", "function", "we", "would", "have", "to", "step", "out", "of", "bounds.", "It", "is", "thus", "clear", "that", "these", "variables", "are", "of", "no", "use", "for", "this", "iteration,", "so", "we", "define", "the", "complementary", "set", "J", ":=", "{1...n}\\J", "of", "indices", "not", "in", "J,", "which", "are", "the", "variables", "we", "are", "interested", "in", "updating.", "From", "the", "Hessian", "H", "=", "V?6(w)", "we", "extract", "the", "reduced", "Hessian", "Hy;", "by", "selecting", "rows", "and", "columns", "indexed", "by", "J,", "and", "in", "a", "similar", "way", "the", "reduce", "gradient", "[V\u00a2(u)|;.", "Using", "these", "we", "perform", "a", "Newton-like", "\u201creduced\u201d", "update", "in", "the", "form", "uz", "\u2014", "P(uy", "\u2014", "aH;", "*[V9(u)];),", "(E.2)", "where", "a", "is", "a", "stepsize,", "and", "P", "denotes", "projection", "onto", "the", "constraints,", "which", "for", "box\u2014constraints", "reduces", "to", "simple", "element\u2014wise", "projection.", "Note", "that", "only", "the", "variables", "in", "the", "set", "J", "are", "updated", "in", "this", "iterate,", "leaving", "the", "rest", "unchanged.", "While", "such", "update", "requires", "computing", "the", "inverse", "of", "the", "reduced", "Hessian", "H;,", "which", "in", "the", "general", "case", "can", "amount", "to", "computational", "costs", "in", "the", "O(n?)", "order,", "we", "will", "see", "now", "how", "exploiting", "the", "structure", "of", "the", "problem", "allows", "us", "to", "perform", "all", "the", "steps", "above", "efficiently.", "First,", "observe", "that", "for", "(2.7)", "the", "Hessian", "is", "H=DD\"\u2122=", "-1", "2\u00b0.", "\u20ac", "RO-Dx", "m1)", ".", "\u2014l", "\u2014-l", "2", "Next,", "observe", "that", "whatever", "the", "active", "set", "J,", "the", "corresponding", "reduced", "Hessian", "7", "remains", "symmetric", "tridiagonal.", "This", "observation", "is", "crucial", "because", "then", "we", "can", "quickly", "compute", "the", "updating", "direction", "dy", "=", "H;*", "[V\u00e9(u)]7,", "which", "can", "be", "done", "by", "solving", "the", "linear", "system", "Hyd;", "=", "[V\u00a2(u*)];", "as", "follows:", "1.", "Compute", "the", "Cholesky", "decomposition", "H;", "=", "R?", "R.", "2.", "Solve", "the", "linear", "system", "R?", "vy", "=", "[V\u00a2(2)]7", "to", "obtain", "v.", "3.", "Solve", "the", "linear", "system", "Rd;", "=", "v", "to", "obtain", "dy.", "Because", "the", "reduced", "Hessian", "is", "also", "tridiagonal,", "its", "Cholesky", "decomposition", "can", "be", "computed", "in", "linear", "time", "to", "yield", "a", "bidiagonal", "matrix", "R,", "which", "in", "turn", "allows", "to", "solve", "the", "subsequent", "linear", "systems", "also", "in", "linear", "time.", "Extremely", "efficient", "routines", "to", "perform", "all", "these", "tasks", "are", "available", "in", "the", "LAPACK", "libraries", "[3].", "The", "next", "crucial", "ingredient", "is", "efficient", "selection", "of", "the", "stepsize", "a.", "The", "original", "PN", "algorithm", "Bertsekas", "[14]", "recommends", "Armijo-search", "along", "projection", "arc.", "However,", "for", "our", "problem", "this", "search", "is", "inordinately", "expensive.", "So", "we", "resort", "to", "a", "backtracking", "strategy", "using", "quadratic", "interpolation", "[67],", "which", "works", "admirably", "well.", "This", "strategy", "is", "as", "follows:", "start", "with", "an", "initial", "stepsize", "ag", "=", "1.", "If", "the", "current", "stepsize", "a;", "does", "not", "provide", "sufficient", "decrease", "in", "$,", "build", "a", "quadratic", "model", "using", "(1),", "O(a", "\u2014", "a7),", "and", "0,", "o(a).", "Then,", "the", "stepsize", "Q;+1", "1S", "set", "to", "the", "value", "that", "minimizes", "this", "quadratic", "model.", "In", "the", "event", "that", "at", "some", "point", "of", "the", "procedure", "the", "new", "a;,+4,", "is", "larger", "than", "or", "too", "similar", "to", "a;,", "its", "value", "is", "halved.", "In", "this", "fashion,", "quadratic", "approximations", "of", "\u00a2@", "are", "iterated", "until", "a", "good", "enough", "a", "is", "found.", "The", "goodness", "of", "a", "stepsize", "is", "measured", "using", "the", "following", "Armijo-like", "sufficient", "descent", "rule", "o(u)", "\u2014", "O(P", "|u", "\u2014axd])", ">", "o-", "an", "(Vou)", "-d),", "where", "a", "tolerance", "\u00a2", "=", "0.05", "works", "well", "practice.", "Note", "that", "the", "gradient", "V\u00e9(w)", "might", "be", "misleading", "in", "the", "condition", "above", "if", "w", "has", "components", "at", "the", "boundary", "and", "d", "points", "outside", "this", "boundary", "(because", "then,", "due", "to", "the", "subsequent", "projection", "no", "real", "im-", "provement", "would", "be", "obtained", "by", "stepping", "outside", "the", "feasible", "region).", "To", "address", "this", "concern,", "we", "modify", "the", "computation", "of", "the", "gradient", "V", "d(w),", "zeroing", "our", "the", "entries", "that", "relate", "to", "direction", "components", "pointing", "outside", "the", "feasible", "set.", "58", "Algorithm", "11", "Stepsize", "selection", "for", "Projected", "Newton", "Initialize:", "ag", "=", "1,", "k", "=", "0,", "d,", "tolerance", "parameter", "o", "while", "6(u)", "\u2014", "\u00a2(Plu\u2014", "a;xd])", "<", "0", "-", "ay,", "-(Vob(u)", "-", "d)", "do", "aKa,", "P(t)", "2(o(u)\u2014d(u-an)+anda,", "O(u))*", "if", "Apt.", ">", "Ay,", "OF", "Api,", "Y", "Ap,", "then", "Ansys", "=", "FOR.", "kek+1", "end", "while", "return", "a,", "Minimize", "quadratic", "model:", "a,41", "=", "Algorithm", "12", "PN", "algorithm", "for", "TV-L1-proximity", "Let", "W", "=", "Diag(w;);", "solve", "DD?", "Wu*", "=", "Dy.", "if", "||Wta*", "||.", "<", "1,", "return", "u*.", "u\u00b0", "=", "Pliu*|,t=0.", "while", "gap(1)", ">", "\u00ab", "do", "Identify", "set", "of", "active", "constraints", "J;", "let", "J", "=", "{1...n}\\", "I.", "Construct", "reduced", "Hessian", "Hi.", "Solve", "Hyd;", "=", "[Vo(u\")];.", "Compute", "stepsize", "a", "using", "backtracking", "+", "interpolation", "(Alg.", "11).", "Update", "ui!", "=", "Plu\u2019", "\u2014", "adj].", "Ectt+l.", "end", "while", "return", "w\u2019.", "The", "whole", "stepsize", "selection", "procedure", "is", "shown", "in", "Algorithm", "|1.", "The", "costliest", "operation", "in", "this", "procedure", "is", "the", "evaluation", "of", "@,", "which,", "nevertheless", "can", "be", "done", "in", "linear", "time.", "Furthermore,", "in", "practice", "a", "few", "iterations", "more", "than", "suffice", "to", "obtain", "a", "good", "stepsize.", "Overall,", "a", "full", "PN", "iteration", "as", "described", "above", "runs", "at", "O(n)", "cost.", "Thus,", "by", "exploiting", "the", "structure", "of", "the", "problem,", "we", "manage", "to", "reduce", "the", "O(n*)", "cost", "per", "iteration", "of", "a", "general", "PN", "algorithm", "to", "a", "linear-cost", "method.", "The", "pseudocode", "of", "the", "resulting", "method", "is", "shown", "as", "Algorithm", "12.", "Note", "that", "in", "the", "special", "case", "when", "the", "weights", "W", ":=", "Diag(w;)", "are", "so", "large", "that", "the", "unconstrained", "optimum", "coincides", "with", "the", "constrained", "one,", "we", "can", "obtain", "u*", "directly", "via", "solving", "DD?", "Wu*", "=", "Dy", "(which", "can", "also", "be", "done", "at", "O(n)", "cost).", "The", "duality", "gap", "of", "the", "current", "solution", "is", "used", "as", "a", "stopping", "criterion,", "where", "we", "use", "a", "tolerance", "of", "\u00ab", "=", "10~\u00b0", "in", "practice.", "F_", "Testing", "images", "and", "videos,", "and", "experimental", "results", "The", "images", "used", "in", "the", "experiments", "are", "displayed", "in", "what", "follows,", "along", "with", "their", "noisy/denoised", "and", "convoluted/deconvoluted", "versions", "for", "each", "algorithm", "tested.", "QR", "barcode", "images", "were", "generated", "by", "encoding", "random", "text", "using", "Google", "chart", "API*.", "Images", "shape", "and", "phantom", "\u00b0", "are", "publicly", "available", "and", "frequently", "used", "in", "image", "processing.", "trollface", "and", "comic", "\u00b0", "are", "also", "publicly", "available.", "gaudi,", "used", "in", "the", "multicore", "experiments,", "is", "a", "high", "resolution", "3197", "x", "3361", "photograph", "of", "Gaudi\u2019s", "Casa", "Batll6\u2019.", "The", "rest", "of", "the", "images", "were", "originally", "created", "by", "the", "authors.", "For", "the", "video", "experiments,", "the", "salesman,", "coastguard", "and", "bicycle", "sequences", "were", "used,", "which", "are", "publicly", "available", "at", "[18].", "As", "an", "example,", "frames", "from", "the", "first", "video", "are", "displayed", "in", "what", "follows,", "along", "with", "their", "noisy/denoised", "versions.", "4nttp://code.google.com/intl/en-EN/apis/chart/", "\u2018Extracted", "from", "http:", "//en.wikipedia.org/wiki/File:Shepp_logan.png", "6", "Author:", "Francisco", "Molina.", "http:", "//www.afrikislife.net/english/", "7Extracted", "from", "http://www.", "flickr.com/photos/jeffschwartz/202423023/", "o", "randomQR-0", "(100", "x", "100)", "shape", "(128", "x", "128)", "trollface", "(888", "x", "388)", "Class", "Database", "diagram", "(259", "x", "259)", "Modifications", "of", "the", "SVM", "tele", "text", "(665", "x", "665)", "comic", "(402", "x", "402)", "Running", "times", "reduction", "letter", "contour", "(1000", "x", "1000)", "phantom", "(1713", "x", "1713)", "Figure", "25:", "Test", "images", "used", "in", "the", "experiments", "together", "with", "their", "sizes", "in", "pixels.", "Images", "displayed", "have", "been", "scaled", "down", "to", "fit", "in", "page.", "uesas", "peek", "1", "|", "~~", "\u2014", "ene", "\u2014", "\u2014", "ame", "shape", "(128", "x", "128)", "ee", "Folder]", "Object", "Datsbase", "0", "diagram", "(259", "x", "259)", "242", "Modifications", "of", "Che", "SVM", "lated", "~", "~", "em", "ete", "ode", "\u2018", "\u201c?", ".", "bow", "\u201c", ".", "aw", "I~", "wit", "\u2018", "7", "\u2018", "+", "ol", "we", "\u2018", "+", "hy", "#", "1", "'", "sppert", "Vector", "Chretien", "22", "Support", "Very", "Negripdhew", "=\u00bb", "oe", "comic", "(402", "x", "402)", "Running", "times", "reduction", "etter", "\u00b0", "si", "is", ":", "\u2014", "|", "Woe", "ae", "ne", "y", "ha", "contour", "(1000", "x", "1000)", "phantom", "(1713", "x", "1713)", "Figure", "26:", "Noisy", "versions", "of", "images", "used", "in", "the", "experiments.", "randomQR-4", "(500", "x", "500)", "shape", "(128", "x", "128)", "diagram", "(259", "x", "259)", "22", "Mewelificeeticrtes", "of", "Chee", "SVM", "teeentet", "Heugmet", "Veeres", "Cleaitientinn", "Fi", "S25", "Suppers", "Veenas", "Hegreicnn", "text", "(665", "x", "665)", "comic", "(402", "x", "402)", "Runng", "Wmes", "reduction", "letter", "contour", "(1000", "x", "1000)", "phantom", "(1713", "x", "1713)", "Denoising", "results", "for", "the", "test", "images.", "S", "=", "aS", "4", "i", "oD", "oD", "on\u2122", "'", ":", "Saal", "oO", "ry", "'", "=>", "te", "x", "N", "'", "1D", "Sal", "a", "i", "\u00a9", ">", "|", "Oo", "x", "gS", "x", "}", "|", ",", "}", "ae", "i", "i", "|", "x", "oc}", "oa", "5", "i", "el", "N", "N", "|", "|", "}", "8", "a", "1", "re", "\u00a5", "tif", ";", "\u2018", "i", "wa", "~", "i", "4", "it", "mS", "Y", "&", "i", ";", "|", ".", "aT", "g", "5", "s", "|", "5", "g", "O\u00b0", "cs", "j", "i", "|", "a)", "Ss", "z", "Tha", "bine", "S", "a", "ae", "|", "j", "a", "=", "}", "oD", "\u201c~~", "'", "nd", "\u2018,\u201d", "19", "S", "ia\u201d", "|B", "4", "~", "}", "ty", "/", "t", "Me", "2", "\u2122~", "4", "a", "=", ">", "mH", "ua", "\"", "pe", "tl", "BS", "z", "fo)", "x", "x", "0", "a", "gS", "=", "7", "iaaheaacbae", "tote", "it", "S", "x", "5", "x", "a", "12", "{", "\u00a9", "erm", ".", ".", "BS", "3", "g", ">", "t", "*", "oy", "i", "eres", "or", "matee", "NU", "=", "oe", "Arh", "ob,", "=", "|", "|/2", "cS", "Z|", "|", "Sa", "AEP", "Spy", "|", "\u201cw]", "&|", "|/s", "i", "as", "ote", ".", ",", "riven", "g", "S|", "|", "ewe", "eae", "phat", "Sg", "\u201d", "|", "l", "a", "E", "2", "S", "Us", "aE", "ha", "es", "rng", "q", "Vu", "AA)", "Ss]", "lle", "8", "a", "\u00a9.", "c", "\u2014*s", ".", "Mr", "uz", "a", "Wy", "edna", "a", "\\", "7", "aekk", "wath", "ts", "ah", "a", "j", ":", "Po", "pone", "ta", "~", "DML", "oe", "es", "=", "~~", "8", "e", "\u2014", "o>", "+", "-", "a", "a", "x", "x", "pee", "ad", "S", "5", "iS", "|", "|", "ew", "x", ":", "So", "A", "SS", "et", "3)", "@", "S", "~", "Ny:", "ey", "*", "1", "~", "oO", "\u2014", "o", "ot", "oO}", "|i", "g", "2", "g", "S|", "lew", "5", "Ss", "=|", "\u00a3", "a", "a", "=", "=", "Noisy", "and", "convoluted", "versions", "of", "images", "used", "in", "the", "experiments.", "Figure", "28:", "randomQR-0", "(100", "x", "100)", "randomQR-1", "(175", "x", "175)", "*", "Sa", "he", "a\u201d", "randomQR-?2", "(300", "x", "300)", "randomQR-3", "(375", "x", "375)", "randomQR-4", "(500", "x", "500)", "cree", "P", "EES", "itestge", "fo", "A", "nine", "ta", "shape", "(128", "x", "128)", "tt)", "dF", "trollface", "(888", "x", "388)", "\u2018a", "SRO", "hi", "\u2018%", "_\u2014", "f", "\u2018", "ax", "ay", "Gass:", "7", "Le", "5", "\u2014", "j=", "|", "P=", "Fema", "BSaiaess", "es", "5", "diagram", "(259", "x", "259)", "text", "(665", "x", "665)", "-", "Tw", ".", "OD", "-", "As", "ar", "oy.", "comic", "(402", "x", "402)", "contour", "(1000", "x", "1000)", "phantom", "(1713", "x", "1713)", "Figure", "29:", "Deconvolution", "results", "for", "the", "test", "images.", "7", "7", "MH", "Th", "VU", "a", "ih", "hal", "Figure", "30:", "A", "selection", "of", "frames", "from", "the", "salesman", "video", "sequence.", "Figure", "31:", "Noisy", "frames", "from", "the", "salesman", "video", "sequence.", "Figure", "32:", "Denoised", "frames", "from", "the", "salesman", "video", "sequence."], "positions": [[512, 270, 759, 320], [776, 270, 1033, 335], [1055, 270, 1415, 335], [1435, 270, 1518, 320], [1536, 270, 2036, 320], [866, 363, 1268, 413], [1287, 363, 1684, 428], [375, 513, 495, 543], [507, 514, 652, 543], [1617, 519, 2171, 544], [374, 565, 497, 589], [509, 563, 541, 589], [552, 564, 707, 597], [718, 563, 762, 589], [774, 564, 980, 590], [992, 563, 1048, 589], [1060, 563, 1242, 590], [1248, 564, 1402, 589], [1413, 563, 1446, 589], [1456, 563, 1570, 589], [372, 611, 519, 635], [532, 610, 611, 635], [613, 618, 652, 643], [665, 610, 781, 636], [794, 610, 834, 640], [847, 609, 965, 640], [979, 610, 1062, 643], [375, 681, 484, 711], [497, 681, 572, 711], [1865, 687, 2172, 712], [373, 736, 543, 769], [547, 736, 597, 769], [605, 736, 782, 769], [794, 735, 851, 761], [859, 737, 990, 761], [1002, 736, 1119, 769], [372, 787, 590, 812], [600, 788, 721, 812], [732, 787, 766, 820], [772, 787, 939, 820], [951, 787, 1043, 819], [1059, 786, 1229, 820], [1242, 787, 1295, 812], [1205, 874, 1344, 900], [534, 944, 569, 969], [568, 944, 674, 977], [686, 945, 730, 970], [739, 944, 957, 977], [970, 952, 986, 969], [996, 944, 1097, 977], [1107, 944, 1176, 969], [1187, 944, 1332, 977], [1343, 943, 1372, 969], [1373, 944, 1518, 977], [1530, 944, 1678, 969], [1690, 944, 1810, 977], [1825, 944, 1855, 969], [1865, 944, 2015, 977], [2028, 952, 2070, 969], [478, 999, 580, 1024], [583, 990, 735, 1016], [747, 991, 907, 1024], [922, 991, 966, 1016], [978, 991, 1139, 1024], [1152, 995, 1374, 1024], [1389, 991, 1433, 1016], [1444, 990, 1572, 1025], [1584, 991, 1636, 1016], [1651, 991, 1709, 1016], [1722, 995, 1796, 1016], [1808, 991, 1956, 1024], [1968, 999, 2070, 1024], [479, 1037, 554, 1062], [565, 1037, 587, 1062], [598, 1036, 722, 1066], [732, 1037, 783, 1067], [795, 1036, 837, 1062], [848, 1037, 941, 1062], [951, 1040, 1154, 1070], [1165, 1045, 1207, 1062], [1217, 1040, 1323, 1070], [1334, 1045, 1349, 1062], [1360, 1045, 1419, 1062], [1430, 1037, 1576, 1070], [1588, 1037, 1705, 1070], [1716, 1037, 1805, 1062], [1815, 1037, 1919, 1062], [1931, 1045, 1946, 1062], [1955, 1037, 2069, 1062], [478, 1084, 616, 1109], [627, 1084, 790, 1109], [801, 1087, 829, 1109], [840, 1084, 992, 1117], [1004, 1084, 1137, 1109], [1152, 1084, 1216, 1109], [1228, 1084, 1391, 1109], [1402, 1087, 1474, 1109], [1486, 1087, 1533, 1109], [1544, 1087, 1571, 1109], [1581, 1084, 1616, 1109], [1626, 1084, 1796, 1117], [1806, 1083, 1897, 1109], [1908, 1092, 1937, 1109], [1949, 1084, 1968, 1109], [1980, 1084, 2069, 1109], [478, 1130, 541, 1155], [556, 1138, 606, 1155], [618, 1134, 760, 1163], [774, 1130, 877, 1163], [890, 1130, 1127, 1163], [1140, 1130, 1238, 1155], [1252, 1130, 1280, 1155], [1294, 1129, 1417, 1155], [1429, 1130, 1568, 1163], [1581, 1130, 1635, 1155], [1647, 1130, 1825, 1163], [1841, 1130, 1919, 1155], [1920, 1130, 2073, 1160], [480, 1177, 637, 1210], [649, 1176, 872, 1202], [882, 1177, 1016, 1202], [1031, 1177, 1090, 1203], [1102, 1177, 1206, 1202], [1219, 1177, 1322, 1202], [1333, 1177, 1447, 1210], [1458, 1177, 1503, 1202], [1513, 1177, 1640, 1202], [1642, 1176, 1711, 1202], [1720, 1177, 1845, 1210], [1856, 1185, 1932, 1202], [1943, 1177, 2071, 1210], [479, 1223, 545, 1254], [556, 1231, 587, 1248], [596, 1223, 899, 1256], [911, 1223, 959, 1248], [972, 1223, 1074, 1248], [1086, 1223, 1181, 1248], [1192, 1231, 1208, 1248], [1218, 1223, 1343, 1248], [1352, 1223, 1487, 1256], [1498, 1223, 1687, 1256], [1698, 1223, 1842, 1256], [1856, 1223, 1905, 1248], [1915, 1223, 2014, 1248], [2026, 1223, 2070, 1248], [479, 1270, 614, 1295], [625, 1269, 668, 1295], [678, 1278, 712, 1295], [723, 1278, 799, 1303], [810, 1269, 842, 1295], [851, 1270, 976, 1295], [988, 1270, 1139, 1303], [1150, 1270, 1202, 1295], [1215, 1273, 1337, 1303], [1350, 1270, 1402, 1295], [1414, 1270, 1544, 1295], [1555, 1270, 1599, 1295], [1610, 1269, 1725, 1295], [1737, 1269, 1769, 1295], [1778, 1278, 1828, 1295], [1838, 1270, 1963, 1295], [1973, 1270, 2070, 1303], [479, 1317, 592, 1350], [603, 1317, 736, 1342], [749, 1317, 815, 1342], [827, 1317, 858, 1342], [866, 1317, 1043, 1350], [1054, 1325, 1089, 1342], [1101, 1317, 1131, 1349], [1144, 1317, 1231, 1350], [1243, 1317, 1383, 1350], [1386, 1317, 1445, 1349], [1458, 1317, 1545, 1350], [1557, 1316, 1770, 1347], [1783, 1317, 1834, 1349], [1847, 1317, 1906, 1342], [1917, 1317, 2030, 1342], [2041, 1317, 2073, 1342], [479, 1362, 652, 1393], [664, 1362, 716, 1388], [728, 1363, 777, 1395], [789, 1362, 868, 1388], [880, 1362, 1030, 1396], [1044, 1363, 1080, 1388], [1091, 1362, 1253, 1388], [1263, 1371, 1311, 1388], [1322, 1363, 1416, 1388], [1428, 1362, 1480, 1388], [1489, 1363, 1586, 1396], [1596, 1371, 1660, 1396], [1670, 1362, 1894, 1396], [1907, 1371, 1949, 1388], [1958, 1362, 2070, 1396], [479, 1410, 515, 1435], [526, 1410, 570, 1435], [580, 1410, 714, 1435], [725, 1410, 778, 1435], [789, 1418, 838, 1435], [848, 1418, 907, 1435], [918, 1410, 966, 1435], [979, 1410, 1080, 1435], [1092, 1410, 1120, 1435], [1131, 1418, 1164, 1435], [1175, 1418, 1240, 1443], [1251, 1413, 1278, 1435], [1288, 1418, 1338, 1435], [1348, 1410, 1567, 1435], [1578, 1410, 1651, 1440], [1663, 1409, 1767, 1435], [1779, 1410, 1831, 1435], [1842, 1410, 1928, 1443], [1929, 1409, 2060, 1443], [379, 1535, 401, 1576], [465, 1535, 787, 1577], [377, 1642, 507, 1679], [520, 1642, 644, 1679], [658, 1642, 706, 1670], [718, 1642, 809, 1670], [822, 1642, 889, 1670], [901, 1642, 1029, 1679], [1042, 1642, 1181, 1679], [1195, 1642, 1336, 1679], [1350, 1642, 1544, 1679], [1558, 1642, 1720, 1679], [1734, 1651, 1764, 1670], [1778, 1642, 1847, 1670], [1860, 1651, 1890, 1670], [1902, 1642, 2043, 1679], [2055, 1646, 2179, 1679], [376, 1694, 462, 1721], [474, 1693, 660, 1730], [677, 1693, 805, 1730], [819, 1693, 845, 1721], [859, 1693, 982, 1721], [996, 1693, 1047, 1721], [1059, 1692, 1198, 1727], [1210, 1693, 1444, 1730], [1460, 1693, 1520, 1727], [1536, 1693, 1598, 1727], [1618, 1694, 1776, 1727], [1792, 1702, 1957, 1721], [1972, 1693, 2173, 1730], [375, 1744, 439, 1781], [453, 1753, 495, 1772], [508, 1753, 575, 1772], [576, 1744, 722, 1772], [738, 1744, 941, 1772], [956, 1744, 1078, 1772], [1093, 1744, 1129, 1772], [1141, 1744, 1276, 1781], [1292, 1753, 1360, 1781], [1377, 1744, 1697, 1781], [1714, 1744, 1753, 1778], [1768, 1744, 1817, 1778], [1833, 1744, 1881, 1778], [1897, 1744, 1959, 1778], [1975, 1744, 2174, 1772], [377, 1795, 503, 1832], [518, 1795, 557, 1829], [570, 1795, 633, 1829], [646, 1795, 781, 1832], [794, 1795, 920, 1832], [935, 1795, 995, 1829], [1009, 1795, 1057, 1829], [1071, 1795, 1133, 1829], [1147, 1804, 1181, 1823], [1193, 1795, 1319, 1832], [1331, 1804, 1403, 1824], [1415, 1795, 1578, 1823], [1595, 1795, 1712, 1823], [1731, 1795, 1803, 1829], [439, 1845, 519, 1874], [530, 1845, 723, 1882], [737, 1845, 880, 1882], [894, 1845, 969, 1873], [981, 1845, 1012, 1873], [1024, 1845, 1232, 1882], [1243, 1845, 1396, 1882], [1409, 1845, 1445, 1873], [1454, 1845, 1503, 1873], [1515, 1845, 1595, 1873], [985, 1938, 1134, 1974], [1191, 1935, 1275, 1976], [1294, 1948, 1332, 1966], [1347, 1935, 1561, 1976], [2097, 1938, 2173, 1973], [374, 2030, 476, 2059], [493, 2029, 509, 2058], [533, 2040, 537, 2058], [562, 2030, 610, 2058], [636, 2037, 673, 2058], [0, 0, 2550, 3300], [697, 2030, 768, 2058], [787, 2039, 804, 2058], [821, 2030, 943, 2058], [959, 2030, 1023, 2058], [1040, 2030, 1180, 2058], [1198, 2030, 1297, 2065], [1313, 2030, 1454, 2065], [1473, 2030, 1566, 2059], [1583, 2040, 1600, 2058], [1626, 2040, 1630, 2058], [1655, 2030, 1703, 2058], [1729, 2037, 1766, 2058], [1790, 2030, 1857, 2059], [1875, 2027, 1985, 2068], [2003, 2030, 2029, 2058], [2048, 2039, 2065, 2058], [2081, 2030, 2175, 2059], [377, 2081, 643, 2115], [657, 2090, 781, 2115], [796, 2081, 853, 2109], [865, 2081, 1048, 2109], [1059, 2081, 1238, 2118], [1249, 2081, 1310, 2109], [1322, 2081, 1431, 2109], [1434, 2081, 1592, 2118], [438, 2133, 474, 2160], [473, 2132, 586, 2160], [599, 2141, 638, 2160], [650, 2132, 796, 2160], [809, 2132, 844, 2160], [854, 2132, 929, 2167], [942, 2132, 1039, 2161], [1052, 2142, 1069, 2160], [1081, 2132, 1106, 2160], [1119, 2141, 1135, 2160], [1147, 2132, 1293, 2169], [1306, 2133, 1487, 2169], [1501, 2132, 1744, 2161], [1757, 2132, 1835, 2167], [1846, 2125, 2058, 2169], [2071, 2132, 2178, 2166], [376, 2182, 423, 2210], [435, 2191, 451, 2210], [463, 2186, 565, 2211], [578, 2191, 601, 2210], [617, 2188, 638, 2212], [655, 2182, 703, 2210], [719, 2191, 755, 2210], [757, 2182, 869, 2210], [881, 2182, 1007, 2219], [1020, 2191, 1052, 2210], [1069, 2184, 1095, 2216], [1112, 2182, 1129, 2211], [1142, 2182, 1167, 2210], [1180, 2182, 1301, 2210], [1314, 2191, 1344, 2210], [842, 2281, 880, 2301], [1102, 2281, 1140, 2301], [1246, 2272, 1305, 2291], [1609, 2265, 1656, 2294], [741, 2293, 815, 2334], [846, 2309, 874, 2318], [901, 2288, 962, 2341], [970, 2293, 1025, 2334], [1038, 2293, 1075, 2334], [1106, 2309, 1134, 2318], [1167, 2276, 1258, 2351], [1318, 2293, 1454, 2337], [1471, 2313, 1497, 2314], [1511, 2276, 1599, 2351], [1700, 2296, 1806, 2332], [2097, 2296, 2173, 2331], [1245, 2330, 1300, 2355], [376, 2413, 465, 2440], [478, 2412, 640, 2449], [654, 2412, 681, 2440], [691, 2411, 717, 2440], [729, 2412, 755, 2440], [770, 2421, 807, 2440], [819, 2412, 956, 2440], [969, 2416, 1056, 2440], [1058, 2412, 1115, 2440], [1127, 2401, 1275, 2440], [1294, 2412, 1368, 2441], [1380, 2412, 1490, 2440], [1504, 2411, 1530, 2440], [374, 2472, 402, 2491], [404, 2463, 533, 2491], [545, 2463, 594, 2491], [606, 2463, 756, 2500], [768, 2463, 1020, 2492], [1032, 2464, 1218, 2500], [1232, 2464, 1281, 2492], [1291, 2463, 1470, 2500], [1482, 2472, 1512, 2491], [974, 2556, 1001, 2569], [1313, 2550, 1390, 2573], [1788, 2549, 1850, 2578], [728, 2591, 755, 2604], [900, 2578, 937, 2598], [682, 2590, 873, 2637], [903, 2582, 1181, 2640], [1290, 2561, 1380, 2661], [1401, 2603, 1485, 2633], [1495, 2578, 1584, 2639], [1601, 2578, 1699, 2639], [1711, 2561, 1777, 2661], [1860, 2617, 1864, 2629], [2097, 2593, 2173, 2628], [960, 2651, 1277, 2680], [0, 0, 2550, 3300], [1323, 2651, 1378, 2676], [1646, 2427, 1680, 2451], [1700, 2412, 1728, 2447], [1745, 2415, 1809, 2449], [1827, 2416, 1901, 2449], [1917, 2412, 1992, 2440], [2010, 2415, 2063, 2448], [2080, 2412, 2175, 2447], [1531, 2427, 1643, 2451], [421, 2726, 458, 2749], [460, 2726, 563, 2749], [573, 2726, 670, 2749], [681, 2726, 710, 2749], [717, 2726, 764, 2749], [775, 2726, 843, 2749], [853, 2734, 903, 2749], [913, 2726, 1054, 2756], [1063, 2726, 1150, 2756], [1160, 2727, 1279, 2753], [1290, 2727, 1362, 2749], [1372, 2727, 1412, 2749], [1422, 2727, 1508, 2749], [1517, 2734, 1568, 2749], [1578, 2726, 1638, 2749], [1647, 2727, 1687, 2749], [1696, 2727, 1757, 2749], [1768, 2726, 1859, 2749], [1869, 2726, 1978, 2749], [1988, 2726, 2026, 2749], [2036, 2726, 2174, 2756], [376, 2767, 491, 2796], [503, 2766, 635, 2796], [647, 2767, 773, 2796], [784, 2766, 831, 2789], [840, 2766, 898, 2789], [908, 2766, 1025, 2796], [1035, 2766, 1130, 2789], [1139, 2766, 1281, 2796], [1293, 2766, 1433, 2796], [424, 2802, 465, 2830], [464, 2815, 530, 2830], [540, 2808, 578, 2830], [588, 2811, 649, 2830], [658, 2807, 825, 2837], [828, 2808, 867, 2830], [876, 2807, 939, 2830], [948, 2811, 972, 2830], [982, 2808, 1021, 2830], [1032, 2807, 1131, 2837], [1141, 2808, 1183, 2830], [1192, 2807, 1310, 2837], [1320, 2807, 1462, 2830], [1472, 2807, 1496, 2830], [1506, 2807, 1552, 2830], [1561, 2815, 1639, 2837], [374, 243, 471, 272], [483, 228, 543, 289], [563, 252, 591, 269], [606, 242, 656, 282], [663, 259, 735, 283], [740, 268, 772, 282], [779, 259, 973, 285], [986, 253, 1071, 284], [1090, 245, 1116, 277], [1133, 243, 1150, 272], [1163, 252, 1210, 271], [1222, 243, 1356, 280], [1370, 243, 1425, 271], [1435, 252, 1460, 279], [1475, 252, 1503, 269], [1522, 240, 1565, 281], [1584, 245, 1610, 277], [1629, 240, 1653, 281], [1668, 243, 1715, 271], [1727, 246, 1740, 271], [1757, 247, 1781, 277], [1797, 245, 1814, 271], [1830, 247, 1854, 277], [1868, 254, 1908, 271], [1925, 243, 1953, 271], [1962, 242, 2024, 271], [2037, 252, 2053, 271], [2064, 243, 2178, 277], [376, 294, 551, 331], [564, 294, 640, 329], [652, 294, 776, 322], [790, 298, 820, 322], [834, 294, 925, 329], [937, 304, 966, 330], [979, 304, 996, 330], [1011, 296, 1037, 328], [1056, 294, 1085, 329], [769, 387, 800, 404], [842, 381, 918, 404], [1289, 393, 1336, 422], [1402, 387, 1434, 404], [1475, 381, 1551, 404], [1918, 393, 1963, 422], [492, 416, 646, 468], [658, 421, 697, 462], [714, 437, 742, 446], [758, 413, 814, 471], [823, 404, 839, 479], [852, 413, 908, 471], [928, 434, 996, 464], [1006, 421, 1112, 464], [1129, 441, 1155, 442], [1169, 434, 1226, 464], [1236, 404, 1278, 479], [1350, 428, 1378, 455], [1392, 404, 1472, 479], [1486, 413, 1542, 471], [1561, 434, 1605, 458], [1610, 421, 1742, 464], [1759, 441, 1785, 442], [1798, 404, 1907, 479], [2097, 426, 2173, 461], [760, 482, 810, 501], [852, 482, 907, 507], [1391, 482, 1446, 507], [1488, 482, 1538, 501], [438, 557, 537, 585], [554, 557, 730, 585], [747, 557, 821, 585], [837, 557, 1031, 591], [1053, 557, 1174, 594], [1191, 557, 1311, 585], [1329, 557, 1405, 592], [1422, 566, 1457, 585], [1472, 566, 1550, 585], [1565, 557, 1615, 585], [1633, 557, 1772, 594], [1792, 557, 1908, 585], [1926, 557, 2002, 592], [2020, 566, 2069, 585], [2086, 557, 2175, 594], [376, 608, 525, 645], [539, 608, 639, 636], [651, 608, 763, 636], [774, 608, 970, 645], [983, 608, 1033, 636], [1044, 608, 1157, 637], [1169, 608, 1377, 645], [1389, 608, 1527, 645], [1540, 608, 1625, 643], [1641, 608, 1837, 645], [1850, 608, 1907, 636], [1921, 608, 2106, 645], [2118, 617, 2174, 636], [375, 659, 412, 687], [426, 659, 608, 687], [619, 659, 660, 696], [672, 659, 813, 696], [822, 664, 1071, 696], [1086, 659, 1159, 693], [1173, 659, 1272, 687], [1285, 668, 1332, 687], [1344, 668, 1412, 687], [1425, 659, 1535, 696], [1546, 659, 1621, 687], [1634, 668, 1733, 687], [1746, 659, 1866, 687], [1867, 659, 2028, 696], [2044, 659, 2104, 693], [2118, 659, 2178, 693], [438, 709, 499, 737], [511, 709, 591, 737], [601, 709, 668, 737], [679, 709, 714, 737], [721, 709, 808, 746], [819, 713, 1056, 746], [1068, 709, 1157, 738], [1169, 709, 1286, 746], [1299, 709, 1374, 744], [1387, 709, 1411, 737], [1424, 718, 1454, 737], [1467, 709, 1594, 738], [1611, 709, 1746, 746], [1759, 709, 1785, 737], [1797, 709, 1821, 737], [1835, 718, 1851, 737], [1861, 718, 1974, 737], [1985, 709, 2027, 737], [2040, 709, 2174, 737], [376, 769, 444, 788], [457, 764, 501, 788], [514, 760, 546, 788], [562, 766, 588, 790], [604, 760, 662, 788], [680, 760, 743, 788], [750, 766, 987, 797], [999, 760, 1034, 788], [1044, 760, 1070, 788], [1084, 760, 1108, 788], [1122, 760, 1242, 788], [1255, 769, 1286, 788], [1299, 760, 1349, 788], [1361, 769, 1430, 797], [747, 871, 849, 900], [876, 847, 913, 884], [935, 869, 1010, 898], [1026, 862, 1150, 899], [1205, 855, 1312, 905], [1326, 854, 1387, 901], [1402, 866, 1430, 893], [1443, 859, 1527, 900], [1573, 862, 1621, 890], [1663, 871, 1686, 898], [1703, 860, 1799, 892], [2097, 862, 2173, 897], [1054, 905, 1122, 927], [374, 978, 402, 1006], [412, 978, 537, 1015], [548, 978, 667, 1006], [679, 978, 770, 1006], [783, 987, 822, 1006], [832, 982, 1070, 1015], [1083, 978, 1107, 1006], [1120, 978, 1168, 1006], [1176, 978, 1323, 1015], [1334, 978, 1472, 1015], [1482, 978, 1602, 1007], [1614, 978, 1690, 1013], [1701, 978, 1789, 1007], [1792, 987, 1853, 1006], [1870, 978, 2005, 1007], [2017, 978, 2173, 1007], [377, 1028, 546, 1065], [560, 1028, 660, 1056], [671, 1028, 819, 1065], [833, 1037, 849, 1056], [861, 1028, 995, 1065], [1008, 1028, 1163, 1063], [1177, 1032, 1241, 1065], [1254, 1028, 1398, 1056], [1409, 1028, 1450, 1065], [1463, 1037, 1479, 1056], [1490, 1028, 1640, 1065], [1652, 1028, 1824, 1063], [1826, 1028, 1915, 1065], [1928, 1032, 1958, 1056], [1970, 1028, 2073, 1056], [843, 1130, 926, 1158], [944, 1134, 972, 1143], [987, 1130, 1098, 1165], [1103, 1118, 1180, 1159], [1197, 1118, 1432, 1159], [1486, 1120, 1704, 1157], [2097, 1121, 2173, 1156], [375, 1214, 531, 1241], [533, 1213, 643, 1241], [653, 1213, 803, 1250], [815, 1213, 952, 1241], [966, 1213, 1137, 1241], [1149, 1222, 1215, 1250], [1232, 1213, 1292, 1247], [1305, 1213, 1354, 1247], [1368, 1213, 1416, 1247], [1430, 1213, 1478, 1247], [1492, 1213, 1553, 1247], [438, 1265, 479, 1292], [491, 1264, 656, 1301], [658, 1264, 729, 1292], [740, 1264, 1029, 1301], [1031, 1264, 1190, 1292], [1203, 1264, 1279, 1299], [1292, 1264, 1465, 1301], [1478, 1273, 1526, 1292], [1536, 1264, 1654, 1301], [1667, 1273, 1683, 1292], [1696, 1264, 1869, 1292], [1881, 1264, 1942, 1292], [1954, 1268, 2112, 1301], [2125, 1264, 2174, 1292], [375, 1319, 600, 1352], [611, 1324, 716, 1353], [733, 1315, 782, 1343], [794, 1315, 955, 1343], [967, 1324, 1095, 1343], [1107, 1315, 1131, 1343], [1145, 1315, 1276, 1343], [1287, 1315, 1334, 1343], [1347, 1315, 1458, 1344], [1471, 1315, 1628, 1352], [1638, 1315, 1768, 1352], [1782, 1324, 1818, 1343], [1830, 1320, 1915, 1343], [1927, 1315, 2130, 1352], [2141, 1315, 2177, 1343], [376, 1374, 482, 1404], [496, 1374, 530, 1393], [542, 1365, 657, 1402], [671, 1374, 688, 1393], [700, 1365, 888, 1402], [902, 1366, 1021, 1393], [1034, 1365, 1252, 1402], [1270, 1365, 1342, 1393], [1356, 1374, 1467, 1393], [1468, 1365, 1526, 1393], [1535, 1365, 1683, 1402], [1700, 1365, 1797, 1402], [1810, 1365, 1885, 1393], [1899, 1375, 1916, 1393], [1930, 1365, 2025, 1393], [2037, 1374, 2075, 1393], [2087, 1369, 2175, 1393], [377, 1416, 534, 1453], [545, 1416, 592, 1444], [603, 1416, 776, 1453], [789, 1425, 894, 1454], [911, 1416, 1104, 1453], [1117, 1416, 1264, 1453], [1276, 1416, 1398, 1444], [1400, 1416, 1519, 1453], [1532, 1416, 1623, 1444], [1635, 1416, 1830, 1450], [1844, 1425, 1910, 1453], [1927, 1416, 2062, 1450], [2075, 1416, 2174, 1444], [377, 1467, 480, 1495], [494, 1467, 699, 1504], [710, 1471, 952, 1504], [967, 1467, 1011, 1502], [1025, 1467, 1097, 1504], [1110, 1476, 1140, 1495], [1154, 1467, 1203, 1495], [1216, 1467, 1435, 1504], [1436, 1467, 1492, 1495], [1506, 1467, 1689, 1504], [1703, 1467, 1860, 1502], [438, 1519, 474, 1546], [473, 1518, 587, 1555], [598, 1518, 670, 1546], [682, 1522, 766, 1546], [778, 1518, 833, 1546], [846, 1518, 961, 1546], [972, 1522, 1210, 1555], [1223, 1518, 1253, 1546], [1264, 1518, 1320, 1546], [1332, 1527, 1429, 1555], [1442, 1518, 1613, 1555], [1623, 1527, 1704, 1555], [1716, 1518, 1763, 1546], [1775, 1517, 1911, 1558], [1920, 1518, 1994, 1546], [2007, 1518, 2063, 1546], [2075, 1527, 2114, 1546], [2126, 1518, 2173, 1546], [376, 1569, 443, 1597], [455, 1569, 700, 1606], [712, 1579, 755, 1597], [378, 1683, 434, 1718], [489, 1683, 783, 1718], [376, 1768, 408, 1795], [420, 1767, 587, 1804], [601, 1776, 648, 1796], [659, 1767, 777, 1801], [792, 1767, 926, 1804], [940, 1767, 1127, 1804], [1141, 1767, 1199, 1795], [1211, 1767, 1399, 1804], [1410, 1767, 1483, 1796], [1496, 1776, 1513, 1795], [1524, 1767, 1638, 1804], [1650, 1767, 1686, 1795], [1695, 1767, 1755, 1795], [1767, 1767, 1953, 1804], [1969, 1767, 2033, 1795], [2045, 1767, 2173, 1804], [376, 1818, 591, 1846], [604, 1818, 640, 1846], [649, 1818, 706, 1846], [718, 1827, 811, 1855], [823, 1827, 871, 1846], [884, 1818, 1084, 1846], [1095, 1818, 1200, 1846], [439, 1921, 455, 1937], [479, 1911, 653, 1940], [667, 1911, 797, 1948], [810, 1911, 871, 1939], [883, 1911, 965, 1939], [979, 1915, 1010, 1939], [1023, 1920, 1039, 1939], [1051, 1920, 1117, 1939], [1117, 1911, 1271, 1945], [1283, 1911, 1403, 1939], [1415, 1911, 1451, 1939], [1461, 1911, 1510, 1939], [1522, 1911, 1630, 1939], [1643, 1912, 1715, 1939], [1728, 1911, 1827, 1948], [1839, 1911, 1967, 1939], [1982, 1911, 2055, 1945], [2069, 1911, 2174, 1939], [479, 1961, 594, 1998], [608, 1970, 665, 1989], [676, 1961, 715, 1989], [728, 1961, 829, 1989], [841, 1961, 921, 1989], [933, 1965, 964, 1989], [980, 1961, 1042, 1995], [1056, 1979, 1077, 1981], [1089, 1961, 1148, 1989], [1161, 1961, 1284, 1989], [1296, 1965, 1379, 1989], [1392, 1965, 1445, 1989], [1457, 1965, 1488, 1989], [1500, 1961, 1636, 1998], [1647, 1961, 1743, 1989], [1755, 1961, 1827, 1989], [1839, 1965, 1920, 1989], [1932, 1961, 1968, 1989], [1978, 1961, 2028, 1989], [2040, 1961, 2175, 1998], [479, 2012, 646, 2049], [659, 2013, 711, 2040], [723, 2012, 886, 2049], [898, 2012, 1045, 2040], [439, 2085, 455, 2101], [479, 2075, 508, 2103], [522, 2075, 699, 2112], [713, 2075, 870, 2104], [884, 2075, 1069, 2103], [1082, 2075, 1201, 2104], [1203, 2075, 1270, 2110], [1284, 2075, 1432, 2103], [1446, 2075, 1493, 2110], [1509, 2075, 1568, 2103], [1583, 2075, 1694, 2103], [1711, 2075, 1873, 2112], [1889, 2075, 1947, 2103], [1962, 2075, 2110, 2104], [2127, 2085, 2179, 2103], [479, 2126, 632, 2163], [646, 2127, 700, 2154], [715, 2126, 840, 2154], [857, 2126, 931, 2160], [954, 2126, 1027, 2154], [1042, 2126, 1226, 2154], [1239, 2126, 1383, 2163], [1399, 2135, 1416, 2154], [1429, 2126, 1605, 2163], [1622, 2135, 1707, 2154], [1722, 2126, 1859, 2154], [1874, 2126, 2101, 2163], [2115, 2126, 2173, 2154], [478, 2177, 565, 2214], [577, 2186, 613, 2205], [626, 2177, 727, 2205], [740, 2186, 757, 2205], [767, 2177, 875, 2214], [887, 2177, 1058, 2214], [1071, 2177, 1231, 2214], [1243, 2177, 1306, 2205], [1317, 2177, 1460, 2205], [1462, 2177, 1537, 2205], [1550, 2177, 1699, 2214], [1711, 2177, 1747, 2205], [1756, 2177, 1829, 2205], [1841, 2177, 1991, 2211], [2004, 2177, 2096, 2206], [2109, 2177, 2174, 2205], [478, 2228, 638, 2265], [651, 2237, 667, 2256], [679, 2237, 745, 2256], [758, 2228, 891, 2256], [904, 2228, 1063, 2265], [1075, 2228, 1123, 2256], [1134, 2228, 1284, 2265], [1295, 2227, 1431, 2262], [1447, 2228, 1560, 2256], [1572, 2228, 1740, 2265], [439, 2301, 455, 2317], [479, 2291, 620, 2319], [631, 2295, 873, 2328], [886, 2291, 934, 2319], [945, 2291, 1066, 2328], [1078, 2290, 1214, 2331], [1227, 2291, 1259, 2327], [1274, 2293, 1300, 2325], [1319, 2291, 1348, 2326], [1365, 2291, 1482, 2319], [1496, 2292, 1529, 2319], [1540, 2291, 1706, 2328], [528, 2376, 549, 2379], [571, 2360, 627, 2387], [636, 2369, 657, 2395], [671, 2372, 699, 2381], [715, 2359, 742, 2393], [756, 2368, 784, 2387], [786, 2363, 933, 2396], [946, 2368, 962, 2387], [975, 2359, 1156, 2396], [1168, 2360, 1297, 2387], [1309, 2359, 1432, 2387], [1443, 2359, 1537, 2387], [1549, 2368, 1568, 2387], [1570, 2359, 1650, 2387], [1661, 2359, 1859, 2396], [1872, 2363, 2000, 2396], [2012, 2359, 2048, 2387], [2060, 2359, 2133, 2393], [528, 2431, 549, 2434], [571, 2415, 628, 2442], [641, 2414, 691, 2442], [704, 2414, 827, 2451], [839, 2424, 860, 2450], [878, 2416, 904, 2448], [925, 2414, 938, 2442], [955, 2423, 1026, 2442], [1040, 2423, 1087, 2443], [1101, 2414, 1240, 2442], [1253, 2414, 1328, 2442], [1342, 2414, 1627, 2451], [1643, 2414, 1701, 2442], [1714, 2414, 1886, 2451], [1898, 2414, 1993, 2442], [2007, 2414, 2175, 2442], [571, 2464, 717, 2492], [439, 2554, 455, 2570], [480, 2544, 620, 2573], [631, 2544, 933, 2581], [947, 2544, 1123, 2581], [1136, 2544, 1184, 2572], [1195, 2544, 1373, 2581], [1385, 2544, 1434, 2572], [1448, 2544, 1523, 2579], [1538, 2544, 1595, 2572], [1607, 2544, 1756, 2581], [1769, 2545, 1822, 2572], [1836, 2544, 1912, 2579], [1924, 2548, 2179, 2581], [477, 2596, 531, 2623], [543, 2595, 654, 2624], [669, 2604, 706, 2623], [719, 2604, 803, 2632], [816, 2595, 852, 2623], [862, 2595, 987, 2623], [990, 2595, 1048, 2623], [1060, 2595, 1110, 2623], [1123, 2595, 1274, 2623], [1287, 2595, 1349, 2623], [1360, 2604, 1415, 2623], [1427, 2595, 1666, 2632], [1681, 2595, 1739, 2623], [1752, 2595, 1883, 2632], [1895, 2595, 2050, 2623], [2063, 2595, 2179, 2632], [479, 2650, 578, 2674], [593, 2646, 678, 2675], [693, 2646, 755, 2674], [769, 2655, 786, 2674], [800, 2646, 935, 2683], [950, 2650, 1080, 2683], [1094, 2646, 1189, 2674], [1203, 2655, 1244, 2674], [1258, 2646, 1436, 2683], [1449, 2646, 1624, 2674], [1638, 2646, 1664, 2674], [1678, 2646, 1728, 2674], [1742, 2650, 1823, 2674], [1836, 2646, 1980, 2674], [1993, 2646, 2025, 2674], [2037, 2646, 2179, 2683], [478, 2697, 692, 2731], [706, 2697, 763, 2725], [776, 2697, 913, 2725], [924, 2697, 1126, 2725], [1138, 2697, 1174, 2725], [1183, 2697, 1230, 2725], [1245, 2697, 1302, 2725], [1313, 2697, 1459, 2734], [1472, 2698, 1524, 2725], [1538, 2697, 1650, 2726], [1665, 2697, 1767, 2725], [1780, 2706, 1866, 2725], [1878, 2697, 1914, 2725], [1923, 2706, 1977, 2725], [1988, 2697, 2046, 2725], [2062, 2697, 2174, 2725], [478, 2747, 610, 2775], [624, 2747, 682, 2775], [694, 2747, 890, 2784], [902, 2747, 938, 2775], [947, 2747, 996, 2775], [1008, 2747, 1139, 2776], [1149, 2747, 1386, 2784], [1398, 2747, 1533, 2775], [1545, 2747, 1575, 2775], [1587, 2747, 1694, 2775], [1707, 2747, 1764, 2775], [1776, 2751, 1877, 2775], [1888, 2748, 1944, 2775], [439, 252, 455, 268], [479, 242, 543, 270], [556, 242, 629, 270], [642, 246, 723, 270], [735, 242, 899, 279], [910, 242, 1115, 270], [1127, 242, 1164, 270], [1173, 251, 1229, 270], [1240, 251, 1319, 279], [1319, 242, 1371, 270], [1385, 251, 1402, 270], [1414, 242, 1602, 276], [1616, 242, 1864, 270], [1876, 251, 2082, 279], [2094, 242, 2177, 276], [479, 292, 594, 320], [608, 292, 665, 320], [678, 292, 793, 329], [806, 292, 1044, 329], [1045, 301, 1096, 320], [1097, 292, 1162, 320], [1173, 292, 1223, 320], [1234, 292, 1383, 321], [1396, 292, 1453, 320], [1465, 292, 1632, 329], [1645, 285, 1809, 320], [374, 386, 414, 413], [427, 385, 615, 422], [617, 389, 692, 413], [704, 385, 885, 422], [898, 394, 925, 414], [928, 385, 1097, 413], [1110, 385, 1221, 414], [1235, 385, 1428, 422], [1441, 385, 1476, 413], [1485, 386, 1537, 413], [1549, 389, 1787, 422], [1801, 389, 1839, 413], [1858, 385, 1893, 420], [1906, 385, 2003, 422], [2017, 385, 2073, 413], [2085, 385, 2173, 414], [376, 436, 545, 473], [560, 436, 607, 471], [620, 436, 720, 473], [732, 436, 975, 470], [990, 436, 1047, 464], [1060, 436, 1119, 471], [1132, 436, 1200, 464], [1211, 436, 1338, 465], [1352, 436, 1388, 464], [1397, 436, 1590, 464], [376, 511, 467, 540], [489, 512, 543, 539], [556, 511, 615, 539], [617, 511, 785, 539], [799, 515, 883, 548], [896, 511, 1003, 539], [1018, 515, 1049, 539], [1064, 520, 1172, 539], [1186, 511, 1436, 548], [1451, 511, 1487, 539], [1498, 520, 1554, 539], [1566, 511, 1685, 539], [1707, 512, 1742, 539], [1754, 511, 1923, 548], [1939, 511, 2031, 548], [2044, 511, 2094, 539], [2108, 515, 2175, 539], [377, 562, 522, 590], [534, 562, 596, 590], [607, 563, 661, 590], [673, 562, 814, 599], [816, 562, 918, 590], [930, 562, 1070, 590], [1082, 562, 1114, 590], [1126, 562, 1175, 590], [1188, 562, 1347, 596], [1361, 571, 1409, 591], [1420, 562, 1539, 590], [1551, 562, 1574, 590], [1585, 562, 1611, 590], [1624, 562, 1764, 590], [1776, 566, 1807, 590], [1819, 562, 1894, 590], [1904, 571, 1989, 590], [2002, 562, 2038, 590], [2048, 563, 2102, 590], [2115, 562, 2173, 590], [376, 613, 461, 641], [475, 613, 664, 641], [680, 617, 711, 641], [725, 613, 803, 641], [819, 622, 924, 641], [940, 617, 971, 641], [987, 622, 1042, 641], [1056, 613, 1143, 647], [1161, 613, 1302, 647], [1321, 613, 1379, 641], [1396, 613, 1512, 650], [1530, 617, 1561, 641], [1577, 613, 1815, 650], [1830, 613, 1929, 650], [1944, 622, 2000, 641], [2014, 613, 2122, 641], [2126, 613, 2176, 647], [376, 657, 518, 692], [378, 778, 436, 813], [488, 778, 649, 813], [663, 778, 772, 813], [374, 863, 418, 891], [419, 863, 593, 891], [605, 872, 644, 891], [656, 864, 708, 891], [720, 863, 745, 891], [758, 867, 807, 891], [820, 863, 898, 900], [911, 867, 940, 891], [952, 863, 1058, 900], [1070, 872, 1086, 891], [1097, 863, 1340, 900], [1351, 863, 1459, 892], [1470, 863, 1547, 891], [1564, 863, 1689, 897], [1702, 872, 1747, 892], [1760, 863, 1892, 891], [1903, 863, 1951, 891], [1963, 867, 2041, 891], [2053, 863, 2175, 900], [375, 913, 487, 941], [499, 913, 583, 941], [594, 917, 625, 941], [636, 913, 706, 950], [718, 913, 805, 950], [817, 922, 871, 941], [882, 913, 1097, 941], [1111, 913, 1141, 941], [1153, 913, 1347, 950], [438, 965, 491, 992], [510, 964, 599, 992], [618, 973, 659, 992], [676, 965, 935, 1001], [955, 964, 1000, 999], [1018, 964, 1068, 992], [1087, 973, 1176, 992], [1194, 964, 1230, 992], [1249, 964, 1336, 999], [1358, 964, 1390, 992], [1407, 968, 1540, 992], [1558, 968, 1588, 992], [1608, 965, 1824, 1001], [1846, 964, 1919, 998], [1954, 964, 2101, 1001], [2121, 965, 2174, 992], [375, 1015, 600, 1052], [613, 1015, 702, 1043], [716, 1015, 881, 1052], [894, 1015, 924, 1043], [936, 1015, 1034, 1052], [1046, 1015, 1203, 1052], [1217, 1015, 1273, 1043], [1286, 1015, 1381, 1052], [1392, 1015, 1575, 1052], [1590, 1015, 1646, 1043], [1658, 1015, 1738, 1052], [1751, 1024, 1767, 1043], [1779, 1015, 1836, 1043], [1849, 1015, 2005, 1043], [2017, 1015, 2173, 1052], [377, 1066, 536, 1103], [538, 1066, 640, 1094], [655, 1066, 714, 1100], [729, 1075, 779, 1094], [791, 1067, 871, 1103], [438, 1117, 502, 1145], [519, 1117, 703, 1154], [720, 1118, 774, 1145], [789, 1117, 987, 1154], [1003, 1107, 1083, 1155], [1102, 1117, 1160, 1145], [1176, 1107, 1262, 1160], [1282, 1117, 1360, 1145], [1375, 1117, 1407, 1145], [1422, 1117, 1524, 1154], [1540, 1117, 1702, 1154], [1719, 1117, 1777, 1145], [1794, 1117, 2032, 1145], [2050, 1117, 2124, 1151], [2143, 1117, 2174, 1145], [376, 1167, 425, 1195], [439, 1167, 627, 1195], [644, 1167, 718, 1201], [733, 1167, 765, 1195], [778, 1167, 900, 1204], [914, 1167, 1103, 1195], [1120, 1167, 1193, 1201], [1209, 1167, 1241, 1195], [1253, 1167, 1474, 1204], [1486, 1167, 1640, 1195], [1656, 1167, 1730, 1201], [1745, 1167, 1777, 1195], [1790, 1167, 1951, 1204], [1963, 1167, 2058, 1195], [2072, 1167, 2174, 1204], [377, 1218, 590, 1255], [605, 1218, 678, 1252], [691, 1218, 722, 1246], [734, 1218, 925, 1246], [936, 1218, 1140, 1255], [1155, 1218, 1228, 1252], [1243, 1227, 1292, 1246], [1305, 1218, 1367, 1246], [1380, 1218, 1428, 1246], [1439, 1218, 1548, 1246], [1561, 1218, 1644, 1247], [1654, 1218, 1685, 1246], [1699, 1218, 1771, 1252], [1788, 1218, 1857, 1246], [1870, 1218, 1961, 1246], [1975, 1218, 2175, 1255], [377, 1269, 432, 1297], [443, 1269, 605, 1306], [608, 1269, 670, 1297], [679, 1269, 856, 1306], [867, 1270, 919, 1297], [931, 1269, 955, 1297], [967, 1269, 1014, 1297], [1024, 1269, 1081, 1306], [1092, 1269, 1265, 1297], [1275, 1269, 1399, 1298], [1411, 1269, 1588, 1306], [1599, 1269, 1741, 1306], [1753, 1269, 1841, 1297], [1851, 1269, 2010, 1306], [2021, 1273, 2179, 1306], [438, 1320, 535, 1348], [549, 1320, 574, 1348], [590, 1329, 607, 1348], [619, 1320, 684, 1348], [697, 1320, 849, 1348], [862, 1320, 899, 1348], [910, 1320, 1035, 1348], [1038, 1320, 1192, 1348], [1207, 1324, 1237, 1348], [1253, 1320, 1437, 1357], [1452, 1321, 1510, 1354], [1525, 1329, 1594, 1357], [1610, 1320, 1697, 1348], [1711, 1320, 1881, 1357], [1895, 1320, 1927, 1348], [1940, 1320, 1990, 1348], [2004, 1324, 2127, 1348], [2140, 1320, 2176, 1348], [376, 1371, 563, 1399], [579, 1371, 638, 1405], [652, 1371, 715, 1405], [729, 1371, 904, 1408], [920, 1371, 994, 1405], [1008, 1371, 1236, 1408], [1249, 1371, 1435, 1408], [1451, 1371, 1511, 1405], [1525, 1371, 1587, 1405], [1601, 1380, 1635, 1399], [1647, 1371, 1707, 1399], [1718, 1371, 1858, 1399], [1870, 1371, 1965, 1399], [1978, 1380, 2018, 1399], [2030, 1371, 2173, 1408], [375, 1421, 598, 1458], [614, 1421, 675, 1455], [691, 1430, 724, 1449], [735, 1422, 819, 1449], [831, 1421, 1000, 1449], [1015, 1421, 1144, 1458], [1160, 1421, 1233, 1455], [1250, 1422, 1404, 1455], [1418, 1421, 1439, 1449], [1452, 1430, 1549, 1449], [1563, 1421, 1623, 1449], [1636, 1421, 1817, 1458], [1829, 1422, 1882, 1449], [1895, 1430, 1995, 1449], [2009, 1421, 2093, 1449], [2104, 1421, 2174, 1449], [376, 1471, 406, 1506], [421, 1472, 474, 1500], [488, 1476, 539, 1500], [550, 1472, 628, 1500], [641, 1472, 758, 1500], [770, 1481, 839, 1500], [840, 1472, 903, 1500], [915, 1472, 965, 1500], [976, 1472, 1133, 1506], [1148, 1472, 1291, 1509], [1302, 1472, 1483, 1509], [1496, 1481, 1527, 1500], [1541, 1481, 1557, 1500], [1569, 1472, 1648, 1500], [1660, 1472, 1696, 1500], [1706, 1472, 1838, 1501], [1851, 1472, 2029, 1500], [2031, 1472, 2132, 1506], [438, 1524, 495, 1551], [510, 1523, 626, 1551], [640, 1532, 678, 1551], [679, 1523, 759, 1551], [771, 1523, 821, 1551], [832, 1523, 994, 1560], [1006, 1522, 1036, 1557], [1052, 1532, 1149, 1557], [1163, 1523, 1245, 1551], [1258, 1523, 1336, 1551], [1349, 1523, 1464, 1551], [1476, 1523, 1572, 1551], [1583, 1523, 1724, 1551], [1737, 1523, 1800, 1551], [1812, 1532, 1861, 1551], [1873, 1523, 2099, 1560], [2111, 1523, 2179, 1551], [374, 1575, 411, 1602], [409, 1578, 509, 1602], [521, 1574, 577, 1602], [590, 1574, 726, 1611], [738, 1574, 768, 1602], [780, 1574, 870, 1602], [882, 1574, 912, 1602], [925, 1574, 1046, 1603], [1057, 1574, 1085, 1608], [1100, 1574, 1156, 1602], [1167, 1574, 1243, 1602], [1246, 1574, 1351, 1602], [1362, 1574, 1410, 1602], [1422, 1574, 1525, 1602], [1536, 1578, 1565, 1602], [1578, 1574, 1638, 1602], [1651, 1574, 1765, 1602], [1776, 1574, 1824, 1602], [1835, 1574, 2004, 1602], [2016, 1574, 2052, 1602], [2061, 1574, 2175, 1611], [375, 1625, 487, 1653], [499, 1625, 583, 1653], [594, 1634, 634, 1653], [646, 1625, 704, 1653], [717, 1625, 839, 1654], [856, 1626, 909, 1653], [920, 1629, 990, 1653], [1001, 1625, 1081, 1659], [1093, 1625, 1240, 1659], [1254, 1625, 1314, 1653], [1326, 1625, 1357, 1653], [1369, 1629, 1499, 1653], [1511, 1629, 1540, 1653], [1553, 1634, 1643, 1662], [1655, 1625, 1691, 1653], [1700, 1625, 1749, 1653], [1760, 1625, 1900, 1662], [1913, 1625, 1971, 1653], [1984, 1625, 2107, 1659], [2121, 1634, 2175, 1653], [377, 1675, 489, 1704], [504, 1675, 592, 1703], [604, 1675, 741, 1712], [755, 1684, 771, 1703], [783, 1675, 945, 1712], [957, 1675, 1018, 1703], [1030, 1684, 1086, 1703], [1097, 1675, 1136, 1703], [1147, 1684, 1219, 1712], [1231, 1675, 1391, 1712], [1403, 1675, 1433, 1703], [1446, 1675, 1643, 1712], [1659, 1675, 1732, 1709], [438, 1726, 611, 1763], [625, 1726, 749, 1760], [765, 1726, 928, 1755], [941, 1727, 971, 1754], [990, 1726, 1051, 1760], [1067, 1726, 1228, 1763], [1243, 1735, 1260, 1754], [1274, 1726, 1423, 1754], [1439, 1726, 1711, 1763], [1715, 1726, 1823, 1761], [1838, 1727, 1863, 1754], [1876, 1730, 1958, 1754], [1973, 1730, 2026, 1754], [2039, 1726, 2102, 1754], [2114, 1726, 2173, 1754], [376, 1777, 499, 1805], [511, 1777, 537, 1805], [549, 1777, 724, 1814], [737, 1786, 753, 1805], [765, 1777, 879, 1805], [890, 1777, 926, 1805], [935, 1777, 985, 1805], [997, 1777, 1193, 1805], [1205, 1777, 1338, 1805], [1350, 1777, 1474, 1805], [1478, 1778, 1532, 1805], [1544, 1781, 1676, 1805], [1687, 1781, 1717, 1805], [1729, 1777, 1779, 1805], [1791, 1777, 1840, 1805], [1853, 1777, 2003, 1814], [2014, 1777, 2174, 1814], [375, 1828, 453, 1862], [465, 1828, 513, 1856], [525, 1828, 570, 1857], [584, 1832, 709, 1865], [721, 1828, 862, 1857], [873, 1828, 912, 1865], [924, 1828, 1081, 1857], [1092, 1829, 1119, 1856], [1136, 1828, 1197, 1862], [1211, 1828, 1236, 1856], [1248, 1832, 1277, 1856], [1288, 1828, 1350, 1865], [1362, 1837, 1401, 1856], [1412, 1827, 1521, 1862], [1532, 1828, 1733, 1865], [1745, 1828, 1879, 1865], [1892, 1828, 2005, 1856], [2016, 1828, 2052, 1856], [2064, 1828, 2175, 1856], [377, 1879, 520, 1916], [537, 1880, 626, 1907], [638, 1888, 674, 1907], [686, 1879, 942, 1916], [954, 1879, 1124, 1916], [1137, 1879, 1185, 1907], [1199, 1879, 1243, 1908], [1259, 1879, 1407, 1916], [1419, 1879, 1443, 1907], [1457, 1879, 1620, 1907], [1633, 1879, 1760, 1916], [1773, 1879, 1824, 1907], [1836, 1883, 1887, 1907], [1899, 1879, 2078, 1916], [2091, 1888, 2173, 1907], [377, 1934, 523, 1958], [540, 1930, 746, 1967], [760, 1930, 938, 1958], [951, 1930, 1027, 1958], [1038, 1930, 1134, 1958], [1145, 1930, 1278, 1958], [1292, 1930, 1463, 1967], [1465, 1934, 1557, 1958], [1570, 1934, 1623, 1958], [1634, 1934, 1665, 1958], [1676, 1930, 1715, 1958], [1727, 1930, 1788, 1958], [1801, 1930, 1944, 1958], [1956, 1930, 2027, 1958], [2039, 1930, 2173, 1958], [376, 1980, 513, 2008], [527, 1980, 587, 2008], [598, 1980, 662, 2017], [674, 1989, 714, 2008], [726, 1989, 810, 2008], [822, 1980, 962, 2017], [978, 1980, 1091, 2008], [1104, 1984, 1346, 2017], [1362, 1980, 1435, 2014], [438, 2031, 498, 2059], [511, 2031, 606, 2059], [617, 2031, 818, 2068], [831, 2031, 891, 2059], [903, 2031, 925, 2059], [937, 2031, 961, 2059], [975, 2035, 1026, 2059], [1034, 2031, 1096, 2068], [1107, 2031, 1256, 2068], [1269, 2031, 1382, 2060], [1396, 2031, 1469, 2059], [1482, 2040, 1513, 2059], [1526, 2031, 1636, 2060], [1651, 2031, 1724, 2065], [1739, 2031, 1878, 2068], [1894, 2031, 1967, 2065], [1982, 2031, 2110, 2060], [2125, 2031, 2177, 2065], [374, 2082, 485, 2111], [501, 2082, 574, 2116], [592, 2083, 685, 2110], [703, 2082, 776, 2116], [790, 2082, 850, 2110], [862, 2091, 917, 2110], [928, 2082, 1040, 2110], [1052, 2082, 1131, 2110], [1142, 2091, 1196, 2110], [1207, 2082, 1265, 2110], [1276, 2086, 1525, 2119], [1542, 2082, 1594, 2110], [1605, 2082, 1689, 2110], [1700, 2082, 1748, 2110], [1762, 2082, 1819, 2110], [1830, 2082, 1976, 2119], [1989, 2083, 2041, 2110], [2055, 2082, 2177, 2116], [376, 2142, 444, 2170], [460, 2133, 534, 2167], [549, 2142, 581, 2161], [594, 2133, 665, 2162], [678, 2142, 710, 2161], [722, 2133, 772, 2161], [783, 2137, 887, 2161], [898, 2133, 1032, 2161], [1044, 2133, 1118, 2161], [1120, 2133, 1384, 2170], [1397, 2133, 1513, 2161], [1526, 2133, 1562, 2161], [1571, 2133, 1742, 2161], [1757, 2133, 1818, 2167], [1833, 2133, 2043, 2170], [2054, 2133, 2177, 2167], [376, 2188, 427, 2212], [439, 2184, 511, 2221], [523, 2184, 554, 2212], [567, 2184, 659, 2221], [670, 2184, 721, 2212], [734, 2184, 798, 2212], [810, 2184, 850, 2221], [862, 2184, 985, 2221], [997, 2184, 1046, 2212], [1059, 2184, 1163, 2221], [1175, 2188, 1205, 2212], [1218, 2184, 1303, 2213], [1315, 2184, 1465, 2221], [1476, 2184, 1638, 2221], [378, 2298, 435, 2333], [489, 2298, 672, 2333], [673, 2298, 753, 2342], [764, 2298, 829, 2333], [843, 2308, 967, 2342], [374, 2382, 438, 2410], [452, 2382, 624, 2410], [638, 2382, 675, 2410], [687, 2382, 737, 2410], [751, 2391, 845, 2419], [859, 2382, 885, 2410], [901, 2382, 1065, 2419], [1081, 2391, 1113, 2410], [1129, 2382, 1262, 2411], [1287, 2383, 1321, 2410], [1337, 2382, 1462, 2411], [1476, 2382, 1495, 2410], [1511, 2391, 1558, 2411], [1573, 2382, 1716, 2410], [1729, 2391, 1806, 2419], [1821, 2386, 1976, 2419], [1992, 2382, 2040, 2410], [2059, 2382, 2174, 2410], [375, 2433, 530, 2470], [542, 2433, 611, 2462], [612, 2433, 733, 2470], [745, 2433, 795, 2461], [807, 2437, 888, 2461], [899, 2442, 1044, 2461], [1057, 2432, 1087, 2467], [1103, 2442, 1199, 2461], [1215, 2433, 1279, 2461], [1290, 2433, 1442, 2470], [1453, 2433, 1489, 2461], [1499, 2433, 1557, 2461], [1571, 2433, 1687, 2461], [1699, 2433, 1725, 2461], [1738, 2442, 1793, 2461], [1805, 2433, 1937, 2470], [1950, 2442, 1990, 2461], [2003, 2433, 2173, 2470], [374, 2485, 426, 2512], [440, 2484, 561, 2518], [575, 2484, 673, 2512], [685, 2484, 752, 2512], [763, 2488, 793, 2512], [806, 2484, 853, 2512], [866, 2484, 1074, 2521], [1087, 2493, 1103, 2512], [1114, 2493, 1179, 2512], [1191, 2484, 1297, 2521], [1308, 2484, 1430, 2512], [1442, 2484, 1499, 2512], [1512, 2493, 1528, 2512], [1539, 2484, 1688, 2521], [1699, 2485, 1751, 2512], [1765, 2484, 1863, 2513], [1875, 2484, 2023, 2519], [2036, 2484, 2094, 2518], [2108, 2484, 2179, 2519], [374, 2535, 556, 2569], [576, 2544, 624, 2564], [641, 2535, 761, 2563], [779, 2535, 910, 2563], [928, 2535, 964, 2563], [983, 2535, 1098, 2563], [1117, 2535, 1256, 2570], [1274, 2535, 1315, 2570], [1336, 2535, 1494, 2572], [1512, 2544, 1529, 2563], [1547, 2535, 1732, 2572], [1749, 2525, 1829, 2573], [1850, 2535, 1957, 2569], [1978, 2535, 2036, 2563], [2055, 2544, 2072, 2563], [2088, 2544, 2174, 2563], [376, 2586, 498, 2623], [511, 2576, 591, 2630], [606, 2586, 731, 2614], [743, 2586, 838, 2614], [851, 2595, 892, 2614], [905, 2595, 922, 2614], [933, 2586, 1215, 2623], [1218, 2590, 1387, 2623], [1407, 2586, 1638, 2623], [1653, 2595, 1700, 2615], [1713, 2586, 1852, 2614], [1865, 2586, 2174, 2614], [374, 2637, 428, 2664], [442, 2636, 583, 2673], [585, 2636, 671, 2664], [687, 2636, 775, 2673], [790, 2636, 866, 2664], [878, 2640, 1126, 2673], [1141, 2636, 1173, 2664], [1187, 2636, 1312, 2665], [1325, 2636, 1353, 2670], [1368, 2636, 1482, 2673], [1498, 2636, 1612, 2673], [1627, 2636, 1773, 2664], [1787, 2640, 1817, 2664], [1832, 2636, 1959, 2670], [1975, 2636, 2023, 2664], [2035, 2636, 2110, 2664], [2124, 2636, 2173, 2664], [377, 2687, 434, 2715], [451, 2687, 592, 2721], [609, 2687, 838, 2724], [854, 2687, 995, 2715], [1013, 2696, 1062, 2715], [1077, 2687, 1163, 2715], [1191, 2687, 1279, 2715], [1294, 2687, 1379, 2715], [1395, 2687, 1572, 2715], [1589, 2687, 1732, 2721], [1750, 2696, 1798, 2716], [1814, 2687, 1953, 2715], [1969, 2687, 2173, 2724], [421, 2762, 481, 2790], [491, 2767, 939, 2797], [421, 2802, 492, 2831], [503, 2808, 610, 2831], [621, 2808, 681, 2831], [691, 2808, 720, 2831], [730, 2808, 801, 2831], [811, 2808, 927, 2831], [937, 2812, 966, 2831], [980, 2808, 1413, 2838], [377, 242, 434, 270], [448, 242, 650, 279], [663, 242, 695, 270], [708, 242, 832, 271], [844, 242, 873, 271], [890, 243, 924, 270], [935, 242, 1104, 279], [1118, 242, 1274, 270], [1287, 242, 1491, 279], [1504, 242, 1552, 270], [1568, 242, 1684, 270], [1698, 251, 1747, 270], [1759, 242, 1920, 279], [1933, 242, 1964, 270], [1977, 242, 2102, 271], [2114, 242, 2175, 276], [376, 292, 492, 320], [506, 292, 705, 329], [719, 301, 768, 320], [779, 292, 810, 320], [823, 292, 945, 321], [957, 292, 1016, 326], [1030, 292, 1120, 320], [1133, 301, 1170, 320], [1183, 292, 1364, 329], [1376, 292, 1412, 320], [1421, 292, 1550, 320], [1563, 293, 1616, 320], [1629, 292, 1654, 320], [1667, 292, 1716, 320], [1729, 292, 1844, 329], [1856, 292, 1892, 320], [1902, 292, 2024, 321], [2036, 292, 2094, 321], [2111, 292, 2174, 320], [377, 343, 561, 380], [574, 347, 605, 371], [617, 343, 667, 371], [678, 352, 772, 380], [783, 343, 906, 371], [918, 343, 1032, 371], [1044, 343, 1195, 371], [1207, 343, 1315, 371], [1329, 343, 1387, 371], [1400, 343, 1567, 371], [1579, 343, 1777, 371], [1790, 343, 1882, 371], [1893, 343, 1943, 371], [1955, 343, 2174, 380], [377, 398, 469, 431], [376, 523, 404, 564], [466, 523, 647, 565], [672, 524, 779, 565], [795, 526, 1177, 576], [1194, 523, 1267, 565], [1285, 510, 1402, 578], [374, 630, 427, 657], [438, 629, 529, 666], [541, 629, 614, 657], [626, 629, 676, 657], [692, 629, 806, 657], [818, 629, 957, 666], [970, 629, 1046, 664], [1059, 629, 1107, 657], [1119, 638, 1156, 657], [1168, 628, 1198, 664], [1214, 638, 1301, 657], [1313, 629, 1429, 663], [1443, 629, 1491, 657], [1502, 629, 1602, 657], [1615, 638, 1662, 657], [1673, 629, 1784, 657], [1797, 629, 1911, 657], [1923, 629, 2070, 666], [2083, 629, 2174, 657], [377, 680, 558, 717], [575, 680, 671, 717], [685, 680, 758, 708], [770, 680, 952, 708], [965, 680, 1138, 717], [1150, 689, 1209, 717], [1212, 680, 1291, 708], [1309, 689, 1354, 708], [1367, 689, 1423, 708], [1435, 680, 1497, 708], [1509, 680, 1576, 714], [1588, 680, 1699, 714], [1713, 680, 1770, 708], [1782, 680, 1973, 708], [1974, 680, 2049, 717], [2061, 680, 2130, 714], [2143, 680, 2174, 708], [375, 731, 473, 768], [487, 731, 668, 768], [682, 731, 780, 759], [793, 740, 840, 759], [852, 735, 903, 759], [915, 731, 985, 768], [998, 731, 1034, 759], [1042, 731, 1241, 768], [1253, 731, 1348, 765], [1360, 731, 1411, 759], [1424, 731, 1486, 759], [1499, 731, 1577, 759], [1588, 731, 1722, 768], [1734, 731, 1826, 759], [1827, 731, 1900, 759], [1911, 731, 2042, 768], [2056, 731, 2173, 768], [376, 782, 437, 810], [451, 782, 509, 810], [520, 782, 667, 819], [680, 783, 733, 810], [745, 782, 906, 819], [438, 833, 653, 870], [665, 833, 701, 861], [710, 833, 759, 861], [771, 832, 907, 867], [919, 834, 971, 861], [983, 837, 1212, 870], [1223, 842, 1279, 861], [1290, 833, 1329, 861], [1341, 833, 1512, 870], [1524, 833, 1640, 861], [1653, 842, 1683, 861], [1697, 833, 1746, 861], [1757, 833, 1895, 870], [1007, 925, 1086, 982], [1144, 917, 1540, 967], [2097, 925, 2173, 960], [374, 1033, 474, 1061], [487, 1033, 523, 1061], [536, 1033, 561, 1061], [575, 1033, 624, 1061], [636, 1033, 832, 1070], [844, 1034, 960, 1067], [974, 1033, 1013, 1061], [1025, 1042, 1110, 1061], [1123, 1037, 1229, 1070], [1242, 1032, 1284, 1067], [1301, 1046, 1329, 1055], [1346, 1033, 1392, 1061], [1408, 1033, 1466, 1061], [1479, 1032, 1571, 1072], [1589, 1033, 1692, 1068], [1709, 1033, 1921, 1068], [438, 1085, 479, 1112], [492, 1084, 577, 1113], [589, 1084, 665, 1119], [678, 1093, 725, 1112], [737, 1084, 800, 1112], [813, 1084, 937, 1121], [950, 1093, 987, 1112], [1000, 1084, 1149, 1121], [1160, 1084, 1234, 1112], [1235, 1084, 1285, 1112], [1287, 1084, 1349, 1112], [1351, 1084, 1440, 1112], [1452, 1084, 1488, 1112], [1498, 1084, 1702, 1121], [1715, 1084, 1862, 1112], [1879, 1085, 1916, 1112], [1915, 1084, 2007, 1112], [2019, 1084, 2174, 1112], [376, 1134, 461, 1162], [476, 1134, 617, 1162], [633, 1134, 681, 1162], [696, 1134, 746, 1162], [760, 1134, 956, 1171], [974, 1134, 1073, 1163], [1090, 1134, 1231, 1171], [1247, 1134, 1332, 1169], [1349, 1134, 1456, 1162], [1472, 1134, 1646, 1171], [1662, 1134, 1712, 1162], [1727, 1134, 1937, 1163], [1952, 1134, 2105, 1171], [2121, 1135, 2174, 1162], [375, 1185, 516, 1222], [530, 1185, 616, 1220], [640, 1186, 726, 1213], [740, 1185, 776, 1213], [788, 1185, 838, 1213], [851, 1185, 995, 1222], [1010, 1185, 1117, 1213], [1130, 1185, 1271, 1213], [1286, 1185, 1398, 1213], [1412, 1185, 1485, 1222], [1499, 1185, 1766, 1222], [1765, 1186, 1812, 1213], [1825, 1185, 1851, 1213], [1866, 1185, 1952, 1213], [1966, 1185, 2128, 1213], [2143, 1189, 2173, 1213], [376, 1236, 484, 1264], [496, 1236, 578, 1264], [590, 1240, 620, 1264], [631, 1236, 742, 1264], [754, 1236, 977, 1273], [992, 1245, 1008, 1264], [1019, 1236, 1157, 1273], [1169, 1236, 1229, 1264], [1241, 1236, 1266, 1264], [1279, 1236, 1391, 1264], [1403, 1240, 1434, 1264], [1447, 1236, 1560, 1265], [1573, 1236, 1780, 1273], [1794, 1245, 1861, 1273], [1876, 1236, 2094, 1273], [2109, 1236, 2171, 1270], [377, 1287, 434, 1315], [446, 1287, 557, 1315], [570, 1287, 764, 1315], [776, 1287, 984, 1324], [995, 1287, 1147, 1324], [1160, 1287, 1283, 1324], [1295, 1296, 1312, 1315], [1313, 1287, 1371, 1315], [1389, 1287, 1461, 1321], [438, 1338, 467, 1366], [478, 1338, 668, 1375], [681, 1338, 817, 1366], [829, 1338, 981, 1375], [992, 1342, 1023, 1366], [1035, 1338, 1143, 1366], [1159, 1347, 1221, 1367], [1233, 1338, 1393, 1375], [1406, 1338, 1436, 1366], [1452, 1338, 1525, 1372], [1542, 1339, 1595, 1366], [1607, 1338, 1671, 1367], [1684, 1338, 1768, 1367], [1781, 1338, 1928, 1367], [1941, 1338, 2001, 1366], [2013, 1338, 2175, 1375], [376, 1397, 431, 1416], [442, 1388, 479, 1416], [492, 1388, 669, 1425], [682, 1397, 712, 1416], [726, 1397, 742, 1416], [755, 1388, 949, 1416], [963, 1388, 1082, 1417], [1094, 1388, 1129, 1416], [1138, 1388, 1186, 1416], [1199, 1388, 1365, 1425], [1379, 1388, 1536, 1425], [1551, 1397, 1567, 1416], [1578, 1388, 1655, 1417], [1667, 1388, 1728, 1416], [1739, 1397, 1829, 1425], [1842, 1388, 1890, 1416], [1903, 1397, 1969, 1425], [1981, 1392, 2011, 1416], [2024, 1388, 2125, 1416], [2138, 1397, 2174, 1416], [376, 1439, 496, 1476], [508, 1439, 566, 1467], [579, 1439, 678, 1468], [689, 1439, 737, 1467], [748, 1439, 898, 1476], [911, 1439, 1028, 1467], [438, 1490, 551, 1518], [566, 1490, 753, 1527], [769, 1499, 817, 1519], [833, 1494, 904, 1518], [920, 1490, 983, 1518], [998, 1490, 1084, 1518], [1099, 1490, 1171, 1518], [1189, 1490, 1263, 1524], [1281, 1490, 1367, 1518], [1382, 1490, 1519, 1518], [1534, 1490, 1675, 1518], [1692, 1494, 1723, 1518], [1740, 1490, 1863, 1518], [1879, 1490, 2075, 1527], [2092, 1481, 2171, 1528], [375, 1541, 539, 1578], [550, 1541, 627, 1569], [638, 1541, 716, 1569], [728, 1541, 889, 1578], [905, 1541, 1041, 1570], [1056, 1541, 1118, 1575], [1134, 1541, 1234, 1569], [1246, 1541, 1316, 1569], [1330, 1541, 1450, 1578], [1462, 1531, 1542, 1585], [1555, 1541, 1720, 1578], [1732, 1541, 1758, 1569], [1770, 1541, 1942, 1578], [1953, 1545, 1984, 1569], [1996, 1541, 2174, 1578], [376, 1592, 425, 1620], [438, 1592, 507, 1620], [519, 1592, 688, 1620], [701, 1592, 737, 1620], [747, 1601, 785, 1620], [798, 1592, 923, 1629], [937, 1592, 1060, 1620], [1072, 1592, 1203, 1620], [1215, 1592, 1324, 1620], [1337, 1592, 1477, 1627], [1491, 1592, 1594, 1621], [1606, 1596, 1746, 1629], [1760, 1601, 1777, 1620], [1789, 1592, 1932, 1629], [1944, 1592, 2173, 1629], [377, 1642, 525, 1679], [536, 1642, 629, 1670], [641, 1651, 681, 1670], [693, 1642, 741, 1670], [754, 1642, 948, 1670], [960, 1642, 1072, 1670], [1086, 1642, 1244, 1679], [1256, 1642, 1303, 1670], [1314, 1643, 1430, 1670], [1435, 1642, 1501, 1670], [1502, 1642, 1673, 1679], [1687, 1642, 1845, 1679], [1856, 1642, 1881, 1670], [1894, 1651, 1965, 1679], [1977, 1642, 2177, 1679], [377, 1693, 434, 1721], [448, 1697, 626, 1730], [641, 1702, 679, 1721], [691, 1693, 806, 1721], [819, 1690, 903, 1731], [919, 1693, 1132, 1730], [1145, 1693, 1237, 1722], [1249, 1693, 1403, 1730], [1417, 1693, 1659, 1730], [1673, 1693, 1716, 1722], [1730, 1697, 1858, 1730], [1877, 1693, 2014, 1721], [2027, 1693, 2175, 1730], [375, 1744, 559, 1781], [573, 1744, 732, 1781], [744, 1753, 805, 1772], [817, 1744, 976, 1781], [987, 1744, 1027, 1781], [1040, 1744, 1227, 1781], [1229, 1753, 1277, 1773], [1278, 1744, 1328, 1772], [1343, 1744, 1405, 1778], [1420, 1744, 1450, 1772], [1462, 1744, 1512, 1772], [1523, 1744, 1603, 1772], [1614, 1744, 1650, 1772], [1660, 1753, 1676, 1772], [1688, 1753, 1827, 1781], [1838, 1744, 1961, 1781], [1974, 1744, 2104, 1772], [2121, 1745, 2174, 1772], [374, 1795, 437, 1823], [450, 1795, 514, 1823], [526, 1795, 666, 1823], [677, 1795, 761, 1823], [774, 1795, 947, 1832], [961, 1795, 991, 1823], [1004, 1804, 1058, 1823], [1069, 1795, 1284, 1832], [1296, 1795, 1488, 1832], [1500, 1795, 1530, 1823], [1544, 1794, 1619, 1832], [438, 1847, 491, 1874], [503, 1846, 623, 1874], [633, 1846, 737, 1883], [748, 1846, 784, 1874], [792, 1846, 911, 1874], [915, 1846, 963, 1874], [974, 1846, 1066, 1874], [1077, 1855, 1117, 1874], [1127, 1846, 1420, 1883], [1431, 1846, 1507, 1881], [1519, 1846, 1700, 1883], [1716, 1855, 1743, 1875], [1746, 1846, 1836, 1874], [1847, 1850, 1964, 1883], [1975, 1846, 2005, 1874], [2016, 1846, 2175, 1883], [375, 1897, 458, 1924], [459, 1897, 624, 1933], [626, 1896, 689, 1924], [690, 1896, 750, 1924], [762, 1896, 930, 1924], [941, 1896, 1035, 1930], [1049, 1896, 1105, 1924], [1117, 1896, 1179, 1924], [1190, 1896, 1318, 1924], [1329, 1896, 1351, 1924], [1360, 1896, 1498, 1933], [1509, 1896, 1566, 1933], [1578, 1896, 1762, 1924], [1774, 1896, 1821, 1924], [1832, 1896, 1949, 1933], [1960, 1897, 2012, 1924], [2023, 1896, 2173, 1933], [374, 1947, 447, 1976], [457, 1957, 478, 1983], [494, 1953, 520, 1977], [538, 1947, 563, 1975], [580, 1947, 644, 1976], [655, 1947, 822, 1975], [834, 1956, 905, 1984], [918, 1947, 983, 1975], [994, 1947, 1033, 1975], [1044, 1947, 1163, 1984], [1175, 1951, 1206, 1975], [1217, 1947, 1337, 1975], [1351, 1947, 1476, 1984], [1489, 1951, 1519, 1975], [1532, 1947, 1698, 1984], [1700, 1947, 1858, 1975], [1868, 1951, 2114, 1984], [2127, 1947, 2175, 1975], [375, 1998, 515, 2035], [517, 1998, 605, 2026], [615, 1998, 693, 2026], [706, 2002, 851, 2026], [864, 1998, 979, 2026], [990, 2002, 1021, 2026], [1033, 1999, 1091, 2032], [1105, 1998, 1153, 2026], [1165, 1998, 1301, 2026], [1313, 1997, 1426, 2032], [1429, 1998, 1591, 2035], [1607, 1998, 1666, 2032], [1681, 1998, 1743, 2032], [1759, 1998, 1881, 2032], [1895, 1998, 1945, 2026], [1957, 1999, 2008, 2026], [2022, 1998, 2174, 2035], [375, 2058, 467, 2086], [470, 2053, 526, 2077], [537, 2049, 576, 2077], [588, 2049, 796, 2077], [808, 2049, 855, 2077], [867, 2049, 916, 2077], [928, 2049, 986, 2077], [999, 2049, 1111, 2086], [1123, 2049, 1326, 2077], [1340, 2049, 1499, 2086], [1501, 2049, 1562, 2077], [1575, 2049, 1647, 2083], [376, 2163, 434, 2198], [489, 2163, 569, 2198], [583, 2163, 808, 2207], [822, 2163, 981, 2198], [995, 2163, 1057, 2198], [1071, 2154, 1167, 2209], [374, 2248, 472, 2276], [484, 2248, 651, 2285], [664, 2248, 800, 2276], [815, 2257, 897, 2276], [909, 2252, 938, 2276], [950, 2248, 988, 2276], [1000, 2248, 1112, 2285], [1123, 2248, 1275, 2276], [1287, 2248, 1317, 2276], [1329, 2248, 1466, 2276], [1479, 2248, 1621, 2285], [1634, 2248, 1703, 2285], [1714, 2248, 1789, 2277], [1801, 2248, 1878, 2276], [1890, 2248, 2000, 2285], [2013, 2248, 2132, 2285], [2143, 2248, 2174, 2276], [377, 2299, 612, 2327], [623, 2308, 690, 2336], [707, 2299, 766, 2333], [781, 2299, 829, 2333], [843, 2299, 904, 2333], [438, 2350, 476, 2377], [474, 2353, 580, 2377], [594, 2349, 635, 2386], [651, 2349, 868, 2386], [884, 2349, 934, 2377], [949, 2349, 1091, 2386], [1107, 2358, 1139, 2377], [1155, 2349, 1288, 2378], [1317, 2350, 1374, 2377], [1389, 2349, 1510, 2383], [1528, 2349, 1714, 2386], [1731, 2349, 1978, 2386], [1997, 2358, 2065, 2386], [2083, 2349, 2173, 2386], [376, 2400, 565, 2437], [577, 2400, 645, 2434], [659, 2400, 740, 2437], [753, 2400, 802, 2428], [814, 2400, 884, 2428], [897, 2400, 1071, 2435], [1084, 2409, 1115, 2428], [1129, 2409, 1145, 2428], [1157, 2400, 1377, 2428], [1388, 2400, 1538, 2437], [913, 2492, 980, 2545], [1003, 2483, 1176, 2535], [1192, 2483, 1282, 2520], [1287, 2492, 1359, 2528], [1382, 2496, 1425, 2520], [1446, 2489, 1542, 2530], [1561, 2491, 1634, 2526], [2097, 2492, 2173, 2527], [374, 2602, 504, 2630], [515, 2602, 662, 2639], [674, 2602, 722, 2630], [734, 2602, 906, 2636], [920, 2602, 967, 2630], [979, 2602, 1125, 2639], [1138, 2602, 1213, 2637], [1226, 2611, 1281, 2630], [1291, 2602, 1329, 2630], [1340, 2602, 1476, 2639], [1488, 2602, 1507, 2630], [1509, 2599, 1553, 2640], [1561, 2595, 1622, 2630], [1626, 2611, 1652, 2630], [1666, 2619, 1692, 2620], [1705, 2596, 1778, 2640], [1791, 2602, 1889, 2631], [1900, 2602, 1969, 2630], [1979, 2602, 2099, 2630], [2112, 2602, 2173, 2630], [1051, 2686, 1110, 2705], [760, 2707, 810, 2748], [827, 2727, 853, 2728], [866, 2698, 935, 2748], [950, 2714, 978, 2741], [1126, 2707, 1246, 2748], [1261, 2714, 1289, 2741], [1302, 2720, 1335, 2744], [1351, 2727, 1377, 2728], [1390, 2698, 1455, 2748], [1469, 2714, 1497, 2741], [1513, 2707, 1642, 2748], [1658, 2727, 1684, 2728], [1698, 2698, 1771, 2748], [1786, 2734, 1790, 2738], [376, 242, 567, 279], [580, 242, 629, 270], [641, 242, 721, 270], [733, 246, 865, 270], [876, 242, 975, 279], [989, 252, 1027, 277], [1044, 255, 1072, 264], [1087, 252, 1128, 276], [1145, 255, 1173, 264], [1189, 242, 1216, 276], [1230, 251, 1277, 270], [1289, 251, 1344, 270], [1356, 242, 1475, 279], [1487, 242, 1536, 270], [1547, 242, 1685, 279], [1698, 242, 1773, 277], [1785, 242, 1826, 279], [753, 342, 758, 347], [862, 324, 880, 337], [1244, 330, 1257, 349], [716, 352, 783, 395], [817, 331, 831, 389], [862, 339, 938, 395], [974, 352, 1048, 376], [1064, 346, 1137, 376], [0, 0, 2550, 3300], [1193, 339, 1276, 380], [1298, 346, 1342, 370], [1363, 339, 1459, 380], [1478, 341, 1550, 378], [1603, 352, 1641, 377], [0, 0, 2550, 3300], [1701, 352, 1743, 376], [0, 0, 2550, 3300], [1804, 342, 1830, 371], [2097, 342, 2173, 377], [375, 458, 451, 485], [464, 466, 510, 485], [521, 457, 653, 494], [665, 466, 681, 485], [693, 457, 788, 494], [791, 457, 855, 485], [864, 457, 1007, 486], [1020, 457, 1059, 494], [1072, 457, 1203, 494], [1216, 457, 1264, 485], [1277, 466, 1341, 485], [1355, 461, 1398, 485], [1410, 457, 1445, 485], [1454, 457, 1598, 486], [1612, 466, 1630, 485], [1646, 470, 1674, 479], [1689, 466, 1709, 485], [1723, 474, 1749, 475], [1763, 466, 1798, 491], [1812, 457, 1910, 485], [1922, 467, 1950, 491], [1969, 467, 2007, 485], [2023, 445, 2122, 497], [2135, 467, 2170, 494], [376, 508, 400, 536], [414, 508, 463, 536], [475, 508, 656, 537], [669, 517, 736, 536], [747, 508, 783, 536], [792, 508, 876, 545], [889, 508, 986, 545], [998, 508, 1109, 537], [1126, 508, 1216, 542], [1231, 508, 1306, 543], [1319, 508, 1462, 536], [533, 608, 538, 613], [643, 590, 661, 603], [1225, 596, 1238, 615], [496, 618, 563, 636], [597, 597, 611, 655], [649, 605, 823, 646], [839, 612, 867, 639], [881, 618, 950, 642], [966, 612, 1034, 642], [1050, 625, 1076, 626], [1090, 618, 1118, 642], [1134, 625, 1160, 626], [1173, 605, 1256, 646], [1279, 612, 1322, 636], [1343, 605, 1379, 646], [1393, 617, 1453, 636], [1460, 605, 1507, 646], [1526, 607, 1599, 644], [1652, 618, 1684, 643], [1700, 625, 1726, 626], [1741, 618, 1773, 643], [1790, 618, 1870, 642], [1886, 625, 1912, 626], [1926, 618, 1963, 642], [1980, 608, 2050, 644], [523, 648, 536, 661], [643, 642, 693, 661], [374, 711, 474, 739], [485, 720, 567, 748], [580, 711, 806, 748], [817, 711, 960, 739], [852, 793, 870, 806], [742, 812, 747, 817], [1107, 800, 1120, 819], [705, 822, 772, 865], [807, 800, 820, 858], [852, 846, 902, 865], [917, 809, 1139, 850], [1193, 816, 1236, 840], [1286, 809, 1449, 850], [1468, 811, 1541, 848], [1554, 822, 1586, 847], [1603, 812, 1674, 848], [1697, 822, 1733, 846], [1750, 822, 1841, 846], [2097, 812, 2173, 847], [375, 916, 424, 943], [425, 915, 515, 943], [526, 915, 584, 952], [596, 915, 679, 943], [695, 915, 833, 952], [846, 915, 922, 950], [935, 924, 991, 943], [1002, 915, 1041, 943], [1054, 915, 1158, 943], [1170, 919, 1201, 943], [1214, 915, 1299, 943], [1311, 915, 1360, 943], [1373, 924, 1456, 943], [1468, 915, 1616, 952], [1629, 924, 1660, 943], [689, 1038, 756, 1091], [777, 1027, 833, 1085], [846, 1031, 943, 1074], [958, 1035, 1042, 1076], [1059, 1055, 1085, 1056], [1099, 1026, 1173, 1076], [1196, 1042, 1239, 1066], [1260, 1035, 1336, 1076], [1350, 1035, 1424, 1076], [1443, 1037, 1516, 1074], [1570, 1048, 1602, 1073], [1619, 1038, 1690, 1074], [1713, 1048, 1749, 1072], [1766, 1051, 1794, 1060], [1809, 1048, 1857, 1072], [2097, 1038, 2173, 1073], [779, 1096, 829, 1115], [374, 1165, 402, 1193], [413, 1174, 486, 1202], [488, 1165, 547, 1193], [556, 1165, 612, 1193], [624, 1165, 815, 1202], [828, 1174, 895, 1202], [907, 1165, 944, 1193], [957, 1165, 1049, 1193], [1062, 1165, 1092, 1193], [1107, 1165, 1180, 1199], [1194, 1165, 1241, 1193], [1252, 1165, 1478, 1202], [1492, 1165, 1548, 1193], [1561, 1165, 1623, 1193], [1635, 1165, 1744, 1193], [1747, 1165, 1796, 1193], [1808, 1165, 1869, 1194], [1881, 1165, 1949, 1202], [1961, 1174, 1995, 1193], [2008, 1165, 2173, 1202], [376, 1220, 406, 1244], [418, 1216, 467, 1244], [479, 1216, 630, 1253], [642, 1206, 721, 1254], [736, 1216, 857, 1250], [871, 1225, 918, 1244], [930, 1216, 1050, 1244], [1063, 1225, 1100, 1244], [1113, 1216, 1284, 1245], [1295, 1216, 1387, 1253], [1396, 1216, 1427, 1244], [1439, 1216, 1601, 1253], [1613, 1216, 1647, 1245], [438, 1267, 501, 1295], [513, 1276, 601, 1295], [613, 1267, 817, 1304], [830, 1267, 854, 1295], [868, 1267, 1026, 1304], [1039, 1276, 1070, 1295], [1083, 1267, 1212, 1295], [1230, 1267, 1293, 1295], [1304, 1267, 1453, 1304], [1465, 1267, 1495, 1295], [1508, 1267, 1584, 1302], [1597, 1276, 1653, 1295], [1664, 1267, 1703, 1295], [1715, 1267, 1892, 1304], [1905, 1276, 1936, 1295], [1949, 1267, 1998, 1295], [2010, 1267, 2174, 1295], [376, 1317, 476, 1354], [488, 1317, 524, 1345], [534, 1326, 550, 1345], [560, 1317, 693, 1354], [706, 1317, 832, 1354], [844, 1317, 892, 1345], [903, 1317, 1001, 1354], [1018, 1314, 1052, 1355], [1064, 1314, 1121, 1355], [1139, 1317, 1228, 1351], [1242, 1317, 1318, 1352], [1332, 1317, 1417, 1345], [1430, 1317, 1478, 1345], [1490, 1317, 1649, 1345], [1660, 1317, 1761, 1354], [1772, 1317, 1905, 1354], [1919, 1317, 1979, 1352], [1993, 1317, 2176, 1354], [376, 1368, 514, 1405], [530, 1377, 547, 1396], [560, 1368, 631, 1396], [645, 1368, 681, 1396], [691, 1368, 798, 1405], [811, 1367, 831, 1397], [847, 1368, 921, 1397], [934, 1372, 1037, 1396], [1050, 1368, 1100, 1396], [1114, 1368, 1299, 1396], [1314, 1377, 1382, 1396], [1395, 1377, 1415, 1396], [1432, 1368, 1490, 1396], [1503, 1368, 1596, 1396], [1598, 1368, 1681, 1405], [1695, 1368, 1777, 1396], [1791, 1368, 1953, 1405], [1969, 1368, 2027, 1404], [2040, 1368, 2102, 1403], [2124, 1368, 2174, 1396], [376, 1419, 514, 1456], [526, 1419, 704, 1456], [716, 1419, 773, 1447], [787, 1419, 969, 1456], [981, 1419, 1006, 1447], [1020, 1419, 1125, 1447], [1137, 1419, 1168, 1447], [1180, 1419, 1287, 1456], [1303, 1419, 1325, 1447], [438, 1470, 502, 1499], [506, 1470, 582, 1498], [594, 1474, 654, 1498], [667, 1470, 756, 1507], [769, 1470, 793, 1498], [806, 1470, 908, 1504], [922, 1470, 969, 1498], [983, 1470, 1112, 1498], [1123, 1470, 1170, 1498], [1181, 1470, 1229, 1498], [1241, 1470, 1365, 1507], [1378, 1471, 1430, 1498], [1442, 1470, 1578, 1507], [1590, 1470, 1666, 1505], [1679, 1479, 1734, 1498], [1745, 1470, 1782, 1498], [1793, 1470, 1951, 1498], [1963, 1470, 2002, 1507], [2015, 1470, 2173, 1507], [376, 1521, 436, 1549], [633, 1623, 786, 1647], [846, 1626, 874, 1635], [930, 1623, 1088, 1647], [1105, 1610, 1335, 1651], [1394, 1626, 1422, 1635], [1478, 1617, 1726, 1650], [1786, 1626, 1814, 1635], [1870, 1623, 1914, 1649], [374, 1705, 471, 1734], [483, 1714, 510, 1734], [513, 1705, 613, 1733], [625, 1705, 672, 1733], [683, 1705, 862, 1742], [863, 1705, 1007, 1733], [1019, 1714, 1042, 1733], [1058, 1718, 1086, 1727], [1101, 1714, 1162, 1741], [1174, 1698, 1274, 1733], [1291, 1705, 1463, 1742], [1476, 1705, 1523, 1733], [1536, 1705, 1629, 1733], [1642, 1714, 1781, 1742], [1783, 1705, 1886, 1734], [1889, 1705, 1963, 1733], [1964, 1705, 2033, 1733], [2045, 1705, 2174, 1733], [376, 1760, 406, 1784], [419, 1756, 469, 1784], [482, 1756, 590, 1784], [605, 1756, 771, 1793], [783, 1756, 924, 1793], [936, 1756, 962, 1784], [975, 1756, 1119, 1784], [1133, 1765, 1165, 1784], [1178, 1756, 1228, 1784], [1241, 1756, 1371, 1784], [1383, 1756, 1521, 1793], [1533, 1756, 1569, 1784], [1579, 1756, 1629, 1784], [1642, 1760, 1704, 1784], [1717, 1756, 1820, 1793], [1834, 1765, 1868, 1784], [1881, 1765, 1913, 1784], [1926, 1756, 1976, 1784], [1990, 1756, 2077, 1793], [2089, 1765, 2108, 1784], [2111, 1756, 2173, 1784], [377, 1811, 535, 1844], [1064, 1925, 1379, 1986], [1403, 1925, 1616, 1973], [376, 2699, 483, 2736], [499, 2699, 522, 2727], [539, 2702, 671, 2735], [682, 2701, 714, 2727], [723, 2702, 767, 2727], [778, 2705, 833, 2727], [845, 2702, 927, 2735], [938, 2702, 1057, 2727], [1072, 2702, 1128, 2727], [1139, 2702, 1303, 2727], [1315, 2710, 1375, 2727], [1386, 2710, 1405, 2727], [1417, 2701, 1448, 2727], [1457, 2702, 1501, 2727], [1512, 2702, 1588, 2735], [1600, 2702, 1687, 2735], [1698, 2702, 1790, 2727], [1802, 2710, 1823, 2735], [1835, 2702, 1858, 2727], [1870, 2702, 1965, 2727], [1976, 2710, 2004, 2727], [2016, 2702, 2060, 2727], [2071, 2702, 2174, 2727], [376, 2749, 440, 2779], [455, 2749, 499, 2774], [511, 2749, 594, 2774], [605, 2749, 666, 2774], [680, 2749, 757, 2774], [769, 2749, 814, 2774], [825, 2749, 917, 2782], [933, 2746, 1027, 2783], [1046, 2749, 1104, 2774], [1115, 2749, 1224, 2774], [1235, 2749, 1289, 2774], [1301, 2753, 1348, 2782], [1360, 2749, 1393, 2774], [1403, 2749, 1448, 2774], [1461, 2748, 1581, 2774], [1593, 2749, 1657, 2774], [1669, 2757, 1714, 2774], [1728, 2749, 1823, 2774], [1836, 2749, 1864, 2774], [1876, 2749, 1931, 2774], [1951, 2749, 2008, 2774], [2021, 2753, 2077, 2774], [2090, 2749, 2173, 2782], [377, 2795, 494, 2820], [506, 2803, 522, 2820], [535, 2795, 557, 2820], [570, 2795, 664, 2820], [675, 2803, 704, 2820], [0, 0, 2550, 3300], [716, 2794, 788, 2820], [789, 2795, 877, 2820], [373, 239, 557, 277], [571, 239, 586, 268], [600, 243, 653, 268], [655, 243, 758, 276], [769, 243, 913, 276], [924, 242, 967, 268], [977, 243, 1235, 276], [397, 299, 416, 321], [439, 296, 549, 329], [565, 296, 640, 329], [652, 296, 739, 329], [750, 304, 771, 329], [783, 295, 815, 321], [823, 296, 915, 329], [926, 304, 955, 326], [967, 296, 1129, 329], [1140, 295, 1167, 321], [394, 346, 416, 368], [439, 342, 579, 369], [589, 343, 599, 368], [614, 354, 640, 363], [655, 343, 679, 373], [693, 343, 931, 376], [945, 354, 971, 363], [985, 346, 1019, 373], [1033, 343, 1273, 368], [1287, 354, 1313, 363], [1327, 346, 1361, 373], [1374, 351, 1403, 372], [1419, 354, 1445, 363], [1460, 334, 1551, 379], [1563, 351, 1611, 376], [394, 392, 416, 414], [439, 388, 543, 415], [559, 393, 583, 416], [598, 389, 668, 415], [393, 439, 409, 461], [495, 436, 558, 461], [569, 444, 628, 461], [640, 439, 769, 469], [786, 436, 1025, 469], [1038, 447, 1064, 456], [1079, 436, 1317, 469], [1329, 439, 1350, 462], [1365, 433, 1402, 470], [1415, 451, 1439, 452], [1454, 436, 1478, 468], [1488, 444, 1556, 465], [1571, 451, 1595, 452], [1609, 433, 1640, 470], [1657, 442, 1691, 461], [1708, 433, 1779, 470], [1794, 451, 1818, 452], [1832, 433, 1889, 470], [394, 484, 416, 507], [495, 481, 579, 508], [590, 482, 829, 515], [840, 482, 863, 507], [874, 485, 921, 507], [932, 490, 1051, 507], [1062, 482, 1100, 508], [394, 531, 409, 554], [550, 529, 630, 562], [631, 529, 701, 554], [712, 529, 763, 554], [773, 532, 827, 554], [840, 532, 974, 562], [986, 528, 1018, 554], [1028, 529, 1266, 562], [394, 578, 408, 600], [495, 575, 551, 601], [563, 574, 646, 601], [395, 625, 408, 647], [495, 622, 558, 647], [569, 630, 628, 647], [640, 625, 769, 655], [786, 622, 1026, 647], [1040, 633, 1066, 642], [1080, 622, 1320, 647], [1332, 625, 1353, 648], [1368, 619, 1405, 656], [1418, 637, 1442, 638], [1457, 622, 1481, 654], [1491, 630, 1559, 651], [1573, 625, 1599, 650], [1612, 619, 1643, 656], [1660, 628, 1694, 647], [1711, 619, 1782, 656], [1796, 625, 1822, 650], [1835, 619, 1892, 656], [394, 672, 416, 695], [495, 668, 579, 695], [590, 669, 830, 694], [842, 669, 864, 694], [876, 672, 922, 694], [933, 677, 1037, 694], [1048, 669, 1085, 695], [381, 718, 416, 740], [550, 715, 630, 748], [631, 715, 701, 740], [712, 715, 763, 740], [773, 718, 827, 740], [840, 718, 974, 748], [986, 714, 1018, 740], [1028, 715, 1268, 740], [381, 765, 416, 787], [495, 762, 551, 788], [563, 761, 646, 788], [381, 811, 416, 833], [495, 807, 519, 833], [528, 807, 752, 841], [764, 811, 885, 841], [896, 808, 923, 833], [935, 808, 1186, 841], [1200, 813, 1224, 835], [1238, 808, 1464, 841], [1475, 811, 1597, 841], [1608, 808, 1635, 833], [1647, 808, 1899, 840], [1911, 808, 1980, 834], [381, 858, 416, 880], [552, 854, 642, 880], [655, 866, 674, 876], [685, 854, 818, 880], [828, 855, 905, 888], [915, 855, 1005, 880], [1016, 855, 1101, 880], [1110, 855, 1154, 880], [1165, 855, 1297, 888], [1308, 863, 1338, 880], [1348, 855, 1392, 880], [1403, 855, 1537, 880], [1547, 855, 1664, 880], [1675, 855, 1719, 880], [1730, 854, 1793, 880], [381, 904, 416, 926], [551, 900, 575, 926], [584, 900, 674, 926], [690, 905, 709, 928], [725, 901, 965, 926], [976, 901, 1045, 927], [381, 950, 416, 973], [607, 948, 713, 973], [714, 947, 873, 973], [885, 951, 1007, 981], [1017, 947, 1049, 973], [1058, 948, 1102, 973], [1113, 948, 1254, 978], [1266, 948, 1300, 973], [1302, 948, 1349, 973], [1360, 951, 1387, 973], [1398, 948, 1442, 973], [1453, 948, 1605, 981], [1617, 948, 1735, 973], [1747, 956, 1777, 973], [381, 997, 416, 1020], [606, 995, 732, 1028], [734, 995, 776, 1020], [787, 995, 967, 1020], [978, 1003, 1006, 1020], [1018, 1003, 1034, 1020], [1045, 995, 1155, 1028], [1165, 995, 1220, 1020], [1231, 994, 1302, 1020], [1314, 994, 1404, 1020], [1416, 998, 1444, 1020], [1455, 995, 1487, 1020], [1499, 995, 1550, 1020], [1559, 995, 1643, 1028], [381, 1044, 416, 1066], [551, 1041, 607, 1067], [619, 1040, 643, 1066], [381, 1091, 416, 1113], [551, 1087, 575, 1113], [584, 1087, 674, 1113], [690, 1092, 709, 1115], [725, 1088, 964, 1121], [975, 1088, 1044, 1114], [381, 1137, 416, 1160], [607, 1134, 713, 1159], [714, 1133, 873, 1159], [885, 1137, 1007, 1167], [1017, 1133, 1049, 1159], [1058, 1134, 1102, 1159], [1113, 1134, 1252, 1167], [1264, 1134, 1317, 1159], [1328, 1134, 1347, 1159], [1358, 1137, 1385, 1159], [1396, 1134, 1440, 1159], [1451, 1134, 1603, 1167], [1615, 1134, 1733, 1159], [1745, 1142, 1775, 1159], [378, 1184, 416, 1206], [606, 1181, 734, 1206], [736, 1181, 778, 1206], [789, 1181, 969, 1206], [980, 1189, 1008, 1206], [0, 0, 2550, 3300], [1020, 1181, 1157, 1214], [1167, 1181, 1222, 1206], [1233, 1180, 1304, 1206], [1316, 1180, 1385, 1206], [1389, 1180, 1446, 1206], [1457, 1181, 1489, 1206], [1501, 1181, 1552, 1206], [1562, 1181, 1645, 1214], [378, 1230, 416, 1252], [551, 1227, 607, 1253], [619, 1226, 643, 1252], [378, 1277, 416, 1299], [495, 1274, 551, 1300], [563, 1273, 587, 1299], [378, 1324, 416, 1346], [495, 1321, 582, 1349], [378, 1370, 416, 1392], [439, 1367, 495, 1393], [506, 1366, 590, 1393], [378, 1416, 416, 1439], [439, 1414, 502, 1439], [513, 1414, 563, 1439], [575, 1417, 696, 1447], [707, 1413, 779, 1439], [789, 1414, 874, 1439], [884, 1414, 928, 1439], [939, 1414, 1070, 1447], [1081, 1422, 1111, 1439], [1121, 1414, 1244, 1439], [1246, 1417, 1293, 1439], [1304, 1414, 1348, 1439], [1360, 1414, 1478, 1439], [1490, 1422, 1520, 1439], [438, 1562, 461, 1589], [472, 1561, 600, 1589], [614, 1565, 643, 1589], [656, 1561, 791, 1589], [802, 1561, 872, 1589], [884, 1565, 913, 1589], [926, 1561, 988, 1589], [1000, 1561, 1048, 1589], [1061, 1565, 1121, 1589], [1134, 1561, 1233, 1598], [1250, 1561, 1311, 1589], [1324, 1565, 1403, 1589], [1414, 1561, 1525, 1598], [1536, 1561, 1610, 1589], [1623, 1561, 1771, 1598], [1784, 1570, 1867, 1589], [1869, 1565, 1924, 1589], [1936, 1561, 1973, 1589], [1986, 1561, 2034, 1589], [2046, 1570, 2104, 1589], [2116, 1561, 2173, 1589], [376, 1616, 406, 1640], [418, 1612, 530, 1640], [544, 1612, 602, 1640], [614, 1613, 717, 1640], [733, 1612, 806, 1646], [822, 1612, 893, 1640], [908, 1621, 1036, 1649], [1038, 1612, 1154, 1640], [1168, 1612, 1248, 1640], [1259, 1612, 1309, 1640], [1321, 1612, 1402, 1640], [1413, 1612, 1498, 1649], [1511, 1622, 1543, 1647], [1560, 1625, 1588, 1634], [1604, 1612, 1631, 1646], [1646, 1612, 1703, 1640], [1715, 1612, 1942, 1649], [1955, 1616, 2111, 1649], [2125, 1612, 2174, 1640], [375, 1668, 508, 1699], [519, 1672, 631, 1691], [642, 1663, 794, 1690], [806, 1662, 841, 1690], [851, 1662, 900, 1690], [911, 1671, 1006, 1699], [1016, 1662, 1134, 1690], [1148, 1671, 1188, 1690], [1200, 1662, 1250, 1690], [1262, 1661, 1282, 1691], [1296, 1662, 1375, 1696], [1390, 1671, 1420, 1690], [1434, 1662, 1504, 1690], [1517, 1671, 1547, 1690], [1561, 1662, 1610, 1690], [1622, 1662, 1758, 1691], [1769, 1672, 1903, 1691], [1916, 1663, 2055, 1699], [2058, 1662, 2115, 1690], [2125, 1662, 2174, 1690], [376, 1713, 468, 1741], [479, 1713, 597, 1741], [610, 1722, 650, 1741], [662, 1713, 712, 1741], [725, 1712, 745, 1742], [758, 1713, 837, 1741], [853, 1713, 951, 1741], [962, 1713, 1035, 1741], [1048, 1722, 1138, 1741], [1141, 1713, 1314, 1747], [1328, 1713, 1378, 1741], [1390, 1713, 1535, 1750], [1545, 1713, 1630, 1750], [1642, 1713, 1743, 1741], [1754, 1713, 1849, 1741], [1860, 1713, 1909, 1741], [1921, 1713, 2056, 1750], [2058, 1717, 2113, 1741], [2125, 1713, 2174, 1741], [376, 1764, 521, 1792], [533, 1764, 640, 1792], [642, 1764, 720, 1792], [733, 1764, 801, 1792], [813, 1764, 838, 1792], [850, 1764, 924, 1792], [936, 1768, 965, 1792], [978, 1764, 1020, 1792], [1033, 1773, 1049, 1792], [1060, 1764, 1122, 1792], [1135, 1768, 1268, 1801], [1280, 1764, 1315, 1792], [1324, 1764, 1372, 1792], [1384, 1768, 1444, 1792], [1457, 1764, 1555, 1801], [1572, 1764, 1633, 1792], [1645, 1764, 1807, 1801], [1819, 1764, 1843, 1792], [1857, 1764, 1926, 1792], [1936, 1764, 2074, 1792], [2087, 1768, 2114, 1792], [2126, 1764, 2173, 1792], [376, 1815, 434, 1843], [447, 1815, 483, 1843], [492, 1815, 542, 1843], [554, 1815, 712, 1843], [725, 1819, 871, 1852], [886, 1815, 944, 1843], [956, 1815, 1081, 1843], [1092, 1815, 1169, 1843], [1182, 1815, 1222, 1843], [1234, 1819, 1296, 1843], [1308, 1815, 1401, 1852], [1415, 1819, 1568, 1852], [1580, 1815, 1657, 1843], [1668, 1815, 1747, 1843], [1759, 1815, 1912, 1843], [1928, 1815, 2128, 1843], [2140, 1815, 2176, 1843], [376, 1866, 432, 1894], [446, 1866, 569, 1894], [581, 1866, 605, 1894], [618, 1866, 776, 1903], [789, 1875, 820, 1894], [833, 1866, 1005, 1903], [1021, 1866, 1044, 1900], [1058, 1866, 1149, 1894], [1162, 1875, 1198, 1894], [1210, 1866, 1349, 1903], [1361, 1866, 1396, 1894], [1406, 1866, 1462, 1894], [1475, 1866, 1641, 1903], [1652, 1866, 1677, 1894], [1691, 1866, 1796, 1894], [1808, 1866, 1839, 1894], [1851, 1866, 1958, 1903], [1970, 1866, 1996, 1894], [438, 1918, 463, 1945], [477, 1917, 502, 1945], [518, 1917, 682, 1954], [695, 1921, 726, 1945], [741, 1921, 812, 1945], [827, 1917, 890, 1945], [904, 1917, 989, 1945], [1003, 1926, 1051, 1946], [1065, 1917, 1142, 1945], [1158, 1926, 1175, 1945], [1189, 1917, 1319, 1945], [1333, 1917, 1447, 1945], [1448, 1917, 1512, 1945], [1523, 1917, 1625, 1954], [1640, 1917, 1672, 1945], [1686, 1917, 1736, 1945], [1751, 1917, 1831, 1951], [1848, 1917, 1898, 1945], [1913, 1921, 2043, 1954], [2057, 1926, 2174, 1945], [376, 1967, 527, 1995], [539, 1976, 596, 1995], [607, 1967, 646, 1995], [658, 1967, 822, 2004], [836, 1976, 867, 1995], [881, 1976, 898, 1995], [908, 1967, 1073, 2004], [1085, 1967, 1181, 1995], [1192, 1967, 1332, 1995], [1343, 1967, 1417, 1996], [1430, 1971, 1583, 2004], [1596, 1967, 1632, 1995], [1642, 1967, 1884, 2004], [1897, 1967, 2068, 2004], [2082, 1967, 2177, 2004], [374, 2018, 466, 2047], [480, 2018, 530, 2046], [545, 2018, 682, 2046], [695, 2027, 831, 2046], [845, 2018, 995, 2055], [1008, 2018, 1034, 2046], [1049, 2018, 1174, 2046], [1187, 2018, 1352, 2055], [1366, 2018, 1461, 2046], [1475, 2018, 1614, 2046], [1628, 2018, 1702, 2047], [1716, 2022, 1870, 2055], [1885, 2018, 1921, 2046], [1932, 2018, 2175, 2055], [376, 2069, 554, 2106], [574, 2069, 669, 2106], [702, 2069, 840, 2097], [856, 2069, 990, 2097], [1007, 2069, 1069, 2097], [1086, 2069, 1112, 2097], [1130, 2069, 1193, 2097], [1210, 2069, 1286, 2097], [1304, 2073, 1443, 2106], [1460, 2069, 1492, 2097], [1509, 2069, 1559, 2097], [1576, 2069, 1648, 2097], [1664, 2069, 1868, 2106], [1884, 2069, 1989, 2097], [2007, 2073, 2105, 2097], [2124, 2069, 2174, 2097], [376, 2120, 686, 2157], [697, 2120, 815, 2157], [827, 2129, 904, 2148], [916, 2120, 947, 2148], [959, 2120, 1008, 2148], [1021, 2120, 1190, 2157], [1205, 2120, 1262, 2148], [1274, 2120, 1300, 2148], [1313, 2120, 1378, 2148], [1389, 2120, 1533, 2148], [1545, 2120, 1663, 2157], [1675, 2129, 1761, 2148], [1778, 2120, 1850, 2148], [1862, 2120, 1955, 2148], [1968, 2120, 2017, 2148], [2029, 2124, 2130, 2148], [2141, 2120, 2177, 2148], [376, 2171, 423, 2199], [436, 2171, 519, 2199], [530, 2171, 616, 2208], [629, 2171, 659, 2199], [671, 2171, 719, 2199], [732, 2171, 897, 2208], [911, 2171, 968, 2199], [980, 2171, 1010, 2199], [1022, 2171, 1081, 2199], [1094, 2180, 1130, 2199], [1143, 2171, 1271, 2208], [1284, 2171, 1319, 2199], [1328, 2171, 1376, 2199], [1388, 2171, 1620, 2208], [1632, 2171, 1813, 2208], [1826, 2171, 1861, 2199], [1870, 2171, 1926, 2199], [1938, 2171, 2081, 2200], [2092, 2171, 2173, 2199], [376, 2225, 406, 2249], [419, 2230, 456, 2249], [468, 2221, 580, 2250], [593, 2218, 677, 2259], [692, 2221, 881, 2258], [884, 2221, 988, 2255], [438, 2273, 472, 2300], [486, 2272, 563, 2309], [577, 2272, 613, 2300], [624, 2272, 693, 2306], [708, 2272, 830, 2301], [846, 2272, 907, 2306], [924, 2276, 1011, 2300], [1025, 2272, 1088, 2300], [1101, 2272, 1301, 2309], [1315, 2272, 1365, 2300], [1379, 2272, 1531, 2300], [1545, 2272, 1603, 2300], [1617, 2272, 1767, 2309], [1780, 2272, 1935, 2300], [1949, 2272, 1981, 2300], [1994, 2281, 2113, 2300], [2114, 2272, 2173, 2309], [376, 2323, 546, 2357], [561, 2323, 616, 2351], [629, 2323, 720, 2352], [735, 2332, 751, 2351], [762, 2323, 927, 2360], [941, 2323, 1087, 2360], [1100, 2332, 1130, 2351], [1143, 2323, 1315, 2360], [1328, 2323, 1449, 2351], [1460, 2327, 1490, 2351], [1502, 2323, 1547, 2351], [1559, 2323, 1707, 2360], [1720, 2323, 1848, 2351], [1865, 2324, 1905, 2351], [1917, 2323, 1973, 2351], [1987, 2323, 2174, 2351], [374, 2383, 419, 2403], [432, 2374, 518, 2402], [530, 2378, 588, 2403], [601, 2374, 714, 2402], [732, 2374, 874, 2403], [887, 2374, 1008, 2402], [1019, 2383, 1074, 2402], [1085, 2374, 1123, 2402], [1135, 2374, 1310, 2411], [1323, 2383, 1353, 2402], [1367, 2383, 1383, 2402], [1395, 2374, 1554, 2402], [1566, 2374, 1683, 2403], [1695, 2374, 1731, 2402], [1739, 2374, 1787, 2402], [1800, 2374, 1965, 2411], [1977, 2374, 2098, 2402], [2111, 2374, 2173, 2409], [377, 2425, 497, 2454], [508, 2425, 581, 2460], [596, 2425, 652, 2453], [664, 2425, 724, 2453], [736, 2434, 752, 2453], [764, 2425, 875, 2453], [887, 2425, 1142, 2462], [1154, 2425, 1189, 2453], [1198, 2425, 1246, 2453], [1259, 2425, 1424, 2462], [1437, 2425, 1558, 2453], [1569, 2434, 1625, 2453], [1635, 2425, 1673, 2453], [1684, 2425, 1787, 2462], [1800, 2425, 1989, 2462], [2001, 2425, 2032, 2453], [2042, 2425, 2179, 2462], [376, 2535, 455, 2564], [500, 2535, 648, 2565], [660, 2535, 937, 2573], [950, 2535, 985, 2565], [995, 2535, 1198, 2573], [374, 2616, 427, 2643], [441, 2624, 574, 2652], [588, 2624, 658, 2644], [674, 2624, 712, 2643], [725, 2615, 862, 2643], [876, 2615, 1140, 2652], [1154, 2615, 1190, 2643], [1202, 2615, 1252, 2643], [1267, 2615, 1438, 2652], [1453, 2615, 1587, 2643], [1611, 2615, 1675, 2643], [1689, 2615, 1772, 2643], [1786, 2615, 1836, 2643], [1839, 2615, 1895, 2643], [1910, 2619, 1941, 2643], [1956, 2615, 2104, 2652], [2118, 2624, 2174, 2643], [376, 2666, 600, 2694], [612, 2675, 725, 2703], [741, 2666, 803, 2700], [818, 2670, 849, 2694], [862, 2670, 940, 2694], [952, 2666, 1001, 2694], [1013, 2666, 1160, 2703], [1173, 2666, 1230, 2694], [1242, 2666, 1391, 2694], [1403, 2666, 1606, 2694], [1623, 2666, 1800, 2700], [1815, 2666, 1854, 2694], [1866, 2666, 2174, 2703], [376, 2717, 549, 2754], [564, 2717, 639, 2745], [652, 2726, 684, 2745], [699, 2717, 872, 2754], [886, 2726, 903, 2745], [916, 2721, 1055, 2754], [1066, 2726, 1101, 2745], [1112, 2717, 1272, 2754], [1286, 2721, 1440, 2754], [1453, 2717, 1535, 2745], [1547, 2717, 1642, 2745], [1654, 2717, 1704, 2745], [1716, 2717, 1883, 2754], [1896, 2726, 1931, 2745], [1943, 2717, 1993, 2745], [2005, 2717, 2064, 2745], [2077, 2717, 2114, 2745], [2124, 2717, 2174, 2745], [376, 2767, 521, 2804], [533, 2776, 589, 2795], [600, 2767, 639, 2795], [650, 2767, 842, 2804], [854, 2767, 885, 2795], [897, 2771, 1033, 2795], [1045, 2767, 1125, 2795], [1142, 2768, 1222, 2795], [1232, 2767, 1372, 2796], [1384, 2767, 1444, 2795], [1455, 2767, 1542, 2795], [1554, 2767, 1778, 2795], [1790, 2776, 1888, 2804], [1899, 2767, 2172, 2804], [608, 1246, 677, 1328], [1003, 1246, 1397, 1328], [1847, 1279, 1916, 1328], [376, 1440, 483, 1477], [495, 1440, 523, 1468], [540, 1443, 673, 1476], [684, 1442, 716, 1468], [725, 1443, 769, 1468], [780, 1443, 919, 1468], [930, 1442, 962, 1468], [971, 1443, 1016, 1468], [1027, 1446, 1082, 1468], [1094, 1443, 1177, 1476], [1188, 1443, 1307, 1468], [1322, 1443, 1379, 1468], [1391, 1443, 1512, 1468], [1523, 1451, 1643, 1468], [1654, 1443, 1776, 1476], [1778, 1443, 1885, 1475], [1897, 1443, 1950, 1468], [1961, 1443, 2059, 1476], [2070, 1451, 2175, 1468], [376, 1489, 507, 1514], [518, 1489, 619, 1522], [632, 1497, 674, 1514], [685, 1489, 800, 1522], [811, 1497, 853, 1514], [865, 1497, 942, 1522], [955, 1493, 1019, 1522], [1034, 1489, 1069, 1514], [1080, 1493, 1136, 1522], [1149, 1489, 1187, 1521], [1199, 1489, 1242, 1514], [1253, 1488, 1394, 1522], [1405, 1489, 1427, 1514], [1439, 1488, 1591, 1514], [1607, 1489, 1683, 1522], [1695, 1489, 1734, 1521], [1746, 1493, 1772, 1514], [1785, 1489, 1823, 1521], [1837, 1488, 2012, 1522], [2024, 1497, 2119, 1522], [2122, 1493, 2173, 1514], [375, 1536, 475, 1569], [486, 1536, 620, 1569], [629, 1536, 682, 1561], [693, 1536, 829, 1561], [839, 1536, 954, 1561], [963, 1536, 1116, 1569], [1127, 1536, 1265, 1569], [1276, 1536, 1401, 1561], [1412, 1536, 1494, 1561], [1508, 1536, 1581, 1561], [1591, 1536, 1654, 1561], [1665, 1536, 1747, 1561], [1759, 1536, 1803, 1561], [1814, 1544, 1935, 1561], [1946, 1536, 2080, 1569], [2089, 1536, 2173, 1569], [376, 1582, 473, 1615], [485, 1586, 618, 1615], [629, 1582, 739, 1607], [749, 1582, 829, 1612], [841, 1582, 883, 1607], [895, 1590, 996, 1607], [1007, 1582, 1138, 1607], [1148, 1586, 1218, 1607], [1227, 1590, 1334, 1607], [1345, 1582, 1397, 1607], [1407, 1590, 1496, 1615], [1507, 1582, 1620, 1615], [1632, 1586, 1765, 1615], [1776, 1582, 1840, 1607], [1850, 1590, 1908, 1607], [1919, 1590, 1984, 1607], [1995, 1586, 2021, 1607], [2032, 1582, 2149, 1607], [2159, 1590, 2174, 1607], [376, 1637, 477, 1654], [488, 1629, 608, 1654], [619, 1629, 689, 1654], [699, 1629, 742, 1654], [753, 1629, 839, 1662], [850, 1633, 876, 1654], [887, 1629, 930, 1654], [941, 1637, 999, 1654], [1009, 1629, 1106, 1662], [1120, 1629, 1156, 1654], [1167, 1633, 1223, 1662], [1235, 1629, 1274, 1661], [1286, 1629, 1328, 1654], [1340, 1629, 1391, 1654], [1402, 1629, 1433, 1654], [1441, 1629, 1484, 1654], [1495, 1629, 1556, 1654], [1567, 1629, 1590, 1654], [1600, 1629, 1721, 1659], [1732, 1629, 1778, 1654], [1788, 1629, 1831, 1654], [1842, 1629, 1973, 1654], [1983, 1629, 2035, 1654], [2045, 1629, 2174, 1662], [377, 1675, 466, 1708], [477, 1675, 593, 1708], [606, 1674, 658, 1700], [670, 1683, 681, 1700], [683, 1675, 730, 1700], [741, 1675, 763, 1700], [775, 1683, 917, 1708], [928, 1678, 955, 1700], [966, 1674, 1048, 1700], [1058, 1675, 1102, 1700], [1114, 1683, 1224, 1708], [1225, 1678, 1270, 1700], [1281, 1675, 1325, 1700], [1336, 1675, 1468, 1700], [1478, 1675, 1554, 1708], [1564, 1675, 1653, 1700], [1664, 1675, 1708, 1700], [1719, 1675, 1993, 1708], [2004, 1674, 2119, 1700], [2130, 1675, 2174, 1700], [376, 1722, 447, 1747], [466, 1722, 548, 1747], [560, 1722, 604, 1747], [616, 1722, 753, 1747], [764, 1722, 895, 1755], [907, 1722, 985, 1755], [996, 1722, 1019, 1747], [1032, 1722, 1059, 1747], [1072, 1722, 1116, 1747], [1128, 1730, 1250, 1747], [1262, 1721, 1385, 1755], [1387, 1722, 1452, 1747], [1465, 1722, 1589, 1747], [1601, 1726, 1726, 1755], [1736, 1722, 1759, 1747], [1771, 1722, 1903, 1747], [1914, 1722, 1968, 1747], [1978, 1722, 2078, 1755], [2089, 1722, 2117, 1747], [2129, 1722, 2174, 1747], [377, 1769, 504, 1799], [517, 1769, 599, 1794], [610, 1769, 655, 1794], [666, 1777, 771, 1794], [782, 1769, 906, 1794], [908, 1769, 951, 1794], [962, 1769, 1081, 1802], [1092, 1777, 1108, 1794], [1110, 1777, 1149, 1794], [1160, 1769, 1273, 1802], [1283, 1769, 1338, 1794], [1349, 1768, 1421, 1794], [1432, 1769, 1476, 1794], [1488, 1769, 1612, 1794], [1622, 1769, 1785, 1802], [1795, 1772, 1822, 1794], [1834, 1769, 1878, 1794], [1889, 1769, 1941, 1794], [1951, 1769, 2081, 1802], [2092, 1769, 2177, 1802], [375, 1815, 507, 1848], [519, 1815, 547, 1840], [561, 1814, 610, 1847], [629, 1815, 686, 1840], [699, 1815, 846, 1848], [857, 1815, 951, 1840], [963, 1815, 1026, 1840], [1039, 1815, 1168, 1840], [1181, 1815, 1282, 1848], [1296, 1819, 1442, 1848], [1456, 1815, 1504, 1840], [1516, 1815, 1592, 1840], [1604, 1815, 1649, 1840], [1661, 1814, 1932, 1848], [1934, 1815, 2034, 1848], [2037, 1823, 2090, 1840], [2091, 1815, 2174, 1840], [376, 1862, 509, 1895], [522, 1862, 567, 1887], [578, 1862, 730, 1895], [742, 1862, 775, 1887], [784, 1861, 871, 1895], [884, 1866, 1021, 1895], [1034, 1866, 1062, 1887], [1074, 1862, 1119, 1887], [1132, 1862, 1252, 1887], [1264, 1862, 1286, 1887], [1298, 1862, 1427, 1895], [1439, 1862, 1556, 1895], [1568, 1866, 1641, 1895], [1655, 1861, 1704, 1894], [1719, 1862, 1760, 1894], [1773, 1862, 1827, 1887], [1839, 1862, 1888, 1894], [1905, 1862, 2012, 1895], [2024, 1866, 2051, 1887], [2063, 1866, 2121, 1895], [2135, 1862, 2175, 1894], [376, 1908, 420, 1933], [431, 1908, 521, 1941], [533, 1916, 577, 1933], [588, 1916, 624, 1933], [635, 1908, 730, 1941], [740, 1908, 863, 1941], [874, 1908, 926, 1933], [937, 1908, 981, 1933], [992, 1908, 1102, 1933], [1113, 1908, 1205, 1933], [1216, 1908, 1343, 1933], [1354, 1908, 1454, 1941], [1465, 1907, 1528, 1933], [1540, 1911, 1683, 1941], [1695, 1907, 1741, 1933], [1753, 1908, 1827, 1933], [1838, 1908, 1882, 1933], [1893, 1908, 1945, 1933], [1957, 1907, 1988, 1933], [1997, 1908, 2041, 1933], [2052, 1907, 2115, 1933], [2125, 1908, 2173, 1933], [376, 1955, 484, 1988], [494, 1954, 564, 1980], [574, 1955, 689, 1980], [700, 1955, 744, 1980], [755, 1955, 899, 1988], [911, 1958, 993, 1988], [375, 2093, 428, 2112], [441, 2084, 554, 2121], [566, 2084, 645, 2112], [648, 2084, 752, 2118], [766, 2084, 905, 2121], [919, 2093, 1016, 2121], [1029, 2093, 1063, 2112], [1074, 2084, 1199, 2112], [1209, 2084, 1332, 2112], [1349, 2084, 1431, 2112], [1445, 2084, 1626, 2121], [1639, 2084, 1754, 2121], [1767, 2084, 1969, 2121], [1980, 2084, 2173, 2121], [376, 2144, 514, 2172], [527, 2135, 629, 2163], [632, 2139, 687, 2163], [700, 2144, 786, 2163], [799, 2135, 835, 2163], [844, 2135, 894, 2163], [907, 2135, 1000, 2163], [1011, 2144, 1045, 2163], [1056, 2144, 1181, 2163], [1193, 2135, 1377, 2172], [1394, 2136, 1454, 2163], [1465, 2135, 1497, 2163], [1509, 2135, 1559, 2163], [1571, 2135, 1743, 2172], [1757, 2135, 1927, 2172], [1941, 2135, 1991, 2163], [2004, 2135, 2175, 2163], [376, 2186, 504, 2214], [517, 2186, 553, 2214], [566, 2190, 719, 2223], [734, 2186, 770, 2214], [781, 2186, 831, 2214], [845, 2186, 1147, 2223], [1149, 2186, 1198, 2214], [1209, 2186, 1274, 2223], [1287, 2186, 1336, 2214], [1351, 2186, 1415, 2214], [1429, 2186, 1465, 2214], [1476, 2186, 1526, 2214], [1540, 2186, 1626, 2223], [1640, 2186, 1739, 2223], [1754, 2186, 1813, 2221], [1830, 2186, 1888, 2214], [1903, 2186, 1968, 2214], [1983, 2186, 2033, 2214], [2047, 2186, 2175, 2214], [376, 2237, 412, 2265], [424, 2241, 577, 2274], [592, 2241, 622, 2265], [635, 2237, 675, 2265], [688, 2237, 820, 2265], [834, 2237, 866, 2265], [879, 2237, 929, 2265], [943, 2246, 1042, 2274], [1056, 2237, 1241, 2274], [1254, 2237, 1304, 2265], [1318, 2237, 1481, 2274], [1494, 2237, 1558, 2266], [1571, 2237, 1610, 2265], [1624, 2247, 1655, 2265], [1677, 2237, 1806, 2274], [1819, 2246, 1875, 2265], [1889, 2237, 1925, 2265], [1936, 2237, 2021, 2265], [2035, 2237, 2112, 2265], [2126, 2246, 2174, 2266], [376, 2288, 552, 2325], [565, 2297, 581, 2316], [593, 2288, 775, 2325], [787, 2297, 885, 2325], [896, 2288, 990, 2316], [1002, 2297, 1042, 2316], [1055, 2297, 1071, 2316], [1083, 2288, 1247, 2325], [1250, 2297, 1359, 2325], [1371, 2288, 1407, 2316], [1416, 2288, 1497, 2316], [1509, 2288, 1611, 2325], [1624, 2298, 1655, 2316], [1672, 2289, 1747, 2316], [1761, 2292, 1910, 2325], [1925, 2297, 1973, 2316], [1986, 2288, 2083, 2316], [2095, 2288, 2174, 2316], [376, 2339, 425, 2367], [442, 2343, 513, 2367], [528, 2339, 564, 2367], [577, 2339, 627, 2367], [643, 2348, 727, 2376], [743, 2348, 792, 2373], [812, 2339, 870, 2367], [887, 2348, 904, 2367], [918, 2339, 1029, 2376], [1045, 2339, 1081, 2367], [1093, 2339, 1228, 2376], [1245, 2348, 1294, 2367], [1310, 2339, 1496, 2367], [1512, 2343, 1542, 2367], [1557, 2339, 1636, 2376], [1652, 2339, 1735, 2367], [1750, 2339, 1786, 2367], [1799, 2339, 1849, 2367], [1865, 2339, 1930, 2367], [1945, 2339, 2003, 2367], [2019, 2339, 2077, 2367], [2092, 2339, 2173, 2367], [377, 2393, 524, 2426], [537, 2389, 568, 2417], [580, 2389, 627, 2417], [641, 2398, 728, 2426], [742, 2389, 831, 2417], [843, 2389, 873, 2417], [885, 2389, 933, 2417], [945, 2398, 1011, 2426], [1023, 2398, 1041, 2417], [1044, 2389, 1085, 2417], [1096, 2389, 1221, 2417], [1231, 2389, 1333, 2417], [1350, 2389, 1420, 2417], [1433, 2389, 1697, 2426], [1710, 2389, 1854, 2423], [1867, 2389, 1939, 2417], [1953, 2393, 2004, 2417], [2014, 2389, 2129, 2426], [2141, 2389, 2177, 2417], [376, 2440, 423, 2468], [434, 2440, 519, 2468], [532, 2440, 655, 2468], [666, 2440, 753, 2477], [770, 2440, 899, 2474], [912, 2440, 968, 2468], [981, 2440, 1200, 2468], [1213, 2449, 1308, 2477], [1319, 2440, 1449, 2477], [1463, 2449, 1479, 2468], [1491, 2440, 1585, 2477], [1597, 2449, 1731, 2477], [1744, 2440, 1902, 2468], [1915, 2444, 1942, 2468], [1953, 2440, 2001, 2468], [2012, 2440, 2173, 2477], [376, 2491, 411, 2519], [420, 2491, 468, 2519], [481, 2491, 647, 2528], [660, 2491, 788, 2528], [800, 2491, 848, 2519], [860, 2495, 919, 2519], [930, 2491, 966, 2519], [975, 2500, 1071, 2528], [1083, 2491, 1251, 2528], [1264, 2491, 1326, 2519], [1338, 2491, 1417, 2519], [1429, 2500, 1563, 2528], [1576, 2500, 1772, 2528], [1774, 2495, 1833, 2519], [1834, 2491, 1905, 2519], [1915, 2491, 1967, 2519], [1978, 2491, 2026, 2519], [2040, 2491, 2174, 2528], [375, 2542, 492, 2579], [503, 2551, 537, 2570], [548, 2542, 638, 2570], [651, 2542, 779, 2579], [438, 2594, 475, 2621], [474, 2593, 566, 2621], [581, 2597, 659, 2621], [671, 2593, 718, 2621], [729, 2593, 804, 2621], [817, 2602, 940, 2630], [942, 2593, 1013, 2621], [1025, 2593, 1182, 2630], [1195, 2593, 1307, 2622], [1325, 2603, 1346, 2621], [1359, 2593, 1461, 2630], [1473, 2593, 1509, 2621], [1518, 2593, 1567, 2621], [1580, 2597, 1724, 2630], [1737, 2603, 1756, 2630], [1770, 2593, 1872, 2630], [1885, 2593, 1942, 2621], [1955, 2593, 2048, 2630], [2066, 2593, 2172, 2630], [376, 2643, 474, 2680], [486, 2652, 571, 2671], [584, 2652, 616, 2671], [628, 2643, 785, 2671], [787, 2643, 900, 2680], [912, 2643, 962, 2671], [975, 2643, 1061, 2671], [1073, 2647, 1133, 2672], [1146, 2643, 1268, 2677], [1282, 2643, 1335, 2671], [1347, 2643, 1438, 2680], [1450, 2643, 1500, 2671], [1512, 2643, 1626, 2671], [1627, 2643, 1689, 2671], [1699, 2643, 1788, 2671], [1801, 2643, 1851, 2671], [1865, 2643, 2027, 2680], [2038, 2643, 2173, 2680], [376, 2694, 554, 2731], [567, 2694, 670, 2731], [681, 2694, 821, 2723], [835, 2698, 973, 2731], [975, 2694, 1082, 2731], [1096, 2698, 1127, 2722], [1139, 2703, 1280, 2731], [1292, 2694, 1642, 2731], [1656, 2694, 1678, 2722], [1688, 2703, 1764, 2731], [1777, 2694, 1826, 2722], [1836, 2698, 1867, 2722], [1878, 2698, 2077, 2731], [2089, 2694, 2174, 2722], [374, 2745, 487, 2773], [503, 2745, 574, 2773], [587, 2745, 648, 2773], [660, 2745, 795, 2782], [807, 2745, 879, 2773], [891, 2745, 976, 2773], [987, 2745, 1168, 2773], [1181, 2745, 1238, 2773], [1251, 2745, 1328, 2773], [1339, 2745, 1548, 2782], [1560, 2745, 1666, 2773], [1678, 2745, 1827, 2782], [1840, 2754, 1895, 2773], [1906, 2745, 2175, 2782], [376, 2796, 459, 2824], [471, 2805, 527, 2824], [538, 2796, 577, 2824], [588, 2796, 717, 2825], [718, 2796, 780, 2824], [792, 2796, 841, 2824], [853, 2796, 911, 2824], [913, 2796, 1026, 2824], [1036, 2796, 1903, 2832], [376, 237, 436, 272], [488, 237, 716, 272], [730, 237, 955, 281], [969, 237, 1128, 272], [1142, 237, 1203, 272], [1218, 228, 1314, 284], [374, 323, 427, 350], [439, 331, 479, 350], [480, 331, 628, 359], [630, 326, 670, 350], [681, 322, 804, 356], [818, 322, 982, 350], [994, 322, 1115, 350], [1127, 331, 1146, 350], [1148, 322, 1222, 350], [1235, 322, 1405, 359], [1418, 322, 1551, 350], [1568, 322, 1779, 359], [1793, 322, 1843, 350], [1854, 322, 2000, 359], [2013, 322, 2175, 359], [376, 377, 455, 401], [468, 377, 519, 401], [531, 377, 561, 401], [573, 373, 610, 401], [623, 373, 791, 410], [803, 377, 832, 401], [845, 373, 893, 401], [906, 373, 964, 401], [976, 373, 1134, 410], [1146, 373, 1182, 401], [1191, 373, 1308, 402], [1323, 373, 1396, 407], [1410, 373, 1523, 410], [1535, 382, 1603, 401], [1615, 373, 1686, 401], [1699, 382, 1715, 401], [1727, 373, 1838, 401], [1849, 373, 2070, 410], [2081, 373, 2174, 401], [376, 433, 415, 452], [427, 424, 620, 461], [438, 475, 502, 503], [516, 475, 575, 512], [591, 475, 661, 503], [676, 475, 702, 503], [718, 479, 749, 503], [764, 475, 849, 503], [865, 475, 960, 503], [976, 475, 1236, 512], [1253, 479, 1283, 503], [1299, 475, 1349, 503], [1365, 479, 1496, 512], [1511, 484, 1628, 503], [1644, 475, 1796, 503], [1812, 475, 1870, 503], [1887, 475, 2024, 503], [2038, 484, 2174, 503], [376, 525, 532, 562], [545, 525, 715, 562], [728, 525, 847, 562], [859, 525, 909, 553], [922, 534, 988, 553], [989, 525, 1126, 553], [1138, 525, 1191, 553], [1203, 525, 1409, 562], [1420, 525, 1567, 562], [1579, 525, 1629, 553], [1640, 525, 1857, 562], [1869, 525, 1905, 553], [1915, 525, 1964, 553], [1977, 525, 2101, 553], [2114, 529, 2144, 553], [2158, 534, 2175, 553], [375, 576, 500, 604], [512, 576, 548, 604], [558, 576, 664, 613], [677, 576, 831, 605], [848, 577, 900, 604], [912, 576, 1059, 604], [1071, 576, 1189, 613], [1201, 576, 1249, 604], [1262, 580, 1389, 613], [1401, 585, 1515, 605], [1527, 576, 1675, 604], [1688, 576, 1745, 604], [1758, 576, 1890, 604], [1902, 585, 2017, 605], [2029, 576, 2174, 613], [375, 627, 415, 664], [428, 636, 444, 655], [455, 633, 588, 664], [599, 627, 688, 664], [701, 628, 852, 655], [864, 627, 922, 655], [934, 627, 1069, 656], [1080, 627, 1169, 664], [1182, 628, 1340, 664], [438, 678, 486, 706], [497, 678, 632, 715], [644, 678, 679, 706], [687, 678, 735, 706], [746, 678, 846, 706], [848, 678, 902, 706], [914, 678, 1068, 715], [1080, 678, 1110, 706], [1120, 678, 1225, 715], [1236, 678, 1263, 706], [1280, 678, 1308, 706], [1318, 678, 1409, 715], [1418, 678, 1532, 707], [1533, 678, 1623, 715], [1633, 678, 1689, 706], [1702, 678, 1904, 706], [1915, 678, 1986, 706], [1999, 682, 2049, 706], [2060, 678, 2173, 715], [376, 729, 425, 757], [436, 729, 578, 757], [590, 729, 759, 766], [771, 729, 796, 757], [809, 729, 898, 766], [910, 729, 941, 757], [953, 729, 1115, 766], [1127, 730, 1163, 757], [1177, 730, 1210, 757], [1222, 729, 1302, 757], [1314, 729, 1444, 763], [1458, 738, 1505, 757], [1517, 729, 1653, 757], [1665, 729, 1715, 757], [1726, 729, 1888, 757], [1900, 729, 2023, 757], [2035, 729, 2066, 757], [2078, 729, 2176, 766], [376, 799, 506, 829], [521, 800, 697, 828], [709, 800, 878, 837], [889, 800, 1020, 837], [1034, 800, 1106, 837], [1118, 800, 1167, 828], [1179, 800, 1338, 837], [1349, 800, 1562, 837], [1574, 800, 1730, 829], [431, 876, 454, 904], [479, 877, 519, 911], [537, 876, 626, 904], [639, 876, 674, 904], [684, 876, 733, 904], [745, 880, 861, 904], [874, 885, 997, 913], [999, 880, 1091, 904], [427, 935, 454, 963], [480, 927, 506, 963], [525, 935, 610, 972], [622, 935, 657, 963], [667, 935, 716, 963], [728, 935, 789, 963], [796, 935, 916, 972], [929, 939, 1065, 972], [1078, 939, 1146, 963], [1158, 935, 1230, 963], [1243, 935, 1377, 972], [1379, 939, 1429, 963], [1441, 935, 1490, 963], [1502, 939, 1618, 963], [1629, 935, 1714, 972], [428, 994, 454, 1023], [478, 993, 506, 1027], [525, 994, 610, 1031], [622, 994, 657, 1022], [667, 994, 716, 1022], [728, 994, 789, 1022], [796, 994, 916, 1031], [929, 1003, 1053, 1031], [1055, 998, 1146, 1022], [1158, 994, 1230, 1022], [1243, 994, 1391, 1022], [1404, 998, 1431, 1022], [1443, 994, 1493, 1022], [1504, 998, 1620, 1022], [1631, 994, 1716, 1031], [427, 1053, 454, 1081], [480, 1045, 510, 1081], [527, 1053, 630, 1090], [642, 1053, 678, 1081], [687, 1053, 833, 1090], [845, 1057, 922, 1081], [937, 1053, 986, 1081], [999, 1052, 1106, 1082], [1118, 1057, 1218, 1081], [427, 1112, 454, 1141], [480, 1111, 510, 1146], [527, 1112, 630, 1149], [642, 1112, 678, 1140], [687, 1112, 835, 1140], [847, 1116, 924, 1140], [940, 1111, 1047, 1141], [1059, 1116, 1159, 1140], [427, 1171, 454, 1200], [478, 1165, 501, 1199], [518, 1171, 608, 1199], [620, 1180, 639, 1199], [641, 1171, 721, 1199], [732, 1171, 817, 1208], [829, 1171, 929, 1199], [941, 1164, 959, 1199], [971, 1180, 1032, 1199], [1044, 1171, 1362, 1208], [1374, 1171, 1520, 1208], [1531, 1171, 1623, 1199], [1634, 1171, 1718, 1208], [427, 1232, 454, 1259], [476, 1232, 501, 1264], [518, 1231, 608, 1259], [620, 1231, 656, 1259], [665, 1231, 721, 1259], [732, 1231, 817, 1268], [829, 1231, 929, 1259], [939, 1230, 958, 1264], [971, 1240, 1032, 1259], [1044, 1231, 1362, 1268], [1374, 1231, 1522, 1259], [1533, 1231, 1626, 1259], [1636, 1231, 1728, 1268], [375, 1315, 480, 1352], [493, 1315, 509, 1344], [522, 1315, 603, 1352], [617, 1324, 633, 1343], [644, 1315, 804, 1352], [817, 1315, 1035, 1352], [1046, 1315, 1081, 1343], [1090, 1315, 1171, 1343], [1183, 1315, 1337, 1349], [1351, 1324, 1396, 1344], [1407, 1324, 1460, 1343], [1472, 1315, 1554, 1343], [1566, 1315, 1709, 1343], [1722, 1319, 1751, 1343], [1763, 1315, 1859, 1343], [1870, 1315, 2174, 1352], [376, 1365, 592, 1399], [606, 1365, 731, 1393], [743, 1365, 793, 1393], [804, 1365, 881, 1393], [893, 1369, 924, 1393], [936, 1369, 1077, 1402], [1089, 1374, 1123, 1393], [1135, 1369, 1213, 1393], [1225, 1365, 1307, 1393], [1319, 1365, 1478, 1402], [701, 2098, 751, 2159], [1308, 2125, 1329, 2159], [1604, 2102, 1633, 2165], [375, 2225, 480, 2262], [493, 2225, 519, 2254], [537, 2227, 696, 2253], [707, 2228, 738, 2253], [746, 2228, 789, 2253], [800, 2228, 945, 2261], [956, 2232, 1082, 2261], [1094, 2227, 1218, 2253], [1228, 2228, 1255, 2253], [1266, 2228, 1308, 2253], [1320, 2227, 1463, 2253], [1474, 2232, 1527, 2253], [1539, 2228, 1619, 2261], [1631, 2228, 1746, 2253], [1761, 2228, 1816, 2253], [1827, 2232, 1940, 2261], [1951, 2227, 2033, 2253], [2043, 2228, 2174, 2253], [375, 2273, 419, 2305], [428, 2274, 472, 2299], [483, 2274, 546, 2299], [557, 2274, 669, 2307], [681, 2274, 704, 2299], [716, 2274, 841, 2307], [853, 2274, 880, 2299], [891, 2282, 981, 2307], [993, 2274, 1075, 2299], [1086, 2274, 1131, 2299], [1143, 2274, 1264, 2299], [1274, 2274, 1360, 2299], [1369, 2274, 1502, 2307], [1514, 2273, 1557, 2305], [1566, 2274, 1610, 2299], [1621, 2274, 1684, 2299], [1694, 2274, 1812, 2306], [1824, 2274, 1846, 2299], [1859, 2274, 1954, 2299], [1965, 2274, 1992, 2299], [2002, 2274, 2074, 2299], [2089, 2274, 2146, 2299], [2158, 2272, 2173, 2299], [377, 2321, 466, 2354], [478, 2321, 531, 2346], [543, 2320, 562, 2346], [572, 2321, 678, 2354], [690, 2329, 734, 2346], [744, 2321, 887, 2354], [897, 2321, 1014, 2354], [1024, 2329, 1061, 2354], [1072, 2324, 1099, 2346], [1110, 2321, 1155, 2346], [1165, 2321, 1246, 2346], [1258, 2321, 1333, 2346], [1335, 2329, 1379, 2346], [1381, 2321, 1420, 2353], [438, 2417, 607, 2454], [617, 2417, 635, 2445], [646, 2421, 778, 2454], [791, 2417, 845, 2445], [856, 2417, 1029, 2454], [1031, 2426, 1077, 2445], [1079, 2417, 1150, 2445], [1162, 2417, 1320, 2445], [1333, 2417, 1498, 2454], [1510, 2417, 1638, 2445], [1655, 2417, 1790, 2454], [1803, 2417, 1851, 2445], [1864, 2417, 2020, 2454], [2030, 2417, 2173, 2454], [376, 2468, 406, 2496], [418, 2468, 468, 2496], [481, 2477, 564, 2496], [575, 2468, 696, 2496], [709, 2477, 739, 2496], [753, 2468, 802, 2496], [814, 2468, 923, 2496], [936, 2468, 1105, 2505], [1117, 2468, 1249, 2502], [1262, 2468, 1406, 2505], [1419, 2468, 1468, 2496], [1481, 2468, 1572, 2496], [1585, 2468, 1840, 2505], [1853, 2472, 1884, 2496], [1896, 2468, 1945, 2496], [1957, 2468, 2103, 2505], [2116, 2468, 2174, 2496], [376, 2519, 512, 2547], [514, 2523, 564, 2547], [576, 2519, 650, 2547], [664, 2523, 736, 2556], [751, 2519, 808, 2547], [820, 2519, 1010, 2556], [1023, 2528, 1039, 2547], [1050, 2519, 1227, 2556], [1239, 2519, 1383, 2548], [1384, 2519, 1458, 2547], [1471, 2519, 1571, 2556], [1584, 2519, 1620, 2547], [1629, 2519, 1713, 2547], [1725, 2523, 1785, 2547], [1797, 2519, 1934, 2547], [1937, 2528, 2053, 2547], [438, 2571, 528, 2598], [539, 2570, 697, 2607], [712, 2574, 741, 2598], [752, 2570, 828, 2598], [840, 2570, 916, 2598], [927, 2570, 1067, 2598], [1079, 2570, 1129, 2598], [1141, 2570, 1266, 2598], [1279, 2574, 1360, 2607], [1373, 2579, 1432, 2598], [1444, 2570, 1531, 2607], [1542, 2570, 1656, 2598], [1667, 2570, 1798, 2607], [1809, 2570, 1859, 2598], [1872, 2570, 1951, 2604], [1964, 2570, 2111, 2607], [2124, 2570, 2174, 2598], [376, 2621, 666, 2658], [667, 2621, 771, 2658], [775, 2620, 839, 2656], [853, 2613, 883, 2656], [896, 2630, 926, 2649], [938, 2621, 1006, 2650], [1017, 2621, 1091, 2649], [1100, 2621, 1216, 2658], [1229, 2625, 1256, 2649], [1267, 2621, 1314, 2649], [1326, 2625, 1440, 2649], [1449, 2621, 1533, 2658], [1544, 2620, 1588, 2656], [1601, 2613, 1644, 2656], [1661, 2622, 1700, 2649], [1712, 2621, 1806, 2649], [1816, 2621, 1863, 2649], [1873, 2621, 2174, 2658], [376, 2671, 511, 2708], [514, 2671, 561, 2699], [574, 2671, 695, 2699], [709, 2675, 738, 2699], [751, 2680, 892, 2708], [904, 2671, 953, 2699], [966, 2671, 1065, 2708], [1080, 2670, 1120, 2706], [1134, 2664, 1174, 2706], [1188, 2680, 1221, 2699], [1233, 2671, 1439, 2708], [1453, 2675, 1482, 2699], [1495, 2671, 1591, 2699], [1602, 2671, 1735, 2699], [1746, 2671, 1795, 2699], [1806, 2671, 1909, 2708], [1920, 2671, 1956, 2699], [1965, 2671, 2014, 2699], [2026, 2671, 2174, 2699], [377, 2721, 398, 2756], [411, 2722, 481, 2750], [494, 2722, 595, 2751], [609, 2722, 658, 2750], [672, 2722, 743, 2750], [755, 2722, 875, 2750], [888, 2722, 987, 2757], [1000, 2722, 1050, 2750], [1063, 2722, 1215, 2750], [1227, 2722, 1351, 2751], [1365, 2722, 1415, 2750], [1428, 2722, 1499, 2750], [1512, 2722, 1638, 2759], [1653, 2731, 1687, 2750], [1700, 2722, 1749, 2750], [1762, 2722, 1868, 2759], [1880, 2722, 1916, 2750], [1927, 2722, 1976, 2750], [1990, 2722, 2139, 2759], [2153, 2714, 2174, 2750], [376, 2782, 475, 2810], [489, 2773, 585, 2801], [597, 2773, 647, 2801], [659, 2773, 730, 2801], [742, 2773, 854, 2810], [868, 2773, 965, 2808], [978, 2773, 1027, 2801], [1039, 2773, 1188, 2810], [1199, 2773, 1322, 2802], [1335, 2773, 1384, 2801], [1397, 2773, 1467, 2801], [1478, 2773, 1620, 2808], [1636, 2774, 1689, 2801], [1701, 2773, 1773, 2801], [1773, 2782, 1838, 2801], [1840, 2773, 1905, 2801], [1914, 2773, 1973, 2801], [1986, 2773, 2043, 2801], [2054, 2773, 2177, 2807], [373, 239, 557, 277], [569, 239, 588, 268], [599, 243, 758, 268], [769, 246, 813, 268], [815, 243, 918, 276], [929, 243, 1073, 276], [1084, 242, 1127, 268], [1136, 243, 1395, 276], [397, 304, 416, 326], [439, 301, 570, 326], [581, 301, 591, 326], [606, 296, 658, 326], [670, 294, 975, 331], [989, 294, 1254, 334], [1269, 300, 1325, 326], [394, 351, 416, 373], [439, 347, 523, 374], [533, 348, 543, 373], [559, 352, 583, 375], [598, 356, 619, 373], [630, 348, 668, 374], [767, 384, 779, 388], [1144, 384, 1156, 388], [394, 397, 416, 419], [494, 394, 562, 419], [573, 393, 636, 419], [646, 394, 746, 427], [763, 393, 782, 419], [796, 405, 822, 414], [837, 393, 856, 419], [867, 393, 909, 419], [925, 398, 949, 421], [964, 394, 1059, 424], [1072, 394, 1128, 419], [1140, 393, 1159, 419], [1173, 405, 1199, 414], [1214, 394, 1230, 420], [413, 451, 416, 454], [495, 441, 601, 474], [612, 441, 744, 474], [753, 441, 846, 474], [857, 440, 1000, 474], [1011, 444, 1115, 466], [1127, 441, 1211, 474], [1228, 440, 1247, 466], [1261, 452, 1287, 461], [1301, 440, 1320, 466], [1332, 439, 1385, 469], [1398, 456, 1422, 457], [1435, 449, 1473, 474], [393, 444, 409, 466], [394, 490, 416, 513], [494, 488, 520, 514], [533, 488, 628, 514], [638, 487, 668, 513], [668, 488, 791, 521], [802, 488, 941, 513], [957, 488, 1088, 521], [1099, 488, 1122, 513], [1133, 487, 1220, 513], [1231, 487, 1294, 513], [1305, 488, 1405, 521], [1418, 488, 1443, 514], [394, 536, 416, 559], [495, 533, 519, 559], [538, 527, 557, 559], [571, 539, 595, 561], [611, 524, 630, 559], [642, 534, 710, 560], [394, 584, 408, 606], [551, 581, 632, 606], [643, 581, 716, 606], [728, 584, 849, 614], [859, 589, 896, 614], [907, 584, 934, 606], [945, 581, 996, 606], [1006, 581, 1138, 614], [1147, 580, 1277, 614], [1287, 581, 1371, 614], [1388, 589, 1435, 618], [1441, 592, 1497, 616], [1512, 592, 1538, 601], [1553, 574, 1576, 606], [395, 630, 408, 652], [552, 627, 620, 652], [631, 635, 690, 652], [703, 635, 814, 660], [815, 626, 903, 652], [912, 626, 1002, 652], [1021, 624, 1103, 661], [1120, 625, 1207, 657], [1221, 625, 1919, 660], [394, 677, 408, 700], [413, 696, 416, 699], [551, 673, 687, 700], [381, 723, 416, 745], [495, 720, 551, 746], [563, 719, 587, 745], [381, 770, 416, 792], [495, 767, 601, 800], [612, 767, 746, 792], [756, 767, 849, 800], [859, 766, 1002, 800], [1013, 770, 1117, 792], [1129, 767, 1213, 800], [1230, 766, 1249, 796], [1263, 778, 1289, 787], [1303, 766, 1322, 796], [1334, 770, 1360, 795], [1370, 765, 1387, 796], [1400, 782, 1424, 783], [1437, 775, 1475, 800], [381, 817, 416, 839], [494, 814, 520, 840], [533, 814, 628, 840], [638, 813, 681, 839], [690, 813, 796, 839], [806, 814, 945, 839], [961, 814, 1095, 839], [1105, 814, 1128, 839], [1139, 813, 1228, 839], [1239, 813, 1302, 839], [1312, 813, 1418, 839], [1430, 814, 1456, 840], [381, 863, 416, 885], [495, 859, 519, 885], [538, 859, 557, 890], [571, 864, 595, 887], [612, 850, 660, 885], [671, 860, 740, 886], [381, 910, 416, 932], [551, 907, 632, 932], [643, 907, 716, 932], [728, 915, 839, 940], [840, 910, 896, 940], [907, 910, 934, 932], [945, 907, 996, 932], [1006, 907, 1140, 932], [1149, 906, 1280, 940], [1290, 907, 1373, 940], [1390, 915, 1498, 941], [1514, 918, 1540, 927], [1552, 905, 1578, 936], [381, 955, 416, 978], [552, 953, 620, 978], [631, 961, 690, 978], [703, 961, 814, 986], [815, 952, 903, 978], [912, 952, 1002, 978], [1021, 948, 1103, 987], [1120, 964, 1146, 973], [1156, 951, 1207, 983], [1221, 964, 1247, 973], [1261, 946, 1329, 986], [1342, 964, 1368, 973], [1383, 952, 1450, 978], [1462, 952, 1570, 986], [1584, 946, 1948, 983], [381, 1002, 416, 1025], [551, 999, 687, 1026], [381, 1049, 416, 1071], [495, 1046, 551, 1072], [563, 1045, 587, 1071], [381, 1096, 416, 1118], [494, 1093, 520, 1119], [533, 1093, 628, 1119], [638, 1092, 662, 1118], [670, 1093, 802, 1126], [812, 1093, 905, 1126], [915, 1093, 938, 1118], [949, 1092, 1038, 1118], [1049, 1093, 1093, 1118], [1104, 1093, 1174, 1118], [1186, 1093, 1212, 1119], [381, 1143, 416, 1166], [495, 1139, 519, 1165], [538, 1133, 660, 1171], [681, 1140, 750, 1166], [378, 1189, 416, 1211], [551, 1186, 662, 1212], [673, 1186, 757, 1219], [774, 1179, 791, 1211], [803, 1197, 829, 1206], [844, 1179, 861, 1211], [871, 1189, 897, 1214], [914, 1172, 973, 1229], [378, 1246, 416, 1268], [551, 1243, 608, 1268], [619, 1243, 750, 1276], [761, 1251, 822, 1268], [833, 1243, 945, 1268], [957, 1243, 1001, 1268], [1012, 1243, 1088, 1268], [1105, 1236, 1124, 1268], [1138, 1254, 1164, 1263], [1180, 1233, 1228, 1268], [378, 1292, 416, 1314], [551, 1289, 615, 1314], [627, 1289, 649, 1314], [661, 1297, 677, 1314], [686, 1288, 808, 1322], [819, 1289, 950, 1322], [960, 1288, 1090, 1322], [1100, 1289, 1184, 1322], [1199, 1284, 1213, 1314], [1225, 1300, 1251, 1309], [1264, 1289, 1274, 1314], [378, 1339, 416, 1361], [495, 1336, 551, 1362], [563, 1335, 587, 1361], [378, 1385, 416, 1407], [494, 1382, 520, 1408], [533, 1382, 628, 1408], [638, 1381, 662, 1407], [670, 1382, 804, 1407], [814, 1382, 907, 1415], [917, 1382, 940, 1407], [952, 1381, 1038, 1407], [1049, 1382, 1093, 1407], [1104, 1382, 1204, 1415], [1217, 1382, 1243, 1408], [378, 1431, 416, 1454], [495, 1428, 519, 1454], [538, 1428, 557, 1458], [571, 1430, 595, 1460], [611, 1428, 720, 1455], [378, 1485, 416, 1508], [551, 1483, 662, 1509], [673, 1483, 757, 1516], [772, 1481, 789, 1513], [803, 1494, 829, 1503], [842, 1481, 859, 1513], [871, 1486, 897, 1511], [912, 1472, 997, 1526], [378, 1543, 416, 1565], [551, 1540, 608, 1565], [619, 1540, 752, 1565], [763, 1548, 824, 1565], [836, 1540, 934, 1565], [936, 1540, 1003, 1565], [1014, 1540, 1122, 1573], [1139, 1539, 1158, 1569], [1171, 1551, 1197, 1560], [1212, 1530, 1231, 1565], [378, 1589, 416, 1611], [551, 1586, 615, 1611], [627, 1586, 649, 1611], [661, 1594, 677, 1611], [686, 1585, 808, 1619], [819, 1586, 952, 1611], [962, 1585, 1092, 1619], [1102, 1586, 1186, 1619], [1199, 1586, 1213, 1616], [1227, 1597, 1253, 1606], [1266, 1586, 1276, 1611], [378, 1636, 416, 1659], [495, 1633, 551, 1659], [563, 1632, 587, 1658], [378, 1683, 416, 1705], [495, 1680, 630, 1706], [640, 1679, 764, 1713], [775, 1683, 879, 1705], [891, 1683, 1020, 1713], [1036, 1680, 1046, 1705], [1060, 1691, 1086, 1700], [1100, 1680, 1110, 1705], [1123, 1683, 1149, 1708], [1162, 1680, 1175, 1705], [378, 1729, 416, 1751], [439, 1726, 495, 1752], [506, 1725, 590, 1752], [378, 1776, 416, 1798], [439, 1773, 520, 1798], [531, 1773, 582, 1798], [593, 1773, 665, 1798], [677, 1776, 806, 1806], [823, 1781, 939, 1807], [955, 1784, 981, 1793], [995, 1771, 1018, 1798], [377, 1921, 461, 1949], [472, 1921, 619, 1958], [631, 1921, 752, 1958], [765, 1925, 848, 1949], [861, 1925, 914, 1949], [926, 1925, 956, 1949], [968, 1921, 1008, 1949], [1021, 1921, 1145, 1958], [1158, 1921, 1288, 1958], [1300, 1921, 1372, 1949], [1383, 1921, 1530, 1958], [1544, 1921, 1656, 1958], [1671, 1921, 1729, 1949], [1743, 1930, 1756, 1949], [1759, 1921, 1813, 1949], [1825, 1921, 1851, 1949], [1864, 1921, 1956, 1949], [1968, 1925, 1999, 1949], [2012, 1930, 2121, 1949], [2133, 1930, 2173, 1949], [376, 1971, 512, 2008], [524, 1971, 587, 1999], [599, 1971, 667, 1999], [677, 1971, 764, 2008], [775, 1971, 881, 1999], [892, 1971, 1078, 2008], [1091, 1971, 1164, 1999], [1175, 1971, 1309, 2008], [438, 2022, 516, 2050], [518, 2031, 568, 2050], [579, 2022, 718, 2059], [731, 2022, 757, 2050], [771, 2022, 919, 2056], [933, 2031, 981, 2051], [992, 2022, 1129, 2059], [1142, 2022, 1257, 2050], [1270, 2026, 1351, 2059], [1366, 2031, 1398, 2050], [1411, 2022, 1443, 2050], [1455, 2022, 1505, 2050], [1517, 2022, 1628, 2050], [1641, 2022, 1813, 2059], [1826, 2022, 1951, 2050], [1963, 2022, 2017, 2050], [2028, 2022, 2102, 2051], [2114, 2031, 2174, 2050], [377, 2073, 550, 2110], [561, 2073, 736, 2101], [754, 2073, 804, 2101], [817, 2073, 977, 2110], [989, 2073, 1015, 2101], [1028, 2073, 1212, 2110], [1223, 2073, 1367, 2101], [1380, 2077, 1409, 2101], [1420, 2073, 1469, 2101], [1481, 2073, 1581, 2110], [1593, 2073, 1771, 2101], [1782, 2073, 1969, 2110], [1986, 2073, 2058, 2101], [2070, 2077, 2175, 2101], [376, 2124, 442, 2152], [453, 2124, 478, 2152], [491, 2124, 521, 2152], [532, 2128, 660, 2152], [671, 2124, 742, 2153], [754, 2124, 801, 2152], [813, 2124, 919, 2152], [932, 2124, 1061, 2158], [1074, 2124, 1172, 2153], [1184, 2133, 1229, 2153], [1242, 2124, 1350, 2161], [1361, 2133, 1460, 2152], [1472, 2124, 1519, 2152], [1531, 2124, 1700, 2161], [1712, 2124, 1870, 2161], [1883, 2124, 2074, 2152], [2086, 2124, 2174, 2152], [376, 2175, 423, 2203], [436, 2175, 582, 2203], [594, 2175, 651, 2203], [663, 2175, 806, 2212], [818, 2179, 847, 2203], [859, 2175, 967, 2212], [979, 2175, 1053, 2203], [1064, 2175, 1213, 2203], [1228, 2175, 1284, 2203], [1296, 2175, 1434, 2203], [1447, 2175, 1580, 2212], [1593, 2175, 1664, 2204], [1676, 2175, 1763, 2203], [1780, 2176, 1813, 2203], [1825, 2175, 1872, 2203], [1885, 2175, 2044, 2203], [2056, 2175, 2174, 2204], [374, 2234, 421, 2253], [433, 2225, 473, 2253], [485, 2229, 536, 2253], [547, 2225, 625, 2262], [637, 2225, 757, 2262], [770, 2225, 964, 2253], [976, 2229, 1007, 2253], [1018, 2225, 1151, 2262], [1164, 2225, 1238, 2253], [1251, 2234, 1287, 2253], [1299, 2225, 1463, 2262], [1478, 2234, 1512, 2253], [1525, 2225, 1564, 2253], [1576, 2225, 1644, 2253], [1657, 2225, 1747, 2253], [1759, 2225, 1907, 2253], [1920, 2225, 1977, 2253], [1990, 2225, 2124, 2262], [2126, 2225, 2172, 2253], [376, 2276, 531, 2304], [544, 2276, 601, 2304], [613, 2276, 661, 2304], [674, 2276, 832, 2313], [842, 2276, 946, 2313], [961, 2285, 1049, 2304], [1066, 2277, 1200, 2304], [1213, 2276, 1248, 2304], [1257, 2276, 1314, 2304], [1327, 2276, 1432, 2304], [1444, 2276, 1492, 2304], [1506, 2285, 1587, 2304], [1599, 2276, 1668, 2304], [1681, 2280, 1815, 2313], [1827, 2276, 1921, 2313], [1932, 2276, 1969, 2304], [1981, 2276, 2174, 2313], [375, 2336, 416, 2364], [429, 2331, 460, 2355], [474, 2324, 558, 2365], [575, 2327, 648, 2355], [651, 2327, 709, 2355], [722, 2327, 772, 2355], [785, 2327, 919, 2361], [935, 2327, 993, 2355], [1006, 2327, 1157, 2355], [1170, 2327, 1220, 2355], [1233, 2327, 1348, 2355], [1361, 2331, 1454, 2356], [1466, 2336, 1537, 2355], [1549, 2327, 1762, 2364], [1775, 2327, 1801, 2355], [1816, 2321, 1930, 2365], [1949, 2327, 2022, 2355], [2036, 2327, 2098, 2355], [2110, 2336, 2173, 2356], [377, 2378, 496, 2415], [508, 2378, 656, 2407], [668, 2378, 698, 2406], [713, 2378, 785, 2412], [438, 2430, 471, 2457], [483, 2429, 562, 2457], [574, 2429, 694, 2457], [708, 2438, 755, 2457], [766, 2429, 903, 2457], [915, 2429, 964, 2457], [975, 2429, 1120, 2457], [1131, 2429, 1243, 2457], [1255, 2429, 1305, 2457], [1315, 2429, 1419, 2466], [1429, 2429, 1540, 2466], [1552, 2429, 1707, 2457], [376, 2539, 494, 2577], [504, 2539, 673, 2569], [717, 2541, 757, 2568], [768, 2540, 941, 2577], [951, 2540, 999, 2568], [1010, 2540, 1129, 2568], [1141, 2540, 1294, 2568], [1306, 2540, 1408, 2574], [1421, 2540, 1468, 2568], [1478, 2540, 1580, 2577], [1590, 2540, 1733, 2568], [1746, 2539, 1767, 2568], [1778, 2549, 1825, 2568], [1836, 2549, 1874, 2568], [1877, 2540, 2008, 2577], [2019, 2549, 2175, 2577], [377, 2600, 407, 2619], [420, 2591, 487, 2628], [500, 2600, 556, 2619], [566, 2591, 604, 2619], [616, 2591, 756, 2619], [768, 2591, 847, 2619], [858, 2591, 906, 2619], [919, 2591, 1018, 2628], [1032, 2590, 1057, 2619], [1074, 2592, 1227, 2625], [1240, 2591, 1392, 2628], [1405, 2591, 1557, 2628], [1570, 2591, 1651, 2619], [1662, 2591, 1729, 2619], [1731, 2595, 1786, 2619], [1799, 2591, 1931, 2619], [1941, 2591, 2083, 2628], [2095, 2591, 2173, 2619], [377, 2646, 404, 2670], [416, 2642, 490, 2670], [502, 2642, 648, 2676], [662, 2651, 693, 2670], [706, 2651, 753, 2670], [766, 2642, 850, 2670], [861, 2642, 966, 2670], [856, 235, 979, 265], [1529, 235, 1718, 265], [1732, 235, 1915, 271], [400, 289, 582, 316], [593, 288, 803, 325], [0, 0, 2550, 3300], [856, 285, 940, 326], [1530, 282, 1632, 326], [400, 342, 592, 378], [855, 342, 904, 369], [1529, 342, 1586, 369], [400, 393, 494, 422], [505, 393, 742, 421], [855, 394, 925, 421], [951, 393, 1168, 430], [1197, 393, 1327, 430], [1355, 393, 1481, 421], [0, 0, 2550, 3300], [1529, 394, 1605, 430], [1617, 393, 1675, 421], [1687, 393, 1833, 427], [1847, 393, 1940, 421], [1951, 393, 2081, 430], [855, 444, 953, 472], [965, 453, 1077, 481], [638, 556, 727, 584], [743, 556, 767, 584], [784, 556, 986, 593], [998, 556, 1033, 584], [1043, 556, 1092, 584], [1104, 556, 1185, 584], [1197, 556, 1325, 584], [1339, 556, 1375, 584], [1383, 556, 1532, 585], [1544, 556, 1713, 593], [1726, 556, 1909, 593], [439, 680, 578, 717], [589, 689, 636, 708], [649, 689, 698, 708], [709, 680, 854, 717], [866, 680, 915, 708], [926, 680, 1044, 717], [1059, 680, 1116, 708], [1130, 680, 1230, 717], [1243, 680, 1323, 708], [1335, 680, 1410, 708], [1421, 680, 1573, 708], [1588, 684, 1615, 708], [1628, 684, 1693, 717], [1705, 681, 1716, 708], [1730, 697, 1756, 698], [1773, 680, 1786, 708], [1801, 684, 1832, 708], [1845, 684, 1909, 717], [1921, 681, 1943, 708], [1959, 680, 2112, 717], [2125, 680, 2174, 708], [375, 731, 492, 768], [506, 731, 530, 759], [544, 731, 718, 759], [730, 731, 818, 768], [830, 731, 880, 759], [893, 731, 1002, 768], [1017, 731, 1100, 759], [1106, 811, 1138, 846], [1156, 811, 1273, 846], [1289, 811, 1347, 843], [1361, 829, 1387, 830], [1400, 822, 1441, 849], [376, 893, 410, 920], [421, 892, 507, 920], [518, 892, 628, 926], [643, 892, 728, 920], [740, 901, 787, 921], [801, 901, 849, 920], [862, 892, 1023, 929], [1036, 901, 1053, 920], [1065, 892, 1126, 920], [1138, 892, 1213, 921], [1225, 892, 1312, 929], [1325, 891, 1351, 926], [1365, 892, 1415, 920], [1427, 892, 1545, 929], [1557, 892, 1589, 920], [1599, 892, 1705, 929], [1717, 892, 1798, 920], [1809, 901, 1850, 920], [1852, 896, 1947, 929], [1959, 896, 1990, 920], [2003, 892, 2052, 920], [2065, 901, 2123, 920], [2125, 892, 2173, 920], [376, 943, 464, 980], [475, 943, 515, 980], [526, 943, 674, 980], [687, 943, 760, 971], [772, 952, 788, 971], [801, 943, 893, 980], [909, 944, 997, 977], [1010, 943, 1155, 977], [1168, 943, 1229, 971], [1240, 943, 1271, 971], [1283, 943, 1339, 971], [1354, 943, 1511, 980], [1523, 952, 1568, 971], [1581, 943, 1620, 971], [1633, 947, 1684, 971], [1695, 947, 1835, 980], [1848, 943, 1982, 971], [1994, 943, 2110, 980], [2123, 943, 2174, 971], [376, 994, 491, 1022], [502, 994, 625, 1023], [635, 994, 753, 1031], [767, 994, 839, 1022], [850, 998, 967, 1031], [979, 998, 1008, 1022], [1021, 994, 1070, 1022], [1083, 993, 1197, 1023], [1209, 998, 1314, 1022], [1331, 994, 1493, 1022], [1505, 1003, 1552, 1022], [1564, 994, 1640, 1022], [1653, 998, 1682, 1022], [1696, 1003, 1811, 1022], [1813, 994, 1882, 1022], [1893, 994, 1943, 1022], [1954, 994, 2070, 1031], [2082, 994, 2113, 1022], [2125, 994, 2174, 1022], [376, 1045, 445, 1073], [457, 1049, 557, 1073], [567, 1045, 704, 1073], [717, 1049, 796, 1082], [809, 1046, 820, 1073], [835, 1062, 861, 1063], [877, 1045, 890, 1073], [907, 1045, 964, 1073], [976, 1046, 997, 1079], [1011, 1045, 1089, 1073], [1090, 1045, 1146, 1073], [1160, 1045, 1248, 1082], [1259, 1045, 1300, 1082], [1312, 1055, 1340, 1079], [1356, 1062, 1382, 1063], [1395, 1055, 1465, 1079], [1483, 1058, 1511, 1067], [1526, 1055, 1566, 1082], [1583, 1045, 1654, 1073], [1667, 1045, 1831, 1082], [1845, 1045, 1894, 1073], [1905, 1045, 2023, 1082], [2037, 1045, 2136, 1073], [2148, 1045, 2172, 1073], [377, 1096, 481, 1124], [493, 1096, 524, 1124], [536, 1096, 708, 1133], [719, 1096, 738, 1124], [751, 1105, 782, 1124], [795, 1096, 871, 1124], [884, 1096, 903, 1124], [916, 1096, 973, 1124], [990, 1096, 1033, 1124], [438, 1148, 585, 1176], [585, 1147, 626, 1181], [637, 1147, 662, 1175], [674, 1147, 807, 1184], [820, 1147, 880, 1175], [891, 1147, 939, 1175], [952, 1156, 1017, 1175], [1029, 1147, 1131, 1184], [1143, 1146, 1164, 1175], [1176, 1156, 1244, 1175], [1257, 1156, 1328, 1176], [1339, 1156, 1373, 1175], [1383, 1147, 1477, 1175], [1488, 1147, 1535, 1175], [1548, 1147, 1625, 1175], [1642, 1147, 1712, 1175], [1725, 1147, 1825, 1175], [1837, 1156, 1924, 1175], [1936, 1147, 1996, 1175], [2008, 1156, 2054, 1175], [2066, 1151, 2174, 1175], [376, 1197, 514, 1225], [525, 1197, 612, 1234], [624, 1197, 672, 1225], [684, 1201, 798, 1225], [810, 1197, 893, 1234], [905, 1197, 936, 1225], [947, 1197, 995, 1225], [1007, 1197, 1150, 1234], [1162, 1206, 1195, 1225], [1206, 1197, 1359, 1231], [1374, 1197, 1429, 1225], [1443, 1206, 1459, 1225], [1469, 1197, 1679, 1225], [1690, 1197, 1714, 1225], [1727, 1197, 1850, 1231], [1863, 1197, 1961, 1226], [1973, 1197, 2059, 1234], [2070, 1206, 2126, 1225], [2136, 1197, 2173, 1225], [376, 1248, 436, 1276], [438, 1248, 632, 1285], [643, 1248, 684, 1285], [695, 1248, 785, 1285], [797, 1248, 846, 1276], [857, 1248, 960, 1285], [972, 1248, 1175, 1276], [1192, 1248, 1324, 1276], [1336, 1248, 1461, 1276], [1473, 1248, 1535, 1276], [1548, 1248, 1584, 1276], [1593, 1248, 1758, 1285], [1770, 1248, 1831, 1276], [1843, 1248, 1892, 1276], [1905, 1248, 2027, 1285], [2039, 1248, 2129, 1276], [2141, 1248, 2177, 1276], [376, 1299, 425, 1327], [437, 1303, 555, 1327], [567, 1308, 691, 1336], [693, 1299, 741, 1327], [755, 1299, 772, 1328], [786, 1299, 843, 1327], [856, 1299, 905, 1327], [918, 1299, 1055, 1327], [1066, 1299, 1171, 1336], [1182, 1299, 1218, 1327], [1228, 1299, 1277, 1327], [1290, 1299, 1413, 1336], [1424, 1299, 1511, 1336], [1522, 1299, 1558, 1327], [1567, 1299, 1617, 1327], [1630, 1308, 1754, 1336], [1756, 1299, 1804, 1327], [1816, 1299, 1906, 1336], [1917, 1299, 1958, 1336], [1971, 1309, 2004, 1327], [2020, 1299, 2114, 1333], [2127, 1299, 2175, 1327], [377, 1350, 526, 1387], [538, 1350, 587, 1378], [599, 1350, 736, 1378], [738, 1350, 846, 1387], [858, 1342, 885, 1384], [901, 1359, 935, 1378], [947, 1350, 1008, 1378], [1020, 1350, 1042, 1378], [1054, 1350, 1177, 1378], [1191, 1350, 1240, 1378], [1252, 1350, 1322, 1378], [1334, 1350, 1445, 1387], [1458, 1354, 1485, 1378], [1497, 1350, 1547, 1378], [1558, 1354, 1675, 1378], [1685, 1350, 1779, 1387], [1793, 1359, 1839, 1378], [1851, 1354, 1921, 1378], [1933, 1350, 1994, 1378], [900, 1448, 925, 1484], [944, 1426, 1094, 1470], [1110, 1437, 1174, 1455], [1194, 1426, 1304, 1470], [1320, 1420, 1470, 1465], [1485, 1431, 1553, 1462], [1570, 1437, 1633, 1455], [1644, 1480, 1648, 1492], [1077, 1494, 1088, 1512], [1432, 1494, 1443, 1512], [374, 1553, 472, 1581], [485, 1562, 530, 1581], [542, 1553, 600, 1582], [601, 1553, 693, 1581], [707, 1553, 802, 1581], [815, 1553, 872, 1581], [885, 1553, 1051, 1581], [1063, 1553, 1111, 1581], [1124, 1557, 1238, 1581], [1250, 1553, 1336, 1582], [1349, 1553, 1384, 1581], [1394, 1545, 1437, 1587], [1454, 1553, 1588, 1582], [1601, 1553, 1661, 1581], [1672, 1553, 1729, 1581], [1742, 1553, 1828, 1582], [1840, 1562, 1901, 1581], [1914, 1557, 2053, 1590], [2056, 1553, 2173, 1590], [376, 1604, 425, 1632], [437, 1604, 576, 1632], [589, 1603, 657, 1638], [673, 1604, 709, 1632], [718, 1604, 768, 1632], [781, 1604, 867, 1641], [880, 1613, 915, 1632], [927, 1604, 979, 1638], [993, 1613, 1028, 1632], [1040, 1613, 1088, 1633], [1100, 1613, 1156, 1632], [1167, 1604, 1285, 1633], [1297, 1604, 1319, 1632], [1332, 1613, 1363, 1632], [1376, 1604, 1426, 1632], [1437, 1604, 1606, 1641], [1619, 1604, 1655, 1632], [1664, 1604, 1714, 1632], [1726, 1604, 1822, 1632], [1833, 1604, 1920, 1641], [1931, 1604, 1962, 1632], [1974, 1604, 2024, 1632], [2037, 1608, 2175, 1641], [376, 1654, 534, 1691], [547, 1654, 621, 1682], [634, 1663, 650, 1682], [663, 1654, 756, 1691], [770, 1654, 831, 1682], [843, 1654, 877, 1688], [892, 1663, 922, 1682], [937, 1653, 969, 1689], [986, 1667, 1014, 1676], [1029, 1653, 1071, 1689], [1087, 1671, 1113, 1672], [1126, 1664, 1154, 1689], [1169, 1658, 1197, 1685], [1211, 1664, 1242, 1682], [1260, 1654, 1362, 1691], [1375, 1663, 1409, 1682], [1421, 1654, 1469, 1682], [1480, 1663, 1538, 1682], [1550, 1654, 1586, 1682], [1595, 1654, 1644, 1682], [1657, 1654, 1754, 1682], [1765, 1654, 1882, 1691], [1897, 1653, 1929, 1689], [1943, 1654, 2091, 1691], [1657, 1731, 1717, 1761], [1732, 1724, 1764, 1766], [767, 1752, 785, 1788], [811, 1724, 1117, 1782], [1132, 1724, 1383, 1793], [1399, 1742, 1462, 1760], [1482, 1752, 1638, 1794], [1776, 1784, 1780, 1796], [1705, 1799, 1716, 1817], [785, 1775, 794, 1794], [1155, 1799, 1166, 1817], [374, 1851, 472, 1879], [484, 1855, 636, 1888], [650, 1860, 666, 1879], [679, 1851, 784, 1888], [796, 1851, 938, 1888], [949, 1851, 1020, 1879], [1037, 1851, 1065, 1879], [1078, 1851, 1190, 1879], [1201, 1851, 1363, 1880], [1374, 1851, 1461, 1879], [1474, 1851, 1521, 1879], [1532, 1851, 1580, 1879], [1592, 1851, 1746, 1879], [1763, 1851, 1824, 1879], [1836, 1851, 1978, 1888], [1989, 1851, 2112, 1888], [2127, 1860, 2173, 1879], [376, 1902, 493, 1930], [495, 1902, 556, 1930], [568, 1902, 616, 1930], [629, 1902, 786, 1939], [797, 1902, 827, 1930], [839, 1902, 913, 1930], [926, 1902, 964, 1931], [978, 1902, 1034, 1930], [1046, 1902, 1093, 1931], [1110, 1902, 1195, 1930], [1205, 1902, 1410, 1939], [1422, 1902, 1478, 1930], [1493, 1902, 1575, 1939], [1588, 1911, 1633, 1931], [1646, 1902, 1720, 1930], [1733, 1906, 1762, 1930], [1776, 1902, 1871, 1939], [1883, 1902, 1930, 1930], [1943, 1902, 2173, 1939], [375, 1953, 477, 1990], [488, 1953, 566, 1981], [576, 1957, 606, 1981], [619, 1953, 667, 1981], [679, 1953, 757, 1981], [775, 1953, 856, 1981], [869, 1953, 917, 1981], [929, 1953, 1045, 1990], [1060, 1962, 1106, 1981], [1118, 1953, 1238, 1982], [1251, 1957, 1280, 1981], [1293, 1953, 1341, 1981], [1354, 1953, 1422, 1981], [1435, 1957, 1534, 1981], [1545, 1962, 1591, 1981], [1604, 1962, 1659, 1981], [1667, 1953, 1729, 1990], [1742, 1957, 1785, 1981], [1798, 1945, 1819, 1981], [1833, 1966, 1861, 1975], [1877, 1952, 1907, 1987], [1922, 1952, 1943, 1986], [1957, 1966, 1985, 1975], [2002, 1952, 2053, 1982], [2059, 1953, 2135, 1987], [2148, 1953, 2173, 1981], [376, 2004, 436, 2032], [438, 2004, 497, 2032], [509, 2004, 585, 2032], [598, 2004, 634, 2032], [651, 2004, 708, 2032], [720, 2004, 768, 2032], [438, 2054, 549, 2082], [562, 2054, 627, 2082], [640, 2054, 703, 2082], [714, 2054, 764, 2082], [777, 2054, 892, 2091], [904, 2063, 975, 2082], [987, 2054, 1024, 2082], [1033, 2054, 1083, 2082], [1095, 2054, 1153, 2082], [1164, 2054, 1251, 2091], [1262, 2054, 1294, 2082], [1306, 2054, 1356, 2082], [1368, 2054, 1439, 2082], [1451, 2054, 1553, 2083], [1565, 2054, 1615, 2082], [1627, 2054, 1799, 2091], [1812, 2058, 1894, 2082], [1905, 2058, 1986, 2082], [1999, 2064, 2035, 2089], [2052, 2067, 2080, 2076], [2095, 2064, 2132, 2089], [2147, 2054, 2173, 2082], [375, 2105, 507, 2133], [519, 2105, 560, 2142], [573, 2105, 635, 2133], [648, 2105, 675, 2139], [689, 2105, 791, 2134], [804, 2094, 824, 2134], [838, 2105, 863, 2133], [877, 2109, 923, 2133], [934, 2109, 965, 2133], [978, 2105, 995, 2134], [1009, 2109, 1038, 2133], [1050, 2105, 1126, 2133], [1139, 2114, 1156, 2133], [1166, 2105, 1253, 2142], [1264, 2109, 1295, 2133], [1308, 2105, 1433, 2133], [1445, 2105, 1504, 2133], [1517, 2105, 1691, 2133], [1707, 2105, 1841, 2139], [1855, 2114, 1914, 2133], [1926, 2105, 2066, 2133], [2078, 2105, 2114, 2133], [2124, 2105, 2174, 2133], [376, 2156, 478, 2184], [479, 2156, 535, 2184], [549, 2165, 620, 2193], [632, 2156, 774, 2190], [789, 2165, 820, 2184], [833, 2156, 945, 2193], [953, 2156, 1015, 2193], [1028, 2156, 1176, 2184], [1191, 2156, 1248, 2184], [1261, 2156, 1458, 2184], [1473, 2165, 1521, 2184], [1533, 2156, 1673, 2185], [1686, 2156, 1758, 2184], [1770, 2156, 1819, 2184], [1832, 2156, 1896, 2184], [1908, 2156, 2068, 2193], [2080, 2156, 2115, 2184], [2125, 2156, 2174, 2184], [376, 2207, 508, 2235], [519, 2207, 658, 2244], [671, 2207, 719, 2235], [730, 2207, 780, 2235], [793, 2207, 879, 2244], [890, 2207, 1027, 2244], [1040, 2207, 1141, 2236], [1155, 2216, 1203, 2235], [1215, 2211, 1268, 2235], [1278, 2207, 1452, 2244], [1466, 2211, 1494, 2235], [1506, 2216, 1595, 2244], [1608, 2207, 1755, 2235], [1771, 2208, 1941, 2241], [1955, 2216, 1995, 2235], [2008, 2207, 2174, 2235], [376, 2267, 514, 2295], [529, 2258, 555, 2286], [570, 2258, 709, 2295], [724, 2258, 846, 2295], [861, 2258, 911, 2286], [926, 2262, 1066, 2286], [1080, 2258, 1208, 2286], [1222, 2258, 1258, 2286], [1269, 2258, 1486, 2295], [1501, 2258, 1660, 2292], [1678, 2258, 1736, 2286], [1751, 2258, 1886, 2295], [1900, 2258, 2027, 2295], [2044, 2267, 2093, 2286], [2108, 2258, 2173, 2286], [375, 2308, 510, 2345], [521, 2308, 652, 2336], [664, 2318, 693, 2345], [708, 2308, 810, 2337], [824, 2308, 871, 2336], [884, 2308, 1003, 2345], [1015, 2308, 1096, 2336], [1109, 2308, 1239, 2336], [1252, 2308, 1288, 2336], [1297, 2308, 1346, 2336], [1358, 2308, 1527, 2345], [1540, 2317, 1589, 2336], [1600, 2312, 1652, 2336], [1663, 2308, 1801, 2345], [1814, 2308, 1909, 2345], [1924, 2317, 1958, 2336], [1971, 2308, 2020, 2336], [2032, 2312, 2136, 2345], [2149, 2317, 2172, 2336], [377, 2359, 434, 2387], [446, 2359, 495, 2387], [507, 2359, 591, 2396], [603, 2368, 626, 2395], [639, 2368, 695, 2387], [706, 2359, 779, 2387], [790, 2359, 869, 2387], [880, 2363, 910, 2387], [923, 2359, 972, 2387], [985, 2368, 1068, 2387], [1079, 2368, 1216, 2396], [1228, 2359, 1384, 2387], [438, 2410, 499, 2438], [511, 2410, 653, 2447], [667, 2410, 825, 2447], [837, 2414, 916, 2438], [929, 2414, 980, 2438], [992, 2414, 1021, 2438], [1033, 2410, 1071, 2438], [1084, 2410, 1260, 2447], [1274, 2410, 1382, 2438], [1393, 2410, 1453, 2438], [1464, 2410, 1505, 2447], [1517, 2410, 1586, 2444], [1599, 2414, 1629, 2438], [1642, 2410, 1690, 2438], [1702, 2410, 1824, 2438], [1836, 2410, 1872, 2438], [1881, 2410, 1998, 2439], [2013, 2410, 2086, 2444], [2100, 2419, 2174, 2439], [376, 2461, 466, 2498], [467, 2461, 534, 2489], [547, 2461, 716, 2489], [728, 2461, 841, 2498], [845, 2470, 917, 2489], [928, 2461, 1069, 2498], [1081, 2461, 1227, 2489], [1244, 2461, 1333, 2490], [1345, 2461, 1392, 2489], [1405, 2461, 1552, 2498], [1562, 2461, 1717, 2498], [1728, 2461, 1797, 2489], [1808, 2461, 1860, 2489], [1874, 2470, 1890, 2489], [1902, 2465, 2001, 2498], [2013, 2461, 2172, 2498], [375, 2512, 454, 2540], [467, 2512, 524, 2540], [536, 2516, 546, 2540], [547, 2512, 613, 2540], [626, 2512, 791, 2549], [802, 2512, 1002, 2549], [1018, 2512, 1079, 2546], [1094, 2512, 1118, 2540], [1130, 2512, 1221, 2540], [1234, 2512, 1328, 2549], [1341, 2521, 1380, 2540], [1392, 2512, 1519, 2549], [1532, 2512, 1568, 2540], [1576, 2513, 1658, 2540], [1670, 2512, 1845, 2540], [1862, 2512, 2030, 2546], [2043, 2521, 2088, 2541], [2099, 2512, 2173, 2540], [377, 2563, 481, 2591], [493, 2563, 554, 2591], [566, 2563, 710, 2592], [724, 2563, 782, 2591], [794, 2564, 846, 2591], [859, 2563, 961, 2591], [963, 2563, 1029, 2597], [1043, 2563, 1073, 2591], [1086, 2563, 1154, 2597], [1169, 2572, 1185, 2591], [1197, 2563, 1359, 2591], [1371, 2563, 1540, 2600], [1553, 2563, 1719, 2600], [376, 2674, 435, 2709], [489, 2674, 749, 2718], [763, 2674, 806, 2709], [817, 2674, 1042, 2718], [1056, 2674, 1234, 2709], [1249, 2674, 1327, 2709], [1341, 2684, 1364, 2709], [1379, 2674, 1520, 2718], [1534, 2677, 1704, 2718], [374, 2759, 466, 2787], [487, 2759, 499, 2787], [520, 2759, 719, 2787], [737, 2759, 787, 2787], [804, 2759, 887, 2787], [904, 2759, 1036, 2787], [1053, 2759, 1089, 2787], [1104, 2759, 1154, 2787], [1171, 2759, 1281, 2787], [1300, 2759, 1358, 2787], [1376, 2759, 1541, 2787], [1558, 2759, 1730, 2796], [1748, 2759, 1889, 2787], [1905, 2759, 2057, 2788], [2076, 2768, 2110, 2787], [2128, 2759, 2179, 2787], [374, 2810, 533, 2847], [548, 2810, 597, 2838], [613, 2810, 723, 2838], [739, 2810, 911, 2847], [927, 2810, 1052, 2838], [1066, 2810, 1121, 2838], [1136, 2810, 1216, 2838], [1231, 2810, 1346, 2847], [1361, 2810, 1521, 2847], [1537, 2810, 1568, 2838], [1583, 2810, 1633, 2838], [1648, 2810, 1790, 2838], [1805, 2810, 1942, 2847], [1958, 2810, 2118, 2844], [2135, 2810, 2173, 2838], [1259, 2935, 1295, 2964], [638, 1272, 661, 1318], [767, 1290, 800, 1320], [1255, 1272, 1278, 1318], [1393, 1272, 1406, 1318], [1522, 1292, 1535, 1320], [1978, 1272, 2034, 1320], [640, 1333, 676, 1358], [1249, 1333, 1285, 1358], [1860, 1333, 1896, 1358], [376, 1843, 482, 1880], [494, 1843, 522, 1871], [538, 1846, 670, 1879], [681, 1845, 712, 1871], [721, 1846, 765, 1871], [776, 1846, 913, 1872], [924, 1854, 941, 1871], [943, 1845, 1009, 1871], [1019, 1846, 1165, 1871], [1176, 1849, 1230, 1871], [1242, 1846, 1324, 1879], [1335, 1846, 1453, 1871], [1468, 1846, 1524, 1871], [1536, 1846, 1656, 1871], [1666, 1845, 1749, 1871], [1760, 1846, 1891, 1879], [1901, 1845, 1933, 1871], [1942, 1846, 1986, 1871], [1996, 1845, 2059, 1871], [2069, 1845, 2175, 1871], [375, 1893, 463, 1925], [477, 1893, 531, 1918], [544, 1897, 662, 1926], [674, 1892, 758, 1918], [772, 1893, 909, 1918], [921, 1893, 954, 1918], [965, 1893, 1009, 1918], [1023, 1893, 1087, 1918], [1100, 1893, 1202, 1926], [1217, 1893, 1323, 1926], [1338, 1901, 1382, 1918], [1395, 1893, 1516, 1926], [1528, 1897, 1555, 1918], [1568, 1901, 1649, 1926], [1664, 1897, 1730, 1926], [1752, 1893, 1790, 1918], [1803, 1897, 1862, 1926], [1877, 1893, 1917, 1925], [1932, 1893, 1976, 1918], [1990, 1893, 2138, 1926], [2150, 1893, 2173, 1918], [376, 1939, 530, 1964], [546, 1939, 623, 1972], [636, 1939, 676, 1971], [688, 1942, 714, 1964], [727, 1939, 767, 1971], [780, 1938, 959, 1972], [970, 1947, 1084, 1972], [1095, 1942, 1121, 1964], [1132, 1939, 1231, 1972], [1241, 1939, 1517, 1972], [1527, 1939, 1640, 1964], [1650, 1939, 1795, 1972], [1810, 1939, 1845, 1964], [1857, 1942, 1913, 1972], [1926, 1939, 1975, 1971], [1986, 1939, 2117, 1969], [2130, 1939, 2174, 1964], [377, 1985, 465, 2019], [477, 1994, 558, 2016], [571, 1986, 622, 2011], [634, 1994, 645, 2011], [647, 1986, 694, 2011], [705, 1986, 727, 2011], [738, 1994, 879, 2019], [890, 1990, 917, 2011], [927, 1986, 1010, 2011], [1019, 1986, 1062, 2011], [1074, 1990, 1201, 2019], [1217, 1986, 1295, 2012], [1307, 1986, 1349, 2011], [1361, 1985, 1492, 2011], [1503, 1986, 1564, 2011], [1575, 1986, 1702, 2019], [1712, 1986, 1777, 2019], [1779, 1986, 1820, 2011], [1832, 1986, 1874, 2011], [1886, 1994, 1937, 2011], [1948, 1986, 1976, 2011], [1986, 1986, 2029, 2011], [2041, 1986, 2177, 2019], [376, 2032, 418, 2057], [429, 2032, 558, 2065], [568, 2032, 591, 2057], [601, 2032, 702, 2057], [712, 2032, 772, 2057], [774, 2036, 827, 2057], [837, 2032, 890, 2057], [900, 2032, 975, 2065], [985, 2040, 1018, 2057], [1019, 2032, 1079, 2057], [1090, 2031, 1203, 2057], [1204, 2032, 1288, 2057], [1299, 2032, 1322, 2057], [1333, 2032, 1419, 2057], [1429, 2036, 1455, 2057], [1467, 2032, 1509, 2057], [1521, 2031, 1644, 2062], [1656, 2031, 1782, 2065], [1794, 2032, 1821, 2057], [1832, 2031, 1880, 2064], [1894, 2032, 1949, 2057], [1960, 2032, 2049, 2057], [2052, 2032, 2101, 2057], [2112, 2032, 2174, 2057], [375, 2079, 503, 2104], [514, 2082, 540, 2104], [550, 2079, 594, 2104], [604, 2078, 688, 2104], [697, 2079, 781, 2112], [794, 2079, 859, 2104], [870, 2079, 1147, 2112], [1157, 2078, 1240, 2112], [1250, 2079, 1368, 2112], [1379, 2082, 1404, 2104], [1416, 2082, 1474, 2112], [1486, 2079, 1534, 2111], [1547, 2079, 1650, 2112], [1661, 2082, 1686, 2104], [1698, 2082, 1756, 2112], [1768, 2079, 1808, 2111], [1820, 2087, 1889, 2104], [1900, 2079, 1979, 2112], [1990, 2087, 2006, 2104], [2016, 2079, 2139, 2112], [2151, 2079, 2173, 2104], [376, 2126, 505, 2151], [520, 2126, 621, 2156], [634, 2129, 660, 2151], [671, 2129, 728, 2159], [740, 2126, 780, 2158], [792, 2134, 807, 2151], [817, 2125, 946, 2159], [957, 2126, 1022, 2159], [1024, 2126, 1066, 2151], [1078, 2126, 1235, 2151], [1246, 2126, 1325, 2159], [1336, 2126, 1388, 2151], [1399, 2126, 1443, 2151], [1454, 2126, 1597, 2159], [1608, 2126, 1630, 2151], [1641, 2126, 1768, 2151], [1779, 2134, 1848, 2151], [1859, 2134, 1941, 2151], [1955, 2126, 2105, 2159], [2117, 2126, 2177, 2156], [377, 2176, 435, 2205], [447, 2172, 507, 2204], [519, 2180, 635, 2205], [638, 2176, 689, 2197], [699, 2172, 799, 2205], [811, 2172, 1093, 2205], [1104, 2172, 1195, 2205], [1206, 2180, 1243, 2205], [1255, 2176, 1282, 2197], [1293, 2172, 1338, 2197], [1349, 2172, 1403, 2197], [1413, 2171, 1446, 2197], [1454, 2172, 1499, 2197], [1510, 2172, 1582, 2202], [1595, 2180, 1628, 2197], [1630, 2172, 1691, 2197], [1702, 2176, 1729, 2197], [1740, 2176, 1798, 2205], [1810, 2172, 1870, 2204], [1882, 2172, 1927, 2197], [1938, 2171, 2004, 2197], [2016, 2180, 2128, 2205], [2130, 2172, 2173, 2197], [375, 2218, 442, 2244], [452, 2219, 532, 2252], [543, 2219, 587, 2244], [599, 2219, 672, 2250], [683, 2219, 774, 2252], [787, 2219, 885, 2252], [376, 2352, 538, 2385], [550, 2348, 580, 2376], [593, 2348, 688, 2376], [698, 2348, 911, 2385], [923, 2348, 1012, 2376], [1015, 2348, 1063, 2376], [1075, 2357, 1112, 2376], [1125, 2348, 1278, 2376], [1290, 2348, 1407, 2376], [1423, 2348, 1641, 2382], [1656, 2348, 1802, 2385], [1813, 2357, 1860, 2377], [1872, 2348, 1964, 2376], [1977, 2357, 2017, 2376], [2019, 2348, 2104, 2376], [2118, 2357, 2175, 2385], [375, 2399, 542, 2427], [555, 2408, 595, 2427], [607, 2399, 864, 2436], [876, 2399, 980, 2427], [994, 2399, 1029, 2427], [1039, 2399, 1095, 2427], [1108, 2399, 1239, 2433], [1253, 2408, 1299, 2427], [1310, 2399, 1385, 2428], [1398, 2399, 1584, 2436], [1597, 2408, 1668, 2427], [1680, 2399, 1740, 2427], [1753, 2408, 1769, 2427], [1780, 2408, 1851, 2436], [1863, 2399, 1996, 2427], [2009, 2399, 2107, 2428], [2118, 2408, 2174, 2427], [375, 2450, 413, 2478], [424, 2450, 578, 2487], [589, 2450, 630, 2487], [642, 2450, 765, 2487], [776, 2459, 831, 2478], [842, 2450, 878, 2478], [888, 2459, 904, 2478], [916, 2450, 1140, 2478], [1152, 2459, 1250, 2487], [1262, 2454, 1293, 2478], [1304, 2450, 1464, 2487], [1476, 2450, 1525, 2478], [1537, 2450, 1845, 2487], [1857, 2450, 2059, 2478], [438, 2502, 470, 2529], [481, 2505, 596, 2529], [599, 2505, 649, 2529], [661, 2501, 727, 2535], [740, 2501, 787, 2529], [799, 2501, 957, 2529], [969, 2501, 1134, 2538], [1146, 2501, 1266, 2529], [1279, 2501, 1457, 2538], [1468, 2505, 1498, 2529], [1513, 2501, 1589, 2536], [1601, 2501, 1727, 2529], [1741, 2510, 1757, 2529], [1768, 2501, 1857, 2529], [1867, 2501, 1960, 2529], [1969, 2501, 2173, 2538], [375, 2561, 428, 2589], [440, 2556, 504, 2589], [516, 2552, 547, 2580], [559, 2552, 608, 2580], [620, 2552, 690, 2580], [702, 2552, 851, 2586], [865, 2552, 978, 2589], [991, 2552, 1049, 2580], [1061, 2556, 1092, 2580], [1104, 2556, 1155, 2580], [1166, 2552, 1318, 2589], [1331, 2552, 1495, 2580], [1507, 2561, 1644, 2589], [1657, 2552, 1714, 2580], [1726, 2552, 1849, 2589], [1860, 2561, 1915, 2580], [1927, 2552, 1963, 2580], [1972, 2552, 2044, 2589], [2058, 2561, 2074, 2580], [2086, 2552, 2174, 2580], [376, 2606, 510, 2630], [521, 2602, 629, 2630], [631, 2602, 690, 2630], [698, 2602, 851, 2636], [864, 2602, 984, 2639], [996, 2602, 1043, 2630], [1055, 2602, 1175, 2630], [1187, 2602, 1313, 2639], [1325, 2602, 1372, 2630], [1382, 2602, 1459, 2631], [1471, 2602, 1544, 2630], [1546, 2611, 1591, 2630], [1593, 2602, 1751, 2639], [1764, 2602, 1948, 2630], [1965, 2602, 2008, 2630], [2021, 2611, 2037, 2630], [2048, 2602, 2177, 2630], [376, 2653, 411, 2681], [419, 2653, 547, 2690], [560, 2653, 633, 2681], [646, 2662, 745, 2681], [757, 2653, 949, 2681], [961, 2653, 991, 2681], [1003, 2662, 1143, 2690], [1157, 2653, 1205, 2681], [1217, 2653, 1339, 2681], [1350, 2653, 1422, 2681], [1436, 2657, 1487, 2681], [1498, 2657, 1655, 2690], [1668, 2653, 1760, 2681], [1770, 2653, 1976, 2690], [1979, 2653, 2102, 2690], [2115, 2657, 2145, 2681], [2158, 2662, 2174, 2681], [376, 2704, 524, 2741], [537, 2704, 707, 2732], [718, 2704, 844, 2732], [856, 2704, 887, 2732], [898, 2704, 946, 2732], [958, 2708, 1047, 2733], [1059, 2713, 1135, 2732], [1152, 2704, 1221, 2732], [1235, 2704, 1294, 2732], [1306, 2713, 1366, 2733], [1380, 2704, 1496, 2741], [1509, 2704, 1653, 2732], [1666, 2704, 1696, 2732], [1711, 2704, 1783, 2738], [1797, 2704, 1908, 2741], [1921, 2704, 1993, 2732], [2005, 2708, 2094, 2733], [2106, 2713, 2173, 2732], [374, 2764, 437, 2784], [449, 2755, 558, 2783], [559, 2755, 623, 2783], [635, 2755, 851, 2792], [865, 2755, 1010, 2792], [1024, 2764, 1041, 2783], [1053, 2752, 1137, 2793], [1151, 2755, 1344, 2792], [1346, 2755, 1406, 2783], [1419, 2755, 1459, 2783], [1470, 2755, 1614, 2792], [1627, 2755, 1794, 2783], [1811, 2756, 1864, 2783], [1877, 2755, 1954, 2783], [1965, 2755, 2076, 2784], [2089, 2755, 2174, 2783], [376, 2806, 481, 2834], [494, 2806, 525, 2834], [537, 2806, 586, 2834], [598, 2806, 813, 2843], [826, 2806, 955, 2834], [969, 2806, 999, 2834], [1011, 2806, 1068, 2834], [1082, 2806, 1272, 2843], [1259, 2935, 1291, 2963], [438, 242, 502, 270], [513, 242, 572, 279], [584, 242, 687, 279], [700, 242, 736, 270], [746, 242, 837, 270], [854, 242, 866, 270], [883, 242, 968, 271], [981, 242, 1044, 270], [1056, 251, 1096, 270], [1109, 242, 1281, 279], [1294, 242, 1410, 270], [1421, 242, 1447, 270], [1460, 242, 1573, 279], [1587, 242, 1730, 279], [1748, 242, 1849, 270], [1862, 242, 1912, 270], [1925, 242, 2035, 270], [2048, 242, 2173, 270], [375, 292, 502, 329], [505, 301, 549, 320], [562, 292, 627, 320], [639, 292, 735, 320], [746, 292, 820, 320], [833, 292, 968, 320], [979, 296, 1010, 320], [1023, 292, 1073, 320], [1084, 292, 1233, 329], [1248, 292, 1298, 320], [1310, 292, 1475, 320], [1488, 292, 1591, 320], [1593, 292, 1651, 320], [1663, 292, 1843, 329], [1856, 292, 1948, 320], [1959, 292, 2012, 320], [2023, 292, 2131, 320], [2143, 292, 2174, 320], [376, 347, 467, 371], [482, 343, 518, 371], [530, 347, 623, 372], [636, 352, 707, 371], [720, 343, 942, 380], [965, 343, 1135, 380], [1150, 343, 1235, 371], [1250, 343, 1460, 371], [1475, 352, 1523, 372], [1536, 352, 1669, 380], [1683, 343, 1755, 371], [1770, 352, 1787, 371], [1801, 343, 1911, 380], [1925, 343, 2034, 380], [2048, 343, 2173, 371], [376, 394, 547, 431], [557, 394, 629, 422], [640, 394, 829, 431], [844, 403, 898, 422], [908, 394, 956, 422], [967, 394, 1125, 422], [1137, 394, 1293, 431], [1301, 403, 1321, 422], [1322, 398, 1381, 431], [1393, 403, 1409, 422], [1418, 394, 1549, 431], [1560, 394, 1669, 422], [1670, 394, 1728, 422], [1736, 398, 1814, 431], [1825, 387, 1881, 428], [1894, 393, 1919, 423], [1935, 400, 1956, 424], [1975, 391, 2016, 432], [2028, 391, 2071, 432], [2084, 394, 2140, 422], [2151, 394, 2177, 422], [376, 445, 423, 473], [435, 445, 564, 473], [574, 445, 626, 473], [638, 449, 689, 473], [700, 449, 748, 482], [758, 445, 834, 473], [845, 445, 946, 479], [959, 454, 1005, 474], [1017, 445, 1121, 474], [1131, 449, 1161, 473], [1172, 445, 1220, 473], [1231, 445, 1337, 473], [1349, 445, 1477, 473], [1494, 446, 1545, 473], [1556, 445, 1701, 473], [1712, 445, 1788, 473], [1798, 445, 1846, 473], [1857, 449, 2029, 474], [2041, 445, 2173, 473], [376, 500, 406, 524], [422, 489, 530, 534], [548, 500, 576, 527], [591, 493, 675, 534], [697, 505, 725, 522], [746, 489, 866, 534], [882, 496, 1015, 524], [1030, 505, 1108, 524], [1123, 496, 1173, 524], [1188, 496, 1298, 524], [1313, 496, 1438, 524], [1452, 496, 1550, 530], [1567, 496, 1590, 524], [1603, 496, 1668, 525], [1682, 505, 1791, 524], [1807, 505, 1844, 524], [1860, 493, 1943, 534], [1961, 496, 2174, 533], [376, 550, 543, 583], [438, 597, 694, 634], [706, 597, 741, 625], [750, 597, 806, 625], [818, 597, 923, 634], [935, 597, 1055, 625], [1068, 597, 1092, 625], [1105, 606, 1175, 634], [1187, 606, 1246, 634], [1249, 597, 1419, 634], [1432, 597, 1479, 625], [1493, 597, 1670, 625], [1682, 597, 1817, 626], [1830, 597, 2010, 634], [2028, 606, 2044, 625], [2056, 597, 2180, 626], [376, 648, 470, 676], [481, 648, 506, 676], [520, 648, 594, 676], [596, 648, 656, 676], [669, 648, 717, 676], [729, 648, 889, 676], [901, 648, 1022, 676], [1034, 657, 1121, 685], [1133, 648, 1204, 676], [1218, 657, 1234, 676], [1246, 657, 1368, 685], [1369, 652, 1409, 676], [1411, 648, 1483, 676], [1496, 648, 1661, 685], [1673, 648, 1726, 676], [1738, 648, 1815, 676], [1827, 648, 1980, 676], [1992, 648, 2175, 685], [376, 699, 403, 733], [416, 699, 490, 727], [503, 700, 530, 733], [547, 699, 604, 734], [621, 699, 649, 727], [658, 699, 679, 727], [690, 699, 714, 727], [727, 699, 890, 727], [902, 699, 962, 727], [973, 699, 1021, 727], [1033, 699, 1153, 727], [1164, 699, 1216, 727], [1230, 699, 1346, 736], [1358, 708, 1412, 727], [1423, 699, 1470, 727], [1480, 692, 1525, 727], [1540, 703, 1618, 736], [1631, 699, 1754, 728], [1764, 699, 1902, 736], [1915, 699, 1962, 727], [1975, 699, 2104, 727], [2107, 699, 2173, 733], [375, 750, 538, 787], [550, 754, 613, 787], [624, 750, 660, 778], [669, 750, 716, 778], [730, 750, 823, 787], [836, 750, 883, 778], [894, 750, 992, 779], [1004, 750, 1051, 778], [1064, 750, 1229, 787], [1240, 750, 1293, 778], [1306, 754, 1356, 778], [1368, 754, 1416, 787], [1427, 750, 1504, 778], [1515, 750, 1588, 778], [1590, 750, 1645, 778], [1657, 750, 1764, 787], [1777, 759, 1816, 778], [1828, 754, 1857, 778], [1870, 750, 1917, 778], [1930, 750, 2035, 778], [2048, 750, 2178, 784], [374, 801, 461, 830], [463, 801, 628, 829], [640, 801, 665, 829], [678, 801, 897, 829], [910, 805, 940, 829], [953, 801, 1003, 829], [1014, 805, 1080, 838], [1092, 801, 1141, 829], [1154, 801, 1318, 829], [1331, 801, 1456, 829], [1469, 810, 1598, 838], [1600, 801, 1663, 829], [1675, 801, 1739, 829], [1753, 810, 1787, 829], [1800, 801, 1851, 829], [1868, 802, 1921, 829], [1935, 801, 2000, 829], [2011, 805, 2113, 838], [2124, 801, 2174, 829], [376, 851, 531, 888], [542, 851, 751, 888], [763, 851, 799, 879], [808, 851, 865, 879], [878, 851, 1001, 879], [1013, 851, 1044, 879], [1056, 851, 1105, 879], [1117, 851, 1331, 888], [1344, 851, 1467, 879], [376, 962, 436, 997], [508, 962, 725, 1006], [739, 962, 916, 997], [931, 962, 993, 997], [1006, 962, 1195, 1006], [1211, 953, 1306, 1008], [377, 1047, 497, 1076], [510, 1047, 707, 1084], [720, 1048, 774, 1075], [785, 1047, 903, 1084], [913, 1047, 1086, 1084], [1098, 1047, 1147, 1075], [1159, 1047, 1287, 1075], [1299, 1047, 1448, 1084], [1462, 1047, 1666, 1084], [1680, 1047, 1780, 1075], [1792, 1056, 1848, 1075], [1859, 1047, 1898, 1075], [1910, 1047, 1989, 1075], [2000, 1047, 2041, 1084], [2054, 1047, 2174, 1084], [376, 1098, 425, 1126], [437, 1098, 587, 1135], [599, 1098, 696, 1127], [710, 1098, 848, 1135], [932, 1185, 937, 1190], [1043, 1178, 1054, 1197], [1209, 1177, 1222, 1196], [1338, 1161, 1397, 1180], [895, 1195, 982, 1219], [1040, 1182, 1265, 1228], [1279, 1174, 1335, 1232], [1338, 1219, 1388, 1238], [1410, 1182, 1539, 1223], [1556, 1202, 1582, 1203], [1595, 1182, 1651, 1223], [2097, 1185, 2173, 1220], [374, 1273, 474, 1301], [486, 1273, 536, 1301], [547, 1273, 674, 1310], [689, 1265, 832, 1313], [849, 1282, 897, 1301], [910, 1273, 949, 1301], [960, 1273, 1098, 1310], [1115, 1274, 1156, 1301], [1169, 1273, 1254, 1301], [1267, 1273, 1342, 1308], [1354, 1273, 1444, 1310], [1457, 1282, 1473, 1301], [1485, 1273, 1654, 1310], [1667, 1273, 1826, 1310], [1840, 1282, 1887, 1301], [1900, 1273, 1987, 1310], [1998, 1273, 2089, 1310], [2101, 1273, 2174, 1301], [376, 1324, 412, 1352], [425, 1324, 495, 1352], [508, 1324, 637, 1359], [650, 1333, 680, 1352], [695, 1333, 711, 1352], [723, 1324, 942, 1352], [953, 1324, 1104, 1361], [761, 1397, 850, 1432], [908, 1388, 1254, 1440], [1299, 1401, 1342, 1425], [1392, 1394, 1555, 1435], [1611, 1397, 1785, 1431], [2097, 1397, 2173, 1432], [374, 1471, 467, 1505], [481, 1480, 528, 1499], [539, 1475, 640, 1508], [652, 1471, 701, 1499], [713, 1471, 878, 1499], [890, 1471, 926, 1499], [935, 1471, 985, 1499], [995, 1471, 1189, 1508], [1201, 1471, 1370, 1508], [1383, 1471, 1506, 1499], [1517, 1471, 1569, 1499], [1581, 1471, 1653, 1499], [1666, 1480, 1682, 1499], [1694, 1471, 1753, 1499], [1765, 1471, 1823, 1508], [1835, 1471, 2069, 1499], [2085, 1472, 2174, 1499], [375, 1522, 530, 1559], [543, 1531, 590, 1550], [602, 1522, 762, 1550], [775, 1522, 851, 1557], [863, 1522, 904, 1559], [916, 1522, 1105, 1559], [1118, 1532, 1155, 1557], [1172, 1535, 1200, 1544], [1215, 1532, 1257, 1556], [1274, 1535, 1302, 1544], [1318, 1522, 1335, 1551], [1348, 1526, 1379, 1550], [1391, 1522, 1493, 1550], [797, 1603, 802, 1608], [907, 1585, 925, 1598], [1257, 1591, 1270, 1610], [1691, 1604, 1695, 1607], [761, 1613, 828, 1631], [848, 1592, 915, 1650], [973, 1600, 1016, 1641], [1032, 1620, 1058, 1621], [1071, 1613, 1104, 1637], [1119, 1600, 1251, 1641], [1324, 1607, 1367, 1631], [1392, 1600, 1444, 1641], [1463, 1605, 1489, 1637], [1504, 1613, 1555, 1639], [1611, 1603, 1786, 1637], [784, 1643, 804, 1656], [907, 1637, 958, 1656], [374, 1699, 467, 1733], [480, 1708, 527, 1727], [538, 1699, 671, 1736], [683, 1699, 732, 1727], [744, 1699, 860, 1736], [872, 1699, 908, 1727], [917, 1699, 1063, 1728], [1077, 1708, 1095, 1727], [1111, 1712, 1139, 1721], [1154, 1708, 1174, 1727], [1188, 1716, 1214, 1717], [1228, 1708, 1263, 1733], [1277, 1699, 1377, 1727], [1389, 1709, 1416, 1733], [1436, 1709, 1473, 1727], [1489, 1687, 1589, 1739], [1601, 1709, 1649, 1736], [1664, 1699, 1721, 1727], [1733, 1699, 1873, 1727], [767, 1765, 785, 1778], [631, 1784, 698, 1812], [708, 1772, 764, 1830], [833, 1781, 946, 1822], [949, 1772, 1036, 1822], [1090, 1781, 1393, 1822], [1449, 1784, 1660, 1819], [1678, 1784, 1748, 1820], [1771, 1794, 1807, 1818], [1825, 1794, 1916, 1818], [658, 1824, 671, 1837], [767, 1818, 817, 1837], [376, 1868, 497, 1905], [512, 1868, 655, 1905], [667, 1868, 815, 1896], [827, 1868, 880, 1897], [896, 1877, 943, 1896], [955, 1868, 1057, 1896], [1069, 1868, 1119, 1896], [1130, 1868, 1300, 1905], [1312, 1868, 1462, 1905], [1473, 1869, 1645, 1905], [1657, 1868, 1795, 1905], [621, 1961, 626, 1966], [720, 1943, 738, 1956], [1089, 1949, 1102, 1968], [1557, 1962, 1561, 1965], [584, 1971, 651, 1989], [674, 1950, 688, 2008], [827, 1961, 883, 1992], [899, 1958, 940, 1999], [957, 1958, 1083, 1999], [1149, 1965, 1192, 1989], [1211, 1958, 1341, 1999], [1360, 1963, 1386, 1995], [1402, 1971, 1452, 1997], [1477, 1961, 1652, 1997], [1675, 1971, 1707, 1996], [1724, 1961, 1795, 1997], [1818, 1971, 1854, 1995], [1871, 1971, 1962, 1995], [2097, 1961, 2173, 1996], [611, 2001, 624, 2014], [720, 1995, 770, 2014], [438, 2048, 577, 2076], [590, 2048, 665, 2083], [679, 2048, 783, 2076], [796, 2048, 875, 2076], [887, 2048, 923, 2076], [936, 2048, 1128, 2085], [1140, 2052, 1328, 2085], [1341, 2048, 1416, 2083], [1430, 2048, 1460, 2076], [1472, 2048, 1521, 2076], [1533, 2048, 1710, 2076], [1727, 2045, 1763, 2086], [1779, 2065, 1805, 2066], [1819, 2045, 1857, 2086], [1876, 2050, 1902, 2082], [1918, 2058, 1957, 2082], [1973, 2048, 2002, 2083], [2020, 2049, 2073, 2082], [2090, 2048, 2177, 2083], [374, 2099, 473, 2127], [486, 2099, 574, 2127], [586, 2099, 725, 2127], [737, 2099, 862, 2136], [876, 2099, 923, 2127], [934, 2099, 1008, 2127], [1020, 2108, 1190, 2136], [1191, 2099, 1328, 2127], [1340, 2099, 1376, 2127], [1384, 2099, 1472, 2136], [1485, 2099, 1533, 2127], [1546, 2108, 1628, 2127], [1640, 2099, 1726, 2128], [1740, 2098, 1769, 2128], [1786, 2099, 1850, 2128], [1861, 2099, 2023, 2136], [2036, 2099, 2174, 2127], [377, 2150, 439, 2178], [453, 2150, 560, 2178], [573, 2159, 645, 2179], [656, 2154, 686, 2178], [699, 2150, 748, 2178], [760, 2150, 910, 2187], [921, 2150, 1058, 2187], [1061, 2150, 1171, 2184], [1183, 2150, 1255, 2178], [1268, 2159, 1284, 2178], [1297, 2150, 1386, 2187], [1398, 2150, 1614, 2178], [1632, 2150, 1681, 2178], [1693, 2150, 1763, 2178], [1774, 2159, 1802, 2178], [1804, 2159, 1882, 2178], [1894, 2150, 1990, 2187], [2003, 2154, 2033, 2178], [2046, 2154, 2174, 2179], [376, 2209, 415, 2228], [416, 2200, 509, 2228], [522, 2200, 646, 2237], [658, 2200, 766, 2228], [780, 2204, 808, 2228], [820, 2200, 894, 2228], [907, 2204, 971, 2237], [983, 2200, 1099, 2228], [1111, 2200, 1147, 2228], [1156, 2200, 1206, 2228], [1216, 2200, 1356, 2237], [1370, 2200, 1450, 2228], [1463, 2199, 1483, 2229], [1497, 2200, 1722, 2237], [1723, 2200, 1769, 2229], [1783, 2200, 1941, 2228], [1955, 2200, 2012, 2228], [2025, 2200, 2100, 2228], [438, 2251, 481, 2279], [495, 2260, 511, 2279], [523, 2260, 734, 2288], [746, 2251, 782, 2279], [791, 2251, 840, 2279], [853, 2251, 949, 2280], [960, 2251, 1125, 2280], [1138, 2251, 1195, 2279], [1208, 2251, 1356, 2285], [1369, 2251, 1538, 2288], [1551, 2251, 1688, 2279], [1702, 2260, 1758, 2279], [1769, 2251, 1808, 2279], [1818, 2251, 1952, 2288], [1953, 2251, 2015, 2279], [2028, 2251, 2113, 2280], [2125, 2251, 2174, 2279], [374, 2302, 521, 2339], [533, 2293, 613, 2340], [627, 2302, 769, 2339], [786, 2302, 830, 2330], [831, 2302, 984, 2339], [997, 2302, 1187, 2330], [1199, 2302, 1234, 2330], [1243, 2302, 1291, 2330], [1303, 2302, 1409, 2330], [1422, 2302, 1587, 2339], [1600, 2302, 1719, 2330], [1732, 2302, 1762, 2330], [1777, 2302, 1838, 2336], [1853, 2302, 1965, 2330], [1979, 2302, 2026, 2330], [2039, 2302, 2128, 2330], [2142, 2302, 2177, 2330], [376, 2353, 425, 2381], [437, 2353, 508, 2381], [520, 2353, 648, 2390], [659, 2353, 798, 2390], [810, 2353, 935, 2390], [947, 2353, 1065, 2381], [1078, 2362, 1114, 2381], [1116, 2353, 1260, 2390], [1272, 2353, 1376, 2381], [1391, 2350, 1498, 2391], [1512, 2352, 1558, 2387], [1573, 2353, 1630, 2381], [1643, 2362, 1678, 2381], [1690, 2353, 1748, 2381], [1761, 2353, 1885, 2381], [1897, 2353, 1993, 2390], [2005, 2353, 2130, 2381], [2143, 2357, 2174, 2381], [377, 2404, 462, 2432], [474, 2404, 523, 2432], [535, 2404, 687, 2441], [700, 2405, 753, 2432], [765, 2404, 904, 2441], [915, 2404, 935, 2432], [937, 2404, 1125, 2441], [1138, 2403, 1158, 2438], [1176, 2417, 1204, 2426], [1219, 2414, 1246, 2438], [1262, 2421, 1288, 2422], [1302, 2414, 1352, 2438], [1366, 2414, 1399, 2438], [1417, 2417, 1445, 2426], [1459, 2414, 1487, 2438], [1502, 2408, 1530, 2435], [1543, 2414, 1593, 2438], [1610, 2405, 1643, 2432], [1655, 2413, 1710, 2432], [1720, 2404, 1918, 2441], [1930, 2404, 1960, 2432], [1973, 2404, 2146, 2441], [2162, 2404, 2174, 2432], [374, 2463, 402, 2482], [404, 2454, 491, 2491], [503, 2454, 580, 2482], [592, 2458, 622, 2482], [634, 2454, 753, 2491], [766, 2453, 786, 2483], [798, 2454, 839, 2491], [851, 2454, 901, 2482], [913, 2454, 1100, 2491], [1112, 2464, 1151, 2489], [1166, 2454, 1277, 2483], [439, 2505, 561, 2534], [579, 2505, 821, 2533], [840, 2505, 931, 2542], [950, 2505, 998, 2533], [1015, 2505, 1065, 2533], [1083, 2505, 1248, 2533], [1266, 2505, 1389, 2533], [1408, 2505, 1596, 2542], [1613, 2505, 1656, 2540], [1677, 2505, 1709, 2533], [1725, 2505, 1894, 2542], [1915, 2505, 2005, 2534], [2023, 2505, 2173, 2542], [376, 2556, 581, 2593], [595, 2556, 760, 2584], [776, 2565, 808, 2584], [824, 2556, 895, 2585], [910, 2565, 942, 2584], [958, 2556, 1048, 2585], [1062, 2556, 1213, 2593], [1229, 2556, 1316, 2593], [1329, 2556, 1589, 2593], [1605, 2556, 1663, 2584], [1677, 2560, 1808, 2590], [1825, 2565, 1872, 2585], [1887, 2560, 1969, 2584], [1983, 2560, 2113, 2584], [2127, 2556, 2175, 2584], [374, 2607, 501, 2644], [514, 2607, 585, 2635], [597, 2607, 727, 2644], [745, 2607, 920, 2644], [933, 2607, 949, 2636], [963, 2611, 1101, 2644], [1114, 2607, 1164, 2635], [1176, 2607, 1295, 2644], [1308, 2607, 1536, 2635], [1549, 2607, 1612, 2635], [1623, 2616, 1671, 2636], [1684, 2611, 1765, 2635], [1777, 2607, 1867, 2635], [1879, 2611, 1910, 2635], [1923, 2607, 2099, 2644], [2110, 2607, 2129, 2635], [2143, 2611, 2173, 2635], [375, 2658, 482, 2686], [494, 2658, 626, 2695], [643, 2658, 809, 2695], [821, 2658, 869, 2686], [881, 2667, 1081, 2695], [1093, 2658, 1128, 2686], [1136, 2658, 1192, 2686], [1205, 2658, 1334, 2692], [1347, 2658, 1394, 2686], [1405, 2658, 1495, 2695], [1504, 2658, 1539, 2686], [1547, 2658, 1737, 2695], [1749, 2658, 1820, 2687], [1831, 2658, 1878, 2686], [1890, 2658, 1996, 2686], [2008, 2658, 2173, 2695], [376, 2708, 478, 2736], [479, 2708, 571, 2736], [582, 2708, 670, 2736], [683, 2708, 714, 2736], [726, 2708, 775, 2736], [787, 2708, 938, 2745], [950, 2717, 1020, 2736], [1033, 2708, 1097, 2743], [1109, 2708, 1271, 2745], [1283, 2708, 1333, 2743], [438, 2759, 502, 2787], [514, 2768, 587, 2796], [601, 2768, 685, 2787], [699, 2759, 832, 2796], [846, 2768, 878, 2787], [890, 2759, 1051, 2796], [1064, 2759, 1096, 2787], [1108, 2759, 1199, 2787], [1215, 2759, 1227, 2787], [1244, 2759, 1361, 2796], [1373, 2759, 1454, 2787], [1471, 2759, 1547, 2787], [1558, 2759, 1608, 2787], [1620, 2759, 1750, 2787], [1765, 2759, 1823, 2787], [1834, 2759, 1976, 2796], [1978, 2759, 2040, 2787], [2050, 2759, 2100, 2787], [2112, 2763, 2173, 2788], [376, 2810, 544, 2847], [558, 2810, 670, 2839], [684, 2819, 767, 2847], [780, 2819, 819, 2838], [831, 2814, 862, 2838], [874, 2810, 923, 2838], [935, 2810, 1086, 2847], [1098, 2810, 1210, 2839], [1222, 2810, 1258, 2838], [1267, 2810, 1317, 2838], [1327, 2810, 1473, 2847], [1259, 2935, 1295, 2963], [1043, 261, 1365, 322], [1389, 261, 1607, 309], [376, 1039, 484, 1076], [496, 1039, 524, 1068], [541, 1042, 675, 1075], [686, 1041, 719, 1067], [727, 1042, 771, 1067], [783, 1042, 920, 1075], [931, 1045, 988, 1067], [998, 1042, 1082, 1075], [1093, 1042, 1205, 1067], [1217, 1042, 1282, 1068], [1293, 1050, 1323, 1067], [1338, 1053, 1364, 1062], [1381, 1039, 1467, 1076], [1481, 1042, 1554, 1072], [1568, 1042, 1641, 1072], [1655, 1042, 1728, 1072], [1742, 1042, 1815, 1072], [1829, 1042, 1902, 1072], [1916, 1042, 1989, 1072], [2004, 1042, 2077, 1072], [2091, 1039, 2179, 1076], [374, 1088, 432, 1113], [444, 1088, 609, 1113], [622, 1096, 684, 1113], [695, 1096, 714, 1113], [726, 1088, 759, 1113], [768, 1088, 813, 1113], [825, 1088, 902, 1121], [914, 1088, 1002, 1121], [1014, 1088, 1107, 1113], [1120, 1096, 1141, 1121], [1154, 1088, 1177, 1113], [1191, 1088, 1267, 1113], [1269, 1096, 1327, 1113], [1340, 1088, 1384, 1113], [1396, 1088, 1481, 1113], [1483, 1088, 1575, 1118], [1589, 1088, 1655, 1113], [1666, 1088, 1711, 1113], [1722, 1088, 1804, 1113], [1815, 1088, 1876, 1113], [1889, 1088, 2014, 1121], [2026, 1088, 2070, 1113], [2081, 1088, 2173, 1121], [374, 1132, 406, 1169], [416, 1132, 471, 1169], [486, 1135, 543, 1160], [553, 1135, 660, 1160], [671, 1143, 705, 1160], [707, 1135, 837, 1168], [848, 1134, 881, 1160], [889, 1135, 934, 1160], [945, 1135, 1008, 1160], [1020, 1143, 1064, 1160], [1076, 1135, 1171, 1161], [1183, 1135, 1210, 1160], [1221, 1135, 1276, 1165], [1289, 1135, 1381, 1161], [1391, 1143, 1456, 1168], [1467, 1135, 1495, 1160], [1506, 1135, 1591, 1161], [1602, 1139, 1629, 1160], [1639, 1135, 1707, 1160], [1718, 1139, 1777, 1168], [1788, 1134, 1933, 1168], [1944, 1135, 1989, 1160], [2000, 1135, 2115, 1168], [2127, 1143, 2179, 1164], [374, 1182, 431, 1207], [442, 1182, 577, 1215], [588, 1185, 643, 1207], [654, 1182, 737, 1215], [749, 1182, 867, 1207], [879, 1190, 895, 1207], [907, 1182, 930, 1207], [943, 1182, 1018, 1207], [1020, 1190, 1076, 1207], [0, 0, 2550, 3300], [1088, 1181, 1160, 1207], [1162, 1182, 1250, 1207], [373, 1272, 557, 1310], [569, 1273, 587, 1302], [599, 1276, 735, 1301], [746, 1276, 814, 1301], [826, 1275, 869, 1301], [879, 1276, 1014, 1309], [1025, 1276, 1133, 1301], [1144, 1275, 1176, 1301], [1185, 1276, 1339, 1309], [1350, 1276, 1367, 1301], [394, 1341, 416, 1363], [488, 1338, 556, 1363], [567, 1337, 629, 1363], [639, 1338, 740, 1371], [757, 1328, 816, 1363], [829, 1346, 903, 1370], [918, 1337, 960, 1363], [976, 1342, 1035, 1365], [1048, 1338, 1110, 1368], [1122, 1338, 1179, 1363], [1191, 1328, 1280, 1364], [395, 1387, 416, 1409], [490, 1384, 560, 1409], [573, 1392, 633, 1409], [648, 1392, 761, 1417], [763, 1384, 854, 1409], [866, 1384, 957, 1409], [981, 1381, 1064, 1418], [1085, 1395, 1111, 1404], [1128, 1379, 1180, 1414], [1199, 1395, 1225, 1404], [1243, 1392, 1271, 1417], [1286, 1387, 1312, 1412], [1325, 1392, 1400, 1414], [1417, 1387, 1443, 1412], [1456, 1392, 1502, 1414], [1519, 1378, 1536, 1409], [1553, 1395, 1579, 1404], [1597, 1392, 1625, 1417], [1640, 1387, 1666, 1412], [1680, 1392, 1754, 1414], [1772, 1399, 1796, 1400], [1810, 1392, 1857, 1414], [1874, 1383, 1893, 1414], [1911, 1395, 1937, 1404], [1955, 1392, 2002, 1414], [2019, 1378, 2038, 1409], [2056, 1395, 2082, 1404], [2102, 1392, 2177, 1414], [439, 1425, 578, 1459], [381, 1480, 416, 1503], [490, 1478, 560, 1503], [573, 1486, 633, 1503], [648, 1486, 761, 1511], [763, 1478, 854, 1503], [866, 1478, 957, 1503], [981, 1472, 1064, 1512], [1085, 1489, 1111, 1498], [1126, 1478, 1148, 1508], [1163, 1476, 1180, 1507], [1199, 1489, 1225, 1498], [1243, 1486, 1271, 1511], [1286, 1481, 1312, 1506], [1325, 1486, 1400, 1507], [1418, 1493, 1442, 1494], [1456, 1486, 1502, 1508], [1519, 1476, 1534, 1503], [1553, 1489, 1579, 1498], [1597, 1486, 1625, 1511], [1640, 1481, 1666, 1506], [1680, 1486, 1754, 1507], [1771, 1481, 1797, 1506], [1810, 1486, 1857, 1508], [1874, 1477, 1893, 1507], [1911, 1489, 1937, 1498], [1955, 1486, 2002, 1508], [2019, 1477, 2038, 1503], [2056, 1489, 2082, 1498], [2102, 1486, 2177, 1508], [439, 1524, 578, 1554], [376, 1651, 403, 1693], [466, 1651, 616, 1693], [634, 1651, 1049, 1693], [1067, 1652, 1147, 1693], [1164, 1651, 1371, 1693], [374, 1758, 474, 1786], [486, 1767, 570, 1786], [582, 1758, 760, 1795], [772, 1758, 927, 1795], [939, 1758, 988, 1786], [1000, 1757, 1030, 1792], [1046, 1767, 1133, 1786], [1144, 1758, 1180, 1786], [1189, 1758, 1239, 1786], [1252, 1758, 1390, 1786], [1402, 1759, 1455, 1786], [1467, 1758, 1647, 1795], [1657, 1758, 1698, 1795], [1711, 1767, 1747, 1786], [1759, 1757, 1896, 1798], [1908, 1758, 2028, 1786], [2040, 1767, 2096, 1786], [2109, 1758, 2174, 1786], [375, 1809, 412, 1837], [424, 1809, 531, 1837], [548, 1810, 581, 1837], [593, 1809, 650, 1837], [664, 1809, 778, 1837], [790, 1818, 835, 1837], [848, 1809, 920, 1837], [922, 1809, 1010, 1837], [1022, 1818, 1062, 1837], [1075, 1818, 1091, 1837], [1103, 1809, 1283, 1846], [1296, 1809, 1395, 1838], [1406, 1809, 1453, 1837], [1462, 1819, 1483, 1845], [1497, 1822, 1525, 1831], [1541, 1809, 1568, 1843], [1581, 1809, 1684, 1837], [1697, 1809, 1866, 1846], [1880, 1818, 1896, 1837], [1908, 1809, 1966, 1837], [1980, 1809, 2112, 1837], [2123, 1809, 2174, 1837], [376, 1868, 459, 1887], [471, 1868, 580, 1896], [582, 1859, 704, 1888], [715, 1859, 763, 1887], [775, 1868, 831, 1896], [843, 1858, 876, 1900], [890, 1859, 962, 1887], [972, 1869, 993, 1895], [1009, 1861, 1035, 1893], [1054, 1859, 1077, 1887], [1095, 1860, 1148, 1887], [1160, 1859, 1224, 1887], [1236, 1859, 1343, 1896], [1355, 1868, 1446, 1888], [1457, 1859, 1506, 1887], [1516, 1869, 1537, 1895], [1551, 1872, 1579, 1881], [1595, 1869, 1632, 1887], [1646, 1868, 1723, 1887], [376, 1972, 434, 2007], [489, 1972, 640, 2007], [660, 1972, 870, 2016], [884, 1972, 946, 2007], [960, 1962, 1056, 2018], [376, 2058, 432, 2085], [443, 2057, 552, 2085], [563, 2057, 726, 2094], [740, 2057, 771, 2093], [786, 2070, 814, 2079], [830, 2057, 860, 2092], [874, 2057, 923, 2085], [935, 2057, 1005, 2085], [1017, 2061, 1047, 2085], [1059, 2057, 1108, 2085], [1119, 2061, 1348, 2094], [1359, 2057, 1406, 2085], [1419, 2057, 1494, 2092], [1507, 2057, 1631, 2085], [1645, 2061, 1675, 2085], [829, 2140, 918, 2175], [941, 2137, 1020, 2178], [1040, 2150, 1077, 2168], [1096, 2131, 1202, 2183], [1206, 2132, 1269, 2179], [1285, 2131, 1374, 2168], [1380, 2140, 1452, 2176], [1485, 2144, 1528, 2168], [1547, 2137, 1627, 2178], [1645, 2139, 1718, 2174], [2097, 2140, 2173, 2175], [376, 2224, 515, 2252], [528, 2224, 603, 2259], [616, 2224, 641, 2252], [655, 2224, 780, 2261], [791, 2224, 842, 2252], [855, 2233, 871, 2252], [883, 2224, 1003, 2253], [1015, 2224, 1051, 2252], [1060, 2224, 1109, 2252], [1121, 2224, 1296, 2252], [1298, 2224, 1520, 2261], [1533, 2224, 1727, 2261], [1740, 2224, 1850, 2259], [1863, 2224, 1911, 2252], [1922, 2224, 2022, 2252], [2035, 2233, 2051, 2252], [2063, 2224, 2175, 2261], [376, 2275, 411, 2303], [420, 2275, 585, 2303], [598, 2275, 780, 2312], [795, 2284, 843, 2303], [854, 2275, 944, 2303], [946, 2275, 1052, 2309], [438, 2327, 476, 2354], [474, 2326, 607, 2354], [620, 2335, 637, 2354], [650, 2326, 835, 2363], [849, 2326, 1012, 2363], [1023, 2326, 1118, 2354], [1131, 2335, 1172, 2354], [1185, 2326, 1235, 2354], [1247, 2326, 1357, 2354], [1371, 2326, 1631, 2355], [1643, 2327, 1775, 2355], [1788, 2326, 1904, 2361], [1918, 2326, 2022, 2354], [2024, 2326, 2092, 2354], [2105, 2326, 2179, 2360], [374, 2377, 447, 2405], [462, 2377, 586, 2405], [601, 2377, 633, 2405], [646, 2377, 769, 2414], [783, 2386, 840, 2405], [852, 2377, 892, 2405], [905, 2377, 988, 2414], [1002, 2377, 1176, 2414], [1191, 2377, 1245, 2405], [1258, 2377, 1306, 2405], [1320, 2377, 1396, 2412], [1411, 2377, 1461, 2405], [1475, 2377, 1608, 2405], [1621, 2377, 1647, 2405], [1661, 2377, 1843, 2414], [1857, 2377, 1959, 2406], [1972, 2386, 2030, 2405], [2042, 2377, 2081, 2405], [2095, 2377, 2179, 2406], [376, 2428, 529, 2465], [542, 2428, 607, 2463], [618, 2428, 781, 2465], [794, 2428, 840, 2463], [854, 2428, 1023, 2465], [1037, 2428, 1238, 2465], [1252, 2428, 1336, 2456], [1348, 2428, 1411, 2456], [1421, 2428, 1469, 2456], [1482, 2437, 1498, 2456], [1509, 2428, 1626, 2456], [1637, 2437, 1730, 2465], [1741, 2428, 1777, 2456], [1821, 2428, 1934, 2462], [1948, 2437, 2023, 2456], [2035, 2428, 2175, 2465], [376, 2478, 688, 2515], [701, 2478, 777, 2513], [790, 2487, 846, 2506], [856, 2478, 894, 2506], [906, 2478, 1105, 2515], [1122, 2479, 1179, 2506], [1191, 2478, 1238, 2506], [1249, 2478, 1361, 2507], [1371, 2478, 1437, 2506], [1448, 2478, 1663, 2515], [1678, 2487, 1694, 2506], [1704, 2478, 1810, 2515], [1821, 2478, 1975, 2507], [1989, 2487, 2115, 2515], [2116, 2478, 2173, 2506], [375, 2529, 550, 2566], [438, 2580, 575, 2608], [590, 2580, 709, 2617], [722, 2580, 808, 2615], [822, 2580, 961, 2608], [973, 2580, 1009, 2608], [1022, 2581, 1106, 2608], [1118, 2580, 1298, 2608], [1042, 2654, 1158, 2701], [1172, 2667, 1200, 2694], [1214, 2660, 1306, 2701], [1321, 2676, 1349, 2685], [1365, 2663, 1437, 2699], [2097, 2694, 2173, 2729], [1040, 2724, 1345, 2765], [1399, 2729, 1464, 2761], [1481, 2727, 1507, 2763], [374, 2810, 474, 2838], [487, 2820, 510, 2838], [523, 2810, 547, 2838], [562, 2819, 578, 2838], [590, 2811, 745, 2847], [757, 2810, 924, 2847], [942, 2810, 1037, 2838], [1050, 2819, 1098, 2838], [1110, 2814, 1170, 2838], [1181, 2810, 1317, 2847], [1329, 2819, 1423, 2838], [1441, 2810, 1534, 2838], [1549, 2807, 1629, 2848], [1647, 2816, 1673, 2839], [1690, 2809, 1710, 2839], [1724, 2819, 1743, 2838], [1744, 2807, 1852, 2848], [1870, 2823, 1898, 2832], [1913, 2809, 1943, 2839], [1259, 2935, 1293, 2964], [438, 242, 467, 270], [482, 239, 562, 280], [584, 248, 610, 271], [631, 241, 661, 276], [678, 242, 749, 270], [763, 242, 813, 270], [827, 243, 912, 270], [927, 242, 1085, 270], [1100, 239, 1226, 280], [1243, 259, 1269, 260], [1285, 239, 1319, 280], [1341, 255, 1369, 264], [1388, 242, 1415, 276], [1432, 242, 1554, 279], [1569, 242, 1631, 270], [1646, 252, 1669, 270], [1688, 255, 1716, 264], [1735, 242, 1752, 271], [1768, 246, 1849, 270], [1861, 242, 1935, 270], [1951, 242, 2009, 270], [2024, 251, 2050, 270], [2064, 251, 2122, 270], [2135, 242, 2174, 270], [376, 292, 519, 320], [533, 292, 742, 329], [755, 292, 796, 329], [811, 292, 933, 329], [946, 292, 996, 320], [1010, 292, 1105, 320], [1119, 296, 1234, 329], [1248, 285, 1349, 320], [1354, 301, 1380, 320], [1397, 305, 1425, 314], [1443, 292, 1515, 328], [1535, 292, 1608, 320], [1622, 301, 1680, 320], [1691, 292, 1730, 320], [1744, 292, 1824, 320], [1838, 292, 1869, 320], [1883, 289, 1967, 330], [1984, 292, 2057, 320], [2071, 292, 2173, 329], [376, 347, 406, 371], [419, 343, 468, 371], [479, 343, 646, 380], [646, 343, 814, 371], [826, 343, 862, 371], [873, 343, 919, 371], [935, 343, 1129, 380], [1143, 343, 1170, 371], [1179, 343, 1229, 371], [1242, 343, 1374, 371], [1387, 347, 1418, 371], [1431, 336, 1533, 371], [1537, 352, 1563, 371], [1578, 356, 1606, 365], [1621, 343, 1657, 371], [1661, 343, 1753, 379], [1766, 343, 1797, 371], [1809, 343, 1841, 371], [1842, 343, 1994, 371], [2005, 343, 2041, 371], [2051, 343, 2100, 371], [2111, 343, 2174, 371], [380, 391, 459, 432], [478, 396, 504, 428], [522, 393, 552, 428], [567, 394, 639, 422], [651, 394, 674, 422], [686, 394, 788, 422], [803, 394, 890, 429], [908, 394, 1082, 428], [1096, 394, 1155, 422], [1169, 403, 1240, 422], [1252, 394, 1278, 422], [1291, 394, 1399, 428], [1414, 394, 1472, 422], [1485, 403, 1533, 423], [1546, 394, 1623, 422], [1636, 398, 1667, 422], [1680, 394, 1823, 422], [1835, 394, 1908, 431], [1921, 394, 1971, 422], [1983, 394, 2091, 422], [2103, 403, 2174, 422], [380, 442, 459, 483], [476, 444, 549, 474], [438, 497, 495, 524], [509, 505, 566, 533], [580, 496, 672, 533], [686, 506, 709, 524], [723, 505, 783, 524], [797, 505, 854, 524], [867, 496, 972, 524], [985, 496, 1035, 524], [1049, 496, 1289, 533], [1303, 500, 1407, 524], [1420, 505, 1446, 524], [1461, 505, 1493, 524], [1508, 505, 1555, 530], [1575, 509, 1603, 518], [1624, 489, 1740, 534], [1755, 500, 1783, 527], [1798, 490, 1982, 534], [2003, 496, 2177, 530], [376, 546, 554, 583], [566, 546, 613, 574], [625, 555, 651, 574], [662, 546, 787, 574], [800, 550, 831, 574], [843, 546, 892, 574], [903, 546, 1041, 583], [1053, 555, 1072, 574], [1074, 546, 1214, 583], [1226, 546, 1275, 574], [1288, 546, 1386, 574], [1399, 546, 1486, 575], [1498, 546, 1534, 574], [1544, 556, 1576, 574], [438, 597, 487, 625], [499, 597, 627, 626], [641, 606, 769, 634], [770, 597, 827, 625], [841, 601, 871, 625], [884, 597, 969, 626], [985, 591, 1088, 636], [1105, 610, 1133, 619], [1149, 591, 1197, 626], [1214, 598, 1287, 625], [1301, 597, 1428, 626], [1442, 597, 1466, 625], [1480, 597, 1529, 625], [1539, 597, 1625, 626], [1634, 598, 1777, 634], [1047, 688, 1089, 723], [1108, 699, 1145, 717], [1161, 680, 1223, 718], [1240, 706, 1266, 707], [1284, 680, 1412, 728], [1430, 702, 1458, 711], [1474, 689, 1501, 725], [2097, 689, 2173, 724], [374, 780, 472, 809], [482, 780, 521, 808], [523, 780, 595, 808], [606, 780, 716, 808], [727, 780, 763, 808], [770, 780, 859, 817], [872, 780, 966, 808], [969, 780, 1082, 808], [1092, 780, 1123, 808], [1134, 780, 1181, 808], [1194, 780, 1296, 808], [1307, 780, 1437, 814], [1450, 780, 1548, 809], [1559, 780, 1663, 808], [1676, 780, 1706, 808], [1717, 780, 1774, 808], [1785, 789, 1986, 817], [2001, 780, 2072, 814], [2089, 780, 2178, 814], [376, 831, 425, 859], [437, 831, 503, 859], [514, 831, 538, 859], [552, 835, 583, 859], [595, 831, 658, 859], [670, 831, 719, 859], [730, 835, 796, 859], [808, 831, 844, 859], [853, 831, 902, 859], [914, 831, 1051, 859], [1064, 830, 1118, 865], [1131, 831, 1179, 859], [1190, 831, 1290, 859], [1302, 840, 1349, 859], [1360, 840, 1415, 859], [1427, 831, 1582, 859], [1595, 831, 1727, 865], [1741, 831, 1840, 859], [1852, 831, 1883, 859], [1895, 831, 1952, 859], [1966, 840, 2036, 859], [2047, 831, 2130, 859], [2143, 835, 2174, 859], [376, 881, 425, 909], [437, 881, 573, 909], [1128, 927, 1419, 971], [2097, 932, 2173, 967], [377, 1007, 450, 1036], [452, 1007, 661, 1035], [674, 1007, 758, 1035], [761, 1007, 847, 1035], [859, 1007, 908, 1035], [920, 1007, 1081, 1036], [1093, 1004, 1124, 1035], [1138, 1016, 1194, 1035], [1205, 1007, 1244, 1035], [1256, 1007, 1418, 1044], [1431, 1016, 1461, 1035], [1034, 1095, 1047, 1123], [1320, 1089, 1378, 1129], [1016, 1140, 1064, 1142], [1082, 1136, 1110, 1145], [1129, 1092, 1534, 1160], [2097, 1123, 2173, 1158], [1018, 1150, 1060, 1190], [1130, 1147, 1303, 1190], [1318, 1155, 1346, 1182], [1359, 1148, 1420, 1189], [1454, 1148, 1517, 1186], [438, 1235, 502, 1263], [515, 1235, 574, 1272], [588, 1235, 658, 1263], [671, 1235, 703, 1263], [716, 1235, 774, 1264], [777, 1235, 846, 1263], [861, 1239, 892, 1263], [906, 1235, 1062, 1263], [1076, 1235, 1126, 1263], [1140, 1235, 1248, 1263], [1263, 1235, 1381, 1263], [1395, 1235, 1427, 1263], [1441, 1235, 1517, 1270], [1531, 1235, 1572, 1272], [1586, 1235, 1676, 1272], [1691, 1235, 1740, 1263], [1755, 1235, 1912, 1272], [1926, 1235, 2174, 1272], [377, 1278, 478, 1313], [491, 1289, 519, 1316], [532, 1285, 579, 1313], [594, 1298, 622, 1307], [638, 1278, 735, 1324], [737, 1285, 826, 1320], [839, 1285, 970, 1322], [983, 1294, 999, 1313], [1010, 1289, 1111, 1313], [1122, 1294, 1163, 1321], [1180, 1298, 1208, 1307], [1226, 1278, 1340, 1324], [1345, 1279, 1388, 1313], [1391, 1294, 1444, 1319], [1457, 1285, 1506, 1313], [1507, 1279, 1630, 1324], [1647, 1298, 1675, 1307], [1690, 1278, 1740, 1324], [1747, 1278, 1863, 1323], [1876, 1289, 1904, 1316], [1916, 1282, 1978, 1323], [1985, 1279, 2085, 1320], [2102, 1285, 2174, 1313], [375, 1336, 475, 1370], [488, 1336, 538, 1364], [550, 1337, 678, 1364], [690, 1336, 827, 1364], [840, 1336, 916, 1371], [928, 1336, 1071, 1364], [1538, 1459, 1641, 1504], [1394, 1518, 1444, 1560], [1452, 1518, 1567, 1560], [1582, 1526, 1610, 1553], [1623, 1519, 1711, 1560], [1717, 1518, 1798, 1556], [1078, 1580, 1088, 1621], [1095, 1577, 1182, 1621], [1198, 1600, 1224, 1601], [1238, 1577, 1312, 1621], [1319, 1577, 1413, 1621], [743, 1504, 806, 1522], [823, 1511, 871, 1513], [919, 1507, 947, 1516], [993, 1504, 1016, 1522], [1030, 1485, 1218, 1533], [1235, 1485, 1375, 1532], [1197, 1636, 1207, 1677], [1215, 1634, 1295, 1678], [1169, 1695, 1182, 1714], [993, 1739, 1016, 1757], [1030, 1746, 1056, 1747], [1078, 1698, 1182, 1771], [1206, 1696, 1245, 1796], [1261, 1746, 1287, 1747], [1309, 1696, 1443, 1796], [1463, 1753, 1467, 1765], [1081, 1754, 1179, 1797], [1350, 1756, 1370, 1786], [376, 1884, 434, 1912], [446, 1884, 594, 1912], [1209, 1919, 1219, 1960], [1282, 1916, 1313, 1960], [1440, 1919, 1523, 1960], [1226, 1931, 1273, 1956], [1300, 1941, 1313, 1960], [1457, 1931, 1544, 1956], [1029, 1957, 1187, 1978], [1363, 1950, 1418, 1978], [1553, 1918, 1598, 2018], [2097, 1950, 2173, 1985], [1212, 1973, 1310, 2018], [1337, 1918, 1357, 2018], [1481, 1978, 1501, 2008], [438, 2053, 480, 2081], [494, 2053, 598, 2082], [609, 2053, 656, 2081], [667, 2054, 769, 2087], [786, 2053, 958, 2090], [969, 2053, 1015, 2088], [1029, 2053, 1077, 2081], [1089, 2053, 1264, 2090], [1277, 2057, 1417, 2081], [1429, 2053, 1465, 2081], [1477, 2046, 1592, 2091], [1607, 2057, 1635, 2084], [1648, 2050, 1709, 2091], [1726, 2053, 1827, 2082], [1841, 2062, 1897, 2081], [1910, 2057, 1939, 2081], [1952, 2057, 2090, 2090], [2102, 2053, 2174, 2081], [377, 2104, 431, 2138], [447, 2104, 504, 2132], [517, 2113, 558, 2140], [573, 2104, 603, 2132], [615, 2104, 709, 2132], [720, 2104, 801, 2138], [816, 2113, 850, 2132], [862, 2104, 911, 2132], [923, 2104, 1036, 2133], [1048, 2104, 1184, 2132], [1195, 2113, 1265, 2132], [1278, 2104, 1309, 2132], [1322, 2101, 1406, 2142], [1421, 2104, 1501, 2132], [438, 2155, 502, 2183], [517, 2155, 615, 2183], [629, 2155, 714, 2183], [730, 2164, 779, 2183], [793, 2155, 954, 2192], [970, 2164, 1001, 2183], [1016, 2155, 1215, 2192], [1230, 2155, 1261, 2183], [1275, 2155, 1451, 2192], [1465, 2155, 1493, 2183], [1517, 2155, 1561, 2183], [1577, 2164, 1594, 2183], [1609, 2155, 1752, 2192], [1767, 2155, 1909, 2183], [1923, 2159, 1984, 2184], [1999, 2155, 2173, 2183], [377, 2214, 425, 2233], [437, 2205, 582, 2233], [599, 2205, 719, 2234], [720, 2205, 795, 2233], [807, 2205, 922, 2242], [935, 2214, 993, 2242], [1005, 2205, 1031, 2233], [1045, 2205, 1133, 2233], [1146, 2205, 1276, 2242], [1291, 2205, 1349, 2233], [1362, 2205, 1496, 2234], [1508, 2214, 1534, 2233], [1546, 2205, 1572, 2233], [1585, 2205, 1670, 2233], [1682, 2205, 1804, 2242], [1816, 2209, 1847, 2233], [1859, 2205, 1909, 2233], [1920, 2205, 2084, 2242], [2101, 2205, 2173, 2233], [376, 2256, 460, 2284], [471, 2256, 567, 2284], [578, 2256, 603, 2284], [615, 2256, 716, 2284], [727, 2256, 857, 2284], [869, 2256, 1075, 2284], [1088, 2256, 1233, 2284], [1247, 2256, 1337, 2284], [1348, 2256, 1387, 2284], [1399, 2256, 1652, 2290], [1666, 2256, 1732, 2284], [1745, 2256, 1867, 2293], [1880, 2256, 1929, 2284], [1941, 2256, 2054, 2293], [2066, 2265, 2123, 2293], [2137, 2265, 2174, 2284], [376, 2307, 554, 2344], [566, 2307, 735, 2344], [747, 2316, 884, 2335], [895, 2316, 935, 2335], [947, 2307, 983, 2335], [997, 2316, 1073, 2335], [1091, 2308, 1123, 2335], [1135, 2307, 1266, 2344], [1277, 2316, 1324, 2335], [1335, 2316, 1390, 2335], [1402, 2307, 1553, 2335], [1564, 2307, 1666, 2336], [1681, 2317, 1714, 2341], [1731, 2320, 1759, 2329], [1777, 2301, 1855, 2336], [1871, 2307, 1928, 2335], [1941, 2317, 1998, 2347], [2014, 2320, 2042, 2329], [2060, 2301, 2149, 2336], [438, 2359, 523, 2386], [536, 2358, 652, 2395], [665, 2358, 840, 2395], [853, 2358, 872, 2386], [884, 2358, 1019, 2395], [1033, 2358, 1106, 2395], [1120, 2358, 1215, 2386], [1228, 2358, 1302, 2386], [1314, 2367, 1353, 2395], [1354, 2358, 1520, 2386], [1523, 2358, 1567, 2392], [1579, 2358, 1605, 2386], [1619, 2358, 1708, 2395], [1723, 2358, 1950, 2395], [1966, 2358, 2024, 2386], [2038, 2358, 2069, 2386], [2082, 2358, 2144, 2386], [2158, 2367, 2175, 2386], [376, 2409, 468, 2437], [482, 2409, 607, 2446], [619, 2409, 744, 2437], [757, 2418, 815, 2437], [826, 2409, 865, 2437], [878, 2409, 1013, 2437], [1032, 2409, 1089, 2437], [1092, 2409, 1144, 2437], [1158, 2409, 1325, 2437], [1337, 2409, 1409, 2437], [1421, 2409, 1462, 2446], [1477, 2418, 1494, 2437], [1505, 2409, 1829, 2446], [1841, 2409, 1966, 2437], [1979, 2409, 2053, 2438], [2067, 2418, 2084, 2437], [2089, 2409, 2175, 2446], [377, 2459, 505, 2496], [518, 2469, 569, 2495], [583, 2459, 668, 2487], [671, 2459, 836, 2487], [848, 2459, 873, 2487], [980, 2502, 1059, 2538], [1077, 2523, 1105, 2532], [1121, 2503, 1351, 2553], [1365, 2503, 1567, 2548], [2097, 2510, 2173, 2545], [438, 2585, 502, 2613], [515, 2585, 724, 2622], [738, 2585, 818, 2613], [831, 2585, 940, 2613], [953, 2585, 1001, 2613], [1014, 2585, 1064, 2613], [1078, 2585, 1209, 2622], [1223, 2595, 1263, 2621], [1279, 2585, 1304, 2613], [1318, 2585, 1409, 2622], [1421, 2585, 1462, 2622], [1476, 2585, 1525, 2613], [1539, 2585, 1657, 2613], [1670, 2585, 1706, 2613], [1716, 2585, 1766, 2613], [1779, 2585, 1935, 2622], [1948, 2589, 2089, 2613], [2102, 2585, 2126, 2613], [2140, 2585, 2176, 2613], [376, 2636, 425, 2664], [440, 2636, 578, 2673], [593, 2633, 706, 2674], [728, 2636, 787, 2670], [804, 2636, 866, 2670], [891, 2636, 982, 2665], [998, 2633, 1077, 2674], [1095, 2636, 1121, 2664], [1137, 2645, 1154, 2664], [1168, 2645, 1285, 2664], [1300, 2636, 1465, 2673], [1483, 2636, 1507, 2664], [1523, 2636, 1549, 2664], [1565, 2636, 1677, 2673], [1692, 2636, 1742, 2664], [1757, 2636, 1868, 2673], [1882, 2636, 2061, 2673], [2076, 2636, 2112, 2664], [2124, 2636, 2174, 2664], [376, 2687, 506, 2715], [519, 2680, 632, 2715], [648, 2687, 739, 2716], [741, 2691, 803, 2724], [815, 2687, 853, 2715], [866, 2687, 980, 2724], [993, 2691, 1145, 2721], [1159, 2687, 1209, 2715], [1221, 2687, 1413, 2724], [1426, 2687, 1462, 2715], [1471, 2687, 1520, 2715], [1532, 2687, 1663, 2715], [1674, 2687, 1751, 2715], [1763, 2687, 1964, 2715], [1976, 2687, 2177, 2724], [376, 2748, 496, 2785], [509, 2747, 541, 2782], [559, 2761, 587, 2770], [603, 2748, 620, 2776], [633, 2765, 659, 2766], [674, 2748, 754, 2776], [769, 2728, 876, 2803], [897, 2748, 957, 2783], [971, 2748, 984, 2776], [1003, 2749, 1055, 2782], [1072, 2748, 1159, 2783], [1176, 2748, 1220, 2776], [1222, 2748, 1359, 2785], [1371, 2757, 1430, 2776], [1442, 2748, 1466, 2776], [1481, 2747, 1522, 2782], [1539, 2761, 1567, 2770], [1583, 2748, 1600, 2776], [1614, 2765, 1640, 2766], [1654, 2748, 1734, 2776], [1750, 2728, 1904, 2803], [1914, 2772, 1920, 2782], [1933, 2748, 2033, 2776], [2045, 2748, 2130, 2776], [2143, 2752, 2174, 2776], [374, 2810, 393, 2838], [406, 2819, 438, 2838], [451, 2820, 474, 2838], [488, 2817, 525, 2838], [541, 2820, 578, 2838], [584, 2810, 671, 2844], [684, 2810, 734, 2838], [746, 2810, 854, 2838], [867, 2820, 906, 2845], [923, 2823, 951, 2832], [969, 2807, 1027, 2848], [1039, 2810, 1065, 2838], [1078, 2819, 1095, 2838], [1106, 2810, 1188, 2847], [1202, 2810, 1259, 2838], [1272, 2810, 1368, 2847], [1381, 2810, 1632, 2847], [1648, 2810, 1847, 2838], [1860, 2810, 1999, 2847], [2011, 2810, 2061, 2838], [2073, 2810, 2174, 2839], [1259, 2935, 1295, 2963], [373, 239, 557, 277], [569, 239, 588, 268], [600, 240, 656, 269], [660, 240, 793, 268], [805, 240, 915, 268], [926, 240, 1089, 277], [416, 296, 575, 327], [592, 306, 615, 324], [631, 309, 659, 318], [674, 296, 701, 330], [715, 305, 762, 330], [779, 309, 807, 318], [823, 296, 849, 325], [417, 346, 492, 376], [493, 339, 643, 390], [659, 364, 685, 365], [700, 339, 730, 390], [749, 353, 775, 377], [791, 357, 824, 381], [839, 355, 876, 376], [888, 344, 1027, 385], [1045, 353, 1071, 377], [1086, 357, 1142, 387], [1156, 347, 1198, 376], [479, 398, 630, 435], [642, 398, 796, 435], [808, 398, 946, 435], [964, 391, 1066, 426], [1080, 402, 1108, 429], [1122, 398, 1169, 426], [1184, 411, 1212, 420], [1228, 391, 1285, 436], [1291, 398, 1355, 432], [479, 448, 591, 477], [603, 457, 650, 483], [664, 448, 705, 485], [718, 448, 837, 485], [850, 441, 947, 487], [949, 457, 1019, 483], [1036, 461, 1064, 470], [1080, 448, 1151, 484], [479, 499, 591, 528], [604, 508, 644, 535], [658, 499, 699, 536], [712, 499, 832, 536], [845, 492, 902, 537], [907, 508, 948, 535], [965, 512, 993, 521], [1008, 508, 1066, 533], [480, 571, 585, 589], [599, 578, 625, 579], [648, 542, 733, 577], [756, 541, 791, 616], [807, 578, 833, 579], [850, 541, 981, 616], [650, 581, 730, 614], [417, 621, 480, 650], [492, 620, 585, 650], [417, 674, 529, 701], [541, 681, 589, 706], [373, 785, 557, 823], [569, 786, 587, 814], [600, 786, 628, 815], [630, 786, 824, 823], [835, 786, 883, 814], [894, 787, 998, 821], [1012, 786, 1175, 823], [416, 849, 562, 880], [575, 843, 617, 877], [635, 855, 656, 879], [673, 842, 741, 883], [755, 851, 768, 877], [782, 862, 810, 871], [826, 849, 852, 878], [417, 898, 510, 928], [523, 899, 560, 934], [574, 899, 755, 936], [768, 899, 810, 928], [479, 950, 623, 979], [634, 950, 753, 987], [770, 945, 805, 978], [822, 963, 850, 972], [865, 945, 903, 978], [919, 967, 945, 968], [963, 943, 1042, 993], [1048, 945, 1126, 988], [479, 1001, 657, 1038], [674, 995, 754, 1029], [772, 1014, 800, 1023], [815, 998, 924, 1039], [940, 1018, 966, 1019], [980, 996, 1131, 1039], [1144, 998, 1174, 1039], [1192, 1016, 1196, 1021], [1210, 996, 1255, 1029], [479, 1052, 651, 1083], [417, 1103, 480, 1132], [492, 1102, 585, 1132], [417, 1155, 529, 1182], [541, 1148, 590, 1181], [375, 1297, 538, 1334], [551, 1297, 575, 1325], [588, 1297, 745, 1334], [757, 1297, 788, 1325], [800, 1297, 970, 1334], [982, 1297, 1008, 1326], [1026, 1297, 1189, 1326], [1191, 1297, 1278, 1334], [1292, 1297, 1363, 1325], [1375, 1297, 1423, 1325], [1436, 1297, 1496, 1325], [1508, 1297, 1568, 1325], [1580, 1297, 1628, 1325], [1640, 1297, 1807, 1334], [1820, 1297, 1948, 1339], [1963, 1297, 1988, 1325], [2002, 1297, 2065, 1325], [2078, 1297, 2174, 1326], [376, 1352, 405, 1376], [417, 1352, 564, 1385], [578, 1348, 625, 1376], [637, 1348, 688, 1377], [700, 1348, 834, 1376], [846, 1348, 922, 1383], [935, 1352, 1013, 1376], [1026, 1352, 1077, 1376], [1088, 1352, 1118, 1376], [1129, 1348, 1166, 1376], [1179, 1357, 1248, 1385], [1261, 1348, 1416, 1376], [1433, 1348, 1551, 1382], [1565, 1348, 1735, 1376], [1748, 1348, 1769, 1376], [1781, 1357, 1836, 1376], [1847, 1357, 1921, 1376], [1933, 1348, 2115, 1385], [2126, 1348, 2173, 1376], [376, 1407, 459, 1426], [472, 1398, 685, 1435], [697, 1398, 785, 1427], [797, 1398, 929, 1432], [942, 1398, 1056, 1435], [1068, 1398, 1140, 1435], [1152, 1398, 1199, 1426], [1211, 1407, 1227, 1426], [1239, 1407, 1310, 1435], [1322, 1398, 1438, 1426], [1449, 1407, 1540, 1435], [1552, 1398, 1588, 1426], [1598, 1397, 1618, 1427], [1632, 1398, 1742, 1427], [1759, 1398, 1930, 1432], [1943, 1398, 1974, 1426], [1985, 1398, 2115, 1435], [2127, 1407, 2174, 1426], [375, 1449, 570, 1477], [583, 1458, 599, 1477], [610, 1449, 717, 1486], [729, 1449, 765, 1477], [774, 1449, 826, 1478], [839, 1449, 896, 1477], [908, 1449, 996, 1478], [999, 1458, 1050, 1483], [1065, 1449, 1226, 1486], [1237, 1449, 1277, 1486], [1290, 1458, 1344, 1477], [1355, 1449, 1554, 1486], [1569, 1449, 1633, 1484], [1647, 1448, 1766, 1486], [375, 1563, 436, 1598], [489, 1563, 643, 1607], [663, 1563, 873, 1607], [887, 1563, 948, 1598], [963, 1554, 1065, 1616], [375, 1649, 432, 1676], [443, 1648, 551, 1688], [565, 1648, 728, 1685], [741, 1648, 801, 1683], [815, 1648, 828, 1676], [847, 1654, 873, 1677], [887, 1658, 908, 1684], [923, 1654, 949, 1677], [966, 1648, 1017, 1683], [1031, 1648, 1080, 1676], [1092, 1648, 1162, 1676], [1172, 1648, 1311, 1685], [1321, 1648, 1464, 1676], [841, 1740, 908, 1793], [929, 1737, 1008, 1778], [1027, 1750, 1065, 1768], [1084, 1733, 1120, 1783], [1128, 1731, 1189, 1768], [1193, 1732, 1257, 1779], [1272, 1731, 1362, 1768], [1367, 1740, 1440, 1776], [1473, 1744, 1516, 1768], [1535, 1737, 1614, 1781], [1632, 1739, 1705, 1776], [2097, 1740, 2173, 1775], [374, 1846, 476, 1875], [489, 1856, 506, 1882], [522, 1859, 550, 1868], [568, 1843, 639, 1884], [655, 1863, 681, 1864], [698, 1843, 781, 1884], [798, 1846, 941, 1874], [954, 1846, 1029, 1881], [1043, 1846, 1069, 1874], [1082, 1850, 1135, 1874], [1146, 1846, 1340, 1883], [1354, 1846, 1513, 1874], [1526, 1850, 1557, 1874], [1570, 1847, 1788, 1883], [1802, 1846, 1989, 1883], [1992, 1855, 2045, 1880], [2059, 1846, 2175, 1874], [376, 1898, 427, 1925], [441, 1897, 619, 1934], [632, 1897, 679, 1932], [693, 1906, 748, 1925], [759, 1897, 936, 1934], [949, 1897, 1090, 1925], [1104, 1896, 1199, 1934], [1213, 1906, 1270, 1925], [1281, 1897, 1320, 1925], [1333, 1897, 1455, 1934], [1467, 1897, 1570, 1934], [1587, 1898, 1612, 1925], [1623, 1897, 1649, 1925], [1661, 1897, 1801, 1934], [1814, 1897, 1974, 1925], [1986, 1901, 2017, 1925], [2030, 1897, 2179, 1934], [375, 1948, 544, 1985], [557, 1948, 645, 1983], [658, 1948, 706, 1976], [718, 1948, 818, 1977], [831, 1948, 880, 1976], [893, 1957, 977, 1976], [988, 1948, 1099, 1985], [1110, 1948, 1175, 1976], [1188, 1957, 1219, 1976], [1232, 1948, 1263, 1976], [1276, 1948, 1352, 1983], [1366, 1948, 1491, 1985], [1504, 1948, 1557, 1976], [1567, 1948, 1671, 1976], [1683, 1948, 1732, 1976], [1745, 1958, 1762, 1984], [1777, 1961, 1805, 1970], [1821, 1948, 1838, 1976], [1851, 1957, 1930, 1982], [1944, 1948, 1993, 1976], [2004, 1948, 2174, 1985], [377, 2003, 442, 2036], [454, 1999, 526, 2027], [538, 1999, 564, 2027], [578, 1999, 671, 2027], [683, 2008, 768, 2027], [781, 1999, 933, 2027], [951, 1999, 1043, 2033], [1057, 2003, 1088, 2027], [1101, 1999, 1310, 2036], [1321, 1999, 1378, 2033], [1392, 2008, 1440, 2028], [1453, 2008, 1524, 2036], [1537, 1999, 1608, 2027], [1609, 1999, 1685, 2027], [1697, 1999, 1947, 2036], [1960, 1999, 2174, 2027], [375, 2050, 463, 2085], [478, 2050, 612, 2078], [634, 2050, 679, 2078], [693, 2050, 850, 2087], [867, 2050, 917, 2078], [931, 2050, 1045, 2078], [1058, 2050, 1127, 2078], [1139, 2050, 1328, 2087], [1343, 2059, 1474, 2087], [1475, 2050, 1536, 2078], [1551, 2050, 1682, 2087], [1698, 2059, 1715, 2078], [1727, 2050, 1836, 2087], [1850, 2050, 1886, 2078], [1898, 2050, 1950, 2079], [1965, 2050, 2023, 2078], [2038, 2051, 2104, 2078], [2120, 2051, 2174, 2078], [377, 2100, 556, 2128], [567, 2100, 640, 2128], [652, 2100, 774, 2128], [786, 2100, 891, 2128], [376, 2211, 455, 2241], [500, 2211, 648, 2241], [660, 2211, 840, 2249], [852, 2214, 929, 2241], [941, 2212, 995, 2241], [1007, 2211, 1121, 2252], [374, 2291, 437, 2319], [448, 2291, 586, 2328], [598, 2291, 634, 2319], [642, 2291, 809, 2328], [822, 2295, 894, 2319], [906, 2291, 955, 2319], [967, 2290, 1103, 2331], [1113, 2291, 1163, 2319], [1165, 2291, 1211, 2319], [865, 2383, 959, 2417], [1014, 2380, 1097, 2421], [1117, 2393, 1154, 2411], [1173, 2375, 1377, 2425], [1431, 2387, 1474, 2411], [1504, 2380, 1591, 2423], [1609, 2382, 1682, 2417], [2097, 2383, 2173, 2418], [376, 2476, 417, 2503], [418, 2475, 500, 2503], [512, 2475, 650, 2512], [653, 2475, 694, 2509], [706, 2479, 786, 2503], [799, 2479, 851, 2503], [863, 2479, 893, 2503], [904, 2475, 943, 2503], [955, 2484, 1039, 2503], [1051, 2475, 1229, 2504], [1241, 2479, 1271, 2503], [1285, 2475, 1405, 2503], [1418, 2475, 1454, 2503], [1468, 2475, 1598, 2503], [1610, 2475, 1680, 2503], [922, 2568, 1016, 2602], [1088, 2564, 1173, 2606], [1193, 2578, 1230, 2596], [1249, 2560, 1324, 2610], [1339, 2585, 1365, 2586], [1379, 2559, 1442, 2606], [1457, 2572, 1485, 2599], [1498, 2565, 1625, 2608], [2076, 2568, 2173, 2603], [374, 2660, 476, 2689], [493, 2660, 518, 2688], [537, 2660, 668, 2697], [685, 2660, 812, 2697], [829, 2660, 882, 2688], [898, 2669, 977, 2696], [980, 2676, 1055, 2706], [1065, 2657, 1129, 2698], [1160, 2660, 1224, 2688], [1241, 2660, 1369, 2697], [1387, 2660, 1529, 2694], [1550, 2669, 1603, 2697], [1620, 2659, 1682, 2694], [1702, 2664, 1733, 2688], [1751, 2660, 1827, 2695], [1845, 2669, 1902, 2688], [1918, 2660, 1957, 2688], [1974, 2660, 2117, 2688], [2134, 2660, 2175, 2697], [377, 2711, 496, 2748], [509, 2711, 615, 2746], [628, 2711, 669, 2748], [680, 2711, 769, 2748], [781, 2711, 831, 2739], [842, 2711, 1228, 2748], [1241, 2711, 1326, 2746], [1339, 2711, 1439, 2739], [1451, 2711, 1547, 2748], [1063, 2800, 1112, 2831], [1130, 2812, 1239, 2831], [1252, 2812, 1350, 2841], [1357, 2819, 1409, 2849], [1419, 2800, 1484, 2841], [1259, 2935, 1293, 2964], [376, 242, 545, 279], [559, 242, 634, 277], [648, 242, 673, 270], [686, 242, 849, 279], [861, 251, 952, 279], [964, 242, 1052, 270], [1065, 242, 1170, 270], [1182, 242, 1238, 276], [1253, 251, 1266, 270], [1268, 242, 1322, 270], [1333, 242, 1358, 270], [1371, 242, 1472, 270], [1473, 242, 1526, 270], [1539, 242, 1624, 270], [1636, 242, 1659, 270], [1669, 242, 1786, 279], [1799, 242, 1857, 270], [1870, 242, 2045, 279], [2062, 243, 2103, 270], [2115, 242, 2173, 270], [376, 292, 443, 326], [457, 301, 485, 320], [487, 292, 581, 320], [592, 296, 657, 320], [671, 292, 767, 327], [780, 292, 844, 320], [857, 301, 874, 320], [885, 292, 1108, 320], [1119, 292, 1258, 329], [1271, 292, 1328, 320], [1341, 292, 1411, 320], [1423, 292, 1525, 320], [1538, 301, 1555, 320], [1565, 292, 1865, 329], [1878, 292, 2001, 320], [2014, 292, 2174, 329], [376, 352, 430, 371], [442, 343, 592, 380], [603, 343, 761, 380], [773, 343, 804, 371], [816, 343, 978, 380], [990, 344, 1021, 371], [438, 394, 572, 422], [587, 394, 747, 428], [765, 394, 893, 423], [907, 394, 971, 422], [987, 394, 1023, 422], [1035, 394, 1202, 431], [1218, 394, 1281, 422], [1295, 403, 1321, 422], [1342, 396, 1368, 428], [1390, 394, 1417, 428], [1435, 403, 1470, 422], [1485, 394, 1548, 422], [1562, 403, 1594, 422], [1616, 396, 1642, 428], [1665, 394, 1682, 423], [1699, 394, 1764, 422], [1778, 394, 1868, 422], [1885, 394, 1948, 429], [1964, 394, 2048, 431], [2063, 403, 2121, 422], [2135, 394, 2174, 422], [375, 445, 507, 473], [521, 445, 595, 473], [607, 445, 727, 482], [739, 445, 795, 473], [808, 445, 967, 482], [984, 445, 1074, 479], [1088, 445, 1204, 473], [1216, 445, 1252, 473], [1262, 445, 1368, 480], [1382, 454, 1429, 473], [1442, 445, 1527, 474], [753, 539, 847, 573], [902, 536, 1005, 577], [1024, 549, 1062, 567], [1081, 532, 1156, 581], [1171, 556, 1197, 557], [1210, 531, 1273, 577], [1288, 543, 1316, 570], [1330, 528, 1441, 592], [1453, 520, 1570, 581], [1617, 543, 1660, 567], [1675, 548, 1707, 567], [1724, 541, 1750, 573], [1767, 539, 1793, 568], [2076, 539, 2173, 574], [374, 631, 437, 659], [449, 631, 584, 668], [596, 631, 631, 659], [642, 630, 675, 659], [692, 640, 761, 668], [772, 631, 811, 659], [823, 631, 994, 668], [1006, 631, 1122, 659], [1135, 640, 1166, 659], [959, 713, 1096, 754], [1113, 729, 1141, 738], [1156, 725, 1229, 744], [1243, 720, 1309, 747], [1323, 708, 1438, 761], [1441, 714, 1535, 744], [1539, 708, 1589, 752], [2076, 716, 2173, 751], [374, 801, 474, 829], [486, 795, 578, 829], [594, 801, 717, 829], [731, 801, 937, 829], [949, 801, 1193, 838], [1205, 801, 1241, 829], [1250, 810, 1292, 829], [1309, 801, 1499, 838], [1511, 801, 1691, 829], [1703, 801, 1799, 838], [481, 878, 597, 939], [558, 892, 623, 943], [626, 890, 706, 931], [724, 906, 752, 915], [768, 885, 893, 935], [906, 890, 1003, 931], [1020, 890, 1049, 931], [1059, 883, 1217, 943], [1222, 877, 1374, 937], [1391, 897, 1419, 924], [1432, 890, 1488, 931], [1504, 883, 1744, 943], [1750, 877, 1930, 943], [1935, 877, 2068, 937], [724, 983, 752, 992], [768, 969, 809, 1011], [820, 963, 850, 1013], [866, 987, 892, 988], [906, 966, 974, 1010], [978, 960, 1032, 1013], [1050, 974, 1078, 1001], [1091, 973, 1215, 1011], [374, 1056, 476, 1085], [491, 1066, 507, 1084], [528, 1066, 565, 1084], [586, 1053, 641, 1094], [659, 1073, 685, 1074], [699, 1050, 866, 1100], [884, 1054, 916, 1084], [939, 1066, 976, 1084], [996, 1053, 1156, 1096], [1173, 1058, 1205, 1084], [1228, 1066, 1266, 1084], [1288, 1050, 1539, 1096], [1557, 1056, 1615, 1084], [1631, 1055, 1673, 1096], [1691, 1056, 1717, 1084], [1732, 1056, 1782, 1084], [1797, 1056, 1888, 1084], [1904, 1056, 1993, 1084], [2018, 1057, 2052, 1084], [2066, 1056, 2174, 1084], [376, 1106, 519, 1140], [532, 1106, 589, 1134], [603, 1106, 759, 1134], [772, 1106, 914, 1143], [925, 1106, 992, 1143], [1004, 1106, 1108, 1134], [1125, 1110, 1268, 1134], [1278, 1106, 1422, 1134], [1436, 1110, 1576, 1143], [940, 1188, 1046, 1229], [1063, 1204, 1091, 1213], [1106, 1184, 1226, 1234], [1242, 1208, 1268, 1209], [1283, 1183, 1409, 1234], [1426, 1195, 1454, 1222], [1468, 1194, 1537, 1219], [1551, 1182, 1608, 1219], [2076, 1191, 2173, 1226], [438, 1278, 477, 1305], [490, 1277, 614, 1314], [628, 1286, 664, 1305], [675, 1277, 806, 1305], [817, 1278, 944, 1306], [955, 1277, 1055, 1305], [1057, 1277, 1109, 1305], [1120, 1277, 1144, 1305], [1157, 1277, 1327, 1314], [1340, 1281, 1369, 1305], [1381, 1277, 1492, 1314], [1504, 1277, 1560, 1305], [1573, 1281, 1721, 1305], [1738, 1278, 1761, 1305], [1773, 1277, 1797, 1305], [1810, 1281, 1860, 1305], [1871, 1277, 1942, 1305], [1954, 1281, 1983, 1305], [1997, 1286, 2046, 1305], [2058, 1277, 2117, 1305], [2129, 1277, 2176, 1305], [377, 1336, 393, 1355], [405, 1331, 449, 1355], [461, 1327, 497, 1355], [506, 1327, 678, 1356], [690, 1327, 835, 1356], [849, 1327, 869, 1355], [881, 1327, 930, 1355], [941, 1327, 1072, 1355], [1084, 1327, 1213, 1355], [1225, 1327, 1307, 1355], [1321, 1327, 1370, 1355], [1382, 1327, 1461, 1355], [930, 1410, 1052, 1451], [1070, 1426, 1098, 1435], [1113, 1405, 1237, 1455], [1252, 1430, 1278, 1431], [1293, 1402, 1419, 1457], [1436, 1417, 1464, 1444], [1478, 1403, 1617, 1454], [2076, 1413, 2173, 1448], [374, 1506, 453, 1534], [465, 1506, 515, 1534], [527, 1506, 688, 1534], [701, 1504, 732, 1534], [748, 1519, 776, 1528], [790, 1506, 873, 1543], [881, 1498, 915, 1548], [930, 1523, 956, 1524], [970, 1495, 1097, 1550], [1105, 1530, 1111, 1540], [1124, 1506, 1174, 1534], [1186, 1506, 1458, 1535], [1470, 1506, 1564, 1534], [1566, 1506, 1690, 1543], [1474, 1594, 1530, 1624], [1536, 1590, 1602, 1624], [1606, 1589, 1682, 1639], [1687, 1590, 1759, 1624], [816, 1619, 853, 1638], [939, 1641, 967, 1642], [1113, 1630, 1128, 1632], [1143, 1612, 1324, 1642], [1375, 1619, 1412, 1638], [771, 1628, 827, 1656], [861, 1625, 921, 1666], [939, 1649, 967, 1650], [987, 1620, 1074, 1670], [1087, 1637, 1190, 1665], [1193, 1620, 1231, 1670], [1296, 1626, 1370, 1656], [1429, 1645, 1536, 1688], [1472, 1645, 1777, 1702], [2076, 1628, 2173, 1663], [375, 1740, 589, 1774], [603, 1740, 685, 1768], [698, 1740, 728, 1768], [740, 1741, 791, 1768], [803, 1740, 851, 1768], [864, 1740, 978, 1769], [991, 1740, 1027, 1768], [1036, 1740, 1084, 1768], [1096, 1740, 1226, 1768], [1238, 1740, 1367, 1768], [1380, 1740, 1489, 1777], [1503, 1744, 1637, 1777], [1651, 1749, 1690, 1768], [1702, 1740, 1750, 1768], [1762, 1740, 1892, 1768], [1904, 1740, 2046, 1777], [2060, 1749, 2106, 1768], [2118, 1749, 2174, 1768], [375, 1800, 531, 1828], [543, 1791, 592, 1819], [604, 1795, 678, 1819], [681, 1791, 737, 1819], [749, 1791, 806, 1819], [819, 1791, 974, 1828], [986, 1791, 1034, 1819], [1045, 1791, 1157, 1819], [1169, 1791, 1339, 1828], [1353, 1791, 1402, 1819], [1403, 1791, 1460, 1825], [1345, 1876, 1380, 1926], [1394, 1887, 1422, 1914], [1434, 1876, 1500, 1926], [1512, 1876, 1547, 1926], [1561, 1887, 1589, 1914], [1602, 1866, 1696, 1926], [1702, 1880, 1842, 1921], [1431, 1942, 1525, 1983], [1538, 1937, 1631, 1987], [1646, 1949, 1674, 1976], [1686, 1937, 1752, 1987], [689, 1911, 810, 1952], [817, 1906, 1001, 1952], [1019, 1927, 1047, 1936], [1062, 1923, 1083, 1942], [1097, 1918, 1125, 1945], [1138, 1911, 1279, 1952], [1295, 1931, 1321, 1932], [1855, 1938, 1859, 1950], [2076, 1914, 2173, 1949], [701, 2026, 845, 2047], [1338, 2042, 1342, 2046], [374, 2042, 474, 2070], [486, 2051, 507, 2070], [525, 2052, 563, 2070], [583, 2034, 617, 2084], [632, 2059, 658, 2060], [672, 2037, 741, 2086], [769, 2031, 799, 2084], [851, 2066, 857, 2076], [872, 2042, 929, 2070], [942, 2046, 970, 2073], [984, 2042, 1108, 2070], [1121, 2046, 1380, 2079], [1391, 2042, 1525, 2079], [438, 2092, 501, 2120], [512, 2092, 643, 2121], [654, 2092, 739, 2129], [750, 2092, 786, 2120], [795, 2092, 845, 2120], [857, 2092, 953, 2121], [965, 2092, 1144, 2121], [1157, 2092, 1182, 2120], [1196, 2092, 1256, 2120], [1268, 2092, 1317, 2120], [1329, 2093, 1458, 2120], [1470, 2092, 1625, 2126], [1639, 2092, 1697, 2120], [1709, 2092, 1775, 2120], [1788, 2092, 1838, 2120], [1849, 2092, 1962, 2121], [1974, 2093, 2025, 2120], [2037, 2092, 2174, 2120], [375, 2152, 431, 2171], [442, 2143, 481, 2171], [493, 2143, 655, 2180], [667, 2143, 698, 2171], [711, 2140, 795, 2181], [810, 2143, 891, 2177], [905, 2143, 1004, 2171], [1016, 2143, 1122, 2171], [1135, 2143, 1166, 2171], [1179, 2152, 1195, 2171], [1206, 2143, 1311, 2180], [1323, 2143, 1464, 2172], [1477, 2143, 1581, 2172], [375, 2252, 457, 2282], [500, 2252, 726, 2282], [738, 2252, 912, 2290], [924, 2252, 974, 2282], [986, 2253, 1098, 2294], [1112, 2252, 1285, 2290], [374, 2332, 436, 2360], [447, 2332, 653, 2360], [667, 2332, 751, 2367], [765, 2332, 922, 2369], [934, 2332, 997, 2367], [1009, 2341, 1075, 2369], [1091, 2332, 1153, 2366], [1168, 2332, 1214, 2360], [1226, 2341, 1242, 2360], [1253, 2336, 1352, 2360], [1364, 2332, 1534, 2367], [1548, 2332, 1611, 2360], [1622, 2332, 1710, 2361], [1713, 2341, 1775, 2360], [1788, 2332, 1836, 2360], [1848, 2332, 2029, 2360], [2042, 2332, 2174, 2369], [376, 2383, 497, 2411], [512, 2383, 574, 2417], [590, 2383, 688, 2412], [701, 2383, 920, 2411], [932, 2383, 1139, 2420], [1150, 2383, 1301, 2420], [1314, 2392, 1385, 2412], [1396, 2387, 1534, 2420], [1546, 2392, 1661, 2412], [1674, 2387, 1741, 2417], [1756, 2383, 1813, 2411], [1825, 2392, 1880, 2411], [1891, 2383, 1929, 2411], [1942, 2383, 2022, 2420], [2034, 2383, 2173, 2412], [376, 2434, 402, 2462], [411, 2443, 458, 2462], [469, 2434, 546, 2463], [558, 2443, 660, 2462], [674, 2438, 704, 2462], [717, 2443, 733, 2462], [746, 2434, 919, 2462], [931, 2438, 961, 2462], [975, 2434, 1059, 2463], [1071, 2434, 1165, 2462], [1175, 2434, 1327, 2471], [1341, 2443, 1412, 2463], [1424, 2434, 1473, 2462], [1485, 2434, 1635, 2462], [1637, 2438, 1711, 2462], [438, 2485, 499, 2513], [512, 2485, 630, 2522], [642, 2486, 702, 2513], [714, 2485, 828, 2513], [830, 2485, 886, 2513], [899, 2485, 1061, 2513], [1073, 2485, 1103, 2513], [1115, 2485, 1285, 2522], [1296, 2485, 1323, 2514], [1339, 2486, 1400, 2513], [1412, 2485, 1503, 2513], [1518, 2494, 1554, 2513], [1567, 2485, 1714, 2514], [1728, 2489, 1853, 2522], [1866, 2485, 1913, 2513], [1924, 2485, 2031, 2525], [2045, 2485, 2173, 2513], [375, 2535, 446, 2563], [457, 2535, 504, 2563], [515, 2535, 794, 2563], [806, 2544, 836, 2563], [847, 2535, 915, 2564], [927, 2544, 957, 2563], [970, 2535, 1111, 2572], [1123, 2544, 1178, 2563], [1187, 2535, 1224, 2563], [1235, 2539, 1374, 2572], [1376, 2535, 1503, 2572], [1521, 2535, 1716, 2572], [1728, 2539, 1758, 2563], [1769, 2535, 1830, 2563], [1841, 2535, 1889, 2563], [1900, 2535, 2009, 2563], [2011, 2535, 2174, 2563], [374, 2595, 402, 2614], [404, 2595, 489, 2614], [490, 2586, 552, 2614], [565, 2586, 650, 2615], [870, 2637, 953, 2671], [1007, 2628, 1366, 2679], [1420, 2641, 1463, 2665], [1513, 2634, 1586, 2677], [1604, 2636, 1677, 2671], [2076, 2637, 2173, 2672], [374, 2708, 447, 2736], [459, 2708, 600, 2745], [612, 2717, 670, 2736], [680, 2708, 719, 2736], [733, 2708, 840, 2736], [851, 2708, 893, 2745], [905, 2708, 1070, 2745], [1083, 2708, 1146, 2736], [1157, 2717, 1246, 2751], [1253, 2722, 1341, 2752], [1355, 2701, 1398, 2736], [1403, 2717, 1423, 2736], [1437, 2708, 1463, 2736], [1477, 2708, 1608, 2736], [1620, 2708, 1661, 2745], [1675, 2717, 1744, 2736], [1745, 2712, 1878, 2736], [1891, 2717, 1909, 2736], [1922, 2708, 2130, 2745], [2143, 2712, 2173, 2736], [377, 2768, 407, 2793], [424, 2759, 460, 2787], [472, 2759, 522, 2787], [536, 2759, 618, 2787], [635, 2756, 690, 2797], [712, 2769, 740, 2787], [763, 2753, 875, 2797], [899, 2759, 1072, 2793], [1090, 2758, 1124, 2787], [1143, 2759, 1175, 2787], [1189, 2759, 1286, 2794], [1301, 2759, 1327, 2787], [1342, 2759, 1439, 2787], [1453, 2759, 1494, 2796], [1509, 2759, 1612, 2796], [1628, 2768, 1648, 2787], [1668, 2772, 1696, 2781], [1716, 2752, 1848, 2787], [1863, 2776, 1889, 2777], [1905, 2759, 1978, 2795], [1994, 2759, 2173, 2796], [377, 2819, 395, 2838], [410, 2823, 438, 2832], [455, 2807, 604, 2848], [620, 2814, 648, 2841], [664, 2804, 747, 2848], [753, 2798, 764, 2817], [781, 2810, 838, 2838], [850, 2810, 900, 2838], [901, 2810, 1080, 2847], [1093, 2819, 1111, 2838], [1125, 2814, 1155, 2838], [1168, 2814, 1247, 2838], [1263, 2807, 1336, 2850], [1353, 2809, 1426, 2839], [1259, 2935, 1294, 2964], [373, 239, 557, 277], [569, 239, 588, 269], [600, 240, 810, 268], [822, 240, 909, 275], [417, 296, 541, 333], [560, 295, 591, 333], [605, 300, 744, 333], [756, 305, 871, 325], [884, 300, 928, 324], [939, 296, 979, 324], [417, 347, 563, 375], [576, 356, 616, 382], [634, 353, 655, 377], [672, 347, 739, 381], [753, 360, 781, 369], [797, 347, 823, 376], [417, 396, 510, 426], [523, 397, 663, 434], [675, 397, 791, 425], [803, 401, 855, 425], [867, 401, 927, 425], [939, 397, 981, 426], [479, 448, 554, 476], [566, 448, 689, 476], [701, 448, 855, 476], [873, 448, 956, 483], [969, 457, 987, 476], [1002, 463, 1006, 468], [1021, 448, 1051, 477], [1056, 445, 1149, 486], [1166, 452, 1209, 476], [1226, 457, 1244, 476], [1261, 454, 1282, 478], [1298, 448, 1337, 476], [479, 499, 653, 527], [666, 499, 803, 536], [821, 499, 906, 539], [919, 496, 996, 537], [1011, 503, 1039, 530], [1052, 496, 1111, 537], [1125, 516, 1151, 517], [1165, 496, 1234, 537], [1251, 503, 1294, 527], [1310, 509, 1332, 536], [1348, 505, 1369, 529], [1389, 496, 1414, 537], [1420, 496, 1474, 537], [479, 550, 606, 587], [625, 559, 702, 587], [720, 563, 748, 572], [764, 559, 800, 584], [815, 554, 843, 581], [856, 547, 915, 588], [929, 567, 955, 568], [969, 547, 1021, 588], [479, 601, 651, 632], [417, 652, 480, 681], [492, 651, 585, 681], [417, 704, 529, 731], [542, 711, 589, 737], [438, 851, 501, 879], [514, 851, 644, 888], [656, 860, 712, 879], [726, 851, 790, 879], [802, 851, 841, 879], [853, 851, 1016, 888], [1028, 851, 1059, 879], [1071, 851, 1176, 879], [1189, 851, 1268, 879], [1280, 851, 1382, 888], [1395, 855, 1425, 879], [1438, 851, 1487, 879], [1499, 851, 1649, 888], [1661, 851, 1799, 879], [1810, 851, 1902, 888], [1915, 851, 2078, 888], [2094, 852, 2174, 879], [376, 902, 423, 930], [434, 902, 542, 939], [554, 902, 584, 930], [595, 903, 654, 930], [667, 902, 747, 930], [760, 902, 808, 930], [820, 902, 899, 930], [909, 911, 935, 930], [947, 906, 975, 933], [987, 899, 1046, 940], [1059, 919, 1085, 920], [1098, 899, 1149, 940], [1163, 902, 1261, 931], [1272, 911, 1327, 930], [1338, 902, 1375, 930], [1386, 902, 1532, 931], [1544, 911, 1574, 930], [1587, 911, 1613, 930], [1625, 906, 1653, 933], [1665, 901, 1712, 939], [1724, 902, 1795, 931], [1807, 901, 1830, 930], [1844, 915, 1872, 924], [1888, 911, 1906, 930], [1919, 919, 1945, 920], [1958, 911, 1992, 930], [2009, 902, 2085, 931], [2086, 902, 2173, 939], [376, 953, 510, 981], [522, 953, 571, 981], [583, 953, 708, 990], [721, 953, 850, 990], [862, 953, 887, 981], [900, 953, 1041, 981], [1052, 953, 1093, 990], [1106, 953, 1226, 990], [904, 1045, 909, 1050], [1573, 1032, 1595, 1052], [867, 1055, 1034, 1088], [1052, 1036, 1158, 1088], [1165, 1042, 1245, 1083], [1257, 1037, 1357, 1084], [1373, 1062, 1399, 1063], [1416, 1042, 1495, 1083], [1508, 1042, 1568, 1083], [1607, 1045, 1679, 1081], [374, 1138, 402, 1166], [413, 1138, 494, 1166], [503, 1138, 683, 1166], [696, 1147, 735, 1166], [748, 1138, 797, 1166], [810, 1138, 905, 1167], [916, 1138, 1054, 1175], [1066, 1138, 1162, 1175], [1041, 1227, 1078, 1267], [1096, 1243, 1124, 1252], [1139, 1230, 1206, 1258], [1217, 1227, 1311, 1268], [1322, 1227, 1421, 1268], [1435, 1227, 1506, 1268], [374, 1322, 476, 1351], [493, 1321, 515, 1359], [539, 1335, 567, 1344], [593, 1315, 824, 1360], [840, 1326, 868, 1353], [886, 1315, 932, 1350], [937, 1315, 1103, 1360], [1108, 1322, 1184, 1350], [1187, 1315, 1237, 1350], [1240, 1319, 1296, 1360], [1314, 1322, 1364, 1350], [1381, 1322, 1617, 1350], [1635, 1322, 1762, 1359], [1781, 1322, 1921, 1359], [1953, 1323, 2006, 1350], [2024, 1326, 2095, 1350], [2112, 1322, 2175, 1350], [376, 1373, 534, 1410], [549, 1373, 611, 1407], [626, 1382, 673, 1401], [686, 1373, 750, 1401], [762, 1373, 858, 1401], [870, 1382, 886, 1401], [899, 1373, 1069, 1410], [1081, 1373, 1286, 1410], [789, 1462, 865, 1503], [882, 1478, 910, 1487], [926, 1456, 974, 1493], [980, 1465, 1010, 1494], [1014, 1462, 1092, 1503], [1109, 1482, 1135, 1483], [1148, 1456, 1269, 1493], [1274, 1465, 1304, 1494], [1308, 1462, 1387, 1503], [1404, 1478, 1432, 1487], [1450, 1462, 1487, 1503], [1502, 1482, 1528, 1483], [1542, 1453, 1621, 1503], [1633, 1464, 1688, 1502], [1694, 1462, 1758, 1503], [1151, 1500, 1213, 1522], [377, 1576, 405, 1600], [416, 1572, 465, 1600], [477, 1572, 536, 1600], [548, 1572, 584, 1600], [593, 1581, 646, 1600], [648, 1572, 826, 1600], [842, 1572, 871, 1600], [881, 1572, 939, 1600], [951, 1581, 1009, 1609], [1022, 1572, 1047, 1600], [1061, 1572, 1182, 1600], [1193, 1572, 1263, 1600], [1275, 1572, 1325, 1600], [1337, 1572, 1455, 1600], [1468, 1572, 1628, 1606], [1642, 1572, 1691, 1600], [1702, 1572, 1764, 1600], [1776, 1572, 1890, 1609], [1902, 1581, 1960, 1609], [1973, 1572, 1998, 1600], [2011, 1572, 2174, 1609], [377, 1623, 434, 1651], [446, 1623, 580, 1651], [583, 1623, 630, 1657], [639, 1623, 661, 1651], [674, 1623, 738, 1651], [750, 1627, 843, 1651], [857, 1623, 906, 1651], [918, 1623, 1077, 1657], [1091, 1623, 1140, 1651], [1153, 1623, 1312, 1660], [1325, 1627, 1415, 1660], [376, 1737, 435, 1772], [488, 1737, 587, 1772], [602, 1740, 786, 1781], [799, 1737, 861, 1772], [875, 1737, 1021, 1779], [374, 1822, 419, 1850], [420, 1822, 522, 1850], [534, 1831, 604, 1850], [615, 1822, 640, 1850], [654, 1813, 733, 1860], [747, 1822, 916, 1859], [932, 1823, 985, 1850], [997, 1822, 1132, 1850], [1144, 1822, 1201, 1850], [1214, 1831, 1284, 1850], [1296, 1822, 1368, 1859], [1380, 1822, 1428, 1850], [1439, 1822, 1670, 1859], [1687, 1822, 1750, 1850], [1762, 1822, 1820, 1850], [1822, 1822, 1874, 1850], [1886, 1822, 1936, 1850], [1947, 1826, 2175, 1859], [375, 1873, 446, 1901], [457, 1873, 482, 1901], [889, 1924, 978, 1958], [1053, 1915, 1208, 1966], [1224, 1915, 1314, 1952], [1319, 1924, 1391, 1960], [1425, 1928, 1468, 1952], [1486, 1921, 1565, 1962], [1584, 1923, 1657, 1958], [2076, 1924, 2173, 1959], [374, 1999, 444, 2027], [456, 1999, 593, 2036], [604, 2008, 660, 2027], [671, 1999, 708, 2027], [722, 1999, 808, 2036], [819, 1999, 913, 2036], [926, 1999, 1030, 2028], [1041, 1999, 1081, 2036], [1093, 1999, 1234, 2036], [1247, 1999, 1302, 2033], [1315, 1999, 1413, 2027], [1426, 1999, 1474, 2027], [1486, 1999, 1557, 2036], [1569, 1999, 1740, 2028], [1753, 2003, 1815, 2036], [1828, 1999, 1852, 2027], [1865, 1999, 2030, 2036], [2042, 2003, 2113, 2027], [2125, 1999, 2173, 2027], [376, 2049, 496, 2084], [513, 2051, 560, 2078], [563, 2050, 635, 2078], [647, 2050, 733, 2078], [745, 2050, 771, 2078], [785, 2059, 822, 2078], [834, 2050, 1001, 2087], [1013, 2050, 1221, 2079], [1233, 2050, 1392, 2087], [1405, 2050, 1470, 2085], [1483, 2059, 1551, 2087], [1568, 2050, 1628, 2084], [1642, 2050, 1718, 2085], [1734, 2050, 1792, 2078], [1805, 2059, 1840, 2078], [1854, 2047, 1937, 2088], [1953, 2050, 2027, 2078], [2038, 2050, 2173, 2078], [376, 2101, 424, 2129], [436, 2101, 495, 2129], [507, 2110, 641, 2138], [655, 2110, 703, 2129], [715, 2101, 832, 2138], [846, 2101, 1003, 2129], [1022, 2102, 1069, 2138], [1082, 2101, 1263, 2138], [1276, 2101, 1360, 2129], [1372, 2101, 1404, 2129], [1416, 2110, 1472, 2129], [1484, 2101, 1536, 2130], [1549, 2101, 1711, 2130], [1711, 2101, 1783, 2129], [1796, 2101, 1933, 2129], [1943, 2110, 2020, 2138], [2034, 2101, 2135, 2129], [2147, 2101, 2173, 2129], [376, 2152, 524, 2180], [376, 2280, 403, 2321], [465, 2281, 585, 2322], [603, 2283, 845, 2333], [862, 2280, 936, 2322], [952, 2280, 1395, 2322], [1413, 2281, 1493, 2322], [374, 2388, 425, 2415], [435, 2396, 502, 2416], [513, 2396, 583, 2415], [584, 2391, 681, 2415], [692, 2387, 859, 2424], [870, 2387, 937, 2416], [947, 2396, 982, 2415], [984, 2387, 1059, 2415], [1070, 2387, 1201, 2415], [1215, 2387, 1326, 2415], [1336, 2396, 1410, 2424], [1420, 2391, 1569, 2424], [1581, 2387, 1699, 2415], [1711, 2387, 1804, 2415], [1814, 2387, 1917, 2416], [1928, 2396, 1944, 2415], [1953, 2387, 2173, 2424], [376, 2438, 555, 2466], [567, 2442, 597, 2466], [608, 2438, 718, 2466], [730, 2438, 1019, 2466], [1031, 2439, 1084, 2466], [1098, 2438, 1174, 2473], [1186, 2438, 1354, 2475], [376, 2552, 434, 2587], [488, 2552, 698, 2596], [712, 2552, 887, 2596], [374, 2637, 436, 2665], [447, 2637, 531, 2665], [543, 2637, 710, 2674], [723, 2637, 869, 2674], [883, 2637, 958, 2672], [971, 2637, 995, 2665], [1010, 2646, 1026, 2665], [1038, 2637, 1150, 2674], [1162, 2646, 1230, 2665], [1243, 2637, 1278, 2665], [1287, 2637, 1335, 2665], [1348, 2646, 1430, 2665], [1443, 2637, 1562, 2674], [1574, 2637, 1651, 2665], [1664, 2637, 1700, 2665], [1709, 2637, 1825, 2665], [1838, 2637, 1936, 2665], [1949, 2646, 2006, 2665], [2018, 2646, 2087, 2674], [2098, 2637, 2173, 2666], [377, 2688, 490, 2717], [501, 2688, 704, 2725], [719, 2697, 753, 2716], [765, 2688, 826, 2716], [838, 2697, 885, 2716], [897, 2697, 965, 2716], [978, 2688, 1063, 2717], [1024, 2788, 1111, 2822], [1166, 2785, 1245, 2826], [1260, 2770, 1394, 2841], [1400, 2785, 1522, 2841], [2097, 2788, 2173, 2823], [1259, 2935, 1294, 2963], [374, 242, 456, 270], [457, 242, 560, 270], [572, 252, 600, 276], [616, 242, 677, 277], [691, 242, 704, 270], [722, 243, 775, 276], [792, 244, 818, 276], [834, 252, 868, 270], [870, 242, 919, 277], [932, 242, 976, 270], [990, 242, 1047, 270], [1059, 251, 1182, 271], [437, 293, 503, 321], [519, 292, 580, 320], [597, 292, 647, 320], [662, 292, 748, 320], [764, 292, 905, 329], [922, 292, 1008, 327], [1028, 292, 1078, 320], [1094, 301, 1179, 320], [1196, 292, 1339, 329], [1355, 292, 1497, 329], [1513, 292, 1589, 327], [1607, 301, 1665, 320], [1682, 292, 1747, 320], [1763, 292, 1802, 320], [1819, 292, 1939, 320], [1956, 292, 2007, 320], [2022, 292, 2174, 329], [376, 343, 526, 371], [551, 343, 615, 371], [629, 343, 688, 380], [703, 347, 734, 371], [749, 343, 844, 380], [860, 352, 894, 371], [910, 343, 936, 371], [951, 347, 982, 371], [996, 352, 1052, 371], [1068, 344, 1188, 371], [1198, 343, 1352, 380], [1366, 343, 1504, 372], [1521, 343, 1612, 380], [1627, 343, 1702, 372], [1717, 352, 1734, 371], [1748, 343, 1911, 380], [1926, 352, 1954, 372], [1956, 343, 2099, 371], [2114, 343, 2174, 371], [376, 393, 548, 431], [563, 393, 717, 431], [740, 395, 863, 422], [875, 394, 1028, 431], [1042, 394, 1183, 422], [1199, 394, 1288, 423], [1303, 403, 1363, 422], [1377, 398, 1408, 422], [1421, 403, 1477, 422], [1492, 394, 1734, 431], [1748, 394, 1913, 431], [1927, 403, 2003, 431], [2018, 398, 2173, 431], [374, 445, 499, 473], [511, 445, 664, 482], [677, 445, 789, 474], [801, 454, 1014, 482], [1027, 445, 1118, 473], [1128, 445, 1291, 482], [1304, 445, 1438, 482], [1452, 445, 1554, 473], [1568, 454, 1626, 473], [1638, 449, 1667, 473], [1680, 449, 1821, 482], [1833, 445, 1882, 473], [1893, 454, 1968, 482], [1980, 449, 2117, 482], [2128, 445, 2175, 473], [376, 496, 425, 524], [438, 496, 533, 524], [547, 505, 615, 524], [627, 493, 702, 534], [720, 509, 748, 518], [765, 490, 858, 536], [871, 493, 958, 534], [973, 496, 1014, 533], [1028, 496, 1193, 533], [1197, 496, 1267, 524], [1280, 496, 1449, 524], [1461, 506, 1489, 530], [1504, 505, 1580, 533], [1594, 500, 1758, 533], [1776, 496, 1849, 524], [1864, 496, 2002, 533], [2015, 496, 2099, 524], [2113, 500, 2144, 524], [2158, 505, 2175, 524], [375, 546, 477, 583], [489, 546, 624, 574], [635, 546, 749, 583], [763, 555, 812, 574], [823, 546, 928, 583], [940, 546, 958, 575], [970, 546, 1017, 574], [1028, 555, 1044, 574], [1055, 546, 1269, 574], [1285, 547, 1318, 574], [1329, 546, 1412, 574], [1422, 546, 1528, 580], [1540, 546, 1700, 583], [1713, 546, 1845, 583], [1857, 546, 1989, 574], [2001, 546, 2173, 583], [376, 597, 425, 625], [436, 606, 511, 634], [523, 601, 661, 634], [842, 653, 994, 694], [1014, 656, 1191, 693], [1245, 648, 1470, 699], [1484, 645, 1593, 709], [1606, 653, 1705, 694], [2097, 656, 2173, 691], [375, 751, 415, 788], [427, 751, 591, 788], [603, 751, 745, 788], [758, 751, 807, 779], [819, 751, 984, 780], [995, 760, 1070, 788], [1082, 755, 1232, 788], [1246, 760, 1350, 793], [1368, 751, 1425, 779], [1437, 751, 1507, 779], [1519, 751, 1673, 779], [1675, 751, 1781, 788], [1792, 755, 1920, 788], [1937, 751, 2007, 779], [2021, 751, 2135, 788], [2148, 751, 2172, 779], [376, 802, 455, 830], [465, 802, 506, 839], [518, 811, 606, 830], [609, 802, 670, 830], [681, 811, 697, 830], [708, 802, 864, 830], [875, 802, 1007, 836], [1021, 802, 1120, 830], [1132, 806, 1306, 839], [1320, 811, 1525, 839], [1537, 806, 1566, 830], [1580, 802, 1629, 830], [1642, 802, 1772, 830], [1785, 802, 1820, 830], [1829, 802, 1879, 830], [1891, 802, 2003, 831], [2015, 799, 2178, 840], [855, 920, 1072, 961], [1098, 920, 1292, 961], [376, 1454, 482, 1491], [494, 1454, 522, 1483], [539, 1457, 643, 1490], [655, 1457, 764, 1482], [774, 1457, 802, 1482], [812, 1457, 946, 1490], [956, 1457, 1143, 1490], [1154, 1456, 1196, 1482], [1207, 1457, 1376, 1490], [1388, 1457, 1432, 1482], [1442, 1456, 1565, 1482], [1577, 1454, 1649, 1491], [1663, 1460, 1689, 1485], [1702, 1453, 1787, 1493], [1799, 1454, 1891, 1491], [1906, 1457, 2030, 1482], [2032, 1457, 2173, 1490], [376, 1504, 468, 1529], [480, 1504, 524, 1529], [536, 1512, 596, 1529], [606, 1503, 638, 1529], [646, 1504, 820, 1537], [832, 1512, 931, 1537], [941, 1512, 969, 1529], [981, 1512, 997, 1529], [1008, 1504, 1095, 1537], [1105, 1512, 1158, 1529], [1169, 1507, 1196, 1529], [1207, 1504, 1251, 1529], [1261, 1504, 1395, 1537], [1406, 1504, 1524, 1534], [1537, 1504, 1618, 1529], [1628, 1504, 1760, 1537], [1771, 1504, 1933, 1537], [1944, 1504, 1972, 1529], [1983, 1504, 2027, 1529], [2038, 1504, 2133, 1537], [2144, 1503, 2176, 1529], [376, 1550, 442, 1575], [452, 1550, 599, 1583], [611, 1553, 668, 1583], [679, 1550, 794, 1583], [805, 1550, 849, 1575], [859, 1558, 908, 1575], [919, 1549, 951, 1575], [959, 1558, 975, 1575], [985, 1549, 1126, 1575], [1136, 1550, 1254, 1575], [1268, 1550, 1320, 1575], [1329, 1550, 1506, 1575], [1518, 1549, 1537, 1583], [1549, 1550, 1593, 1575], [1605, 1558, 1679, 1575], [1691, 1550, 1785, 1575], [1786, 1550, 1915, 1583], [1926, 1549, 1962, 1583], [1969, 1550, 2026, 1583], [2036, 1550, 2174, 1583], [376, 1597, 420, 1622], [431, 1596, 450, 1630], [463, 1597, 584, 1630], [594, 1600, 718, 1630], [727, 1596, 764, 1630], [775, 1597, 808, 1622], [819, 1597, 1032, 1630], [1042, 1597, 1188, 1630], [1199, 1600, 1328, 1630], [438, 1692, 591, 1720], [602, 1692, 754, 1729], [766, 1692, 940, 1720], [953, 1701, 1011, 1720], [1022, 1692, 1098, 1720], [1111, 1692, 1160, 1720], [1171, 1692, 1350, 1729], [1363, 1701, 1458, 1730], [1474, 1692, 1560, 1727], [1577, 1693, 1611, 1720], [1623, 1692, 1705, 1721], [1716, 1692, 1840, 1721], [1853, 1701, 1901, 1721], [1912, 1692, 2021, 1729], [2034, 1692, 2174, 1720], [377, 1752, 463, 1771], [478, 1743, 514, 1771], [527, 1743, 577, 1771], [591, 1743, 801, 1780], [826, 1743, 890, 1771], [906, 1752, 979, 1771], [994, 1743, 1030, 1771], [1044, 1743, 1083, 1771], [1098, 1743, 1135, 1771], [1147, 1743, 1231, 1771], [1245, 1743, 1271, 1771], [1286, 1743, 1349, 1771], [1363, 1743, 1440, 1771], [1453, 1743, 1512, 1780], [1529, 1747, 1610, 1780], [1626, 1743, 1690, 1772], [1704, 1743, 1743, 1771], [1757, 1743, 1923, 1780], [1939, 1747, 2021, 1780], [2036, 1752, 2109, 1771], [2124, 1743, 2174, 1771], [376, 1794, 543, 1822], [555, 1804, 583, 1828], [598, 1798, 698, 1822], [715, 1794, 806, 1828], [819, 1794, 909, 1831], [920, 1794, 1071, 1831], [1084, 1794, 1221, 1831], [1235, 1794, 1292, 1822], [1305, 1794, 1522, 1828], [1537, 1803, 1594, 1831], [1606, 1803, 1722, 1822], [1735, 1794, 1875, 1822], [1887, 1794, 2023, 1831], [2034, 1794, 2175, 1831], [374, 1844, 448, 1873], [463, 1844, 602, 1881], [616, 1844, 814, 1881], [830, 1853, 887, 1872], [901, 1844, 940, 1872], [956, 1844, 1063, 1872], [1078, 1844, 1110, 1872], [1126, 1853, 1143, 1872], [1156, 1844, 1263, 1881], [1278, 1844, 1418, 1872], [1432, 1844, 1584, 1881], [1599, 1844, 1790, 1873], [1816, 1844, 1904, 1872], [1918, 1844, 1977, 1872], [1994, 1844, 2112, 1872], [2126, 1853, 2174, 1873], [376, 1895, 544, 1932], [557, 1895, 642, 1923], [655, 1895, 740, 1923], [752, 1895, 794, 1932], [808, 1895, 953, 1932], [966, 1895, 1050, 1923], [1062, 1899, 1093, 1923], [1106, 1899, 1180, 1924], [1195, 1895, 1253, 1923], [1266, 1895, 1593, 1932], [1606, 1896, 1660, 1923], [1673, 1895, 1845, 1932], [1860, 1895, 1962, 1924], [1975, 1904, 2022, 1924], [2035, 1895, 2107, 1923], [2118, 1904, 2174, 1923], [374, 1946, 478, 1974], [489, 1946, 627, 1983], [629, 1946, 765, 1975], [778, 1946, 826, 1974], [838, 1946, 1013, 1983], [1026, 1955, 1042, 1974], [1054, 1946, 1133, 1974], [1146, 1955, 1228, 1983], [1240, 1946, 1276, 1974], [1286, 1946, 1492, 1983], [376, 2057, 455, 2086], [500, 2057, 661, 2087], [673, 2058, 815, 2094], [828, 2057, 907, 2093], [374, 2136, 437, 2164], [449, 2136, 600, 2164], [612, 2136, 742, 2173], [754, 2136, 876, 2164], [891, 2136, 953, 2170], [969, 2136, 1068, 2165], [1081, 2136, 1219, 2173], [1221, 2136, 1282, 2164], [1291, 2136, 1341, 2164], [1352, 2136, 1432, 2164], [968, 2229, 1035, 2282], [1089, 2221, 1157, 2271], [1171, 2221, 1272, 2267], [1286, 2233, 1314, 2260], [1327, 2226, 1419, 2267], [1434, 2233, 1462, 2260], [1475, 2226, 1579, 2267], [374, 2332, 476, 2361], [490, 2332, 515, 2360], [531, 2341, 548, 2360], [560, 2332, 722, 2369], [735, 2341, 806, 2360], [820, 2332, 856, 2360], [869, 2332, 944, 2367], [959, 2332, 1055, 2360], [1073, 2345, 1101, 2354], [1120, 2332, 1147, 2360], [1169, 2332, 1233, 2360], [1247, 2332, 1371, 2360], [1386, 2332, 1509, 2361], [1524, 2332, 1574, 2360], [1587, 2332, 1755, 2369], [1769, 2332, 1901, 2360], [1915, 2332, 1947, 2360], [1960, 2332, 2136, 2369], [2149, 2333, 2177, 2366], [374, 2383, 472, 2412], [483, 2383, 507, 2411], [520, 2383, 696, 2420], [708, 2387, 737, 2411], [749, 2392, 893, 2420], [905, 2387, 934, 2411], [946, 2383, 994, 2411], [1006, 2383, 1121, 2411], [1134, 2383, 1270, 2411], [1287, 2383, 1381, 2420], [1393, 2384, 1443, 2411], [1455, 2383, 1502, 2411], [1511, 2383, 1657, 2420], [1670, 2383, 1802, 2420], [1814, 2383, 1861, 2411], [1871, 2383, 1918, 2411], [1930, 2383, 2174, 2411], [374, 2442, 421, 2461], [423, 2433, 621, 2470], [632, 2442, 763, 2470], [765, 2433, 826, 2461], [841, 2433, 893, 2467], [438, 2485, 461, 2512], [470, 2484, 523, 2512], [535, 2484, 598, 2512], [608, 2484, 684, 2512], [695, 2484, 777, 2513], [779, 2484, 868, 2512], [878, 2484, 926, 2512], [938, 2484, 1116, 2521], [1126, 2484, 1162, 2512], [1169, 2484, 1225, 2512], [1237, 2484, 1356, 2512], [1367, 2484, 1392, 2512], [1403, 2484, 1570, 2521], [1580, 2488, 1609, 2512], [1619, 2484, 1801, 2521], [1813, 2484, 1984, 2521], [1994, 2484, 2173, 2521], [376, 2539, 446, 2563], [459, 2535, 569, 2563], [581, 2535, 651, 2563], [662, 2535, 819, 2572], [836, 2535, 909, 2569], [923, 2544, 939, 2563], [950, 2535, 1113, 2572], [1126, 2535, 1210, 2563], [1213, 2535, 1450, 2564], [1464, 2535, 1558, 2564], [1571, 2535, 1740, 2572], [1753, 2544, 1771, 2563], [1774, 2535, 1835, 2563], [1837, 2535, 1985, 2564], [1997, 2535, 2174, 2563], [376, 2586, 411, 2614], [421, 2586, 495, 2614], [506, 2586, 674, 2623], [691, 2586, 719, 2614], [731, 2595, 815, 2614], [827, 2586, 960, 2614], [972, 2586, 1094, 2614], [1105, 2586, 1199, 2614], [1211, 2595, 1251, 2614], [1262, 2586, 1432, 2614], [1446, 2586, 1562, 2614], [1574, 2586, 1609, 2614], [1618, 2586, 1799, 2623], [1813, 2586, 1838, 2614], [1850, 2586, 1994, 2623], [2009, 2595, 2039, 2614], [2052, 2595, 2099, 2614], [2111, 2586, 2174, 2614], [377, 2646, 427, 2665], [438, 2637, 543, 2665], [438, 2688, 528, 2715], [543, 2687, 705, 2724], [723, 2687, 749, 2715], [762, 2696, 847, 2715], [862, 2687, 934, 2715], [949, 2691, 1010, 2716], [1024, 2687, 1222, 2724], [1239, 2696, 1288, 2715], [1302, 2691, 1425, 2724], [1440, 2687, 1512, 2722], [1530, 2697, 1564, 2715], [1585, 2693, 1611, 2717], [1634, 2687, 1675, 2722], [1692, 2687, 1764, 2715], [1779, 2687, 1802, 2715], [1816, 2687, 1842, 2715], [1858, 2696, 1943, 2715], [1958, 2687, 2057, 2724], [2073, 2691, 2103, 2715], [2118, 2696, 2174, 2715], [373, 2738, 669, 2766], [680, 2738, 809, 2774], [823, 2738, 922, 2773], [938, 2738, 1000, 2772], [1016, 2738, 1079, 2773], [1092, 2738, 1160, 2775], [1175, 2738, 1216, 2773], [1230, 2747, 1246, 2766], [1258, 2738, 1490, 2775], [1502, 2738, 1643, 2766], [1655, 2738, 1704, 2767], [1716, 2738, 1764, 2766], [1778, 2738, 2006, 2775], [2008, 2738, 2128, 2766], [2141, 2738, 2177, 2766], [376, 2789, 475, 2817], [489, 2789, 562, 2823], [579, 2789, 651, 2817], [662, 2789, 788, 2826], [799, 2789, 949, 2826], [961, 2789, 1085, 2817], [1098, 2789, 1123, 2817], [1137, 2789, 1289, 2817], [1300, 2789, 1432, 2817], [1444, 2789, 1466, 2817], [1477, 2793, 1530, 2817], [1541, 2789, 1614, 2826], [1626, 2789, 1785, 2817], [1798, 2798, 1835, 2817], [1848, 2789, 1990, 2826], [2002, 2789, 2129, 2817], [2141, 2789, 2177, 2817], [1259, 2935, 1293, 2964], [373, 239, 557, 277], [569, 240, 588, 268], [600, 240, 751, 268], [763, 240, 893, 277], [417, 296, 541, 333], [559, 306, 603, 332], [615, 306, 659, 330], [673, 296, 757, 333], [770, 296, 866, 333], [878, 305, 901, 332], [918, 302, 939, 326], [955, 296, 1014, 324], [417, 347, 563, 375], [576, 356, 616, 382], [633, 360, 661, 369], [676, 356, 709, 383], [721, 356, 762, 383], [779, 360, 807, 369], [823, 356, 859, 383], [876, 360, 904, 369], [919, 347, 946, 381], [960, 349, 973, 375], [987, 360, 1015, 369], [1031, 347, 1057, 376], [417, 397, 510, 427], [523, 398, 663, 435], [675, 398, 791, 426], [803, 402, 855, 426], [867, 402, 927, 426], [939, 398, 981, 427], [479, 459, 512, 483], [526, 449, 689, 486], [701, 453, 846, 486], [865, 458, 897, 483], [914, 462, 942, 471], [957, 458, 1064, 491], [1074, 446, 1125, 487], [1140, 453, 1168, 480], [1178, 446, 1242, 487], [479, 509, 512, 534], [528, 503, 601, 536], [616, 508, 694, 537], [712, 512, 740, 521], [756, 508, 793, 534], [807, 503, 835, 530], [846, 508, 883, 535], [899, 516, 925, 517], [939, 508, 982, 534], [479, 560, 511, 584], [526, 550, 689, 587], [701, 554, 846, 587], [865, 559, 942, 587], [960, 563, 988, 572], [1003, 559, 1098, 588], [1101, 547, 1167, 593], [1182, 554, 1210, 581], [1223, 547, 1282, 588], [479, 611, 511, 635], [528, 605, 601, 638], [619, 610, 692, 638], [710, 614, 738, 623], [754, 610, 786, 635], [801, 605, 829, 632], [842, 610, 874, 637], [890, 618, 916, 619], [930, 610, 1019, 638], [479, 652, 651, 683], [417, 703, 480, 732], [492, 702, 585, 732], [417, 753, 541, 782], [555, 762, 602, 788], [373, 867, 557, 905], [569, 867, 588, 897], [600, 871, 862, 896], [872, 871, 990, 904], [417, 923, 541, 960], [559, 933, 677, 959], [689, 933, 746, 958], [760, 923, 843, 960], [856, 923, 953, 960], [965, 932, 988, 959], [1005, 929, 1026, 953], [1042, 923, 1100, 951], [417, 974, 563, 1002], [576, 983, 616, 1009], [633, 987, 661, 996], [676, 983, 709, 1010], [724, 968, 760, 1013], [777, 987, 805, 996], [821, 974, 848, 1008], [862, 974, 931, 1002], [947, 974, 1250, 1010], [417, 1024, 510, 1054], [523, 1025, 663, 1062], [675, 1025, 814, 1053], [826, 1029, 878, 1053], [890, 1029, 951, 1053], [962, 1025, 1004, 1054], [479, 1075, 530, 1105], [542, 1077, 553, 1104], [568, 1089, 596, 1098], [614, 1076, 627, 1104], [642, 1080, 673, 1104], [685, 1086, 719, 1104], [732, 1076, 762, 1104], [771, 1076, 904, 1113], [916, 1076, 958, 1105], [540, 1126, 576, 1165], [594, 1140, 622, 1149], [636, 1136, 741, 1169], [751, 1124, 814, 1165], [479, 1177, 542, 1206], [554, 1176, 605, 1206], [480, 1237, 558, 1265], [576, 1241, 604, 1250], [623, 1221, 653, 1270], [666, 1225, 718, 1269], [728, 1228, 764, 1266], [479, 1278, 530, 1308], [542, 1280, 553, 1307], [568, 1292, 596, 1301], [614, 1279, 627, 1307], [642, 1283, 673, 1307], [685, 1289, 719, 1307], [732, 1279, 762, 1307], [771, 1279, 904, 1316], [916, 1279, 958, 1308], [543, 1324, 616, 1371], [634, 1343, 662, 1352], [678, 1339, 755, 1367], [771, 1334, 799, 1361], [812, 1324, 845, 1368], [861, 1347, 887, 1348], [899, 1324, 936, 1368], [479, 1381, 542, 1410], [554, 1380, 605, 1410], [479, 1431, 641, 1462], [417, 1482, 480, 1511], [492, 1481, 585, 1511], [417, 1533, 541, 1562], [555, 1542, 591, 1567], [375, 1682, 579, 1719], [592, 1682, 643, 1710], [656, 1682, 721, 1710], [734, 1682, 839, 1710], [850, 1682, 1058, 1719], [1070, 1682, 1120, 1710], [1132, 1682, 1206, 1710], [1218, 1686, 1249, 1710], [1261, 1682, 1311, 1710], [1323, 1682, 1489, 1710], [1500, 1691, 1576, 1719], [1588, 1686, 1750, 1719], [1767, 1682, 1839, 1710], [1851, 1682, 1965, 1710], [1978, 1682, 2083, 1710], [2095, 1691, 2130, 1710], [2143, 1686, 2174, 1710], [376, 1733, 504, 1770], [517, 1742, 533, 1761], [543, 1733, 649, 1770], [660, 1733, 784, 1770], [796, 1733, 1055, 1770], [1067, 1733, 1114, 1761], [1126, 1733, 1415, 1761], [1427, 1734, 1479, 1761], [1491, 1733, 1654, 1770], [1667, 1732, 1770, 1770], [376, 1843, 457, 1872], [499, 1843, 703, 1881], [715, 1843, 894, 1873], [906, 1861, 927, 1864], [938, 1843, 1260, 1881], [1273, 1843, 1357, 1879], [374, 1923, 438, 1951], [453, 1923, 764, 1960], [780, 1923, 863, 1958], [879, 1923, 1004, 1951], [1020, 1932, 1083, 1952], [1098, 1923, 1261, 1960], [1276, 1923, 1402, 1951], [1417, 1923, 1466, 1951], [1480, 1923, 1673, 1960], [1688, 1923, 1738, 1951], [1754, 1932, 1823, 1951], [1837, 1923, 1873, 1951], [1886, 1927, 1947, 1952], [1963, 1923, 2175, 1958], [376, 1983, 491, 2003], [503, 1974, 654, 2002], [671, 1974, 744, 2008], [758, 1974, 788, 2002], [800, 1974, 850, 2002], [861, 1974, 949, 2002], [1087, 2025, 1154, 2078], [1206, 2024, 1238, 2062], [1247, 2022, 1298, 2063], [1313, 2029, 1341, 2056], [1355, 2024, 1388, 2062], [1396, 2022, 1460, 2063], [2097, 2025, 2173, 2060], [377, 2114, 452, 2142], [463, 2114, 526, 2142], [540, 2111, 577, 2152], [592, 2113, 669, 2142], [679, 2111, 728, 2152], [743, 2117, 766, 2143], [782, 2111, 819, 2152], [834, 2113, 911, 2142], [921, 2111, 970, 2152], [987, 2112, 1015, 2151], [1031, 2110, 1058, 2145], [1074, 2114, 1138, 2142], [1150, 2114, 1275, 2142], [1288, 2118, 1426, 2151], [1438, 2114, 1479, 2151], [1491, 2114, 1630, 2151], [1644, 2123, 1661, 2142], [1673, 2114, 1766, 2142], [1778, 2114, 1814, 2142], [1823, 2114, 2007, 2148], [2022, 2114, 2080, 2142], [2092, 2114, 2124, 2142], [2136, 2114, 2173, 2142], [377, 2165, 512, 2202], [524, 2165, 604, 2193], [615, 2174, 671, 2193], [682, 2165, 721, 2193], [733, 2165, 849, 2193], [862, 2174, 892, 2193], [1045, 2225, 1124, 2253], [1142, 2229, 1170, 2238], [1189, 2208, 1206, 2258], [1222, 2213, 1288, 2256], [1297, 2216, 1354, 2256], [1372, 2213, 1440, 2254], [1453, 2225, 1503, 2252], [2097, 2216, 2173, 2251], [374, 2291, 476, 2320], [490, 2291, 540, 2319], [556, 2291, 711, 2327], [726, 2297, 874, 2328], [889, 2291, 937, 2332], [961, 2301, 998, 2319], [1019, 2291, 1036, 2319], [1045, 2300, 1144, 2336], [1157, 2291, 1216, 2319], [1240, 2291, 1313, 2319], [1328, 2291, 1432, 2319], [1434, 2291, 1494, 2319], [1510, 2295, 1563, 2319], [1577, 2291, 1697, 2328], [1713, 2291, 1884, 2328], [1899, 2295, 1930, 2319], [1944, 2291, 2085, 2328], [2100, 2291, 2175, 2326], [375, 2342, 502, 2370], [515, 2342, 550, 2370], [559, 2342, 607, 2370], [620, 2342, 743, 2379], [756, 2351, 841, 2370], [852, 2346, 933, 2370], [949, 2342, 1155, 2370], [1169, 2342, 1199, 2370], [1214, 2342, 1275, 2376], [1291, 2351, 1307, 2370], [1319, 2342, 1443, 2370], [1455, 2342, 1693, 2370], [1705, 2351, 1765, 2371], [1777, 2342, 1925, 2379], [1937, 2342, 1976, 2379], [1989, 2342, 2109, 2379], [2120, 2351, 2173, 2370], [376, 2393, 411, 2421], [421, 2397, 588, 2430], [601, 2393, 680, 2421], [692, 2393, 884, 2421], [895, 2393, 1111, 2430], [1126, 2402, 1142, 2421], [1154, 2393, 1289, 2421], [1300, 2393, 1493, 2430], [1505, 2402, 1523, 2421], [1526, 2393, 1613, 2421], [1626, 2393, 1706, 2430], [1719, 2393, 1743, 2421], [1757, 2393, 1845, 2430], [1857, 2393, 1887, 2421], [1899, 2393, 2060, 2430], [2071, 2393, 2107, 2421], [2122, 2394, 2173, 2421], [377, 2444, 556, 2472], [568, 2444, 617, 2472], [628, 2444, 686, 2481], [698, 2444, 781, 2472], [794, 2444, 873, 2472], [888, 2444, 950, 2478], [964, 2444, 1068, 2472], [438, 2495, 570, 2523], [582, 2505, 616, 2523], [631, 2508, 659, 2517], [675, 2495, 692, 2523], [706, 2495, 764, 2523], [776, 2505, 820, 2531], [832, 2505, 864, 2529], [878, 2495, 970, 2532], [982, 2494, 1099, 2523], [1112, 2495, 1284, 2523], [1298, 2499, 1328, 2523], [1342, 2504, 1427, 2523], [1440, 2495, 1635, 2523], [1646, 2495, 1798, 2523], [1812, 2495, 2074, 2530], [2086, 2495, 2111, 2523], [2125, 2495, 2174, 2523], [376, 2545, 493, 2573], [506, 2545, 663, 2573], [675, 2545, 711, 2573], [722, 2554, 738, 2573], [751, 2545, 946, 2573], [957, 2545, 1115, 2582], [1126, 2545, 1273, 2582], [1288, 2554, 1339, 2573], [1354, 2545, 1420, 2580], [1436, 2545, 1581, 2582], [1593, 2542, 1685, 2583], [1702, 2558, 1730, 2567], [1745, 2542, 1837, 2583], [1854, 2562, 1880, 2563], [1894, 2538, 1942, 2573], [1947, 2554, 1980, 2581], [1993, 2544, 2025, 2580], [2041, 2545, 2067, 2573], [2080, 2545, 2145, 2573], [2158, 2554, 2174, 2573], [376, 2596, 492, 2625], [505, 2596, 662, 2624], [674, 2596, 710, 2624], [720, 2605, 805, 2624], [818, 2596, 1012, 2624], [1023, 2596, 1160, 2624], [1173, 2596, 1237, 2631], [1249, 2596, 1411, 2633], [1423, 2596, 1473, 2631], [1488, 2596, 1659, 2630], [1672, 2605, 1719, 2624], [1731, 2605, 1801, 2633], [1813, 2596, 1953, 2624], [1964, 2596, 2013, 2624], [2024, 2596, 2162, 2633], [865, 2686, 1018, 2727], [1037, 2699, 1075, 2717], [1091, 2689, 1214, 2726], [1282, 2680, 1374, 2731], [1389, 2693, 1417, 2720], [1430, 2686, 1521, 2727], [1537, 2693, 1565, 2720], [1577, 2686, 1681, 2727], [1143, 2737, 1160, 2750], [1259, 2935, 1294, 2964], [374, 242, 474, 270], [486, 251, 542, 270], [553, 242, 592, 270], [602, 242, 750, 270], [764, 242, 865, 279], [877, 242, 1066, 279], [1079, 242, 1171, 277], [1186, 251, 1216, 270], [917, 332, 984, 387], [997, 329, 1073, 370], [1087, 329, 1151, 370], [1204, 336, 1248, 360], [1294, 331, 1630, 371], [2097, 332, 2173, 367], [374, 442, 476, 471], [493, 442, 537, 476], [556, 442, 683, 470], [700, 442, 750, 470], [765, 442, 839, 470], [855, 442, 1002, 479], [1018, 442, 1054, 470], [1069, 442, 1267, 470], [1282, 442, 1422, 470], [1438, 442, 1678, 479], [1694, 446, 1725, 470], [1742, 452, 1759, 470], [1777, 442, 1842, 477], [1859, 442, 2023, 479], [2040, 442, 2092, 477], [2110, 442, 2174, 470], [376, 493, 505, 530], [522, 493, 656, 521], [671, 502, 729, 521], [743, 493, 782, 521], [796, 493, 961, 521], [977, 493, 1107, 530], [1123, 502, 1146, 521], [1168, 506, 1196, 515], [1218, 502, 1241, 521], [1257, 510, 1283, 511], [1300, 492, 1328, 521], [1354, 493, 1497, 521], [1512, 493, 1573, 528], [1577, 493, 1630, 528], [1647, 493, 1708, 521], [1724, 497, 1777, 521], [1791, 493, 1823, 521], [1839, 502, 1856, 521], [1871, 493, 1952, 521], [1968, 493, 2127, 521], [2143, 497, 2173, 521], [376, 544, 431, 571], [442, 543, 768, 578], [780, 543, 807, 571], [814, 552, 860, 572], [872, 543, 959, 580], [971, 544, 998, 571], [1000, 544, 1046, 571], [1048, 543, 1125, 571], [1136, 543, 1280, 571], [1290, 543, 1438, 571], [1450, 543, 1486, 571], [1494, 543, 1541, 571], [1553, 547, 1611, 571], [1625, 543, 1727, 582], [1740, 543, 1811, 582], [1823, 543, 1883, 571], [1893, 543, 1928, 577], [1940, 547, 1970, 571], [1981, 543, 2029, 571], [2039, 543, 2175, 580], [1035, 634, 1102, 687], [1169, 633, 1247, 679], [1260, 631, 1311, 672], [1326, 638, 1354, 665], [1368, 633, 1435, 679], [1448, 631, 1511, 672], [376, 736, 397, 764], [409, 745, 465, 764], [476, 736, 515, 764], [528, 736, 632, 764], [648, 736, 709, 770], [724, 736, 785, 764], [797, 736, 846, 764], [859, 745, 1009, 773], [1022, 736, 1098, 771], [1111, 736, 1271, 773], [1282, 736, 1323, 773], [1335, 737, 1362, 764], [1365, 736, 1427, 764], [1441, 736, 1603, 773], [1615, 736, 1667, 764], [1679, 736, 1740, 764], [1753, 736, 1827, 764], [1839, 745, 1855, 764], [1867, 736, 2034, 764], [2046, 736, 2174, 773], [375, 786, 542, 823], [554, 795, 702, 823], [704, 790, 760, 814], [773, 786, 822, 814], [834, 786, 952, 814], [965, 786, 1096, 814], [1108, 786, 1144, 814], [1154, 786, 1239, 821], [1257, 786, 1337, 815], [1350, 786, 1481, 814], [1493, 786, 1518, 814], [1531, 786, 1620, 823], [1631, 786, 1672, 823], [1684, 786, 1734, 814], [1744, 786, 1809, 823], [993, 876, 1054, 905], [1069, 877, 1150, 922], [1163, 874, 1242, 915], [1296, 886, 1362, 905], [1377, 877, 1484, 922], [1496, 874, 1554, 915], [2097, 877, 2173, 912], [374, 968, 526, 1005], [537, 968, 568, 996], [579, 968, 635, 996], [647, 968, 809, 996], [820, 977, 907, 1005], [919, 972, 1059, 1005], [1070, 968, 1145, 996], [1155, 968, 1232, 996], [1243, 968, 1424, 1002], [1438, 968, 1615, 1005], [1628, 968, 1666, 996], [1678, 968, 1726, 996], [1737, 968, 1904, 1005], [1916, 968, 1947, 996], [1958, 968, 2006, 996], [2018, 968, 2175, 1005], [376, 1028, 433, 1047], [444, 1019, 483, 1047], [494, 1019, 627, 1047], [640, 1023, 671, 1047], [682, 1019, 872, 1056], [883, 1019, 1049, 1056], [1063, 1023, 1154, 1056], [1170, 1020, 1251, 1047], [1263, 1019, 1328, 1047], [1340, 1019, 1403, 1047], [1414, 1019, 1464, 1047], [1475, 1019, 1662, 1056], [1675, 1023, 1748, 1047], [1762, 1028, 1779, 1047], [1789, 1019, 1863, 1047], [1875, 1019, 2022, 1056], [2033, 1019, 2173, 1056], [376, 1074, 406, 1098], [419, 1074, 470, 1107], [482, 1079, 499, 1098], [511, 1070, 645, 1098], [658, 1070, 734, 1105], [747, 1079, 805, 1098], [815, 1070, 854, 1098], [866, 1070, 985, 1099], [997, 1070, 1029, 1098], [1040, 1074, 1132, 1098], [1145, 1070, 1181, 1098], [1189, 1070, 1355, 1107], [1368, 1074, 1523, 1107], [1537, 1070, 1744, 1107], [1755, 1070, 1860, 1105], [1874, 1070, 1976, 1099], [1988, 1070, 2020, 1098], [2031, 1070, 2090, 1098], [2103, 1079, 2174, 1098], [376, 1120, 495, 1157], [836, 1211, 917, 1256], [929, 1208, 978, 1249], [996, 1220, 1060, 1239], [1075, 1228, 1101, 1229], [1114, 1220, 1209, 1249], [1211, 1208, 1293, 1253], [810, 1280, 917, 1325], [929, 1277, 978, 1318], [996, 1293, 1024, 1302], [1040, 1289, 1060, 1308], [1074, 1284, 1102, 1311], [1114, 1277, 1313, 1322], [1331, 1293, 1359, 1302], [1374, 1289, 1394, 1308], [1408, 1284, 1436, 1311], [1449, 1289, 1556, 1322], [1567, 1277, 1633, 1318], [1647, 1277, 1737, 1318], [374, 1376, 471, 1405], [484, 1385, 511, 1405], [513, 1385, 575, 1404], [578, 1376, 637, 1404], [638, 1376, 726, 1404], [738, 1376, 797, 1404], [809, 1376, 856, 1404], [868, 1373, 946, 1414], [964, 1389, 992, 1398], [1008, 1373, 1086, 1414], [1101, 1380, 1129, 1407], [1142, 1369, 1192, 1404], [1197, 1385, 1230, 1410], [1244, 1385, 1323, 1412], [1326, 1373, 1401, 1420], [1419, 1389, 1447, 1398], [1461, 1373, 1604, 1420], [1619, 1393, 1645, 1394], [1658, 1373, 1709, 1414], [1726, 1376, 1770, 1404], [1771, 1376, 1952, 1404], [1964, 1376, 2116, 1413], [2119, 1376, 2174, 1404], [374, 1427, 472, 1456], [484, 1427, 531, 1455], [544, 1428, 571, 1455], [573, 1427, 745, 1455], [756, 1427, 781, 1455], [793, 1427, 884, 1455], [898, 1427, 973, 1462], [986, 1436, 1042, 1455], [1054, 1427, 1116, 1455], [1128, 1427, 1165, 1455], [1178, 1427, 1292, 1456], [1303, 1427, 1334, 1455], [1345, 1431, 1433, 1455], [1446, 1427, 1481, 1455], [1489, 1427, 1648, 1464], [1662, 1431, 1749, 1464], [1764, 1436, 1794, 1455], [1807, 1436, 1852, 1456], [1865, 1436, 1912, 1455], [1925, 1427, 2064, 1464], [2077, 1428, 2132, 1455], [2144, 1431, 2173, 1455], [376, 1477, 425, 1505], [437, 1477, 583, 1505], [595, 1477, 746, 1505], [760, 1476, 870, 1522], [883, 1476, 966, 1522], [981, 1477, 1038, 1505], [1050, 1477, 1213, 1514], [1225, 1477, 1272, 1505], [1284, 1486, 1321, 1505], [1333, 1477, 1480, 1505], [1491, 1477, 1628, 1505], [1640, 1477, 1743, 1514], [1755, 1477, 1930, 1514], [438, 1528, 511, 1556], [527, 1528, 705, 1565], [720, 1528, 895, 1556], [911, 1528, 1027, 1556], [1041, 1528, 1077, 1556], [1089, 1529, 1147, 1556], [1162, 1528, 1187, 1556], [1202, 1528, 1363, 1565], [1379, 1528, 1411, 1556], [1425, 1528, 1601, 1565], [1615, 1528, 1643, 1557], [1669, 1529, 1749, 1556], [1764, 1528, 1827, 1556], [1841, 1528, 1873, 1556], [1888, 1532, 2021, 1556], [2035, 1528, 2109, 1557], [2124, 1528, 2174, 1556], [376, 1579, 503, 1616], [515, 1580, 570, 1607], [582, 1579, 705, 1607], [707, 1579, 784, 1613], [797, 1579, 909, 1608], [921, 1579, 994, 1607], [1007, 1583, 1059, 1607], [1070, 1579, 1186, 1616], [1198, 1579, 1301, 1616], [1315, 1588, 1372, 1616], [1383, 1579, 1666, 1616], [1680, 1579, 1746, 1607], [1759, 1579, 1907, 1607], [1908, 1579, 1975, 1616], [1988, 1579, 2178, 1616], [373, 1676, 557, 1714], [569, 1677, 588, 1706], [600, 1677, 787, 1714], [798, 1677, 969, 1705], [982, 1695, 1003, 1697], [1014, 1677, 1149, 1714], [1163, 1677, 1315, 1705], [1328, 1677, 1410, 1712], [417, 1733, 541, 1770], [559, 1743, 603, 1769], [615, 1743, 648, 1768], [663, 1733, 779, 1762], [792, 1733, 964, 1761], [977, 1733, 1013, 1761], [1023, 1742, 1108, 1761], [1121, 1733, 1315, 1761], [1327, 1733, 1472, 1767], [1486, 1733, 1570, 1770], [1582, 1733, 1679, 1770], [1691, 1742, 1714, 1769], [1731, 1739, 1752, 1763], [1768, 1733, 1826, 1761], [417, 1784, 563, 1812], [576, 1793, 612, 1819], [630, 1790, 651, 1814], [667, 1784, 754, 1818], [768, 1797, 796, 1806], [812, 1784, 838, 1813], [417, 1835, 526, 1863], [538, 1835, 587, 1863], [599, 1835, 758, 1872], [770, 1835, 950, 1872], [459, 1896, 566, 1940], [578, 1893, 627, 1934], [654, 1880, 734, 1924], [748, 1900, 776, 1927], [788, 1893, 972, 1938], [986, 1900, 1014, 1927], [1027, 1893, 1075, 1934], [628, 1949, 665, 1969], [459, 1964, 540, 2009], [552, 1961, 601, 2002], [631, 1956, 659, 1986], [688, 1973, 708, 1992], [723, 1961, 940, 2006], [460, 2032, 566, 2077], [578, 2029, 627, 2070], [654, 2017, 692, 2054], [714, 2032, 841, 2077], [854, 2029, 902, 2070], [919, 2041, 989, 2060], [460, 2098, 601, 2145], [628, 2085, 666, 2123], [688, 2101, 777, 2139], [779, 2098, 851, 2145], [867, 2110, 937, 2129], [417, 2151, 510, 2181], [523, 2152, 663, 2189], [675, 2152, 791, 2180], [803, 2156, 855, 2180], [867, 2156, 927, 2180], [939, 2152, 981, 2181], [480, 2211, 553, 2240], [571, 2215, 599, 2224], [618, 2195, 635, 2245], [655, 2195, 773, 2247], [783, 2202, 863, 2247], [883, 2206, 911, 2233], [923, 2195, 953, 2245], [970, 2211, 1007, 2237], [479, 2253, 651, 2284], [417, 2304, 480, 2333], [492, 2303, 585, 2333], [418, 2354, 479, 2383], [494, 2355, 575, 2399], [587, 2352, 658, 2393], [712, 2355, 899, 2400], [912, 2352, 969, 2393], [417, 2406, 541, 2435], [555, 2405, 594, 2434], [613, 2419, 641, 2428], [656, 2415, 679, 2434], [693, 2423, 719, 2424], [733, 2405, 760, 2434], [376, 2578, 456, 2608], [499, 2578, 882, 2616], [894, 2579, 1030, 2608], [1043, 2578, 1079, 2608], [1088, 2578, 1284, 2616], [1298, 2578, 1460, 2614], [374, 2658, 526, 2695], [538, 2667, 626, 2695], [638, 2658, 724, 2686], [736, 2658, 892, 2695], [904, 2667, 920, 2686], [923, 2667, 965, 2686], [975, 2658, 1132, 2695], [1144, 2658, 1300, 2695], [1311, 2658, 1358, 2686], [1370, 2658, 1487, 2695], [1498, 2658, 1648, 2695], [1661, 2658, 1813, 2695], [1825, 2658, 1873, 2686], [1886, 2658, 2101, 2686], [2113, 2658, 2148, 2686], [2158, 2667, 2174, 2686], [376, 2708, 486, 2736], [498, 2708, 627, 2745], [641, 2705, 715, 2746], [731, 2712, 759, 2739], [771, 2705, 805, 2746], [810, 2705, 872, 2746], [887, 2708, 959, 2736], [972, 2708, 996, 2736], [1010, 2717, 1026, 2736], [1038, 2708, 1131, 2736], [1142, 2712, 1279, 2745], [1293, 2708, 1366, 2742], [1380, 2708, 1428, 2736], [1441, 2708, 1797, 2745], [1808, 2708, 1935, 2736], [1947, 2708, 1983, 2736], [1991, 2708, 2172, 2745], [376, 2768, 431, 2787], [442, 2759, 481, 2787], [493, 2759, 606, 2796], [608, 2763, 661, 2787], [675, 2768, 784, 2796], [785, 2759, 940, 2796], [954, 2763, 1082, 2796], [1094, 2759, 1142, 2787], [1154, 2759, 1272, 2796], [1285, 2759, 1334, 2787], [1345, 2759, 1577, 2787], [1589, 2759, 1808, 2787], [1820, 2759, 1856, 2787], [1866, 2768, 1882, 2787], [1895, 2768, 1962, 2787], [1973, 2759, 2009, 2787], [2018, 2759, 2178, 2787], [374, 2810, 444, 2838], [458, 2814, 583, 2847], [595, 2810, 672, 2838], [686, 2810, 774, 2839], [785, 2814, 815, 2838], [828, 2810, 1036, 2847], [1049, 2819, 1065, 2838], [1076, 2810, 1212, 2847], [1223, 2810, 1254, 2838], [1265, 2810, 1313, 2838], [1325, 2810, 1404, 2838], [1415, 2810, 1502, 2844], [1516, 2804, 1609, 2851], [1622, 2807, 1710, 2848], [1725, 2810, 1786, 2838], [1800, 2819, 1816, 2838], [1829, 2810, 2028, 2847], [2039, 2810, 2175, 2847], [1255, 2935, 1295, 2964], [373, 239, 557, 277], [571, 239, 609, 269], [621, 243, 789, 276], [800, 243, 940, 268], [950, 243, 1065, 268], [1076, 242, 1108, 268], [1116, 243, 1280, 276], [1293, 243, 1435, 275], [417, 296, 541, 333], [559, 306, 677, 332], [689, 306, 746, 330], [760, 296, 843, 333], [856, 296, 953, 333], [965, 305, 988, 332], [1005, 302, 1026, 326], [1042, 296, 1100, 324], [417, 346, 563, 374], [576, 355, 616, 382], [633, 359, 661, 368], [677, 340, 713, 386], [730, 359, 758, 368], [773, 355, 796, 382], [810, 346, 879, 374], [895, 346, 1198, 382], [417, 396, 510, 426], [523, 397, 663, 434], [675, 397, 814, 425], [826, 401, 878, 425], [890, 401, 951, 425], [962, 397, 1004, 426], [624, 443, 734, 474], [739, 443, 902, 487], [480, 468, 558, 496], [576, 480, 604, 481], [715, 482, 800, 507], [479, 509, 530, 539], [542, 511, 553, 538], [568, 523, 596, 532], [614, 510, 627, 538], [642, 514, 673, 538], [685, 520, 719, 538], [732, 510, 762, 538], [771, 510, 904, 547], [916, 510, 958, 539], [543, 561, 575, 599], [593, 574, 621, 583], [636, 553, 845, 609], [850, 561, 888, 599], [903, 565, 931, 592], [945, 558, 1039, 599], [576, 618, 578, 620], [724, 601, 736, 614], [886, 618, 888, 620], [542, 624, 621, 666], [639, 637, 667, 646], [682, 633, 745, 662], [750, 628, 805, 659], [817, 621, 876, 662], [879, 624, 929, 666], [946, 641, 972, 642], [986, 621, 1080, 662], [479, 675, 542, 704], [554, 674, 605, 704], [479, 726, 641, 757], [417, 777, 480, 806], [492, 776, 585, 806], [417, 828, 541, 857], [555, 837, 591, 862], [375, 975, 415, 1012], [427, 975, 615, 1012], [628, 984, 793, 1003], [806, 975, 983, 1003], [997, 975, 1054, 1003], [1066, 975, 1286, 1012], [1299, 975, 1381, 1003], [1392, 975, 1454, 1003], [1467, 975, 1516, 1003], [1528, 975, 1677, 1012], [1688, 975, 1815, 1012], [1829, 975, 2007, 1012], [2019, 976, 2174, 1012], [376, 1025, 562, 1062], [690, 1109, 717, 1122], [1116, 1109, 1143, 1122], [557, 1146, 624, 1174], [689, 1135, 703, 1193], [743, 1143, 876, 1184], [937, 1146, 1004, 1174], [1114, 1135, 1128, 1193], [1168, 1143, 1265, 1184], [1313, 1150, 1356, 1174], [1375, 1155, 1641, 1182], [1658, 1155, 1735, 1182], [582, 1186, 599, 1199], [1025, 1194, 1046, 1203], [678, 1204, 728, 1223], [1103, 1204, 1154, 1223], [892, 1186, 918, 1204], [923, 1186, 1002, 1204], [1007, 1186, 1022, 1199], [1261, 1248, 1288, 1261], [1749, 1266, 1769, 1293], [848, 1294, 876, 1311], [937, 1285, 1004, 1313], [1090, 1294, 1165, 1313], [1262, 1273, 1274, 1331], [1319, 1264, 1436, 1339], [1451, 1289, 1479, 1316], [1492, 1275, 1542, 1323], [1549, 1282, 1594, 1323], [1610, 1302, 1636, 1303], [1651, 1282, 1688, 1323], [1704, 1289, 1732, 1316], [1748, 1282, 1828, 1323], [1844, 1302, 1870, 1303], [1885, 1264, 1967, 1339], [1985, 1309, 1989, 1313], [892, 1324, 938, 1342], [942, 1328, 951, 1342], [959, 1334, 1002, 1342], [1007, 1324, 1046, 1342], [1059, 1324, 1143, 1342], [1147, 1324, 1192, 1342], [1249, 1342, 1299, 1361], [1750, 1313, 1767, 1341], [374, 1409, 438, 1437], [450, 1409, 573, 1437], [585, 1409, 655, 1437], [666, 1409, 798, 1446], [801, 1413, 857, 1437], [870, 1409, 955, 1437], [967, 1409, 1025, 1437], [1037, 1409, 1175, 1446], [1186, 1409, 1227, 1446], [1240, 1409, 1416, 1446], [1429, 1413, 1510, 1446], [1522, 1409, 1558, 1437], [1567, 1409, 1788, 1437], [1800, 1418, 1840, 1437], [1853, 1418, 1887, 1443], [1901, 1409, 2122, 1437], [2134, 1418, 2174, 1437], [376, 1469, 464, 1497], [477, 1469, 520, 1494], [535, 1460, 592, 1488], [605, 1469, 621, 1488], [633, 1460, 768, 1497], [781, 1464, 845, 1497], [857, 1469, 897, 1488], [909, 1469, 997, 1497], [1010, 1469, 1058, 1494], [438, 1512, 472, 1539], [487, 1511, 548, 1545], [565, 1520, 582, 1539], [593, 1511, 738, 1548], [749, 1511, 840, 1548], [853, 1511, 911, 1539], [925, 1511, 1050, 1539], [1062, 1520, 1125, 1540], [1138, 1511, 1299, 1548], [1312, 1515, 1342, 1539], [1356, 1511, 1442, 1539], [1455, 1511, 1718, 1539], [1731, 1511, 1915, 1548], [1929, 1512, 1983, 1539], [1997, 1511, 2083, 1546], [2100, 1511, 2173, 1539], [377, 1562, 524, 1599], [536, 1562, 648, 1599], [661, 1562, 779, 1599], [792, 1566, 821, 1590], [834, 1562, 881, 1590], [894, 1571, 976, 1590], [988, 1562, 1106, 1599], [1118, 1562, 1263, 1599], [1277, 1562, 1410, 1599], [1422, 1562, 1599, 1591], [1609, 1562, 1687, 1590], [1689, 1562, 1882, 1590], [1893, 1562, 1962, 1590], [1975, 1562, 2061, 1597], [2074, 1562, 2113, 1599], [2126, 1562, 2173, 1590], [376, 1612, 618, 1640], [1198, 1684, 1225, 1697], [497, 1699, 649, 1740], [669, 1702, 846, 1739], [914, 1695, 968, 1745], [982, 1719, 1008, 1720], [1022, 1694, 1083, 1741], [1098, 1706, 1126, 1733], [1139, 1691, 1248, 1755], [1261, 1699, 1360, 1740], [775, 1750, 792, 1763], [1322, 1788, 1349, 1801], [667, 1834, 695, 1835], [792, 1825, 797, 1830], [1580, 1815, 1602, 1835], [1810, 1807, 1830, 1834], [667, 1842, 695, 1851], [756, 1835, 865, 1882], [878, 1834, 1011, 1882], [1069, 1817, 1136, 1867], [0, 0, 2550, 3300], [1190, 1822, 1222, 1863], [1238, 1813, 1363, 1902], [1379, 1805, 1496, 1880], [1512, 1822, 1655, 1863], [1711, 1822, 1749, 1863], [1764, 1829, 1792, 1856], [1809, 1805, 2050, 1881], [1310, 1889, 1343, 1902], [374, 1949, 438, 1977], [453, 1953, 534, 1986], [548, 1949, 596, 1977], [609, 1949, 767, 1986], [782, 1958, 799, 1977], [812, 1949, 946, 1977], [959, 1949, 1031, 1977], [1044, 1949, 1151, 1978], [1166, 1958, 1198, 1977], [1212, 1949, 1387, 1986], [1404, 1949, 1449, 1978], [1470, 1949, 1593, 1978], [1606, 1953, 1637, 1977], [1650, 1949, 1777, 1977], [1791, 1949, 1944, 1977], [1958, 1949, 2099, 1986], [2114, 1949, 2173, 1977], [377, 2000, 526, 2037], [539, 2000, 642, 2028], [656, 2000, 832, 2037], [844, 2000, 893, 2028], [904, 2004, 1132, 2037], [1143, 2000, 1179, 2028], [1188, 2000, 1263, 2028], [1275, 2000, 1411, 2028], [1424, 2010, 1451, 2034], [1466, 2000, 1497, 2028], [1508, 2000, 1640, 2037], [376, 2110, 457, 2139], [500, 2111, 584, 2140], [596, 2110, 769, 2148], [781, 2111, 928, 2140], [374, 2190, 512, 2218], [524, 2190, 632, 2227], [645, 2190, 681, 2218], [692, 2190, 863, 2227], [866, 2194, 923, 2218], [937, 2190, 1023, 2218], [1037, 2190, 1113, 2225], [1127, 2190, 1152, 2218], [1166, 2194, 1197, 2218], [1210, 2194, 1354, 2227], [1366, 2190, 1416, 2218], [1429, 2190, 1533, 2227], [1545, 2190, 1711, 2227], [1724, 2194, 1864, 2227], [1875, 2190, 1966, 2227], [1979, 2190, 2029, 2218], [2041, 2190, 2174, 2218], [376, 2241, 462, 2269], [476, 2250, 599, 2279], [617, 2241, 690, 2269], [704, 2250, 761, 2269], [772, 2241, 811, 2269], [825, 2241, 1035, 2278], [1038, 2241, 1096, 2269], [1109, 2241, 1235, 2278], [1249, 2241, 1350, 2270], [1363, 2241, 1434, 2269], [1446, 2245, 1679, 2278], [1691, 2241, 1716, 2269], [1730, 2241, 1827, 2269], [1839, 2245, 1870, 2269], [1883, 2245, 2027, 2278], [2040, 2241, 2112, 2269], [2124, 2241, 2174, 2269], [375, 2292, 484, 2329], [496, 2279, 645, 2329], [659, 2292, 804, 2329], [817, 2292, 914, 2320], [917, 2292, 1071, 2320], [1082, 2292, 1238, 2329], [1251, 2301, 1300, 2320], [1313, 2301, 1351, 2320], [1363, 2292, 1499, 2320], [1511, 2292, 1547, 2320], [1558, 2292, 1633, 2320], [1646, 2301, 1663, 2320], [1675, 2292, 1794, 2329], [1808, 2292, 1866, 2320], [1879, 2292, 1947, 2320], [1960, 2292, 2173, 2329], [376, 2342, 432, 2370], [447, 2342, 596, 2379], [608, 2342, 656, 2370], [667, 2342, 742, 2370], [755, 2342, 936, 2379], [948, 2342, 1076, 2371], [1089, 2342, 1114, 2370], [1127, 2342, 1322, 2370], [438, 2393, 550, 2421], [553, 2393, 603, 2427], [615, 2393, 665, 2421], [677, 2397, 799, 2421], [810, 2393, 846, 2421], [855, 2393, 956, 2430], [967, 2393, 1145, 2430], [1158, 2402, 1175, 2421], [1185, 2393, 1299, 2430], [1299, 2393, 1460, 2430], [1473, 2393, 1623, 2430], [1636, 2393, 1661, 2421], [1674, 2393, 1763, 2430], [1775, 2393, 1816, 2430], [1828, 2393, 2010, 2422], [2023, 2393, 2081, 2421], [2093, 2393, 2176, 2421], [379, 2444, 452, 2478], [465, 2444, 565, 2472], [577, 2444, 717, 2472], [729, 2453, 745, 2472], [756, 2444, 894, 2481], [906, 2444, 936, 2472], [948, 2444, 998, 2472], [1010, 2444, 1089, 2472], [1072, 2534, 1139, 2587], [1190, 2531, 1475, 2572], [376, 2635, 424, 2663], [439, 2635, 479, 2663], [496, 2644, 564, 2663], [565, 2635, 693, 2663], [707, 2639, 854, 2672], [872, 2634, 947, 2671], [963, 2644, 1081, 2663], [1096, 2635, 1468, 2664], [1484, 2635, 1648, 2663], [1674, 2635, 1818, 2672], [1834, 2644, 1851, 2663], [1866, 2639, 1996, 2672], [2013, 2635, 2128, 2663], [2143, 2639, 2173, 2663], [374, 2685, 469, 2713], [471, 2686, 535, 2713], [537, 2685, 737, 2722], [750, 2685, 854, 2713], [864, 2685, 949, 2722], [960, 2685, 1098, 2722], [1110, 2694, 1166, 2713], [1177, 2685, 1216, 2713], [1227, 2685, 1377, 2719], [943, 2775, 1094, 2803], [1141, 2766, 1263, 2813], [1267, 2772, 1473, 2813], [1488, 2772, 1604, 2813], [968, 2815, 1065, 2834], [1255, 2935, 1291, 2963], [374, 242, 446, 270], [458, 241, 503, 270], [519, 251, 634, 271], [645, 242, 803, 279], [815, 242, 851, 270], [861, 242, 898, 270], [915, 242, 986, 270], [998, 242, 1135, 279], [1146, 242, 1171, 270], [1184, 242, 1253, 270], [1266, 242, 1370, 271], [1381, 242, 1422, 279], [1434, 242, 1607, 279], [1620, 242, 1844, 270], [1856, 251, 1896, 270], [1907, 251, 1930, 278], [1945, 242, 2002, 270], [2013, 242, 2180, 270], [376, 292, 438, 320], [450, 301, 490, 320], [503, 301, 526, 320], [540, 292, 667, 329], [679, 292, 842, 329], [855, 296, 944, 329], [959, 301, 989, 320], [999, 394, 1075, 422], [1093, 398, 1121, 407], [1136, 394, 1234, 423], [1238, 403, 1273, 423], [1285, 382, 1333, 423], [1347, 389, 1375, 416], [1389, 382, 1509, 423], [997, 457, 1075, 485], [1093, 461, 1121, 470], [1136, 445, 1317, 487], [1333, 465, 1359, 466], [1372, 445, 1451, 476], [1457, 445, 1549, 486], [997, 514, 1075, 548], [1093, 524, 1121, 533], [1137, 520, 1198, 548], [1203, 515, 1258, 545], [1272, 508, 1386, 549], [1403, 528, 1429, 529], [1443, 508, 1507, 549], [374, 604, 472, 632], [485, 603, 541, 632], [557, 604, 581, 632], [595, 604, 643, 632], [655, 604, 812, 641], [824, 608, 977, 641], [989, 604, 1025, 632], [1035, 604, 1083, 632], [1101, 614, 1132, 638], [1146, 614, 1166, 632], [1180, 604, 1237, 632], [1250, 603, 1267, 632], [1281, 613, 1328, 632], [1341, 604, 1499, 641], [1509, 608, 1686, 641], [1700, 604, 1760, 632], [1773, 604, 1879, 632], [1890, 604, 1928, 632], [1940, 604, 2033, 632], [2045, 604, 2174, 632], [375, 654, 471, 682], [483, 663, 570, 682], [581, 654, 685, 682], [688, 654, 777, 688], [791, 654, 966, 691], [981, 654, 1007, 688], [1023, 663, 1057, 682], [1067, 654, 1240, 691], [1252, 663, 1342, 691], [1355, 654, 1495, 682], [1506, 654, 1631, 691], [1642, 663, 1698, 682], [1710, 654, 1746, 682], [1756, 654, 1911, 691], [1923, 654, 2085, 691], [2097, 654, 2133, 682], [2144, 653, 2173, 683], [379, 705, 438, 739], [451, 705, 620, 742], [631, 705, 672, 739], [685, 705, 826, 742], [839, 705, 869, 733], [882, 714, 918, 733], [931, 705, 1125, 742], [1138, 705, 1257, 733], [1270, 714, 1338, 733], [1339, 705, 1401, 733], [1413, 705, 1461, 733], [1474, 705, 1548, 742], [1561, 705, 1596, 733], [1604, 705, 1713, 734], [1728, 705, 1799, 739], [1816, 705, 1878, 733], [1890, 705, 2000, 734], [2012, 705, 2173, 742], [376, 765, 433, 784], [447, 756, 512, 784], [525, 756, 564, 784], [578, 756, 663, 785], [666, 760, 729, 784], [742, 756, 781, 784], [796, 765, 833, 784], [846, 756, 983, 784], [997, 756, 1033, 784], [1042, 756, 1295, 793], [1309, 756, 1444, 784], [1447, 756, 1551, 790], [1552, 756, 1633, 784], [1645, 756, 1912, 793], [1926, 756, 1952, 784], [1966, 756, 2057, 793], [2069, 756, 2110, 793], [2124, 756, 2174, 784], [377, 807, 560, 844], [573, 807, 609, 835], [619, 816, 636, 835], [646, 807, 811, 844], [824, 811, 889, 844], [901, 807, 949, 835], [961, 807, 1010, 835], [1022, 807, 1252, 835], [1264, 807, 1300, 835], [1309, 816, 1332, 843], [1347, 807, 1477, 842], [1489, 807, 1525, 835], [1535, 807, 1584, 835], [1595, 807, 1662, 835], [1674, 807, 1745, 835], [1757, 807, 1894, 844], [1906, 811, 1971, 844], [1983, 807, 2019, 835], [2029, 807, 2175, 842], [377, 858, 433, 886], [445, 858, 493, 886], [506, 858, 648, 895], [660, 858, 743, 895], [756, 860, 788, 886], [805, 859, 883, 886], [896, 858, 959, 886], [970, 858, 1038, 886], [1050, 858, 1210, 895], [1223, 858, 1247, 886], [1260, 858, 1420, 895], [1432, 867, 1502, 887], [1513, 858, 1561, 886], [1574, 858, 1643, 886], [1655, 857, 1700, 886], [1716, 858, 1831, 886], [1842, 858, 1878, 886], [1887, 858, 1935, 886], [1946, 858, 2052, 895], [2064, 867, 2143, 894], [2146, 876, 2179, 896], [437, 909, 513, 937], [514, 908, 589, 942], [602, 908, 841, 945], [853, 912, 978, 945], [990, 917, 1046, 936], [1056, 908, 1093, 936], [1107, 908, 1223, 945], [1235, 908, 1282, 936], [1294, 917, 1377, 936], [1389, 908, 1535, 936], [1548, 908, 1584, 936], [1591, 908, 1737, 945], [1750, 908, 1883, 945], [1896, 908, 1972, 943], [1985, 908, 2051, 937], [2053, 908, 2131, 936], [2143, 918, 2171, 943], [376, 963, 465, 987], [479, 959, 567, 987], [580, 959, 629, 987], [640, 959, 799, 996], [810, 959, 1014, 996], [925, 1077, 952, 1090], [1256, 1049, 1308, 1084], [911, 1102, 1064, 1160], [1081, 1114, 1154, 1142], [1281, 1118, 1285, 1155], [1376, 1123, 1399, 1142], [1452, 1127, 1480, 1136], [1495, 1111, 1637, 1152], [913, 1172, 963, 1191], [1249, 1178, 1316, 1212], [374, 1267, 474, 1295], [486, 1267, 559, 1295], [572, 1271, 624, 1295], [635, 1267, 708, 1295], [720, 1267, 750, 1295], [763, 1267, 883, 1304], [894, 1267, 946, 1295], [957, 1267, 1045, 1295], [1058, 1267, 1106, 1295], [1117, 1267, 1165, 1295], [1178, 1268, 1230, 1295], [1245, 1267, 1320, 1302], [1334, 1267, 1422, 1295], [1434, 1267, 1536, 1304], [1548, 1267, 1597, 1295], [1609, 1267, 1758, 1295], [975, 1356, 1061, 1397], [1078, 1372, 1106, 1381], [1125, 1356, 1314, 1397], [1332, 1372, 1360, 1381], [1379, 1352, 1396, 1402], [1405, 1356, 1446, 1397], [1461, 1376, 1487, 1377], [1500, 1351, 1573, 1398], [1165, 1427, 1276, 1458], [1024, 1452, 1064, 1480], [1130, 1420, 1277, 1520], [374, 1567, 445, 1596], [458, 1567, 494, 1595], [507, 1567, 555, 1595], [568, 1567, 763, 1604], [776, 1567, 881, 1595], [894, 1576, 924, 1595], [936, 1567, 1048, 1601], [1063, 1571, 1091, 1598], [1104, 1567, 1226, 1595], [1239, 1567, 1410, 1595], [1420, 1567, 1553, 1604], [1567, 1567, 1624, 1595], [1637, 1576, 1660, 1595], [1674, 1576, 1690, 1595], [1702, 1567, 1912, 1596], [1924, 1567, 1960, 1595], [1968, 1567, 2016, 1595], [2029, 1567, 2076, 1595], [2089, 1567, 2179, 1604], [374, 1618, 438, 1646], [450, 1618, 568, 1646], [582, 1618, 678, 1646], [690, 1627, 746, 1646], [758, 1618, 828, 1646], [840, 1618, 878, 1646], [891, 1618, 1012, 1655], [1024, 1618, 1128, 1655], [1145, 1618, 1309, 1655], [1321, 1627, 1393, 1646], [1406, 1617, 1435, 1647], [1448, 1618, 1473, 1646], [1486, 1618, 1583, 1646], [1596, 1618, 1654, 1646], [1665, 1618, 1829, 1655], [1841, 1627, 1913, 1646], [1926, 1617, 1970, 1646], [1987, 1618, 2012, 1646], [2026, 1618, 2090, 1646], [2103, 1627, 2175, 1655], [375, 1678, 457, 1706], [468, 1669, 612, 1706], [625, 1669, 685, 1697], [697, 1678, 833, 1716], [854, 1682, 882, 1691], [897, 1678, 1003, 1717], [1011, 1697, 1058, 1717], [1065, 1682, 1144, 1717], [1159, 1669, 1316, 1711], [1330, 1669, 1429, 1697], [1442, 1669, 1466, 1697], [1481, 1669, 1586, 1698], [1598, 1669, 1725, 1706], [1737, 1669, 1951, 1706], [438, 1719, 466, 1747], [478, 1719, 712, 1756], [724, 1719, 759, 1747], [769, 1719, 825, 1747], [840, 1719, 989, 1756], [1001, 1719, 1026, 1747], [1039, 1719, 1197, 1756], [1208, 1719, 1249, 1756], [1261, 1719, 1368, 1748], [1369, 1719, 1467, 1753], [1481, 1719, 1551, 1747], [1563, 1719, 1717, 1747], [1375, 1806, 1402, 1819], [975, 1843, 1043, 1896], [1094, 1840, 1172, 1881], [1188, 1847, 1216, 1874], [1228, 1840, 1304, 1881], [1319, 1831, 1417, 1889], [1427, 1840, 1571, 1881], [1363, 1901, 1413, 1920], [377, 1985, 394, 2004], [405, 1976, 546, 2013], [559, 1976, 622, 2004], [634, 1976, 754, 2013], [768, 1976, 818, 2004], [832, 1976, 896, 2004], [911, 1976, 986, 2011], [1001, 1976, 1075, 2005], [1089, 1973, 1167, 2014], [1188, 1989, 1216, 1998], [1237, 1969, 1304, 2019], [1319, 1993, 1345, 1994], [1358, 1970, 1431, 2015], [1447, 1973, 1522, 2014], [1543, 1989, 1571, 1998], [1589, 1976, 1616, 2010], [1633, 1976, 1660, 2004], [1678, 1989, 1706, 1998], [1724, 1976, 1755, 2004], [1776, 1976, 1840, 2004], [1852, 1976, 2003, 2013], [2004, 1980, 2065, 2004], [2079, 1976, 2143, 2004], [2158, 1985, 2175, 2004], [377, 2027, 508, 2055], [520, 2027, 544, 2055], [557, 2027, 708, 2064], [721, 2036, 752, 2055], [1436, 2118, 1463, 2131], [777, 2146, 900, 2183], [915, 2164, 1012, 2193], [1015, 2174, 1043, 2199], [1067, 2110, 1128, 2235], [1144, 2155, 1238, 2184], [1242, 2147, 1335, 2193], [1351, 2165, 1411, 2183], [1422, 2143, 1478, 2201], [1489, 2110, 1603, 2235], [1424, 2213, 1474, 2232], [769, 2269, 854, 2297], [872, 2273, 900, 2282], [915, 2253, 998, 2297], [1004, 2252, 1059, 2291], [1074, 2257, 1145, 2298], [1159, 2253, 1234, 2298], [775, 2320, 854, 2368], [872, 2341, 900, 2350], [915, 2337, 994, 2364], [997, 2347, 1047, 2376], [1058, 2321, 1109, 2367], [1124, 2332, 1152, 2359], [1166, 2328, 1230, 2363], [1238, 2325, 1351, 2366], [1367, 2345, 1393, 2346], [1408, 2325, 1476, 2366], [1522, 2327, 1601, 2357], [1618, 2328, 1643, 2364], [1658, 2338, 1779, 2364], [775, 2392, 854, 2441], [872, 2414, 900, 2423], [915, 2392, 1016, 2441], [1032, 2405, 1060, 2432], [1075, 2398, 1146, 2439], [1160, 2394, 1236, 2439], [1281, 2400, 1538, 2437], [376, 2494, 424, 2522], [436, 2504, 464, 2530], [475, 2504, 495, 2531], [507, 2498, 691, 2531], [705, 2494, 741, 2522], [751, 2494, 801, 2522], [815, 2494, 986, 2531], [1005, 2494, 1105, 2522], [1118, 2494, 1263, 2531], [1277, 2494, 1335, 2522], [1348, 2494, 1517, 2531], [1530, 2498, 1560, 2522], [1574, 2494, 1623, 2522], [1637, 2495, 1691, 2522], [1705, 2494, 1753, 2529], [1769, 2507, 1797, 2516], [1815, 2494, 1841, 2528], [1856, 2491, 1948, 2532], [1967, 2507, 1995, 2516], [2009, 2494, 2175, 2531], [376, 2553, 448, 2572], [458, 2553, 547, 2578], [560, 2541, 652, 2582], [670, 2557, 698, 2566], [711, 2544, 875, 2581], [887, 2553, 960, 2572], [971, 2544, 1124, 2579], [1138, 2553, 1175, 2572], [1188, 2544, 1349, 2581], [1362, 2544, 1472, 2572], [1483, 2544, 1655, 2581], [1666, 2548, 1696, 2572], [1709, 2544, 1891, 2573], [1904, 2544, 1962, 2572], [1974, 2544, 2057, 2572], [2071, 2544, 2132, 2578], [2148, 2544, 2173, 2572], [376, 2595, 525, 2629], [539, 2595, 589, 2623], [600, 2595, 672, 2632], [685, 2595, 850, 2623], [861, 2595, 953, 2632], [965, 2595, 1025, 2623], [1036, 2595, 1107, 2623], [1119, 2595, 1168, 2623], [1180, 2595, 1315, 2632], [1327, 2595, 1362, 2623], [1373, 2594, 1394, 2632], [1407, 2595, 1431, 2623], [1444, 2595, 1528, 2629], [1542, 2595, 1658, 2623], [1670, 2595, 1705, 2623], [1715, 2595, 1764, 2623], [1776, 2604, 1880, 2634], [1895, 2595, 2058, 2632], [1255, 2935, 1295, 2963], [438, 242, 562, 279], [581, 242, 706, 270], [719, 242, 833, 270], [848, 242, 973, 270], [989, 242, 1015, 270], [1030, 242, 1080, 270], [1096, 242, 1232, 279], [1248, 242, 1402, 279], [1416, 242, 1452, 270], [1465, 242, 1656, 279], [1658, 246, 1722, 270], [1737, 242, 1765, 270], [1783, 242, 1856, 276], [1874, 242, 1976, 271], [1991, 242, 2087, 270], [2108, 255, 2136, 264], [2157, 242, 2174, 270], [375, 292, 508, 329], [510, 292, 585, 320], [597, 292, 755, 329], [769, 292, 911, 329], [827, 376, 894, 429], [949, 369, 966, 419], [975, 373, 1016, 414], [1031, 368, 1131, 415], [1146, 380, 1174, 407], [1186, 373, 1278, 414], [1294, 380, 1322, 407], [1334, 373, 1438, 414], [789, 458, 894, 503], [949, 450, 1411, 496], [1459, 453, 1646, 494], [831, 500, 879, 518], [789, 548, 894, 593], [903, 557, 979, 576], [1033, 545, 1043, 586], [1051, 557, 1074, 576], [1088, 565, 1114, 566], [1128, 540, 1189, 586], [1204, 552, 1232, 579], [1244, 545, 1336, 586], [1351, 552, 1379, 579], [1392, 543, 1495, 586], [1511, 552, 1539, 579], [1552, 539, 1598, 576], [1605, 545, 1642, 586], [1657, 565, 1683, 566], [1697, 543, 1758, 586], [831, 590, 879, 608], [933, 588, 948, 601], [789, 638, 979, 666], [1043, 635, 1074, 676], [1088, 655, 1114, 656], [1128, 630, 1189, 676], [1204, 642, 1232, 669], [1244, 635, 1378, 676], [1392, 635, 1483, 676], [1498, 642, 1526, 669], [1540, 629, 1624, 666], [852, 678, 869, 691], [933, 678, 948, 691], [374, 739, 476, 768], [489, 748, 537, 768], [549, 739, 627, 767], [640, 739, 711, 767], [713, 748, 778, 767], [781, 739, 847, 767], [858, 739, 908, 767], [921, 739, 1054, 767], [1067, 739, 1138, 767], [1151, 736, 1242, 778], [1262, 752, 1290, 761], [1307, 748, 1413, 774], [1427, 732, 1512, 767], [1528, 756, 1554, 757], [1569, 736, 1684, 777], [1704, 739, 1777, 767], [1790, 739, 1931, 776], [1944, 748, 2001, 767], [2013, 739, 2052, 767], [2067, 739, 2173, 767], [376, 790, 503, 827], [516, 799, 532, 818], [543, 790, 736, 827], [748, 790, 976, 818], [853, 866, 927, 902], [946, 887, 974, 896], [988, 883, 1067, 910], [1070, 891, 1098, 912], [1103, 892, 1131, 921], [1151, 866, 1200, 916], [1215, 878, 1243, 905], [1256, 867, 1290, 902], [1298, 867, 1348, 912], [1363, 878, 1391, 905], [1405, 867, 1492, 912], [1508, 891, 1534, 892], [1549, 867, 1585, 902], [1590, 866, 1698, 916], [877, 937, 927, 959], [946, 959, 974, 960], [1348, 938, 1357, 956], [1436, 937, 1525, 959], [850, 955, 873, 974], [946, 967, 974, 968], [988, 955, 1185, 991], [1192, 960, 1287, 993], [1305, 938, 1343, 988], [1373, 956, 1432, 974], [1451, 955, 1471, 974], [1532, 938, 1543, 988], [1560, 970, 1564, 974], [374, 1029, 437, 1057], [448, 1029, 556, 1066], [567, 1029, 730, 1066], [742, 1033, 880, 1066], [891, 1038, 962, 1058], [974, 1029, 1023, 1057], [1036, 1029, 1162, 1066], [1174, 1038, 1261, 1057], [1272, 1033, 1347, 1057], [1358, 1029, 1425, 1066], [1438, 1039, 1470, 1064], [1486, 1038, 1542, 1057], [1553, 1029, 1592, 1057], [1603, 1029, 1751, 1057], [1763, 1029, 1793, 1057], [1805, 1033, 1894, 1057], [1908, 1029, 1944, 1057], [1953, 1038, 2060, 1072], [2079, 1038, 2109, 1057], [1282, 1109, 1412, 1146], [1339, 1171, 1356, 1199], [949, 1245, 977, 1254], [992, 1241, 1263, 1278], [1282, 1225, 1329, 1275], [1344, 1236, 1372, 1263], [1384, 1224, 1490, 1270], [1496, 1224, 1551, 1270], [1565, 1236, 1625, 1263], [1630, 1224, 1757, 1275], [1427, 1135, 1715, 1181], [1720, 1135, 1850, 1181], [1855, 1135, 1996, 1181], [551, 1153, 588, 1179], [872, 1140, 932, 1181], [949, 1156, 977, 1165], [993, 1143, 1117, 1180], [1126, 1153, 1158, 1177], [1166, 1140, 1218, 1181], [1233, 1147, 1261, 1174], [590, 1152, 630, 1171], [727, 1156, 738, 1175], [632, 1170, 741, 1206], [751, 1170, 770, 1199], [776, 1168, 863, 1201], [376, 1316, 549, 1353], [565, 1316, 615, 1344], [630, 1316, 701, 1344], [717, 1320, 791, 1353], [809, 1316, 841, 1344], [856, 1316, 906, 1344], [920, 1316, 1097, 1353], [1111, 1316, 1272, 1353], [1288, 1316, 1429, 1344], [1445, 1316, 1495, 1344], [1510, 1316, 1774, 1353], [1791, 1316, 1921, 1345], [1936, 1320, 1967, 1344], [1983, 1316, 2174, 1353], [376, 1367, 425, 1395], [441, 1367, 536, 1395], [550, 1367, 587, 1395], [601, 1376, 618, 1395], [632, 1367, 728, 1395], [743, 1371, 883, 1404], [899, 1367, 935, 1401], [954, 1367, 1035, 1395], [1050, 1367, 1126, 1395], [1142, 1377, 1181, 1401], [1208, 1367, 1272, 1395], [1287, 1371, 1410, 1404], [1424, 1367, 1681, 1404], [1698, 1367, 1847, 1401], [1866, 1367, 1941, 1395], [1957, 1371, 2011, 1395], [2026, 1367, 2094, 1395], [2110, 1367, 2173, 1395], [377, 1427, 490, 1446], [491, 1418, 569, 1446], [582, 1418, 757, 1455], [771, 1418, 836, 1446], [849, 1418, 1015, 1455], [1028, 1418, 1076, 1446], [1088, 1418, 1269, 1455], [1282, 1418, 1317, 1446], [1326, 1418, 1499, 1455], [1512, 1417, 1557, 1456], [1574, 1419, 1613, 1446], [1627, 1418, 1730, 1446], [1734, 1418, 1815, 1446], [1829, 1418, 1975, 1455], [1988, 1418, 2036, 1446], [2047, 1419, 2174, 1446], [376, 1469, 618, 1506], [631, 1469, 716, 1504], [729, 1469, 754, 1497], [767, 1469, 892, 1506], [907, 1478, 937, 1497], [987, 1588, 1015, 1589], [1273, 1575, 1278, 1580], [1466, 1557, 1487, 1575], [1622, 1567, 1735, 1586], [763, 1584, 891, 1622], [909, 1572, 969, 1613], [987, 1596, 1015, 1597], [1030, 1584, 1138, 1603], [0, 0, 2550, 3300], [1180, 1572, 1405, 1613], [1420, 1579, 1448, 1606], [1464, 1572, 1540, 1632], [1555, 1585, 1616, 1603], [1664, 1572, 1784, 1613], [1233, 1623, 1250, 1636], [987, 1664, 1385, 1709], [1391, 1659, 1467, 1705], [376, 1751, 441, 1779], [455, 1751, 572, 1788], [585, 1751, 633, 1779], [646, 1751, 715, 1779], [726, 1751, 886, 1788], [899, 1755, 1035, 1788], [1046, 1751, 1076, 1779], [1088, 1755, 1162, 1779], [1164, 1751, 1225, 1779], [1234, 1751, 1282, 1779], [1293, 1751, 1400, 1788], [1412, 1760, 1532, 1793], [1549, 1751, 1717, 1788], [1729, 1751, 1777, 1779], [1791, 1751, 1948, 1788], [1959, 1755, 2136, 1788], [2151, 1750, 2177, 1785], [376, 1812, 396, 1830], [409, 1802, 464, 1830], [477, 1812, 509, 1836], [521, 1802, 588, 1839], [600, 1811, 656, 1830], [666, 1802, 703, 1830], [716, 1802, 828, 1839], [830, 1802, 888, 1830], [899, 1811, 985, 1839], [997, 1802, 1131, 1830], [1142, 1802, 1189, 1830], [1199, 1806, 1312, 1839], [1321, 1802, 1525, 1839], [1537, 1802, 1657, 1839], [1668, 1811, 1721, 1830], [1732, 1802, 1768, 1830], [1775, 1802, 1925, 1839], [1937, 1802, 2092, 1839], [2107, 1802, 2179, 1836], [376, 1914, 436, 1949], [489, 1914, 850, 1949], [865, 1914, 931, 1949], [376, 1999, 480, 2027], [492, 1999, 553, 2027], [565, 1999, 612, 2027], [624, 2008, 640, 2027], [652, 1999, 759, 2027], [772, 1999, 810, 2027], [827, 2005, 848, 2029], [864, 1997, 1003, 2033], [1016, 1999, 1066, 2027], [1079, 1999, 1260, 2036], [1272, 1999, 1389, 2027], [1402, 1999, 1581, 2036], [1592, 1999, 1674, 2027], [1687, 1999, 1737, 2027], [1749, 1999, 1828, 2027], [507, 2096, 520, 2115], [753, 2086, 785, 2103], [894, 2080, 969, 2103], [1269, 2073, 1316, 2102], [1431, 2086, 1462, 2103], [1575, 2080, 1651, 2103], [1950, 2073, 1996, 2102], [460, 2102, 621, 2149], [641, 2115, 678, 2133], [694, 2093, 803, 2157], [815, 2084, 948, 2163], [986, 2102, 1035, 2144], [1038, 2120, 1093, 2145], [1110, 2122, 1136, 2123], [1149, 2115, 1206, 2145], [1216, 2084, 1259, 2159], [1330, 2109, 1358, 2136], [1372, 2084, 1625, 2163], [1667, 2102, 1774, 2145], [1791, 2122, 1817, 2123], [1830, 2084, 1939, 2159], [2003, 2129, 2007, 2133], [2097, 2105, 2173, 2140], [374, 2210, 444, 2238], [455, 2210, 631, 2247], [642, 2210, 753, 2247], [767, 2219, 783, 2238], [793, 2200, 873, 2254], [885, 2210, 1110, 2247], [1121, 2219, 1191, 2238], [1201, 2210, 1275, 2238], [1284, 2219, 1345, 2239], [1357, 2210, 1392, 2238], [1401, 2210, 1450, 2244], [1464, 2210, 1519, 2238], [1532, 2219, 1548, 2238], [1558, 2200, 1638, 2254], [1650, 2210, 1875, 2247], [1886, 2219, 1957, 2238], [1967, 2210, 2040, 2238], [2051, 2210, 2179, 2238], [376, 2260, 568, 2297], [580, 2260, 780, 2297], [793, 2260, 930, 2288], [945, 2260, 1001, 2295], [1017, 2260, 1074, 2288], [1087, 2260, 1152, 2295], [1167, 2260, 1215, 2288], [1226, 2260, 1275, 2288], [1286, 2269, 1349, 2288], [1362, 2260, 1419, 2288], [1431, 2260, 1554, 2288], [1567, 2260, 1763, 2294], [1777, 2260, 1826, 2288], [1837, 2260, 2017, 2297], [2029, 2260, 2105, 2295], [2118, 2269, 2174, 2288], [375, 2311, 413, 2339], [424, 2311, 572, 2339], [585, 2320, 616, 2339], [867, 2353, 900, 2373], [999, 2375, 1027, 2376], [1102, 2344, 1120, 2357], [1458, 2344, 1485, 2357], [820, 2359, 982, 2406], [999, 2351, 1152, 2415], [1169, 2359, 1343, 2402], [1358, 2351, 1512, 2421], [1529, 2359, 1726, 2402], [2097, 2362, 2173, 2397], [374, 2454, 471, 2483], [484, 2463, 519, 2488], [524, 2476, 537, 2493], [553, 2454, 675, 2482], [687, 2454, 735, 2482], [746, 2454, 805, 2482], [815, 2463, 875, 2483], [888, 2454, 923, 2482], [932, 2454, 981, 2488], [995, 2454, 1050, 2482], [1063, 2463, 1094, 2488], [1101, 2469, 1121, 2494], [1136, 2454, 1171, 2482], [1183, 2454, 1247, 2490], [1258, 2454, 1386, 2482], [1403, 2454, 1464, 2482], [1476, 2454, 1706, 2491], [1718, 2444, 1805, 2498], [1811, 2454, 1981, 2491], [1992, 2454, 2128, 2491], [2139, 2454, 2163, 2482], [960, 2544, 1058, 2578], [1117, 2537, 1199, 2587], [1214, 2561, 1240, 2562], [1254, 2544, 1288, 2572], [1296, 2536, 1328, 2582], [1341, 2548, 1369, 2575], [1383, 2535, 1586, 2588], [2097, 2544, 2173, 2579], [374, 2646, 474, 2674], [486, 2655, 514, 2674], [516, 2655, 599, 2674], [611, 2646, 661, 2674], [672, 2646, 836, 2674], [850, 2655, 936, 2674], [952, 2643, 1047, 2684], [1063, 2659, 1091, 2668], [1110, 2651, 1215, 2692], [1227, 2640, 1284, 2691], [1303, 2659, 1331, 2668], [1349, 2643, 1545, 2684], [1559, 2646, 1659, 2674], [1671, 2643, 1784, 2684], [1788, 2643, 1838, 2684], [1852, 2646, 1902, 2674], [1913, 2646, 2129, 2674], [2141, 2646, 2177, 2674], [377, 2706, 424, 2734], [441, 2706, 539, 2743], [552, 2706, 637, 2741], [650, 2706, 788, 2743], [801, 2706, 877, 2741], [889, 2706, 1032, 2734], [682, 2800, 780, 2835], [838, 2793, 921, 2843], [935, 2792, 1125, 2839], [1141, 2780, 1229, 2855], [1244, 2780, 1435, 2855], [1454, 2780, 1623, 2859], [1639, 2780, 1865, 2855], [2076, 2800, 2173, 2835], [1255, 2935, 1293, 2964], [374, 242, 472, 270], [485, 242, 533, 270], [545, 242, 735, 279], [748, 242, 819, 270], [819, 242, 969, 279], [981, 242, 1041, 270], [1053, 232, 1140, 286], [1155, 242, 1179, 270], [1194, 251, 1210, 270], [1221, 242, 1426, 270], [1438, 242, 1473, 270], [1482, 246, 1541, 270], [1553, 242, 1755, 279], [1772, 251, 1830, 270], [1843, 242, 1940, 279], [1953, 251, 2025, 271], [2036, 242, 2084, 270], [2095, 251, 2172, 270], [377, 292, 434, 320], [446, 292, 495, 320], [507, 292, 592, 320], [603, 301, 675, 321], [686, 292, 735, 320], [747, 292, 895, 320], [911, 292, 1115, 320], [1128, 292, 1224, 327], [1238, 292, 1285, 320], [1299, 292, 1348, 320], [1360, 292, 1462, 320], [1475, 292, 1611, 321], [1621, 292, 1662, 329], [1674, 292, 1724, 320], [1737, 292, 1889, 329], [1901, 292, 2060, 329], [2073, 292, 2177, 326], [376, 343, 490, 380], [502, 343, 574, 371], [587, 352, 624, 371], [636, 343, 797, 380], [809, 343, 984, 371], [1001, 343, 1076, 371], [1088, 343, 1124, 371], [1133, 343, 1182, 371], [1194, 347, 1255, 371], [1266, 343, 1461, 380], [1473, 343, 1534, 371], [1546, 343, 1635, 371], [1646, 352, 1686, 380], [1699, 334, 1786, 387], [1800, 343, 1826, 371], [1839, 343, 1923, 371], [1932, 343, 2100, 380], [2112, 343, 2148, 371], [2158, 352, 2174, 371], [377, 403, 443, 422], [454, 394, 490, 422], [500, 394, 612, 423], [624, 394, 660, 429], [672, 403, 706, 422], [717, 394, 764, 429], [781, 394, 893, 422], [905, 394, 1104, 431], [1121, 395, 1287, 428], [1301, 394, 1374, 422], [1386, 394, 1421, 422], [1431, 394, 1478, 422], [1495, 394, 1538, 422], [1550, 403, 1611, 422], [1625, 394, 1772, 429], [1784, 394, 1974, 431], [1988, 398, 2121, 431], [2135, 403, 2174, 422], [377, 454, 393, 473], [404, 445, 545, 473], [556, 454, 618, 473], [631, 445, 806, 480], [821, 445, 878, 473], [890, 454, 946, 473], [958, 445, 1024, 473], [1036, 445, 1075, 473], [1088, 445, 1193, 474], [1205, 445, 1444, 482], [376, 559, 435, 594], [488, 559, 907, 603], [923, 559, 989, 594], [376, 643, 478, 680], [490, 652, 565, 672], [576, 643, 697, 680], [709, 634, 796, 688], [811, 643, 835, 671], [849, 643, 898, 671], [910, 643, 1030, 680], [1042, 643, 1331, 671], [1343, 644, 1396, 671], [1410, 643, 1495, 678], [1509, 643, 1609, 671], [1621, 652, 1649, 671], [1651, 643, 1770, 671], [1781, 643, 1886, 671], [438, 704, 493, 731], [505, 702, 531, 731], [542, 703, 581, 731], [595, 712, 633, 731], [644, 703, 781, 731], [794, 707, 881, 731], [883, 703, 940, 731], [952, 691, 1010, 731], [1013, 692, 1099, 727], [1109, 727, 1115, 737], [1129, 703, 1236, 732], [1248, 707, 1450, 740], [1464, 712, 1513, 731], [1526, 703, 1656, 731], [1670, 712, 1702, 731], [1715, 702, 1741, 731], [1858, 718, 1892, 741], [1911, 703, 1939, 738], [1956, 706, 2019, 740], [2038, 707, 2111, 740], [2127, 703, 2175, 731], [376, 757, 389, 782], [405, 757, 458, 790], [474, 754, 569, 789], [583, 763, 630, 782], [641, 754, 741, 782], [753, 755, 806, 782], [819, 754, 866, 782], [878, 753, 904, 782], [917, 763, 947, 782], [1743, 718, 1765, 741], [1773, 718, 1854, 742], [943, 837, 1021, 861], [482, 879, 509, 892], [595, 866, 632, 886], [669, 844, 696, 857], [1870, 879, 1901, 898], [1935, 850, 1997, 879], [435, 882, 500, 925], [516, 878, 568, 919], [598, 894, 626, 903], [655, 870, 711, 928], [791, 870, 847, 928], [925, 861, 1011, 936], [1036, 878, 1105, 920], [1111, 896, 1173, 920], [1178, 896, 1236, 921], [1241, 896, 1352, 923], [1359, 912, 1402, 920], [1406, 896, 1440, 919], [1459, 898, 1485, 899], [1498, 880, 1560, 920], [1566, 896, 1628, 920], [1633, 896, 1763, 923], [1771, 912, 1814, 920], [1818, 878, 1865, 919], [1909, 861, 1924, 936], [2007, 905, 2011, 917], [2076, 881, 2173, 916], [655, 939, 711, 959], [723, 939, 914, 968], [967, 939, 1009, 964], [374, 1019, 476, 1048], [486, 1028, 511, 1055], [525, 1032, 553, 1041], [572, 1016, 770, 1057], [786, 1019, 812, 1047], [826, 1028, 843, 1047], [854, 1023, 943, 1047], [944, 1019, 1006, 1047], [1016, 1019, 1128, 1047], [1139, 1029, 1177, 1055], [1196, 1021, 1222, 1053], [1241, 1019, 1265, 1047], [1282, 1019, 1355, 1047], [1368, 1019, 1570, 1056], [1583, 1023, 1614, 1047], [1627, 1019, 1772, 1056], [1786, 1028, 1803, 1047], [1818, 1019, 1904, 1047], [1906, 1020, 1977, 1047], [1990, 1019, 2066, 1047], [2078, 1028, 2097, 1047], [2099, 1019, 2174, 1047], [376, 1070, 420, 1098], [433, 1070, 523, 1098], [536, 1070, 572, 1098], [581, 1069, 607, 1098], [620, 1070, 710, 1107], [722, 1070, 796, 1098], [808, 1070, 844, 1098], [853, 1070, 902, 1098], [914, 1070, 1109, 1098], [438, 1121, 628, 1158], [641, 1121, 690, 1149], [702, 1121, 888, 1150], [899, 1118, 966, 1159], [984, 1134, 1012, 1143], [1030, 1118, 1502, 1159], [1515, 1121, 1593, 1149], [1595, 1121, 1743, 1149], [1756, 1130, 1828, 1150], [1839, 1130, 1927, 1158], [1943, 1121, 2174, 1149], [376, 1172, 451, 1200], [462, 1172, 498, 1200], [507, 1171, 533, 1200], [546, 1172, 635, 1209], [648, 1172, 697, 1200], [710, 1171, 776, 1200], [788, 1172, 968, 1206], [982, 1172, 1031, 1200], [1042, 1172, 1221, 1209], [1233, 1172, 1330, 1207], [1343, 1181, 1399, 1200], [1410, 1172, 1449, 1200], [1461, 1172, 1577, 1200], [1589, 1181, 1673, 1200], [1684, 1172, 1856, 1209], [1869, 1181, 1899, 1200], [922, 1268, 1013, 1315], [1016, 1268, 1100, 1309], [1116, 1260, 1232, 1324], [1246, 1260, 1358, 1331], [1375, 1268, 1385, 1309], [1393, 1271, 1465, 1310], [1473, 1280, 1541, 1313], [1545, 1268, 1624, 1313], [2076, 1271, 2173, 1306], [374, 1376, 471, 1405], [484, 1385, 507, 1404], [511, 1390, 565, 1419], [581, 1376, 702, 1404], [716, 1385, 732, 1404], [742, 1385, 803, 1405], [815, 1376, 851, 1404], [859, 1375, 885, 1404], [898, 1376, 985, 1413], [998, 1376, 1045, 1404], [1058, 1375, 1124, 1404], [1135, 1376, 1312, 1410], [1326, 1376, 1382, 1404], [1395, 1376, 1466, 1415], [1484, 1376, 1508, 1404], [1522, 1385, 1538, 1404], [1549, 1376, 1744, 1413], [1757, 1376, 1862, 1404], [1873, 1376, 1908, 1404], [1918, 1376, 2100, 1413], [2113, 1376, 2173, 1404], [376, 1427, 422, 1455], [433, 1427, 480, 1455], [496, 1427, 643, 1455], [657, 1427, 744, 1464], [756, 1427, 924, 1455], [937, 1426, 956, 1455], [969, 1427, 1017, 1462], [1027, 1427, 1087, 1455], [1099, 1427, 1164, 1462], [1180, 1427, 1242, 1455], [1254, 1427, 1484, 1464], [1496, 1427, 1810, 1455], [1822, 1427, 1981, 1464], [1992, 1427, 2128, 1464], [2138, 1427, 2163, 1455], [1009, 1518, 1097, 1552], [1122, 1511, 1191, 1560], [1204, 1535, 1230, 1536], [1242, 1510, 1308, 1556], [1322, 1522, 1350, 1549], [1363, 1517, 1417, 1547], [1419, 1515, 1538, 1562], [2076, 1518, 2173, 1553], [374, 1609, 476, 1638], [490, 1608, 510, 1638], [528, 1615, 554, 1639], [572, 1609, 589, 1638], [603, 1609, 628, 1637], [643, 1618, 660, 1637], [671, 1609, 794, 1646], [807, 1613, 982, 1646], [998, 1609, 1056, 1637], [1069, 1609, 1119, 1637], [1132, 1609, 1299, 1637], [1313, 1618, 1401, 1637], [1413, 1609, 1461, 1637], [1475, 1618, 1492, 1637], [1504, 1613, 1606, 1637], [1614, 1609, 1679, 1646], [1690, 1609, 1817, 1637], [1831, 1609, 1881, 1637], [1894, 1609, 2035, 1646], [2049, 1609, 2179, 1637], [377, 1669, 497, 1697], [510, 1669, 597, 1688], [608, 1669, 666, 1689], [666, 1660, 741, 1688], [752, 1660, 967, 1689], [979, 1660, 1015, 1688], [1025, 1660, 1098, 1688], [1110, 1664, 1215, 1688], [438, 1711, 580, 1739], [593, 1711, 689, 1746], [702, 1711, 791, 1739], [804, 1720, 877, 1748], [889, 1711, 1094, 1748], [1107, 1711, 1160, 1739], [1171, 1711, 1194, 1739], [1205, 1711, 1313, 1748], [1326, 1711, 1603, 1748], [1617, 1720, 1648, 1739], [1662, 1711, 1826, 1748], [1838, 1711, 1879, 1748], [1903, 1711, 1999, 1746], [2013, 1711, 2071, 1739], [2084, 1711, 2174, 1739], [376, 1770, 442, 1789], [442, 1761, 594, 1798], [604, 1761, 645, 1798], [657, 1761, 776, 1798], [788, 1761, 809, 1789], [822, 1770, 853, 1789], [867, 1770, 883, 1789], [896, 1770, 963, 1789], [974, 1761, 1010, 1789], [1019, 1752, 1099, 1790], [1113, 1765, 1203, 1789], [860, 1860, 948, 1895], [973, 1853, 1043, 1903], [1056, 1852, 1201, 1899], [1215, 1842, 1301, 1913], [1293, 1894, 1331, 1913], [1344, 1849, 1457, 1920], [1470, 1851, 1550, 1905], [1559, 1853, 1686, 1903], [2076, 1860, 2173, 1895], [374, 1965, 435, 1993], [446, 1965, 605, 2002], [617, 1965, 683, 1993], [694, 1965, 790, 2000], [803, 1974, 858, 1993], [868, 1965, 905, 1993], [916, 1965, 1056, 2002], [1069, 1974, 1099, 1993], [1112, 1965, 1159, 1993], [1172, 1974, 1238, 1993], [1249, 1965, 1284, 1993], [1292, 1975, 1326, 1993], [1338, 1965, 1497, 2002], [1509, 1969, 1606, 1999], [1619, 1965, 1692, 1993], [1703, 1965, 1739, 1993], [1747, 1965, 1845, 1994], [1856, 1965, 1966, 1993], [1977, 1965, 2173, 2002], [376, 2016, 438, 2044], [452, 2025, 468, 2044], [479, 2016, 591, 2044], [591, 2025, 636, 2044], [637, 2016, 746, 2044], [757, 2007, 837, 2045], [851, 2020, 950, 2044], [967, 2016, 1044, 2044], [1048, 2016, 1161, 2044], [1172, 2020, 1247, 2044], [1249, 2025, 1306, 2044], [1307, 2016, 1433, 2045], [1444, 2020, 1475, 2044], [1488, 2016, 1608, 2044], [1623, 2016, 1714, 2050], [1729, 2025, 1760, 2044], [1773, 2016, 1804, 2044], [1816, 2016, 1865, 2044], [1877, 2016, 1965, 2044], [1967, 2017, 2086, 2050], [2099, 2016, 2174, 2044], [376, 2067, 412, 2095], [421, 2067, 471, 2095], [484, 2057, 564, 2096], [578, 2071, 670, 2095], [683, 2071, 822, 2104], [835, 2076, 876, 2095], [888, 2067, 1032, 2095], [1043, 2067, 1154, 2095], [1167, 2067, 1203, 2095], [1213, 2066, 1248, 2095], [1265, 2067, 1439, 2104], [1451, 2067, 1501, 2095], [1514, 2077, 1548, 2095], [1561, 2067, 1659, 2104], [1671, 2071, 1772, 2101], [1786, 2076, 1834, 2096], [1846, 2076, 1904, 2095], [1915, 2067, 2027, 2095], [2039, 2067, 2123, 2095], [2134, 2067, 2175, 2104], [377, 2118, 518, 2155], [532, 2127, 588, 2155], [600, 2118, 636, 2146], [645, 2118, 694, 2146], [706, 2118, 847, 2146], [848, 2118, 1025, 2155], [1038, 2118, 1196, 2155], [1209, 2118, 1304, 2147], [1316, 2118, 1363, 2146], [1375, 2128, 1409, 2146], [1425, 2124, 1451, 2148], [1468, 2118, 1494, 2152], [1508, 2118, 1608, 2146], [1619, 2118, 1786, 2155], [1798, 2118, 1879, 2155], [1891, 2118, 1940, 2146], [1951, 2127, 2026, 2155], [2038, 2122, 2175, 2155], [376, 2168, 424, 2196], [436, 2166, 509, 2213], [524, 2168, 565, 2205], [575, 2168, 639, 2205], [650, 2168, 825, 2205], [839, 2168, 952, 2205], [965, 2159, 1045, 2197], [1059, 2177, 1136, 2205], [1149, 2172, 1314, 2205], [1333, 2169, 1419, 2196], [1431, 2168, 1633, 2205], [1647, 2168, 1722, 2196], [1734, 2168, 1875, 2205], [1876, 2168, 2038, 2205], [2052, 2168, 2110, 2196], [2124, 2168, 2174, 2196], [376, 2219, 489, 2247], [501, 2219, 743, 2256], [755, 2219, 791, 2247], [800, 2219, 849, 2247], [860, 2219, 997, 2256], [1008, 2219, 1133, 2256], [1146, 2228, 1162, 2247], [1174, 2223, 1238, 2248], [1249, 2219, 1393, 2256], [1405, 2219, 1453, 2247], [1463, 2219, 1586, 2256], [1598, 2219, 1827, 2247], [1839, 2219, 2023, 2256], [2036, 2219, 2114, 2247], [2116, 2219, 2172, 2247], [374, 2270, 513, 2299], [524, 2270, 613, 2298], [625, 2270, 745, 2307], [757, 2270, 829, 2298], [843, 2270, 916, 2298], [928, 2270, 1069, 2307], [1082, 2270, 1139, 2298], [1150, 2270, 1429, 2307], [1430, 2270, 1527, 2298], [376, 2399, 403, 2439], [465, 2398, 788, 2451], [807, 2399, 900, 2440], [917, 2398, 1235, 2451], [374, 2506, 427, 2533], [440, 2505, 504, 2534], [516, 2514, 586, 2534], [599, 2505, 783, 2533], [795, 2505, 845, 2533], [858, 2505, 1074, 2533], [1087, 2505, 1123, 2533], [1133, 2505, 1183, 2533], [1195, 2505, 1316, 2533], [1330, 2505, 1446, 2533], [1459, 2505, 1590, 2533], [1603, 2505, 1635, 2533], [1647, 2514, 1664, 2533], [1676, 2505, 1756, 2534], [1770, 2514, 1854, 2542], [1867, 2505, 1903, 2533], [1913, 2505, 2126, 2542], [2141, 2514, 2173, 2533], [374, 2556, 444, 2584], [457, 2565, 487, 2584], [501, 2556, 637, 2593], [650, 2565, 739, 2593], [751, 2565, 769, 2584], [772, 2556, 871, 2584], [881, 2556, 1023, 2593], [1036, 2556, 1240, 2593], [1258, 2557, 1310, 2584], [1322, 2556, 1385, 2584], [1398, 2560, 1466, 2584], [1477, 2556, 1518, 2593], [1530, 2556, 1669, 2593], [1683, 2565, 1722, 2584], [1734, 2556, 1783, 2584], [1795, 2547, 1875, 2594], [1889, 2556, 2036, 2590], [2050, 2556, 2173, 2593], [376, 2607, 445, 2635], [457, 2611, 488, 2635], [500, 2607, 585, 2635], [600, 2607, 713, 2635], [726, 2607, 863, 2641], [878, 2607, 935, 2635], [947, 2607, 1017, 2635], [1029, 2611, 1060, 2635], [1072, 2607, 1361, 2635], [1373, 2608, 1429, 2635], [438, 2658, 490, 2686], [506, 2658, 556, 2686], [574, 2658, 690, 2686], [707, 2658, 925, 2695], [942, 2658, 990, 2686], [1006, 2658, 1065, 2686], [1081, 2667, 1175, 2695], [1190, 2667, 1271, 2687], [1287, 2658, 1386, 2686], [1403, 2658, 1435, 2686], [1450, 2658, 1524, 2687], [1541, 2658, 1589, 2686], [1605, 2658, 1774, 2695], [1803, 2658, 1868, 2687], [1883, 2658, 2008, 2695], [2025, 2658, 2174, 2686], [376, 2708, 486, 2745], [505, 2708, 643, 2745], [661, 2708, 800, 2736], [820, 2708, 859, 2736], [878, 2708, 963, 2736], [981, 2708, 1270, 2745], [1291, 2708, 1360, 2745], [1378, 2708, 1523, 2745], [1541, 2708, 1590, 2736], [1607, 2717, 1680, 2745], [1698, 2717, 1794, 2745], [1812, 2708, 1844, 2736], [1861, 2708, 1979, 2736], [1998, 2717, 2032, 2736], [2050, 2708, 2176, 2745], [375, 2759, 895, 2796], [897, 2760, 932, 2787], [943, 2759, 1054, 2787], [1063, 2759, 1230, 2796], [1239, 2759, 1314, 2787], [1323, 2759, 1399, 2787], [1408, 2759, 1569, 2796], [1578, 2759, 1617, 2796], [1628, 2759, 1790, 2796], [1800, 2759, 1847, 2787], [1856, 2759, 2013, 2788], [2024, 2759, 2244, 2794], [376, 2810, 484, 2847], [500, 2810, 551, 2844], [1255, 2935, 1295, 2963], [376, 237, 434, 272], [489, 228, 584, 284], [601, 237, 859, 281], [873, 237, 952, 272], [965, 237, 1231, 281], [377, 322, 464, 351], [474, 322, 522, 350], [533, 326, 610, 350], [620, 322, 777, 359], [787, 326, 966, 359], [969, 322, 1027, 350], [1034, 322, 1082, 350], [1092, 322, 1246, 359], [1257, 322, 1392, 350], [1401, 322, 1557, 351], [1557, 322, 1634, 350], [1645, 322, 1693, 350], [1703, 322, 1834, 350], [1844, 313, 1924, 360], [1935, 331, 2009, 359], [2019, 326, 2178, 359], [376, 373, 415, 401], [426, 382, 461, 401], [474, 373, 564, 410], [575, 373, 616, 410], [627, 373, 828, 410], [841, 373, 917, 401], [928, 373, 1083, 410], [1094, 373, 1310, 410], [1328, 374, 1380, 401], [1392, 373, 1455, 401], [1467, 373, 1506, 401], [1520, 382, 1553, 401], [1565, 373, 1638, 401], [1650, 382, 1690, 401], [1703, 373, 1849, 410], [1863, 373, 1920, 401], [1933, 373, 2046, 401], [2058, 373, 2172, 410], [376, 424, 451, 452], [376, 534, 455, 563], [500, 534, 653, 572], [665, 534, 742, 564], [754, 535, 868, 564], [881, 534, 932, 564], [943, 534, 1101, 571], [1113, 535, 1189, 564], [374, 615, 411, 642], [409, 618, 494, 642], [506, 614, 556, 642], [568, 614, 681, 643], [694, 614, 788, 642], [800, 618, 860, 642], [873, 614, 1023, 642], [1037, 614, 1072, 642], [1083, 614, 1229, 651], [1243, 614, 1364, 651], [419, 677, 444, 712], [468, 677, 641, 714], [654, 677, 740, 714], [752, 677, 815, 705], [826, 677, 954, 714], [966, 677, 1047, 705], [1058, 687, 1081, 705], [1096, 690, 1124, 699], [1142, 671, 1193, 706], [1209, 681, 1275, 705], [1290, 690, 1318, 699], [1336, 670, 1400, 706], [1416, 677, 1445, 705], [1456, 677, 1579, 714], [1593, 676, 1613, 706], [1630, 683, 1651, 707], [1671, 674, 1765, 715], [1781, 677, 1807, 705], [1819, 677, 1934, 705], [1948, 681, 1977, 705], [1987, 677, 2116, 705], [2127, 677, 2175, 705], [468, 728, 542, 756], [553, 737, 608, 756], [610, 728, 688, 762], [700, 728, 750, 756], [761, 728, 829, 756], [841, 732, 943, 757], [954, 737, 977, 764], [991, 728, 1063, 756], [1074, 728, 1239, 765], [1250, 728, 1376, 756], [1388, 728, 1495, 756], [1509, 738, 1538, 765], [1556, 734, 1577, 758], [1598, 725, 1689, 766], [1702, 725, 1752, 766], [1769, 728, 2017, 765], [2030, 728, 2131, 756], [2143, 732, 2173, 756], [469, 778, 512, 814], [405, 851, 444, 886], [468, 851, 599, 888], [611, 851, 734, 888], [745, 855, 914, 888], [926, 850, 946, 880], [959, 851, 1086, 888], [1099, 851, 1180, 879], [1194, 845, 1273, 880], [1289, 851, 1468, 888], [1479, 851, 1725, 888], [1738, 855, 1769, 879], [1784, 845, 1837, 880], [1853, 851, 1915, 886], [1927, 852, 1981, 879], [1994, 855, 2071, 879], [2082, 851, 2179, 879], [468, 901, 575, 936], [588, 901, 659, 929], [671, 911, 694, 929], [706, 901, 730, 929], [745, 905, 788, 929], [800, 905, 831, 929], [846, 901, 923, 930], [937, 901, 995, 929], [1007, 911, 1036, 938], [1051, 901, 1076, 929], [1088, 901, 1247, 938], [1259, 901, 1419, 938], [1431, 901, 1461, 929], [1473, 901, 1523, 929], [1533, 910, 1625, 938], [1641, 898, 1709, 939], [1721, 898, 1747, 939], [1764, 901, 1962, 938], [711, 1049, 764, 1072], [781, 1049, 937, 1079], [949, 1049, 1026, 1073], [1513, 1049, 1566, 1072], [1583, 1049, 1739, 1079], [1753, 1049, 1889, 1079], [1931, 1088, 1974, 1115], [566, 1111, 713, 1132], [723, 1111, 796, 1128], [566, 1143, 617, 1155], [620, 1138, 692, 1156], [698, 1138, 809, 1160], [566, 1171, 617, 1184], [621, 1167, 722, 1184], [730, 1166, 840, 1188], [492, 1188, 550, 1214], [566, 1200, 617, 1212], [621, 1195, 683, 1216], [691, 1194, 801, 1216], [567, 1231, 579, 1234], [620, 1223, 692, 1241], [619, 1252, 703, 1269], [620, 1279, 676, 1297], [567, 1312, 608, 1323], [610, 1307, 692, 1325], [698, 1308, 805, 1329], [567, 1339, 603, 1350], [605, 1336, 740, 1357], [640, 1653, 679, 1679], [877, 1653, 916, 1679], [1112, 1653, 1151, 1679], [807, 1693, 909, 1715], [919, 1693, 968, 1715], [1674, 1692, 1765, 1719], [1789, 1693, 1802, 1713], [825, 1749, 858, 1777], [1666, 1748, 1700, 1777], [375, 1853, 480, 1890], [493, 1854, 520, 1881], [538, 1853, 677, 1890], [689, 1853, 775, 1881], [790, 1853, 833, 1888], [846, 1853, 924, 1888], [937, 1853, 984, 1881], [994, 1853, 1144, 1890], [1157, 1862, 1193, 1881], [1195, 1853, 1299, 1881], [1311, 1853, 1347, 1881], [1356, 1853, 1404, 1881], [1417, 1857, 1458, 1881], [1471, 1853, 1583, 1882], [1596, 1853, 1643, 1881], [1654, 1843, 1734, 1891], [1739, 1853, 1911, 1890], [1924, 1853, 1995, 1881], [2007, 1853, 2173, 1890], [377, 1904, 405, 1939], [418, 1904, 502, 1941], [515, 1904, 602, 1938], [614, 1904, 647, 1939], [659, 1904, 814, 1941], [831, 1904, 910, 1932], [923, 1913, 992, 1932], [1007, 1913, 1055, 1932], [1067, 1913, 1107, 1932], [1120, 1913, 1136, 1932], [1147, 1904, 1303, 1941], [438, 2004, 474, 2031], [473, 2003, 682, 2031], [692, 2003, 740, 2031], [751, 2003, 956, 2040], [968, 2003, 1003, 2031], [1012, 2003, 1060, 2031], [1072, 2003, 1227, 2040], [1239, 2003, 1384, 2037], [1398, 2003, 1549, 2040], [1561, 2003, 1633, 2031], [1644, 2012, 1698, 2031], [1708, 2003, 1862, 2040], [1876, 2012, 1912, 2031], [1913, 2003, 2016, 2031], [2029, 2003, 2064, 2031], [2073, 2003, 2120, 2031], [2134, 2007, 2174, 2031], [376, 2054, 513, 2082], [527, 2054, 601, 2082], [603, 2054, 664, 2082], [676, 2054, 707, 2082], [709, 2054, 894, 2082], [439, 2148, 455, 2164], [479, 2138, 543, 2167], [553, 2138, 705, 2175], [717, 2138, 872, 2175], [884, 2139, 1013, 2166], [1025, 2138, 1147, 2166], [1161, 2138, 1335, 2175], [1348, 2138, 1393, 2173], [439, 2215, 455, 2231], [479, 2205, 528, 2234], [529, 2205, 688, 2233], [700, 2205, 958, 2242], [971, 2205, 1006, 2233], [1016, 2205, 1065, 2233], [1077, 2205, 1185, 2233], [1198, 2209, 1258, 2233], [1271, 2205, 1363, 2242], [1375, 2205, 1506, 2233], [439, 2282, 455, 2298], [479, 2272, 614, 2300], [626, 2272, 885, 2309], [897, 2272, 932, 2300], [942, 2272, 991, 2300], [1003, 2272, 1111, 2300], [1124, 2276, 1185, 2300], [1197, 2272, 1289, 2309], [1301, 2272, 1424, 2300], [1435, 2272, 1476, 2309], [1488, 2272, 1595, 2301], [1597, 2272, 1694, 2306], [439, 2350, 455, 2366], [479, 2340, 799, 2377], [811, 2340, 847, 2368], [856, 2340, 906, 2368], [917, 2340, 1079, 2368], [1091, 2344, 1152, 2368], [1165, 2340, 1257, 2377], [1269, 2340, 1400, 2368], [439, 2417, 455, 2433], [479, 2407, 543, 2436], [553, 2407, 705, 2444], [716, 2407, 823, 2444], [835, 2411, 896, 2435], [909, 2407, 1001, 2444], [1014, 2407, 1171, 2444], [439, 2485, 455, 2501], [479, 2475, 542, 2503], [554, 2474, 658, 2504], [671, 2475, 807, 2503], [820, 2475, 858, 2510], [871, 2475, 1142, 2512], [1156, 2475, 1191, 2503], [1201, 2475, 1250, 2503], [1263, 2475, 1356, 2504], [1369, 2475, 1478, 2512], [1490, 2475, 1525, 2503], [1535, 2475, 1590, 2503], [1603, 2479, 1631, 2503], [1644, 2475, 1679, 2503], [1697, 2475, 1758, 2509], [1773, 2475, 1821, 2503], [1832, 2465, 1911, 2513], [1916, 2475, 2091, 2512], [2106, 2475, 2178, 2509], [439, 2552, 455, 2568], [479, 2542, 543, 2570], [562, 2542, 812, 2570], [829, 2542, 954, 2570], [972, 2542, 1008, 2570], [1023, 2542, 1145, 2571], [1164, 2542, 1238, 2576], [1259, 2542, 1361, 2571], [1378, 2551, 1426, 2571], [1443, 2542, 1520, 2570], [1539, 2551, 1612, 2570], [1629, 2546, 1660, 2570], [1677, 2542, 1717, 2570], [1734, 2542, 1908, 2579], [1925, 2546, 1956, 2570], [1975, 2551, 1992, 2570], [2009, 2542, 2173, 2570], [479, 2593, 648, 2630], [660, 2593, 791, 2621], [439, 2670, 455, 2686], [479, 2660, 542, 2688], [554, 2660, 695, 2697], [707, 2660, 932, 2697], [944, 2660, 1067, 2688], [1079, 2660, 1115, 2688], [1123, 2660, 1258, 2689], [1273, 2660, 1346, 2694], [1360, 2660, 1460, 2688], [1472, 2664, 1646, 2697], [1660, 2660, 1754, 2688], [1764, 2660, 1892, 2697], [1904, 2660, 1984, 2688], [439, 2738, 455, 2754], [479, 2728, 543, 2756], [555, 2737, 697, 2765], [708, 2728, 833, 2765], [846, 2728, 970, 2756], [983, 2728, 1019, 2756], [1028, 2728, 1219, 2765], [1221, 2732, 1282, 2756], [1294, 2728, 1322, 2756], [1337, 2728, 1410, 2762], [1424, 2728, 1526, 2757], [1538, 2728, 1644, 2757], [1657, 2728, 1894, 2765], [1906, 2728, 1954, 2756], [1966, 2728, 2144, 2765], [2158, 2737, 2175, 2756], [478, 2779, 561, 2807], [573, 2779, 723, 2807], [734, 2779, 914, 2816], [925, 2788, 965, 2807], [978, 2788, 994, 2807], [1005, 2783, 1074, 2807], [1255, 2935, 1293, 2964], [438, 242, 575, 270], [587, 242, 852, 279], [863, 242, 899, 270], [909, 242, 959, 270], [971, 242, 1081, 270], [1094, 246, 1157, 270], [1169, 242, 1262, 279], [1275, 242, 1409, 276], [1423, 242, 1520, 270], [1532, 242, 1564, 270], [1576, 242, 1626, 270], [1638, 242, 1798, 276], [1811, 242, 1866, 270], [1878, 242, 1957, 270], [1970, 242, 2068, 270], [2080, 246, 2111, 270], [2124, 242, 2174, 270], [375, 292, 558, 320], [568, 296, 598, 320], [611, 296, 666, 320], [678, 292, 810, 320], [821, 292, 869, 320], [882, 292, 1138, 329], [1150, 301, 1196, 320], [1207, 292, 1282, 321], [1294, 301, 1423, 329], [1425, 292, 1480, 320], [1493, 301, 1533, 320], [1544, 301, 1597, 329], [1608, 292, 1679, 320], [1691, 292, 1739, 320], [1753, 296, 1825, 320], [1837, 292, 1873, 320], [1882, 292, 1930, 320], [1944, 296, 1992, 320], [2009, 293, 2061, 320], [2073, 292, 2174, 320], [376, 343, 437, 371], [450, 347, 481, 371], [495, 347, 566, 371], [580, 343, 630, 371], [644, 343, 810, 380], [824, 343, 894, 371], [906, 343, 943, 371], [953, 343, 1067, 380], [1081, 343, 1230, 371], [1243, 343, 1523, 380], [1537, 343, 1573, 371], [1584, 343, 1643, 371], [1657, 343, 1791, 371], [1811, 343, 1861, 371], [1875, 343, 1948, 380], [1962, 343, 2100, 380], [2115, 343, 2173, 371], [376, 394, 509, 422], [521, 394, 598, 422], [610, 403, 657, 422], [668, 394, 759, 422], [771, 394, 834, 422], [846, 403, 893, 422], [895, 398, 984, 431], [995, 394, 1031, 422], [1040, 394, 1090, 422], [1102, 403, 1185, 422], [1196, 403, 1289, 431], [1300, 394, 1400, 422], [1412, 394, 1556, 423], [1570, 394, 1692, 422], [1704, 403, 1751, 422], [1753, 394, 1937, 431], [438, 446, 495, 473], [507, 445, 664, 482], [677, 446, 809, 474], [822, 445, 880, 473], [894, 445, 966, 474], [968, 446, 1020, 473], [1032, 445, 1147, 482], [1160, 454, 1219, 482], [1231, 445, 1268, 473], [1280, 439, 1359, 474], [1374, 445, 1400, 473], [1412, 445, 1488, 473], [1502, 454, 1534, 473], [1547, 445, 1597, 473], [1611, 445, 1753, 482], [1766, 445, 1917, 473], [1934, 446, 1991, 473], [2003, 445, 2053, 473], [2064, 445, 2173, 482], [376, 496, 544, 533], [557, 496, 679, 524], [691, 496, 741, 524], [754, 496, 859, 524], [870, 500, 1036, 533], [1048, 496, 1072, 524], [1087, 500, 1130, 524], [1143, 505, 1174, 524], [1188, 495, 1213, 525], [1228, 509, 1256, 518], [1273, 496, 1350, 525], [1367, 496, 1431, 524], [1441, 500, 1501, 524], [1513, 496, 1548, 524], [1559, 496, 1732, 533], [1746, 496, 1785, 524], [1797, 500, 1849, 524], [1860, 496, 1936, 525], [1947, 500, 2136, 533], [438, 546, 557, 583], [569, 546, 676, 574], [690, 555, 738, 574], [749, 546, 908, 583], [920, 546, 951, 574], [963, 546, 1071, 583], [1083, 547, 1101, 574], [1114, 546, 1162, 574], [1172, 546, 1245, 574], [1258, 546, 1473, 583], [1486, 546, 1647, 574], [1664, 546, 1727, 574], [1739, 546, 1898, 583], [1911, 546, 2085, 583], [2097, 546, 2173, 574], [377, 606, 425, 625], [437, 597, 538, 625], [550, 597, 629, 625], [641, 597, 725, 625], [736, 597, 842, 625], [439, 687, 455, 703], [479, 677, 584, 705], [598, 677, 739, 705], [755, 677, 842, 712], [856, 677, 950, 714], [965, 677, 1115, 711], [1132, 677, 1262, 711], [1278, 677, 1424, 711], [1441, 677, 1667, 714], [1682, 686, 1776, 714], [1791, 681, 1821, 705], [1835, 677, 1875, 705], [1889, 677, 1982, 705], [1996, 677, 2089, 705], [2103, 677, 2174, 705], [479, 728, 612, 757], [624, 728, 762, 756], [776, 728, 944, 765], [956, 729, 1093, 762], [1108, 728, 1224, 763], [439, 819, 455, 835], [479, 809, 634, 846], [646, 809, 789, 838], [804, 809, 875, 844], [886, 809, 962, 837], [965, 809, 1154, 837], [1166, 813, 1227, 837], [1240, 809, 1344, 846], [1357, 809, 1488, 843], [1500, 809, 1553, 837], [1568, 818, 1584, 837], [1596, 809, 1768, 837], [1780, 813, 1955, 837], [1966, 809, 2174, 846], [479, 860, 515, 888], [529, 854, 643, 898], [661, 860, 711, 888], [725, 860, 870, 897], [884, 860, 1097, 897], [1113, 869, 1213, 888], [1229, 864, 1260, 888], [1275, 860, 1382, 889], [1399, 869, 1437, 888], [1452, 857, 1536, 898], [1554, 860, 1707, 894], [1726, 864, 1755, 888], [1769, 860, 1846, 888], [1860, 860, 1908, 888], [1922, 860, 2008, 888], [2024, 860, 2173, 897], [480, 911, 601, 948], [439, 1003, 455, 1019], [479, 994, 564, 1021], [579, 993, 606, 1021], [618, 993, 756, 1022], [772, 993, 830, 1021], [846, 993, 1058, 1030], [1074, 993, 1215, 1021], [1230, 993, 1308, 1021], [1324, 1002, 1341, 1021], [1356, 993, 1539, 1030], [1554, 993, 1685, 1030], [1701, 993, 1774, 1021], [1790, 993, 1826, 1021], [1839, 990, 1936, 1031], [1954, 993, 2024, 1030], [2040, 997, 2107, 1021], [2121, 997, 2175, 1021], [479, 1048, 510, 1072], [524, 1044, 563, 1072], [578, 1044, 688, 1073], [701, 1044, 773, 1072], [787, 1044, 837, 1072], [851, 1044, 1016, 1072], [1030, 1048, 1093, 1072], [1107, 1044, 1200, 1081], [1216, 1044, 1274, 1072], [1288, 1044, 1437, 1073], [1451, 1044, 1602, 1072], [1625, 1044, 1697, 1072], [1712, 1044, 1738, 1072], [1753, 1044, 1785, 1072], [1798, 1044, 1860, 1072], [1874, 1044, 1948, 1073], [1962, 1053, 2017, 1072], [2030, 1044, 2173, 1081], [479, 1094, 690, 1122], [705, 1094, 741, 1122], [753, 1094, 803, 1122], [818, 1094, 1060, 1131], [1074, 1094, 1242, 1131], [1257, 1094, 1294, 1122], [1305, 1094, 1491, 1131], [1507, 1094, 1658, 1128], [1676, 1094, 1708, 1122], [1722, 1098, 1855, 1122], [1868, 1094, 2033, 1123], [2048, 1094, 2173, 1122], [478, 1145, 613, 1182], [630, 1154, 667, 1173], [681, 1149, 765, 1173], [779, 1158, 807, 1167], [828, 1145, 871, 1174], [886, 1154, 1024, 1182], [1041, 1149, 1169, 1182], [1193, 1145, 1433, 1182], [1448, 1145, 1573, 1173], [1587, 1145, 1642, 1173], [1658, 1145, 1719, 1173], [1734, 1154, 1873, 1182], [1887, 1145, 2107, 1182], [2121, 1145, 2175, 1173], [479, 1196, 666, 1225], [680, 1196, 779, 1224], [793, 1196, 907, 1224], [917, 1196, 1066, 1225], [439, 1288, 455, 1304], [479, 1278, 543, 1306], [556, 1287, 641, 1306], [652, 1278, 865, 1315], [877, 1278, 1073, 1306], [1085, 1278, 1202, 1315], [1214, 1282, 1245, 1306], [1258, 1278, 1308, 1306], [1320, 1278, 1430, 1306], [1443, 1282, 1506, 1306], [1518, 1278, 1611, 1315], [1624, 1278, 1749, 1306], [1753, 1279, 1799, 1306], [1810, 1278, 1836, 1306], [1850, 1278, 1915, 1306], [1928, 1278, 2100, 1306], [2112, 1278, 2175, 1306], [479, 1338, 535, 1357], [548, 1329, 813, 1366], [826, 1329, 863, 1357], [874, 1329, 933, 1357], [948, 1329, 1072, 1357], [1087, 1333, 1169, 1357], [1184, 1333, 1237, 1357], [1251, 1333, 1281, 1357], [1295, 1329, 1334, 1357], [1348, 1329, 1441, 1357], [1454, 1329, 1526, 1357], [1539, 1329, 1715, 1366], [1731, 1329, 1879, 1357], [1893, 1329, 2173, 1366], [479, 1379, 636, 1414], [649, 1379, 851, 1416], [865, 1388, 939, 1408], [951, 1379, 1092, 1407], [1094, 1379, 1248, 1416], [1260, 1379, 1351, 1407], [1362, 1379, 1431, 1407], [1444, 1379, 1493, 1407], [1505, 1383, 1579, 1407], [1591, 1379, 1626, 1407], [1636, 1379, 1685, 1407], [1698, 1383, 1739, 1407], [1750, 1379, 1885, 1408], [1898, 1379, 1955, 1407], [1967, 1379, 2175, 1416], [479, 1430, 624, 1458], [641, 1430, 711, 1458], [724, 1430, 814, 1458], [826, 1430, 851, 1458], [865, 1430, 1035, 1467], [1050, 1430, 1106, 1458], [1119, 1430, 1201, 1458], [1205, 1430, 1290, 1458], [1302, 1430, 1350, 1458], [1362, 1430, 1418, 1458], [1429, 1430, 1572, 1467], [1584, 1430, 1619, 1458], [1628, 1430, 1676, 1458], [1689, 1430, 1796, 1458], [1808, 1430, 1975, 1467], [1987, 1430, 2109, 1458], [2120, 1430, 2173, 1458], [478, 1481, 555, 1509], [567, 1481, 677, 1518], [689, 1481, 881, 1518], [892, 1481, 932, 1518], [945, 1481, 992, 1509], [1004, 1481, 1140, 1509], [1152, 1481, 1342, 1518], [1356, 1490, 1389, 1509], [1401, 1485, 1429, 1509], [1440, 1481, 1514, 1509], [1526, 1481, 1586, 1509], [1597, 1490, 1704, 1518], [1715, 1481, 1846, 1509], [1858, 1481, 2128, 1518], [2141, 1481, 2177, 1509], [479, 1532, 536, 1560], [550, 1532, 672, 1560], [684, 1532, 760, 1561], [772, 1536, 823, 1560], [834, 1532, 912, 1560], [924, 1532, 994, 1560], [996, 1532, 1138, 1569], [1151, 1532, 1297, 1561], [1309, 1541, 1321, 1560], [1324, 1532, 1405, 1560], [376, 1641, 457, 1670], [500, 1642, 606, 1671], [618, 1650, 690, 1671], [702, 1641, 848, 1671], [374, 1721, 435, 1749], [447, 1721, 530, 1758], [542, 1721, 630, 1749], [642, 1721, 814, 1758], [827, 1718, 911, 1759], [927, 1721, 983, 1749], [996, 1715, 1099, 1759], [1115, 1721, 1285, 1758], [1298, 1721, 1435, 1749], [1448, 1730, 1529, 1749], [1542, 1721, 1690, 1749], [1707, 1721, 1735, 1749], [1737, 1730, 1779, 1749], [1780, 1721, 1981, 1749], [1993, 1721, 2174, 1758], [374, 1781, 420, 1800], [431, 1772, 506, 1801], [519, 1772, 677, 1809], [689, 1781, 705, 1800], [718, 1772, 814, 1809], [826, 1772, 981, 1809], [994, 1772, 1042, 1800], [1055, 1776, 1144, 1800], [1156, 1781, 1224, 1800], [1237, 1772, 1418, 1809], [1430, 1772, 1460, 1800], [1482, 1772, 1600, 1801], [1614, 1772, 1688, 1806], [1702, 1772, 1759, 1800], [1771, 1772, 1865, 1800], [1878, 1772, 1964, 1809], [1976, 1772, 2024, 1800], [2037, 1772, 2173, 1800], [377, 1823, 473, 1851], [485, 1832, 504, 1851], [506, 1823, 568, 1857], [582, 1823, 631, 1851], [642, 1823, 813, 1860], [827, 1823, 925, 1860], [937, 1823, 1066, 1860], [1082, 1823, 1191, 1860], [1204, 1823, 1221, 1852], [1233, 1823, 1314, 1860], [1327, 1823, 1377, 1851], [1388, 1823, 1506, 1851], [1522, 1823, 1670, 1852], [1683, 1823, 1807, 1851], [1821, 1823, 1878, 1851], [1891, 1823, 2111, 1860], [2124, 1823, 2174, 1851], [376, 1874, 540, 1902], [553, 1878, 616, 1902], [629, 1874, 722, 1911], [735, 1874, 860, 1902], [874, 1874, 975, 1903], [988, 1874, 1081, 1902], [1093, 1883, 1192, 1903], [1204, 1874, 1397, 1911], [1400, 1874, 1501, 1902], [1513, 1874, 1563, 1902], [1575, 1878, 1636, 1902], [1648, 1874, 1684, 1902], [1694, 1874, 1744, 1902], [1756, 1874, 1852, 1902], [1863, 1874, 2014, 1902], [2032, 1875, 2057, 1902], [2068, 1874, 2094, 1902], [2108, 1874, 2173, 1902], [375, 1924, 561, 1952], [572, 1924, 641, 1952], [653, 1924, 703, 1952], [714, 1924, 821, 1961], [833, 1924, 956, 1952], [968, 1933, 1110, 1961], [1124, 1928, 1154, 1952], [1167, 1924, 1255, 1953], [1267, 1924, 1419, 1961], [1431, 1924, 1560, 1952], [1562, 1924, 1618, 1952], [1630, 1924, 1687, 1952], [1701, 1933, 1778, 1952], [376, 2034, 456, 2064], [500, 2034, 653, 2072], [665, 2034, 757, 2064], [770, 2043, 812, 2064], [824, 2035, 954, 2064], [966, 2034, 1086, 2072], [376, 2115, 408, 2142], [421, 2114, 470, 2142], [482, 2114, 559, 2151], [570, 2114, 606, 2142], [615, 2114, 665, 2142], [676, 2114, 818, 2151], [829, 2114, 937, 2142], [950, 2114, 1000, 2142], [1012, 2114, 1172, 2151], [1184, 2114, 1324, 2151], [1338, 2114, 1439, 2142], [1457, 2114, 1487, 2142], [1499, 2114, 1642, 2151], [1655, 2114, 1789, 2151], [1804, 2123, 1853, 2142], [1865, 2114, 1914, 2142], [1926, 2114, 2080, 2151], [2093, 2118, 2124, 2142], [2135, 2114, 2174, 2142], [377, 2165, 482, 2193], [495, 2165, 594, 2193], [605, 2169, 636, 2193], [649, 2165, 698, 2193], [710, 2169, 802, 2194], [813, 2174, 847, 2193], [859, 2165, 908, 2193], [921, 2174, 1048, 2202], [1059, 2165, 1189, 2193], [1202, 2165, 1357, 2193], [1372, 2165, 1445, 2193], [1457, 2165, 1519, 2193], [1530, 2165, 1594, 2194], [1606, 2165, 1772, 2193], [1784, 2165, 1918, 2194], [1930, 2165, 1979, 2193], [1991, 2165, 2174, 2202], [376, 2215, 471, 2243], [484, 2215, 558, 2243], [572, 2224, 606, 2243], [620, 2215, 670, 2243], [684, 2224, 769, 2243], [783, 2215, 866, 2252], [880, 2215, 1035, 2252], [1050, 2215, 1191, 2243], [1207, 2224, 1256, 2243], [1271, 2224, 1356, 2243], [1371, 2219, 1421, 2252], [1434, 2215, 1483, 2243], [1495, 2215, 1640, 2252], [1654, 2224, 1718, 2243], [1741, 2216, 1782, 2243], [1797, 2219, 1855, 2243], [1869, 2215, 1927, 2243], [1942, 2224, 1990, 2244], [2004, 2215, 2109, 2243], [2124, 2215, 2174, 2243], [376, 2266, 537, 2303], [551, 2266, 748, 2303], [768, 2275, 816, 2295], [829, 2266, 898, 2294], [912, 2275, 929, 2294], [942, 2266, 1024, 2303], [1037, 2266, 1225, 2294], [1237, 2266, 1274, 2294], [1285, 2266, 1400, 2294], [1414, 2266, 1531, 2303], [1547, 2266, 1605, 2294], [1618, 2275, 1674, 2294], [1687, 2266, 1763, 2294], [1777, 2266, 1878, 2294], [1891, 2275, 1949, 2294], [1950, 2266, 2017, 2294], [2031, 2266, 2081, 2294], [2093, 2275, 2173, 2295], [377, 2317, 434, 2345], [450, 2317, 575, 2345], [578, 2326, 625, 2345], [627, 2317, 695, 2345], [709, 2317, 759, 2345], [774, 2317, 891, 2354], [907, 2317, 938, 2345], [952, 2317, 1002, 2345], [1018, 2321, 1071, 2351], [1088, 2317, 1234, 2354], [1249, 2317, 1323, 2345], [1336, 2317, 1467, 2354], [1482, 2317, 1581, 2351], [1598, 2317, 1646, 2345], [1660, 2317, 1804, 2345], [1817, 2317, 2051, 2354], [2065, 2317, 2179, 2345], [374, 2368, 438, 2396], [449, 2368, 635, 2396], [646, 2368, 672, 2396], [684, 2368, 773, 2396], [785, 2368, 865, 2396], [877, 2368, 993, 2405], [1006, 2368, 1148, 2396], [1160, 2368, 1240, 2396], [1252, 2368, 1301, 2396], [1313, 2368, 1444, 2396], [1456, 2368, 1587, 2396], [1599, 2368, 1630, 2396], [1642, 2368, 1732, 2396], [1744, 2368, 1772, 2396], [1789, 2369, 1842, 2396], [1853, 2377, 1908, 2396], [1920, 2368, 1978, 2396], [1990, 2368, 2176, 2396], [376, 2419, 424, 2447], [437, 2419, 487, 2447], [501, 2419, 642, 2447], [658, 2419, 798, 2456], [811, 2419, 907, 2447], [920, 2419, 1133, 2456], [1147, 2419, 1179, 2447], [1193, 2419, 1242, 2447], [1257, 2419, 1460, 2456], [1476, 2419, 1582, 2447], [1604, 2428, 1659, 2447], [1673, 2419, 1937, 2456], [1951, 2419, 1987, 2447], [1999, 2419, 2048, 2447], [2063, 2419, 2173, 2447], [376, 2469, 547, 2506], [564, 2469, 698, 2503], [718, 2469, 866, 2498], [884, 2469, 1008, 2497], [1026, 2469, 1069, 2504], [1087, 2469, 1251, 2497], [1269, 2469, 1440, 2506], [1457, 2469, 1606, 2504], [1625, 2478, 1681, 2497], [1696, 2469, 1850, 2506], [1867, 2469, 1984, 2506], [2001, 2469, 2173, 2506], [376, 2520, 507, 2554], [520, 2520, 681, 2549], [695, 2520, 818, 2548], [831, 2520, 888, 2548], [900, 2520, 1088, 2557], [1089, 2529, 1138, 2549], [1139, 2520, 1215, 2548], [1229, 2520, 1360, 2548], [438, 2571, 546, 2608], [558, 2571, 576, 2600], [591, 2571, 692, 2600], [704, 2571, 816, 2599], [817, 2571, 954, 2599], [967, 2571, 1015, 2599], [1026, 2571, 1170, 2599], [1180, 2571, 1303, 2608], [1315, 2571, 1420, 2599], [1433, 2580, 1505, 2599], [1517, 2571, 1567, 2599], [1579, 2571, 1680, 2600], [1692, 2572, 1777, 2599], [1779, 2571, 1944, 2608], [1947, 2571, 2089, 2599], [2104, 2571, 2177, 2605], [374, 2622, 462, 2651], [474, 2622, 579, 2659], [595, 2622, 630, 2651], [643, 2622, 725, 2651], [728, 2622, 866, 2650], [876, 2622, 980, 2650], [993, 2622, 1040, 2650], [1051, 2622, 1099, 2650], [1111, 2622, 1208, 2651], [1220, 2623, 1313, 2659], [1326, 2622, 1411, 2651], [1424, 2622, 1525, 2650], [1538, 2622, 1735, 2659], [1747, 2622, 1910, 2659], [1922, 2622, 2001, 2651], [2014, 2622, 2174, 2650], [376, 2673, 489, 2701], [504, 2674, 576, 2707], [594, 2673, 657, 2701], [668, 2673, 827, 2710], [839, 2673, 914, 2701], [928, 2673, 963, 2701], [973, 2673, 1093, 2701], [1105, 2682, 1161, 2701], [1172, 2673, 1211, 2701], [1223, 2673, 1379, 2702], [439, 2769, 455, 2785], [479, 2759, 622, 2788], [636, 2759, 736, 2787], [739, 2759, 944, 2794], [956, 2759, 1136, 2796], [1150, 2759, 1247, 2787], [1261, 2763, 1311, 2796], [1323, 2759, 1511, 2796], [1513, 2759, 1589, 2787], [1600, 2759, 1659, 2787], [1670, 2759, 1791, 2796], [1803, 2759, 1914, 2793], [1926, 2759, 1977, 2787], [1988, 2759, 2047, 2787], [2060, 2759, 2173, 2796], [478, 2810, 565, 2838], [577, 2810, 680, 2839], [682, 2814, 742, 2847], [754, 2810, 860, 2847], [870, 2810, 1023, 2847], [1040, 2810, 1110, 2838], [1124, 2819, 1179, 2838], [1190, 2810, 1228, 2838], [1240, 2810, 1398, 2847], [1409, 2810, 1497, 2847], [1510, 2810, 1558, 2838], [1570, 2810, 1733, 2847], [1745, 2810, 1883, 2838], [1895, 2810, 2061, 2847], [2074, 2810, 2177, 2839], [1255, 2935, 1294, 2964], [972, 313, 1105, 366], [1130, 313, 1325, 366], [1350, 310, 1627, 366], [643, 430, 750, 458], [789, 426, 946, 462], [963, 426, 1182, 473], [1201, 426, 1362, 462], [544, 546, 551, 551], [0, 0, 2550, 3300], [644, 501, 750, 531], [789, 498, 980, 534], [999, 498, 1160, 534], [470, 553, 553, 582], [586, 563, 600, 570], [644, 575, 750, 601], [791, 570, 929, 617], [949, 570, 1110, 606], [646, 643, 749, 677], [789, 642, 1008, 678], [1027, 642, 1188, 678], [420, 741, 441, 763], [522, 750, 555, 764], [0, 0, 2550, 3300], [647, 718, 749, 743], [791, 714, 1086, 762], [1106, 715, 1265, 750], [414, 767, 450, 857], [470, 758, 600, 786], [644, 794, 749, 819], [789, 784, 980, 821], [997, 784, 1215, 831], [1236, 784, 1396, 821], [412, 956, 443, 995], [471, 955, 555, 990], [586, 971, 600, 976], [471, 1158, 555, 1194], [586, 1175, 600, 1201], [1175, 1452, 1292, 1491], [1309, 1452, 1423, 1491], [375, 1603, 480, 1640], [492, 1603, 519, 1632], [535, 1603, 673, 1640], [685, 1603, 756, 1631], [759, 1603, 827, 1638], [839, 1603, 917, 1638], [929, 1603, 976, 1631], [985, 1603, 1133, 1640], [1146, 1612, 1182, 1631], [1183, 1603, 1286, 1631], [1297, 1612, 1315, 1631], [1318, 1603, 1388, 1631], [1401, 1607, 1442, 1631], [1454, 1603, 1564, 1631], [1577, 1603, 1624, 1631], [1634, 1594, 1714, 1641], [1719, 1603, 1889, 1640], [1901, 1603, 1932, 1631], [1943, 1603, 1990, 1631], [2002, 1607, 2173, 1632], [377, 1654, 512, 1682], [524, 1654, 572, 1682], [583, 1654, 727, 1683], [741, 1654, 872, 1688], [886, 1654, 934, 1682], [945, 1654, 1114, 1691], [1126, 1654, 1210, 1691], [1223, 1654, 1308, 1682], [1326, 1654, 1405, 1682], [1418, 1663, 1487, 1682], [1501, 1663, 1550, 1682], [1561, 1663, 1601, 1682], [1614, 1663, 1630, 1682], [1642, 1654, 1798, 1691], [670, 1792, 760, 1820], [771, 1792, 799, 1820], [817, 1792, 916, 1820], [928, 1792, 964, 1820], [973, 1792, 1073, 1829], [1085, 1792, 1213, 1820], [1226, 1792, 1301, 1820], [1313, 1792, 1361, 1820], [1372, 1792, 1550, 1829], [1562, 1782, 1641, 1830], [1656, 1792, 1864, 1829], [782, 1869, 905, 1896], [1255, 1869, 1372, 1905], [1435, 1868, 1571, 1905], [1582, 1868, 1682, 1905], [1695, 1868, 1757, 1896], [782, 1960, 865, 1987], [867, 1959, 1045, 1996], [1061, 1959, 1123, 1993], [1285, 1959, 1344, 1988], [1429, 1959, 1505, 1988], [1523, 1967, 1543, 1987], [1561, 1959, 1640, 1988], [1659, 1967, 1679, 1987], [1698, 1959, 1714, 1988], [1727, 1968, 1768, 1996], [782, 2010, 886, 2039], [888, 2010, 1007, 2039], [1019, 2010, 1067, 2039], [1080, 2014, 1124, 2038], [1139, 2011, 1200, 2044], [1263, 2010, 1365, 2039], [1446, 2010, 1502, 2039], [1523, 2018, 1543, 2038], [1561, 2010, 1621, 2039], [1638, 2018, 1658, 2038], [1677, 2010, 1693, 2039], [1706, 2019, 1747, 2047], [479, 2166, 528, 2194], [539, 2166, 621, 2203], [633, 2166, 756, 2203], [769, 2166, 874, 2194], [887, 2166, 937, 2194], [949, 2166, 1044, 2195], [1056, 2166, 1092, 2194], [1102, 2166, 1152, 2194], [1164, 2166, 1235, 2194], [1248, 2166, 1273, 2194], [1287, 2175, 1359, 2203], [1372, 2166, 1463, 2203], [1478, 2166, 1536, 2194], [1549, 2166, 1601, 2194], [1604, 2166, 1680, 2194], [1692, 2166, 1864, 2203], [1877, 2166, 1941, 2195], [1952, 2166, 1991, 2194], [2004, 2166, 2173, 2203], [479, 2217, 515, 2245], [525, 2226, 596, 2254], [609, 2217, 681, 2254], [695, 2221, 856, 2254], [872, 2217, 944, 2245], [957, 2217, 983, 2245], [995, 2217, 1182, 2245], [1184, 2217, 1260, 2245], [1273, 2226, 1290, 2245], [1301, 2217, 1464, 2245], [1476, 2217, 1646, 2254], [1659, 2217, 1791, 2251], [1806, 2226, 1838, 2245], [1850, 2217, 1925, 2245], [1936, 2217, 2099, 2245], [2110, 2217, 2174, 2245], [478, 2268, 597, 2305], [610, 2268, 823, 2305], [838, 2277, 855, 2296], [868, 2268, 951, 2305], [964, 2268, 1078, 2296], [1079, 2268, 1142, 2296], [1154, 2272, 1245, 2305], [1267, 2268, 1317, 2297], [1331, 2268, 1381, 2296], [1394, 2272, 1533, 2305], [1548, 2268, 1596, 2296], [1610, 2268, 1733, 2296], [1745, 2268, 1894, 2305], [1909, 2268, 1959, 2296], [1972, 2268, 2044, 2296], [2057, 2268, 2122, 2297], [2135, 2268, 2174, 2296], [479, 2328, 591, 2348], [592, 2328, 648, 2353], [650, 2319, 728, 2347], [740, 2319, 905, 2356], [917, 2319, 1080, 2356], [1093, 2319, 1128, 2347], [1137, 2328, 1224, 2356], [1238, 2319, 1322, 2347], [1336, 2323, 1493, 2356], [1506, 2319, 1571, 2347], [1583, 2319, 1724, 2356], [1737, 2319, 1767, 2347], [1778, 2328, 1848, 2356], [1860, 2319, 1953, 2356], [1964, 2319, 2173, 2356], [479, 2374, 568, 2398], [439, 2464, 455, 2480], [479, 2454, 543, 2482], [557, 2454, 770, 2491], [784, 2454, 820, 2482], [832, 2454, 951, 2483], [967, 2454, 1148, 2491], [1163, 2454, 1302, 2483], [1317, 2454, 1375, 2482], [1389, 2454, 1602, 2491], [1615, 2454, 1746, 2482], [1749, 2454, 1902, 2491], [1917, 2463, 2015, 2483], [2030, 2454, 2078, 2482], [2092, 2454, 2174, 2491], [478, 2504, 633, 2541], [646, 2504, 698, 2532], [711, 2504, 818, 2532], [833, 2504, 1035, 2541], [1047, 2504, 1106, 2532], [1119, 2504, 1189, 2532], [1201, 2504, 1250, 2532], [1262, 2504, 1423, 2532], [1435, 2504, 1611, 2541], [1630, 2504, 1838, 2541], [1851, 2504, 1900, 2532], [1911, 2504, 1977, 2532], [1988, 2504, 2173, 2541], [480, 2564, 608, 2592], [610, 2555, 712, 2583], [714, 2559, 770, 2583], [781, 2555, 800, 2583], [803, 2555, 881, 2583], [893, 2555, 1001, 2583], [1014, 2555, 1183, 2592], [1195, 2555, 1326, 2583], [439, 2649, 455, 2665], [479, 2639, 543, 2667], [553, 2639, 705, 2676], [717, 2639, 824, 2676], [838, 2643, 966, 2676], [978, 2639, 1094, 2676], [1107, 2639, 1227, 2667], [1241, 2639, 1290, 2667], [1301, 2639, 1511, 2676], [1523, 2639, 1559, 2667], [1568, 2639, 1713, 2668], [1727, 2639, 1850, 2667], [1862, 2639, 1910, 2667], [1921, 2639, 1971, 2667], [1982, 2639, 2042, 2667], [2053, 2639, 2175, 2676], [478, 2690, 603, 2727], [618, 2690, 711, 2719], [725, 2690, 867, 2727], [881, 2694, 911, 2718], [926, 2699, 943, 2718], [954, 2690, 1122, 2718], [1136, 2690, 1206, 2718], [1219, 2694, 1250, 2718], [1263, 2690, 1475, 2727], [1489, 2690, 1537, 2718], [1549, 2690, 1631, 2727], [1643, 2690, 1802, 2727], [1817, 2690, 1885, 2718], [1898, 2690, 2045, 2727], [2058, 2690, 2090, 2718], [2102, 2699, 2175, 2727], [479, 2741, 561, 2778], [572, 2741, 795, 2778], [809, 2750, 881, 2770], [892, 2741, 941, 2769], [953, 2741, 1053, 2769], [1064, 2741, 1293, 2778], [1306, 2745, 1463, 2778], [1255, 2935, 1294, 2963], [969, 313, 1101, 366], [1133, 313, 1325, 366], [1353, 310, 1631, 378], [475, 463, 556, 491], [643, 430, 750, 458], [789, 426, 946, 462], [963, 426, 1181, 472], [1201, 426, 1362, 462], [504, 473, 600, 489], [645, 502, 750, 531], [789, 498, 980, 534], [999, 498, 1160, 534], [473, 585, 556, 612], [589, 594, 600, 600], [644, 575, 750, 601], [791, 570, 929, 616], [947, 570, 1164, 615], [1185, 570, 1345, 606], [417, 663, 456, 696], [646, 643, 749, 677], [789, 642, 1008, 678], [1027, 642, 1188, 678], [417, 699, 449, 783], [475, 703, 556, 731], [586, 713, 600, 718], [646, 718, 749, 743], [791, 714, 1086, 762], [1106, 715, 1265, 750], [425, 822, 556, 865], [589, 834, 600, 840], [418, 872, 448, 900], [424, 906, 449, 924], [425, 929, 448, 963], [495, 945, 557, 970], [586, 953, 600, 958], [417, 981, 448, 1011], [420, 1014, 448, 1047], [417, 1050, 447, 1075], [494, 1065, 555, 1092], [589, 1074, 600, 1080], [493, 1184, 555, 1211], [586, 1193, 600, 1198], [494, 1305, 555, 1332], [589, 1314, 600, 1320], [767, 1352, 775, 1367], [977, 1352, 985, 1368], [1190, 1352, 1198, 1368], [1402, 1352, 1409, 1368], [1616, 1352, 1621, 1368], [1826, 1352, 1834, 1368], [730, 1395, 815, 1431], [942, 1396, 1025, 1431], [1155, 1395, 1237, 1431], [1378, 1395, 1437, 1431], [1589, 1396, 1649, 1431], [1800, 1396, 1860, 1431], [1230, 1452, 1371, 1491], [376, 1603, 484, 1640], [500, 1603, 528, 1632], [553, 1603, 697, 1640], [713, 1603, 802, 1631], [819, 1603, 864, 1638], [880, 1603, 961, 1638], [978, 1603, 1026, 1631], [1041, 1603, 1091, 1631], [1107, 1607, 1159, 1640], [1174, 1603, 1363, 1640], [1378, 1603, 1532, 1640], [1549, 1603, 1607, 1631], [1624, 1607, 1699, 1631], [1715, 1603, 1751, 1631], [1764, 1603, 1814, 1631], [1831, 1607, 1873, 1631], [1889, 1603, 2005, 1631], [2021, 1603, 2070, 1631], [2085, 1594, 2164, 1641], [2169, 1620, 2179, 1623], [375, 1654, 538, 1691], [550, 1663, 621, 1683], [633, 1654, 682, 1682], [694, 1654, 794, 1682], [805, 1654, 919, 1682], [931, 1654, 1063, 1691], [1066, 1654, 1214, 1688], [1227, 1654, 1275, 1682], [1286, 1654, 1455, 1691], [1466, 1654, 1621, 1691], [376, 1787, 457, 1816], [500, 1787, 653, 1825], [665, 1787, 742, 1817], [754, 1788, 868, 1817], [881, 1787, 932, 1817], [943, 1787, 1100, 1825], [1113, 1787, 1226, 1817], [374, 1866, 425, 1894], [438, 1866, 606, 1903], [619, 1866, 655, 1894], [666, 1866, 716, 1894], [730, 1866, 846, 1894], [859, 1866, 1013, 1903], [1026, 1866, 1058, 1894], [1070, 1866, 1129, 1894], [1142, 1875, 1221, 1903], [1222, 1866, 1274, 1894], [1288, 1866, 1365, 1894], [1377, 1866, 1539, 1903], [1553, 1870, 1583, 1894], [1597, 1866, 1693, 1903], [1707, 1866, 1776, 1894], [1789, 1866, 1863, 1895], [1876, 1866, 1925, 1894], [1939, 1875, 2024, 1894], [2037, 1866, 2177, 1900], [374, 1917, 522, 1954], [534, 1917, 652, 1946], [664, 1917, 700, 1945], [709, 1917, 756, 1945], [769, 1917, 873, 1945], [888, 1917, 1047, 1954], [1059, 1917, 1195, 1954], [1198, 1918, 1242, 1945], [1241, 1917, 1413, 1945], [1425, 1917, 1491, 1951], [1504, 1917, 1609, 1954], [1626, 1917, 1657, 1945], [1674, 1917, 1771, 1945], [1784, 1917, 1832, 1945], [1844, 1917, 1969, 1954], [1982, 1917, 2053, 1945], [2056, 1917, 2117, 1945], [2126, 1917, 2173, 1945], [376, 1968, 531, 2005], [543, 1969, 672, 1996], [685, 1968, 742, 1996], [756, 1968, 943, 2003], [957, 1969, 1028, 1996], [1041, 1968, 1140, 2005], [1152, 1968, 1290, 1996], [1304, 1968, 1392, 1996], [1405, 1968, 1525, 2005], [1536, 1968, 1609, 1996], [1621, 1968, 1671, 1996], [1684, 1968, 1822, 1996], [1835, 1968, 1892, 1996], [1904, 1968, 2055, 2005], [2067, 1968, 2173, 1996], [375, 2028, 450, 2056], [462, 2023, 622, 2056], [439, 2070, 526, 2099], [538, 2070, 585, 2098], [595, 2070, 651, 2098], [665, 2074, 708, 2098], [719, 2070, 754, 2098], [763, 2070, 958, 2107], [972, 2079, 988, 2098], [998, 2070, 1096, 2099], [1108, 2074, 1208, 2098], [1219, 2070, 1254, 2098], [1262, 2070, 1386, 2107], [1399, 2079, 1431, 2098], [1444, 2070, 1468, 2098], [1481, 2070, 1603, 2104], [1616, 2079, 1662, 2099], [1673, 2070, 1747, 2098], [1760, 2070, 1892, 2107], [1904, 2070, 1952, 2098], [1964, 2070, 2173, 2107], [377, 2120, 527, 2148], [541, 2129, 572, 2148], [585, 2120, 716, 2148], [419, 2184, 444, 2219], [468, 2184, 529, 2212], [542, 2184, 704, 2221], [718, 2193, 749, 2212], [762, 2184, 794, 2212], [805, 2184, 855, 2212], [868, 2184, 990, 2221], [1004, 2184, 1122, 2221], [1135, 2184, 1284, 2221], [1297, 2193, 1329, 2212], [1347, 2190, 1368, 2214], [1388, 2181, 1423, 2222], [1437, 2181, 1503, 2222], [1520, 2193, 1569, 2212], [1581, 2184, 1697, 2212], [1710, 2188, 1738, 2212], [1749, 2184, 1878, 2212], [1889, 2184, 1938, 2212], [1949, 2184, 2025, 2212], [2036, 2193, 2100, 2218], [2115, 2184, 2173, 2212], [468, 2235, 515, 2263], [528, 2235, 594, 2263], [606, 2239, 706, 2263], [717, 2244, 740, 2271], [754, 2235, 825, 2264], [835, 2235, 997, 2272], [1008, 2235, 1133, 2263], [1144, 2235, 1249, 2263], [1263, 2245, 1292, 2272], [1310, 2241, 1331, 2265], [1352, 2232, 1443, 2273], [1456, 2232, 1518, 2273], [1532, 2235, 1603, 2264], [1615, 2234, 1635, 2264], [1649, 2235, 1697, 2263], [1709, 2244, 1796, 2263], [1807, 2235, 1843, 2263], [1852, 2244, 1894, 2269], [1907, 2235, 1994, 2272], [2007, 2235, 2070, 2263], [2082, 2235, 2138, 2263], [2152, 2234, 2172, 2264], [468, 2285, 575, 2313], [586, 2285, 634, 2313], [645, 2285, 694, 2313], [705, 2285, 839, 2313], [851, 2285, 1069, 2322], [1082, 2294, 1160, 2313], [405, 2357, 444, 2392], [469, 2356, 489, 2386], [503, 2357, 561, 2385], [574, 2367, 597, 2385], [610, 2366, 659, 2385], [671, 2357, 834, 2394], [847, 2366, 879, 2385], [892, 2357, 924, 2385], [935, 2357, 985, 2385], [998, 2357, 1120, 2394], [1134, 2357, 1252, 2394], [1268, 2357, 1325, 2385], [1338, 2357, 1388, 2385], [1400, 2357, 1529, 2394], [1542, 2361, 1646, 2385], [1658, 2366, 1690, 2385], [1704, 2357, 1730, 2385], [1743, 2357, 1847, 2386], [1857, 2357, 2018, 2394], [2031, 2357, 2112, 2385], [2124, 2357, 2174, 2385], [467, 2408, 600, 2436], [612, 2408, 801, 2436], [813, 2417, 856, 2442], [875, 2414, 896, 2438], [916, 2405, 1008, 2446], [1022, 2405, 1114, 2446], [438, 2492, 466, 2520], [469, 2501, 550, 2520], [562, 2492, 600, 2520], [611, 2492, 726, 2529], [738, 2492, 895, 2526], [908, 2492, 1118, 2529], [1130, 2492, 1178, 2520], [1188, 2492, 1261, 2520], [1273, 2492, 1408, 2520], [1422, 2492, 1458, 2520], [1467, 2492, 1516, 2520], [1527, 2492, 1666, 2529], [1677, 2492, 1702, 2520], [1717, 2492, 1825, 2520], [1837, 2492, 1988, 2526], [2001, 2501, 2077, 2520], [2089, 2492, 2115, 2520], [2125, 2492, 2174, 2520], [374, 2543, 525, 2580], [536, 2543, 674, 2580], [686, 2543, 710, 2571], [724, 2543, 934, 2580], [945, 2543, 1057, 2571], [1074, 2543, 1265, 2580], [1280, 2543, 1420, 2580], [1432, 2543, 1481, 2571], [1493, 2543, 1578, 2571], [1588, 2543, 1737, 2572], [1751, 2543, 1910, 2580], [1912, 2547, 1968, 2571], [1981, 2543, 2086, 2571], [2090, 2543, 2172, 2571], [375, 2593, 513, 2630], [524, 2593, 615, 2621], [626, 2593, 756, 2630], [767, 2602, 808, 2630], [820, 2593, 892, 2621], [903, 2593, 1093, 2630], [1096, 2593, 1149, 2621], [1163, 2597, 1214, 2621], [1227, 2602, 1243, 2621], [1256, 2593, 1508, 2630], [1521, 2593, 1593, 2621], [438, 2645, 491, 2672], [505, 2644, 608, 2673], [623, 2644, 688, 2672], [702, 2644, 763, 2672], [776, 2648, 807, 2672], [820, 2644, 907, 2681], [920, 2648, 973, 2672], [985, 2644, 1048, 2672], [1061, 2644, 1092, 2672], [1105, 2644, 1155, 2672], [1168, 2653, 1261, 2681], [1277, 2644, 1339, 2678], [1357, 2653, 1374, 2672], [1385, 2644, 1530, 2681], [1544, 2644, 1730, 2681], [1743, 2644, 1779, 2672], [1790, 2644, 1849, 2672], [1863, 2644, 1988, 2672], [2001, 2644, 2050, 2672], [2063, 2653, 2175, 2681], [376, 2695, 595, 2723], [607, 2695, 638, 2723], [650, 2699, 806, 2732], [817, 2695, 917, 2724], [929, 2695, 954, 2723], [966, 2695, 1133, 2732], [1147, 2695, 1247, 2723], [1259, 2695, 1376, 2732], [1388, 2695, 1438, 2723], [1449, 2695, 1526, 2723], [1537, 2695, 1649, 2723], [1662, 2695, 1718, 2723], [1731, 2704, 1823, 2732], [1833, 2695, 1887, 2723], [1899, 2695, 1977, 2723], [1988, 2704, 2029, 2732], [2030, 2699, 2083, 2723], [2094, 2704, 2156, 2723], [1255, 2935, 1293, 2964], [1066, 313, 1199, 366], [1230, 313, 1536, 378], [643, 430, 750, 457], [789, 426, 946, 462], [963, 426, 1181, 472], [1201, 426, 1362, 462], [475, 531, 558, 558], [589, 540, 600, 546], [645, 502, 750, 531], [789, 498, 980, 534], [999, 498, 1160, 534], [644, 576, 750, 601], [791, 570, 929, 616], [947, 570, 1164, 615], [1185, 570, 1344, 606], [417, 663, 456, 696], [646, 643, 749, 677], [789, 642, 1008, 678], [1027, 642, 1188, 678], [425, 726, 448, 778], [473, 731, 556, 758], [587, 740, 600, 747], [647, 718, 748, 743], [791, 714, 1086, 762], [1106, 715, 1265, 750], [421, 789, 457, 843], [425, 847, 447, 865], [425, 872, 448, 900], [425, 906, 448, 924], [425, 929, 448, 963], [473, 929, 556, 956], [587, 938, 600, 945], [417, 981, 448, 1011], [475, 1129, 556, 1157], [587, 1139, 600, 1144], [475, 1327, 556, 1354], [587, 1337, 600, 1344], [767, 1352, 775, 1367], [977, 1352, 985, 1368], [1190, 1352, 1198, 1368], [1402, 1352, 1408, 1368], [1616, 1352, 1621, 1368], [1826, 1352, 1834, 1368], [730, 1395, 815, 1431], [942, 1396, 1025, 1431], [1155, 1395, 1237, 1431], [1378, 1395, 1437, 1431], [1589, 1396, 1649, 1431], [1800, 1396, 1860, 1431], [1230, 1452, 1371, 1491], [376, 1603, 484, 1640], [503, 1603, 548, 1632], [571, 1603, 714, 1640], [729, 1603, 819, 1631], [835, 1603, 880, 1638], [895, 1603, 975, 1638], [991, 1603, 1039, 1631], [1053, 1603, 1103, 1631], [1118, 1607, 1170, 1640], [1184, 1603, 1373, 1640], [1387, 1603, 1541, 1640], [1557, 1612, 1595, 1631], [1596, 1603, 1706, 1631], [1720, 1603, 1756, 1631], [1768, 1603, 1818, 1631], [1834, 1607, 1877, 1631], [1891, 1603, 2007, 1631], [2022, 1603, 2071, 1631], [2085, 1594, 2164, 1641], [2169, 1620, 2179, 1623], [375, 1654, 539, 1691], [552, 1663, 624, 1682], [636, 1654, 685, 1682], [697, 1654, 798, 1683], [810, 1655, 906, 1691], [919, 1654, 1007, 1683], [1019, 1654, 1125, 1682], [1137, 1654, 1341, 1691], [1353, 1654, 1522, 1691], [1534, 1654, 1616, 1683], [1628, 1654, 1793, 1682], [1806, 1654, 1929, 1688], [1943, 1654, 1991, 1682], [2003, 1654, 2173, 1691], [375, 1705, 529, 1742], [376, 1832, 436, 1867], [488, 1832, 756, 1876], [771, 1832, 832, 1867], [846, 1832, 958, 1867], [974, 1832, 1117, 1867], [1131, 1832, 1302, 1867], [376, 1916, 455, 1945], [500, 1916, 653, 1954], [665, 1916, 742, 1946], [754, 1917, 868, 1946], [881, 1916, 932, 1946], [943, 1916, 1058, 1946], [375, 1997, 453, 2024], [464, 2005, 510, 2025], [523, 1996, 604, 2025], [616, 1996, 720, 2024], [734, 1996, 780, 2024], [791, 1987, 871, 2034], [884, 1996, 1049, 2033], [1066, 1997, 1105, 2024], [1118, 2005, 1172, 2024], [1182, 1996, 1367, 2033], [1381, 1996, 1437, 2024], [1450, 1996, 1567, 2024], [1579, 1996, 1614, 2024], [1623, 1997, 1675, 2024], [1687, 1996, 1739, 2024], [1752, 2000, 1803, 2024], [1813, 1996, 1890, 2024], [1901, 1996, 2052, 2033], [2065, 1996, 2173, 2024], [375, 2047, 487, 2081], [502, 2056, 535, 2075], [547, 2047, 627, 2075], [640, 2047, 678, 2075], [691, 2051, 742, 2075], [754, 2047, 829, 2075], [840, 2047, 1049, 2084], [1061, 2047, 1173, 2076], [1186, 2047, 1233, 2075], [1244, 2047, 1273, 2075], [1290, 2047, 1379, 2081], [1393, 2056, 1438, 2075], [1452, 2047, 1534, 2075], [1546, 2047, 1672, 2084], [1685, 2047, 1738, 2075], [1739, 2047, 1872, 2075], [1885, 2047, 1955, 2084], [1968, 2047, 2015, 2075], [2026, 2047, 2074, 2075], [2086, 2047, 2173, 2076], [377, 2098, 433, 2126], [445, 2098, 495, 2127], [507, 2098, 651, 2126], [668, 2099, 704, 2126], [704, 2107, 765, 2126], [768, 2107, 814, 2126], [825, 2098, 936, 2135], [949, 2107, 1005, 2135], [1018, 2098, 1053, 2126], [1065, 2092, 1144, 2127], [1160, 2107, 1190, 2126], [1203, 2098, 1251, 2126], [1264, 2098, 1401, 2135], [1414, 2098, 1560, 2132], [1574, 2107, 1619, 2127], [1633, 2098, 1695, 2126], [1709, 2098, 1765, 2126], [1778, 2107, 1814, 2126], [1826, 2102, 1906, 2126], [1916, 2098, 2069, 2135], [2081, 2098, 2176, 2126], [376, 2148, 422, 2176], [432, 2148, 519, 2177], [531, 2148, 602, 2177], [614, 2148, 761, 2176], [776, 2142, 855, 2177], [869, 2152, 899, 2176], [912, 2148, 998, 2176], [1010, 2148, 1089, 2185], [1103, 2148, 1240, 2185], [1252, 2148, 1291, 2176], [1293, 2152, 1350, 2176], [1362, 2148, 1534, 2185], [1547, 2148, 1703, 2176], [1715, 2148, 1917, 2176], [1929, 2148, 2052, 2176], [2068, 2148, 2173, 2185], [376, 2199, 412, 2227], [425, 2199, 509, 2227], [512, 2199, 643, 2227], [656, 2199, 704, 2227], [715, 2199, 764, 2227], [776, 2203, 836, 2227], [848, 2199, 1063, 2236], [1076, 2199, 1226, 2227], [1239, 2199, 1319, 2227], [1319, 2203, 1408, 2227], [438, 2250, 502, 2278], [516, 2250, 625, 2278], [641, 2250, 773, 2278], [789, 2250, 851, 2278], [866, 2250, 915, 2278], [930, 2250, 1143, 2287], [1158, 2250, 1194, 2278], [1207, 2250, 1296, 2279], [1313, 2250, 1371, 2278], [1387, 2250, 1416, 2279], [1417, 2250, 1561, 2278], [1577, 2250, 1751, 2287], [1767, 2250, 1799, 2278], [1813, 2250, 1863, 2278], [1879, 2254, 1939, 2279], [1955, 2250, 2174, 2287], [377, 2301, 538, 2329], [555, 2301, 656, 2329], [668, 2301, 717, 2329], [728, 2301, 836, 2329], [849, 2301, 897, 2329], [908, 2301, 958, 2329], [970, 2301, 1034, 2329], [1046, 2301, 1183, 2329], [1196, 2301, 1317, 2338], [1333, 2301, 1428, 2336], [1442, 2301, 1539, 2338], [1551, 2305, 1675, 2338], [1686, 2301, 1748, 2329], [1759, 2301, 1811, 2330], [1823, 2310, 1972, 2338], [1975, 2301, 2092, 2329], [2103, 2301, 2174, 2329], [376, 2352, 433, 2381], [437, 2352, 513, 2380], [514, 2352, 623, 2389], [638, 2352, 748, 2389], [765, 2352, 787, 2380], [801, 2352, 932, 2389], [947, 2352, 1022, 2380], [1038, 2361, 1072, 2380], [1087, 2352, 1261, 2389], [1276, 2361, 1295, 2380], [1297, 2352, 1380, 2380], [1395, 2352, 1458, 2380], [1472, 2352, 1509, 2380], [1521, 2351, 1541, 2381], [1556, 2352, 1680, 2380], [1694, 2356, 1725, 2380], [1744, 2349, 1833, 2390], [1855, 2352, 1977, 2386], [1994, 2352, 2044, 2380], [2059, 2352, 2173, 2380], [377, 2403, 514, 2431], [527, 2403, 648, 2440], [664, 2403, 763, 2438], [777, 2403, 861, 2432], [865, 2403, 953, 2431], [965, 2403, 1110, 2440], [1122, 2403, 1170, 2431], [1182, 2403, 1271, 2431], [1283, 2403, 1387, 2431], [1400, 2403, 1436, 2431], [1446, 2402, 1476, 2437], [1490, 2403, 1543, 2432], [1554, 2412, 1625, 2431], [1637, 2403, 1729, 2431], [1741, 2403, 1811, 2431], [1824, 2403, 1913, 2432], [1916, 2412, 1969, 2437], [1982, 2402, 2002, 2432], [2016, 2403, 2177, 2437], [376, 2453, 452, 2482], [464, 2453, 668, 2490], [681, 2462, 811, 2482], [824, 2453, 1032, 2490], [1046, 2462, 1079, 2481], [1092, 2453, 1181, 2481], [1192, 2453, 1252, 2481], [1264, 2453, 1311, 2481], [1321, 2453, 1502, 2490], [1515, 2453, 1593, 2490], [1607, 2452, 1637, 2487], [1650, 2453, 1672, 2481], [1683, 2453, 1708, 2481], [1720, 2453, 1827, 2481], [1840, 2457, 1869, 2481], [1881, 2453, 1942, 2481], [1956, 2462, 1992, 2481], [2005, 2453, 2173, 2490], [377, 2504, 505, 2532], [517, 2513, 591, 2532], [603, 2504, 676, 2532], [691, 2504, 796, 2538], [809, 2504, 958, 2532], [972, 2504, 1021, 2539], [1032, 2513, 1110, 2541], [1111, 2504, 1211, 2532], [1223, 2504, 1358, 2541], [1371, 2504, 1401, 2532], [1413, 2513, 1466, 2532], [1477, 2504, 1752, 2541], [1769, 2504, 1956, 2541], [1969, 2504, 2056, 2533], [2068, 2504, 2144, 2532], [2158, 2513, 2174, 2532], [377, 2555, 508, 2583], [521, 2555, 679, 2592], [691, 2555, 741, 2583], [754, 2555, 894, 2592], [906, 2555, 1045, 2583], [1056, 2555, 1151, 2583], [1162, 2564, 1251, 2592], [1264, 2555, 1413, 2589], [1427, 2555, 1493, 2583], [1507, 2555, 1644, 2592], [1657, 2564, 1673, 2583], [1685, 2564, 1769, 2583], [1780, 2555, 1882, 2583], [1893, 2555, 2042, 2584], [438, 2606, 533, 2634], [544, 2606, 649, 2634], [663, 2610, 782, 2643], [794, 2606, 854, 2634], [865, 2606, 887, 2634], [898, 2606, 922, 2634], [935, 2606, 1098, 2643], [1111, 2610, 1140, 2634], [1153, 2606, 1272, 2643], [1286, 2615, 1302, 2634], [1312, 2606, 1417, 2643], [1430, 2606, 1577, 2643], [1589, 2606, 1648, 2634], [1660, 2606, 1798, 2634], [1801, 2606, 1874, 2634], [1887, 2606, 2030, 2643], [2043, 2606, 2079, 2634], [2086, 2606, 2173, 2635], [377, 2657, 434, 2685], [449, 2657, 505, 2686], [522, 2657, 605, 2686], [619, 2666, 636, 2685], [648, 2657, 757, 2694], [773, 2657, 926, 2694], [939, 2657, 965, 2685], [980, 2657, 1093, 2694], [1106, 2657, 1197, 2694], [1211, 2657, 1261, 2685], [1275, 2657, 1437, 2694], [1452, 2657, 1656, 2694], [1671, 2657, 1872, 2692], [1886, 2657, 1951, 2685], [1965, 2657, 2002, 2685], [2013, 2657, 2128, 2685], [2150, 2657, 2176, 2685], [377, 2706, 397, 2736], [414, 2713, 440, 2736], [461, 2704, 539, 2745], [553, 2716, 609, 2735], [622, 2707, 678, 2741], [693, 2707, 856, 2736], [867, 2716, 923, 2735], [936, 2707, 1025, 2736], [1029, 2707, 1179, 2741], [1195, 2716, 1226, 2735], [1241, 2716, 1258, 2735], [1271, 2707, 1441, 2744], [1455, 2707, 1482, 2735], [1492, 2707, 1545, 2736], [1557, 2707, 1583, 2735], [1596, 2707, 1728, 2735], [1740, 2707, 1780, 2735], [1782, 2707, 1875, 2735], [1889, 2711, 1919, 2735], [1932, 2707, 1996, 2735], [2010, 2716, 2027, 2735], [2040, 2707, 2174, 2735], [374, 2758, 481, 2787], [494, 2758, 534, 2787], [548, 2758, 712, 2792], [728, 2758, 778, 2786], [790, 2758, 899, 2795], [914, 2758, 1024, 2786], [1039, 2758, 1147, 2787], [1160, 2762, 1191, 2786], [1205, 2758, 1303, 2787], [1319, 2758, 1391, 2786], [1405, 2758, 1616, 2786], [1629, 2762, 1807, 2795], [1820, 2758, 1906, 2795], [1920, 2767, 2129, 2795], [2143, 2758, 2174, 2786], [1255, 2935, 1294, 2964], [714, 262, 761, 291], [768, 261, 971, 299], [988, 261, 1071, 292], [1522, 262, 1585, 291], [1607, 262, 1779, 299], [1795, 262, 1948, 300], [1403, 332, 1564, 357], [1575, 332, 1662, 352], [1673, 332, 1799, 357], [494, 296, 529, 325], [562, 331, 722, 356], [734, 332, 819, 351], [832, 331, 958, 357], [562, 362, 722, 387], [734, 363, 819, 382], [832, 362, 938, 385], [1403, 372, 1413, 375], [1422, 372, 1432, 375], [1441, 363, 1564, 388], [1575, 363, 1662, 383], [1673, 363, 1780, 388], [562, 395, 655, 414], [659, 394, 740, 420], [752, 394, 878, 420], [1403, 395, 1506, 415], [1515, 394, 1582, 420], [1593, 395, 1719, 420], [522, 450, 530, 463], [562, 436, 591, 439], [600, 427, 666, 446], [675, 426, 740, 452], [752, 426, 859, 449], [1403, 436, 1413, 439], [1422, 427, 1506, 447], [1515, 426, 1582, 452], [1593, 427, 1700, 452], [494, 459, 519, 479], [546, 470, 553, 471], [457, 529, 478, 562], [457, 618, 477, 643], [494, 605, 539, 634], [494, 769, 519, 789], [523, 759, 612, 799], [620, 792, 650, 798], [1562, 772, 1573, 780], [1923, 770, 1983, 798], [2009, 774, 2074, 795], [1363, 834, 1381, 847], [1503, 847, 1504, 854], [1735, 847, 1736, 854], [1968, 847, 1969, 854], [645, 850, 679, 893], [878, 850, 913, 893], [1110, 850, 1146, 893], [1335, 845, 1360, 865], [1481, 862, 1527, 892], [1719, 862, 1754, 892], [1951, 862, 1987, 892], [807, 899, 919, 923], [930, 899, 983, 923], [1673, 898, 1774, 928], [1783, 898, 1799, 921], [1666, 960, 1700, 989], [825, 961, 858, 989], [376, 1056, 484, 1093], [500, 1056, 545, 1084], [563, 1056, 706, 1093], [719, 1056, 808, 1084], [822, 1056, 865, 1091], [879, 1056, 959, 1091], [972, 1056, 1021, 1084], [1032, 1056, 1189, 1093], [1202, 1057, 1332, 1085], [1346, 1056, 1404, 1084], [1416, 1057, 1489, 1084], [1502, 1056, 1602, 1093], [1615, 1056, 1731, 1084], [1743, 1056, 1792, 1084], [1803, 1056, 1956, 1093], [1969, 1056, 2027, 1084], [2038, 1056, 2175, 1084], [374, 1097, 454, 1135], [459, 1106, 634, 1143], [646, 1106, 718, 1134], [730, 1106, 899, 1143], [912, 1106, 940, 1141], [954, 1106, 1026, 1143], [1027, 1106, 1137, 1140], [1150, 1106, 1183, 1141], [1195, 1106, 1349, 1143], [1367, 1106, 1446, 1134], [1459, 1115, 1528, 1134], [1542, 1115, 1591, 1134], [1602, 1115, 1642, 1134], [1655, 1115, 1671, 1134], [1683, 1106, 1839, 1143], [715, 1229, 784, 1258], [800, 1229, 972, 1266], [987, 1229, 1073, 1259], [562, 1283, 669, 1318], [562, 1329, 648, 1350], [1522, 1229, 1591, 1258], [1607, 1229, 1779, 1266], [1795, 1229, 1948, 1267], [1875, 1294, 1922, 1301], [1930, 1295, 1978, 1299], [1986, 1293, 2072, 1299], [1403, 1283, 1510, 1318], [1403, 1329, 1490, 1350], [1374, 1370, 1449, 1394], [1455, 1361, 1564, 1382], [807, 1867, 919, 1891], [931, 1867, 984, 1891], [825, 1927, 858, 1955], [1719, 1839, 1725, 1858], [1673, 1865, 1774, 1895], [1783, 1865, 1799, 1888], [1666, 1926, 1700, 1955], [376, 2031, 484, 2068], [500, 2031, 545, 2059], [562, 2031, 705, 2068], [717, 2031, 790, 2059], [793, 2031, 863, 2066], [876, 2031, 956, 2066], [970, 2031, 1018, 2059], [1029, 2031, 1127, 2065], [1141, 2031, 1193, 2060], [1206, 2031, 1264, 2059], [1277, 2040, 1294, 2059], [1304, 2031, 1412, 2068], [1425, 2031, 1568, 2060], [1570, 2032, 1734, 2068], [1735, 2031, 1816, 2059], [1827, 2022, 1907, 2069], [1912, 2031, 2088, 2068], [2101, 2031, 2174, 2060], [376, 2082, 544, 2119], [557, 2082, 586, 2117], [599, 2082, 683, 2119], [696, 2082, 783, 2116], [795, 2082, 828, 2117], [840, 2082, 995, 2119], [1012, 2082, 1091, 2110], [1104, 2091, 1173, 2110], [1188, 2091, 1236, 2110], [1248, 2091, 1288, 2110], [1301, 2091, 1317, 2110], [1328, 2082, 1484, 2119], [375, 2215, 517, 2252], [546, 2215, 669, 2243], [686, 2215, 734, 2243], [750, 2215, 809, 2243], [825, 2215, 935, 2252], [953, 2215, 1106, 2252], [1123, 2224, 1172, 2243], [1189, 2215, 1254, 2243], [1271, 2215, 1415, 2243], [1432, 2215, 1464, 2243], [1480, 2215, 1530, 2243], [1546, 2215, 1626, 2252], [1644, 2215, 1676, 2243], [1692, 2215, 1800, 2252], [1821, 2215, 1866, 2249], [1887, 2215, 1945, 2243], [1963, 2215, 2048, 2244], [2064, 2215, 2134, 2244], [2152, 2215, 2175, 2243], [377, 2266, 577, 2303], [589, 2266, 708, 2294], [721, 2266, 771, 2294], [782, 2266, 926, 2295], [937, 2266, 973, 2294], [982, 2266, 1032, 2294], [1042, 2266, 1137, 2294], [1149, 2266, 1308, 2303], [1321, 2270, 1459, 2303], [1471, 2266, 1559, 2295], [1572, 2266, 1630, 2294], [1642, 2266, 1696, 2295], [376, 2377, 457, 2406], [500, 2377, 653, 2415], [665, 2377, 742, 2407], [754, 2378, 868, 2407], [881, 2377, 932, 2407], [943, 2378, 1060, 2415], [375, 2457, 452, 2484], [465, 2465, 510, 2484], [524, 2456, 606, 2484], [618, 2456, 723, 2484], [736, 2456, 783, 2484], [794, 2447, 874, 2501], [887, 2456, 1053, 2493], [1071, 2456, 1178, 2493], [1191, 2460, 1221, 2484], [1234, 2465, 1288, 2484], [1298, 2456, 1457, 2493], [1459, 2456, 1620, 2484], [1633, 2456, 1744, 2485], [1758, 2456, 1805, 2484], [1816, 2456, 1872, 2484], [1885, 2456, 2004, 2485], [2016, 2456, 2051, 2484], [2060, 2457, 2112, 2484], [2126, 2465, 2173, 2484], [376, 2511, 429, 2535], [441, 2507, 589, 2535], [593, 2507, 674, 2541], [686, 2507, 846, 2544], [859, 2507, 907, 2535], [920, 2507, 1041, 2544], [1053, 2507, 1103, 2535], [1115, 2506, 1227, 2548], [1238, 2507, 1409, 2544], [1420, 2507, 1561, 2544], [1572, 2507, 1612, 2535], [1624, 2507, 1711, 2541], [1726, 2507, 1801, 2535], [1813, 2516, 1845, 2535], [1858, 2507, 1908, 2535], [1920, 2517, 1979, 2544], [1991, 2507, 2131, 2535], [2143, 2507, 2174, 2535], [377, 2558, 449, 2587], [450, 2558, 594, 2595], [610, 2558, 683, 2592], [696, 2558, 791, 2586], [803, 2567, 844, 2586], [857, 2567, 874, 2586], [885, 2567, 955, 2586], [968, 2558, 1085, 2595], [1099, 2558, 1259, 2595], [1275, 2558, 1511, 2595], [1525, 2567, 1572, 2587], [1584, 2562, 1705, 2595], [1716, 2558, 1787, 2586], [1800, 2567, 1817, 2586], [1828, 2558, 2023, 2595], [2034, 2558, 2173, 2587], [376, 2609, 434, 2637], [445, 2609, 600, 2637], [611, 2609, 779, 2646], [793, 2609, 966, 2637], [979, 2609, 1037, 2637], [1049, 2618, 1104, 2637], [1115, 2609, 1262, 2637], [1263, 2609, 1462, 2646], [1474, 2609, 1563, 2637], [1575, 2609, 1724, 2637], [1726, 2609, 1788, 2637], [1800, 2618, 1855, 2637], [1865, 2609, 2017, 2646], [2029, 2609, 2175, 2638], [376, 2660, 541, 2697], [553, 2660, 650, 2688], [660, 2660, 696, 2688], [705, 2659, 779, 2697], [795, 2660, 857, 2688], [869, 2660, 1036, 2688], [1046, 2660, 1185, 2697], [1197, 2660, 1284, 2697], [1294, 2660, 1333, 2697], [1345, 2660, 1392, 2688], [1403, 2660, 1615, 2688], [1628, 2660, 1784, 2697], [1794, 2660, 1830, 2688], [1840, 2659, 1935, 2697], [1947, 2660, 1971, 2688], [1984, 2660, 2046, 2688], [2057, 2664, 2174, 2697], [376, 2711, 406, 2739], [418, 2711, 468, 2739], [480, 2711, 681, 2748], [697, 2712, 750, 2739], [761, 2720, 816, 2739], [829, 2720, 845, 2739], [857, 2711, 970, 2748], [983, 2720, 1041, 2748], [1053, 2711, 1089, 2739], [1101, 2704, 1179, 2740], [1195, 2720, 1226, 2739], [1240, 2711, 1381, 2748], [1393, 2711, 1532, 2739], [1544, 2711, 1617, 2739], [1629, 2711, 1677, 2739], [1688, 2711, 1740, 2740], [1752, 2711, 1810, 2739], [1822, 2712, 1888, 2739], [1901, 2711, 2009, 2748], [2024, 2711, 2058, 2740], [2073, 2711, 2172, 2739], [375, 2761, 481, 2789], [494, 2761, 542, 2789], [553, 2761, 602, 2789], [614, 2765, 674, 2789], [686, 2761, 901, 2798], [914, 2761, 1064, 2789], [1077, 2761, 1157, 2789], [1157, 2765, 1247, 2795], [1261, 2761, 1309, 2789], [1318, 2771, 1339, 2797], [1351, 2761, 1453, 2790], [1466, 2761, 1502, 2789], [1514, 2761, 1571, 2795], [1588, 2761, 1635, 2790], [1650, 2761, 1707, 2789], [1720, 2761, 1746, 2790], [1256, 2935, 1295, 2964], [548, 259, 580, 278], [582, 259, 722, 284], [732, 259, 790, 279], [800, 259, 865, 284], [1137, 259, 1169, 278], [1171, 259, 1311, 284], [1321, 259, 1379, 279], [1389, 259, 1453, 284], [1071, 305, 1166, 318], [1071, 326, 1187, 339], [1503, 326, 1533, 343], [1737, 259, 1769, 278], [1771, 259, 1911, 284], [1921, 259, 1979, 279], [1989, 259, 2031, 284], [1660, 305, 1755, 318], [1660, 326, 1776, 339], [435, 654, 452, 667], [459, 665, 481, 685], [553, 665, 577, 685], [648, 665, 672, 685], [742, 665, 766, 685], [837, 665, 861, 685], [931, 665, 955, 685], [1637, 665, 1659, 685], [1731, 665, 1755, 685], [1826, 665, 1850, 685], [1920, 665, 1944, 685], [2015, 665, 2039, 685], [2109, 665, 2133, 685], [647, 691, 723, 706], [731, 691, 767, 706], [1236, 691, 1312, 706], [1320, 691, 1356, 706], [1826, 691, 1901, 706], [1909, 691, 1945, 706], [657, 740, 690, 768], [1245, 739, 1280, 768], [1835, 740, 1868, 768], [376, 835, 484, 872], [501, 835, 547, 864], [566, 835, 710, 872], [723, 835, 813, 863], [827, 835, 872, 870], [886, 835, 966, 870], [981, 835, 1029, 863], [1041, 835, 1094, 864], [1107, 835, 1181, 864], [1193, 836, 1245, 863], [1258, 835, 1438, 872], [1453, 835, 1505, 864], [1518, 835, 1592, 864], [1606, 835, 1729, 864], [1743, 845, 1802, 872], [1815, 835, 1994, 872], [2009, 836, 2071, 863], [2085, 835, 2143, 863], [2158, 844, 2175, 863], [375, 886, 484, 923], [497, 886, 637, 915], [652, 886, 822, 923], [838, 886, 886, 914], [899, 876, 978, 930], [983, 886, 1161, 923], [1175, 886, 1249, 915], [1262, 886, 1434, 923], [1448, 886, 1534, 923], [1547, 886, 1626, 914], [1641, 886, 1699, 914], [1713, 886, 1796, 914], [1809, 886, 1953, 914], [1966, 886, 2090, 914], [2104, 895, 2123, 914], [2126, 886, 2179, 922], [376, 937, 454, 965], [468, 946, 522, 965], [525, 946, 599, 965], [611, 946, 651, 965], [664, 946, 680, 965], [692, 937, 848, 974], [535, 1054, 567, 1073], [569, 1054, 707, 1079], [717, 1054, 820, 1079], [829, 1054, 893, 1079], [1124, 1054, 1156, 1073], [1158, 1054, 1296, 1079], [1306, 1054, 1409, 1079], [1418, 1054, 1482, 1079], [1724, 1054, 1756, 1073], [1758, 1054, 1896, 1079], [1906, 1054, 2009, 1079], [2018, 1054, 2060, 1079], [440, 1076, 463, 1095], [817, 1094, 825, 1100], [1029, 1082, 1046, 1095], [1618, 1082, 1635, 1095], [2046, 1090, 2069, 1101], [492, 1099, 586, 1112], [803, 1099, 832, 1121], [1081, 1099, 1175, 1112], [1670, 1099, 1765, 1112], [2041, 1104, 2045, 1111], [799, 1121, 834, 1146], [1081, 1121, 1196, 1134], [1670, 1121, 1785, 1134], [2036, 1116, 2070, 1136], [797, 1146, 801, 1154], [1127, 1142, 1142, 1155], [1670, 1142, 1731, 1155], [2031, 1138, 2066, 1165], [794, 1159, 798, 1166], [1618, 1167, 1649, 1186], [1670, 1163, 1729, 1176], [1731, 1163, 1961, 1181], [2026, 1162, 2060, 1176], [1717, 1189, 1810, 1196], [1838, 1182, 1963, 1205], [1891, 1199, 1906, 1218], [1954, 1209, 1965, 1219], [1596, 1228, 1612, 1238], [1596, 1240, 1612, 1261], [1636, 1257, 1655, 1265], [1592, 1270, 1607, 1284], [1618, 1263, 1635, 1276], [1596, 1286, 1607, 1295], [1592, 1297, 1607, 1309], [1636, 1347, 1655, 1355], [1618, 1353, 1635, 1366], [1765, 1354, 1789, 1379], [1029, 1438, 1066, 1457], [1618, 1438, 1655, 1457], [937, 1456, 961, 1475], [1055, 1456, 1086, 1475], [1172, 1456, 1203, 1475], [1292, 1456, 1316, 1494], [1409, 1456, 1433, 1475], [1526, 1456, 1550, 1475], [1644, 1456, 1675, 1475], [1761, 1456, 1792, 1475], [1881, 1456, 1905, 1494], [1998, 1456, 2022, 1475], [2115, 1456, 2139, 1475], [1250, 1529, 1285, 1558], [1840, 1530, 1873, 1558], [1042, 1636, 1048, 1645], [1114, 1614, 1146, 1633], [1148, 1614, 1288, 1639], [1298, 1614, 1402, 1639], [1411, 1614, 1476, 1639], [1631, 1636, 1637, 1645], [1714, 1614, 1747, 1633], [1748, 1614, 1888, 1639], [1898, 1614, 2002, 1639], [2012, 1614, 2054, 1639], [1024, 1643, 1041, 1656], [1613, 1643, 1630, 1656], [1071, 1660, 1166, 1673], [1660, 1660, 1755, 1673], [1071, 1687, 1090, 1690], [1096, 1681, 1187, 1694], [1419, 1687, 1451, 1703], [1660, 1681, 1776, 1694], [2038, 1683, 2063, 1698], [1071, 1703, 1133, 1716], [1410, 1700, 1452, 1728], [1660, 1703, 1722, 1716], [2027, 1702, 2064, 1726], [1024, 1727, 1048, 1747], [1071, 1725, 1130, 1738], [1132, 1725, 1170, 1738], [1405, 1724, 1436, 1746], [1613, 1727, 1637, 1747], [1660, 1725, 1719, 1738], [1721, 1725, 1759, 1738], [2019, 1725, 2028, 1745], [1246, 2095, 1279, 2123], [1837, 2094, 1866, 2123], [376, 2190, 484, 2227], [501, 2190, 546, 2218], [564, 2190, 708, 2218], [721, 2190, 836, 2227], [849, 2199, 924, 2227], [938, 2190, 1014, 2225], [1028, 2190, 1086, 2218], [1098, 2190, 1229, 2227], [1241, 2190, 1315, 2218], [1318, 2190, 1414, 2225], [1428, 2190, 1460, 2218], [1473, 2190, 1554, 2225], [1567, 2190, 1616, 2218], [1627, 2190, 1680, 2219], [1692, 2190, 1766, 2219], [1778, 2191, 1829, 2218], [1842, 2190, 2021, 2227], [2035, 2190, 2088, 2219], [2100, 2190, 2174, 2219], [377, 2241, 495, 2270], [508, 2251, 565, 2278], [576, 2241, 750, 2278], [762, 2242, 822, 2269], [836, 2241, 892, 2269], [905, 2250, 921, 2269], [931, 2241, 1037, 2278], [1049, 2241, 1183, 2270], [1196, 2241, 1353, 2278], [1355, 2241, 1421, 2275], [1432, 2231, 1512, 2285], [1517, 2241, 1688, 2278], [1701, 2241, 1772, 2270], [1784, 2241, 1949, 2278], [1960, 2241, 2103, 2278], [2118, 2241, 2174, 2269], [376, 2292, 457, 2320], [469, 2292, 609, 2320], [621, 2292, 742, 2320], [756, 2292, 792, 2320], [799, 2302, 828, 2328], [845, 2292, 924, 2320], [937, 2301, 1006, 2320], [1021, 2301, 1069, 2320], [1081, 2301, 1121, 2320], [1134, 2301, 1150, 2320], [1161, 2292, 1317, 2329], [438, 2425, 467, 2453], [479, 2425, 592, 2453], [593, 2434, 637, 2453], [639, 2425, 840, 2462], [852, 2425, 1049, 2453], [1062, 2434, 1118, 2453], [1130, 2425, 1169, 2453], [1181, 2425, 1284, 2454], [1296, 2425, 1378, 2453], [1389, 2425, 1421, 2453], [1422, 2425, 1568, 2453], [1585, 2425, 1669, 2459], [1683, 2434, 1738, 2453], [1750, 2425, 1907, 2462], [1919, 2426, 2050, 2454], [2062, 2424, 2174, 2465], [377, 2476, 545, 2504], [557, 2476, 581, 2504], [594, 2476, 638, 2504], [648, 2485, 730, 2504], [741, 2476, 872, 2504], [883, 2476, 952, 2504], [963, 2486, 1019, 2513], [1031, 2476, 1118, 2505], [1129, 2476, 1160, 2504], [1171, 2476, 1218, 2504], [1230, 2480, 1348, 2504], [1359, 2476, 1394, 2504], [1402, 2476, 1450, 2504], [1462, 2476, 1512, 2505], [1524, 2476, 1626, 2504], [1643, 2477, 1711, 2505], [1723, 2476, 1831, 2504], [1844, 2485, 1926, 2504], [1936, 2480, 1966, 2504], [1977, 2476, 2014, 2504], [2026, 2476, 2073, 2504], [2085, 2485, 2173, 2504], [376, 2527, 411, 2555], [420, 2527, 486, 2555], [504, 2527, 534, 2555], [546, 2527, 594, 2555], [606, 2527, 669, 2555], [679, 2527, 765, 2564], [777, 2536, 831, 2555], [842, 2527, 996, 2564], [1007, 2528, 1135, 2555], [1148, 2527, 1295, 2564], [1306, 2536, 1397, 2564], [1400, 2531, 1455, 2555], [1467, 2527, 1504, 2555], [1517, 2527, 1607, 2555], [1618, 2527, 1687, 2555], [1699, 2527, 1747, 2555], [1759, 2536, 1828, 2555], [1840, 2527, 1954, 2564], [1967, 2527, 2088, 2555], [2099, 2527, 2174, 2555], [375, 2578, 416, 2615], [428, 2588, 496, 2615], [513, 2578, 673, 2615], [687, 2578, 718, 2606], [730, 2578, 818, 2606], [830, 2578, 878, 2606], [889, 2578, 939, 2606], [951, 2578, 1003, 2607], [1016, 2578, 1102, 2606], [1102, 2582, 1158, 2606], [1171, 2578, 1234, 2606], [1248, 2587, 1265, 2606], [1277, 2578, 1410, 2606], [1422, 2578, 1528, 2607], [1540, 2578, 1590, 2606], [1602, 2578, 1721, 2606], [1734, 2578, 1849, 2615], [1861, 2587, 1929, 2615], [1943, 2578, 1993, 2606], [2004, 2578, 2173, 2615], [377, 2628, 547, 2656], [559, 2632, 638, 2656], [649, 2628, 772, 2665], [785, 2637, 856, 2665], [869, 2632, 1002, 2656], [1014, 2628, 1119, 2656], [1134, 2628, 1236, 2663], [1251, 2622, 1346, 2657], [1361, 2628, 1391, 2656], [1403, 2632, 1478, 2656], [1480, 2628, 1540, 2656], [1550, 2628, 1662, 2665], [1674, 2628, 1753, 2665], [1770, 2628, 1867, 2657], [1879, 2628, 1915, 2656], [1927, 2629, 2056, 2656], [2068, 2632, 2177, 2662], [376, 2688, 429, 2707], [440, 2678, 548, 2720], [562, 2679, 730, 2707], [744, 2679, 837, 2707], [849, 2679, 942, 2707], [953, 2679, 983, 2707], [995, 2683, 1069, 2707], [1080, 2679, 1115, 2707], [1123, 2679, 1248, 2716], [1261, 2679, 1331, 2707], [1334, 2688, 1391, 2707], [1405, 2688, 1421, 2707], [1432, 2679, 1526, 2707], [1537, 2679, 1572, 2707], [1581, 2679, 1629, 2707], [1641, 2679, 1756, 2707], [1770, 2688, 1917, 2716], [1931, 2679, 2029, 2708], [2041, 2679, 2173, 2716], [375, 2730, 413, 2758], [425, 2730, 573, 2759], [585, 2730, 765, 2758], [778, 2730, 809, 2758], [820, 2730, 1037, 2767], [1256, 2935, 1291, 2964], [438, 243, 462, 270], [474, 242, 498, 270], [513, 242, 577, 270], [589, 242, 625, 270], [633, 242, 790, 271], [802, 242, 906, 279], [919, 242, 979, 270], [991, 242, 1192, 270], [1191, 242, 1245, 270], [1259, 242, 1462, 279], [1474, 242, 1565, 270], [1577, 242, 1647, 270], [1659, 242, 1814, 279], [1826, 243, 1964, 270], [1980, 242, 2051, 270], [2066, 242, 2174, 270], [376, 292, 550, 329], [562, 292, 610, 320], [621, 301, 674, 320], [686, 292, 722, 320], [730, 292, 882, 329], [893, 293, 1029, 326], [1041, 292, 1092, 320], [1104, 301, 1131, 321], [1133, 292, 1222, 320], [1235, 292, 1256, 320], [1268, 296, 1297, 320], [1309, 292, 1346, 320], [1358, 292, 1518, 329], [1530, 292, 1628, 320], [1640, 292, 1671, 320], [1682, 292, 1730, 320], [1741, 301, 1830, 329], [1843, 292, 1878, 320], [1920, 292, 2063, 329], [2076, 292, 2173, 321], [377, 342, 397, 372], [410, 343, 435, 371], [448, 343, 537, 380], [549, 343, 601, 371], [613, 347, 664, 371], [676, 343, 796, 380], [808, 347, 837, 371], [849, 343, 955, 371], [966, 343, 1014, 371], [1026, 343, 1163, 380], [1175, 343, 1271, 372], [1284, 343, 1328, 378], [1345, 356, 1373, 365], [1388, 343, 1405, 372], [1420, 343, 1571, 378], [1589, 344, 1621, 371], [1633, 343, 1690, 371], [1702, 352, 1793, 380], [1805, 343, 1853, 371], [1866, 347, 1925, 371], [1938, 343, 2065, 372], [2078, 343, 2114, 371], [2123, 344, 2174, 371], [377, 394, 434, 422], [448, 394, 512, 422], [525, 395, 586, 422], [599, 403, 648, 422], [659, 394, 770, 422], [783, 398, 813, 422], [826, 394, 889, 422], [902, 403, 919, 422], [931, 394, 1064, 422], [1076, 394, 1182, 423], [1194, 394, 1244, 422], [1256, 394, 1376, 422], [1388, 394, 1503, 431], [1515, 403, 1574, 431], [1587, 388, 1707, 429], [1721, 394, 1836, 431], [1849, 394, 1936, 422], [1949, 398, 1977, 422], [1989, 394, 2174, 431], [377, 445, 533, 473], [549, 446, 602, 473], [615, 445, 699, 474], [711, 445, 768, 473], [781, 445, 863, 473], [874, 445, 915, 482], [927, 454, 1015, 473], [1018, 445, 1079, 473], [1089, 454, 1105, 473], [1116, 445, 1224, 482], [1236, 445, 1372, 474], [1386, 445, 1554, 482], [1567, 445, 1598, 473], [1610, 445, 1710, 473], [1721, 445, 1846, 482], [1859, 445, 1939, 473], [1949, 445, 2023, 473], [2035, 445, 2172, 473], [377, 505, 425, 524], [438, 496, 623, 524], [637, 500, 666, 524], [679, 505, 696, 524], [707, 496, 783, 524], [796, 496, 833, 524], [847, 496, 883, 525], [896, 497, 958, 524], [970, 496, 1098, 533], [1110, 505, 1164, 533], [1180, 496, 1192, 524], [1209, 496, 1261, 525], [1273, 496, 1394, 533], [1410, 505, 1441, 524], [1455, 497, 1517, 524], [1529, 496, 1641, 533], [1644, 505, 1720, 524], [1733, 496, 1831, 524], [1850, 496, 1894, 524], [1907, 496, 1982, 524], [1995, 496, 2173, 533], [376, 550, 535, 583], [547, 546, 754, 583], [756, 546, 808, 574], [821, 555, 873, 574], [875, 546, 1044, 574], [1055, 546, 1106, 574], [1118, 546, 1224, 574], [1236, 546, 1377, 574], [1387, 546, 1567, 583], [1581, 546, 1629, 574], [1640, 546, 1733, 583], [1746, 555, 1789, 580], [1803, 546, 1872, 583], [1884, 546, 2087, 583], [2099, 546, 2174, 574], [376, 597, 460, 625], [471, 597, 577, 634], [590, 597, 734, 634], [747, 606, 763, 625], [776, 597, 910, 634], [922, 597, 1044, 625], [1057, 597, 1200, 634], [1212, 597, 1261, 625], [1273, 597, 1422, 634], [1434, 597, 1548, 634], [1560, 606, 1618, 634], [1631, 597, 1688, 625], [1699, 597, 1885, 634], [1897, 597, 1988, 625], [2000, 597, 2069, 625], [2081, 597, 2136, 626], [376, 708, 456, 738], [500, 708, 653, 746], [665, 708, 742, 738], [754, 709, 868, 738], [881, 708, 932, 738], [943, 709, 1077, 738], [375, 789, 431, 816], [440, 788, 657, 825], [668, 797, 695, 817], [697, 788, 787, 816], [798, 788, 916, 816], [926, 788, 1030, 816], [1042, 788, 1089, 816], [1098, 797, 1152, 816], [1161, 778, 1241, 826], [1255, 788, 1352, 816], [1360, 788, 1451, 816], [1462, 797, 1502, 816], [1512, 788, 1562, 817], [1573, 795, 1594, 816], [1605, 788, 1767, 816], [1778, 787, 1794, 816], [1797, 788, 1991, 825], [2002, 788, 2179, 816], [375, 838, 480, 875], [496, 837, 529, 867], [541, 842, 673, 875], [684, 838, 809, 875], [822, 838, 907, 866], [920, 838, 967, 866], [977, 838, 1025, 866], [1036, 842, 1095, 867], [1107, 838, 1316, 875], [1330, 838, 1477, 866], [1489, 838, 1567, 866], [1568, 842, 1655, 866], [1673, 838, 1760, 867], [1772, 837, 1985, 875], [1996, 838, 2020, 866], [2034, 847, 2070, 866], [2081, 838, 2176, 866], [375, 889, 511, 926], [522, 889, 591, 917], [602, 889, 650, 917], [663, 889, 780, 926], [793, 888, 1006, 929], [1018, 889, 1065, 917], [1077, 889, 1217, 917], [1230, 889, 1387, 926], [1398, 898, 1542, 926], [1545, 889, 1660, 917], [1671, 893, 1700, 917], [1713, 889, 1761, 917], [1774, 889, 1903, 917], [1915, 889, 1984, 917], [1995, 889, 2043, 917], [2056, 889, 2173, 926], [376, 940, 427, 969], [439, 931, 519, 984], [532, 949, 607, 977], [620, 940, 726, 974], [740, 949, 771, 968], [784, 940, 937, 977], [773, 1070, 840, 1095], [852, 1070, 1006, 1103], [1019, 1070, 1096, 1096], [1494, 1070, 1561, 1095], [1574, 1070, 1728, 1103], [1742, 1070, 1877, 1103], [1670, 1609, 1676, 1626], [857, 1634, 956, 1655], [966, 1634, 1013, 1655], [1631, 1632, 1719, 1658], [1728, 1631, 1742, 1652], [870, 1691, 903, 1719], [1621, 1690, 1655, 1719], [375, 1794, 480, 1831], [495, 1793, 539, 1823], [556, 1794, 694, 1831], [706, 1794, 791, 1822], [805, 1794, 847, 1829], [859, 1794, 937, 1829], [949, 1794, 996, 1822], [1007, 1794, 1057, 1823], [1068, 1794, 1115, 1822], [1125, 1795, 1170, 1823], [1172, 1785, 1205, 1833], [1210, 1794, 1381, 1831], [1393, 1794, 1464, 1823], [1475, 1794, 1640, 1831], [1653, 1794, 1681, 1829], [1693, 1794, 1775, 1831], [1787, 1794, 1872, 1828], [1884, 1794, 1917, 1829], [1928, 1794, 2080, 1831], [2096, 1794, 2174, 1822], [377, 1854, 445, 1873], [460, 1854, 508, 1873], [520, 1854, 560, 1873], [573, 1854, 589, 1873], [601, 1845, 757, 1882], [376, 1999, 457, 2028], [499, 1999, 716, 2037], [733, 1999, 895, 2029], [907, 1999, 1128, 2037], [1141, 1999, 1191, 2029], [1203, 2000, 1423, 2029], [374, 2079, 426, 2106], [438, 2087, 477, 2106], [478, 2082, 636, 2115], [649, 2087, 665, 2106], [676, 2078, 734, 2115], [747, 2078, 927, 2115], [939, 2078, 1000, 2106], [1011, 2078, 1137, 2106], [1151, 2078, 1230, 2106], [1241, 2087, 1296, 2106], [1307, 2079, 1359, 2106], [1371, 2087, 1446, 2115], [1458, 2082, 1619, 2115], [1636, 2078, 1856, 2107], [1869, 2078, 1941, 2113], [1957, 2078, 2030, 2112], [2045, 2087, 2061, 2106], [2072, 2078, 2174, 2106], [376, 2129, 436, 2157], [448, 2129, 530, 2157], [543, 2129, 593, 2157], [605, 2129, 684, 2157], [889, 2180, 956, 2233], [1010, 2173, 1027, 2222], [1037, 2177, 1047, 2218], [1054, 2179, 1113, 2208], [1128, 2197, 1154, 2198], [1168, 2172, 1228, 2218], [1243, 2184, 1271, 2211], [1285, 2177, 1408, 2218], [1424, 2184, 1452, 2211], [1466, 2179, 1532, 2214], [1533, 2171, 1587, 2218], [1594, 2177, 1658, 2218], [2097, 2180, 2173, 2215], [374, 2275, 436, 2303], [448, 2274, 583, 2310], [594, 2275, 624, 2303], [637, 2275, 713, 2310], [726, 2275, 823, 2303], [836, 2284, 924, 2312], [937, 2285, 969, 2310], [985, 2279, 1014, 2303], [1026, 2275, 1063, 2303], [1076, 2284, 1153, 2309], [1166, 2275, 1255, 2304], [1267, 2266, 1347, 2314], [1362, 2275, 1459, 2304], [1472, 2284, 1601, 2303], [1614, 2279, 1808, 2312], [1821, 2279, 1851, 2303], [1864, 2284, 1971, 2312], [1982, 2275, 2013, 2303], [2024, 2275, 2128, 2303], [2142, 2275, 2177, 2303], [376, 2326, 463, 2363], [475, 2326, 576, 2355], [590, 2336, 664, 2360], [682, 2339, 710, 2348], [725, 2336, 758, 2360], [775, 2339, 803, 2348], [818, 2336, 892, 2363], [910, 2339, 938, 2348], [956, 2350, 1007, 2354], [1025, 2326, 1086, 2354], [1098, 2327, 1145, 2354], [1157, 2326, 1247, 2354], [1249, 2326, 1323, 2354], [1335, 2326, 1412, 2354], [1425, 2326, 1624, 2363], [1637, 2326, 1756, 2363], [1768, 2326, 1798, 2354], [1811, 2326, 1923, 2355], [1934, 2326, 2172, 2354], [377, 2377, 572, 2414], [588, 2377, 647, 2411], [661, 2377, 710, 2411], [724, 2377, 785, 2411], [800, 2386, 830, 2405], [844, 2377, 865, 2405], [877, 2377, 1007, 2405], [1019, 2377, 1100, 2414], [1110, 2377, 1288, 2414], [1302, 2377, 1391, 2405], [1403, 2377, 1594, 2406], [1606, 2377, 1750, 2405], [1763, 2377, 1794, 2405], [1806, 2377, 1999, 2414], [2012, 2377, 2173, 2414], [377, 2428, 472, 2457], [484, 2432, 512, 2456], [524, 2437, 608, 2456], [438, 2479, 607, 2516], [620, 2479, 669, 2507], [682, 2479, 766, 2507], [777, 2479, 938, 2516], [950, 2479, 981, 2507], [994, 2479, 1061, 2508], [1075, 2479, 1103, 2513], [1118, 2479, 1202, 2507], [1214, 2479, 1264, 2507], [1276, 2480, 1323, 2507], [1335, 2479, 1439, 2507], [1450, 2488, 1521, 2507], [1534, 2483, 1595, 2508], [1606, 2479, 1812, 2516], [1826, 2488, 1874, 2508], [1886, 2488, 1942, 2507], [1953, 2488, 2009, 2507], [2021, 2479, 2174, 2507], [376, 2529, 508, 2566], [520, 2538, 551, 2557], [564, 2529, 614, 2557], [626, 2529, 769, 2557], [770, 2533, 826, 2557], [837, 2529, 948, 2557], [960, 2529, 1010, 2557], [1021, 2538, 1097, 2566], [1109, 2533, 1254, 2566], [1270, 2530, 1312, 2557], [1324, 2529, 1469, 2557], [1481, 2529, 1531, 2557], [1542, 2529, 1671, 2557], [1684, 2529, 1720, 2557], [1730, 2529, 1788, 2557], [1801, 2529, 1982, 2558], [1994, 2529, 2024, 2557], [2037, 2533, 2128, 2557], [2141, 2529, 2177, 2557], [375, 2580, 555, 2617], [569, 2589, 616, 2608], [629, 2580, 718, 2617], [730, 2580, 752, 2608], [764, 2584, 794, 2608], [807, 2580, 921, 2609], [933, 2580, 1060, 2609], [1073, 2580, 1109, 2608], [1118, 2581, 1173, 2608], [439, 2674, 455, 2690], [479, 2664, 699, 2693], [712, 2663, 801, 2699], [816, 2665, 1041, 2701], [1055, 2664, 1116, 2692], [1131, 2663, 1192, 2699], [1208, 2668, 1236, 2695], [1248, 2655, 1328, 2703], [1344, 2673, 1374, 2692], [1388, 2664, 1418, 2692], [1431, 2664, 1507, 2699], [439, 2742, 455, 2758], [479, 2731, 679, 2772], [697, 2731, 815, 2761], [834, 2731, 925, 2767], [947, 2733, 1177, 2769], [1196, 2732, 1260, 2760], [1280, 2731, 1341, 2766], [1362, 2736, 1390, 2763], [1407, 2722, 1486, 2776], [1492, 2756, 1497, 2760], [1532, 2732, 1663, 2769], [1681, 2732, 1820, 2760], [1838, 2732, 1953, 2760], [1970, 2741, 2033, 2761], [2053, 2732, 2175, 2769], [480, 2783, 599, 2811], [612, 2783, 654, 2820], [667, 2783, 752, 2811], [767, 2783, 825, 2811], [839, 2783, 1000, 2811], [1016, 2783, 1089, 2817], [1105, 2783, 1182, 2811], [1196, 2783, 1349, 2820], [1361, 2783, 1515, 2820], [1530, 2792, 1567, 2811], [1580, 2782, 1692, 2827], [1705, 2783, 1887, 2820], [1900, 2783, 1932, 2811], [1945, 2783, 1995, 2811], [2009, 2792, 2098, 2811], [2112, 2783, 2175, 2811], [1256, 2935, 1295, 2964], [715, 247, 882, 295], [913, 249, 1076, 295], [1415, 247, 1657, 295], [1686, 247, 1871, 295], [580, 337, 664, 381], [675, 339, 760, 378], [792, 347, 816, 371], [849, 341, 955, 377], [987, 347, 1012, 371], [1044, 338, 1213, 380], [1327, 337, 1507, 381], [1538, 347, 1562, 371], [1593, 341, 1700, 377], [1730, 347, 1755, 371], [1785, 340, 1954, 382], [1585, 410, 1600, 425], [1555, 545, 1743, 600], [588, 689, 811, 749], [840, 689, 1008, 737], [1039, 691, 1202, 737], [615, 782, 752, 820], [786, 788, 810, 813], [844, 783, 951, 819], [985, 788, 1010, 813], [1044, 780, 1213, 865], [1345, 691, 1462, 749], [1488, 689, 1731, 737], [1760, 689, 1945, 737], [1354, 784, 1491, 821], [1526, 790, 1550, 815], [1585, 784, 1692, 821], [1726, 790, 1751, 815], [1785, 781, 1906, 823], [1913, 787, 1954, 824], [1650, 829, 1659, 855], [1875, 829, 1947, 857], [729, 1132, 836, 1169], [851, 1132, 896, 1161], [926, 1132, 1134, 1160], [1146, 1132, 1263, 1160], [1278, 1132, 1439, 1160], [1450, 1132, 1491, 1169], [1502, 1132, 1640, 1169], [1641, 1132, 1805, 1169], [680, 1282, 700, 1283], [1835, 1282, 1855, 1283], [2122, 1252, 2168, 1281], [479, 1280, 554, 1321], [571, 1296, 599, 1305], [615, 1271, 717, 1324], [734, 1280, 815, 1321], [831, 1300, 857, 1301], [870, 1280, 934, 1321], [948, 1283, 972, 1311], [984, 1283, 1058, 1311], [1070, 1283, 1183, 1311], [1195, 1283, 1231, 1311], [1239, 1283, 1287, 1311], [1299, 1284, 1351, 1311], [1363, 1283, 1539, 1320], [1549, 1274, 1629, 1328], [1636, 1280, 1684, 1321], [1702, 1296, 1730, 1305], [1750, 1263, 1872, 1338], [1889, 1280, 1970, 1321], [1987, 1280, 2179, 1321], [479, 1343, 574, 1380], [587, 1344, 648, 1383], [663, 1343, 744, 1371], [757, 1347, 786, 1371], [800, 1352, 816, 1371], [828, 1352, 909, 1371], [922, 1343, 1123, 1372], [1135, 1343, 1253, 1380], [1266, 1343, 1326, 1371], [1338, 1343, 1410, 1371], [1423, 1347, 1474, 1371], [1485, 1343, 1675, 1372], [1687, 1343, 1735, 1371], [1747, 1343, 1905, 1371], [1922, 1343, 1992, 1371], [2004, 1344, 2051, 1371], [2063, 1343, 2174, 1372], [480, 1403, 563, 1422], [566, 1398, 622, 1422], [633, 1394, 672, 1422], [683, 1403, 755, 1422], [458, 1460, 726, 1498], [745, 1461, 829, 1490], [848, 1460, 965, 1496], [986, 1461, 1203, 1498], [1223, 1460, 1285, 1495], [1305, 1465, 1333, 1492], [1351, 1451, 1441, 1499], [1463, 1461, 1565, 1490], [1584, 1461, 1634, 1489], [1652, 1461, 1716, 1489], [1735, 1461, 1819, 1489], [1839, 1461, 1888, 1489], [1907, 1461, 1989, 1489], [2006, 1458, 2115, 1499], [2144, 1474, 2172, 1483], [480, 1520, 532, 1564], [544, 1522, 595, 1560], [610, 1503, 645, 1578], [660, 1527, 688, 1554], [702, 1503, 941, 1578], [962, 1523, 1020, 1551], [1037, 1532, 1094, 1551], [1109, 1523, 1149, 1551], [1164, 1523, 1241, 1551], [1257, 1523, 1289, 1551], [1306, 1532, 1323, 1551], [1339, 1524, 1386, 1551], [1403, 1523, 1602, 1551], [1618, 1527, 1648, 1551], [1665, 1523, 1770, 1551], [1786, 1523, 1906, 1551], [1923, 1532, 2008, 1551], [2026, 1523, 2179, 1560], [480, 1589, 526, 1613], [538, 1585, 586, 1613], [597, 1585, 812, 1613], [824, 1594, 864, 1613], [877, 1594, 893, 1613], [905, 1585, 1018, 1613], [1032, 1582, 1114, 1623], [1126, 1582, 1193, 1623], [1210, 1585, 1282, 1619], [439, 1663, 455, 1679], [479, 1652, 619, 1690], [630, 1660, 651, 1681], [664, 1652, 821, 1693], [834, 1652, 949, 1688], [965, 1653, 1098, 1690], [1111, 1653, 1172, 1681], [1187, 1652, 1249, 1687], [1264, 1657, 1292, 1684], [1305, 1643, 1385, 1697], [1391, 1677, 1395, 1681], [438, 1738, 479, 1765], [493, 1737, 579, 1765], [591, 1737, 677, 1765], [689, 1737, 819, 1765], [832, 1737, 869, 1765], [878, 1738, 926, 1765], [929, 1737, 989, 1771], [1002, 1737, 1064, 1765], [1075, 1737, 1207, 1765], [1220, 1737, 1246, 1765], [1259, 1741, 1290, 1765], [1303, 1741, 1447, 1774], [1459, 1737, 1509, 1765], [1521, 1737, 1674, 1774], [1687, 1737, 1723, 1765], [1733, 1737, 1783, 1765], [1795, 1737, 1859, 1765], [1872, 1737, 2036, 1771], [2049, 1737, 2103, 1765], [2114, 1737, 2173, 1765], [376, 1788, 441, 1816], [452, 1788, 477, 1816], [490, 1788, 593, 1817], [609, 1788, 691, 1816], [703, 1788, 739, 1816], [748, 1788, 830, 1816], [843, 1788, 911, 1816], [922, 1788, 1038, 1816], [1051, 1797, 1107, 1816], [1117, 1788, 1155, 1816], [1168, 1788, 1237, 1816], [1250, 1788, 1354, 1817], [1366, 1788, 1461, 1825], [1472, 1788, 1512, 1825], [1524, 1788, 1665, 1825], [1679, 1797, 1736, 1825], [1747, 1788, 1884, 1825], [1885, 1788, 2039, 1825], [2052, 1788, 2174, 1816], [375, 1839, 416, 1876], [431, 1839, 653, 1876], [667, 1839, 816, 1876], [830, 1839, 862, 1867], [875, 1839, 1013, 1876], [1027, 1839, 1085, 1867], [1098, 1848, 1174, 1876], [1188, 1843, 1353, 1876], [1374, 1839, 1581, 1876], [1596, 1839, 1646, 1867], [1660, 1838, 1763, 1868], [1776, 1839, 1887, 1876], [1904, 1839, 1965, 1873], [1982, 1839, 2121, 1867], [2137, 1848, 2174, 1867], [376, 1889, 631, 1926], [643, 1889, 678, 1917], [686, 1889, 796, 1918], [811, 1889, 872, 1923], [887, 1889, 1030, 1926], [1043, 1889, 1132, 1917], [1144, 1889, 1191, 1917], [1201, 1889, 1299, 1917], [1309, 1890, 1413, 1923], [1427, 1889, 1525, 1917], [1537, 1898, 1583, 1917], [1594, 1889, 1666, 1917], [1678, 1898, 1732, 1917], [1743, 1889, 1940, 1926], [1953, 1898, 2000, 1917], [2016, 1889, 2122, 1926], [2139, 1889, 2173, 1918], [377, 1940, 460, 1968], [463, 1949, 506, 1968], [518, 1940, 681, 1968], [694, 1940, 730, 1968], [739, 1940, 788, 1968], [801, 1940, 989, 1977], [1002, 1940, 1139, 1968], [1153, 1940, 1200, 1968], [1212, 1940, 1332, 1977], [1344, 1940, 1418, 1968], [1431, 1941, 1478, 1968], [1489, 1940, 1599, 1968], [438, 1991, 592, 2020], [614, 1991, 643, 2019], [657, 1991, 772, 2019], [786, 1991, 978, 2028], [993, 1991, 1217, 2028], [1230, 2000, 1288, 2019], [1301, 1991, 1340, 2019], [1354, 1991, 1498, 2019], [1512, 1991, 1553, 2028], [1567, 1991, 1714, 2028], [1729, 1991, 1791, 2019], [1805, 1991, 1853, 2019], [1867, 1988, 1941, 2029], [1963, 2004, 1991, 2013], [2011, 1988, 2135, 2029], [2152, 1995, 2180, 2022], [376, 2041, 442, 2076], [444, 2032, 498, 2080], [505, 2039, 557, 2080], [575, 2042, 624, 2070], [638, 2051, 715, 2079], [730, 2046, 870, 2079], [884, 2051, 978, 2080], [1000, 2051, 1028, 2068], [1047, 2051, 1126, 2078], [1129, 2058, 1219, 2087], [1234, 2052, 1250, 2068], [1261, 2051, 1482, 2089], [1507, 2042, 1589, 2071], [1604, 2051, 1621, 2070], [1635, 2042, 1883, 2079], [1897, 2042, 1972, 2070], [1988, 2046, 2041, 2070], [2054, 2042, 2175, 2079], [375, 2093, 458, 2127], [473, 2093, 527, 2121], [540, 2093, 563, 2121], [576, 2102, 634, 2121], [646, 2093, 686, 2121], [701, 2093, 808, 2122], [822, 2097, 853, 2121], [866, 2093, 940, 2121], [955, 2093, 1003, 2121], [1017, 2093, 1076, 2121], [1090, 2093, 1252, 2130], [1265, 2102, 1336, 2121], [1354, 2093, 1413, 2127], [1430, 2093, 1478, 2127], [1494, 2093, 1556, 2127], [1579, 2093, 1753, 2127], [1770, 2093, 1818, 2121], [1832, 2094, 1879, 2121], [1895, 2093, 1952, 2121], [1967, 2094, 2041, 2121], [2055, 2102, 2102, 2122], [2117, 2102, 2174, 2121], [376, 2147, 514, 2180], [527, 2143, 575, 2171], [586, 2143, 733, 2180], [745, 2147, 881, 2180], [892, 2143, 939, 2171], [950, 2143, 998, 2171], [1010, 2143, 1149, 2171], [1151, 2143, 1358, 2180], [1369, 2153, 1386, 2171], [1399, 2143, 1528, 2180], [1542, 2143, 1607, 2171], [1620, 2143, 1774, 2180], [1787, 2143, 1835, 2171], [1847, 2143, 1923, 2171], [1935, 2143, 1982, 2171], [1994, 2152, 2010, 2171], [2022, 2143, 2176, 2171], [377, 2194, 543, 2231], [560, 2194, 631, 2222], [644, 2194, 669, 2222], [683, 2194, 748, 2222], [761, 2194, 865, 2222], [877, 2194, 908, 2222], [920, 2194, 1027, 2231], [1043, 2194, 1086, 2223], [376, 2305, 456, 2334], [500, 2306, 720, 2335], [732, 2305, 958, 2343], [975, 2305, 1160, 2335], [374, 2385, 435, 2413], [448, 2385, 582, 2413], [593, 2386, 639, 2413], [651, 2385, 739, 2413], [741, 2385, 813, 2413], [824, 2385, 900, 2413], [911, 2385, 1110, 2414], [1121, 2385, 1152, 2413], [1162, 2385, 1210, 2413], [1221, 2385, 1375, 2419], [1389, 2394, 1422, 2413], [1434, 2394, 1450, 2413], [1460, 2385, 1569, 2413], [1570, 2385, 1629, 2413], [1636, 2385, 1775, 2422], [1787, 2385, 1958, 2422], [1971, 2385, 2122, 2413], [2123, 2385, 2174, 2422], [375, 2435, 449, 2464], [463, 2435, 580, 2472], [591, 2435, 668, 2463], [679, 2435, 836, 2472], [853, 2435, 915, 2463], [928, 2435, 1182, 2463], [1193, 2435, 1398, 2463], [1412, 2435, 1570, 2472], [1581, 2435, 1611, 2463], [1623, 2435, 1671, 2463], [1683, 2434, 1786, 2464], [1798, 2435, 1904, 2472], [1917, 2444, 1972, 2463], [1983, 2435, 2021, 2463], [2032, 2435, 2174, 2472], [377, 2495, 408, 2514], [422, 2486, 472, 2514], [486, 2490, 561, 2514], [574, 2486, 610, 2514], [620, 2486, 670, 2514], [684, 2490, 735, 2520], [750, 2486, 874, 2523], [888, 2486, 1044, 2514], [1056, 2495, 1111, 2514], [1124, 2486, 1160, 2514], [1172, 2495, 1209, 2514], [1222, 2486, 1359, 2514], [1370, 2486, 1535, 2523], [1550, 2486, 1726, 2514], [1740, 2486, 1877, 2521], [1892, 2486, 1957, 2515], [1969, 2486, 2173, 2523], [376, 2546, 417, 2565], [429, 2527, 509, 2575], [514, 2537, 692, 2574], [706, 2536, 802, 2574], [815, 2537, 893, 2565], [907, 2537, 1029, 2574], [1043, 2537, 1150, 2566], [1164, 2537, 1344, 2574], [1358, 2537, 1394, 2565], [1404, 2546, 1460, 2565], [1471, 2546, 1547, 2574], [1562, 2537, 1678, 2565], [1692, 2546, 1764, 2565], [1777, 2537, 1888, 2571], [1904, 2537, 1985, 2566], [1996, 2537, 2129, 2565], [2143, 2541, 2173, 2565], [375, 2588, 414, 2616], [426, 2588, 563, 2616], [576, 2588, 602, 2616], [615, 2588, 750, 2617], [762, 2588, 821, 2616], [834, 2588, 949, 2616], [960, 2588, 1015, 2616], [1029, 2597, 1046, 2616], [1059, 2588, 1234, 2625], [1246, 2588, 1360, 2625], [1372, 2597, 1413, 2616], [1425, 2588, 1475, 2616], [1488, 2588, 1603, 2616], [1615, 2589, 1663, 2616], [1677, 2588, 1783, 2616], [1802, 2589, 1843, 2616], [1857, 2588, 1897, 2616], [1911, 2597, 1955, 2622], [1969, 2597, 2017, 2617], [2030, 2597, 2174, 2625], [375, 2639, 503, 2676], [515, 2639, 602, 2667], [615, 2639, 687, 2667], [701, 2639, 847, 2676], [860, 2639, 935, 2667], [438, 2690, 491, 2717], [508, 2693, 649, 2726], [664, 2689, 794, 2717], [809, 2689, 950, 2717], [968, 2688, 1001, 2717], [1024, 2695, 1045, 2719], [1069, 2687, 1172, 2717], [1191, 2689, 1265, 2718], [1280, 2689, 1353, 2717], [1371, 2689, 1482, 2717], [1499, 2689, 1603, 2718], [1618, 2689, 1700, 2717], [1716, 2698, 1733, 2717], [1748, 2698, 1819, 2717], [1835, 2698, 1934, 2723], [1952, 2689, 2018, 2717], [2033, 2689, 2174, 2717], [376, 2740, 528, 2777], [553, 2741, 606, 2768], [622, 2744, 668, 2768], [681, 2740, 731, 2768], [745, 2740, 894, 2777], [910, 2744, 941, 2768], [957, 2739, 993, 2774], [1016, 2753, 1044, 2762], [1065, 2739, 1102, 2774], [1124, 2753, 1152, 2762], [1175, 2740, 1221, 2769], [1245, 2741, 1299, 2768], [1315, 2740, 1410, 2768], [1423, 2740, 1473, 2768], [1488, 2744, 1592, 2768], [1607, 2740, 1643, 2768], [1654, 2749, 1817, 2777], [1833, 2749, 1856, 2776], [1871, 2740, 1961, 2777], [1977, 2740, 2027, 2768], [2041, 2740, 2175, 2768], [376, 2800, 399, 2827], [414, 2804, 442, 2813], [457, 2788, 704, 2829], [717, 2791, 814, 2820], [827, 2800, 875, 2825], [889, 2791, 944, 2819], [956, 2800, 977, 2819], [991, 2800, 1038, 2819], [1049, 2791, 1173, 2819], [1183, 2795, 1297, 2819], [1310, 2791, 1412, 2820], [1423, 2791, 1529, 2819], [1540, 2791, 1615, 2819], [1626, 2791, 1776, 2819], [1791, 2791, 1804, 2819], [1819, 2791, 1875, 2819], [1888, 2791, 1968, 2825], [1979, 2791, 2179, 2828], [1256, 2935, 1293, 2964], [306, 870, 323, 960], [306, 768, 323, 862], [308, 739, 323, 759], [306, 631, 328, 731], [306, 1448, 323, 1537], [306, 1345, 323, 1439], [308, 1316, 323, 1336], [306, 1208, 328, 1308], [374, 242, 438, 270], [450, 242, 615, 270], [626, 242, 734, 270], [748, 251, 796, 270], [809, 242, 1011, 270], [1023, 242, 1054, 270], [1066, 242, 1173, 279], [1189, 242, 1234, 276], [1248, 242, 1348, 270], [1361, 251, 1519, 279], [1531, 246, 1584, 270], [1595, 242, 1631, 270], [1640, 242, 1690, 270], [1701, 242, 1763, 270], [1776, 242, 1871, 271], [1884, 242, 2017, 277], [2030, 242, 2093, 277], [2109, 242, 2171, 276], [377, 292, 494, 329], [509, 292, 559, 320], [575, 301, 647, 329], [665, 301, 749, 320], [766, 292, 928, 329], [943, 292, 1122, 329], [1138, 301, 1194, 320], [1209, 292, 1269, 320], [1283, 292, 1462, 329], [1479, 283, 1558, 331], [1577, 292, 1678, 320], [1693, 292, 1811, 320], [1827, 292, 1863, 320], [1877, 292, 1926, 320], [1942, 292, 2059, 320], [2073, 292, 2175, 321], [377, 343, 552, 371], [564, 343, 600, 371], [610, 343, 710, 372], [724, 343, 928, 380], [941, 343, 966, 371], [979, 343, 1059, 371], [1070, 343, 1111, 380], [1125, 343, 1243, 372], [1245, 343, 1326, 380], [1337, 343, 1461, 371], [1473, 343, 1610, 371], [1622, 347, 1652, 371], [1665, 343, 1715, 371], [1726, 343, 1893, 380], [1906, 343, 2057, 380], [2068, 352, 2173, 371], [376, 394, 454, 422], [471, 394, 532, 422], [544, 394, 666, 431], [679, 394, 779, 422], [792, 394, 823, 422], [834, 394, 907, 422], [920, 394, 1025, 431], [1038, 403, 1115, 423], [1127, 394, 1281, 422], [1292, 394, 1332, 431], [1343, 394, 1469, 431], [1480, 394, 1552, 422], [1565, 394, 1735, 431], [1748, 394, 1795, 422], [1807, 403, 1823, 422], [1834, 403, 1904, 431], [1916, 394, 1995, 431], [2007, 394, 2131, 422], [2142, 394, 2177, 422], [376, 445, 536, 473], [417, 534, 504, 559], [519, 535, 603, 559], [618, 534, 705, 559], [717, 534, 749, 559], [762, 541, 777, 559], [789, 534, 915, 559], [1074, 534, 1161, 559], [1176, 535, 1259, 559], [1274, 534, 1362, 559], [1375, 534, 1425, 559], [1438, 541, 1453, 559], [1465, 534, 1590, 559], [1739, 534, 1827, 559], [1842, 535, 1925, 559], [1940, 534, 2027, 559], [2039, 534, 2091, 559], [2103, 541, 2118, 559], [2131, 534, 2256, 559], [1003, 568, 1045, 593], [1704, 575, 1711, 588], [360, 651, 374, 662], [977, 631, 989, 652], [1643, 631, 1655, 652], [337, 660, 358, 676], [977, 655, 989, 688], [1643, 655, 1655, 688], [1669, 659, 1706, 683], [972, 691, 1040, 731], [974, 739, 989, 759], [1640, 739, 1655, 759], [337, 782, 374, 807], [566, 788, 574, 798], [977, 768, 989, 807], [1643, 768, 1655, 807], [570, 802, 685, 825], [690, 811, 818, 855], [972, 810, 989, 847], [1003, 813, 1040, 838], [1638, 810, 1655, 847], [822, 854, 844, 871], [972, 849, 989, 862], [1638, 849, 1655, 862], [1669, 850, 1700, 869], [2228, 860, 2237, 869], [972, 870, 989, 909], [1638, 870, 1655, 909], [337, 913, 374, 937], [877, 907, 895, 945], [972, 911, 1040, 946], [1554, 917, 1572, 942], [1638, 911, 1655, 943], [2245, 919, 2255, 943], [397, 965, 507, 980], [892, 950, 903, 975], [973, 944, 1024, 960], [1063, 965, 1173, 980], [1568, 947, 1583, 986], [1728, 966, 1785, 980], [1791, 965, 1839, 980], [2251, 949, 2261, 974], [397, 995, 405, 998], [412, 991, 436, 1007], [443, 995, 451, 998], [459, 988, 507, 1003], [513, 987, 628, 1007], [900, 980, 911, 1005], [1063, 991, 1102, 1007], [1109, 995, 1117, 998], [1125, 988, 1173, 1003], [1179, 987, 1294, 1007], [1581, 992, 1588, 1001], [1728, 995, 1737, 998], [1744, 991, 1768, 1007], [1775, 995, 1783, 998], [1791, 987, 1960, 1007], [2257, 979, 2267, 1004], [572, 1012, 573, 1018], [903, 1010, 921, 1028], [1066, 1012, 1067, 1018], [1529, 1006, 1599, 1027], [1749, 1012, 1750, 1018], [2226, 1010, 2276, 1027], [558, 1024, 633, 1057], [781, 1024, 810, 1048], [1052, 1024, 1081, 1048], [1283, 1024, 1313, 1057], [1515, 1024, 1544, 1048], [1735, 1024, 1764, 1048], [1962, 1024, 2003, 1057], [2212, 1024, 2241, 1048], [609, 1055, 658, 1077], [662, 1054, 720, 1081], [1275, 1055, 1324, 1077], [1328, 1054, 1386, 1081], [1941, 1055, 1990, 1077], [1994, 1054, 2052, 1081], [417, 1111, 504, 1136], [519, 1112, 603, 1136], [618, 1111, 705, 1136], [717, 1111, 768, 1136], [781, 1118, 796, 1136], [808, 1111, 915, 1136], [1074, 1111, 1161, 1136], [1176, 1112, 1259, 1136], [1274, 1111, 1362, 1136], [1375, 1111, 1443, 1136], [1456, 1118, 1471, 1136], [1483, 1111, 1590, 1136], [1739, 1113, 1826, 1138], [1841, 1114, 1924, 1138], [1939, 1113, 2026, 1138], [2038, 1113, 2107, 1138], [2120, 1120, 2135, 1138], [2148, 1113, 2254, 1138], [977, 1208, 989, 1229], [1643, 1210, 1655, 1231], [977, 1232, 989, 1265], [1643, 1233, 1655, 1245], [977, 1279, 994, 1292], [1640, 1269, 1660, 1294], [977, 1295, 989, 1308], [1643, 1296, 1655, 1309], [974, 1316, 989, 1336], [1640, 1317, 1655, 1337], [977, 1345, 989, 1358], [1643, 1346, 1655, 1359], [977, 1359, 989, 1384], [1643, 1360, 1655, 1385], [974, 1387, 989, 1406], [1640, 1388, 1655, 1407], [972, 1408, 989, 1424], [1638, 1409, 1655, 1425], [972, 1426, 989, 1439], [1638, 1427, 1655, 1440], [972, 1448, 989, 1478], [1643, 1448, 1655, 1474], [974, 1475, 989, 1486], [1638, 1476, 1655, 1487], [972, 1489, 989, 1505], [1638, 1489, 1655, 1506], [973, 1508, 989, 1537], [1639, 1508, 1655, 1538], [1026, 1557, 1040, 1568], [1668, 1529, 1706, 1554], [1728, 1542, 1838, 1558], [397, 1568, 436, 1584], [443, 1572, 451, 1576], [459, 1566, 507, 1581], [513, 1565, 628, 1585], [1003, 1566, 1024, 1582], [1062, 1572, 1071, 1576], [1078, 1568, 1102, 1584], [1109, 1572, 1117, 1576], [1125, 1565, 1294, 1585], [1728, 1572, 1736, 1576], [1743, 1569, 1767, 1584], [1774, 1572, 1782, 1576], [1790, 1566, 1838, 1581], [1844, 1565, 1959, 1585], [397, 1601, 426, 1625], [630, 1601, 671, 1634], [887, 1596, 959, 1625], [1091, 1601, 1120, 1625], [1296, 1601, 1368, 1634], [1587, 1596, 1625, 1625], [1758, 1601, 1787, 1625], [1961, 1601, 2036, 1634], [2255, 1596, 2288, 1625], [609, 1632, 658, 1654], [662, 1631, 720, 1658], [1275, 1632, 1324, 1654], [1328, 1631, 1386, 1658], [1940, 1632, 2006, 1654], [2019, 1631, 2050, 1658], [376, 1746, 484, 1783], [501, 1746, 547, 1774], [567, 1746, 704, 1774], [718, 1746, 854, 1774], [868, 1750, 898, 1774], [912, 1746, 1064, 1783], [1076, 1755, 1095, 1774], [1099, 1746, 1199, 1774], [1212, 1746, 1248, 1774], [1259, 1746, 1309, 1774], [1322, 1746, 1421, 1774], [1435, 1747, 1531, 1774], [1545, 1746, 1721, 1783], [1734, 1746, 1831, 1774], [1843, 1746, 2048, 1783], [2063, 1746, 2111, 1774], [2124, 1746, 2174, 1774], [376, 1797, 516, 1825], [528, 1797, 645, 1834], [658, 1797, 694, 1825], [704, 1797, 850, 1834], [863, 1797, 1010, 1825], [438, 1906, 502, 1934], [513, 1906, 594, 1943], [607, 1906, 692, 1935], [706, 1915, 723, 1934], [734, 1906, 815, 1934], [826, 1906, 920, 1934], [938, 1906, 1028, 1935], [1040, 1906, 1090, 1934], [1102, 1906, 1188, 1943], [1199, 1906, 1340, 1934], [1352, 1906, 1468, 1934], [1481, 1915, 1498, 1934], [1509, 1915, 1582, 1943], [1594, 1906, 1676, 1943], [1688, 1906, 1814, 1934], [1825, 1906, 2000, 1934], [2012, 1906, 2062, 1934], [2073, 1915, 2128, 1934], [2140, 1906, 2176, 1934], [376, 1966, 431, 1985], [442, 1957, 613, 1994], [625, 1947, 704, 1995], [720, 1957, 820, 1985], [831, 1961, 913, 1985], [926, 1957, 989, 1985], [1002, 1957, 1153, 1994], [1166, 1957, 1196, 1985], [1209, 1957, 1419, 1994], [1431, 1957, 1529, 1991], [1543, 1957, 1644, 1986], [1655, 1957, 1797, 1986], [1808, 1957, 1920, 1985], [1921, 1957, 2115, 1994], [2127, 1957, 2175, 1985], [376, 2007, 511, 2035], [523, 2007, 594, 2036], [605, 2016, 621, 2035], [631, 2016, 713, 2035], [723, 2007, 866, 2035], [877, 2007, 1088, 2036], [1090, 2007, 1195, 2035], [1212, 2007, 1281, 2035], [1292, 2007, 1382, 2035], [1393, 2007, 1417, 2035], [1428, 2007, 1610, 2041], [1624, 2016, 1654, 2035], [1666, 2007, 1713, 2035], [1725, 2011, 1825, 2035], [1835, 2017, 1856, 2035], [1867, 2007, 1960, 2035], [1970, 2007, 2174, 2044], [375, 2058, 429, 2086], [444, 2058, 507, 2086], [519, 2058, 609, 2095], [621, 2062, 652, 2086], [665, 2058, 715, 2086], [727, 2058, 856, 2086], [867, 2058, 903, 2086], [913, 2058, 1039, 2086], [1041, 2058, 1103, 2086], [1113, 2058, 1163, 2086], [1176, 2058, 1245, 2086], [1257, 2058, 1365, 2086], [1378, 2056, 1416, 2086], [1433, 2058, 1462, 2086], [1472, 2056, 1501, 2086], [1513, 2058, 1568, 2086], [1582, 2067, 1599, 2086], [1610, 2058, 1692, 2095], [1705, 2058, 1833, 2086], [1845, 2058, 1881, 2086], [1891, 2058, 2017, 2086], [2019, 2058, 2095, 2086], [2107, 2062, 2175, 2086], [376, 2109, 412, 2137], [422, 2109, 544, 2146], [556, 2099, 636, 2147], [650, 2109, 676, 2137], [690, 2109, 872, 2146], [887, 2109, 945, 2137], [958, 2109, 1026, 2137], [1040, 2118, 1097, 2146], [1110, 2109, 1321, 2146], [1323, 2109, 1376, 2137], [1388, 2109, 1447, 2137], [1461, 2113, 1526, 2146], [1537, 2109, 1592, 2137], [1606, 2118, 1623, 2137], [1634, 2109, 1806, 2137], [1819, 2109, 1933, 2146], [1944, 2118, 1985, 2137], [1997, 2109, 2047, 2137], [2059, 2109, 2174, 2137], [377, 2160, 545, 2197], [562, 2160, 754, 2197], [768, 2160, 857, 2188], [869, 2160, 919, 2188], [931, 2160, 1057, 2188], [1069, 2160, 1105, 2188], [1113, 2169, 1176, 2188], [1179, 2160, 1235, 2188], [1248, 2158, 1277, 2188], [1289, 2160, 1315, 2188], [1327, 2160, 1409, 2197], [1421, 2160, 1470, 2188], [1482, 2164, 1549, 2188], [1560, 2160, 1596, 2188], [1605, 2160, 1782, 2197], [1795, 2160, 1844, 2188], [1856, 2160, 1993, 2197], [2004, 2160, 2040, 2188], [2049, 2160, 2098, 2188], [2110, 2160, 2173, 2188], [376, 2211, 514, 2239], [527, 2211, 571, 2246], [578, 2203, 615, 2253], [623, 2210, 682, 2239], [696, 2228, 722, 2229], [736, 2205, 797, 2249], [814, 2224, 842, 2233], [858, 2204, 915, 2239], [929, 2208, 1002, 2249], [1017, 2228, 1043, 2229], [1056, 2208, 1109, 2249], [1123, 2211, 1302, 2245], [1316, 2211, 1431, 2248], [1443, 2211, 1560, 2239], [1572, 2211, 1701, 2239], [1714, 2211, 1795, 2239], [1807, 2211, 1881, 2239], [1893, 2211, 2130, 2248], [2143, 2211, 2174, 2239], [375, 2270, 450, 2298], [462, 2261, 691, 2298], [708, 2261, 878, 2295], [892, 2261, 913, 2289], [925, 2261, 950, 2289], [963, 2261, 1011, 2289], [1022, 2261, 1089, 2289], [1101, 2261, 1173, 2289], [1186, 2270, 1202, 2289], [1214, 2270, 1285, 2298], [1297, 2261, 1378, 2298], [1389, 2261, 1501, 2289], [1501, 2261, 1562, 2289], [1571, 2261, 1699, 2289], [1712, 2261, 1812, 2289], [1824, 2270, 1878, 2289], [1888, 2261, 2039, 2298], [2051, 2261, 2174, 2289], [376, 2321, 431, 2340], [442, 2312, 568, 2349], [581, 2321, 597, 2340], [608, 2312, 709, 2340], [722, 2312, 863, 2349], [376, 2423, 457, 2453], [500, 2424, 720, 2453], [732, 2423, 967, 2461], [985, 2423, 1169, 2453], [1170, 2423, 1426, 2460], [376, 2504, 454, 2532], [470, 2512, 498, 2532], [501, 2507, 633, 2540], [646, 2503, 755, 2531], [771, 2503, 807, 2531], [821, 2503, 966, 2540], [981, 2503, 1031, 2531], [1046, 2503, 1116, 2531], [1130, 2504, 1178, 2531], [1193, 2503, 1313, 2531], [1328, 2512, 1369, 2531], [1385, 2512, 1402, 2531], [1417, 2503, 1510, 2531], [1526, 2503, 1562, 2531], [1573, 2503, 1729, 2540], [1745, 2503, 1827, 2531], [1840, 2503, 2095, 2531], [2120, 2504, 2174, 2531], [376, 2557, 433, 2581], [444, 2553, 494, 2581], [505, 2554, 553, 2581], [565, 2553, 683, 2581], [696, 2562, 736, 2581], [747, 2553, 833, 2581], [834, 2553, 1082, 2590], [1094, 2553, 1175, 2581], [1188, 2553, 1236, 2581], [1247, 2553, 1297, 2581], [1309, 2553, 1468, 2590], [1480, 2553, 1542, 2581], [1554, 2553, 1735, 2590], [1748, 2553, 1887, 2581], [1905, 2553, 2088, 2590], [2104, 2553, 2177, 2587], [375, 2604, 551, 2632], [567, 2604, 640, 2638], [653, 2604, 751, 2633], [766, 2604, 839, 2638], [852, 2604, 981, 2633], [996, 2604, 1057, 2638], [1073, 2604, 1128, 2632], [1141, 2605, 1196, 2632], [1211, 2604, 1282, 2638], [1299, 2604, 1379, 2632], [1391, 2604, 1503, 2632], [1515, 2613, 1561, 2633], [1563, 2604, 1657, 2641], [1668, 2604, 1729, 2632], [1742, 2604, 1821, 2632], [1834, 2604, 1920, 2641], [1931, 2608, 2009, 2641], [2023, 2604, 2173, 2641], [377, 2655, 492, 2683], [504, 2655, 683, 2692], [696, 2655, 732, 2683], [744, 2655, 859, 2683], [873, 2655, 905, 2683], [919, 2664, 1009, 2692], [1024, 2655, 1107, 2692], [1122, 2655, 1171, 2683], [1184, 2655, 1323, 2692], [1339, 2655, 1506, 2683], [1520, 2655, 1578, 2683], [1593, 2659, 1659, 2683], [1680, 2655, 1744, 2683], [1757, 2655, 1881, 2692], [1894, 2659, 2079, 2692], [2093, 2664, 2174, 2684], [376, 2706, 471, 2734], [482, 2706, 522, 2743], [534, 2706, 708, 2735], [720, 2706, 785, 2743], [798, 2706, 901, 2734], [913, 2706, 944, 2734], [956, 2706, 1005, 2734], [1016, 2715, 1108, 2743], [1120, 2705, 1169, 2742], [1182, 2705, 1219, 2740], [1237, 2712, 1258, 2736], [1278, 2699, 1379, 2744], [1393, 2700, 1457, 2744], [1472, 2710, 1502, 2734], [1515, 2706, 1677, 2734], [1689, 2706, 1904, 2734], [1917, 2715, 2061, 2743], [2073, 2715, 2113, 2734], [2125, 2706, 2174, 2734], [374, 2757, 538, 2786], [551, 2757, 644, 2794], [1256, 2935, 1295, 2964], [374, 270, 462, 298], [476, 270, 502, 299], [520, 270, 742, 299], [755, 270, 922, 298], [936, 270, 983, 298], [994, 270, 1042, 298], [1054, 270, 1211, 307], [1222, 270, 1435, 298], [1448, 270, 1564, 298], [1577, 279, 1617, 298], [1628, 270, 1807, 307], [1819, 270, 1894, 298], [1910, 271, 1967, 298], [1978, 270, 2026, 298], [2038, 270, 2173, 298], [376, 321, 487, 349], [499, 321, 616, 349], [630, 330, 667, 349], [679, 320, 710, 355], [725, 321, 845, 350], [857, 321, 893, 349], [902, 322, 954, 349], [968, 330, 1029, 349], [1042, 321, 1212, 358], [850, 397, 973, 424], [1118, 397, 1165, 424], [1254, 395, 1352, 430], [1433, 397, 1505, 424], [0, 0, 2550, 3300], [1577, 395, 1696, 430], [850, 487, 1033, 524], [1088, 487, 1192, 516], [1252, 487, 1356, 516], [1413, 486, 1520, 516], [1585, 487, 1689, 516], [850, 538, 1029, 566], [1085, 537, 1192, 567], [1253, 538, 1356, 567], [1413, 537, 1520, 567], [1586, 538, 1689, 567], [850, 589, 950, 618], [1085, 588, 1192, 618], [1249, 588, 1356, 618], [1413, 588, 1520, 618], [1582, 588, 1689, 618], [850, 640, 981, 669], [1085, 639, 1192, 669], [1253, 640, 1356, 669], [1417, 640, 1520, 669], [1586, 640, 1689, 669], [850, 691, 907, 718], [1088, 690, 1192, 719], [1252, 690, 1356, 719], [1413, 689, 1520, 719], [1582, 689, 1689, 719], [438, 847, 529, 875], [545, 847, 561, 876], [580, 847, 681, 876], [697, 851, 755, 875], [771, 847, 953, 875], [979, 848, 1013, 875], [1028, 847, 1159, 884], [1178, 856, 1210, 875], [1226, 847, 1374, 884], [1389, 847, 1439, 875], [1455, 847, 1657, 884], [1672, 847, 1767, 875], [1783, 848, 1830, 875], [1846, 847, 1966, 875], [1982, 847, 2064, 884], [2079, 847, 2175, 875], [376, 897, 589, 925], [602, 897, 770, 925], [783, 897, 852, 925], [864, 897, 949, 925], [961, 897, 1054, 925], [1066, 906, 1106, 925], [1117, 897, 1337, 934], [1352, 906, 1382, 925], [1397, 897, 1470, 925], [1482, 897, 1543, 925], [1556, 897, 1692, 925], [1704, 897, 1788, 925], [1801, 901, 1831, 925], [1843, 897, 1880, 925], [1893, 906, 1975, 925], [1989, 897, 2173, 934], [376, 948, 422, 976], [431, 948, 642, 976], [651, 948, 809, 985], [826, 949, 972, 977], [981, 948, 1028, 976], [1039, 948, 1167, 977], [1177, 948, 1289, 976], [1297, 957, 1403, 985], [1414, 952, 1443, 976], [1453, 948, 1490, 976], [1502, 957, 1538, 976], [1547, 948, 1712, 985], [1725, 948, 1858, 985], [1868, 948, 1961, 976], [1969, 948, 2173, 985], [375, 999, 453, 1027], [454, 1008, 494, 1027], [505, 999, 628, 1036], [639, 999, 709, 1027], [725, 999, 892, 1036], [903, 999, 950, 1027], [961, 999, 1206, 1036], [1218, 999, 1266, 1027], [1277, 999, 1382, 1027], [1394, 990, 1474, 1037], [1479, 999, 1609, 1036], [1621, 1008, 1703, 1027], [1705, 1003, 1758, 1027], [1768, 999, 1899, 1036], [1908, 999, 2001, 1027], [2010, 999, 2041, 1027], [2051, 999, 2178, 1036], [374, 1050, 446, 1078], [458, 1050, 507, 1078], [519, 1040, 599, 1088], [604, 1050, 737, 1087], [750, 1050, 887, 1087], [899, 1050, 1092, 1087], [1103, 1050, 1209, 1078], [1223, 1050, 1253, 1078], [1267, 1059, 1333, 1078], [1335, 1050, 1496, 1087], [376, 1164, 435, 1199], [488, 1164, 642, 1199], [659, 1164, 927, 1208], [942, 1164, 1021, 1199], [1034, 1164, 1300, 1208], [374, 1250, 410, 1277], [409, 1249, 556, 1277], [569, 1258, 636, 1278], [649, 1249, 759, 1277], [771, 1249, 910, 1286], [923, 1249, 1116, 1286], [1129, 1249, 1189, 1277], [1199, 1249, 1310, 1277], [1321, 1249, 1400, 1277], [1410, 1249, 1681, 1278], [1694, 1250, 1745, 1277], [1757, 1249, 1991, 1286], [2005, 1258, 2044, 1277], [2045, 1249, 2173, 1277], [377, 1299, 460, 1327], [473, 1299, 559, 1336], [570, 1299, 639, 1327], [651, 1299, 699, 1327], [711, 1299, 868, 1336], [880, 1290, 967, 1344], [981, 1308, 1056, 1336], [1068, 1303, 1204, 1336], [1206, 1299, 1279, 1327], [1292, 1299, 1323, 1327], [1336, 1299, 1512, 1336], [1523, 1299, 1585, 1327], [1598, 1308, 1652, 1327], [1663, 1299, 1800, 1327], [1811, 1299, 1989, 1327], [2000, 1303, 2030, 1327], [2042, 1299, 2173, 1336], [376, 1350, 509, 1378], [520, 1350, 658, 1387], [659, 1350, 816, 1387], [829, 1350, 951, 1379], [376, 1461, 455, 1491], [500, 1462, 609, 1499], [621, 1461, 788, 1499], [800, 1462, 940, 1499], [953, 1461, 1130, 1499], [1132, 1461, 1299, 1499], [376, 1541, 425, 1570], [426, 1541, 517, 1569], [529, 1541, 670, 1578], [683, 1541, 709, 1569], [721, 1541, 835, 1569], [848, 1545, 879, 1569], [892, 1541, 942, 1569], [955, 1541, 1065, 1569], [1078, 1541, 1219, 1578], [1231, 1541, 1267, 1569], [1277, 1541, 1378, 1578], [1391, 1541, 1563, 1578], [1577, 1541, 1630, 1569], [1642, 1541, 1716, 1570], [1728, 1541, 1778, 1569], [1791, 1541, 1872, 1570], [1884, 1541, 1947, 1569], [1958, 1550, 2006, 1570], [2019, 1541, 2088, 1569], [2100, 1541, 2174, 1570], [376, 1591, 462, 1619], [474, 1591, 510, 1619], [520, 1600, 557, 1619], [570, 1591, 753, 1628], [766, 1591, 924, 1619], [940, 1592, 1029, 1619], [1042, 1591, 1236, 1628], [1251, 1600, 1383, 1628], [1395, 1591, 1457, 1619], [1468, 1591, 1518, 1619], [1530, 1595, 1593, 1619], [1605, 1591, 1706, 1628], [1718, 1601, 1741, 1628], [1756, 1597, 1777, 1621], [1793, 1589, 1897, 1619], [1912, 1591, 1937, 1619], [1950, 1591, 2174, 1619], [375, 1642, 414, 1679], [428, 1642, 555, 1671], [567, 1642, 652, 1670], [665, 1642, 715, 1676], [730, 1651, 763, 1670], [776, 1642, 836, 1670], [847, 1642, 918, 1679], [931, 1652, 970, 1679], [987, 1655, 1015, 1664], [1030, 1646, 1093, 1679], [1106, 1642, 1147, 1670], [1160, 1642, 1184, 1670], [1198, 1642, 1351, 1671], [1368, 1642, 1429, 1670], [1442, 1642, 1599, 1679], [1610, 1642, 1747, 1679], [1758, 1642, 1908, 1670], [1921, 1652, 1944, 1679], [1956, 1642, 2044, 1679], [2052, 1642, 2114, 1679], [2125, 1642, 2173, 1670], [376, 1693, 461, 1730], [474, 1693, 592, 1721], [603, 1703, 653, 1730], [670, 1693, 739, 1721], [751, 1693, 887, 1730], [898, 1693, 922, 1721], [935, 1693, 1037, 1730], [1050, 1693, 1190, 1730], [1203, 1693, 1259, 1721], [1272, 1702, 1302, 1721], [1316, 1693, 1389, 1721], [1400, 1697, 1451, 1721], [1463, 1693, 1677, 1730], [1688, 1693, 1788, 1721], [1802, 1693, 1962, 1721], [1975, 1693, 2173, 1730], [376, 1753, 415, 1772], [427, 1744, 477, 1772], [488, 1744, 575, 1772], [587, 1744, 634, 1779], [645, 1753, 685, 1772], [697, 1744, 746, 1772], [757, 1744, 936, 1781], [949, 1744, 1061, 1781], [1075, 1753, 1123, 1772], [1135, 1744, 1231, 1772], [438, 1794, 595, 1832], [609, 1795, 674, 1824], [689, 1794, 885, 1832], [899, 1795, 1030, 1824], [1054, 1804, 1092, 1823], [1105, 1795, 1272, 1832], [1287, 1804, 1412, 1823], [1414, 1795, 1557, 1823], [1571, 1795, 1597, 1823], [1612, 1799, 1643, 1823], [1659, 1795, 1771, 1832], [1787, 1804, 1909, 1823], [1923, 1795, 1973, 1823], [1988, 1795, 2075, 1823], [2090, 1799, 2121, 1823], [2135, 1795, 2174, 1823], [376, 1845, 528, 1882], [543, 1854, 577, 1873], [591, 1854, 677, 1873], [690, 1845, 776, 1873], [789, 1854, 966, 1873], [979, 1845, 1180, 1873], [1199, 1845, 1304, 1874], [1317, 1845, 1402, 1873], [1415, 1845, 1598, 1879], [1614, 1854, 1631, 1873], [1643, 1845, 1754, 1873], [1768, 1845, 1892, 1873], [1906, 1849, 1937, 1873], [1949, 1845, 2086, 1882], [2099, 1845, 2174, 1873], [376, 1896, 531, 1933], [543, 1896, 608, 1924], [618, 1896, 642, 1924], [655, 1896, 702, 1924], [714, 1895, 1081, 1925], [1093, 1896, 1194, 1931], [1206, 1896, 1305, 1924], [1320, 1896, 1392, 1930], [1405, 1896, 1503, 1925], [1514, 1896, 1590, 1924], [1603, 1905, 1639, 1924], [1651, 1896, 1886, 1933], [1898, 1896, 1936, 1924], [1949, 1900, 1978, 1924], [1990, 1896, 2038, 1924], [2049, 1896, 2173, 1933], [376, 1947, 476, 1984], [486, 1947, 527, 1984], [540, 1947, 660, 1984], [931, 2029, 998, 2084], [1053, 2026, 1108, 2067], [1123, 2046, 1149, 2047], [1163, 2021, 1242, 2067], [1256, 2033, 1284, 2060], [1297, 2017, 1384, 2075], [1395, 2017, 1467, 2075], [1474, 2026, 1616, 2069], [2097, 2029, 2173, 2064], [1331, 2087, 1382, 2106], [1395, 2087, 1451, 2112], [374, 2145, 474, 2173], [487, 2143, 543, 2180], [548, 2161, 567, 2186], [583, 2145, 608, 2173], [621, 2145, 671, 2173], [683, 2145, 810, 2174], [822, 2145, 962, 2182], [374, 2379, 437, 2407], [439, 2379, 495, 2413], [509, 2379, 531, 2407], [543, 2379, 567, 2407], [581, 2379, 630, 2407], [642, 2383, 744, 2408], [755, 2379, 791, 2407], [800, 2379, 980, 2407], [994, 2379, 1030, 2407], [1040, 2379, 1112, 2419], [1129, 2379, 1186, 2407], [1198, 2379, 1234, 2407], [1248, 2379, 1408, 2416], [1423, 2379, 1512, 2416], [1523, 2379, 1596, 2407], [1609, 2388, 1688, 2407], [438, 2430, 499, 2458], [511, 2430, 656, 2467], [668, 2439, 686, 2458], [688, 2430, 759, 2458], [770, 2430, 832, 2458], [843, 2434, 917, 2458], [927, 2430, 958, 2458], [969, 2430, 1016, 2458], [1028, 2430, 1104, 2459], [1115, 2430, 1214, 2458], [1226, 2430, 1250, 2458], [1263, 2434, 1292, 2458], [1303, 2430, 1438, 2467], [1450, 2439, 1505, 2467], [1517, 2430, 1666, 2458], [1677, 2430, 1712, 2458], [1721, 2430, 1759, 2458], [1772, 2430, 1851, 2458], [1861, 2430, 1909, 2458], [1920, 2430, 2064, 2458], [2076, 2430, 2173, 2467], [376, 2490, 426, 2517], [440, 2480, 531, 2508], [543, 2480, 593, 2508], [606, 2480, 719, 2508], [732, 2484, 807, 2508], [819, 2489, 875, 2508], [886, 2480, 925, 2508], [936, 2480, 1051, 2517], [1063, 2480, 1245, 2517], [1259, 2489, 1290, 2508], [1304, 2489, 1321, 2508], [1332, 2480, 1434, 2508], [1449, 2477, 1490, 2518], [1505, 2477, 1639, 2518], [1651, 2489, 1709, 2508], [1710, 2480, 1784, 2508], [1796, 2480, 1925, 2508], [1937, 2480, 2074, 2517], [2084, 2480, 2120, 2508], [2131, 2480, 2179, 2508], [374, 2531, 447, 2559], [458, 2531, 640, 2568], [651, 2531, 770, 2559], [783, 2535, 878, 2559], [891, 2535, 922, 2559], [935, 2540, 1021, 2559], [1032, 2531, 1114, 2568], [1124, 2531, 1315, 2568], [1333, 2531, 1364, 2559], [1376, 2531, 1491, 2559], [1503, 2531, 1620, 2568], [1633, 2531, 1721, 2568], [1734, 2531, 1976, 2559], [1989, 2531, 2020, 2559], [2032, 2531, 2175, 2568], [375, 2582, 510, 2611], [521, 2582, 716, 2619], [727, 2582, 825, 2619], [838, 2582, 908, 2619], [921, 2591, 1028, 2619], [1039, 2582, 1069, 2610], [1080, 2582, 1200, 2610], [1213, 2582, 1248, 2610], [1257, 2582, 1379, 2619], [1393, 2582, 1481, 2611], [1493, 2582, 1541, 2610], [1552, 2586, 1611, 2610], [1622, 2582, 1657, 2610], [1666, 2582, 1714, 2610], [1725, 2582, 1820, 2619], [1832, 2582, 1948, 2619], [1962, 2582, 2043, 2611], [2057, 2582, 2174, 2610], [374, 2633, 531, 2661], [544, 2633, 574, 2661], [585, 2633, 729, 2670], [746, 2634, 769, 2661], [781, 2633, 881, 2661], [895, 2642, 989, 2667], [1002, 2633, 1156, 2667], [1170, 2637, 1199, 2661], [1210, 2633, 1345, 2670], [1357, 2633, 1435, 2670], [1447, 2633, 1547, 2661], [1560, 2633, 1595, 2661], [1604, 2633, 1652, 2661], [1664, 2633, 1804, 2670], [1818, 2642, 1848, 2661], [1862, 2633, 1947, 2670], [1959, 2633, 2087, 2670], [2099, 2633, 2173, 2661], [377, 2693, 393, 2712], [403, 2684, 508, 2721], [518, 2684, 697, 2721], [710, 2684, 745, 2712], [753, 2684, 862, 2721], [874, 2684, 964, 2721], [976, 2684, 1128, 2721], [1139, 2684, 1178, 2721], [1191, 2684, 1284, 2712], [1301, 2684, 1490, 2721], [1504, 2693, 1535, 2712], [1548, 2684, 1596, 2712], [1608, 2693, 1696, 2712], [1708, 2684, 1743, 2712], [1752, 2684, 1800, 2712], [1813, 2684, 1897, 2712], [1910, 2684, 1934, 2712], [1947, 2693, 2015, 2712], [2019, 2684, 2060, 2718], [2072, 2684, 2096, 2712], [2110, 2684, 2173, 2712], [377, 2734, 509, 2762], [521, 2738, 552, 2762], [564, 2734, 709, 2762], [722, 2734, 771, 2762], [783, 2734, 931, 2762], [943, 2734, 1044, 2771], [1057, 2734, 1095, 2762], [1109, 2734, 1194, 2762], [1206, 2738, 1237, 2762], [1249, 2734, 1299, 2762], [1311, 2734, 1460, 2762], [1472, 2744, 1523, 2771], [1539, 2734, 1681, 2771], [1693, 2734, 1778, 2762], [1790, 2738, 1851, 2763], [1863, 2734, 1949, 2771], [1961, 2734, 2111, 2771], [2124, 2734, 2174, 2762], [376, 2785, 453, 2814], [465, 2785, 556, 2813], [557, 2785, 665, 2820], [1256, 2935, 1293, 2964], [438, 242, 467, 270], [479, 242, 578, 270], [590, 242, 664, 270], [676, 246, 705, 270], [716, 242, 766, 270], [778, 242, 857, 271], [868, 242, 1050, 279], [1060, 242, 1176, 270], [1189, 242, 1252, 270], [1263, 242, 1286, 270], [1297, 242, 1420, 271], [1433, 242, 1482, 270], [1496, 242, 1581, 279], [1592, 242, 1628, 270], [1637, 242, 1687, 270], [1698, 242, 1850, 271], [1862, 242, 1981, 270], [1993, 242, 2175, 279], [374, 292, 453, 321], [455, 292, 554, 320], [565, 292, 721, 329], [735, 292, 823, 329], [835, 292, 998, 320], [1010, 292, 1150, 321], [1162, 292, 1364, 329], [1376, 292, 1484, 329], [1501, 292, 1623, 326], [1637, 292, 1677, 320], [1690, 292, 1765, 320], [1776, 292, 1973, 329], [1987, 301, 2036, 320], [2047, 292, 2175, 329], [376, 343, 568, 380], [584, 352, 616, 371], [631, 344, 685, 371], [699, 343, 897, 380], [912, 343, 1019, 372], [1033, 343, 1083, 371], [1098, 343, 1200, 380], [1213, 343, 1393, 380], [1408, 343, 1605, 380], [1629, 344, 1654, 371], [1668, 343, 1694, 371], [1709, 343, 1796, 377], [1813, 343, 1938, 380], [1955, 343, 2018, 371], [2031, 343, 2081, 371], [2096, 343, 2175, 372], [375, 394, 551, 431], [561, 394, 637, 429], [649, 394, 721, 422], [733, 398, 783, 422], [794, 394, 929, 422], [941, 394, 1012, 423], [1022, 394, 1070, 422], [1081, 385, 1168, 438], [1181, 394, 1357, 431], [1365, 394, 1438, 422], [1450, 394, 1480, 422], [1491, 394, 1547, 422], [1558, 403, 1653, 431], [1670, 394, 1760, 423], [1772, 394, 1888, 422], [1903, 394, 1964, 428], [1978, 394, 2173, 422], [375, 451, 515, 480], [529, 451, 614, 479], [627, 451, 824, 488], [838, 451, 879, 488], [893, 451, 1018, 488], [1032, 451, 1082, 479], [1096, 451, 1175, 480], [1190, 451, 1343, 488], [1357, 460, 1389, 479], [1403, 450, 1556, 488], [1569, 451, 1625, 480], [1640, 451, 1698, 479], [1712, 451, 1762, 479], [1776, 442, 1855, 496], [1850, 451, 1959, 496], [1974, 451, 2127, 488], [2141, 460, 2173, 479], [376, 501, 572, 539], [583, 502, 647, 531], [662, 502, 731, 530], [745, 502, 865, 539], [878, 511, 964, 530], [967, 502, 1071, 530], [1082, 502, 1130, 530], [1143, 502, 1202, 530], [1214, 502, 1274, 530], [1286, 502, 1426, 539], [1439, 503, 1491, 530], [1503, 502, 1653, 539], [1666, 502, 1740, 530], [1752, 511, 1920, 539], [1922, 502, 1979, 530], [1988, 502, 2036, 530], [2048, 502, 2173, 530], [376, 553, 513, 590], [531, 551, 612, 593], [633, 553, 794, 590], [813, 562, 851, 581], [868, 552, 899, 587], [919, 562, 1016, 587], [1036, 553, 1172, 582], [1190, 553, 1240, 581], [1259, 553, 1443, 590], [1462, 544, 1656, 597], [1673, 553, 1731, 581], [1749, 553, 1781, 581], [1797, 553, 1959, 590], [1975, 544, 2061, 596], [2068, 562, 2177, 587], [375, 604, 512, 641], [523, 613, 601, 632], [615, 604, 672, 632], [685, 604, 822, 632], [836, 604, 1074, 641], [438, 655, 536, 683], [548, 655, 628, 692], [630, 655, 786, 692], [798, 655, 885, 692], [898, 655, 1040, 692], [1052, 656, 1104, 683], [1117, 655, 1142, 683], [1155, 655, 1305, 692], [1317, 655, 1467, 692], [1479, 655, 1526, 683], [1537, 655, 1649, 683], [1661, 655, 1774, 692], [1787, 655, 1944, 692], [1960, 655, 2033, 689], [2047, 655, 2077, 683], [2090, 664, 2173, 683], [377, 705, 502, 742], [516, 705, 700, 742], [713, 705, 845, 742], [857, 714, 915, 733], [926, 705, 1061, 742], [1072, 705, 1168, 733], [1179, 705, 1297, 739], [1312, 705, 1370, 733], [1383, 705, 1414, 733], [1426, 705, 1488, 733], [1498, 705, 1553, 733], [1565, 705, 1645, 733], [1656, 705, 1781, 733], [1792, 705, 1834, 742], [1847, 714, 1934, 733], [1947, 705, 2068, 733], [2081, 705, 2112, 733], [2124, 705, 2174, 733], [375, 760, 440, 793], [454, 756, 513, 790], [526, 756, 587, 790], [604, 756, 674, 784], [687, 756, 711, 784], [725, 756, 866, 793], [879, 760, 940, 784], [952, 765, 991, 784], [1003, 756, 1086, 784], [1098, 756, 1196, 793], [1199, 756, 1283, 784], [1294, 760, 1411, 793], [1423, 765, 1439, 784], [1451, 756, 1585, 793], [1589, 756, 1756, 790], [1770, 756, 1826, 784], [1838, 756, 1889, 784], [1891, 765, 1964, 784], [1975, 756, 2068, 784], [2079, 756, 2173, 784], [376, 811, 406, 835], [418, 807, 468, 835], [480, 811, 624, 835], [635, 807, 777, 835], [788, 807, 829, 844], [841, 807, 890, 835], [902, 798, 989, 851], [995, 816, 1102, 835], [1119, 807, 1290, 841], [1303, 807, 1437, 835], [1449, 807, 1587, 835], [1600, 811, 1631, 835], [1642, 807, 1776, 844], [1788, 807, 1952, 844], [1954, 807, 2113, 844], [2126, 816, 2174, 835], [377, 858, 441, 886], [453, 858, 620, 895], [437, 908, 643, 946], [655, 908, 822, 946], [834, 908, 1057, 946], [1075, 909, 1235, 946], [1246, 909, 1335, 946], [1347, 909, 1396, 937], [1409, 909, 1590, 946], [1603, 899, 1690, 953], [1695, 918, 1795, 937], [1805, 909, 1930, 937], [1943, 913, 1974, 937], [1987, 909, 2107, 946], [992, 1008, 1059, 1062], [1113, 1005, 1169, 1046], [1184, 1025, 1210, 1026], [1223, 999, 1303, 1046], [1317, 1012, 1345, 1039], [1358, 998, 1443, 1052], [1441, 999, 1555, 1052], [2097, 1008, 2173, 1043], [376, 1122, 433, 1149], [445, 1121, 521, 1156], [534, 1121, 558, 1149], [571, 1121, 693, 1158], [704, 1121, 755, 1149], [767, 1121, 814, 1149], [826, 1112, 1090, 1166], [1101, 1121, 1245, 1158], [1259, 1121, 1314, 1149], [1326, 1121, 1419, 1149], [1432, 1130, 1487, 1149], [1497, 1121, 1534, 1149], [1547, 1121, 1669, 1158], [1682, 1121, 1784, 1149], [1796, 1121, 1835, 1158], [1848, 1121, 1987, 1158], [2000, 1121, 2047, 1149], [2060, 1121, 2175, 1149], [375, 1181, 449, 1209], [460, 1176, 608, 1209], [621, 1172, 774, 1200], [788, 1172, 888, 1200], [905, 1173, 956, 1200], [969, 1172, 1051, 1200], [1064, 1172, 1140, 1207], [1151, 1172, 1248, 1201], [1261, 1172, 1307, 1200], [1318, 1172, 1365, 1200], [1377, 1172, 1481, 1200], [1491, 1182, 1512, 1208], [1526, 1185, 1554, 1194], [1570, 1182, 1587, 1208], [1602, 1185, 1630, 1194], [1648, 1172, 1661, 1200], [1676, 1172, 1787, 1207], [1798, 1172, 1822, 1200], [1835, 1181, 1954, 1200], [1957, 1172, 2017, 1200], [2027, 1172, 2178, 1209], [376, 1223, 423, 1251], [434, 1223, 484, 1251], [495, 1223, 654, 1260], [667, 1223, 812, 1251], [824, 1223, 860, 1251], [870, 1223, 1054, 1260], [439, 1325, 455, 1341], [479, 1315, 630, 1343], [642, 1315, 772, 1352], [785, 1314, 812, 1352], [826, 1315, 920, 1350], [439, 1393, 455, 1409], [479, 1383, 542, 1411], [554, 1383, 859, 1420], [871, 1383, 984, 1412], [995, 1383, 1089, 1411], [1101, 1392, 1140, 1411], [1154, 1383, 1328, 1420], [1340, 1383, 1522, 1420], [1536, 1382, 1564, 1420], [1578, 1383, 1672, 1418], [439, 1460, 455, 1476], [479, 1450, 541, 1478], [554, 1450, 630, 1487], [641, 1451, 790, 1487], [802, 1450, 923, 1478], [935, 1450, 970, 1478], [980, 1450, 1138, 1479], [1149, 1451, 1177, 1478], [1195, 1450, 1268, 1484], [1282, 1450, 1381, 1478], [1393, 1450, 1512, 1478], [1526, 1459, 1562, 1478], [1574, 1450, 1786, 1478], [1799, 1459, 1926, 1487], [1927, 1450, 1988, 1478], [2002, 1450, 2071, 1487], [2082, 1450, 2130, 1478], [2143, 1449, 2173, 1484], [479, 1510, 566, 1529], [578, 1505, 659, 1538], [671, 1501, 750, 1529], [762, 1501, 811, 1529], [823, 1501, 950, 1529], [962, 1501, 1097, 1538], [1109, 1505, 1252, 1538], [1266, 1501, 1332, 1529], [1346, 1505, 1397, 1529], [1408, 1501, 1560, 1538], [1572, 1501, 1621, 1529], [1632, 1510, 1687, 1529], [1698, 1501, 1734, 1529], [1744, 1510, 1760, 1529], [1776, 1501, 1889, 1529], [1902, 1510, 1977, 1538], [1989, 1505, 2131, 1538], [439, 1578, 455, 1594], [479, 1568, 783, 1597], [796, 1568, 919, 1596], [932, 1568, 1052, 1605], [1064, 1572, 1094, 1596], [1107, 1568, 1154, 1596], [1168, 1569, 1220, 1596], [1234, 1567, 1262, 1605], [1276, 1568, 1379, 1603], [439, 1646, 455, 1662], [479, 1636, 624, 1665], [637, 1636, 758, 1673], [771, 1636, 904, 1673], [916, 1636, 1039, 1664], [1052, 1635, 1080, 1673], [1094, 1636, 1197, 1671], [439, 1713, 455, 1729], [479, 1703, 667, 1740], [669, 1707, 728, 1732], [741, 1703, 769, 1731], [779, 1703, 973, 1740], [985, 1703, 1107, 1731], [1120, 1702, 1148, 1740], [1162, 1703, 1265, 1738], [439, 1781, 455, 1797], [479, 1771, 590, 1808], [603, 1771, 726, 1799], [739, 1771, 884, 1806], [886, 1770, 939, 1808], [952, 1771, 1046, 1806], [439, 1848, 455, 1864], [479, 1838, 543, 1866], [558, 1838, 729, 1866], [742, 1838, 814, 1867], [830, 1838, 983, 1875], [996, 1838, 1038, 1875], [1053, 1838, 1203, 1867], [1219, 1838, 1277, 1866], [1292, 1838, 1352, 1866], [1369, 1838, 1442, 1872], [1459, 1838, 1561, 1867], [1576, 1838, 1677, 1867], [1693, 1838, 1743, 1866], [1756, 1838, 1955, 1875], [1969, 1838, 2110, 1867], [2124, 1838, 2174, 1866], [479, 1889, 594, 1917], [605, 1889, 764, 1926], [776, 1889, 992, 1917], [1004, 1889, 1059, 1917], [1071, 1889, 1119, 1917], [1130, 1889, 1295, 1917], [1305, 1889, 1374, 1918], [1385, 1889, 1521, 1926], [1531, 1898, 1586, 1917], [1588, 1898, 1629, 1917], [1639, 1889, 1712, 1926], [1726, 1889, 1781, 1917], [1793, 1889, 1858, 1917], [1871, 1889, 1983, 1926], [1996, 1898, 2032, 1917], [2043, 1889, 2174, 1917], [479, 1940, 646, 1968], [658, 1940, 729, 1968], [741, 1940, 843, 1968], [845, 1940, 907, 1968], [920, 1940, 1004, 1969], [1017, 1949, 1033, 1968], [1045, 1940, 1296, 1969], [1308, 1940, 1428, 1969], [1440, 1940, 1476, 1968], [1485, 1940, 1605, 1968], [376, 2033, 410, 2060], [423, 2032, 577, 2060], [591, 2032, 733, 2069], [749, 2032, 1060, 2069], [1076, 2032, 1134, 2060], [1149, 2032, 1246, 2060], [1248, 2033, 1326, 2061], [1328, 2041, 1395, 2060], [1398, 2032, 1479, 2060], [1494, 2032, 1658, 2060], [1673, 2032, 1852, 2069], [1868, 2036, 1998, 2069], [2012, 2032, 2173, 2069], [375, 2083, 482, 2111], [498, 2092, 529, 2111], [546, 2083, 646, 2111], [660, 2083, 709, 2111], [723, 2083, 773, 2111], [786, 2083, 861, 2111], [874, 2083, 1040, 2120], [1055, 2087, 1220, 2120], [1244, 2083, 1296, 2111], [1312, 2083, 1474, 2120], [1487, 2087, 1671, 2120], [1687, 2092, 1767, 2112], [1783, 2087, 1828, 2111], [1843, 2092, 1875, 2111], [1889, 2083, 2128, 2111], [2143, 2083, 2174, 2111], [376, 2134, 452, 2162], [463, 2134, 702, 2171], [714, 2143, 823, 2171], [835, 2143, 869, 2162], [880, 2134, 984, 2171], [997, 2134, 1285, 2171], [1299, 2138, 1408, 2171], [1419, 2134, 1467, 2162], [1478, 2134, 1631, 2162], [1643, 2134, 1776, 2171], [1788, 2134, 1846, 2162], [1859, 2134, 2177, 2171], [374, 2184, 473, 2212], [486, 2193, 532, 2212], [544, 2188, 708, 2221], [719, 2184, 789, 2212], [805, 2185, 862, 2212], [873, 2184, 1148, 2213], [1159, 2193, 1186, 2212], [1189, 2184, 1291, 2212], [1302, 2184, 1374, 2212], [1386, 2184, 1434, 2212], [1448, 2184, 1567, 2212], [1580, 2184, 1651, 2212], [1663, 2184, 1743, 2212], [1756, 2184, 1914, 2221], [1924, 2188, 2102, 2221], [2118, 2184, 2177, 2218], [374, 2235, 549, 2272], [565, 2235, 591, 2269], [608, 2235, 666, 2263], [679, 2235, 729, 2263], [743, 2235, 867, 2263], [880, 2235, 954, 2264], [967, 2235, 1169, 2263], [1184, 2235, 1244, 2269], [1258, 2235, 1434, 2272], [1446, 2235, 1489, 2269], [1503, 2235, 1646, 2264], [1658, 2235, 1708, 2263], [1721, 2235, 1909, 2263], [1922, 2235, 2044, 2263], [2056, 2235, 2108, 2263], [2121, 2239, 2175, 2263], [376, 2295, 526, 2323], [541, 2290, 572, 2314], [587, 2286, 637, 2314], [652, 2286, 772, 2314], [789, 2286, 923, 2314], [937, 2286, 1044, 2315], [1059, 2286, 1182, 2323], [1198, 2295, 1323, 2314], [1325, 2286, 1497, 2323], [1512, 2286, 1681, 2314], [1696, 2286, 1732, 2314], [1748, 2280, 1852, 2321], [1869, 2286, 2020, 2314], [2035, 2286, 2108, 2323], [2124, 2286, 2174, 2314], [375, 2337, 484, 2365], [498, 2337, 546, 2365], [559, 2337, 609, 2365], [623, 2337, 705, 2365], [719, 2337, 842, 2365], [856, 2346, 905, 2365], [918, 2337, 1067, 2374], [1088, 2338, 1146, 2365], [1159, 2337, 1371, 2374], [1385, 2346, 1433, 2366], [1446, 2337, 1553, 2366], [1568, 2337, 1618, 2365], [1631, 2337, 1930, 2365], [1945, 2337, 1976, 2365], [1990, 2337, 2174, 2366], [377, 2388, 434, 2416], [452, 2388, 535, 2416], [554, 2388, 628, 2422], [647, 2388, 751, 2425], [768, 2388, 832, 2416], [850, 2392, 980, 2416], [996, 2388, 1046, 2416], [1063, 2388, 1218, 2425], [1235, 2392, 1390, 2416], [1408, 2388, 1444, 2416], [1458, 2388, 1508, 2416], [1525, 2388, 1692, 2425], [1709, 2388, 1865, 2416], [1883, 2388, 1941, 2416], [1959, 2388, 2107, 2425], [2124, 2388, 2174, 2416], [375, 2443, 544, 2476], [556, 2439, 703, 2476], [718, 2443, 848, 2476], [862, 2439, 925, 2467], [937, 2439, 1093, 2476], [1107, 2439, 1200, 2467], [1212, 2439, 1425, 2476], [1438, 2439, 1470, 2467], [1483, 2439, 1533, 2467], [1547, 2439, 1760, 2476], [1782, 2432, 1853, 2467], [1874, 2452, 1902, 2461], [1923, 2431, 2038, 2489], [2049, 2432, 2172, 2467], [688, 2493, 696, 2506], [377, 2501, 486, 2535], [510, 2501, 631, 2535], [650, 2506, 716, 2526], [741, 2501, 820, 2535], [838, 2507, 851, 2535], [874, 2500, 992, 2535], [1017, 2501, 1055, 2535], [1072, 2520, 1100, 2529], [1118, 2507, 1142, 2535], [493, 2531, 497, 2543], [652, 2527, 729, 2549], [859, 2531, 863, 2543], [977, 2530, 1004, 2549], [438, 2558, 501, 2586], [513, 2558, 629, 2595], [641, 2558, 717, 2586], [729, 2558, 760, 2586], [772, 2558, 822, 2586], [834, 2558, 1035, 2595], [1049, 2567, 1097, 2586], [1109, 2558, 1268, 2595], [1280, 2558, 1311, 2586], [1323, 2558, 1486, 2595], [1498, 2559, 1520, 2586], [1533, 2567, 1565, 2586], [1577, 2558, 1685, 2595], [1697, 2558, 1746, 2587], [1762, 2559, 1803, 2586], [1816, 2562, 1873, 2586], [1884, 2558, 1934, 2586], [1946, 2558, 2039, 2586], [2050, 2558, 2146, 2586], [2158, 2567, 2175, 2586], [374, 2609, 489, 2646], [502, 2609, 538, 2637], [550, 2609, 713, 2643], [728, 2609, 872, 2637], [883, 2609, 973, 2637], [987, 2609, 1023, 2637], [1033, 2609, 1121, 2637], [1134, 2618, 1214, 2638], [1227, 2609, 1406, 2637], [1420, 2609, 1468, 2637], [1480, 2609, 1557, 2637], [1569, 2609, 1679, 2646], [1698, 2609, 1789, 2637], [1802, 2609, 1821, 2637], [1835, 2609, 1920, 2646], [1934, 2609, 2042, 2637], [2055, 2618, 2074, 2637], [2077, 2609, 2177, 2643], [374, 2659, 463, 2687], [475, 2659, 523, 2687], [536, 2659, 622, 2696], [635, 2659, 748, 2696], [762, 2668, 809, 2687], [823, 2659, 905, 2687], [907, 2659, 968, 2687], [979, 2659, 1085, 2696], [1098, 2659, 1145, 2688], [1162, 2659, 1213, 2687], [1224, 2659, 1280, 2694], [1291, 2659, 1419, 2687], [1432, 2659, 1545, 2696], [1557, 2659, 1632, 2687], [1644, 2659, 1691, 2687], [1705, 2668, 1786, 2687], [1798, 2659, 1870, 2687], [1883, 2659, 1939, 2687], [1950, 2663, 2128, 2696], [2141, 2659, 2177, 2687], [376, 2710, 469, 2738], [486, 2710, 582, 2738], [594, 2719, 655, 2738], [668, 2710, 844, 2738], [855, 2710, 944, 2747], [956, 2710, 1099, 2738], [1113, 2711, 1239, 2739], [1252, 2710, 1396, 2738], [1256, 2935, 1294, 2964], [374, 270, 466, 298], [481, 270, 509, 298], [533, 273, 620, 306], [635, 273, 668, 298], [679, 273, 757, 298], [771, 273, 825, 298], [838, 277, 1003, 306], [1018, 273, 1062, 298], [1074, 273, 1143, 298], [1156, 277, 1209, 298], [1221, 273, 1321, 306], [1344, 273, 1370, 298], [1385, 276, 1410, 298], [1425, 273, 1557, 298], [1572, 273, 1629, 298], [1643, 273, 1711, 298], [1724, 273, 1802, 298], [1816, 281, 1872, 298], [1887, 277, 1935, 298], [1948, 273, 2059, 306], [2072, 273, 2116, 298], [2129, 273, 2174, 298], [376, 319, 475, 352], [493, 319, 634, 345], [647, 319, 701, 344], [712, 319, 825, 352], [838, 319, 1006, 352], [1017, 323, 1045, 344], [1057, 319, 1186, 352], [1198, 319, 1318, 344], [1330, 319, 1384, 344], [1395, 319, 1603, 352], [1616, 319, 1821, 352], [1834, 319, 1926, 344], [1939, 319, 2006, 344], [2017, 327, 2081, 344], [2093, 327, 2173, 344], [376, 366, 428, 391], [439, 366, 484, 391], [495, 366, 631, 391], [642, 366, 775, 391], [790, 366, 848, 392], [860, 366, 884, 392], [895, 367, 1002, 399], [1011, 366, 1089, 391], [1100, 369, 1159, 391], [1162, 366, 1242, 391], [1252, 366, 1334, 391], [1344, 374, 1375, 391], [1384, 366, 1466, 391], [1477, 366, 1522, 391], [1533, 366, 1669, 391], [1680, 365, 1796, 391], [1807, 365, 1839, 391], [1847, 366, 1938, 399], [1948, 366, 2044, 399], [2058, 367, 2174, 391], [375, 416, 541, 446], [553, 413, 619, 438], [629, 413, 702, 446], [712, 412, 748, 446], [759, 412, 878, 446], [889, 421, 904, 438], [914, 412, 1027, 438], [1038, 413, 1115, 438], [1126, 413, 1197, 438], [1208, 421, 1223, 438], [1233, 413, 1347, 438], [1358, 412, 1526, 438], [1537, 413, 1602, 438], [1612, 421, 1691, 438], [1702, 421, 1770, 446], [1772, 413, 1818, 438], [1830, 413, 1873, 438], [1884, 413, 1998, 446], [2008, 413, 2081, 446], [2092, 413, 2177, 443], [376, 459, 435, 484], [446, 459, 597, 492], [608, 467, 624, 484], [634, 467, 694, 484], [694, 459, 836, 484], [848, 459, 932, 484], [761, 531, 863, 567], [995, 530, 1145, 559], [1198, 530, 1327, 567], [1378, 530, 1506, 558], [1558, 530, 1620, 559], [1633, 530, 1662, 559], [1675, 531, 1789, 567], [760, 622, 944, 657], [1045, 622, 1095, 651], [1237, 622, 1285, 651], [1428, 626, 1456, 650], [1659, 626, 1687, 650], [762, 673, 854, 710], [1035, 673, 1104, 702], [1248, 677, 1276, 701], [1428, 677, 1456, 701], [1659, 677, 1687, 701], [761, 723, 897, 751], [1056, 727, 1084, 751], [1256, 723, 1267, 751], [1428, 727, 1456, 751], [1659, 727, 1687, 751], [761, 774, 896, 811], [1056, 778, 1084, 802], [1248, 778, 1276, 802], [1428, 773, 1456, 803], [1659, 778, 1687, 802], [761, 829, 821, 853], [1056, 829, 1084, 853], [1248, 829, 1276, 853], [1428, 829, 1456, 853], [1648, 825, 1694, 854], [761, 876, 860, 904], [1035, 876, 1104, 905], [1248, 880, 1276, 904], [1428, 875, 1456, 905], [1659, 880, 1687, 904], [761, 931, 887, 955], [1056, 931, 1084, 955], [1248, 931, 1276, 955], [1428, 926, 1456, 956], [1648, 927, 1698, 956], [760, 977, 905, 1014], [1056, 981, 1084, 1005], [1252, 977, 1271, 1005], [1428, 976, 1456, 1006], [1659, 981, 1687, 1005], [438, 1131, 548, 1159], [563, 1131, 611, 1159], [624, 1131, 674, 1159], [686, 1131, 921, 1168], [933, 1135, 1102, 1168], [1116, 1130, 1136, 1160], [1151, 1140, 1231, 1160], [1245, 1131, 1342, 1159], [1355, 1131, 1396, 1168], [1410, 1131, 1610, 1168], [1624, 1131, 1674, 1159], [1688, 1131, 1803, 1168], [1817, 1131, 1853, 1159], [1864, 1131, 1914, 1159], [1927, 1131, 2177, 1165], [376, 1182, 533, 1210], [544, 1182, 633, 1219], [645, 1182, 817, 1219], [829, 1181, 1098, 1219], [1110, 1181, 1205, 1211], [1218, 1182, 1336, 1217], [1352, 1182, 1404, 1216], [1421, 1182, 1514, 1211], [1526, 1182, 1550, 1210], [1564, 1182, 1684, 1210], [1698, 1191, 1728, 1210], [1412, 1265, 1468, 1306], [1484, 1285, 1510, 1286], [1525, 1262, 1602, 1307], [929, 1293, 1089, 1334], [1101, 1306, 1133, 1333], [1144, 1293, 1199, 1334], [1262, 1296, 1298, 1325], [1308, 1295, 1392, 1335], [1422, 1322, 1477, 1363], [1492, 1342, 1518, 1343], [1532, 1319, 1593, 1364], [1613, 1320, 1617, 1332], [374, 1408, 474, 1436], [486, 1418, 509, 1445], [521, 1408, 546, 1436], [559, 1408, 609, 1436], [620, 1408, 748, 1445], [760, 1408, 868, 1445], [882, 1418, 921, 1445], [936, 1408, 972, 1436], [986, 1408, 1074, 1445], [1086, 1408, 1207, 1442], [1222, 1408, 1279, 1436], [1292, 1408, 1330, 1436], [1344, 1408, 1394, 1436], [1404, 1408, 1649, 1436], [438, 1460, 477, 1487], [490, 1468, 629, 1496], [641, 1459, 689, 1487], [703, 1459, 874, 1496], [887, 1468, 914, 1487], [917, 1468, 978, 1487], [979, 1459, 1050, 1487], [1061, 1459, 1097, 1487], [1106, 1459, 1187, 1487], [1198, 1459, 1245, 1487], [1256, 1459, 1329, 1487], [1341, 1459, 1439, 1496], [1453, 1459, 1509, 1487], [1521, 1468, 1655, 1487], [1657, 1459, 1724, 1487], [1737, 1459, 1829, 1488], [1842, 1468, 1878, 1487], [1879, 1459, 2029, 1488], [2042, 1459, 2173, 1487], [376, 1513, 406, 1537], [422, 1509, 472, 1537], [487, 1509, 615, 1546], [630, 1509, 782, 1546], [797, 1509, 886, 1537], [902, 1509, 938, 1537], [951, 1509, 1000, 1537], [1016, 1513, 1135, 1537], [1150, 1509, 1285, 1537], [1300, 1513, 1329, 1537], [1344, 1509, 1420, 1537], [1435, 1509, 1575, 1537], [1589, 1509, 1720, 1546], [1735, 1509, 1811, 1537], [1826, 1509, 1996, 1537], [2022, 1509, 2086, 1537], [2102, 1509, 2175, 1546], [376, 1560, 533, 1597], [545, 1564, 574, 1588], [587, 1560, 644, 1588], [656, 1560, 819, 1597], [831, 1560, 856, 1588], [869, 1560, 917, 1588], [930, 1560, 1051, 1588], [1063, 1560, 1099, 1588], [1108, 1560, 1253, 1589], [1267, 1560, 1324, 1588], [1336, 1560, 1402, 1594], [1416, 1560, 1514, 1588], [1526, 1560, 1551, 1588], [1564, 1560, 1777, 1589], [1790, 1560, 1847, 1588], [1859, 1560, 1925, 1588], [1939, 1560, 2048, 1597], [2060, 1564, 2173, 1588], [377, 1620, 413, 1639], [423, 1615, 507, 1639], [518, 1611, 655, 1645], [669, 1611, 724, 1639], [737, 1620, 770, 1639], [781, 1620, 826, 1640], [834, 1611, 895, 1648], [906, 1620, 1039, 1639], [1050, 1611, 1098, 1639], [1109, 1611, 1179, 1639], [1190, 1611, 1324, 1648], [1335, 1615, 1365, 1639], [1376, 1611, 1472, 1639], [1489, 1611, 1550, 1639], [1561, 1611, 1683, 1648], [1695, 1611, 1840, 1648], [1851, 1611, 1936, 1639], [1948, 1620, 2008, 1640], [2020, 1611, 2173, 1639], [375, 1662, 415, 1699], [426, 1662, 555, 1699], [568, 1662, 607, 1690], [619, 1662, 757, 1690], [770, 1662, 818, 1690], [830, 1671, 846, 1690], [858, 1671, 929, 1699], [941, 1662, 1022, 1699], [1034, 1662, 1146, 1690], [1146, 1671, 1190, 1690], [1192, 1662, 1368, 1690], [1382, 1662, 1440, 1690], [1452, 1662, 1554, 1699], [1566, 1662, 1615, 1690], [1627, 1662, 1787, 1690], [1799, 1662, 1887, 1691], [1898, 1662, 1934, 1690], [1943, 1662, 2025, 1690], [2038, 1662, 2085, 1690], [2102, 1662, 2172, 1690], [375, 1713, 508, 1750], [509, 1713, 590, 1741], [600, 1713, 679, 1750], [694, 1713, 798, 1741], [810, 1713, 841, 1741], [853, 1713, 974, 1750], [992, 1713, 1098, 1742], [1115, 1714, 1204, 1741], [1215, 1713, 1297, 1741], [1309, 1713, 1358, 1741], [1370, 1713, 1528, 1750], [1541, 1713, 1746, 1742], [1761, 1722, 1809, 1741], [1821, 1713, 1856, 1741], [1865, 1713, 2030, 1742], [439, 1804, 455, 1820], [479, 1794, 627, 1823], [640, 1794, 765, 1822], [779, 1794, 837, 1822], [849, 1794, 1160, 1823], [1173, 1794, 1297, 1822], [1311, 1803, 1360, 1822], [1371, 1794, 1483, 1822], [1485, 1794, 1547, 1822], [1560, 1794, 1737, 1831], [1749, 1794, 1799, 1822], [1812, 1803, 1896, 1822], [1910, 1794, 2072, 1831], [2084, 1794, 2174, 1823], [480, 1845, 597, 1882], [609, 1849, 638, 1873], [650, 1845, 698, 1873], [708, 1845, 865, 1882], [875, 1854, 943, 1873], [954, 1845, 990, 1873], [999, 1845, 1175, 1882], [1188, 1845, 1235, 1873], [1247, 1846, 1299, 1873], [1311, 1845, 1475, 1882], [1491, 1845, 1703, 1879], [1715, 1845, 1783, 1882], [1795, 1854, 1877, 1873], [1888, 1849, 1917, 1873], [1928, 1845, 2059, 1882], [2070, 1845, 2175, 1882], [478, 1896, 566, 1924], [578, 1896, 740, 1933], [752, 1900, 783, 1924], [795, 1896, 879, 1924], [890, 1896, 1037, 1924], [439, 1977, 455, 1993], [479, 1967, 572, 1995], [573, 1967, 742, 2004], [755, 1967, 888, 2002], [901, 1967, 1027, 1995], [1041, 1967, 1113, 1996], [1125, 1967, 1329, 2004], [1342, 1971, 1369, 1995], [1381, 1967, 1429, 1995], [1440, 1967, 1610, 2004], [1622, 1967, 1673, 1995], [1685, 1967, 1772, 1996], [1782, 1976, 1816, 1995], [1817, 1967, 1879, 1995], [1880, 1967, 2054, 1995], [2066, 1967, 2136, 1995], [2148, 1967, 2173, 1995], [480, 2018, 547, 2046], [559, 2022, 589, 2046], [602, 2018, 725, 2047], [738, 2027, 754, 2046], [766, 2018, 847, 2055], [860, 2018, 1100, 2055], [1112, 2022, 1142, 2046], [1154, 2018, 1204, 2046], [1215, 2018, 1371, 2055], [439, 2099, 455, 2115], [479, 2089, 540, 2117], [554, 2089, 628, 2126], [640, 2090, 787, 2126], [799, 2089, 919, 2117], [922, 2089, 972, 2123], [985, 2089, 1058, 2126], [1071, 2089, 1106, 2117], [1114, 2089, 1203, 2126], [1217, 2098, 1253, 2117], [1265, 2089, 1475, 2117], [1487, 2089, 1607, 2117], [1619, 2098, 1686, 2117], [1688, 2089, 1779, 2117], [1791, 2089, 1933, 2118], [1946, 2098, 1979, 2117], [1990, 2089, 2180, 2118], [479, 2140, 571, 2174], [585, 2140, 736, 2177], [751, 2140, 957, 2177], [970, 2140, 1066, 2168], [1078, 2140, 1150, 2168], [1162, 2140, 1259, 2168], [1277, 2141, 1315, 2168], [1314, 2140, 1483, 2168], [1496, 2140, 1554, 2168], [1568, 2144, 1599, 2168], [1612, 2140, 1662, 2168], [1675, 2149, 1747, 2177], [1761, 2140, 1898, 2168], [1910, 2140, 2174, 2177], [478, 2191, 627, 2228], [641, 2191, 682, 2228], [696, 2191, 734, 2219], [750, 2191, 881, 2225], [898, 2191, 956, 2219], [971, 2195, 1002, 2219], [1016, 2191, 1066, 2219], [1081, 2191, 1143, 2219], [1156, 2191, 1219, 2219], [1233, 2200, 1250, 2219], [1263, 2191, 1323, 2219], [1338, 2191, 1546, 2228], [1561, 2191, 1686, 2219], [1700, 2191, 1726, 2219], [1741, 2191, 1905, 2228], [1920, 2195, 1951, 2219], [1965, 2195, 2109, 2228], [2124, 2191, 2174, 2219], [478, 2241, 616, 2278], [628, 2241, 735, 2269], [747, 2241, 912, 2270], [925, 2241, 1106, 2278], [1118, 2241, 1167, 2269], [1179, 2241, 1310, 2269], [439, 2322, 455, 2338], [479, 2312, 543, 2340], [557, 2312, 682, 2340], [695, 2312, 736, 2349], [751, 2312, 901, 2341], [916, 2312, 974, 2340], [988, 2312, 1049, 2340], [1062, 2312, 1088, 2340], [1103, 2312, 1213, 2341], [1226, 2312, 1298, 2340], [1311, 2312, 1397, 2340], [1411, 2312, 1598, 2349], [1614, 2312, 1672, 2340], [1687, 2321, 1772, 2340], [1774, 2316, 1832, 2340], [1845, 2312, 1973, 2349], [1988, 2312, 2174, 2349], [480, 2363, 632, 2391], [649, 2364, 685, 2391], [684, 2363, 844, 2391], [855, 2363, 911, 2391], [923, 2367, 953, 2391], [964, 2363, 1012, 2391], [1023, 2363, 1083, 2391], [1093, 2363, 1153, 2391], [1164, 2363, 1220, 2391], [1232, 2363, 1351, 2391], [1364, 2363, 1461, 2391], [1474, 2372, 1490, 2391], [1501, 2363, 1625, 2391], [1638, 2363, 1926, 2400], [1939, 2363, 2174, 2400], [479, 2418, 510, 2442], [525, 2414, 575, 2442], [589, 2414, 738, 2451], [762, 2415, 815, 2442], [831, 2414, 1050, 2451], [1065, 2414, 1128, 2442], [1141, 2414, 1227, 2442], [1241, 2414, 1382, 2442], [1398, 2414, 1567, 2451], [1582, 2414, 1632, 2442], [1646, 2414, 1731, 2442], [1745, 2414, 1899, 2442], [1914, 2431, 1924, 2434], [1940, 2414, 2175, 2442], [478, 2465, 671, 2502], [683, 2465, 758, 2494], [770, 2465, 847, 2493], [858, 2465, 1008, 2502], [1020, 2465, 1092, 2493], [1104, 2465, 1226, 2502], [1240, 2465, 1331, 2502], [1342, 2465, 1457, 2499], [1471, 2474, 1526, 2502], [1544, 2465, 1617, 2499], [1629, 2465, 1769, 2494], [1780, 2465, 1828, 2493], [1841, 2465, 2065, 2502], [2077, 2465, 2173, 2493], [480, 2516, 540, 2544], [553, 2516, 648, 2553], [439, 2597, 455, 2613], [479, 2587, 541, 2615], [554, 2587, 676, 2615], [687, 2587, 727, 2624], [739, 2587, 925, 2624], [927, 2591, 987, 2616], [999, 2587, 1035, 2621], [1049, 2587, 1136, 2615], [1147, 2587, 1286, 2624], [1299, 2587, 1482, 2615], [1493, 2587, 1534, 2624], [1547, 2596, 1563, 2615], [1575, 2587, 1700, 2615], [1713, 2587, 1818, 2615], [1831, 2587, 1866, 2615], [1876, 2587, 2011, 2624], [2025, 2587, 2177, 2624], [480, 2646, 580, 2665], [594, 2641, 624, 2665], [637, 2637, 676, 2665], [689, 2637, 739, 2665], [750, 2637, 819, 2665], [830, 2637, 939, 2665], [952, 2637, 1000, 2665], [1012, 2637, 1130, 2674], [1143, 2646, 1216, 2674], [1230, 2641, 1368, 2665], [1382, 2637, 1541, 2671], [1555, 2637, 1672, 2674], [1684, 2637, 1707, 2665], [1718, 2637, 1744, 2665], [1758, 2646, 1830, 2674], [1843, 2637, 1961, 2674], [1974, 2637, 2121, 2666], [2134, 2637, 2175, 2674], [478, 2688, 618, 2716], [439, 2769, 455, 2785], [479, 2759, 541, 2787], [553, 2763, 717, 2796], [728, 2759, 790, 2787], [802, 2759, 939, 2787], [952, 2760, 1002, 2787], [1016, 2759, 1073, 2787], [1085, 2760, 1112, 2787], [1114, 2760, 1183, 2787], [1184, 2759, 1260, 2787], [1273, 2759, 1376, 2787], [1388, 2763, 1417, 2787], [1431, 2759, 1552, 2788], [1565, 2768, 1581, 2787], [1593, 2759, 1783, 2796], [1796, 2759, 1935, 2793], [1948, 2759, 2020, 2787], [2032, 2759, 2180, 2796], [479, 2810, 632, 2838], [643, 2810, 829, 2847], [840, 2810, 935, 2838], [946, 2810, 1016, 2838], [1028, 2810, 1179, 2838], [1191, 2810, 1328, 2847], [1256, 2935, 1294, 2964], [309, 1584, 327, 1666], [309, 1490, 327, 1576], [310, 1464, 327, 1483], [309, 1369, 331, 1456], [309, 1076, 327, 1158], [309, 982, 327, 1067], [310, 956, 327, 975], [309, 860, 331, 948], [309, 561, 327, 643], [309, 468, 327, 553], [310, 441, 327, 460], [309, 346, 331, 433], [309, 2099, 327, 2180], [309, 2005, 327, 2090], [310, 1979, 327, 1998], [309, 1883, 331, 1971], [350, 236, 492, 265], [504, 236, 666, 265], [679, 236, 859, 259], [343, 281, 374, 300], [401, 474, 431, 483], [432, 471, 553, 488], [432, 500, 434, 502], [440, 494, 497, 507], [432, 522, 434, 524], [440, 516, 572, 529], [401, 542, 431, 549], [432, 538, 480, 555], [414, 560, 426, 573], [440, 561, 540, 574], [401, 583, 434, 594], [440, 583, 536, 600], [400, 605, 463, 618], [400, 627, 464, 640], [664, 668, 701, 688], [584, 700, 643, 721], [654, 700, 683, 726], [468, 668, 504, 688], [350, 751, 492, 780], [504, 751, 666, 780], [679, 751, 859, 774], [446, 803, 517, 818], [343, 810, 374, 830], [393, 820, 416, 825], [401, 989, 434, 998], [440, 986, 553, 1003], [432, 1014, 434, 1017], [440, 1008, 497, 1021], [432, 1037, 434, 1039], [440, 1031, 572, 1044], [401, 1057, 427, 1064], [428, 1053, 480, 1070], [414, 1075, 426, 1088], [440, 1075, 540, 1088], [401, 1098, 434, 1109], [440, 1098, 536, 1115], [400, 1120, 463, 1133], [400, 1142, 464, 1155], [629, 1183, 663, 1202], [808, 1183, 839, 1202], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [452, 1183, 489, 1202], [376, 1266, 518, 1295], [530, 1266, 684, 1295], [687, 1266, 820, 1289], [407, 1299, 450, 1310], [451, 1306, 529, 1320], [343, 1307, 374, 1327], [401, 1504, 434, 1513], [440, 1501, 553, 1518], [432, 1529, 434, 1531], [440, 1523, 497, 1536], [432, 1551, 434, 1554], [440, 1545, 572, 1558], [432, 1574, 434, 1576], [440, 1568, 480, 1585], [414, 1590, 426, 1602], [440, 1590, 540, 1603], [401, 1613, 434, 1623], [440, 1612, 536, 1629], [400, 1634, 463, 1647], [400, 1657, 464, 1670], [620, 1698, 654, 1717], [806, 1698, 837, 1717], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [438, 1698, 475, 1717], [399, 1781, 541, 1810], [553, 1781, 715, 1810], [727, 1781, 812, 1804], [400, 1814, 567, 1842], [401, 2019, 434, 2027], [440, 2016, 553, 2033], [432, 2044, 434, 2046], [440, 2038, 497, 2051], [432, 2066, 434, 2068], [440, 2060, 572, 2073], [401, 2086, 434, 2093], [440, 2082, 480, 2099], [414, 2104, 426, 2117], [440, 2105, 540, 2118], [401, 2127, 434, 2138], [440, 2127, 536, 2144], [400, 2149, 463, 2162], [400, 2171, 464, 2184], [975, 1584, 993, 1666], [975, 1490, 993, 1576], [976, 1464, 993, 1483], [975, 1369, 997, 1456], [975, 1076, 993, 1158], [975, 982, 993, 1067], [976, 956, 993, 975], [975, 860, 997, 948], [975, 561, 993, 643], [975, 468, 993, 553], [976, 441, 993, 460], [975, 346, 997, 433], [975, 2099, 993, 2180], [975, 2005, 993, 2090], [976, 1979, 993, 1998], [975, 1883, 997, 1971], [1009, 287, 1040, 307], [1009, 801, 1040, 821], [1049, 817, 1068, 826], [1016, 236, 1158, 265], [1170, 236, 1332, 265], [1345, 236, 1520, 259], [1068, 283, 1255, 311], [1106, 471, 1219, 488], [1106, 494, 1163, 507], [1106, 516, 1238, 529], [1106, 538, 1146, 555], [1106, 561, 1206, 574], [1106, 583, 1202, 600], [1066, 605, 1129, 618], [1066, 627, 1130, 640], [1428, 668, 1462, 688], [1240, 668, 1277, 688], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1052, 668, 1088, 688], [1016, 751, 1158, 780], [1170, 751, 1332, 780], [1345, 751, 1525, 774], [1097, 798, 1137, 807], [1138, 799, 1238, 814], [1186, 810, 1243, 823], [1106, 986, 1219, 1003], [1106, 1008, 1163, 1021], [1106, 1031, 1238, 1044], [1106, 1053, 1146, 1070], [1106, 1075, 1206, 1088], [1106, 1098, 1202, 1115], [1066, 1142, 1130, 1155], [1232, 1183, 1266, 1202], [1412, 1183, 1443, 1202], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1056, 1183, 1093, 1202], [1043, 1266, 1186, 1295], [1198, 1266, 1360, 1295], [1371, 1266, 1486, 1295], [1009, 1298, 1040, 1317], [1049, 1298, 1140, 1328], [1067, 1504, 1100, 1513], [1106, 1501, 1219, 1518], [1106, 1523, 1163, 1536], [1106, 1545, 1238, 1558], [1106, 1568, 1146, 1585], [1080, 1590, 1092, 1602], [1106, 1590, 1206, 1603], [1067, 1613, 1100, 1623], [1106, 1612, 1202, 1629], [1066, 1634, 1129, 1647], [1066, 1657, 1130, 1670], [1014, 1502, 1040, 1521], [1363, 1698, 1396, 1717], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1175, 1698, 1212, 1717], [1048, 1781, 1190, 1810], [1202, 1781, 1364, 1810], [1376, 1783, 1487, 1804], [1089, 1814, 1230, 1828], [1137, 1822, 1177, 1833], [1178, 1820, 1254, 1837], [1106, 2016, 1219, 2033], [1106, 2038, 1163, 2051], [1106, 2060, 1238, 2073], [1106, 2082, 1146, 2099], [1106, 2105, 1206, 2118], [1106, 2127, 1202, 2144], [1066, 2149, 1129, 2162], [1066, 2171, 1130, 2184], [1471, 2174, 1477, 2190], [1307, 2212, 1338, 2232], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1129, 2212, 1163, 2232], [1641, 1584, 1659, 1666], [1641, 1490, 1659, 1576], [1642, 1464, 1659, 1483], [1641, 1369, 1663, 1456], [1641, 1069, 1659, 1151], [1641, 976, 1659, 1061], [1642, 950, 1659, 968], [1641, 854, 1663, 941], [1641, 561, 1659, 643], [1641, 468, 1659, 553], [1642, 441, 1659, 460], [1641, 346, 1663, 433], [1641, 2099, 1659, 2180], [1641, 2005, 1659, 2090], [1642, 1979, 1659, 1998], [1641, 1883, 1663, 1971], [1682, 236, 1824, 265], [1836, 236, 1998, 265], [2011, 236, 2191, 259], [1757, 287, 1797, 297], [1812, 293, 1876, 307], [1772, 471, 1885, 488], [1772, 494, 1829, 507], [1772, 516, 1904, 529], [1772, 538, 1812, 555], [1772, 561, 1872, 574], [1772, 583, 1868, 600], [1732, 605, 1795, 618], [1732, 627, 1796, 640], [1680, 488, 1706, 507], [2001, 668, 2035, 688], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1814, 668, 1851, 688], [1729, 752, 1871, 781], [1883, 752, 2045, 781], [2057, 752, 2143, 781], [1733, 785, 1780, 794], [1781, 786, 1843, 801], [1715, 798, 1727, 807], [1772, 986, 1885, 1003], [1772, 1008, 1829, 1021], [1772, 1031, 1904, 1044], [1772, 1053, 1812, 1070], [1772, 1075, 1872, 1088], [1772, 1098, 1868, 1115], [1732, 1142, 1796, 1155], [1944, 1183, 1981, 1202], [2127, 1183, 2160, 1202], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1762, 1183, 1798, 1202], [1745, 1266, 1888, 1295], [1900, 1266, 2053, 1295], [2057, 1268, 2125, 1289], [1733, 1504, 1766, 1513], [1772, 1501, 1885, 1518], [1772, 1523, 1829, 1536], [1772, 1545, 1904, 1558], [1772, 1568, 1812, 1585], [1746, 1590, 1758, 1602], [1772, 1590, 1872, 1603], [1733, 1613, 1766, 1623], [1772, 1612, 1868, 1629], [1732, 1634, 1795, 1647], [1732, 1657, 1796, 1670], [1858, 1698, 1892, 1717], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1772, 2016, 1885, 2033], [1772, 2038, 1829, 2051], [1772, 2060, 1904, 2073], [1772, 2082, 1812, 2099], [1772, 2105, 1872, 2118], [1772, 2127, 1868, 2144], [1732, 2149, 1795, 2162], [1732, 2171, 1796, 2184], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [1715, 2212, 1749, 2232], [375, 2356, 480, 2393], [496, 2356, 539, 2385], [557, 2356, 688, 2384], [701, 2356, 832, 2384], [844, 2360, 873, 2384], [886, 2356, 1032, 2393], [1043, 2365, 1061, 2384], [1064, 2356, 1159, 2384], [1171, 2356, 1207, 2384], [1216, 2356, 1263, 2384], [1275, 2356, 1431, 2393], [1444, 2356, 1559, 2384], [1572, 2356, 1742, 2393], [1754, 2356, 1847, 2384], [1858, 2356, 2055, 2393], [2068, 2356, 2115, 2384], [2126, 2356, 2173, 2384], [376, 2406, 516, 2434], [528, 2406, 642, 2443], [656, 2406, 834, 2434], [846, 2406, 876, 2434], [889, 2406, 938, 2434], [950, 2406, 1158, 2443], [438, 2540, 635, 2577], [648, 2540, 729, 2568], [742, 2540, 825, 2574], [839, 2540, 887, 2568], [899, 2540, 1020, 2568], [1032, 2540, 1067, 2568], [1076, 2540, 1181, 2568], [1194, 2549, 1302, 2577], [1315, 2540, 1362, 2568], [1375, 2549, 1447, 2568], [1460, 2540, 1635, 2568], [1647, 2540, 1778, 2577], [1791, 2549, 1831, 2568], [1842, 2540, 1890, 2568], [1903, 2540, 2019, 2568], [2032, 2549, 2179, 2577], [374, 2592, 427, 2619], [440, 2600, 539, 2628], [552, 2591, 701, 2625], [715, 2591, 777, 2619], [788, 2591, 836, 2619], [848, 2591, 898, 2619], [909, 2600, 1041, 2628], [1054, 2591, 1090, 2619], [1099, 2591, 1200, 2628], [1211, 2591, 1391, 2628], [1404, 2600, 1421, 2619], [1432, 2591, 1627, 2628], [1640, 2591, 1773, 2619], [1786, 2591, 1811, 2619], [1825, 2591, 1987, 2619], [2003, 2591, 2067, 2619], [2079, 2591, 2174, 2620], [375, 2641, 455, 2678], [472, 2641, 508, 2669], [521, 2641, 630, 2678], [650, 2641, 685, 2670], [702, 2641, 848, 2678], [865, 2650, 950, 2669], [965, 2645, 996, 2669], [1013, 2645, 1138, 2678], [1153, 2641, 1221, 2675], [1240, 2650, 1272, 2669], [1289, 2641, 1338, 2669], [1353, 2641, 1515, 2678], [1531, 2641, 1647, 2678], [1663, 2641, 1699, 2669], [1712, 2641, 1762, 2669], [1777, 2641, 2027, 2675], [2044, 2641, 2175, 2678], [377, 2692, 606, 2729], [617, 2692, 659, 2729], [671, 2692, 721, 2720], [733, 2692, 828, 2721], [831, 2696, 996, 2726], [1008, 2692, 1127, 2729], [1140, 2692, 1198, 2720], [1211, 2701, 1251, 2720], [1264, 2692, 1439, 2729], [1450, 2692, 1688, 2729], [1702, 2701, 1751, 2720], [1763, 2692, 1907, 2720], [1919, 2692, 2050, 2729], [2061, 2692, 2175, 2720], [376, 2743, 591, 2780], [609, 2743, 707, 2772], [719, 2743, 786, 2777], [800, 2743, 849, 2771], [860, 2743, 1011, 2780], [1023, 2743, 1161, 2771], [1175, 2752, 1258, 2771], [1270, 2747, 1300, 2771], [1312, 2743, 1350, 2771], [1362, 2743, 1411, 2771], [1422, 2743, 1489, 2771], [1502, 2743, 1598, 2771], [1610, 2743, 1658, 2771], [1669, 2743, 1718, 2771], [1730, 2743, 1908, 2771], [1920, 2743, 1993, 2771], [1256, 2935, 1293, 2964], [350, 236, 492, 265], [504, 236, 666, 265], [679, 236, 859, 259], [702, 477, 732, 480], [738, 471, 851, 488], [751, 494, 796, 507], [751, 516, 870, 529], [699, 542, 732, 549], [738, 538, 778, 555], [712, 560, 724, 573], [738, 561, 838, 574], [699, 583, 732, 594], [738, 583, 834, 600], [698, 605, 761, 618], [698, 627, 762, 640], [468, 668, 504, 688], [664, 668, 701, 688], [862, 668, 896, 688], [584, 700, 643, 721], [654, 700, 683, 726], [350, 751, 492, 780], [504, 751, 666, 780], [679, 751, 859, 774], [364, 799, 373, 813], [364, 860, 373, 874], [364, 921, 373, 935], [337, 960, 354, 974], [337, 978, 355, 1007], [364, 982, 373, 996], [702, 992, 732, 994], [738, 986, 851, 1003], [364, 1044, 373, 1058], [713, 1057, 722, 1064], [712, 1075, 724, 1088], [738, 1075, 838, 1088], [365, 1105, 370, 1119], [702, 1098, 732, 1109], [738, 1098, 834, 1115], [698, 1120, 761, 1133], [698, 1142, 762, 1155], [364, 1166, 373, 1180], [452, 1183, 489, 1202], [629, 1183, 663, 1202], [808, 1183, 839, 1202], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [376, 1266, 518, 1295], [530, 1266, 684, 1295], [687, 1266, 820, 1289], [364, 1299, 373, 1313], [737, 1322, 748, 1334], [364, 1347, 373, 1361], [364, 1394, 373, 1408], [364, 1442, 373, 1456], [337, 1468, 354, 1482], [337, 1486, 373, 1504], [764, 1501, 766, 1503], [337, 1501, 355, 1521], [699, 1504, 732, 1513], [738, 1501, 851, 1518], [751, 1523, 796, 1536], [364, 1537, 373, 1551], [751, 1545, 870, 1558], [750, 1571, 778, 1585], [364, 1585, 373, 1599], [712, 1590, 724, 1602], [738, 1590, 838, 1603], [699, 1613, 729, 1623], [730, 1612, 834, 1629], [365, 1633, 370, 1647], [698, 1634, 761, 1647], [698, 1657, 762, 1670], [364, 1681, 373, 1695], [438, 1698, 475, 1717], [620, 1698, 654, 1717], [806, 1698, 837, 1717], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [399, 1781, 541, 1810], [553, 1781, 715, 1810], [727, 1781, 812, 1804], [364, 1817, 373, 1831], [364, 1871, 373, 1885], [364, 1925, 373, 1939], [337, 1979, 373, 1997], [337, 2001, 354, 2014], [337, 2016, 355, 2036], [702, 2022, 732, 2024], [738, 2016, 851, 2033], [364, 2033, 373, 2047], [751, 2038, 796, 2051], [751, 2060, 870, 2073], [364, 2087, 373, 2101], [699, 2086, 732, 2093], [738, 2082, 778, 2099], [712, 2104, 724, 2117], [738, 2105, 838, 2118], [699, 2127, 729, 2138], [730, 2127, 834, 2144], [365, 2141, 370, 2155], [698, 2149, 761, 2162], [698, 2171, 762, 2184], [364, 2195, 373, 2209], [429, 2212, 465, 2232], [609, 2212, 643, 2232], [792, 2212, 823, 2232], [584, 2244, 643, 2265], [654, 2244, 683, 2270], [1016, 236, 1158, 265], [1170, 236, 1332, 265], [1345, 236, 1520, 259], [1011, 314, 1037, 328], [1030, 362, 1039, 376], [1011, 410, 1037, 424], [983, 445, 1039, 472], [983, 463, 1001, 492], [1059, 485, 1082, 491], [1375, 477, 1398, 480], [1404, 471, 1517, 488], [983, 495, 1000, 498], [1393, 500, 1398, 502], [1404, 494, 1462, 507], [1012, 507, 1037, 521], [1365, 522, 1398, 524], [1404, 516, 1536, 529], [1365, 542, 1395, 549], [1396, 538, 1444, 555], [1031, 555, 1036, 569], [1378, 560, 1390, 573], [1404, 561, 1504, 574], [1365, 583, 1398, 594], [1404, 583, 1500, 600], [1011, 603, 1037, 617], [1364, 605, 1427, 618], [1364, 627, 1428, 640], [1030, 651, 1039, 665], [1052, 668, 1088, 688], [1240, 668, 1277, 688], [1428, 668, 1462, 688], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [1016, 751, 1158, 780], [1170, 751, 1332, 780], [1345, 751, 1525, 774], [1030, 802, 1039, 816], [1011, 847, 1037, 861], [1030, 893, 1039, 907], [1011, 938, 1037, 952], [983, 960, 1000, 974], [983, 978, 1001, 1007], [1030, 984, 1039, 998], [1389, 992, 1398, 994], [1404, 986, 1517, 1003], [983, 1010, 1000, 1013], [1393, 1014, 1398, 1017], [1404, 1008, 1462, 1021], [1012, 1029, 1037, 1043], [1393, 1037, 1398, 1039], [1404, 1031, 1536, 1044], [1379, 1057, 1398, 1064], [1404, 1053, 1444, 1070], [1031, 1075, 1036, 1089], [1378, 1075, 1390, 1088], [1404, 1075, 1504, 1088], [1375, 1098, 1398, 1109], [1404, 1098, 1500, 1115], [1011, 1120, 1037, 1134], [1364, 1120, 1427, 1133], [1364, 1142, 1428, 1155], [1030, 1166, 1039, 1180], [1056, 1183, 1093, 1202], [1232, 1183, 1266, 1202], [1412, 1183, 1443, 1202], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1043, 1266, 1186, 1295], [1198, 1266, 1360, 1295], [1371, 1266, 1486, 1295], [1030, 1331, 1039, 1345], [1030, 1384, 1039, 1398], [1030, 1437, 1039, 1451], [996, 1468, 1013, 1482], [996, 1486, 1039, 1504], [1430, 1501, 1432, 1503], [996, 1501, 1014, 1521], [1365, 1504, 1398, 1513], [1404, 1501, 1517, 1518], [1393, 1529, 1398, 1531], [1404, 1523, 1462, 1536], [1023, 1542, 1039, 1556], [1393, 1551, 1398, 1554], [1404, 1545, 1536, 1558], [1365, 1574, 1398, 1576], [1404, 1568, 1444, 1585], [1023, 1595, 1039, 1609], [1378, 1590, 1390, 1602], [1404, 1590, 1504, 1603], [1365, 1613, 1395, 1623], [1396, 1612, 1500, 1629], [1364, 1634, 1427, 1647], [1023, 1648, 1039, 1662], [1364, 1657, 1428, 1670], [1175, 1698, 1212, 1717], [1363, 1698, 1396, 1717], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1048, 1781, 1190, 1810], [1202, 1781, 1364, 1810], [1376, 1783, 1487, 1804], [990, 1983, 1008, 2036], [1375, 2022, 1398, 2024], [1404, 2016, 1517, 2033], [1393, 2044, 1398, 2046], [1404, 2038, 1462, 2051], [1393, 2066, 1398, 2068], [1404, 2060, 1536, 2073], [1389, 2088, 1398, 2091], [1404, 2082, 1444, 2099], [1404, 2105, 1504, 2118], [1389, 2133, 1398, 2135], [1404, 2127, 1500, 2144], [1364, 2149, 1427, 2162], [1364, 2171, 1428, 2184], [1129, 2212, 1163, 2232], [1307, 2212, 1338, 2232], [1481, 2212, 1510, 2232], [1250, 2244, 1309, 2265], [1320, 2244, 1349, 2270], [1682, 236, 1824, 265], [1836, 236, 1998, 265], [2011, 236, 2191, 259], [2070, 471, 2183, 488], [2070, 494, 2128, 507], [2070, 516, 2202, 529], [2031, 542, 2064, 549], [2070, 538, 2110, 555], [2044, 560, 2056, 573], [2070, 561, 2170, 574], [2031, 583, 2064, 594], [2070, 583, 2166, 600], [2030, 605, 2093, 618], [2030, 627, 2094, 640], [1814, 668, 1851, 688], [2001, 668, 2035, 688], [2189, 668, 2220, 688], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1729, 752, 1871, 781], [1883, 752, 2045, 781], [2057, 752, 2143, 781], [1696, 806, 1705, 820], [1696, 866, 1705, 880], [1696, 926, 1705, 940], [1669, 953, 1686, 967], [1669, 971, 1686, 984], [1669, 986, 1705, 1006], [2070, 986, 2183, 1003], [2070, 1008, 2128, 1021], [2070, 1031, 2202, 1044], [1696, 1046, 1705, 1060], [2031, 1059, 2040, 1061], [2070, 1053, 2110, 1070], [2044, 1075, 2056, 1088], [2070, 1075, 2170, 1088], [1697, 1106, 1702, 1120], [2031, 1098, 2064, 1109], [2070, 1098, 2166, 1115], [2030, 1120, 2093, 1133], [2030, 1142, 2094, 1155], [1696, 1166, 1705, 1180], [1762, 1183, 1798, 1202], [1944, 1183, 1981, 1202], [2127, 1183, 2160, 1202], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1745, 1266, 1888, 1295], [1900, 1266, 2053, 1295], [2057, 1268, 2125, 1289], [2070, 1501, 2183, 1518], [2070, 1523, 2128, 1536], [2070, 1545, 2202, 1558], [2070, 1568, 2110, 1585], [2070, 1590, 2170, 1603], [2031, 1618, 2040, 1620], [2070, 1612, 2166, 1629], [2030, 1634, 2093, 1647], [2030, 1657, 2094, 1670], [1858, 1698, 1892, 1717], [2034, 1698, 2065, 1717], [2208, 1698, 2237, 1717], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1704, 1781, 1846, 1810], [1858, 1781, 2020, 1810], [2033, 1781, 2157, 1810], [1669, 1983, 1687, 2036], [1696, 2008, 1705, 2022], [2070, 2016, 2183, 2033], [2070, 2038, 2128, 2051], [2070, 2060, 2202, 2073], [2031, 2088, 2040, 2091], [2070, 2082, 2110, 2099], [2044, 2104, 2056, 2117], [2070, 2105, 2170, 2118], [2031, 2127, 2064, 2138], [2070, 2127, 2166, 2144], [2030, 2149, 2093, 2162], [2030, 2171, 2094, 2184], [1696, 2195, 1705, 2209], [1715, 2212, 1749, 2232], [1891, 2212, 1922, 2232], [2064, 2212, 2093, 2232], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [376, 2296, 484, 2333], [506, 2296, 552, 2325], [581, 2296, 741, 2324], [761, 2296, 866, 2333], [884, 2300, 915, 2324], [934, 2296, 1030, 2324], [1049, 2296, 1138, 2324], [1158, 2296, 1278, 2331], [1298, 2305, 1333, 2324], [1352, 2296, 1425, 2324], [1443, 2296, 1479, 2324], [1495, 2296, 1545, 2324], [1563, 2296, 1725, 2333], [1744, 2296, 1863, 2324], [1883, 2296, 2061, 2333], [2079, 2296, 2175, 2324], [376, 2347, 576, 2384], [590, 2347, 638, 2375], [649, 2347, 698, 2375], [710, 2347, 850, 2375], [862, 2347, 977, 2384], [990, 2347, 1168, 2375], [1180, 2347, 1211, 2375], [1223, 2347, 1272, 2375], [1284, 2347, 1492, 2384], [437, 2482, 493, 2509], [504, 2481, 595, 2518], [605, 2481, 765, 2515], [779, 2481, 866, 2509], [879, 2481, 896, 2510], [909, 2485, 1041, 2518], [1055, 2490, 1071, 2509], [1084, 2490, 1214, 2509], [1215, 2481, 1281, 2518], [1289, 2481, 1345, 2518], [1357, 2481, 1455, 2518], [1469, 2481, 1504, 2509], [1513, 2481, 1561, 2509], [1574, 2481, 1733, 2518], [1745, 2481, 1891, 2515], [1906, 2481, 1993, 2518], [2006, 2481, 2077, 2509], [2090, 2490, 2173, 2509], [375, 2532, 667, 2560], [682, 2532, 772, 2560], [784, 2532, 872, 2560], [884, 2536, 914, 2560], [926, 2536, 978, 2569], [990, 2532, 1072, 2560], [1083, 2536, 1114, 2560], [1125, 2541, 1187, 2560], [376, 2642, 457, 2672], [500, 2642, 756, 2672], [768, 2642, 983, 2680], [376, 2723, 408, 2750], [419, 2722, 550, 2750], [561, 2726, 590, 2750], [602, 2722, 649, 2750], [659, 2722, 797, 2759], [809, 2722, 1004, 2759], [1017, 2731, 1053, 2750], [1054, 2722, 1113, 2750], [1124, 2722, 1265, 2750], [1276, 2722, 1324, 2750], [1334, 2722, 1566, 2759], [1576, 2722, 1717, 2759], [1728, 2722, 1763, 2750], [1771, 2722, 1819, 2750], [1829, 2722, 1983, 2759], [1996, 2722, 2172, 2759], [376, 2773, 506, 2810], [518, 2773, 650, 2807], [664, 2773, 771, 2810], [783, 2773, 823, 2802], [834, 2773, 914, 2810], [926, 2773, 1055, 2810], [1067, 2773, 1155, 2801], [1168, 2773, 1216, 2801], [1227, 2773, 1276, 2801], [1288, 2774, 1340, 2801], [1353, 2773, 1513, 2810], [1526, 2782, 1557, 2801], [1570, 2773, 1619, 2801], [1631, 2773, 1743, 2801], [1744, 2773, 1805, 2801], [1813, 2782, 1973, 2810], [1984, 2782, 2055, 2801], [2066, 2782, 2173, 2810], [1256, 2935, 1294, 2964], [609, 274, 698, 302], [710, 274, 738, 303], [756, 277, 899, 310], [910, 276, 942, 302], [950, 277, 1002, 310], [1012, 277, 1102, 310], [1114, 276, 1145, 302], [1154, 277, 1198, 302], [1209, 277, 1355, 310], [1366, 270, 1444, 313], [1458, 277, 1604, 310], [1616, 277, 1783, 310], [1795, 277, 1927, 302], [415, 352, 542, 380], [876, 353, 942, 389], [953, 352, 1053, 389], [415, 443, 555, 480], [568, 442, 733, 472], [791, 447, 819, 525], [876, 444, 943, 471], [955, 452, 1161, 480], [1172, 447, 1203, 471], [1215, 443, 1479, 480], [876, 494, 1135, 531], [1146, 494, 1270, 531], [877, 545, 959, 574], [971, 545, 1019, 573], [1029, 545, 1135, 582], [1147, 545, 1316, 573], [876, 596, 958, 624], [970, 596, 1017, 624], [1030, 596, 1167, 624], [1180, 596, 1339, 633], [1351, 596, 1431, 624], [415, 687, 565, 715], [577, 687, 707, 724], [792, 755, 818, 756], [791, 691, 819, 718], [0, 0, 2550, 3300], [786, 602, 823, 625], [786, 795, 823, 818], [876, 687, 1048, 715], [1061, 687, 1229, 715], [1244, 687, 1357, 715], [1369, 691, 1399, 715], [1411, 688, 1467, 715], [876, 739, 935, 766], [948, 738, 1056, 766], [1067, 738, 1137, 766], [1149, 739, 1205, 766], [876, 790, 940, 818], [951, 790, 978, 817], [981, 789, 1135, 817], [416, 881, 492, 918], [503, 882, 653, 918], [791, 885, 819, 912], [786, 988, 823, 1011], [876, 881, 1054, 918], [1065, 881, 1213, 918], [1227, 881, 1372, 918], [1384, 885, 1415, 909], [1427, 882, 1483, 909], [877, 932, 959, 961], [971, 941, 1157, 969], [1159, 941, 1205, 960], [1207, 932, 1292, 960], [1304, 932, 1455, 960], [876, 983, 940, 1011], [951, 983, 978, 1010], [981, 982, 1135, 1010], [415, 1074, 700, 1103], [786, 1131, 823, 1154], [877, 1074, 959, 1103], [876, 1126, 940, 1154], [951, 1125, 1036, 1153], [1047, 1125, 1170, 1153], [1182, 1125, 1298, 1153], [415, 1216, 533, 1245], [791, 1220, 819, 1247], [877, 1216, 986, 1245], [1003, 1216, 1171, 1253], [1187, 1216, 1345, 1253], [1363, 1225, 1380, 1244], [1396, 1225, 1464, 1244], [1480, 1216, 1516, 1244], [1530, 1216, 1874, 1245], [1889, 1216, 2044, 1244], [2061, 1216, 2135, 1245], [876, 1267, 970, 1295], [981, 1271, 1133, 1304], [876, 1318, 1014, 1346], [1027, 1322, 1058, 1346], [1070, 1318, 1355, 1347], [1366, 1318, 1455, 1346], [1468, 1318, 1587, 1355], [1598, 1318, 1682, 1346], [1695, 1318, 1795, 1355], [1807, 1318, 1967, 1355], [876, 1370, 940, 1398], [951, 1369, 1023, 1406], [1036, 1369, 1124, 1397], [1136, 1369, 1256, 1406], [1268, 1369, 1340, 1397], [1353, 1378, 1436, 1397], [1448, 1369, 1589, 1406], [1601, 1369, 1782, 1397], [415, 1461, 510, 1489], [511, 1461, 669, 1498], [791, 1465, 819, 1529], [0, 0, 2550, 3300], [786, 1375, 823, 1398], [876, 1462, 965, 1489], [978, 1465, 1114, 1489], [877, 1511, 1006, 1548], [1019, 1511, 1127, 1539], [1138, 1511, 1208, 1539], [1220, 1511, 1428, 1548], [876, 1562, 942, 1590], [953, 1562, 1097, 1591], [1108, 1562, 1156, 1590], [1167, 1562, 1359, 1599], [1372, 1562, 1518, 1590], [876, 1614, 940, 1642], [951, 1613, 1160, 1650], [1172, 1613, 1288, 1641], [415, 1705, 623, 1742], [791, 1709, 819, 1773], [0, 0, 2550, 3300], [786, 1619, 823, 1642], [786, 1812, 823, 1835], [876, 1706, 947, 1733], [948, 1709, 1114, 1733], [877, 1755, 992, 1784], [1003, 1755, 1073, 1783], [1085, 1756, 1141, 1783], [1153, 1755, 1201, 1783], [1212, 1755, 1271, 1783], [1285, 1755, 1453, 1783], [876, 1806, 986, 1835], [997, 1806, 1086, 1834], [1098, 1806, 1261, 1843], [1275, 1810, 1410, 1834], [1423, 1806, 1569, 1834], [1583, 1815, 1632, 1834], [1643, 1806, 1780, 1843], [415, 1898, 575, 1927], [578, 1898, 636, 1926], [791, 1902, 819, 1929], [786, 2056, 823, 2079], [877, 1898, 983, 1927], [997, 1898, 1046, 1926], [1058, 1898, 1186, 1926], [1197, 1898, 1317, 1927], [1329, 1898, 1365, 1926], [1374, 1898, 1424, 1926], [1434, 1898, 1573, 1935], [877, 1949, 959, 1978], [876, 2001, 954, 2028], [966, 2009, 1110, 2037], [1122, 2000, 1170, 2028], [1181, 2000, 1231, 2028], [1242, 2000, 1421, 2028], [1435, 2000, 1555, 2029], [876, 2050, 978, 2087], [991, 2050, 1063, 2087], [1075, 2050, 1142, 2078], [1144, 2050, 1296, 2087], [1308, 2050, 1357, 2078], [1369, 2050, 1496, 2078], [1507, 2050, 1645, 2087], [376, 2207, 454, 2235], [469, 2207, 480, 2235], [496, 2207, 622, 2244], [638, 2207, 681, 2236], [698, 2208, 735, 2235], [733, 2216, 812, 2235], [824, 2207, 884, 2235], [896, 2207, 943, 2235], [954, 2207, 1002, 2235], [1015, 2207, 1134, 2235], [1145, 2207, 1268, 2244], [1282, 2207, 1330, 2235], [1342, 2207, 1425, 2244], [1439, 2207, 1495, 2235], [1508, 2211, 1537, 2235], [1550, 2216, 1632, 2235], [1644, 2216, 1814, 2244], [1828, 2207, 1998, 2244], [2011, 2207, 2111, 2235], [2123, 2211, 2174, 2235], [375, 2257, 416, 2294], [429, 2257, 446, 2286], [459, 2266, 555, 2291], [569, 2257, 671, 2286], [684, 2257, 950, 2294], [963, 2257, 1021, 2285], [1034, 2266, 1152, 2285], [1153, 2257, 1361, 2294], [1373, 2257, 1482, 2285], [1494, 2257, 1641, 2294], [1653, 2257, 1892, 2294], [1904, 2257, 1975, 2294], [1978, 2257, 2083, 2292], [2093, 2257, 2179, 2292], [375, 2309, 431, 2336], [442, 2308, 490, 2336], [502, 2308, 596, 2345], [607, 2308, 729, 2345], [743, 2308, 822, 2336], [835, 2308, 859, 2336], [874, 2308, 999, 2336], [1011, 2308, 1141, 2345], [1155, 2317, 1185, 2336], [1198, 2308, 1246, 2336], [1258, 2308, 1367, 2336], [1368, 2308, 1429, 2336], [1438, 2317, 1521, 2336], [1534, 2308, 1666, 2336], [1679, 2308, 1722, 2343], [1734, 2308, 1807, 2336], [1818, 2308, 1881, 2345], [1893, 2308, 1972, 2336], [1986, 2317, 2082, 2336], [2095, 2312, 2124, 2336], [2136, 2308, 2173, 2336], [377, 2368, 394, 2387], [406, 2359, 524, 2396], [528, 2359, 577, 2387], [592, 2359, 628, 2387], [639, 2368, 826, 2396], [840, 2368, 887, 2388], [900, 2359, 1037, 2387], [1049, 2359, 1107, 2387], [1120, 2363, 1151, 2387], [1164, 2368, 1181, 2387], [1192, 2359, 1280, 2396], [1291, 2359, 1327, 2387], [1337, 2359, 1386, 2387], [1399, 2359, 1558, 2387], [1570, 2359, 1711, 2387], [1723, 2359, 1785, 2387], [1796, 2368, 1844, 2388], [1855, 2359, 1954, 2394], [1970, 2360, 2061, 2387], [2073, 2359, 2112, 2387], [2124, 2359, 2174, 2387], [375, 2410, 463, 2447], [475, 2410, 621, 2444], [635, 2410, 684, 2438], [696, 2419, 815, 2447], [817, 2410, 871, 2438], [884, 2410, 971, 2438], [989, 2419, 1043, 2438], [1054, 2411, 1106, 2438], [1118, 2419, 1193, 2447], [1205, 2414, 1356, 2447], [1369, 2410, 1482, 2447], [1493, 2410, 1729, 2447], [1741, 2410, 1819, 2444], [1833, 2410, 1890, 2438], [1903, 2410, 1987, 2438], [2000, 2410, 2174, 2438], [377, 2461, 525, 2498], [539, 2470, 569, 2489], [583, 2470, 667, 2489], [678, 2470, 837, 2498], [848, 2470, 933, 2489], [945, 2461, 1055, 2489], [1057, 2461, 1240, 2490], [438, 2512, 475, 2539], [473, 2511, 609, 2539], [622, 2511, 685, 2539], [698, 2515, 766, 2539], [779, 2511, 809, 2539], [820, 2511, 941, 2548], [954, 2511, 1014, 2539], [1026, 2511, 1074, 2539], [1087, 2511, 1162, 2548], [1174, 2512, 1322, 2548], [1334, 2511, 1464, 2545], [1478, 2511, 1576, 2539], [1588, 2511, 1619, 2539], [1630, 2511, 1678, 2539], [1690, 2511, 1828, 2548], [1841, 2511, 2038, 2548], [2052, 2511, 2174, 2539], [377, 2571, 393, 2590], [403, 2562, 581, 2590], [591, 2562, 809, 2599], [823, 2566, 903, 2590], [917, 2566, 968, 2590], [980, 2566, 1011, 2590], [1022, 2562, 1061, 2590], [1072, 2571, 1142, 2590], [1143, 2562, 1266, 2590], [1267, 2566, 1322, 2590], [1333, 2562, 1515, 2599], [1531, 2562, 1601, 2590], [1615, 2562, 1675, 2590], [1687, 2571, 1748, 2590], [1763, 2562, 1882, 2599], [1895, 2562, 2042, 2591], [2053, 2562, 2094, 2599], [2109, 2562, 2171, 2596], [376, 2613, 407, 2641], [420, 2613, 470, 2641], [483, 2617, 606, 2641], [618, 2613, 654, 2641], [664, 2613, 810, 2650], [824, 2614, 882, 2641], [896, 2613, 1061, 2641], [1074, 2613, 1165, 2642], [1178, 2613, 1294, 2641], [1306, 2622, 1468, 2650], [1480, 2622, 1567, 2641], [1582, 2622, 1631, 2641], [1645, 2613, 1793, 2641], [1806, 2613, 1856, 2641], [1868, 2613, 2022, 2650], [2035, 2613, 2175, 2641], [377, 2668, 505, 2701], [518, 2673, 615, 2692], [629, 2668, 659, 2692], [670, 2664, 709, 2692], [721, 2673, 796, 2693], [808, 2673, 892, 2692], [905, 2664, 1031, 2692], [1043, 2668, 1074, 2692], [1086, 2664, 1135, 2692], [1147, 2664, 1220, 2692], [1255, 2935, 1295, 2964], [429, 236, 487, 251], [497, 236, 547, 251], [553, 236, 578, 251], [584, 236, 644, 256], [653, 236, 709, 256], [933, 246, 983, 261], [985, 246, 1038, 261], [1040, 246, 1079, 261], [1085, 246, 1140, 265], [1142, 246, 1223, 261], [1428, 236, 1486, 251], [1496, 236, 1546, 251], [1552, 236, 1576, 251], [1583, 236, 1643, 256], [1652, 236, 1725, 256], [1961, 246, 2017, 261], [2027, 246, 2066, 261], [2067, 246, 2106, 261], [2113, 246, 2172, 265], [2179, 247, 2211, 261], [2288, 637, 2308, 652], [1335, 292, 1356, 307], [328, 304, 348, 319], [830, 319, 862, 334], [1838, 315, 1870, 330], [328, 363, 348, 378], [1335, 365, 1356, 380], [1838, 365, 1870, 380], [302, 404, 321, 418], [805, 410, 824, 414], [830, 391, 862, 406], [1310, 404, 1329, 418], [1813, 410, 1832, 414], [302, 421, 348, 442], [809, 416, 820, 441], [1310, 421, 1329, 442], [1817, 415, 1870, 441], [306, 450, 317, 460], [805, 443, 824, 447], [1314, 450, 1325, 460], [1335, 437, 1356, 452], [1813, 443, 1832, 447], [809, 455, 820, 465], [1817, 455, 1828, 465], [302, 462, 317, 482], [809, 467, 820, 482], [831, 463, 862, 478], [1310, 462, 1325, 482], [1817, 467, 1828, 482], [1838, 464, 1870, 479], [302, 481, 348, 496], [1310, 484, 1325, 496], [1813, 484, 1828, 500], [1336, 509, 1356, 524], [1838, 514, 1870, 529], [338, 540, 348, 555], [831, 534, 862, 549], [1838, 564, 1870, 579], [1336, 581, 1356, 596], [338, 599, 348, 614], [841, 606, 862, 621], [1839, 614, 1870, 629], [376, 637, 386, 652], [433, 637, 443, 652], [491, 637, 501, 652], [549, 637, 559, 652], [602, 637, 623, 652], [660, 637, 680, 652], [717, 637, 738, 652], [775, 637, 796, 652], [889, 637, 898, 652], [946, 637, 956, 652], [1002, 637, 1012, 652], [1059, 637, 1068, 652], [1110, 637, 1130, 652], [1167, 637, 1186, 652], [1223, 637, 1244, 652], [1280, 637, 1300, 652], [1384, 637, 1394, 652], [1441, 637, 1451, 652], [1499, 637, 1509, 652], [1557, 637, 1567, 652], [1610, 637, 1631, 652], [1668, 637, 1688, 652], [1725, 637, 1746, 652], [1783, 637, 1804, 652], [1897, 637, 1906, 652], [1954, 637, 1964, 652], [2010, 637, 2020, 652], [2067, 637, 2076, 652], [2118, 637, 2138, 652], [2175, 637, 2194, 652], [2231, 637, 2252, 652], [485, 656, 496, 671], [503, 660, 594, 676], [601, 660, 651, 671], [996, 657, 1007, 671], [1014, 660, 1103, 675], [1110, 660, 1157, 671], [1493, 656, 1504, 671], [1511, 660, 1602, 676], [1609, 660, 1659, 671], [2004, 657, 2015, 671], [2022, 660, 2111, 675], [2118, 660, 2165, 671], [438, 706, 495, 721], [505, 706, 553, 721], [560, 706, 584, 721], [590, 706, 649, 725], [657, 706, 710, 721], [941, 710, 997, 725], [1007, 710, 1054, 725], [1061, 710, 1085, 725], [1091, 710, 1150, 729], [1158, 711, 1225, 725], [1439, 710, 1495, 725], [1505, 710, 1542, 725], [1545, 710, 1583, 725], [1590, 710, 1648, 729], [1656, 710, 1732, 729], [1886, 706, 1914, 729], [1948, 701, 1997, 716], [2000, 701, 2054, 716], [2055, 701, 2095, 716], [2101, 701, 2161, 721], [2169, 701, 2218, 721], [326, 735, 358, 750], [828, 762, 871, 776], [1332, 771, 1375, 785], [1838, 799, 1865, 814], [326, 813, 358, 828], [1332, 817, 1375, 831], [828, 834, 871, 848], [301, 870, 320, 874], [804, 873, 823, 877], [1308, 873, 1327, 877], [1332, 864, 1375, 878], [1813, 867, 1832, 881], [305, 876, 316, 884], [301, 886, 358, 907], [804, 879, 823, 910], [1308, 879, 1327, 910], [1813, 883, 1832, 904], [1855, 881, 1865, 896], [305, 915, 316, 925], [808, 918, 819, 927], [829, 906, 871, 920], [1312, 918, 1323, 927], [1332, 910, 1375, 924], [1817, 913, 1828, 923], [301, 927, 316, 947], [808, 930, 819, 944], [1312, 930, 1323, 944], [1813, 925, 1828, 958], [301, 948, 316, 960], [804, 947, 819, 962], [1308, 947, 1323, 962], [1332, 956, 1375, 970], [1839, 962, 1865, 977], [327, 969, 358, 984], [829, 978, 871, 992], [1332, 1003, 1375, 1017], [337, 1047, 358, 1062], [839, 1050, 871, 1064], [1333, 1049, 1375, 1063], [1856, 1043, 1861, 1058], [385, 1098, 394, 1113], [498, 1098, 508, 1113], [555, 1098, 564, 1113], [606, 1098, 626, 1113], [663, 1098, 682, 1113], [719, 1098, 740, 1113], [776, 1098, 796, 1113], [898, 1099, 907, 1113], [953, 1099, 963, 1113], [1008, 1099, 1017, 1113], [1063, 1099, 1072, 1113], [1114, 1099, 1133, 1113], [1169, 1099, 1189, 1113], [1225, 1099, 1245, 1113], [1280, 1099, 1299, 1113], [1402, 1099, 1411, 1113], [1457, 1099, 1467, 1113], [1512, 1099, 1521, 1113], [1567, 1099, 1576, 1113], [1618, 1099, 1637, 1113], [1673, 1099, 1693, 1113], [1729, 1099, 1749, 1113], [1784, 1099, 1803, 1113], [1892, 1097, 1902, 1112], [1949, 1097, 1959, 1112], [2006, 1097, 2016, 1112], [2064, 1097, 2074, 1112], [2116, 1097, 2136, 1112], [2173, 1097, 2194, 1112], [2230, 1097, 2251, 1112], [2287, 1097, 2308, 1112], [492, 1118, 503, 1132], [510, 1121, 599, 1136], [606, 1121, 653, 1132], [1001, 1118, 1012, 1132], [1019, 1121, 1099, 1136], [1102, 1121, 1161, 1132], [1505, 1118, 1516, 1132], [1523, 1121, 1603, 1136], [1606, 1121, 1665, 1132], [2000, 1118, 2011, 1132], [2018, 1121, 2101, 1137], [2103, 1121, 2165, 1132], [703, 1222, 810, 1259], [822, 1222, 871, 1251], [888, 1222, 1050, 1250], [1063, 1222, 1211, 1259], [1225, 1231, 1265, 1250], [1277, 1222, 1417, 1250], [1429, 1222, 1543, 1259], [1558, 1222, 1622, 1257], [1635, 1222, 1699, 1250], [1711, 1222, 1801, 1250], [1813, 1222, 1845, 1257], [375, 1356, 456, 1385], [499, 1355, 705, 1393], [717, 1355, 822, 1393], [834, 1355, 1079, 1385], [374, 1434, 489, 1471], [504, 1443, 521, 1462], [535, 1438, 600, 1471], [614, 1434, 746, 1463], [760, 1443, 808, 1463], [822, 1443, 891, 1463], [906, 1434, 1048, 1462], [1061, 1434, 1111, 1462], [1124, 1434, 1266, 1471], [1279, 1434, 1315, 1462], [1326, 1433, 1431, 1471], [1444, 1433, 1689, 1463], [1705, 1434, 1752, 1469], [1765, 1434, 1867, 1471], [1881, 1434, 2078, 1471], [2100, 1434, 2173, 1462], [376, 1485, 486, 1522], [500, 1485, 526, 1513], [539, 1494, 625, 1513], [638, 1485, 781, 1522], [795, 1485, 879, 1513], [893, 1485, 943, 1513], [956, 1485, 1023, 1513], [1035, 1485, 1071, 1513], [1082, 1485, 1184, 1522], [1196, 1494, 1341, 1522], [1355, 1485, 1381, 1513], [1394, 1485, 1484, 1513], [1497, 1485, 1605, 1513], [1616, 1485, 1657, 1522], [1671, 1485, 1721, 1513], [1733, 1494, 1880, 1522], [1893, 1485, 1929, 1513], [1941, 1494, 1958, 1513], [1970, 1484, 2173, 1514], [375, 1536, 486, 1565], [499, 1536, 534, 1564], [546, 1536, 607, 1564], [619, 1536, 738, 1564], [752, 1536, 801, 1564], [813, 1536, 913, 1573], [926, 1545, 956, 1564], [1119, 1597, 1158, 1624], [1175, 1600, 1203, 1609], [1219, 1587, 1287, 1615], [1300, 1591, 1364, 1624], [1377, 1587, 1418, 1615], [1423, 1611, 1427, 1623], [374, 1663, 472, 1691], [486, 1663, 527, 1691], [539, 1663, 564, 1691], [577, 1663, 662, 1691], [675, 1672, 705, 1691], [718, 1663, 821, 1691], [835, 1663, 892, 1691], [906, 1672, 921, 1690], [935, 1663, 1058, 1691], [1071, 1663, 1271, 1692], [1288, 1664, 1328, 1691], [1340, 1672, 1462, 1692], [1473, 1663, 1521, 1691], [1533, 1663, 1660, 1700], [1672, 1663, 1770, 1700], [1782, 1673, 1805, 1700], [1818, 1663, 1897, 1691], [1908, 1663, 1956, 1691], [1969, 1663, 2115, 1692], [2127, 1673, 2177, 1700], [375, 1713, 397, 1741], [409, 1713, 433, 1741], [447, 1722, 570, 1741], [572, 1717, 633, 1741], [646, 1713, 731, 1742], [743, 1713, 792, 1741], [804, 1713, 962, 1750], [975, 1713, 1208, 1742], [1219, 1713, 1357, 1750], [982, 1806, 1050, 1861], [1104, 1798, 1121, 1848], [1131, 1803, 1188, 1844], [1202, 1815, 1217, 1833], [1231, 1806, 1269, 1834], [1283, 1823, 1309, 1824], [1323, 1798, 1384, 1844], [1398, 1810, 1426, 1837], [1439, 1803, 1564, 1844], [2097, 1806, 2173, 1841], [374, 1914, 402, 1942], [405, 1914, 541, 1948], [555, 1914, 603, 1942], [614, 1914, 791, 1951], [802, 1911, 877, 1952], [882, 1911, 892, 1952], [907, 1923, 963, 1942], [974, 1914, 1011, 1942], [1024, 1914, 1165, 1951], [1177, 1923, 1211, 1942], [1223, 1914, 1401, 1951], [1414, 1915, 1470, 1948], [1485, 1923, 1573, 1942], [1575, 1914, 1711, 1951], [1728, 1915, 1806, 1942], [1818, 1923, 1864, 1942], [1876, 1914, 1962, 1942], [1976, 1914, 2062, 1951], [2074, 1923, 2114, 1942], [2125, 1914, 2173, 1942], [376, 1964, 558, 2001], [570, 1965, 623, 1992], [636, 1973, 706, 1992], [718, 1968, 748, 1992], [762, 1964, 845, 1992], [857, 1964, 926, 1992], [938, 1964, 988, 1992], [998, 1964, 1157, 2001], [1170, 1964, 1283, 1993], [1296, 1973, 1352, 1992], [1365, 1964, 1429, 1992], [1440, 1964, 1479, 1992], [1490, 1964, 1565, 1992], [1578, 1964, 1625, 1992], [1636, 1964, 1693, 1992], [1707, 1964, 1788, 2001], [1790, 1964, 1891, 1992], [438, 2015, 575, 2043], [586, 2015, 649, 2050], [651, 2015, 716, 2050], [719, 2015, 796, 2043], [808, 2015, 856, 2043], [866, 2015, 1012, 2052], [1024, 2015, 1154, 2052], [1166, 2015, 1350, 2049], [1364, 2015, 1419, 2043], [1432, 2024, 1465, 2043], [1476, 2024, 1522, 2044], [1533, 2015, 1653, 2052], [1664, 2015, 1712, 2043], [1722, 2015, 1847, 2052], [1856, 2015, 1965, 2044], [1978, 2015, 2040, 2049], [2053, 2015, 2173, 2043], [375, 2066, 424, 2094], [435, 2066, 537, 2103], [548, 2066, 737, 2103], [753, 2066, 817, 2094], [829, 2066, 955, 2103], [956, 2066, 1015, 2094], [1024, 2066, 1074, 2094], [1086, 2066, 1149, 2094], [1162, 2075, 1220, 2094], [1230, 2066, 1269, 2094], [1282, 2066, 1363, 2094], [1374, 2066, 1542, 2103], [1554, 2066, 1595, 2103], [1608, 2066, 1776, 2103], [1790, 2066, 1830, 2094], [1841, 2066, 1934, 2103], [1948, 2075, 1965, 2094], [1976, 2066, 2174, 2094], [375, 2121, 517, 2154], [531, 2117, 629, 2145], [641, 2117, 767, 2154], [779, 2117, 827, 2145], [839, 2117, 1018, 2145], [1020, 2117, 1243, 2146], [1254, 2117, 1388, 2145], [1399, 2117, 1423, 2145], [1437, 2117, 1604, 2154], [1615, 2121, 1645, 2145], [1659, 2126, 1675, 2145], [1686, 2117, 1737, 2145], [1748, 2117, 1873, 2154], [1884, 2117, 1915, 2145], [1926, 2117, 1974, 2145], [1987, 2117, 2173, 2154], [376, 2177, 473, 2205], [488, 2168, 545, 2196], [557, 2177, 590, 2196], [603, 2168, 651, 2196], [664, 2168, 867, 2205], [878, 2168, 903, 2196], [916, 2168, 993, 2196], [1005, 2168, 1044, 2205], [1057, 2177, 1144, 2196], [1147, 2177, 1190, 2196], [1193, 2168, 1274, 2196], [1285, 2168, 1405, 2196], [1416, 2168, 1588, 2196], [1602, 2168, 1659, 2196], [1670, 2168, 1817, 2205], [1835, 2168, 1954, 2197], [1966, 2168, 2049, 2196], [2061, 2168, 2173, 2197], [375, 2218, 438, 2246], [451, 2218, 608, 2255], [623, 2218, 692, 2246], [706, 2218, 780, 2247], [793, 2218, 992, 2246], [1005, 2222, 1160, 2255], [1176, 2227, 1225, 2246], [1240, 2218, 1305, 2246], [1321, 2218, 1469, 2246], [1486, 2218, 1525, 2252], [1545, 2218, 1603, 2252], [1626, 2218, 1655, 2246], [1668, 2218, 1791, 2246], [1806, 2218, 1907, 2246], [1921, 2218, 2047, 2255], [2062, 2218, 2110, 2246], [2124, 2218, 2174, 2246], [375, 2269, 521, 2306], [538, 2278, 609, 2297], [625, 2269, 651, 2297], [668, 2269, 759, 2306], [773, 2269, 815, 2306], [831, 2269, 881, 2297], [897, 2269, 982, 2298], [998, 2269, 1034, 2297], [1047, 2269, 1201, 2297], [1218, 2269, 1276, 2297], [1292, 2270, 1404, 2306], [1424, 2269, 1497, 2303], [1516, 2269, 1579, 2297], [1593, 2269, 1721, 2297], [1738, 2278, 1815, 2297], [1830, 2278, 2011, 2297], [2027, 2269, 2173, 2306], [374, 2321, 544, 2348], [559, 2320, 590, 2355], [608, 2326, 634, 2349], [650, 2330, 671, 2356], [688, 2326, 714, 2349], [735, 2320, 773, 2355], [793, 2321, 853, 2348], [865, 2320, 924, 2348], [939, 2320, 1092, 2357], [1104, 2320, 1164, 2348], [1167, 2324, 1247, 2348], [1259, 2320, 1369, 2348], [1382, 2324, 1413, 2348], [1427, 2320, 1477, 2348], [1491, 2320, 1675, 2357], [1689, 2329, 1769, 2354], [1785, 2329, 1820, 2348], [1833, 2329, 1881, 2349], [1894, 2320, 1983, 2348], [1997, 2329, 2038, 2348], [2051, 2320, 2174, 2357], [374, 2371, 512, 2408], [514, 2371, 678, 2408], [438, 2423, 491, 2450], [502, 2431, 558, 2450], [570, 2422, 620, 2450], [633, 2431, 699, 2450], [700, 2426, 787, 2450], [798, 2422, 899, 2459], [902, 2431, 961, 2450], [973, 2422, 1021, 2450], [1033, 2431, 1088, 2450], [1099, 2422, 1261, 2459], [1274, 2422, 1477, 2459], [1491, 2422, 1612, 2459], [1624, 2422, 1688, 2457], [1702, 2422, 1775, 2451], [1787, 2422, 1930, 2450], [1943, 2422, 2030, 2450], [2041, 2426, 2173, 2459], [375, 2472, 475, 2507], [487, 2472, 519, 2507], [532, 2472, 580, 2500], [591, 2472, 638, 2500], [651, 2472, 706, 2507], [718, 2472, 841, 2509], [856, 2472, 912, 2500], [924, 2472, 1063, 2509], [1075, 2472, 1160, 2500], [1172, 2472, 1243, 2500], [1255, 2472, 1391, 2501], [1403, 2472, 1471, 2501], [1485, 2472, 1532, 2500], [1543, 2472, 1591, 2500], [1603, 2476, 1669, 2500], [1686, 2473, 1719, 2500], [1731, 2472, 1872, 2506], [1885, 2481, 1931, 2500], [1943, 2472, 2088, 2501], [2101, 2472, 2174, 2500], [375, 2523, 477, 2560], [489, 2523, 563, 2552], [575, 2532, 592, 2551], [603, 2523, 747, 2551], [758, 2527, 829, 2560], [841, 2523, 877, 2551], [885, 2523, 989, 2551], [1001, 2527, 1032, 2551], [1046, 2532, 1145, 2551], [1158, 2523, 1208, 2551], [1219, 2523, 1365, 2551], [1377, 2523, 1425, 2551], [1437, 2532, 1454, 2551], [1466, 2523, 1580, 2560], [1592, 2523, 1628, 2551], [1637, 2523, 1861, 2557], [1875, 2523, 1966, 2551], [1978, 2523, 1997, 2552], [2010, 2523, 2111, 2552], [2124, 2523, 2174, 2551], [374, 2574, 495, 2602], [510, 2574, 641, 2611], [662, 2575, 716, 2602], [730, 2574, 923, 2602], [937, 2574, 1022, 2602], [1035, 2574, 1155, 2602], [1169, 2574, 1259, 2611], [1273, 2574, 1419, 2602], [1427, 2574, 1565, 2611], [1577, 2574, 1726, 2608], [1743, 2574, 1793, 2602], [1807, 2574, 1978, 2602], [1992, 2574, 2109, 2611], [2125, 2583, 2174, 2602], [376, 2625, 481, 2653], [493, 2625, 524, 2653], [536, 2625, 643, 2662], [655, 2625, 702, 2654], [438, 2676, 502, 2704], [516, 2676, 621, 2704], [636, 2676, 684, 2704], [698, 2676, 748, 2704], [762, 2676, 944, 2713], [959, 2675, 979, 2705], [995, 2685, 1076, 2705], [1090, 2676, 1278, 2704], [1292, 2676, 1334, 2713], [1348, 2676, 1549, 2713], [1563, 2676, 1613, 2704], [1627, 2676, 1869, 2704], [1883, 2676, 1998, 2713], [2013, 2676, 2173, 2704], [375, 2726, 406, 2754], [419, 2726, 522, 2755], [537, 2726, 627, 2755], [640, 2726, 876, 2754], [889, 2726, 914, 2754], [927, 2726, 1020, 2754], [1031, 2735, 1116, 2754], [1128, 2726, 1292, 2763], [1305, 2726, 1375, 2754], [1388, 2726, 1558, 2763], [1572, 2726, 1690, 2754], [1702, 2726, 1738, 2754], [1746, 2726, 1935, 2763], [1948, 2735, 1985, 2754], [1998, 2726, 2174, 2754], [376, 2777, 480, 2805], [492, 2777, 539, 2805], [551, 2777, 600, 2805], [611, 2777, 677, 2805], [690, 2776, 720, 2811], [734, 2786, 781, 2805], [792, 2777, 867, 2805], [880, 2786, 896, 2805], [908, 2777, 1044, 2805], [1056, 2777, 1131, 2806], [1144, 2777, 1254, 2806], [1267, 2781, 1395, 2814], [1410, 2778, 1449, 2811], [1462, 2777, 1492, 2811], [1507, 2781, 1538, 2805], [1550, 2777, 1613, 2805], [1625, 2777, 1674, 2805], [1685, 2777, 1752, 2805], [1762, 2777, 1948, 2814], [1961, 2777, 2072, 2806], [1255, 2935, 1291, 2963], [829, 263, 931, 299], [1063, 262, 1267, 291], [1428, 263, 1609, 290], [828, 353, 1012, 388], [1105, 353, 1225, 381], [1349, 353, 1465, 390], [1477, 353, 1505, 387], [1519, 353, 1619, 390], [1632, 353, 1686, 382], [830, 404, 922, 441], [1097, 404, 1233, 441], [1433, 404, 1502, 433], [1515, 404, 1531, 433], [1550, 412, 1570, 432], [1589, 404, 1605, 433], [829, 455, 966, 483], [1127, 455, 1204, 483], [1447, 455, 1559, 483], [1573, 455, 1590, 484], [829, 506, 964, 543], [1105, 506, 1225, 534], [1360, 506, 1476, 543], [1488, 506, 1516, 540], [1529, 506, 1629, 543], [1641, 506, 1676, 535], [829, 561, 889, 585], [1097, 557, 1233, 594], [1423, 557, 1492, 586], [1507, 557, 1518, 585], [1540, 565, 1560, 585], [1581, 557, 1617, 586], [829, 607, 928, 635], [1090, 607, 1240, 636], [1352, 607, 1421, 636], [1437, 607, 1481, 641], [1495, 607, 1656, 636], [1668, 607, 1687, 635], [829, 662, 955, 686], [1127, 658, 1204, 686], [1447, 658, 1559, 686], [1573, 658, 1590, 687], [828, 709, 973, 746], [1105, 709, 1225, 737], [1318, 709, 1434, 746], [1450, 709, 1516, 743], [1529, 709, 1629, 746], [1641, 709, 1717, 738], [374, 856, 462, 884], [475, 856, 502, 885], [520, 859, 701, 884], [711, 859, 816, 884], [826, 858, 893, 884], [904, 859, 946, 884], [957, 859, 1023, 884], [1034, 862, 1084, 884], [1095, 859, 1191, 892], [1203, 859, 1323, 892], [1336, 858, 1489, 884], [1500, 859, 1566, 884], [1576, 859, 1649, 892], [1660, 859, 1724, 884], [1735, 859, 1779, 884], [1790, 867, 1902, 892], [1913, 867, 1929, 884], [1931, 859, 1985, 884], [1998, 858, 2173, 892], [376, 914, 397, 931], [412, 912, 430, 931], [445, 914, 477, 931], [488, 906, 643, 939], [657, 906, 727, 931], [736, 905, 870, 939], [882, 906, 927, 931], [939, 914, 1013, 931], [1025, 906, 1165, 939], [1176, 906, 1271, 931], [1282, 914, 1298, 931], [1308, 906, 1487, 939], [1498, 906, 1705, 939], [1717, 905, 1749, 931], [1757, 906, 1802, 931], [1814, 906, 1909, 931], [1919, 906, 2018, 931], [2034, 906, 2174, 932], [375, 960, 436, 977], [448, 960, 494, 977], [509, 958, 527, 977], [542, 960, 563, 977], [575, 952, 757, 985], [760, 952, 821, 977], [822, 952, 953, 985], [964, 952, 1088, 977], [1099, 952, 1210, 985], [1222, 956, 1248, 977], [1260, 952, 1325, 977], [1336, 952, 1465, 985], [1475, 951, 1614, 985], [1626, 952, 1668, 977], [1680, 951, 1756, 977], [1767, 952, 1799, 977], [1807, 960, 1822, 977], [1833, 952, 1957, 985], [1968, 952, 2134, 977], [2145, 952, 2176, 977], [376, 999, 420, 1024], [431, 999, 568, 1024], [579, 999, 717, 1024], [729, 999, 855, 1024], [866, 1002, 893, 1024], [903, 999, 948, 1024], [959, 1002, 1066, 1024], [1074, 999, 1157, 1032], [1170, 1000, 1279, 1024], [1291, 999, 1422, 1024], [1435, 999, 1479, 1024], [1490, 999, 1647, 1024], [1659, 999, 1799, 1032], [1810, 999, 1890, 1024], [1901, 999, 1994, 1032], [2005, 1007, 2021, 1024], [2030, 999, 2135, 1032], [2146, 999, 2174, 1024], [376, 1046, 487, 1076], [500, 1046, 621, 1079], [632, 1054, 648, 1071], [658, 1045, 864, 1079], [875, 1045, 1017, 1079], [1028, 1054, 1044, 1071], [1054, 1049, 1147, 1071], [1156, 1045, 1188, 1071], [1197, 1046, 1241, 1071], [1252, 1046, 1387, 1071], [1398, 1046, 1490, 1079], [1501, 1046, 1553, 1071], [1564, 1046, 1651, 1079], [438, 1164, 508, 1201], [520, 1164, 682, 1201], [695, 1164, 871, 1192], [883, 1173, 939, 1192], [951, 1164, 990, 1192], [1001, 1164, 1136, 1201], [1148, 1164, 1212, 1192], [1224, 1164, 1274, 1192], [1287, 1164, 1549, 1192], [1561, 1164, 1798, 1192], [1810, 1164, 1960, 1198], [1973, 1164, 2116, 1193], [2127, 1164, 2175, 1192], [376, 1214, 566, 1251], [577, 1223, 722, 1251], [735, 1223, 781, 1242], [793, 1223, 847, 1242], [859, 1223, 913, 1242], [924, 1214, 1122, 1251], [1135, 1214, 1207, 1242], [1219, 1214, 1267, 1242], [1279, 1214, 1345, 1242], [1356, 1214, 1506, 1251], [1518, 1214, 1649, 1248], [1662, 1214, 1797, 1251], [1810, 1214, 1962, 1242], [1975, 1214, 2173, 1251], [376, 1265, 587, 1300], [604, 1265, 662, 1293], [675, 1265, 725, 1293], [738, 1265, 806, 1293], [819, 1265, 995, 1302], [1009, 1265, 1134, 1293], [1149, 1274, 1261, 1302], [1275, 1265, 1362, 1293], [1375, 1265, 1527, 1294], [1541, 1265, 1622, 1293], [1635, 1265, 1684, 1293], [1698, 1265, 1858, 1299], [1873, 1265, 2065, 1302], [2067, 1274, 2116, 1293], [2118, 1265, 2179, 1293], [374, 1316, 403, 1344], [414, 1316, 473, 1353], [484, 1320, 653, 1353], [664, 1316, 695, 1344], [707, 1316, 944, 1344], [955, 1316, 1148, 1353], [1151, 1316, 1206, 1344], [1218, 1316, 1267, 1344], [1277, 1316, 1347, 1345], [1360, 1316, 1433, 1353], [1446, 1316, 1556, 1344], [1568, 1316, 1653, 1344], [1665, 1316, 1806, 1344], [1817, 1316, 1857, 1344], [1868, 1325, 1923, 1344], [1936, 1320, 1965, 1344], [1976, 1316, 2052, 1344], [2064, 1316, 2176, 1345], [376, 1367, 524, 1395], [547, 1368, 588, 1395], [604, 1367, 699, 1395], [712, 1367, 780, 1401], [797, 1376, 845, 1396], [859, 1367, 924, 1395], [937, 1376, 993, 1395], [1007, 1367, 1119, 1396], [1133, 1367, 1207, 1396], [1225, 1367, 1283, 1396], [1297, 1367, 1452, 1395], [1468, 1367, 1504, 1395], [1515, 1367, 1654, 1404], [1669, 1367, 1825, 1395], [1838, 1376, 1892, 1404], [1907, 1371, 1981, 1404], [1998, 1367, 2046, 1395], [2061, 1376, 2078, 1395], [2092, 1367, 2174, 1404], [376, 1418, 504, 1446], [515, 1418, 552, 1446], [561, 1418, 673, 1447], [686, 1422, 777, 1455], [792, 1418, 850, 1446], [863, 1418, 931, 1446], [944, 1418, 994, 1446], [1006, 1418, 1079, 1446], [1092, 1418, 1243, 1455], [1256, 1418, 1345, 1446], [1358, 1427, 1390, 1446], [1404, 1427, 1442, 1446], [1453, 1418, 1593, 1446], [1605, 1418, 1641, 1446], [1651, 1418, 1701, 1446], [1713, 1418, 1873, 1455], [1890, 1418, 1976, 1446], [1987, 1427, 2015, 1447], [2018, 1418, 2111, 1446], [2124, 1418, 2174, 1446], [376, 1468, 539, 1496], [550, 1468, 678, 1496], [690, 1468, 726, 1496], [735, 1468, 874, 1505], [886, 1468, 1042, 1496], [1055, 1468, 1113, 1496], [1125, 1468, 1317, 1505], [1318, 1468, 1505, 1496], [1517, 1468, 1566, 1496], [1577, 1468, 1679, 1497], [1691, 1468, 1803, 1497], [1815, 1477, 1872, 1496], [1885, 1468, 1991, 1496], [1992, 1477, 2039, 1496], [2049, 1468, 2174, 1496], [376, 1519, 512, 1547], [528, 1523, 558, 1547], [575, 1519, 650, 1547], [665, 1519, 817, 1556], [830, 1519, 931, 1548], [950, 1513, 1040, 1548], [1065, 1519, 1129, 1547], [1143, 1528, 1254, 1547], [1268, 1519, 1317, 1547], [1331, 1519, 1425, 1556], [1441, 1519, 1500, 1547], [1515, 1519, 1541, 1547], [1557, 1519, 1620, 1547], [1634, 1519, 1682, 1547], [1696, 1519, 1793, 1556], [1808, 1519, 1961, 1547], [1976, 1519, 2026, 1547], [2042, 1519, 2173, 1547], [376, 1570, 471, 1599], [484, 1570, 573, 1598], [575, 1579, 652, 1598], [667, 1570, 728, 1598], [741, 1570, 787, 1598], [800, 1570, 881, 1598], [894, 1579, 1112, 1607], [1132, 1570, 1205, 1598], [1219, 1570, 1325, 1598], [1339, 1574, 1370, 1598], [1383, 1570, 1422, 1598], [1436, 1570, 1453, 1599], [1468, 1570, 1624, 1598], [1638, 1570, 1686, 1598], [1699, 1570, 1838, 1607], [1852, 1570, 2007, 1598], [2022, 1579, 2060, 1598], [2077, 1570, 2113, 1599], [2127, 1570, 2175, 1598], [376, 1621, 586, 1658], [603, 1622, 654, 1649], [667, 1621, 736, 1649], [746, 1630, 800, 1649], [811, 1621, 920, 1650], [932, 1621, 979, 1649], [991, 1621, 1064, 1649], [1076, 1621, 1307, 1658], [1320, 1621, 1356, 1649], [1364, 1621, 1412, 1649], [1425, 1621, 1508, 1649], [1520, 1621, 1641, 1655], [1656, 1621, 1713, 1649], [1724, 1621, 1821, 1649], [1835, 1621, 1906, 1649], [1919, 1630, 1935, 1649], [1946, 1621, 2040, 1658], [2051, 1621, 2176, 1649], [376, 1672, 411, 1700], [420, 1672, 505, 1700], [516, 1672, 678, 1706], [691, 1672, 739, 1700], [750, 1672, 942, 1709], [953, 1681, 1108, 1709], [437, 1722, 557, 1759], [570, 1722, 663, 1750], [676, 1722, 757, 1751], [770, 1722, 818, 1750], [830, 1722, 980, 1750], [992, 1722, 1027, 1750], [1036, 1722, 1181, 1759], [1193, 1722, 1293, 1750], [1307, 1722, 1363, 1750], [1375, 1722, 1438, 1751], [1441, 1722, 1509, 1750], [1511, 1722, 1574, 1750], [1586, 1722, 1634, 1750], [1646, 1722, 1739, 1750], [1751, 1722, 1990, 1759], [2007, 1723, 2039, 1750], [2051, 1722, 2178, 1759], [376, 1773, 510, 1810], [523, 1773, 675, 1801], [687, 1782, 770, 1801], [772, 1777, 827, 1801], [839, 1773, 876, 1801], [890, 1773, 1011, 1810], [1022, 1773, 1116, 1801], [1128, 1777, 1155, 1801], [1167, 1773, 1281, 1810], [1294, 1782, 1376, 1801], [1390, 1777, 1524, 1801], [1537, 1773, 1692, 1807], [1707, 1773, 1763, 1801], [1776, 1773, 1839, 1801], [1852, 1773, 1942, 1801], [1954, 1777, 1982, 1801], [1993, 1773, 2173, 1810], [376, 1828, 406, 1852], [422, 1824, 472, 1852], [486, 1824, 560, 1852], [575, 1824, 670, 1853], [684, 1824, 782, 1852], [807, 1825, 861, 1852], [875, 1824, 998, 1861], [1013, 1824, 1071, 1852], [1086, 1824, 1127, 1861], [1142, 1824, 1192, 1852], [1207, 1824, 1270, 1852], [1284, 1824, 1346, 1852], [1360, 1824, 1410, 1852], [1425, 1824, 1523, 1861], [1538, 1824, 1706, 1861], [1721, 1824, 1757, 1852], [1769, 1824, 1908, 1861], [1923, 1824, 2079, 1852], [2094, 1824, 2120, 1852], [2135, 1824, 2173, 1852], [377, 1875, 609, 1903], [611, 1875, 744, 1912], [757, 1879, 786, 1903], [799, 1875, 861, 1903], [873, 1875, 1138, 1912], [1152, 1875, 1295, 1903], [1308, 1875, 1339, 1903], [1351, 1884, 1367, 1903], [1379, 1884, 1448, 1912], [1462, 1875, 1547, 1903], [1560, 1875, 1669, 1903], [1670, 1875, 1731, 1903], [1739, 1875, 1898, 1903], [1916, 1875, 1972, 1903], [1985, 1875, 2009, 1903], [2023, 1875, 2090, 1912], [2103, 1875, 2174, 1904], [377, 1935, 393, 1954], [405, 1926, 493, 1954], [505, 1926, 616, 1954], [617, 1926, 678, 1954], [687, 1926, 771, 1954], [782, 1927, 809, 1954], [812, 1926, 967, 1954], [981, 1935, 1028, 1954], [1040, 1935, 1095, 1954], [1108, 1935, 1255, 1963], [1267, 1930, 1298, 1954], [1310, 1926, 1391, 1963], [1403, 1926, 1466, 1955], [1468, 1926, 1609, 1955], [438, 1978, 494, 2005], [504, 1977, 658, 2005], [670, 1986, 717, 2005], [730, 1977, 794, 2005], [805, 1977, 931, 2014], [943, 1977, 992, 2005], [1003, 1977, 1145, 2005], [1157, 1977, 1376, 2006], [1389, 1977, 1489, 2014], [1491, 1986, 1548, 2005], [1561, 1977, 1668, 2014], [1680, 1977, 1728, 2006], [376, 2084, 457, 2114], [500, 2084, 549, 2113], [561, 2085, 781, 2114], [793, 2084, 902, 2122], [913, 2084, 1167, 2122], [374, 2164, 438, 2192], [451, 2164, 678, 2193], [691, 2163, 800, 2201], [812, 2163, 1065, 2201], [1079, 2164, 1207, 2199], [1224, 2164, 1285, 2198], [1302, 2173, 1359, 2192], [1371, 2164, 1410, 2192], [1422, 2164, 1568, 2201], [1582, 2173, 1614, 2192], [1629, 2173, 1646, 2192], [1657, 2164, 1819, 2201], [1831, 2173, 1902, 2192], [1915, 2164, 1951, 2192], [1961, 2164, 2173, 2192], [374, 2215, 474, 2243], [486, 2215, 535, 2243], [547, 2215, 631, 2252], [643, 2215, 749, 2243], [762, 2214, 795, 2243], [808, 2215, 832, 2243], [846, 2215, 895, 2243], [907, 2215, 1032, 2252], [1044, 2215, 1151, 2243], [1164, 2215, 1185, 2243], [1188, 2215, 1266, 2249], [895, 2293, 982, 2327], [0, 0, 2550, 3300], [1040, 2286, 1107, 2335], [1122, 2310, 1148, 2311], [1161, 2285, 1222, 2331], [1237, 2297, 1265, 2324], [1278, 2290, 1402, 2331], [1418, 2297, 1446, 2324], [1459, 2292, 1525, 2327], [1527, 2283, 1581, 2331], [1588, 2290, 1652, 2331], [438, 2371, 511, 2399], [524, 2371, 665, 2408], [678, 2380, 736, 2399], [748, 2371, 787, 2399], [801, 2371, 908, 2399], [922, 2371, 1132, 2408], [1145, 2371, 1235, 2408], [1249, 2371, 1299, 2399], [1313, 2371, 1454, 2399], [1468, 2371, 1629, 2408], [1643, 2371, 1674, 2399], [1689, 2370, 1798, 2408], [1819, 2371, 1848, 2399], [1862, 2371, 1986, 2408], [2000, 2371, 2061, 2399], [2075, 2371, 2174, 2399], [375, 2422, 513, 2459], [524, 2422, 549, 2450], [562, 2422, 612, 2450], [623, 2431, 682, 2450], [693, 2422, 789, 2459], [800, 2422, 841, 2459], [853, 2422, 902, 2450], [914, 2422, 962, 2450], [975, 2422, 1088, 2451], [1100, 2422, 1135, 2450], [1145, 2422, 1253, 2451], [811, 2499, 910, 2534], [984, 2492, 1050, 2542], [1065, 2516, 1091, 2517], [1105, 2499, 1139, 2527], [1147, 2491, 1179, 2538], [1193, 2503, 1221, 2530], [1234, 2496, 1463, 2537], [1479, 2503, 1507, 2530], [1520, 2498, 1586, 2534], [1588, 2490, 1621, 2538], [1622, 2491, 1735, 2543], [2097, 2499, 2173, 2534], [376, 2577, 516, 2605], [517, 2586, 566, 2605], [568, 2577, 628, 2605], [645, 2577, 707, 2611], [721, 2577, 798, 2605], [811, 2577, 870, 2605], [883, 2577, 987, 2605], [1000, 2577, 1048, 2605], [1060, 2577, 1223, 2614], [1236, 2577, 1353, 2614], [1367, 2577, 1468, 2606], [1482, 2586, 1499, 2605], [1511, 2577, 1593, 2614], [1606, 2577, 1719, 2605], [1720, 2577, 1782, 2605], [1791, 2577, 1890, 2614], [1905, 2586, 1954, 2605], [1965, 2577, 2057, 2606], [2060, 2581, 2122, 2605], [2135, 2577, 2174, 2605], [376, 2628, 558, 2665], [569, 2628, 660, 2656], [672, 2628, 826, 2665], [839, 2628, 879, 2663], [893, 2628, 993, 2656], [1006, 2628, 1101, 2665], [1115, 2628, 1184, 2656], [1196, 2628, 1268, 2656], [1281, 2628, 1330, 2656], [1343, 2632, 1486, 2656], [1497, 2628, 1636, 2665], [1647, 2628, 1688, 2665], [1700, 2628, 1750, 2656], [1761, 2627, 1792, 2662], [1807, 2628, 1991, 2665], [438, 2679, 521, 2707], [533, 2683, 564, 2707], [576, 2679, 626, 2707], [643, 2679, 784, 2713], [798, 2679, 934, 2708], [937, 2679, 1055, 2714], [1068, 2688, 1126, 2707], [1139, 2679, 1204, 2707], [1215, 2679, 1254, 2707], [1268, 2679, 1374, 2707], [1386, 2679, 1427, 2716], [1440, 2679, 1664, 2716], [1676, 2679, 1714, 2707], [1727, 2679, 1937, 2716], [1949, 2679, 2013, 2707], [2025, 2683, 2086, 2708], [2098, 2688, 2174, 2716], [376, 2734, 527, 2767], [543, 2730, 617, 2764], [631, 2730, 779, 2767], [775, 2817, 873, 2846], [878, 2824, 903, 2853], [911, 2805, 1189, 2859], [1207, 2821, 1235, 2830], [1250, 2817, 1347, 2846], [1352, 2824, 1421, 2853], [1434, 2800, 1771, 2859], [1255, 2935, 1295, 2963], [312, 236, 519, 259], [530, 236, 692, 265], [704, 236, 885, 259], [401, 474, 431, 483], [432, 471, 548, 488], [432, 500, 434, 502], [440, 494, 551, 511], [432, 522, 434, 524], [440, 516, 551, 533], [401, 541, 434, 550], [440, 538, 551, 555], [400, 561, 486, 578], [400, 586, 437, 596], [441, 583, 490, 600], [400, 605, 496, 622], [400, 630, 437, 640], [441, 627, 490, 644], [309, 561, 327, 643], [309, 468, 327, 553], [310, 441, 327, 460], [309, 346, 331, 433], [553, 471, 567, 555], [524, 668, 558, 688], [755, 668, 786, 688], [584, 700, 643, 721], [654, 700, 683, 726], [312, 751, 519, 774], [530, 751, 692, 780], [704, 751, 885, 774], [432, 1037, 434, 1039], [440, 1031, 536, 1048], [401, 1056, 434, 1065], [440, 1053, 536, 1070], [400, 1075, 486, 1092], [309, 1076, 327, 1158], [309, 982, 327, 1067], [310, 956, 327, 975], [309, 860, 331, 948], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [338, 1266, 546, 1289], [557, 1266, 710, 1295], [714, 1266, 847, 1289], [446, 1307, 484, 1317], [401, 1504, 434, 1513], [440, 1501, 548, 1518], [432, 1529, 434, 1531], [440, 1523, 551, 1540], [432, 1551, 434, 1554], [440, 1545, 551, 1562], [401, 1571, 434, 1579], [440, 1568, 551, 1585], [400, 1593, 437, 1603], [441, 1590, 486, 1607], [309, 1584, 327, 1666], [309, 1490, 327, 1576], [310, 1464, 327, 1483], [309, 1369, 331, 1456], [553, 1501, 567, 1585], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [361, 1781, 568, 1804], [579, 1781, 741, 1810], [752, 1781, 838, 1804], [401, 2019, 434, 2027], [440, 2016, 567, 2033], [432, 2044, 434, 2046], [440, 2038, 567, 2055], [432, 2066, 434, 2068], [440, 2060, 567, 2077], [401, 2085, 434, 2094], [440, 2082, 567, 2099], [400, 2105, 486, 2122], [400, 2127, 496, 2144], [338, 2151, 357, 2165], [363, 2146, 374, 2156], [383, 2156, 389, 2157], [400, 2149, 496, 2166], [400, 2171, 496, 2188], [309, 2099, 327, 2180], [309, 2005, 327, 2090], [310, 1979, 327, 1998], [309, 1883, 331, 1971], [338, 2027, 357, 2041], [363, 2022, 374, 2032], [977, 236, 1185, 259], [1196, 236, 1358, 265], [1370, 236, 1546, 259], [1067, 474, 1097, 483], [1098, 471, 1214, 488], [1106, 494, 1217, 511], [1106, 516, 1217, 533], [1067, 541, 1100, 550], [1106, 538, 1217, 555], [1066, 561, 1152, 578], [1066, 586, 1103, 596], [1107, 583, 1156, 600], [1066, 605, 1162, 622], [1066, 630, 1103, 640], [1107, 627, 1156, 644], [1219, 471, 1227, 484], [1219, 494, 1227, 507], [1219, 516, 1227, 529], [1219, 538, 1227, 551], [975, 561, 993, 643], [975, 468, 993, 553], [976, 441, 993, 460], [975, 346, 997, 433], [1066, 668, 1100, 688], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [977, 751, 1185, 774], [1196, 751, 1358, 780], [1370, 751, 1551, 774], [1067, 989, 1100, 998], [1106, 986, 1202, 1003], [1106, 1008, 1202, 1025], [975, 1076, 993, 1158], [975, 982, 993, 1067], [976, 956, 993, 975], [975, 860, 997, 948], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1005, 1266, 1212, 1289], [1223, 1266, 1386, 1295], [1397, 1266, 1512, 1295], [1067, 1504, 1100, 1513], [1106, 1501, 1214, 1518], [1106, 1523, 1217, 1540], [1106, 1545, 1217, 1562], [1106, 1568, 1217, 1585], [1066, 1593, 1103, 1603], [1107, 1590, 1152, 1607], [975, 1584, 993, 1666], [975, 1490, 993, 1576], [976, 1464, 993, 1483], [975, 1369, 997, 1456], [1219, 1501, 1227, 1581], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1010, 1781, 1217, 1804], [1228, 1781, 1390, 1810], [1402, 1783, 1513, 1804], [1067, 2019, 1100, 2027], [1106, 2016, 1233, 2033], [1106, 2038, 1233, 2055], [1106, 2060, 1233, 2077], [1067, 2085, 1100, 2094], [1106, 2082, 1233, 2099], [1066, 2105, 1152, 2122], [1066, 2127, 1162, 2144], [1066, 2149, 1162, 2166], [1066, 2171, 1162, 2188], [975, 2099, 993, 2180], [975, 2005, 993, 2090], [976, 1979, 993, 1998], [975, 1883, 997, 1971], [1004, 2035, 1023, 2049], [1029, 2029, 1040, 2039], [1643, 236, 1851, 259], [1862, 236, 2024, 265], [2036, 236, 2217, 259], [1680, 383, 1689, 397], [1695, 378, 1706, 388], [1733, 474, 1766, 483], [1772, 471, 1899, 488], [1772, 494, 1899, 511], [1772, 516, 1899, 533], [1869, 538, 1899, 555], [1641, 561, 1659, 643], [1641, 468, 1659, 553], [1642, 441, 1659, 460], [1641, 346, 1663, 433], [1670, 517, 1706, 537], [1733, 541, 1766, 550], [1772, 538, 1868, 555], [1732, 561, 1818, 578], [1732, 583, 1828, 600], [1732, 605, 1828, 622], [1732, 627, 1828, 644], [1696, 668, 1730, 688], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1691, 752, 1898, 775], [1909, 752, 2071, 781], [2083, 752, 2169, 781], [1641, 1069, 1659, 1151], [1641, 976, 1659, 1061], [1642, 950, 1659, 968], [1641, 854, 1663, 941], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1707, 1266, 1914, 1289], [1925, 1266, 2079, 1295], [2083, 1268, 2151, 1289], [1729, 1310, 1787, 1343], [1733, 1504, 1766, 1513], [1772, 1501, 1868, 1518], [1869, 1501, 1873, 1518], [1869, 1523, 1873, 1540], [1772, 1545, 1873, 1562], [1733, 1571, 1763, 1579], [1764, 1568, 1873, 1585], [1732, 1593, 1769, 1603], [1773, 1590, 1818, 1607], [1641, 1584, 1659, 1666], [1641, 1490, 1659, 1576], [1642, 1464, 1659, 1483], [1641, 1369, 1663, 1456], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1666, 1781, 1873, 1804], [1884, 1781, 2046, 1810], [2059, 1781, 2183, 1810], [1733, 2019, 1766, 2027], [1772, 2016, 1893, 2033], [1772, 2038, 1893, 2055], [1772, 2060, 1893, 2077], [1733, 2085, 1766, 2094], [1772, 2082, 1893, 2099], [1732, 2105, 1818, 2122], [1732, 2127, 1828, 2144], [1732, 2149, 1828, 2166], [1732, 2171, 1828, 2188], [1641, 2099, 1659, 2180], [1641, 2005, 1659, 2090], [1642, 1979, 1659, 1998], [1641, 1883, 1663, 1971], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [376, 2356, 483, 2393], [495, 2356, 544, 2384], [562, 2356, 698, 2384], [710, 2356, 845, 2384], [857, 2360, 888, 2384], [900, 2356, 1050, 2393], [1062, 2365, 1097, 2384], [1110, 2356, 1182, 2384], [1194, 2356, 1230, 2384], [1240, 2356, 1289, 2384], [1301, 2356, 1536, 2384], [1549, 2356, 1667, 2384], [1681, 2356, 1857, 2393], [1868, 2356, 1964, 2384], [1975, 2356, 2177, 2393], [376, 2406, 423, 2434], [434, 2406, 484, 2434], [495, 2406, 636, 2434], [648, 2406, 762, 2443], [776, 2406, 954, 2434], [966, 2406, 996, 2434], [1008, 2406, 1058, 2434], [1070, 2406, 1278, 2443], [438, 2540, 529, 2574], [547, 2544, 578, 2568], [594, 2540, 680, 2568], [696, 2540, 772, 2575], [788, 2549, 836, 2569], [851, 2540, 966, 2577], [982, 2540, 1092, 2568], [1107, 2549, 1167, 2568], [1182, 2540, 1218, 2568], [1230, 2540, 1280, 2568], [1294, 2540, 1455, 2577], [1471, 2530, 1556, 2583], [1574, 2549, 1651, 2577], [1666, 2544, 1821, 2577], [1838, 2540, 1896, 2568], [1911, 2540, 1983, 2568], [1998, 2540, 2089, 2577], [2106, 2540, 2179, 2568], [376, 2591, 585, 2628], [598, 2595, 629, 2619], [642, 2591, 692, 2619], [704, 2591, 822, 2619], [841, 2591, 932, 2620], [946, 2591, 1232, 2628], [1245, 2591, 1271, 2619], [1284, 2591, 1365, 2619], [1378, 2591, 1409, 2619], [1421, 2591, 1527, 2619], [1540, 2591, 1630, 2625], [1644, 2591, 1694, 2619], [1706, 2591, 1919, 2628], [1932, 2591, 1968, 2619], [1979, 2600, 1996, 2619], [2008, 2591, 2175, 2620], [377, 2641, 477, 2669], [489, 2641, 625, 2678], [637, 2641, 710, 2678], [723, 2650, 742, 2669], [744, 2641, 813, 2669], [827, 2641, 932, 2678], [944, 2645, 975, 2669], [987, 2645, 1131, 2678], [1143, 2632, 1229, 2685], [1236, 2641, 1413, 2678], [1426, 2641, 1600, 2678], [1617, 2642, 1670, 2669], [1682, 2650, 1740, 2669], [1751, 2641, 1823, 2669], [1836, 2641, 1933, 2678], [1946, 2641, 2039, 2669], [2050, 2641, 2113, 2669], [2124, 2641, 2174, 2669], [375, 2692, 480, 2720], [494, 2692, 692, 2720], [703, 2692, 734, 2720], [746, 2692, 823, 2720], [836, 2692, 853, 2721], [868, 2692, 955, 2729], [968, 2692, 1166, 2729], [1179, 2696, 1208, 2720], [1221, 2692, 1383, 2721], [1386, 2692, 1463, 2726], [1476, 2701, 1509, 2720], [1522, 2692, 1570, 2720], [1581, 2692, 1731, 2729], [1743, 2692, 1876, 2729], [1890, 2692, 2041, 2720], [2053, 2692, 2174, 2720], [375, 2743, 522, 2780], [535, 2743, 601, 2771], [613, 2743, 701, 2771], [712, 2743, 949, 2771], [961, 2743, 1026, 2772], [1028, 2743, 1091, 2771], [1104, 2743, 1153, 2771], [1164, 2743, 1295, 2780], [1307, 2752, 1444, 2771], [1255, 2935, 1293, 2964], [312, 236, 519, 259], [530, 236, 692, 265], [704, 236, 885, 259], [699, 474, 729, 483], [730, 471, 846, 488], [750, 494, 849, 511], [750, 516, 849, 533], [699, 541, 732, 550], [738, 538, 849, 555], [698, 561, 785, 578], [698, 583, 795, 600], [698, 605, 795, 622], [698, 627, 795, 644], [851, 471, 859, 484], [851, 494, 859, 507], [851, 516, 859, 529], [851, 538, 859, 551], [524, 668, 558, 688], [755, 668, 786, 688], [584, 700, 643, 721], [654, 700, 683, 726], [312, 751, 519, 774], [530, 751, 692, 780], [704, 751, 885, 774], [345, 800, 371, 814], [345, 863, 371, 877], [345, 926, 371, 940], [317, 960, 334, 974], [317, 978, 371, 1007], [364, 1052, 373, 1066], [699, 1056, 729, 1065], [730, 1053, 834, 1070], [698, 1075, 785, 1092], [698, 1098, 795, 1115], [346, 1115, 371, 1129], [698, 1120, 795, 1137], [698, 1142, 795, 1159], [517, 1183, 548, 1202], [738, 1183, 767, 1202], [584, 1215, 643, 1236], [654, 1215, 683, 1241], [338, 1266, 546, 1289], [557, 1266, 710, 1295], [714, 1266, 847, 1289], [364, 1319, 373, 1333], [560, 1318, 615, 1332], [345, 1371, 371, 1385], [364, 1423, 373, 1437], [317, 1468, 334, 1482], [317, 1486, 334, 1499], [345, 1476, 371, 1490], [317, 1501, 335, 1521], [835, 1501, 865, 1518], [364, 1528, 373, 1542], [835, 1523, 865, 1540], [835, 1545, 865, 1562], [345, 1580, 371, 1594], [699, 1571, 732, 1579], [738, 1568, 865, 1585], [357, 1592, 359, 1594], [698, 1590, 785, 1607], [698, 1612, 795, 1629], [364, 1632, 373, 1646], [698, 1634, 795, 1651], [698, 1657, 795, 1674], [527, 1698, 558, 1717], [748, 1698, 777, 1717], [584, 1730, 643, 1751], [654, 1730, 683, 1756], [361, 1781, 568, 1804], [579, 1781, 741, 1810], [752, 1781, 838, 1804], [345, 1936, 371, 1950], [317, 1983, 335, 2036], [699, 2019, 732, 2027], [738, 2016, 834, 2033], [835, 2016, 865, 2033], [835, 2038, 865, 2055], [750, 2060, 865, 2077], [699, 2085, 732, 2094], [738, 2082, 865, 2099], [698, 2105, 785, 2122], [698, 2127, 795, 2144], [698, 2149, 795, 2166], [698, 2171, 795, 2188], [977, 236, 1185, 259], [1196, 236, 1358, 265], [1370, 236, 1546, 259], [1011, 298, 1037, 312], [983, 445, 1001, 498], [1030, 459, 1039, 473], [1365, 474, 1395, 483], [1396, 471, 1512, 488], [1365, 500, 1398, 502], [1404, 494, 1515, 511], [1365, 522, 1398, 524], [1404, 516, 1515, 533], [1365, 541, 1398, 550], [1404, 538, 1515, 555], [1364, 561, 1451, 578], [1364, 583, 1461, 600], [1364, 605, 1461, 622], [1364, 627, 1461, 644], [1517, 471, 1525, 484], [1517, 494, 1525, 507], [1517, 516, 1525, 529], [1517, 538, 1525, 551], [1066, 668, 1100, 688], [1297, 668, 1328, 688], [1525, 668, 1554, 688], [1250, 700, 1309, 721], [1320, 700, 1349, 726], [977, 751, 1185, 774], [1196, 751, 1358, 780], [1370, 751, 1551, 774], [1011, 815, 1037, 829], [1011, 879, 1037, 893], [1011, 942, 1037, 956], [983, 960, 1000, 974], [983, 978, 1001, 1007], [1365, 989, 1398, 998], [1404, 986, 1531, 1003], [983, 1010, 1000, 1013], [1030, 1005, 1039, 1019], [1393, 1014, 1398, 1017], [1404, 1008, 1531, 1025], [1365, 1037, 1398, 1039], [1404, 1031, 1531, 1048], [1365, 1056, 1398, 1065], [1404, 1053, 1531, 1070], [1012, 1068, 1037, 1082], [1364, 1075, 1451, 1092], [1364, 1098, 1461, 1115], [1012, 1131, 1037, 1145], [1364, 1120, 1461, 1137], [1023, 1143, 1025, 1145], [1364, 1142, 1461, 1159], [1164, 1183, 1195, 1202], [1369, 1183, 1398, 1202], [1250, 1215, 1309, 1236], [1320, 1215, 1349, 1241], [1005, 1266, 1212, 1289], [1223, 1266, 1386, 1295], [1397, 1266, 1512, 1295], [983, 1468, 1000, 1499], [983, 1493, 1037, 1521], [1365, 1504, 1398, 1513], [1404, 1501, 1531, 1518], [1365, 1529, 1398, 1531], [1404, 1523, 1531, 1540], [1030, 1552, 1039, 1566], [1365, 1551, 1398, 1554], [1404, 1545, 1531, 1562], [1365, 1571, 1398, 1579], [1404, 1568, 1531, 1585], [1364, 1590, 1451, 1607], [1012, 1612, 1037, 1626], [1364, 1612, 1461, 1629], [1364, 1634, 1461, 1651], [1364, 1657, 1461, 1674], [1012, 1671, 1037, 1685], [1237, 1698, 1268, 1717], [1466, 1698, 1495, 1717], [1250, 1730, 1309, 1751], [1320, 1730, 1349, 1756], [1010, 1781, 1217, 1804], [1228, 1781, 1390, 1810], [1402, 1783, 1513, 1804], [1365, 2019, 1398, 2027], [1404, 2016, 1531, 2033], [1365, 2044, 1398, 2046], [1404, 2038, 1531, 2055], [1393, 2066, 1398, 2068], [1404, 2060, 1531, 2077], [1501, 2082, 1531, 2099], [1030, 2075, 1039, 2089], [1365, 2085, 1398, 2094], [1404, 2082, 1500, 2099], [1364, 2105, 1451, 2122], [1364, 2127, 1461, 2144], [1030, 2152, 1039, 2166], [1364, 2149, 1461, 2166], [1364, 2171, 1461, 2188], [1217, 2212, 1246, 2232], [1439, 2212, 1471, 2232], [1643, 236, 1851, 259], [1862, 236, 2024, 265], [2036, 236, 2217, 259], [1677, 278, 1703, 292], [1677, 343, 1703, 357], [1649, 445, 1666, 459], [1649, 463, 1703, 492], [2031, 474, 2064, 483], [2070, 471, 2197, 488], [1649, 495, 1666, 498], [2070, 494, 2197, 511], [2070, 516, 2197, 533], [1696, 535, 1705, 549], [2031, 541, 2064, 550], [2070, 538, 2197, 555], [2030, 564, 2067, 573], [2071, 561, 2116, 578], [2030, 583, 2127, 600], [1678, 600, 1703, 614], [2030, 605, 2127, 622], [1721, 628, 1733, 657], [2030, 627, 2127, 644], [1696, 668, 1730, 688], [1917, 668, 1948, 688], [2134, 668, 2163, 688], [1916, 700, 1975, 721], [1986, 700, 2015, 726], [1691, 752, 1898, 775], [1909, 752, 2071, 781], [2083, 752, 2169, 781], [2070, 986, 2166, 1003], [2070, 1008, 2166, 1025], [2070, 1031, 2166, 1048], [2031, 1056, 2064, 1065], [2070, 1053, 2166, 1070], [2030, 1075, 2116, 1092], [2030, 1098, 2127, 1115], [2030, 1120, 2127, 1137], [2030, 1142, 2127, 1159], [1816, 1183, 1850, 1202], [2046, 1183, 2077, 1202], [1916, 1215, 1975, 1236], [1986, 1215, 2015, 1241], [1707, 1266, 1914, 1289], [1925, 1266, 2079, 1295], [2083, 1268, 2151, 1289], [1677, 1366, 1703, 1380], [2031, 1504, 2064, 1513], [2070, 1501, 2197, 1518], [2070, 1523, 2197, 1540], [2070, 1545, 2197, 1562], [2031, 1571, 2061, 1579], [2062, 1568, 2197, 1585], [2030, 1593, 2067, 1603], [2071, 1590, 2116, 1607], [2030, 1612, 2127, 1629], [2030, 1634, 2127, 1651], [1678, 1653, 1703, 1667], [1720, 1674, 1728, 1688], [2030, 1657, 2127, 1674], [1751, 1698, 1782, 1717], [1964, 1698, 1993, 1717], [2178, 1698, 2210, 1717], [1916, 1730, 1975, 1751], [1986, 1730, 2015, 1756], [1666, 1781, 1873, 1804], [1884, 1781, 2046, 1810], [2059, 1781, 2183, 1810], [2031, 2019, 2064, 2027], [2070, 2016, 2166, 2033], [2167, 2016, 2197, 2033], [1696, 2039, 1705, 2053], [2070, 2038, 2197, 2055], [2070, 2060, 2197, 2077], [1677, 2081, 1703, 2095], [2031, 2085, 2064, 2094], [2070, 2082, 2197, 2099], [2030, 2105, 2116, 2122], [1696, 2123, 1705, 2137], [2030, 2127, 2127, 2144], [2030, 2149, 2127, 2166], [1678, 2165, 1703, 2179], [2030, 2171, 2127, 2188], [1764, 2212, 1793, 2232], [1986, 2212, 2018, 2232], [2208, 2212, 2239, 2232], [1916, 2244, 1975, 2265], [1986, 2244, 2015, 2270], [376, 2356, 484, 2393], [498, 2356, 547, 2384], [567, 2356, 727, 2384], [742, 2356, 847, 2393], [861, 2360, 892, 2384], [905, 2356, 1002, 2384], [1016, 2356, 1105, 2384], [1120, 2356, 1241, 2391], [1255, 2365, 1291, 2384], [1305, 2356, 1378, 2384], [1392, 2356, 1428, 2384], [1438, 2356, 1488, 2384], [1502, 2356, 1740, 2384], [1753, 2356, 1873, 2384], [1888, 2356, 2066, 2393], [2079, 2356, 2175, 2384], [376, 2406, 576, 2443], [590, 2406, 638, 2434], [649, 2406, 698, 2434], [710, 2406, 850, 2434], [862, 2406, 977, 2443], [990, 2406, 1168, 2434], [1180, 2406, 1211, 2434], [1223, 2406, 1272, 2434], [1284, 2406, 1492, 2443], [376, 2533, 436, 2568], [487, 2533, 734, 2577], [748, 2533, 791, 2568], [802, 2533, 1211, 2577], [1226, 2533, 1292, 2568], [374, 2619, 410, 2646], [409, 2627, 503, 2647], [517, 2618, 604, 2655], [616, 2618, 664, 2646], [675, 2618, 830, 2655], [842, 2618, 1125, 2646], [1137, 2619, 1189, 2646], [1200, 2618, 1376, 2655], [1387, 2622, 1416, 2646], [1430, 2618, 1589, 2655], [1592, 2618, 1746, 2655], [1759, 2618, 1806, 2646], [1816, 2617, 1909, 2647], [1921, 2617, 2095, 2655], [2112, 2618, 2173, 2646], [376, 2668, 529, 2696], [541, 2672, 570, 2696], [583, 2668, 687, 2696], [700, 2668, 778, 2696], [789, 2668, 887, 2705], [890, 2668, 939, 2696], [952, 2668, 1071, 2696], [1089, 2668, 1147, 2705], [1161, 2677, 1177, 2696], [1188, 2668, 1276, 2696], [1289, 2668, 1422, 2696], [1436, 2667, 1457, 2705], [1470, 2668, 1578, 2696], [1591, 2668, 1626, 2696], [1636, 2668, 1696, 2696], [1709, 2678, 1732, 2696], [1748, 2676, 1768, 2696], [1784, 2678, 1818, 2696], [1830, 2668, 1936, 2705], [1949, 2668, 2005, 2696], [2018, 2668, 2106, 2696], [2119, 2677, 2174, 2696], [375, 2719, 413, 2747], [425, 2719, 522, 2748], [523, 2719, 586, 2747], [600, 2728, 616, 2747], [629, 2719, 793, 2748], [804, 2718, 830, 2747], [846, 2725, 867, 2749], [883, 2712, 1043, 2753], [1057, 2728, 1097, 2747], [1109, 2719, 1209, 2747], [1222, 2728, 1238, 2747], [1250, 2719, 1366, 2748], [1379, 2719, 1452, 2747], [1454, 2719, 1562, 2747], [1573, 2728, 1629, 2747], [1640, 2719, 1679, 2747], [1691, 2719, 1822, 2747], [1833, 2719, 1874, 2756], [942, 2810, 1030, 2844], [1415, 2835, 1530, 2854], [1255, 2935, 1295, 2963], [1086, 2803, 1156, 2852], [1169, 2827, 1195, 2828], [1211, 2802, 1291, 2848], [1305, 2814, 1333, 2841], [1346, 2809, 1394, 2839], [1395, 2801, 1449, 2839], [1540, 2807, 1604, 2848], [2097, 2810, 2173, 2845], [306, 2234, 323, 2324], [306, 2131, 323, 2226], [308, 2102, 323, 2123], [306, 1995, 328, 2094], [337, 2059, 345, 2075], [348, 2059, 358, 2075], [337, 2188, 345, 2204], [348, 2188, 358, 2204], [360, 2179, 374, 2190], [337, 2316, 345, 2332], [348, 2316, 358, 2332], [360, 2308, 374, 2319], [628, 262, 785, 299], [862, 263, 967, 290], [978, 262, 1143, 290], [1194, 262, 1330, 290], [1341, 262, 1377, 290], [1386, 262, 1496, 290], [1549, 262, 1631, 290], [1643, 262, 1755, 290], [1755, 271, 1799, 290], [1801, 262, 1921, 299], [627, 353, 779, 382], [915, 353, 973, 382], [992, 361, 1012, 381], [1031, 353, 1090, 382], [1326, 353, 1366, 382], [1661, 353, 1678, 382], [1692, 353, 1810, 381], [627, 404, 813, 441], [919, 404, 974, 433], [992, 412, 1012, 432], [1034, 404, 1090, 432], [1316, 404, 1376, 433], [1645, 404, 1694, 433], [1707, 404, 1826, 432], [627, 455, 742, 491], [915, 455, 975, 484], [992, 463, 1012, 483], [1030, 455, 1089, 484], [1327, 455, 1366, 484], [1639, 455, 1706, 483], [1718, 455, 1836, 483], [654, 602, 744, 630], [756, 603, 784, 630], [802, 605, 864, 630], [875, 605, 970, 630], [982, 604, 1013, 630], [1022, 605, 1104, 630], [1116, 613, 1250, 638], [1253, 605, 1342, 630], [1353, 605, 1381, 630], [1392, 605, 1436, 630], [1447, 605, 1528, 630], [1539, 605, 1683, 638], [1694, 605, 1882, 638], [374, 735, 476, 764], [495, 734, 535, 770], [554, 735, 580, 763], [597, 735, 647, 763], [664, 735, 814, 763], [831, 735, 921, 772], [938, 735, 1039, 769], [1059, 735, 1117, 763], [1134, 725, 1214, 779], [1216, 760, 1295, 779], [1323, 748, 1351, 757], [1374, 726, 1438, 779], [1457, 735, 1531, 764], [1545, 744, 1570, 771], [1593, 748, 1621, 757], [1648, 732, 1829, 773], [1859, 735, 2058, 772], [2074, 735, 2110, 763], [2124, 735, 2174, 763], [376, 786, 454, 814], [468, 786, 543, 821], [557, 786, 583, 814], [596, 786, 724, 823], [736, 786, 789, 814], [801, 786, 1012, 823], [1024, 786, 1060, 814], [1070, 786, 1120, 814], [1132, 795, 1209, 823], [1222, 790, 1368, 823], [1383, 786, 1485, 815], [1498, 795, 1555, 814], [1566, 786, 1606, 814], [1618, 786, 1699, 814], [1711, 786, 1801, 823], [1815, 786, 1865, 814], [1877, 786, 2174, 814], [376, 836, 505, 873], [518, 836, 618, 871], [632, 836, 792, 873], [802, 836, 961, 873], [973, 836, 1003, 864], [1016, 836, 1081, 865], [1096, 836, 1123, 864], [438, 888, 475, 915], [473, 887, 592, 924], [605, 887, 661, 915], [675, 887, 742, 915], [754, 891, 783, 915], [796, 887, 846, 915], [857, 887, 947, 916], [961, 896, 1110, 924], [1112, 887, 1267, 915], [1279, 887, 1309, 915], [1322, 887, 1411, 915], [1423, 888, 1449, 915], [1467, 887, 1518, 915], [1530, 887, 1566, 915], [1575, 887, 1624, 915], [1637, 896, 1800, 924], [1815, 896, 1863, 915], [1875, 887, 1963, 915], [1975, 887, 2010, 915], [2019, 887, 2174, 924], [375, 938, 479, 975], [495, 938, 601, 975], [615, 938, 653, 967], [665, 938, 696, 966], [708, 938, 755, 966], [768, 938, 928, 975], [941, 938, 1039, 966], [1053, 947, 1120, 966], [1121, 947, 1167, 966], [1170, 938, 1242, 966], [1255, 938, 1363, 966], [1377, 938, 1412, 966], [1421, 938, 1469, 966], [1482, 938, 1632, 967], [1646, 947, 1802, 975], [1819, 939, 1870, 966], [1883, 938, 1967, 966], [1980, 947, 2068, 975], [2080, 938, 2173, 966], [376, 989, 412, 1017], [423, 989, 508, 1017], [523, 998, 691, 1026], [705, 989, 746, 1026], [761, 989, 906, 1026], [920, 989, 1065, 1026], [1078, 989, 1165, 1017], [1179, 989, 1253, 1018], [1267, 998, 1337, 1017], [1352, 998, 1442, 1017], [1456, 989, 1514, 1017], [1528, 989, 1669, 1017], [1684, 989, 1764, 1023], [1779, 989, 1869, 1026], [1884, 989, 2029, 1017], [2045, 990, 2173, 1018], [376, 1040, 519, 1068], [537, 1040, 620, 1068], [632, 1049, 679, 1068], [692, 1040, 776, 1069], [787, 1040, 925, 1077], [936, 1040, 985, 1069], [998, 1040, 1046, 1068], [1057, 1040, 1131, 1068], [1144, 1049, 1302, 1077], [1317, 1040, 1465, 1077], [1478, 1040, 1527, 1068], [1538, 1040, 1766, 1077], [1779, 1040, 1866, 1069], [1879, 1049, 1912, 1068], [1926, 1049, 1956, 1068], [1970, 1044, 1999, 1068], [2012, 1040, 2174, 1068], [376, 1090, 439, 1119], [441, 1091, 497, 1118], [499, 1090, 571, 1118], [582, 1090, 802, 1118], [815, 1090, 917, 1127], [934, 1091, 971, 1118], [969, 1094, 1053, 1118], [1065, 1090, 1112, 1118], [1125, 1090, 1280, 1127], [1294, 1090, 1475, 1127], [1488, 1090, 1586, 1119], [1597, 1090, 1672, 1119], [1683, 1090, 1760, 1118], [1770, 1090, 1940, 1127], [1954, 1090, 2072, 1127], [2084, 1090, 2114, 1118], [2126, 1090, 2173, 1118], [376, 1141, 524, 1169], [536, 1141, 583, 1169], [596, 1141, 715, 1178], [728, 1141, 849, 1175], [862, 1141, 934, 1169], [947, 1141, 996, 1169], [1008, 1141, 1080, 1178], [1092, 1141, 1251, 1178], [1263, 1141, 1388, 1169], [1400, 1141, 1550, 1169], [1562, 1141, 1701, 1178], [439, 1235, 455, 1251], [479, 1225, 604, 1253], [616, 1225, 767, 1253], [778, 1225, 908, 1262], [921, 1224, 949, 1262], [963, 1225, 1066, 1260], [439, 1303, 455, 1319], [479, 1293, 590, 1330], [603, 1293, 735, 1327], [748, 1293, 848, 1321], [860, 1293, 885, 1321], [897, 1293, 991, 1321], [1003, 1302, 1043, 1321], [1055, 1293, 1150, 1321], [1152, 1292, 1228, 1330], [1242, 1293, 1336, 1328], [439, 1370, 455, 1386], [479, 1360, 541, 1388], [553, 1360, 718, 1388], [729, 1360, 798, 1389], [811, 1360, 959, 1397], [969, 1360, 1009, 1397], [1021, 1360, 1166, 1389], [1179, 1360, 1236, 1388], [1248, 1360, 1305, 1388], [1320, 1360, 1393, 1394], [1407, 1360, 1505, 1389], [1517, 1360, 1643, 1388], [1657, 1369, 1693, 1388], [1705, 1360, 1959, 1397], [1971, 1360, 2018, 1388], [2030, 1360, 2076, 1389], [2089, 1360, 2177, 1397], [479, 1411, 545, 1439], [560, 1411, 679, 1448], [692, 1420, 708, 1439], [720, 1411, 971, 1440], [983, 1411, 1103, 1440], [1115, 1411, 1151, 1439], [1161, 1411, 1281, 1440], [376, 1496, 433, 1523], [444, 1495, 519, 1523], [532, 1496, 607, 1523], [622, 1495, 680, 1523], [694, 1495, 791, 1523], [793, 1496, 870, 1524], [873, 1495, 994, 1532], [1006, 1495, 1078, 1523], [1079, 1504, 1144, 1523], [1147, 1504, 1196, 1523], [1198, 1495, 1389, 1523], [1403, 1495, 1575, 1532], [1592, 1495, 1638, 1523], [1652, 1496, 1706, 1523], [1721, 1495, 1827, 1523], [1848, 1496, 1901, 1523], [1915, 1499, 1996, 1523], [2010, 1495, 2075, 1523], [2087, 1495, 2175, 1532], [376, 1550, 427, 1574], [439, 1546, 499, 1574], [511, 1546, 596, 1574], [607, 1546, 707, 1583], [718, 1546, 877, 1583], [890, 1546, 1027, 1574], [1041, 1555, 1124, 1574], [1137, 1546, 1293, 1574], [1305, 1546, 1353, 1574], [1364, 1546, 1520, 1574], [1532, 1546, 1594, 1574], [1607, 1546, 1656, 1574], [1668, 1546, 1945, 1574], [1947, 1546, 2086, 1583], [2101, 1546, 2174, 1574], [377, 1606, 408, 1625], [422, 1597, 570, 1626], [585, 1597, 643, 1625], [656, 1597, 940, 1626], [952, 1597, 1102, 1625], [1121, 1598, 1258, 1626], [1259, 1597, 1317, 1625], [1329, 1597, 1379, 1625], [1392, 1597, 1469, 1634], [1481, 1597, 1517, 1625], [1527, 1606, 1583, 1625], [1595, 1597, 1697, 1634], [1710, 1597, 1872, 1634], [1885, 1597, 1994, 1625], [2007, 1606, 2055, 1626], [2068, 1597, 2108, 1625], [2121, 1601, 2175, 1625], [376, 1647, 464, 1675], [475, 1647, 557, 1675], [569, 1656, 600, 1675], [613, 1647, 694, 1684], [706, 1647, 827, 1675], [841, 1647, 888, 1675], [899, 1647, 956, 1675], [968, 1647, 1113, 1684], [1130, 1647, 1158, 1675], [1171, 1656, 1254, 1675], [1265, 1647, 1441, 1675], [1453, 1647, 1560, 1675], [1571, 1647, 1666, 1684], [1677, 1647, 1716, 1675], [1728, 1651, 1757, 1675], [1770, 1647, 1878, 1675], [1891, 1647, 2131, 1684], [2143, 1651, 2173, 1675], [376, 1698, 515, 1735], [528, 1698, 728, 1732], [742, 1698, 796, 1726], [809, 1698, 884, 1726], [898, 1707, 936, 1726], [948, 1698, 1109, 1726], [1120, 1698, 1175, 1726], [1189, 1702, 1242, 1726], [1253, 1698, 1333, 1726], [1346, 1698, 1565, 1735], [1578, 1707, 1612, 1726], [1624, 1698, 1778, 1735], [1792, 1707, 1824, 1726], [1838, 1698, 1883, 1726], [1897, 1707, 1929, 1726], [1943, 1707, 1990, 1727], [2002, 1698, 2101, 1727], [2120, 1699, 2174, 1726], [374, 1749, 473, 1778], [486, 1749, 548, 1777], [561, 1749, 619, 1777], [631, 1753, 661, 1777], [673, 1753, 741, 1777], [753, 1749, 813, 1777], [824, 1758, 869, 1778], [880, 1749, 955, 1777], [967, 1749, 1140, 1777], [1153, 1749, 1310, 1786], [1323, 1749, 1370, 1777], [1382, 1749, 1515, 1786], [1528, 1749, 1677, 1777], [1689, 1749, 1809, 1777], [1821, 1753, 1850, 1777], [1864, 1758, 1880, 1777], [1891, 1749, 2173, 1777], [377, 1800, 493, 1837], [506, 1800, 646, 1829], [659, 1800, 732, 1828], [744, 1800, 810, 1828], [821, 1800, 846, 1828], [859, 1800, 1000, 1837], [1013, 1800, 1070, 1828], [1082, 1800, 1148, 1828], [1162, 1809, 1209, 1828], [1221, 1800, 1348, 1828], [1360, 1804, 1391, 1828], [1403, 1800, 1490, 1828], [1503, 1809, 1543, 1828], [1555, 1800, 1680, 1828], [1692, 1800, 1842, 1828], [1854, 1800, 1992, 1837], [433, 1898, 576, 1930], [590, 1898, 748, 1930], [762, 1898, 901, 1923], [1088, 1898, 1231, 1930], [1244, 1898, 1403, 1930], [1417, 1898, 1578, 1930], [1785, 1898, 1928, 1930], [1942, 1898, 2100, 1930], [2116, 1898, 2212, 1930], [390, 1943, 572, 1966], [574, 1958, 656, 1987], [1296, 1973, 1321, 1989], [1003, 2063, 1011, 2079], [1014, 2063, 1024, 2079], [1003, 2192, 1011, 2208], [1014, 2192, 1024, 2208], [1026, 2184, 1040, 2195], [972, 2234, 989, 2324], [972, 2131, 989, 2226], [974, 2102, 989, 2123], [972, 1995, 994, 2094], [1638, 2234, 1655, 2324], [1638, 2131, 1655, 2226], [1640, 2102, 1655, 2123], [1638, 1995, 1660, 2094], [396, 2307, 438, 2318], [442, 2304, 499, 2323], [913, 2302, 928, 2326], [1062, 2307, 1104, 2318], [1108, 2304, 1165, 2323], [1577, 2299, 1592, 2324], [1669, 2305, 1690, 2321], [1728, 2307, 1770, 2318], [1774, 2304, 1831, 2323], [2242, 2294, 2259, 2324], [411, 2325, 432, 2345], [453, 2327, 572, 2343], [923, 2327, 935, 2342], [1003, 2322, 1024, 2338], [1077, 2325, 1098, 2345], [1119, 2327, 1238, 2343], [1589, 2326, 1608, 2356], [1743, 2325, 1764, 2345], [1785, 2327, 1904, 2343], [2255, 2326, 2274, 2355], [396, 2352, 493, 2367], [932, 2344, 951, 2373], [1062, 2352, 1159, 2367], [1605, 2357, 1624, 2381], [1728, 2352, 1825, 2367], [2271, 2357, 2283, 2372], [2279, 2373, 2290, 2381], [569, 2387, 633, 2420], [802, 2387, 831, 2412], [1203, 2387, 1299, 2420], [1434, 2387, 1464, 2412], [1816, 2387, 1845, 2412], [1962, 2417, 1965, 2420], [2048, 2387, 2078, 2412], [609, 2418, 658, 2440], [662, 2417, 720, 2444], [1275, 2418, 1324, 2440], [1328, 2417, 1386, 2444], [1941, 2418, 1990, 2440], [1994, 2417, 2052, 2444], [375, 2532, 480, 2569], [492, 2532, 539, 2561], [557, 2532, 688, 2560], [701, 2532, 832, 2560], [844, 2536, 873, 2560], [886, 2532, 1032, 2569], [1043, 2541, 1061, 2560], [1064, 2532, 1159, 2560], [1171, 2532, 1207, 2560], [1216, 2532, 1263, 2560], [1275, 2532, 1431, 2569], [1445, 2532, 1559, 2561], [1572, 2532, 1742, 2569], [1754, 2532, 1847, 2560], [1858, 2532, 2055, 2569], [2068, 2532, 2115, 2560], [2126, 2532, 2173, 2560], [376, 2583, 516, 2611], [528, 2583, 618, 2612], [631, 2592, 796, 2620], [809, 2583, 987, 2611], [999, 2583, 1030, 2611], [1042, 2583, 1091, 2611], [1103, 2583, 1311, 2620], [439, 2684, 590, 2721], [602, 2688, 631, 2712], [644, 2693, 699, 2712], [709, 2684, 848, 2721], [861, 2684, 960, 2721], [972, 2684, 1130, 2721], [1143, 2684, 1351, 2721], [1365, 2693, 1411, 2712], [1422, 2693, 1474, 2712], [1486, 2684, 1535, 2712], [1548, 2684, 1721, 2721], [1733, 2684, 1827, 2712], [1839, 2684, 2029, 2721], [2041, 2684, 2089, 2712], [2100, 2684, 2174, 2712], [374, 2734, 466, 2762], [482, 2743, 635, 2771], [650, 2734, 708, 2762], [723, 2734, 883, 2762], [898, 2734, 935, 2762], [950, 2734, 1045, 2763], [1060, 2734, 1118, 2762], [1132, 2734, 1256, 2762], [1271, 2734, 1408, 2762], [1422, 2738, 1453, 2762], [1468, 2734, 1518, 2762], [1532, 2734, 1660, 2771], [1674, 2734, 1826, 2771], [1840, 2734, 1929, 2762], [1943, 2734, 1980, 2762], [1991, 2734, 2041, 2762], [2056, 2738, 2175, 2762], [377, 2785, 508, 2813], [521, 2789, 550, 2813], [561, 2785, 636, 2813], [648, 2785, 785, 2813], [797, 2785, 925, 2822], [938, 2785, 1013, 2813], [1024, 2785, 1193, 2813], [1209, 2785, 1309, 2822], [1321, 2785, 1371, 2813], [1382, 2785, 1542, 2822], [1555, 2785, 1580, 2813], [1593, 2785, 1642, 2813], [1654, 2785, 1877, 2814], [1889, 2785, 2021, 2819], [2035, 2785, 2114, 2813], [2115, 2785, 2173, 2813], [1255, 2935, 1293, 2964], [408, 240, 556, 273], [571, 240, 735, 273], [750, 240, 893, 266], [1063, 240, 1210, 273], [1225, 240, 1390, 273], [1404, 240, 1570, 273], [1761, 240, 1909, 273], [1924, 240, 2089, 273], [2104, 240, 2205, 273], [476, 663, 505, 683], [771, 663, 815, 675], [819, 660, 878, 680], [1004, 664, 1013, 681], [1134, 658, 1168, 681], [1437, 663, 1481, 675], [1485, 660, 1544, 680], [1808, 663, 1837, 683], [2103, 663, 2147, 675], [2151, 660, 2210, 680], [410, 681, 474, 713], [788, 682, 809, 703], [840, 685, 953, 701], [1074, 680, 1132, 709], [1454, 682, 1475, 703], [0, 0, 2550, 3300], [1497, 685, 1619, 701], [1747, 681, 1806, 710], [2120, 682, 2141, 703], [0, 0, 2550, 3300], [2163, 685, 2285, 701], [368, 710, 408, 735], [771, 711, 825, 726], [832, 710, 872, 726], [1033, 707, 1073, 734], [1437, 711, 1491, 726], [1498, 710, 1537, 726], [1700, 707, 1745, 734], [2103, 711, 2157, 726], [2164, 710, 2203, 726], [363, 733, 366, 737], [574, 747, 580, 758], [815, 747, 821, 758], [1003, 732, 1032, 749], [1206, 747, 1212, 758], [1446, 747, 1452, 758], [1669, 732, 1698, 749], [1817, 747, 1823, 758], [2058, 747, 2064, 758], [550, 755, 616, 781], [791, 755, 812, 772], [1182, 755, 1204, 772], [1280, 778, 1282, 781], [1422, 755, 1444, 772], [1793, 755, 1815, 772], [1946, 778, 1948, 781], [2034, 755, 2056, 772], [591, 779, 642, 802], [647, 778, 706, 806], [1257, 779, 1308, 802], [1313, 778, 1372, 806], [1923, 779, 1974, 802], [1979, 778, 2038, 806], [376, 835, 484, 872], [502, 835, 552, 863], [581, 835, 741, 863], [761, 835, 866, 872], [884, 839, 915, 863], [934, 835, 1030, 863], [1049, 835, 1138, 863], [1158, 835, 1278, 870], [1298, 844, 1333, 863], [1352, 835, 1425, 863], [1443, 835, 1479, 863], [1495, 835, 1545, 863], [1563, 835, 1725, 872], [1745, 835, 1863, 864], [1883, 835, 2061, 872], [2079, 835, 2175, 863], [376, 886, 576, 923], [590, 886, 638, 914], [649, 886, 698, 914], [710, 886, 850, 914], [862, 886, 953, 915], [966, 895, 1130, 923], [1143, 886, 1321, 914], [1334, 886, 1364, 914], [1376, 886, 1426, 914], [1437, 886, 1646, 923], [376, 1019, 595, 1047], [610, 1019, 668, 1047], [682, 1028, 717, 1047], [730, 1028, 778, 1048], [791, 1019, 864, 1056], [876, 1023, 978, 1056], [990, 1019, 1040, 1047], [1053, 1019, 1126, 1047], [1138, 1019, 1278, 1056], [1292, 1019, 1340, 1047], [1352, 1019, 1390, 1047], [1404, 1019, 1606, 1047], [1625, 1019, 1689, 1047], [1702, 1019, 1830, 1056], [1843, 1019, 1995, 1056], [2008, 1019, 2097, 1047], [2110, 1028, 2173, 1048], [376, 1070, 531, 1098], [542, 1070, 582, 1107], [594, 1070, 720, 1107], [734, 1070, 772, 1098], [784, 1070, 905, 1098], [908, 1070, 980, 1098], [993, 1079, 1009, 1098], [1020, 1079, 1090, 1107], [1103, 1070, 1182, 1107], [1194, 1070, 1304, 1098], [1305, 1079, 1348, 1098], [1351, 1070, 1524, 1098], [1539, 1070, 1595, 1098], [1607, 1070, 1707, 1107], [1720, 1070, 1768, 1098], [1781, 1070, 1939, 1098], [1951, 1070, 2036, 1099], [2049, 1070, 2084, 1098], [2093, 1070, 2175, 1098], [377, 1121, 423, 1149], [440, 1121, 511, 1149], [523, 1121, 677, 1158], [689, 1121, 738, 1149], [749, 1121, 828, 1158], [842, 1121, 947, 1149], [959, 1121, 989, 1149], [1001, 1121, 1123, 1158], [1136, 1121, 1246, 1150], [1263, 1122, 1352, 1149], [1363, 1121, 1445, 1149], [1456, 1121, 1506, 1149], [1517, 1121, 1675, 1158], [1688, 1121, 1894, 1150], [1908, 1130, 1956, 1149], [1968, 1121, 2004, 1149], [2012, 1121, 2177, 1150], [439, 1215, 455, 1231], [479, 1205, 649, 1242], [661, 1205, 711, 1233], [722, 1209, 838, 1242], [851, 1205, 1000, 1233], [1013, 1205, 1044, 1233], [1056, 1205, 1106, 1233], [1118, 1205, 1219, 1242], [1231, 1205, 1393, 1242], [1406, 1205, 1618, 1242], [1632, 1205, 1765, 1233], [1779, 1205, 1905, 1242], [1918, 1205, 2043, 1233], [2045, 1205, 2095, 1240], [2107, 1205, 2175, 1233], [480, 1256, 577, 1284], [589, 1256, 636, 1284], [648, 1256, 763, 1293], [776, 1265, 847, 1293], [860, 1260, 996, 1284], [1009, 1256, 1164, 1284], [439, 1337, 455, 1353], [479, 1327, 540, 1355], [552, 1327, 672, 1355], [683, 1327, 722, 1364], [735, 1327, 879, 1356], [892, 1327, 947, 1355], [959, 1327, 1017, 1355], [1029, 1327, 1114, 1364], [1125, 1327, 1262, 1364], [1276, 1327, 1453, 1364], [1466, 1327, 1619, 1361], [1632, 1327, 1689, 1355], [1701, 1331, 1730, 1355], [1742, 1327, 1790, 1355], [1802, 1327, 1926, 1355], [1939, 1327, 2174, 1364], [479, 1378, 501, 1406], [512, 1387, 590, 1406], [439, 1460, 455, 1476], [479, 1450, 604, 1478], [616, 1450, 767, 1478], [778, 1450, 908, 1487], [920, 1450, 945, 1478], [958, 1450, 1008, 1478], [1019, 1450, 1124, 1478], [1135, 1454, 1166, 1478], [1179, 1450, 1302, 1479], [1315, 1459, 1331, 1478], [1342, 1450, 1534, 1487], [1548, 1450, 1686, 1478], [439, 1531, 455, 1547], [479, 1521, 683, 1549], [694, 1521, 837, 1549], [847, 1521, 927, 1558], [935, 1525, 964, 1549], [975, 1530, 1175, 1558], [1185, 1521, 1221, 1549], [1227, 1521, 1275, 1549], [1285, 1522, 1357, 1549], [1367, 1530, 1400, 1549], [1402, 1521, 1519, 1549], [1529, 1521, 1559, 1549], [1567, 1521, 1660, 1549], [1669, 1521, 1761, 1550], [1770, 1521, 1855, 1549], [1858, 1521, 1928, 1549], [1936, 1521, 1984, 1549], [1994, 1521, 2175, 1558], [480, 1572, 538, 1600], [551, 1572, 668, 1608], [681, 1572, 822, 1600], [839, 1572, 912, 1600], [923, 1572, 1004, 1600], [1017, 1572, 1080, 1600], [1091, 1572, 1141, 1600], [1153, 1572, 1316, 1609], [1328, 1572, 1432, 1600], [1444, 1572, 1520, 1600], [1533, 1572, 1564, 1600], [1576, 1572, 1635, 1600], [1648, 1572, 1837, 1609], [1848, 1581, 1919, 1609], [1931, 1576, 1985, 1600], [1995, 1572, 2034, 1600], [2046, 1572, 2174, 1609], [479, 1623, 528, 1651], [541, 1623, 626, 1651], [639, 1623, 713, 1651], [728, 1623, 764, 1651], [776, 1623, 901, 1660], [917, 1623, 1037, 1657], [1054, 1632, 1139, 1651], [1154, 1623, 1309, 1651], [1324, 1623, 1486, 1660], [1501, 1623, 1620, 1651], [1636, 1623, 1758, 1651], [1772, 1623, 1804, 1651], [1817, 1623, 1867, 1651], [1882, 1623, 1980, 1660], [1993, 1623, 2173, 1660], [479, 1674, 634, 1702], [652, 1675, 756, 1702], [767, 1683, 814, 1702], [826, 1674, 865, 1702], [878, 1678, 929, 1702], [941, 1674, 1031, 1702], [1043, 1674, 1132, 1703], [1143, 1674, 1249, 1702], [1262, 1674, 1292, 1702], [1304, 1678, 1393, 1702], [1407, 1674, 1442, 1702], [1451, 1674, 1544, 1703], [1556, 1674, 1675, 1711], [1688, 1674, 1739, 1702], [1747, 1674, 1809, 1711], [1821, 1674, 1851, 1702], [1864, 1674, 1982, 1711], [1995, 1674, 2052, 1702], [2065, 1674, 2173, 1702], [479, 1724, 639, 1761], [651, 1724, 753, 1752], [765, 1733, 831, 1752], [832, 1724, 1032, 1761], [438, 1808, 499, 1836], [512, 1808, 577, 1837], [578, 1808, 693, 1845], [707, 1808, 737, 1836], [748, 1808, 854, 1845], [867, 1808, 905, 1836], [919, 1808, 982, 1836], [996, 1808, 1079, 1836], [1090, 1808, 1159, 1836], [1170, 1808, 1243, 1836], [1255, 1808, 1378, 1836], [1390, 1808, 1540, 1836], [1551, 1808, 1680, 1845], [1693, 1808, 1750, 1836], [1762, 1808, 1856, 1836], [1857, 1808, 2028, 1845], [2041, 1808, 2176, 1843], [376, 1868, 524, 1896], [536, 1863, 567, 1887], [579, 1859, 751, 1896], [763, 1859, 911, 1887], [923, 1859, 954, 1887], [965, 1859, 1106, 1896], [1122, 1859, 1294, 1893], [1308, 1859, 1356, 1887], [1367, 1859, 1417, 1887], [1428, 1868, 1560, 1896], [1571, 1859, 1607, 1887], [1617, 1859, 1708, 1887], [1720, 1859, 1881, 1896], [1893, 1860, 1968, 1887], [1981, 1868, 2065, 1887], [2067, 1863, 2124, 1887], [2135, 1859, 2174, 1887], [376, 1910, 425, 1938], [437, 1910, 505, 1938], [517, 1910, 634, 1944], [647, 1910, 752, 1938], [765, 1910, 813, 1938], [826, 1919, 912, 1938], [924, 1919, 1034, 1938], [1047, 1919, 1064, 1938], [1074, 1910, 1149, 1947], [1161, 1910, 1271, 1947], [1284, 1910, 1320, 1938], [1331, 1919, 1477, 1947], [1490, 1910, 1516, 1938], [1528, 1910, 1677, 1947], [1691, 1910, 1739, 1938], [1751, 1910, 1853, 1939], [1865, 1910, 2000, 1938], [2013, 1910, 2123, 1938], [2135, 1910, 2174, 1938], [375, 1961, 534, 1998], [375, 2075, 763, 2119], [376, 2151, 430, 2188], [445, 2160, 662, 2197], [664, 2160, 795, 2197], [807, 2160, 949, 2188], [962, 2164, 1086, 2197], [1097, 2160, 1177, 2188], [1189, 2160, 1309, 2197], [1322, 2164, 1422, 2197], [1434, 2160, 1852, 2194], [1866, 2160, 2177, 2194], [377, 2210, 656, 2239], [670, 2210, 962, 2244], [976, 2210, 1284, 2239], [1297, 2210, 1355, 2238], [1367, 2210, 1762, 2239], [1775, 2210, 2097, 2245], [2108, 2210, 2175, 2245], [376, 2261, 483, 2298], [495, 2261, 545, 2289], [557, 2261, 629, 2298], [640, 2261, 746, 2298], [759, 2261, 880, 2298], [892, 2265, 923, 2289], [935, 2261, 985, 2289], [997, 2261, 1116, 2298], [1128, 2261, 1164, 2289], [1173, 2261, 1232, 2289], [1244, 2261, 1437, 2298], [1454, 2262, 1507, 2289], [1519, 2261, 1611, 2289], [1622, 2262, 1657, 2289], [1671, 2261, 1840, 2289], [1852, 2261, 1900, 2289], [1910, 2261, 2051, 2298], [2066, 2261, 2128, 2295], [2143, 2265, 2174, 2289], [376, 2321, 430, 2340], [442, 2312, 593, 2346], [608, 2312, 665, 2340], [679, 2312, 707, 2341], [720, 2312, 844, 2349], [856, 2312, 903, 2340], [915, 2312, 1039, 2349], [1051, 2321, 1085, 2340], [1099, 2316, 1129, 2340], [1142, 2312, 1191, 2340], [1203, 2312, 1388, 2349], [1400, 2312, 1436, 2340], [1445, 2312, 1575, 2349], [1576, 2312, 1840, 2341], [1851, 2312, 2012, 2349], [377, 2441, 651, 2483], [399, 2547, 440, 2581], [464, 2548, 499, 2575], [504, 2548, 552, 2575], [567, 2547, 694, 2581], [707, 2548, 730, 2576], [743, 2548, 786, 2575], [801, 2547, 1028, 2581], [1043, 2547, 1099, 2575], [1110, 2548, 1145, 2575], [1149, 2547, 1196, 2575], [1199, 2548, 1246, 2575], [1259, 2547, 1443, 2584], [1461, 2548, 1528, 2575], [1540, 2547, 1638, 2584], [1649, 2556, 1789, 2584], [1801, 2547, 1888, 2584], [1901, 2547, 2029, 2576], [2043, 2547, 2173, 2584], [466, 2598, 524, 2626], [536, 2598, 725, 2626], [737, 2598, 953, 2635], [972, 2599, 1062, 2626], [1075, 2599, 1285, 2627], [1297, 2608, 1336, 2626], [1348, 2599, 1450, 2635], [1461, 2599, 1652, 2635], [1670, 2598, 1763, 2633], [1777, 2598, 1953, 2635], [1964, 2598, 2053, 2627], [399, 2653, 440, 2687], [465, 2653, 501, 2682], [517, 2654, 562, 2681], [578, 2653, 677, 2687], [694, 2644, 731, 2681], [748, 2653, 891, 2687], [909, 2653, 967, 2681], [981, 2654, 1006, 2682], [1022, 2654, 1057, 2681], [1074, 2654, 1276, 2681], [1302, 2653, 1408, 2690], [1423, 2653, 1513, 2681], [1528, 2653, 1620, 2681], [1643, 2653, 1796, 2690], [1807, 2653, 1926, 2682], [1937, 2653, 2097, 2682], [2112, 2653, 2175, 2681], [462, 2704, 606, 2732], [618, 2704, 915, 2741], [924, 2704, 1014, 2738], [1027, 2713, 1105, 2741], [1117, 2704, 1165, 2738], [1179, 2704, 1268, 2733], [399, 2759, 440, 2793], [464, 2760, 496, 2787], [511, 2759, 667, 2787], [679, 2763, 707, 2787], [719, 2759, 754, 2787], [771, 2759, 920, 2788], [932, 2759, 1034, 2788], [1048, 2759, 1152, 2788], [1172, 2759, 1291, 2796], [1303, 2759, 1350, 2787], [1361, 2759, 1514, 2787], [1528, 2759, 1583, 2787], [1595, 2759, 1724, 2796], [1736, 2759, 1954, 2793], [1967, 2759, 2178, 2796], [465, 2810, 513, 2838], [516, 2810, 612, 2844], [624, 2810, 747, 2844], [764, 2810, 849, 2839], [869, 2810, 961, 2839], [974, 2810, 1219, 2839], [1234, 2810, 1437, 2847], [1255, 2935, 1294, 2964], [399, 242, 440, 276], [399, 297, 440, 331], [399, 402, 440, 436], [399, 509, 440, 542], [379, 927, 440, 961], [379, 1033, 440, 1067], [379, 1139, 440, 1173], [379, 1244, 440, 1278], [378, 1350, 440, 1384], [378, 1456, 440, 1490], [378, 1511, 440, 1545], [379, 1667, 440, 1701], [379, 1773, 440, 1807], [379, 1879, 440, 1913], [379, 1985, 440, 2019], [378, 2091, 440, 2125], [378, 2196, 440, 2230], [378, 2302, 440, 2336], [379, 2408, 440, 2442], [379, 2514, 440, 2548], [379, 2619, 440, 2653], [378, 2725, 440, 2759], [465, 243, 491, 270], [506, 242, 597, 270], [618, 242, 788, 271], [801, 242, 1086, 279], [1098, 251, 1199, 270], [1213, 242, 1340, 279], [1353, 242, 1547, 270], [1559, 242, 1719, 270], [1738, 243, 1771, 270], [1781, 242, 1878, 276], [1892, 242, 1981, 271], [465, 297, 556, 331], [569, 297, 687, 325], [704, 297, 850, 334], [863, 297, 934, 326], [947, 297, 1145, 326], [1155, 297, 1323, 325], [1341, 297, 1369, 325], [1381, 297, 1503, 326], [1515, 297, 1729, 334], [1741, 297, 1925, 334], [1942, 298, 2031, 325], [2039, 298, 2175, 334], [465, 347, 745, 376], [464, 403, 491, 430], [505, 402, 596, 436], [609, 403, 642, 430], [656, 403, 800, 436], [812, 403, 835, 431], [848, 402, 965, 436], [979, 402, 1035, 430], [1047, 402, 1083, 431], [1097, 402, 1270, 431], [1289, 402, 1412, 431], [1423, 402, 1628, 439], [1639, 402, 1710, 431], [1723, 402, 2002, 439], [2015, 411, 2123, 430], [2142, 403, 2174, 430], [466, 453, 494, 482], [510, 453, 572, 487], [586, 453, 614, 482], [629, 453, 787, 487], [802, 453, 859, 481], [872, 453, 900, 482], [914, 454, 937, 482], [952, 453, 1076, 490], [1090, 453, 1210, 487], [1226, 453, 1438, 490], [1444, 453, 1499, 490], [1508, 453, 1652, 481], [1664, 454, 1823, 490], [1838, 454, 1913, 481], [1924, 454, 2019, 487], [2033, 453, 2122, 482], [465, 499, 501, 536], [515, 508, 653, 542], [666, 509, 689, 537], [702, 508, 812, 545], [827, 508, 882, 536], [894, 509, 917, 537], [931, 509, 964, 536], [979, 509, 1172, 536], [1190, 508, 1316, 545], [1328, 508, 1460, 545], [1471, 508, 1576, 536], [1589, 509, 1767, 536], [1779, 508, 1818, 545], [1831, 508, 1964, 536], [1977, 508, 2049, 537], [2063, 508, 2179, 537], [465, 560, 498, 587], [507, 559, 666, 588], [679, 560, 708, 587], [721, 559, 784, 596], [797, 559, 988, 596], [1004, 560, 1197, 588], [1210, 560, 1239, 587], [1251, 559, 1369, 595], [1378, 559, 1548, 596], [1558, 559, 1687, 595], [1698, 559, 1747, 593], [1760, 568, 1852, 596], [1869, 559, 2015, 588], [2031, 559, 2177, 596], [465, 610, 554, 639], [465, 665, 607, 699], [620, 665, 668, 699], [683, 665, 744, 699], [759, 665, 788, 694], [806, 666, 873, 693], [885, 666, 1100, 702], [1112, 665, 1235, 693], [1238, 665, 1311, 693], [1323, 665, 1395, 693], [1407, 665, 1552, 693], [1563, 665, 1802, 702], [1819, 666, 1853, 693], [1864, 665, 2069, 702], [2082, 665, 2120, 702], [2126, 665, 2173, 693], [464, 715, 536, 743], [548, 715, 766, 743], [780, 715, 965, 752], [978, 725, 1017, 743], [1028, 715, 1172, 743], [1184, 716, 1336, 752], [1349, 715, 1527, 750], [1541, 715, 1601, 752], [1616, 715, 1774, 750], [465, 761, 503, 798], [517, 770, 659, 804], [672, 771, 697, 799], [711, 770, 823, 807], [838, 770, 896, 798], [907, 771, 932, 799], [945, 771, 981, 798], [995, 771, 1196, 798], [1214, 770, 1343, 807], [1356, 770, 1492, 807], [1504, 770, 1613, 798], [1625, 771, 1810, 798], [1821, 770, 1862, 807], [1875, 770, 2102, 798], [2116, 770, 2173, 798], [464, 821, 622, 849], [635, 821, 772, 849], [785, 821, 859, 850], [873, 821, 992, 850], [1009, 822, 1297, 858], [1311, 821, 1685, 856], [1699, 821, 1790, 850], [1808, 821, 1897, 850], [1909, 821, 2098, 850], [2116, 821, 2177, 849], [465, 872, 1074, 909], [465, 927, 593, 961], [612, 928, 647, 955], [664, 928, 708, 961], [726, 927, 960, 961], [978, 928, 1016, 955], [1032, 928, 1067, 961], [1085, 928, 1239, 961], [1256, 928, 1280, 956], [1298, 928, 1353, 961], [1371, 927, 1484, 961], [1502, 928, 1540, 955], [1557, 928, 1595, 955], [1625, 927, 1790, 956], [1805, 927, 1961, 955], [1976, 927, 2072, 955], [2087, 927, 2175, 955], [464, 978, 657, 1006], [674, 978, 737, 1006], [749, 978, 854, 1015], [867, 978, 924, 1006], [937, 978, 1119, 1015], [1131, 978, 1167, 1006], [1176, 978, 1305, 1006], [1317, 978, 1486, 1015], [1501, 979, 1574, 1007], [1588, 978, 1671, 1006], [1689, 978, 1781, 1014], [1798, 978, 1877, 1007], [465, 1034, 501, 1061], [516, 1034, 552, 1061], [567, 1033, 708, 1061], [709, 1033, 796, 1061], [808, 1034, 832, 1061], [847, 1034, 878, 1061], [893, 1033, 1076, 1062], [1097, 1033, 1215, 1062], [1227, 1033, 1360, 1069], [1373, 1033, 1435, 1062], [1445, 1039, 1606, 1061], [1619, 1039, 1763, 1070], [1775, 1033, 1878, 1069], [1891, 1034, 1919, 1061], [1931, 1033, 2051, 1061], [2062, 1043, 2178, 1070], [465, 1084, 528, 1113], [531, 1084, 653, 1113], [654, 1084, 710, 1112], [723, 1084, 943, 1112], [959, 1084, 1106, 1121], [1120, 1084, 1209, 1113], [465, 1139, 561, 1167], [574, 1140, 610, 1167], [624, 1139, 782, 1167], [785, 1139, 920, 1173], [930, 1140, 962, 1167], [977, 1139, 1160, 1173], [1174, 1140, 1210, 1167], [1224, 1139, 1344, 1167], [1355, 1139, 1438, 1167], [1454, 1139, 1581, 1176], [1593, 1139, 1658, 1167], [1671, 1139, 1887, 1176], [1890, 1139, 1998, 1176], [2010, 1139, 2131, 1168], [2143, 1143, 2173, 1167], [465, 1193, 526, 1217], [538, 1189, 642, 1217], [654, 1198, 769, 1218], [782, 1193, 841, 1217], [854, 1189, 885, 1217], [897, 1189, 1013, 1217], [1026, 1198, 1130, 1226], [1147, 1189, 1275, 1218], [1286, 1189, 1324, 1226], [1326, 1189, 1574, 1226], [1589, 1189, 1703, 1225], [1716, 1189, 1777, 1217], [1788, 1189, 1895, 1224], [1909, 1189, 2051, 1218], [465, 1244, 503, 1272], [522, 1244, 608, 1272], [626, 1244, 684, 1272], [702, 1245, 746, 1272], [766, 1244, 920, 1272], [956, 1244, 985, 1272], [1002, 1245, 1071, 1272], [1088, 1244, 1225, 1272], [1244, 1244, 1652, 1281], [1670, 1244, 1845, 1281], [1862, 1244, 1910, 1272], [1927, 1244, 2036, 1272], [2053, 1245, 2174, 1272], [465, 1295, 628, 1323], [648, 1295, 743, 1324], [751, 1295, 879, 1324], [891, 1295, 929, 1332], [933, 1296, 1091, 1332], [1103, 1295, 1253, 1329], [1266, 1295, 1499, 1330], [1513, 1295, 1602, 1324], [465, 1351, 503, 1378], [517, 1351, 543, 1378], [557, 1350, 729, 1378], [748, 1350, 906, 1387], [919, 1354, 1041, 1379], [1053, 1350, 1178, 1378], [1181, 1350, 1255, 1378], [1267, 1350, 1480, 1387], [1491, 1350, 1647, 1387], [1660, 1350, 1734, 1379], [1747, 1350, 1857, 1387], [1869, 1350, 2060, 1378], [2079, 1350, 2176, 1379], [463, 1401, 590, 1430], [602, 1411, 641, 1429], [656, 1401, 780, 1430], [792, 1401, 854, 1430], [866, 1401, 1088, 1438], [1102, 1401, 1199, 1436], [1213, 1401, 1319, 1429], [1335, 1401, 1420, 1430], [465, 1457, 492, 1484], [497, 1457, 541, 1484], [555, 1456, 723, 1484], [740, 1456, 910, 1485], [920, 1457, 1157, 1493], [1176, 1456, 1295, 1484], [1307, 1456, 1470, 1490], [1484, 1456, 1545, 1484], [1557, 1456, 1679, 1490], [1694, 1456, 1869, 1493], [1885, 1456, 1970, 1485], [464, 1512, 489, 1540], [504, 1512, 548, 1539], [563, 1511, 789, 1539], [803, 1511, 861, 1539], [874, 1512, 910, 1539], [914, 1511, 963, 1539], [966, 1512, 1016, 1539], [1030, 1511, 1221, 1548], [1241, 1511, 1270, 1539], [1283, 1520, 1350, 1540], [1364, 1511, 1453, 1540], [1472, 1512, 1626, 1548], [1639, 1511, 1775, 1539], [1788, 1511, 2173, 1548], [466, 1562, 637, 1599], [649, 1562, 696, 1590], [706, 1562, 803, 1599], [813, 1562, 994, 1590], [1010, 1563, 1100, 1590], [1111, 1563, 1316, 1591], [1328, 1572, 1366, 1590], [1377, 1563, 1476, 1599], [1487, 1563, 1674, 1599], [1690, 1562, 1996, 1597], [2009, 1562, 2176, 1590], [465, 1612, 554, 1641], [464, 1668, 488, 1696], [502, 1668, 545, 1695], [560, 1667, 791, 1701], [804, 1668, 839, 1695], [843, 1667, 890, 1695], [894, 1668, 941, 1695], [956, 1667, 1143, 1704], [1158, 1667, 1215, 1695], [1226, 1668, 1249, 1696], [1264, 1668, 1288, 1695], [1303, 1667, 1443, 1696], [1463, 1667, 1546, 1695], [1558, 1667, 1811, 1696], [1823, 1667, 1923, 1704], [1935, 1667, 2177, 1696], [464, 1718, 492, 1746], [504, 1718, 948, 1755], [961, 1718, 1118, 1755], [1137, 1719, 1170, 1746], [1181, 1718, 1315, 1747], [1325, 1718, 1539, 1755], [1553, 1718, 1642, 1747], [465, 1773, 590, 1802], [638, 1773, 739, 1802], [762, 1773, 905, 1802], [927, 1773, 985, 1801], [1007, 1777, 1065, 1801], [1086, 1782, 1264, 1810], [1289, 1773, 1381, 1802], [1429, 1774, 1511, 1802], [1534, 1773, 2175, 1809], [467, 1824, 698, 1855], [465, 1880, 501, 1907], [521, 1880, 558, 1907], [578, 1879, 670, 1916], [691, 1880, 717, 1907], [737, 1880, 791, 1913], [811, 1880, 836, 1908], [856, 1879, 1004, 1913], [1026, 1879, 1084, 1907], [1103, 1879, 1138, 1908], [1157, 1879, 1233, 1907], [1271, 1879, 1300, 1907], [1318, 1879, 1435, 1907], [1454, 1888, 1593, 1916], [1612, 1879, 1775, 1916], [1792, 1879, 1841, 1907], [1857, 1879, 1962, 1907], [1980, 1879, 2173, 1907], [465, 1930, 681, 1967], [701, 1930, 860, 1958], [871, 1934, 978, 1967], [992, 1930, 1216, 1958], [1228, 1930, 1406, 1967], [1424, 1930, 1509, 1959], [465, 1986, 498, 2013], [512, 1986, 537, 2014], [552, 1985, 674, 2014], [689, 1985, 747, 2013], [761, 1986, 791, 2013], [806, 1986, 875, 2013], [898, 1985, 1121, 2022], [1135, 1985, 1234, 2022], [1246, 1994, 1392, 2022], [1405, 1985, 1487, 2013], [1498, 1985, 1628, 2013], [1639, 1985, 1835, 2022], [1854, 1985, 2007, 2013], [2020, 1985, 2173, 2022], [466, 2036, 628, 2073], [646, 2037, 736, 2064], [749, 2037, 846, 2065], [861, 2036, 934, 2073], [952, 2036, 1074, 2072], [1088, 2036, 1335, 2070], [1349, 2036, 1438, 2065], [465, 2091, 503, 2119], [517, 2091, 701, 2120], [714, 2091, 772, 2119], [784, 2092, 808, 2120], [823, 2091, 957, 2119], [975, 2091, 1003, 2120], [1006, 2091, 1111, 2119], [1123, 2091, 1272, 2119], [1283, 2091, 1508, 2119], [1521, 2091, 1579, 2119], [1592, 2091, 1711, 2119], [1724, 2091, 1881, 2119], [1891, 2091, 1982, 2128], [1993, 2091, 2173, 2128], [465, 2141, 632, 2169], [644, 2141, 739, 2169], [757, 2141, 976, 2169], [987, 2141, 1114, 2170], [1126, 2141, 1164, 2178], [1171, 2141, 1335, 2178], [1347, 2142, 1455, 2175], [1470, 2141, 1566, 2176], [1580, 2141, 1669, 2170], [465, 2196, 501, 2224], [515, 2196, 693, 2225], [706, 2196, 763, 2224], [774, 2197, 802, 2224], [817, 2196, 905, 2224], [924, 2196, 952, 2224], [963, 2196, 1126, 2224], [1136, 2196, 1326, 2233], [1339, 2196, 1496, 2233], [1507, 2196, 1554, 2224], [1565, 2205, 1679, 2225], [1690, 2196, 1840, 2233], [1853, 2196, 1924, 2224], [1937, 2196, 2130, 2233], [2144, 2200, 2173, 2224], [465, 2247, 607, 2284], [626, 2247, 753, 2276], [765, 2247, 803, 2284], [806, 2247, 1037, 2275], [1048, 2248, 1185, 2284], [1197, 2247, 1260, 2276], [1272, 2248, 1380, 2281], [1394, 2247, 1647, 2282], [1661, 2247, 1750, 2276], [465, 2302, 658, 2336], [679, 2302, 727, 2336], [748, 2302, 840, 2336], [861, 2303, 890, 2330], [926, 2302, 977, 2331], [994, 2302, 1044, 2330], [1062, 2302, 1185, 2339], [1204, 2311, 1413, 2339], [1430, 2306, 1508, 2330], [1526, 2302, 1563, 2330], [1579, 2311, 1596, 2330], [1612, 2302, 1780, 2330], [1796, 2302, 1993, 2339], [2012, 2302, 2175, 2339], [462, 2353, 693, 2381], [704, 2354, 939, 2390], [955, 2353, 1130, 2390], [1140, 2353, 1228, 2386], [1246, 2353, 1364, 2382], [1378, 2353, 1444, 2386], [1459, 2354, 1543, 2382], [1556, 2353, 1581, 2386], [1593, 2363, 1636, 2390], [1649, 2353, 1794, 2381], [465, 2409, 496, 2436], [511, 2408, 785, 2442], [799, 2409, 833, 2436], [847, 2408, 951, 2442], [965, 2409, 989, 2436], [1004, 2408, 1040, 2436], [1055, 2408, 1174, 2442], [1189, 2408, 1246, 2436], [1258, 2408, 1294, 2436], [1310, 2408, 1338, 2437], [1353, 2408, 1485, 2445], [1504, 2408, 1567, 2436], [1579, 2408, 1704, 2437], [1716, 2408, 1880, 2445], [1892, 2408, 1928, 2436], [1937, 2408, 2044, 2436], [2056, 2409, 2174, 2437], [465, 2459, 628, 2487], [647, 2459, 851, 2488], [863, 2459, 901, 2496], [908, 2459, 1154, 2496], [1164, 2459, 1387, 2493], [1405, 2459, 1498, 2494], [1511, 2459, 1601, 2488], [465, 2515, 499, 2542], [513, 2514, 636, 2548], [650, 2515, 680, 2542], [695, 2523, 751, 2543], [763, 2514, 891, 2551], [905, 2514, 962, 2542], [974, 2514, 1009, 2542], [1024, 2514, 1182, 2543], [1201, 2514, 1392, 2551], [1405, 2514, 1487, 2542], [1498, 2514, 1647, 2542], [1659, 2514, 1854, 2551], [1865, 2514, 2174, 2551], [466, 2564, 524, 2592], [536, 2564, 898, 2601], [910, 2564, 946, 2592], [955, 2564, 1003, 2592], [1017, 2565, 1076, 2592], [1087, 2564, 1197, 2593], [1216, 2564, 1375, 2592], [1386, 2568, 1493, 2601], [1507, 2564, 1625, 2593], [1637, 2564, 1815, 2601], [1828, 2564, 1896, 2601], [1908, 2564, 1998, 2593], [465, 2620, 489, 2647], [502, 2620, 534, 2647], [548, 2619, 728, 2648], [745, 2619, 877, 2647], [888, 2619, 1088, 2647], [1099, 2619, 1134, 2647], [1142, 2619, 1190, 2647], [1201, 2619, 1349, 2647], [1360, 2619, 1395, 2647], [1404, 2628, 1420, 2647], [1432, 2628, 1498, 2647], [1508, 2619, 1543, 2647], [1551, 2619, 1691, 2647], [1703, 2623, 1864, 2647], [1875, 2623, 2033, 2656], [2049, 2619, 2174, 2648], [465, 2670, 503, 2707], [510, 2670, 630, 2699], [637, 2670, 788, 2706], [806, 2670, 1007, 2704], [1021, 2670, 1110, 2699], [465, 2726, 491, 2753], [505, 2726, 538, 2753], [552, 2725, 729, 2754], [743, 2725, 801, 2753], [812, 2725, 889, 2754], [903, 2726, 1041, 2762], [1059, 2725, 1201, 2753], [1202, 2725, 1360, 2762], [1372, 2725, 1496, 2753], [1499, 2725, 1555, 2753], [1569, 2725, 1667, 2762], [1678, 2725, 1866, 2762], [1884, 2725, 2177, 2759], [465, 2776, 554, 2805], [1255, 2935, 1294, 2963], [379, 242, 440, 276], [465, 243, 498, 270], [513, 242, 643, 271], [664, 242, 693, 270], [706, 242, 802, 270], [815, 242, 978, 279], [990, 242, 1038, 270], [1055, 242, 1091, 270], [1104, 242, 1178, 270], [1191, 242, 1339, 270], [1352, 242, 1524, 279], [1545, 242, 1707, 270], [1720, 246, 1829, 279], [1844, 242, 1985, 271], [1999, 242, 2177, 279], [465, 292, 791, 321], [794, 292, 892, 321], [907, 292, 943, 320], [952, 292, 1044, 326], [1058, 292, 1147, 321], [379, 347, 440, 381], [465, 348, 498, 375], [518, 347, 647, 376], [684, 347, 713, 375], [730, 347, 852, 384], [870, 347, 1022, 384], [1041, 347, 1204, 384], [1221, 347, 1269, 375], [1286, 356, 1403, 375], [1421, 347, 1634, 384], [1652, 364, 1662, 367], [1683, 347, 1869, 384], [1886, 351, 1917, 375], [1935, 347, 2008, 375], [2026, 347, 2174, 375], [465, 398, 693, 426], [711, 399, 802, 426], [812, 398, 951, 427], [961, 398, 1074, 427], [1089, 398, 1255, 427], [1257, 398, 1530, 433], [1544, 398, 1633, 427], [378, 453, 440, 487], [465, 453, 501, 481], [516, 454, 550, 481], [565, 453, 662, 487], [675, 454, 711, 481], [726, 454, 746, 481], [761, 454, 803, 481], [818, 453, 929, 487], [944, 453, 1001, 481], [1013, 454, 1038, 481], [1052, 454, 1084, 481], [1098, 453, 1191, 481], [1212, 454, 1423, 490], [1434, 453, 1585, 482], [1605, 453, 1706, 482], [1709, 453, 1818, 487], [378, 508, 440, 542], [464, 509, 487, 537], [502, 508, 590, 542], [603, 509, 628, 536], [642, 508, 676, 537], [691, 509, 822, 542], [836, 508, 864, 537], [879, 509, 915, 536], [928, 509, 1047, 542], [1061, 508, 1118, 536], [1130, 509, 1159, 536], [1173, 509, 1205, 536], [1218, 509, 1335, 537], [1355, 508, 1540, 545], [1554, 508, 1611, 536], [1624, 508, 1764, 536], [1776, 508, 1823, 536], [1834, 508, 1906, 536], [1918, 508, 2062, 537], [2074, 508, 2174, 545], [464, 559, 701, 587], [713, 559, 763, 588], [774, 559, 940, 587], [951, 559, 1097, 587], [1115, 560, 1230, 588], [1237, 559, 1342, 596], [1355, 559, 1519, 593], [1533, 559, 1622, 588], [379, 614, 440, 648], [465, 615, 491, 642], [505, 615, 538, 642], [551, 614, 665, 642], [678, 614, 736, 642], [748, 614, 785, 642], [799, 615, 913, 642], [931, 614, 1025, 642], [1037, 618, 1194, 648], [1207, 623, 1287, 648], [1302, 614, 1411, 651], [1424, 614, 1482, 642], [1494, 614, 1757, 642], [1778, 614, 1836, 642], [1846, 614, 1963, 643], [1976, 614, 2014, 651], [2019, 614, 2177, 648], [465, 665, 657, 700], [671, 665, 760, 694], [379, 720, 440, 754], [465, 721, 497, 748], [511, 721, 600, 748], [614, 720, 671, 748], [683, 720, 774, 749], [788, 720, 847, 748], [866, 720, 999, 748], [1012, 720, 1257, 757], [1270, 720, 1410, 748], [1423, 720, 1496, 749], [1508, 720, 1602, 757], [1614, 724, 1679, 748], [1693, 720, 1855, 757], [1857, 720, 1930, 748], [1942, 720, 2015, 748], [2027, 720, 2173, 748], [465, 770, 693, 798], [709, 770, 775, 799], [789, 770, 918, 807], [927, 770, 1024, 804], [1038, 770, 1243, 804], [1256, 770, 1345, 799], [1365, 770, 1425, 798], [1446, 770, 1928, 799], [378, 825, 440, 859], [464, 826, 489, 854], [505, 825, 675, 859], [691, 826, 721, 853], [738, 825, 853, 859], [870, 826, 907, 853], [924, 825, 1060, 862], [1078, 825, 1136, 853], [1151, 826, 1186, 853], [1203, 825, 1382, 853], [1408, 825, 1559, 854], [1573, 825, 1750, 853], [1765, 825, 1986, 862], [2009, 825, 2127, 854], [2143, 825, 2181, 862], [460, 876, 592, 913], [602, 876, 759, 910], [777, 876, 1006, 911], [1020, 876, 1097, 913], [1112, 876, 1201, 905], [379, 931, 440, 965], [465, 932, 503, 959], [518, 931, 669, 960], [684, 931, 742, 959], [756, 932, 799, 959], [815, 931, 883, 959], [906, 931, 1086, 959], [1101, 931, 1272, 959], [1285, 931, 1356, 960], [1372, 931, 1549, 968], [1564, 931, 1612, 959], [1625, 931, 1685, 959], [1698, 931, 1771, 959], [1785, 931, 1933, 959], [1946, 931, 2179, 959], [464, 982, 559, 1011], [568, 982, 696, 1011], [708, 992, 747, 1010], [760, 982, 910, 1019], [924, 982, 1114, 1019], [1128, 982, 1423, 1017], [1436, 982, 1525, 1011], [378, 1037, 440, 1071], [465, 1037, 501, 1066], [517, 1037, 545, 1066], [559, 1037, 718, 1066], [730, 1038, 758, 1065], [778, 1037, 839, 1065], [853, 1037, 929, 1074], [940, 1038, 1089, 1074], [1100, 1037, 1228, 1065], [1240, 1037, 1287, 1065], [1298, 1037, 1339, 1065], [1355, 1037, 1552, 1074], [1564, 1037, 1726, 1065], [1745, 1037, 1839, 1066], [1848, 1037, 1975, 1066], [1987, 1047, 2025, 1065], [2037, 1038, 2173, 1074], [464, 1088, 614, 1122], [628, 1088, 861, 1123], [875, 1088, 964, 1117], [379, 1143, 440, 1177], [465, 1144, 494, 1171], [508, 1144, 542, 1171], [557, 1143, 658, 1172], [671, 1147, 699, 1171], [712, 1143, 747, 1171], [767, 1143, 936, 1171], [948, 1143, 1163, 1171], [1175, 1143, 1211, 1171], [1220, 1152, 1332, 1171], [1351, 1143, 1485, 1177], [1499, 1143, 1835, 1178], [1849, 1143, 1982, 1172], [1997, 1143, 2082, 1172], [379, 1198, 440, 1232], [464, 1199, 508, 1226], [521, 1198, 676, 1227], [692, 1198, 753, 1226], [764, 1198, 935, 1235], [938, 1207, 983, 1226], [986, 1198, 1056, 1226], [1067, 1202, 1127, 1226], [1138, 1198, 1227, 1235], [1240, 1198, 1396, 1235], [1407, 1198, 1462, 1226], [1472, 1198, 1758, 1235], [1773, 1198, 1899, 1227], [1909, 1198, 1945, 1235], [1948, 1198, 2174, 1226], [464, 1249, 603, 1285], [618, 1248, 681, 1276], [695, 1249, 806, 1282], [822, 1248, 1038, 1283], [1054, 1248, 1146, 1277], [1171, 1248, 1260, 1277], [1274, 1248, 1465, 1277], [1489, 1248, 1551, 1276], [1576, 1248, 2068, 1277], [2093, 1249, 2176, 1277], [466, 1299, 1549, 1335], [378, 1354, 440, 1388], [464, 1355, 498, 1382], [513, 1354, 688, 1382], [702, 1354, 760, 1382], [774, 1354, 809, 1383], [824, 1354, 1038, 1391], [1060, 1354, 1204, 1391], [1217, 1354, 1449, 1391], [1461, 1354, 1644, 1382], [1656, 1354, 1738, 1382], [1752, 1363, 1769, 1382], [1781, 1354, 1865, 1382], [1878, 1354, 2033, 1382], [2045, 1354, 2179, 1391], [463, 1405, 590, 1434], [602, 1405, 640, 1442], [646, 1405, 693, 1433], [703, 1405, 864, 1433], [878, 1405, 1042, 1434], [1051, 1405, 1255, 1439], [1273, 1405, 1626, 1440], [1640, 1405, 1729, 1434], [378, 1460, 440, 1494], [464, 1461, 487, 1489], [501, 1461, 576, 1494], [588, 1461, 629, 1488], [642, 1461, 678, 1488], [691, 1460, 808, 1494], [822, 1460, 878, 1488], [888, 1461, 920, 1488], [934, 1461, 967, 1488], [980, 1460, 1158, 1497], [1175, 1460, 1380, 1488], [1392, 1460, 1427, 1488], [1435, 1460, 1705, 1488], [1716, 1460, 1835, 1488], [1839, 1460, 1893, 1488], [1904, 1460, 1952, 1488], [1963, 1460, 2174, 1488], [465, 1511, 501, 1539], [509, 1511, 769, 1548], [781, 1511, 857, 1539], [875, 1512, 994, 1539], [1005, 1512, 1215, 1548], [1228, 1511, 1434, 1545], [1447, 1511, 1536, 1540], [379, 1566, 440, 1600], [465, 1567, 503, 1594], [521, 1567, 566, 1594], [584, 1566, 642, 1594], [659, 1567, 696, 1594], [714, 1566, 862, 1594], [894, 1566, 945, 1594], [961, 1566, 1058, 1594], [1075, 1570, 1121, 1594], [1137, 1570, 1267, 1603], [1283, 1566, 1378, 1594], [1395, 1575, 1436, 1594], [1452, 1566, 1502, 1594], [1520, 1566, 1702, 1603], [1719, 1566, 1896, 1603], [1912, 1566, 2111, 1594], [2127, 1566, 2175, 1594], [465, 1617, 566, 1654], [577, 1617, 765, 1645], [782, 1617, 914, 1646], [926, 1617, 1160, 1645], [1169, 1617, 1342, 1654], [1354, 1617, 1417, 1645], [1425, 1617, 1604, 1646], [1612, 1617, 1764, 1653], [1778, 1617, 1971, 1652], [1989, 1617, 2075, 1646], [2094, 1618, 2176, 1646], [466, 1667, 1144, 1703], [379, 1722, 440, 1756], [464, 1723, 508, 1750], [521, 1722, 614, 1759], [632, 1722, 796, 1759], [809, 1722, 1007, 1751], [1025, 1722, 1267, 1759], [1280, 1731, 1378, 1759], [1391, 1731, 1504, 1750], [1515, 1722, 1727, 1759], [1746, 1723, 1778, 1750], [1789, 1722, 1989, 1759], [2001, 1722, 2038, 1759], [2044, 1722, 2091, 1750], [2103, 1722, 2173, 1750], [464, 1773, 682, 1801], [696, 1773, 882, 1810], [894, 1783, 933, 1801], [944, 1773, 1088, 1801], [1100, 1774, 1270, 1810], [1284, 1773, 1373, 1802], [379, 1828, 440, 1862], [466, 1828, 494, 1857], [507, 1828, 637, 1865], [649, 1829, 675, 1856], [690, 1828, 780, 1862], [795, 1828, 850, 1856], [864, 1828, 891, 1857], [907, 1828, 966, 1857], [984, 1828, 1150, 1856], [1162, 1828, 1282, 1856], [1285, 1828, 1357, 1856], [1367, 1828, 1575, 1865], [1588, 1828, 1779, 1856], [1789, 1828, 2001, 1865], [2017, 1828, 2174, 1857], [466, 1880, 495, 1907], [506, 1879, 621, 1908], [632, 1879, 829, 1916], [841, 1880, 1023, 1916], [1035, 1879, 1164, 1915], [1177, 1879, 1267, 1908], [1288, 1879, 1477, 1908], [379, 1934, 440, 1968], [464, 1935, 571, 1971], [588, 1935, 636, 1968], [653, 1935, 770, 1968], [787, 1935, 843, 1968], [861, 1934, 996, 1968], [1013, 1934, 1048, 1963], [1074, 1934, 1242, 1971], [1257, 1934, 1450, 1971], [1466, 1934, 1524, 1962], [1539, 1934, 1633, 1962], [1647, 1938, 1805, 1971], [1820, 1934, 2014, 1971], [2029, 1934, 2078, 1962], [2092, 1934, 2174, 1971], [466, 1985, 548, 2013], [561, 1985, 662, 2022], [676, 1985, 782, 2013], [797, 1985, 1005, 2022], [1019, 1985, 1057, 2022], [1063, 1985, 1111, 2013], [1125, 1985, 1197, 2013], [1209, 1986, 1373, 2022], [1386, 1985, 1567, 2022], [1580, 1995, 1621, 2013], [1635, 1985, 1802, 2022], [1813, 1986, 1919, 2018], [1938, 1985, 2075, 2018], [2091, 1985, 2174, 2013], [466, 2036, 1681, 2072], [378, 2091, 440, 2125], [465, 2092, 503, 2119], [523, 2091, 561, 2119], [580, 2091, 727, 2120], [765, 2091, 794, 2119], [812, 2091, 955, 2128], [974, 2091, 1203, 2128], [1223, 2091, 1385, 2128], [1403, 2091, 1451, 2119], [1469, 2091, 1519, 2119], [1537, 2091, 1627, 2119], [1646, 2092, 1742, 2119], [1762, 2091, 1820, 2119], [1840, 2090, 2116, 2128], [2153, 2092, 2177, 2120], [466, 2141, 712, 2178], [724, 2141, 786, 2170], [797, 2141, 952, 2178], [956, 2141, 1134, 2175], [1147, 2141, 1236, 2170], [379, 2196, 440, 2230], [465, 2197, 503, 2224], [521, 2196, 604, 2230], [624, 2196, 654, 2225], [673, 2196, 735, 2230], [756, 2196, 814, 2224], [831, 2197, 852, 2224], [870, 2196, 1006, 2224], [1039, 2196, 1068, 2224], [1085, 2196, 1219, 2224], [1235, 2196, 1431, 2233], [1448, 2196, 1611, 2233], [1626, 2196, 1700, 2225], [1717, 2196, 1903, 2233], [1919, 2200, 1950, 2224], [1967, 2196, 2175, 2224], [464, 2247, 641, 2284], [661, 2248, 694, 2275], [705, 2247, 923, 2275], [937, 2247, 1123, 2284], [1135, 2257, 1174, 2275], [1185, 2247, 1329, 2275], [1341, 2248, 1501, 2284], [1515, 2247, 1604, 2276], [379, 2302, 440, 2336], [466, 2302, 494, 2331], [508, 2302, 588, 2336], [601, 2303, 636, 2330], [650, 2302, 726, 2336], [740, 2302, 768, 2331], [782, 2302, 877, 2339], [891, 2302, 946, 2330], [959, 2303, 994, 2330], [1008, 2302, 1200, 2339], [1218, 2301, 1249, 2336], [1264, 2302, 1345, 2330], [1358, 2302, 1493, 2339], [1511, 2302, 1605, 2331], [1612, 2303, 1737, 2336], [1750, 2301, 1999, 2337], [2012, 2302, 2100, 2331], [2118, 2302, 2177, 2330], [466, 2353, 802, 2382], [379, 2408, 440, 2442], [465, 2409, 503, 2436], [520, 2408, 555, 2437], [572, 2408, 694, 2437], [721, 2408, 861, 2436], [876, 2408, 972, 2445], [988, 2408, 1166, 2445], [1182, 2408, 1230, 2436], [1244, 2408, 1294, 2436], [1309, 2408, 1492, 2436], [1508, 2408, 1663, 2445], [1678, 2408, 1835, 2445], [1848, 2408, 1998, 2445], [2024, 2409, 2048, 2437], [2068, 2408, 2177, 2445], [465, 2459, 579, 2495], [588, 2459, 687, 2496], [705, 2459, 927, 2493], [940, 2459, 1029, 2488], [379, 2514, 440, 2548], [465, 2514, 578, 2548], [594, 2514, 717, 2542], [731, 2515, 763, 2542], [786, 2514, 851, 2542], [865, 2518, 908, 2542], [921, 2514, 957, 2542], [968, 2518, 1127, 2551], [1138, 2514, 1377, 2551], [1393, 2514, 1517, 2542], [1535, 2514, 1559, 2542], [1579, 2514, 1789, 2542], [1804, 2514, 1991, 2551], [2016, 2514, 2073, 2547], [2094, 2514, 2178, 2543], [460, 2564, 596, 2593], [611, 2564, 720, 2600], [731, 2565, 886, 2601], [898, 2564, 1078, 2601], [1092, 2564, 1154, 2597], [1168, 2565, 1221, 2592], [379, 2619, 440, 2653], [465, 2620, 500, 2647], [504, 2619, 621, 2653], [635, 2620, 666, 2647], [682, 2619, 774, 2656], [787, 2619, 823, 2647], [838, 2619, 967, 2653], [982, 2619, 1039, 2647], [1051, 2620, 1083, 2647], [1096, 2619, 1186, 2656], [1206, 2619, 1392, 2656], [1405, 2619, 1615, 2656], [1629, 2619, 1786, 2647], [1808, 2619, 1865, 2647], [1875, 2619, 1991, 2648], [2004, 2619, 2042, 2656], [2043, 2619, 2176, 2656], [464, 2670, 621, 2704], [635, 2670, 847, 2705], [861, 2670, 950, 2699], [379, 2725, 440, 2759], [465, 2725, 680, 2762], [694, 2726, 736, 2759], [749, 2725, 839, 2759], [853, 2726, 893, 2759], [907, 2725, 1045, 2759], [1059, 2726, 1102, 2753], [1121, 2725, 1204, 2753], [1216, 2725, 1360, 2754], [1373, 2734, 1412, 2753], [1425, 2734, 1441, 2753], [1453, 2729, 1514, 2753], [1530, 2725, 1625, 2754], [1634, 2726, 1658, 2754], [1672, 2726, 1810, 2762], [1822, 2725, 1888, 2758], [1904, 2725, 1978, 2760], [1994, 2725, 2144, 2753], [1255, 2935, 1293, 2964], [379, 242, 440, 276], [465, 243, 503, 270], [519, 242, 673, 270], [688, 242, 746, 270], [761, 243, 796, 270], [812, 243, 933, 279], [959, 243, 1028, 270], [1041, 242, 1143, 279], [1157, 242, 1396, 270], [1409, 242, 1499, 279], [1513, 242, 1775, 279], [1788, 242, 1895, 279], [1920, 243, 1954, 270], [1965, 242, 2128, 271], [2144, 243, 2173, 270], [462, 292, 577, 321], [588, 292, 785, 329], [797, 293, 979, 329], [991, 292, 1129, 328], [1143, 292, 1232, 321], [379, 347, 440, 381], [465, 348, 588, 381], [603, 347, 686, 381], [701, 347, 844, 381], [860, 347, 908, 381], [923, 347, 1057, 384], [1073, 347, 1114, 381], [1130, 347, 1193, 381], [1209, 347, 1249, 381], [1266, 347, 1324, 375], [1338, 347, 1432, 381], [1447, 348, 1474, 375], [1497, 347, 1623, 376], [1637, 347, 1850, 384], [1863, 347, 1911, 375], [1923, 347, 2049, 384], [2062, 356, 2175, 384], [465, 398, 693, 426], [712, 399, 803, 427], [811, 399, 949, 435], [960, 399, 1062, 427], [1067, 398, 1268, 426], [378, 453, 440, 487], [466, 453, 545, 482], [559, 453, 644, 481], [658, 453, 716, 481], [728, 454, 752, 482], [766, 454, 804, 481], [818, 453, 987, 481], [1006, 453, 1146, 481], [1158, 453, 1271, 481], [1289, 453, 1318, 481], [1330, 462, 1397, 482], [1411, 453, 1550, 490], [1564, 453, 1662, 490], [1673, 453, 1847, 490], [1858, 453, 1992, 481], [2011, 453, 2174, 481], [465, 505, 577, 541], [589, 504, 658, 538], [672, 505, 854, 541], [856, 504, 914, 532], [924, 504, 1080, 538], [1094, 504, 1242, 541], [1253, 504, 1372, 532], [1384, 504, 1556, 541], [1568, 504, 1744, 541], [1762, 504, 1847, 533], [379, 559, 440, 593], [465, 560, 498, 587], [513, 559, 549, 587], [564, 559, 622, 587], [636, 560, 663, 587], [679, 559, 817, 588], [841, 559, 870, 587], [883, 559, 1124, 596], [1138, 559, 1301, 596], [1314, 559, 1362, 587], [1375, 559, 1568, 596], [1582, 559, 1656, 587], [1669, 559, 1818, 587], [1831, 559, 1863, 587], [1876, 559, 1958, 596], [1960, 559, 2179, 587], [464, 611, 557, 638], [570, 611, 784, 639], [798, 620, 838, 638], [851, 611, 955, 647], [968, 611, 1163, 647], [1178, 610, 1416, 645], [1436, 610, 1523, 639], [1546, 611, 1629, 639], [1644, 610, 2183, 646], [467, 661, 1053, 697], [1064, 662, 1318, 691], [379, 715, 440, 749], [465, 715, 542, 744], [555, 715, 612, 743], [625, 715, 683, 743], [695, 716, 719, 744], [732, 716, 757, 744], [771, 715, 869, 743], [887, 715, 1046, 744], [1058, 715, 1183, 743], [1195, 715, 1244, 743], [1255, 715, 1337, 752], [1348, 715, 1661, 743], [1673, 715, 1884, 752], [1896, 715, 2061, 752], [2079, 715, 2176, 744], [463, 766, 590, 795], [602, 776, 641, 794], [656, 766, 878, 803], [892, 766, 987, 801], [997, 766, 1166, 800], [1184, 766, 1269, 795], [379, 821, 440, 855], [465, 822, 501, 849], [514, 821, 570, 849], [582, 821, 637, 849], [648, 822, 671, 850], [684, 821, 794, 858], [811, 821, 987, 849], [998, 821, 1194, 858], [1206, 821, 1241, 849], [1249, 821, 1297, 849], [1308, 821, 1410, 858], [1421, 822, 1514, 849], [1527, 821, 1583, 849], [1595, 821, 1630, 849], [1643, 821, 1857, 858], [1874, 822, 1906, 849], [1916, 822, 1968, 849], [1984, 821, 2066, 858], [2079, 821, 2178, 849], [463, 873, 615, 909], [628, 872, 761, 907], [774, 872, 863, 901], [379, 927, 440, 961], [464, 928, 488, 956], [502, 927, 558, 955], [571, 927, 629, 955], [640, 928, 663, 956], [678, 928, 728, 955], [747, 927, 888, 955], [899, 927, 1064, 955], [1075, 927, 1257, 964], [1271, 927, 1301, 955], [1313, 927, 1407, 955], [1418, 927, 1498, 955], [1517, 928, 1550, 955], [1561, 927, 1668, 961], [1681, 928, 1746, 956], [1761, 927, 1850, 956], [378, 982, 440, 1016], [464, 983, 487, 1011], [500, 982, 565, 1016], [579, 982, 607, 1011], [620, 982, 655, 1016], [669, 982, 725, 1010], [736, 983, 759, 1011], [773, 983, 822, 1010], [841, 982, 943, 1011], [957, 982, 1065, 1019], [1076, 983, 1224, 1019], [1236, 982, 1304, 1011], [1315, 982, 1451, 1019], [1460, 983, 1653, 1019], [1671, 982, 1801, 1010], [1813, 982, 1892, 1011], [1904, 982, 2078, 1019], [2091, 982, 2179, 1011], [465, 1033, 652, 1070], [653, 1033, 914, 1070], [915, 1033, 1281, 1070], [378, 1088, 440, 1122], [464, 1089, 488, 1117], [502, 1088, 567, 1122], [581, 1089, 612, 1116], [627, 1089, 719, 1122], [734, 1088, 791, 1116], [802, 1089, 825, 1117], [840, 1089, 890, 1116], [909, 1088, 958, 1116], [970, 1088, 1104, 1116], [1116, 1088, 1275, 1125], [1287, 1088, 1335, 1116], [1347, 1097, 1363, 1116], [1374, 1088, 1452, 1116], [1465, 1088, 1501, 1116], [1510, 1088, 1598, 1116], [1611, 1088, 1691, 1116], [1703, 1088, 1864, 1125], [1883, 1089, 1916, 1116], [1925, 1088, 2015, 1117], [2025, 1088, 2175, 1117], [466, 1139, 651, 1176], [664, 1149, 703, 1167], [715, 1139, 900, 1176], [912, 1140, 1079, 1175], [1091, 1139, 1154, 1168], [1163, 1140, 1244, 1167], [1255, 1140, 1384, 1176], [1398, 1139, 1487, 1168], [378, 1194, 440, 1228], [464, 1195, 487, 1223], [501, 1194, 618, 1228], [632, 1195, 666, 1222], [679, 1195, 824, 1228], [838, 1194, 873, 1223], [888, 1194, 1064, 1228], [1078, 1194, 1135, 1222], [1146, 1195, 1173, 1222], [1187, 1194, 1278, 1222], [1296, 1194, 1440, 1222], [1450, 1194, 1531, 1222], [1544, 1194, 1728, 1231], [1742, 1194, 1789, 1222], [1801, 1194, 1970, 1223], [1982, 1194, 2122, 1231], [2141, 1195, 2174, 1222], [462, 1244, 559, 1278], [572, 1244, 661, 1273], [681, 1245, 722, 1272], [735, 1253, 848, 1281], [379, 1299, 440, 1333], [465, 1300, 499, 1327], [512, 1299, 661, 1327], [680, 1299, 919, 1336], [930, 1299, 1151, 1336], [1165, 1299, 1403, 1328], [1415, 1308, 1468, 1336], [1480, 1299, 1732, 1336], [1746, 1299, 1939, 1328], [1956, 1299, 2173, 1328], [462, 1350, 701, 1387], [714, 1356, 743, 1378], [751, 1350, 883, 1386], [894, 1351, 1087, 1387], [1101, 1350, 1362, 1385], [1380, 1350, 1465, 1379], [379, 1405, 440, 1439], [464, 1406, 496, 1433], [510, 1405, 613, 1439], [627, 1405, 655, 1434], [669, 1414, 726, 1433], [737, 1405, 774, 1433], [786, 1405, 872, 1439], [886, 1405, 942, 1433], [954, 1406, 978, 1433], [992, 1405, 1168, 1433], [1187, 1405, 1248, 1433], [1260, 1414, 1353, 1442], [1365, 1405, 1444, 1433], [1457, 1405, 1504, 1433], [1514, 1405, 1631, 1442], [1643, 1405, 1817, 1442], [1834, 1406, 1857, 1434], [1871, 1406, 1903, 1433], [1918, 1405, 2025, 1434], [2040, 1405, 2116, 1439], [2129, 1405, 2177, 1434], [465, 1456, 576, 1490], [590, 1456, 679, 1485], [379, 1511, 440, 1545], [464, 1512, 524, 1540], [539, 1511, 627, 1539], [640, 1511, 697, 1539], [709, 1512, 745, 1539], [760, 1511, 794, 1540], [809, 1511, 966, 1540], [985, 1511, 1149, 1548], [1151, 1520, 1169, 1548], [1183, 1515, 1283, 1539], [1294, 1511, 1398, 1548], [1411, 1515, 1483, 1548], [1503, 1511, 1597, 1540], [1606, 1511, 1733, 1540], [1745, 1511, 1783, 1548], [1788, 1511, 1938, 1548], [1952, 1511, 2141, 1548], [2155, 1511, 2174, 1539], [465, 1562, 519, 1597], [534, 1562, 710, 1599], [725, 1562, 810, 1591], [379, 1617, 440, 1651], [464, 1618, 487, 1646], [501, 1618, 524, 1646], [538, 1618, 673, 1645], [691, 1617, 851, 1645], [865, 1626, 1012, 1646], [1025, 1617, 1127, 1645], [1141, 1621, 1169, 1645], [1180, 1617, 1279, 1654], [1291, 1617, 1469, 1654], [1481, 1617, 1554, 1645], [1566, 1626, 1607, 1645], [1619, 1626, 1708, 1654], [1710, 1617, 1903, 1645], [1925, 1617, 1955, 1646], [1969, 1618, 2001, 1645], [2014, 1617, 2106, 1646], [2122, 1617, 2177, 1646], [463, 1668, 549, 1696], [561, 1667, 617, 1696], [630, 1667, 655, 1695], [666, 1667, 773, 1701], [787, 1667, 1055, 1701], [1072, 1667, 1158, 1696], [379, 1722, 440, 1756], [465, 1723, 498, 1750], [515, 1723, 671, 1750], [700, 1722, 847, 1751], [861, 1722, 1002, 1750], [1018, 1722, 1067, 1750], [1081, 1722, 1274, 1759], [1290, 1722, 1462, 1759], [1478, 1722, 1629, 1759], [1645, 1722, 1793, 1750], [1821, 1722, 1984, 1750], [1999, 1723, 2113, 1759], [2128, 1722, 2177, 1756], [465, 1773, 604, 1802], [616, 1773, 788, 1810], [800, 1773, 836, 1801], [845, 1773, 990, 1807], [1003, 1773, 1121, 1807], [1135, 1773, 1224, 1802], [379, 1828, 440, 1862], [464, 1829, 488, 1857], [502, 1828, 639, 1856], [652, 1828, 709, 1856], [722, 1828, 750, 1857], [764, 1829, 787, 1857], [802, 1828, 926, 1865], [943, 1828, 1119, 1857], [1133, 1828, 1353, 1865], [1374, 1828, 1515, 1865], [1526, 1828, 1641, 1865], [1655, 1828, 1744, 1857], [378, 1883, 440, 1917], [464, 1884, 501, 1911], [514, 1883, 627, 1917], [641, 1883, 668, 1912], [682, 1883, 767, 1920], [770, 1887, 817, 1917], [829, 1883, 863, 1911], [880, 1883, 1027, 1911], [1039, 1883, 1218, 1920], [1234, 1883, 1435, 1912], [1446, 1883, 1506, 1912], [1518, 1881, 1663, 1920], [1677, 1884, 1705, 1911], [1718, 1883, 1936, 1920], [1953, 1883, 2178, 1918], [465, 1934, 554, 1963], [379, 1989, 440, 2023], [465, 1989, 501, 2018], [516, 1989, 620, 2017], [639, 1989, 889, 2026], [901, 1989, 1027, 2026], [1039, 1989, 1259, 2017], [1271, 1989, 1301, 2017], [1314, 1998, 1330, 2017], [1340, 1989, 1466, 2026], [1478, 1998, 1575, 2026], [1592, 1989, 1821, 2017], [1832, 1990, 2067, 2026], [2081, 1989, 2177, 2024], [465, 2040, 597, 2074], [615, 2040, 700, 2069], [379, 2095, 440, 2129], [465, 2095, 499, 2124], [512, 2096, 632, 2124], [645, 2095, 700, 2123], [711, 2095, 738, 2124], [742, 2095, 905, 2124], [921, 2095, 949, 2123], [959, 2095, 1116, 2123], [1127, 2095, 1188, 2123], [1200, 2104, 1325, 2132], [1327, 2095, 1404, 2123], [1413, 2095, 1483, 2123], [1494, 2095, 1637, 2123], [1646, 2095, 1878, 2132], [1894, 2095, 2054, 2124], [2060, 2095, 2178, 2129], [465, 2145, 554, 2174], [574, 2146, 655, 2174], [668, 2148, 782, 2181], [796, 2145, 1420, 2181], [379, 2200, 440, 2234], [465, 2200, 501, 2228], [516, 2200, 645, 2228], [659, 2200, 716, 2228], [728, 2201, 754, 2228], [757, 2201, 798, 2229], [812, 2200, 985, 2228], [1003, 2201, 1071, 2228], [1084, 2200, 1140, 2228], [1152, 2200, 1272, 2228], [1286, 2200, 1387, 2228], [1399, 2200, 1556, 2237], [1558, 2200, 1615, 2228], [1617, 2200, 1724, 2228], [1736, 2200, 1872, 2237], [1891, 2201, 1992, 2229], [1997, 2200, 2177, 2234], [465, 2251, 554, 2280], [379, 2306, 440, 2340], [465, 2307, 491, 2334], [506, 2307, 656, 2343], [669, 2306, 727, 2334], [739, 2307, 763, 2334], [766, 2307, 809, 2334], [814, 2307, 898, 2335], [913, 2307, 988, 2334], [1007, 2306, 1231, 2335], [1243, 2306, 1279, 2334], [1289, 2306, 1459, 2343], [1471, 2306, 1539, 2334], [1550, 2306, 1638, 2343], [1651, 2306, 1739, 2334], [1752, 2306, 1847, 2335], [1866, 2306, 2120, 2343], [2134, 2306, 2174, 2334], [465, 2357, 720, 2392], [734, 2357, 823, 2386], [379, 2412, 440, 2446], [465, 2412, 501, 2440], [515, 2412, 651, 2440], [670, 2412, 832, 2449], [847, 2412, 903, 2440], [914, 2412, 1102, 2440], [1116, 2412, 1151, 2440], [1160, 2412, 1208, 2440], [1220, 2412, 1307, 2440], [1319, 2412, 1407, 2440], [1423, 2412, 1537, 2441], [1550, 2412, 1586, 2449], [1592, 2412, 1746, 2446], [1761, 2411, 2077, 2447], [2091, 2412, 2178, 2441], [379, 2467, 440, 2501], [465, 2468, 499, 2495], [514, 2468, 542, 2495], [557, 2467, 753, 2495], [772, 2468, 941, 2495], [953, 2471, 1104, 2504], [1118, 2467, 1175, 2495], [1186, 2467, 1236, 2495], [1247, 2467, 1396, 2504], [1407, 2467, 1491, 2504], [1504, 2467, 1670, 2504], [1689, 2467, 1784, 2496], [1793, 2468, 1816, 2496], [1834, 2467, 1957, 2496], [1969, 2467, 2031, 2496], [2042, 2467, 2120, 2504], [2138, 2467, 2174, 2495], [465, 2518, 676, 2553], [694, 2518, 779, 2547], [379, 2573, 440, 2607], [466, 2573, 496, 2602], [513, 2574, 640, 2610], [658, 2574, 703, 2601], [720, 2573, 880, 2607], [898, 2573, 934, 2602], [951, 2573, 1123, 2610], [1142, 2573, 1200, 2601], [1216, 2574, 1251, 2601], [1268, 2573, 1426, 2610], [1455, 2573, 1519, 2601], [1535, 2573, 1628, 2601], [1642, 2582, 1767, 2610], [1783, 2573, 2032, 2610], [2047, 2573, 2083, 2601], [2096, 2573, 2175, 2601], [465, 2624, 646, 2661], [658, 2624, 726, 2652], [738, 2628, 806, 2652], [824, 2624, 1013, 2653], [1025, 2625, 1122, 2653], [1140, 2624, 1242, 2661], [1257, 2625, 1321, 2652], [1336, 2624, 1399, 2653], [1408, 2624, 1663, 2661], [1676, 2624, 1753, 2659], [1766, 2624, 1943, 2661], [1954, 2624, 2043, 2653], [378, 2678, 440, 2712], [464, 2679, 497, 2706], [511, 2679, 531, 2706], [546, 2678, 653, 2712], [668, 2678, 696, 2707], [711, 2678, 815, 2712], [829, 2678, 886, 2706], [897, 2679, 929, 2706], [943, 2678, 1064, 2706], [1082, 2678, 1247, 2706], [1258, 2678, 1330, 2706], [1342, 2678, 1486, 2707], [1497, 2678, 1590, 2706], [1602, 2678, 1687, 2706], [1699, 2678, 1832, 2707], [1844, 2678, 2026, 2715], [2044, 2678, 2173, 2714], [463, 2730, 501, 2763], [515, 2729, 720, 2763], [738, 2729, 823, 2758], [1255, 2935, 1294, 2964], [379, 243, 440, 276], [465, 242, 686, 279], [700, 242, 747, 276], [761, 243, 857, 279], [870, 243, 905, 276], [919, 242, 969, 276], [983, 243, 1030, 276], [1044, 243, 1168, 276], [1180, 243, 1215, 276], [1230, 242, 1382, 276], [1397, 242, 1437, 276], [1450, 243, 1512, 276], [1527, 242, 1566, 276], [1580, 243, 1697, 279], [1710, 243, 1754, 276], [1767, 242, 1919, 279], [1931, 242, 1979, 276], [1992, 242, 2116, 276], [2130, 242, 2177, 276], [465, 292, 628, 326], [640, 293, 695, 326], [708, 293, 793, 329], [806, 292, 890, 326], [902, 292, 1027, 326], [1039, 293, 1071, 320], [1089, 293, 1248, 329], [1258, 293, 1351, 329], [1364, 292, 1449, 321], [1460, 292, 1562, 320], [1574, 292, 1771, 329], [1782, 292, 1945, 329], [1960, 292, 2174, 320], [463, 343, 593, 372], [609, 343, 647, 380], [658, 343, 825, 380], [841, 344, 942, 372], [960, 343, 1079, 378], [1101, 344, 1174, 371], [1189, 343, 1279, 376], [1302, 343, 1422, 372], [1440, 343, 1507, 376], [1526, 343, 1664, 372], [1679, 343, 1705, 376], [1722, 353, 1821, 380], [1838, 343, 1976, 371], [2007, 343, 2175, 379], [468, 394, 1736, 430], [379, 449, 440, 483], [466, 449, 496, 478], [512, 449, 603, 478], [618, 449, 676, 477], [691, 449, 721, 478], [736, 449, 826, 477], [849, 450, 972, 477], [986, 449, 1044, 477], [1059, 449, 1246, 477], [1259, 449, 1411, 486], [1424, 449, 1511, 486], [1525, 449, 1712, 486], [1734, 450, 1758, 478], [1778, 449, 1899, 478], [1909, 449, 2063, 485], [2082, 449, 2177, 484], [465, 500, 554, 529], [379, 555, 440, 589], [465, 556, 510, 583], [525, 555, 672, 589], [687, 556, 724, 583], [738, 556, 771, 583], [785, 556, 884, 589], [899, 555, 957, 583], [970, 556, 997, 583], [1011, 555, 1105, 583], [1124, 555, 1343, 592], [1355, 556, 1447, 583], [1460, 555, 1496, 583], [1506, 556, 1629, 583], [1640, 555, 1957, 584], [1968, 555, 2098, 583], [2101, 555, 2175, 583], [465, 606, 590, 635], [602, 606, 827, 643], [846, 607, 879, 634], [888, 606, 1048, 635], [1062, 607, 1090, 634], [1102, 606, 1217, 635], [1228, 606, 1424, 643], [1436, 607, 1618, 643], [1630, 606, 1760, 642], [1773, 606, 1894, 641], [1908, 606, 1997, 635], [378, 661, 440, 695], [466, 661, 496, 690], [511, 661, 573, 690], [592, 661, 732, 690], [744, 670, 924, 689], [936, 661, 1056, 689], [1066, 661, 1207, 698], [1207, 661, 1374, 698], [1393, 662, 1426, 689], [1435, 661, 1597, 690], [1611, 662, 1640, 689], [1651, 661, 1768, 690], [1778, 661, 1978, 698], [1989, 662, 2173, 698], [464, 711, 603, 747], [617, 711, 706, 740], [379, 766, 440, 800], [466, 766, 494, 795], [510, 766, 572, 800], [586, 766, 614, 795], [629, 766, 787, 800], [802, 766, 859, 794], [872, 766, 900, 795], [915, 766, 1039, 803], [1053, 766, 1172, 794], [1193, 766, 1406, 803], [1412, 766, 1467, 803], [1477, 766, 1615, 794], [1629, 766, 1775, 803], [1794, 767, 1869, 794], [1880, 767, 1975, 800], [1989, 766, 2078, 795], [379, 821, 440, 855], [465, 821, 501, 850], [516, 821, 617, 855], [631, 821, 659, 850], [673, 821, 775, 855], [790, 821, 845, 849], [857, 822, 880, 850], [893, 822, 1058, 849], [1077, 821, 1228, 849], [1240, 821, 1375, 850], [1385, 821, 1490, 858], [1501, 821, 1586, 849], [1597, 825, 1626, 849], [1637, 821, 1862, 858], [1875, 821, 1930, 849], [1944, 825, 2064, 858], [2075, 825, 2176, 849], [464, 872, 641, 909], [661, 873, 694, 900], [706, 872, 916, 909], [928, 881, 1021, 909], [1034, 872, 1186, 906], [1200, 872, 1289, 901], [378, 927, 440, 961], [465, 928, 503, 955], [518, 927, 663, 964], [675, 931, 705, 955], [718, 927, 754, 955], [773, 927, 924, 964], [936, 936, 1016, 964], [1029, 927, 1366, 964], [1367, 927, 1599, 964], [1611, 927, 1647, 955], [1657, 927, 1870, 964], [1881, 927, 1913, 955], [1925, 936, 2040, 955], [2057, 928, 2173, 956], [465, 978, 616, 1012], [631, 978, 946, 1013], [960, 978, 1129, 1006], [1141, 978, 1230, 1007], [379, 1033, 440, 1067], [465, 1034, 499, 1061], [514, 1033, 688, 1061], [707, 1033, 888, 1070], [901, 1033, 1058, 1070], [1071, 1033, 1128, 1061], [1141, 1033, 1285, 1061], [1297, 1033, 1346, 1062], [1358, 1033, 1406, 1061], [1419, 1033, 1507, 1061], [1525, 1034, 1549, 1062], [1562, 1034, 1594, 1061], [1610, 1033, 1718, 1062], [1734, 1033, 1811, 1067], [1824, 1033, 2076, 1068], [2094, 1033, 2178, 1062], [379, 1088, 440, 1122], [465, 1089, 499, 1116], [513, 1088, 678, 1116], [692, 1088, 748, 1116], [760, 1089, 784, 1116], [799, 1089, 900, 1125], [920, 1088, 1031, 1125], [1044, 1088, 1214, 1125], [1227, 1088, 1284, 1116], [1295, 1088, 1347, 1116], [1360, 1092, 1426, 1125], [1437, 1088, 1586, 1116], [1598, 1088, 1645, 1116], [1656, 1088, 1741, 1117], [1753, 1088, 1820, 1116], [1831, 1088, 1918, 1125], [1931, 1088, 1979, 1116], [1991, 1088, 2079, 1116], [2091, 1088, 2179, 1116], [463, 1140, 674, 1173], [688, 1139, 879, 1174], [893, 1139, 982, 1168], [379, 1194, 440, 1228], [465, 1195, 501, 1222], [516, 1194, 695, 1228], [710, 1195, 755, 1222], [771, 1194, 932, 1228], [948, 1194, 977, 1223], [992, 1195, 1112, 1228], [1126, 1195, 1151, 1223], [1165, 1194, 1241, 1228], [1257, 1194, 1315, 1222], [1328, 1195, 1366, 1222], [1381, 1194, 1505, 1231], [1528, 1194, 1663, 1231], [1678, 1194, 1736, 1222], [1750, 1194, 1944, 1222], [1958, 1194, 2009, 1222], [2021, 1194, 2071, 1222], [2084, 1194, 2173, 1222], [465, 1244, 554, 1272], [573, 1245, 596, 1273], [610, 1244, 707, 1280], [719, 1244, 789, 1273], [804, 1244, 885, 1273], [901, 1244, 1001, 1273], [1012, 1245, 1046, 1278], [1059, 1244, 1292, 1279], [1306, 1244, 1395, 1273], [378, 1299, 440, 1333], [465, 1300, 500, 1327], [513, 1300, 537, 1328], [551, 1299, 728, 1327], [746, 1299, 895, 1336], [906, 1299, 1069, 1336], [1080, 1299, 1268, 1336], [1280, 1299, 1452, 1327], [1464, 1299, 1514, 1328], [1525, 1299, 1609, 1327], [1621, 1299, 1760, 1336], [1781, 1299, 1838, 1327], [1848, 1299, 1965, 1328], [1977, 1299, 2015, 1336], [2020, 1299, 2177, 1333], [464, 1350, 718, 1385], [731, 1350, 771, 1379], [783, 1350, 872, 1379], [892, 1350, 952, 1378], [973, 1350, 1343, 1379], [379, 1405, 440, 1439], [465, 1406, 503, 1434], [517, 1405, 601, 1433], [612, 1409, 642, 1433], [655, 1405, 691, 1433], [710, 1405, 812, 1433], [823, 1409, 956, 1442], [969, 1405, 1005, 1433], [1015, 1414, 1093, 1442], [1105, 1405, 1285, 1442], [1295, 1405, 1436, 1433], [1448, 1405, 1489, 1442], [1502, 1405, 1666, 1442], [1680, 1405, 1813, 1442], [1826, 1405, 1862, 1433], [1872, 1409, 1972, 1433], [1985, 1405, 2043, 1433], [2056, 1405, 2174, 1433], [465, 1456, 556, 1484], [568, 1456, 676, 1484], [688, 1456, 803, 1493], [814, 1456, 855, 1493], [867, 1456, 1124, 1493], [1136, 1465, 1243, 1493], [1261, 1457, 1346, 1484], [1360, 1456, 1438, 1485], [1451, 1456, 1544, 1485], [1560, 1456, 1616, 1485], [1634, 1456, 1715, 1490], [1728, 1456, 1975, 1490], [1988, 1457, 2064, 1485], [2079, 1456, 2164, 1485], [379, 1511, 440, 1545], [464, 1512, 530, 1540], [544, 1512, 611, 1539], [624, 1511, 681, 1539], [693, 1512, 729, 1539], [743, 1511, 892, 1548], [911, 1512, 978, 1539], [990, 1511, 1139, 1539], [1151, 1511, 1187, 1539], [1196, 1511, 1331, 1548], [1344, 1511, 1571, 1548], [1586, 1511, 1691, 1539], [1702, 1511, 1742, 1548], [1754, 1520, 1823, 1539], [1824, 1511, 1967, 1548], [1979, 1511, 2067, 1548], [2080, 1520, 2173, 1548], [465, 1562, 567, 1591], [574, 1563, 630, 1590], [639, 1562, 799, 1591], [812, 1563, 841, 1590], [852, 1562, 967, 1591], [978, 1562, 1175, 1599], [1187, 1563, 1369, 1599], [1381, 1562, 1519, 1598], [1533, 1562, 1622, 1591], [379, 1617, 440, 1651], [465, 1617, 546, 1646], [561, 1617, 653, 1654], [667, 1617, 723, 1645], [734, 1618, 777, 1645], [791, 1618, 823, 1645], [838, 1617, 936, 1646], [939, 1617, 1095, 1646], [1107, 1617, 1228, 1645], [1231, 1617, 1303, 1645], [1314, 1617, 1384, 1645], [1397, 1617, 1539, 1646], [1551, 1617, 1716, 1654], [1735, 1617, 1829, 1646], [1837, 1617, 1963, 1646], [1975, 1627, 2013, 1645], [2026, 1617, 2173, 1654], [466, 1667, 656, 1704], [673, 1667, 923, 1702], [941, 1667, 1026, 1696], [379, 1722, 440, 1756], [465, 1723, 499, 1750], [513, 1722, 676, 1759], [691, 1722, 718, 1751], [733, 1722, 828, 1759], [840, 1723, 883, 1750], [898, 1722, 1078, 1759], [1092, 1722, 1148, 1750], [1160, 1723, 1190, 1750], [1205, 1723, 1305, 1759], [1324, 1722, 1372, 1750], [1384, 1722, 1476, 1750], [1478, 1722, 1694, 1759], [1705, 1722, 1752, 1750], [1764, 1731, 1780, 1750], [1791, 1722, 1876, 1751], [1889, 1722, 1925, 1750], [1934, 1722, 2014, 1750], [2026, 1722, 2174, 1750], [465, 1773, 667, 1810], [684, 1773, 866, 1801], [882, 1773, 1049, 1801], [1081, 1774, 1115, 1801], [1130, 1773, 1338, 1810], [1356, 1773, 1428, 1801], [1444, 1773, 1533, 1802], [1548, 1773, 1739, 1810], [1755, 1783, 1795, 1801], [1812, 1773, 1928, 1809], [1943, 1773, 2177, 1810], [464, 1824, 587, 1853], [602, 1824, 647, 1858], [661, 1824, 750, 1853], [379, 1879, 440, 1913], [464, 1880, 487, 1908], [501, 1880, 592, 1916], [605, 1879, 661, 1907], [673, 1879, 708, 1914], [721, 1879, 756, 1907], [768, 1879, 824, 1907], [837, 1879, 864, 1908], [878, 1880, 960, 1916], [972, 1879, 1028, 1907], [1040, 1880, 1076, 1907], [1076, 1880, 1153, 1907], [1165, 1879, 1220, 1907], [1232, 1880, 1256, 1907], [1270, 1879, 1366, 1907], [1367, 1879, 1450, 1907], [1461, 1880, 1484, 1908], [1497, 1880, 1547, 1907], [1564, 1879, 1592, 1907], [1603, 1879, 1714, 1916], [1726, 1879, 1861, 1908], [1873, 1879, 1994, 1907], [2006, 1879, 2175, 1916], [465, 1930, 514, 1958], [525, 1930, 672, 1967], [685, 1930, 769, 1958], [782, 1930, 934, 1958], [947, 1930, 1071, 1958], [1088, 1931, 1121, 1958], [1133, 1930, 1341, 1967], [1353, 1930, 1391, 1967], [1398, 1930, 1445, 1958], [1459, 1930, 1528, 1959], [1538, 1930, 1761, 1958], [1774, 1930, 1963, 1967], [1976, 1940, 2016, 1958], [2026, 1930, 2173, 1958], [463, 1982, 615, 2018], [628, 1981, 816, 2016], [829, 1990, 921, 2018], [935, 1981, 1080, 2015], [1094, 1981, 1183, 2010], [379, 2036, 440, 2070], [466, 2036, 494, 2065], [508, 2037, 531, 2065], [546, 2036, 670, 2073], [684, 2037, 717, 2064], [732, 2037, 768, 2064], [781, 2036, 907, 2070], [922, 2036, 979, 2064], [990, 2037, 1026, 2064], [1030, 2036, 1076, 2064], [1080, 2037, 1127, 2064], [1141, 2036, 1327, 2073], [1347, 2036, 1455, 2073], [1466, 2036, 1701, 2064], [1712, 2036, 1753, 2073], [1766, 2036, 1920, 2073], [1933, 2036, 2178, 2073], [464, 2087, 554, 2114], [567, 2087, 664, 2115], [680, 2086, 737, 2123], [752, 2087, 849, 2120], [863, 2086, 1158, 2121], [1172, 2086, 1261, 2115], [379, 2141, 440, 2175], [464, 2142, 508, 2169], [522, 2141, 655, 2178], [670, 2141, 697, 2170], [713, 2141, 773, 2175], [788, 2141, 844, 2169], [855, 2142, 878, 2170], [892, 2142, 924, 2169], [938, 2141, 1045, 2169], [1063, 2142, 1130, 2169], [1140, 2142, 1268, 2170], [1279, 2141, 1420, 2169], [1433, 2141, 1480, 2169], [1491, 2141, 1539, 2169], [1551, 2141, 1653, 2178], [1665, 2141, 1762, 2169], [1772, 2142, 1874, 2169], [1894, 2142, 1926, 2169], [1940, 2141, 2122, 2178], [2135, 2151, 2173, 2169], [467, 2193, 661, 2228], [674, 2193, 702, 2220], [712, 2192, 861, 2229], [872, 2192, 1076, 2229], [1090, 2192, 1179, 2221], [378, 2247, 440, 2281], [466, 2247, 496, 2276], [516, 2248, 610, 2284], [631, 2248, 655, 2276], [675, 2248, 780, 2284], [801, 2248, 844, 2275], [864, 2248, 934, 2281], [954, 2248, 993, 2275], [1012, 2247, 1128, 2284], [1149, 2248, 1175, 2275], [1195, 2247, 1321, 2281], [1343, 2247, 1401, 2275], [1419, 2248, 1443, 2276], [1463, 2248, 1515, 2275], [1552, 2247, 1603, 2275], [1620, 2247, 1764, 2275], [1781, 2247, 1916, 2275], [1934, 2247, 2110, 2284], [2127, 2247, 2175, 2275], [465, 2298, 759, 2326], [771, 2298, 964, 2335], [977, 2298, 1060, 2326], [1071, 2298, 1222, 2326], [1234, 2298, 1476, 2335], [1488, 2298, 1650, 2326], [1670, 2299, 1702, 2326], [1712, 2298, 1801, 2327], [1810, 2298, 1995, 2335], [2007, 2299, 2174, 2334], [465, 2349, 528, 2378], [537, 2350, 618, 2377], [629, 2350, 750, 2386], [763, 2349, 884, 2384], [898, 2349, 1034, 2386], [1037, 2349, 1182, 2383], [1195, 2349, 1285, 2383], [1299, 2349, 1417, 2386], [1429, 2349, 1518, 2378], [379, 2404, 440, 2438], [465, 2405, 495, 2432], [510, 2405, 561, 2432], [579, 2404, 627, 2433], [638, 2404, 853, 2441], [865, 2404, 913, 2432], [924, 2404, 1069, 2441], [1082, 2413, 1158, 2441], [1176, 2405, 1208, 2432], [1217, 2404, 1374, 2433], [1386, 2405, 1415, 2432], [1425, 2404, 1538, 2433], [1548, 2404, 1741, 2441], [1752, 2405, 1930, 2441], [1942, 2404, 2078, 2440], [2091, 2404, 2179, 2433], [379, 2459, 440, 2493], [464, 2460, 508, 2487], [522, 2460, 604, 2487], [617, 2459, 672, 2487], [685, 2460, 715, 2487], [728, 2459, 792, 2487], [810, 2459, 915, 2487], [928, 2459, 1077, 2488], [1090, 2459, 1145, 2487], [1157, 2459, 1333, 2487], [1344, 2459, 1375, 2487], [1386, 2459, 1565, 2496], [1577, 2459, 1648, 2488], [1659, 2459, 1799, 2496], [1812, 2459, 1969, 2487], [1987, 2460, 2010, 2488], [2024, 2460, 2055, 2487], [2071, 2459, 2178, 2488], [464, 2509, 529, 2538], [544, 2510, 577, 2543], [591, 2509, 803, 2544], [817, 2509, 906, 2538], [379, 2564, 440, 2598], [465, 2565, 510, 2592], [527, 2564, 594, 2592], [612, 2564, 670, 2592], [687, 2565, 717, 2592], [735, 2564, 832, 2593], [864, 2564, 893, 2592], [895, 2564, 1068, 2592], [1082, 2564, 1279, 2601], [1295, 2564, 1404, 2601], [1421, 2564, 1559, 2601], [1575, 2564, 1738, 2601], [1754, 2564, 1802, 2592], [1818, 2564, 1891, 2592], [1908, 2564, 2056, 2592], [2072, 2564, 2174, 2601], [464, 2615, 649, 2643], [668, 2615, 828, 2643], [838, 2619, 946, 2652], [959, 2615, 1070, 2644], [1083, 2615, 1175, 2644], [1178, 2615, 1287, 2649], [1255, 2935, 1295, 2964], [376, 229, 416, 270], [478, 229, 831, 271], [849, 230, 1154, 282], [374, 336, 411, 363], [410, 335, 529, 372], [540, 335, 560, 363], [562, 335, 737, 372], [750, 344, 766, 363], [778, 335, 837, 363], [849, 335, 933, 363], [946, 335, 1028, 363], [1042, 335, 1122, 363], [1133, 344, 1249, 363], [1262, 335, 1404, 372], [1418, 344, 1465, 363], [1476, 344, 1651, 363], [1653, 335, 1733, 363], [1744, 339, 1845, 363], [1856, 335, 1940, 363], [1954, 335, 2016, 369], [2031, 335, 2079, 363], [2090, 344, 2174, 363], [376, 386, 490, 414], [437, 438, 491, 465], [504, 437, 536, 465], [552, 443, 578, 467], [594, 437, 642, 465], [656, 437, 693, 465], [707, 446, 743, 465], [744, 441, 826, 474], [843, 437, 871, 465], [883, 437, 1018, 465], [1030, 447, 1047, 465], [1065, 447, 1069, 465], [1086, 437, 1118, 465], [1133, 444, 1170, 465], [1185, 437, 1248, 466], [1263, 434, 1363, 475], [1375, 441, 1444, 468], [1450, 434, 1503, 475], [1517, 437, 1613, 465], [1626, 437, 1718, 466], [1729, 438, 1982, 466], [1994, 437, 2020, 465], [2029, 437, 2077, 465], [2088, 446, 2174, 474], [377, 497, 400, 516], [416, 494, 437, 518], [455, 488, 487, 516], [501, 488, 587, 516], [600, 497, 749, 525], [764, 485, 836, 526], [852, 488, 912, 516], [924, 497, 1072, 525], [1074, 492, 1131, 516], [1144, 497, 1167, 516], [1171, 488, 1212, 522], [1223, 488, 1311, 516], [1325, 488, 1385, 516], [956, 589, 997, 614], [1015, 587, 1052, 608], [1068, 589, 1091, 608], [1119, 586, 1181, 609], [1207, 577, 1282, 618], [1301, 582, 1327, 614], [1342, 579, 1472, 614], [1485, 577, 1592, 618], [2088, 580, 2173, 615], [374, 672, 435, 700], [448, 676, 491, 700], [503, 672, 538, 700], [546, 681, 652, 709], [663, 672, 705, 700], [718, 681, 831, 700], [842, 672, 991, 700], [1004, 681, 1043, 700], [1056, 672, 1088, 700], [1100, 672, 1125, 700], [1137, 672, 1264, 700], [1275, 672, 1314, 709], [1327, 669, 1434, 710], [1450, 672, 1536, 707], [1547, 672, 1682, 700], [1684, 681, 1756, 700], [1769, 672, 1832, 700], [1844, 672, 1939, 700], [1951, 672, 2055, 701], [2065, 682, 2174, 700], [369, 723, 548, 760], [565, 723, 628, 751], [641, 723, 792, 752], [795, 723, 936, 760], [949, 723, 985, 751], [995, 732, 1011, 751], [1024, 727, 1067, 751], [1080, 722, 1109, 752], [1122, 723, 1147, 751], [1160, 723, 1281, 751], [1294, 732, 1324, 751], [925, 849, 989, 885], [1006, 850, 1038, 878], [1053, 857, 1090, 878], [1109, 847, 1321, 888], [1370, 821, 1397, 857], [1464, 820, 1617, 886], [2088, 850, 2173, 885], [1370, 892, 1418, 918], [1464, 882, 1524, 910], [1540, 880, 1615, 919], [374, 976, 474, 1004], [486, 976, 510, 1004], [524, 976, 568, 1004], [580, 976, 607, 1004], [617, 976, 674, 1004], [686, 976, 759, 1013], [771, 976, 797, 1004], [807, 975, 836, 1005], [849, 976, 874, 1004], [887, 976, 1000, 1004], [438, 1027, 501, 1055], [513, 1037, 627, 1056], [638, 1028, 801, 1064], [814, 1027, 850, 1055], [859, 1037, 876, 1055], [889, 1027, 915, 1055], [928, 1027, 1017, 1064], [1029, 1027, 1070, 1064], [1082, 1024, 1173, 1065], [1192, 1037, 1230, 1055], [1245, 1036, 1433, 1067], [1459, 1024, 1505, 1065], [1518, 1024, 1552, 1065], [1569, 1044, 1595, 1045], [1608, 1024, 1695, 1065], [1709, 1027, 1767, 1055], [1780, 1036, 1797, 1055], [1807, 1027, 2000, 1064], [2012, 1027, 2175, 1064], [376, 1078, 514, 1115], [526, 1078, 550, 1106], [564, 1078, 613, 1106], [625, 1078, 755, 1106], [767, 1078, 927, 1115], [938, 1078, 974, 1106], [984, 1087, 1000, 1106], [1012, 1087, 1099, 1106], [1114, 1075, 1156, 1116], [1001, 1170, 1054, 1198], [1069, 1167, 1174, 1208], [1227, 1170, 1297, 1198], [1320, 1167, 1352, 1198], [1371, 1183, 1399, 1192], [1415, 1169, 1470, 1212], [1478, 1185, 1545, 1210], [2088, 1170, 2173, 1205], [374, 1262, 476, 1291], [489, 1262, 539, 1290], [553, 1271, 641, 1290], [658, 1259, 720, 1300], [738, 1262, 764, 1290], [778, 1262, 839, 1290], [840, 1262, 894, 1290], [912, 1259, 970, 1300], [991, 1263, 1047, 1290], [1059, 1272, 1076, 1290], [1092, 1262, 1150, 1290], [1165, 1261, 1186, 1290], [1199, 1262, 1238, 1290], [1251, 1271, 1361, 1299], [1374, 1271, 1491, 1290], [1505, 1262, 1670, 1290], [1691, 1262, 1755, 1290], [1770, 1262, 1886, 1299], [1898, 1262, 2094, 1291], [2108, 1262, 2145, 1290], [2156, 1272, 2173, 1290], [374, 1313, 445, 1341], [458, 1312, 479, 1341], [491, 1313, 516, 1341], [529, 1313, 577, 1341], [590, 1322, 703, 1342], [715, 1313, 850, 1341], [862, 1313, 950, 1350], [961, 1313, 1000, 1350], [1016, 1310, 1046, 1351], [1059, 1312, 1087, 1341], [1101, 1310, 1194, 1351], [1214, 1323, 1252, 1341], [1266, 1305, 1482, 1355], [1498, 1317, 1526, 1344], [1539, 1310, 1602, 1351], [1617, 1330, 1643, 1331], [1656, 1310, 1721, 1351], [1737, 1314, 1793, 1341], [1804, 1322, 1858, 1341], [1868, 1322, 2022, 1350], [2035, 1313, 2083, 1341], [2096, 1317, 2174, 1341], [376, 1364, 539, 1401], [552, 1364, 666, 1401], [679, 1373, 750, 1392], [762, 1364, 788, 1392], [801, 1364, 919, 1392], [931, 1364, 1130, 1392], [1142, 1364, 1178, 1392], [1189, 1373, 1206, 1392], [1217, 1373, 1334, 1392], [1347, 1364, 1487, 1392], [1498, 1364, 1573, 1393], [1584, 1364, 1634, 1392], [1648, 1364, 1776, 1401], [1789, 1364, 1950, 1392], [1961, 1373, 2058, 1398], [2072, 1364, 2174, 1393], [374, 1415, 470, 1452], [484, 1415, 533, 1443], [543, 1416, 673, 1443], [685, 1415, 829, 1452], [845, 1415, 917, 1449], [376, 1498, 578, 1536], [589, 1498, 660, 1527], [682, 1500, 735, 1527], [746, 1509, 763, 1527], [779, 1505, 800, 1529], [817, 1496, 924, 1537], [940, 1499, 1002, 1528], [1013, 1499, 1053, 1527], [1064, 1509, 1086, 1536], [1101, 1505, 1127, 1529], [1144, 1499, 1169, 1528], [1189, 1499, 1247, 1527], [1260, 1500, 1387, 1527], [1399, 1499, 1546, 1536], [1557, 1499, 1595, 1536], [1600, 1509, 1617, 1527], [1631, 1499, 1759, 1528], [1769, 1499, 1807, 1535], [1818, 1509, 1840, 1536], [1854, 1500, 1878, 1528], [1078, 1588, 1170, 1629], [1190, 1601, 1227, 1619], [1242, 1601, 1259, 1619], [1272, 1590, 1300, 1619], [1316, 1583, 1469, 1639], [2088, 1591, 2173, 1626], [375, 1683, 433, 1711], [444, 1684, 574, 1711], [586, 1683, 730, 1720], [743, 1683, 828, 1718], [842, 1684, 867, 1712], [880, 1693, 997, 1716], [1014, 1683, 1208, 1716], [1224, 1683, 1286, 1712], [1296, 1684, 1483, 1712], [375, 1767, 474, 1804], [500, 1767, 558, 1796], [570, 1776, 625, 1804], [643, 1767, 702, 1801], [716, 1768, 800, 1804], [819, 1767, 928, 1801], [2145, 1768, 2173, 1796], [376, 1851, 473, 1888], [485, 1851, 534, 1879], [546, 1852, 673, 1879], [686, 1851, 832, 1888], [845, 1851, 939, 1886], [953, 1860, 1000, 1879], [1012, 1860, 1080, 1879], [1093, 1851, 1234, 1888], [1246, 1851, 1401, 1879], [1412, 1860, 1488, 1888], [1500, 1855, 1660, 1888], [376, 1934, 549, 1964], [560, 1934, 621, 1963], [634, 1935, 725, 1970], [738, 1935, 901, 1972], [923, 1936, 977, 1963], [989, 1945, 1006, 1963], [1022, 1941, 1043, 1965], [1060, 1932, 1177, 1973], [1194, 1935, 1257, 1963], [1269, 1935, 1309, 1963], [1321, 1944, 1344, 1971], [1360, 1941, 1381, 1965], [1399, 1935, 1439, 1963], [1460, 1935, 1540, 1963], [1553, 1944, 1648, 1974], [1659, 1944, 1682, 1971], [1696, 1936, 1721, 1964], [1735, 1935, 1783, 1963], [1798, 1936, 1909, 1972], [1918, 1936, 2009, 1972], [2021, 1936, 2051, 1963], [2064, 1935, 2096, 1963], [2111, 1935, 2175, 1963], [376, 1986, 505, 2023], [518, 1980, 622, 2025], [640, 1999, 668, 2008], [683, 1983, 916, 2024], [932, 1990, 960, 2017], [976, 1979, 1043, 2029], [1058, 2003, 1084, 2004], [1098, 1980, 1184, 2025], [1201, 1987, 1255, 2019], [930, 2076, 1082, 2117], [1102, 2089, 1140, 2107], [1156, 2079, 1279, 2141], [1288, 2076, 1363, 2117], [1378, 2083, 1406, 2110], [1423, 2071, 1440, 2121], [1449, 2076, 1490, 2117], [1504, 2096, 1530, 2097], [1544, 2070, 1616, 2117], [2088, 2079, 2173, 2114], [1183, 2124, 1221, 2143], [376, 2194, 438, 2223], [449, 2194, 496, 2222], [509, 2194, 671, 2222], [681, 2204, 750, 2231], [763, 2203, 858, 2232], [877, 2204, 881, 2222], [898, 2194, 930, 2222], [945, 2201, 982, 2222], [998, 2194, 1030, 2222], [1044, 2195, 1069, 2223], [1081, 2194, 1183, 2223], [1194, 2194, 1241, 2222], [1253, 2203, 1328, 2231], [1341, 2198, 1478, 2231], [1489, 2194, 1527, 2231], [1532, 2204, 1557, 2222], [439, 2278, 623, 2307], [636, 2278, 686, 2306], [698, 2278, 830, 2306], [842, 2278, 1004, 2315], [1016, 2277, 1049, 2306], [1066, 2278, 1091, 2306], [1104, 2278, 1201, 2306], [1213, 2282, 1244, 2306], [1255, 2287, 1311, 2306], [1323, 2278, 1393, 2306], [1406, 2287, 1434, 2312], [1449, 2278, 1602, 2315], [1617, 2278, 1795, 2306], [1807, 2278, 1857, 2306], [1869, 2282, 2009, 2315], [2020, 2287, 2129, 2316], [2147, 2278, 2173, 2306], [376, 2329, 471, 2357], [483, 2333, 513, 2357], [525, 2333, 667, 2366], [679, 2329, 748, 2357], [761, 2338, 866, 2367], [883, 2329, 946, 2357], [957, 2329, 1049, 2357], [1060, 2329, 1159, 2357], [1172, 2329, 1271, 2357], [1284, 2329, 1334, 2357], [1346, 2329, 1534, 2357], [376, 2412, 578, 2450], [589, 2412, 649, 2442], [663, 2413, 803, 2448], [815, 2413, 1081, 2450], [1104, 2414, 1157, 2441], [1168, 2423, 1185, 2441], [1201, 2419, 1222, 2443], [1239, 2410, 1356, 2451], [1372, 2423, 1394, 2450], [1409, 2419, 1435, 2443], [1452, 2413, 1477, 2446], [1493, 2413, 1555, 2442], [1565, 2422, 1588, 2449], [1605, 2419, 1626, 2443], [1643, 2413, 1683, 2441], [1703, 2413, 1789, 2446], [973, 2514, 996, 2541], [1011, 2518, 1039, 2527], [1054, 2514, 1168, 2549], [1180, 2514, 1203, 2541], [1216, 2509, 1244, 2536], [1256, 2515, 1278, 2542], [1287, 2514, 1395, 2543], [1403, 2521, 1435, 2550], [1443, 2497, 1574, 2543], [2088, 2505, 2173, 2540], [374, 2597, 474, 2634], [499, 2597, 527, 2625], [539, 2597, 619, 2625], [628, 2597, 771, 2631], [786, 2606, 837, 2625], [848, 2606, 915, 2634], [932, 2597, 992, 2631], [1005, 2597, 1090, 2625], [1108, 2597, 1197, 2631], [2145, 2598, 2173, 2626], [374, 2681, 444, 2709], [457, 2681, 695, 2718], [706, 2681, 844, 2718], [857, 2681, 904, 2709], [917, 2690, 1073, 2718], [1086, 2681, 1162, 2709], [1175, 2685, 1204, 2709], [1217, 2681, 1328, 2718], [1339, 2681, 1437, 2709], [1449, 2681, 1634, 2718], [1635, 2681, 1803, 2709], [1819, 2682, 1875, 2709], [1886, 2681, 1934, 2709], [1947, 2681, 2016, 2709], [2029, 2681, 2064, 2709], [2073, 2681, 2175, 2718], [374, 2741, 422, 2761], [436, 2732, 501, 2760], [514, 2736, 637, 2769], [651, 2741, 688, 2760], [702, 2732, 869, 2760], [882, 2732, 976, 2760], [988, 2732, 1148, 2769], [1163, 2741, 1180, 2760], [1192, 2732, 1354, 2769], [1366, 2732, 1563, 2769], [1575, 2732, 1705, 2760], [1718, 2732, 1780, 2760], [1792, 2732, 1880, 2769], [1895, 2741, 1912, 2760], [1924, 2732, 1983, 2769], [1996, 2732, 2061, 2760], [2075, 2732, 2107, 2760], [2120, 2741, 2175, 2760], [377, 2783, 559, 2820], [1255, 2935, 1291, 2964], [376, 241, 578, 279], [589, 241, 660, 270], [682, 243, 735, 270], [747, 241, 768, 279], [784, 248, 805, 272], [822, 239, 929, 280], [945, 242, 1034, 271], [1051, 248, 1072, 272], [1088, 239, 1203, 280], [1223, 242, 1281, 270], [1290, 242, 1444, 279], [1457, 242, 1554, 271], [1559, 242, 1643, 279], [1655, 252, 1673, 270], [1682, 242, 1870, 279], [1874, 242, 1965, 279], [973, 331, 1031, 388], [1077, 329, 1323, 370], [1370, 338, 1413, 361], [1440, 332, 1539, 362], [1556, 332, 1585, 360], [2088, 332, 2173, 367], [963, 417, 1032, 475], [1077, 409, 1271, 456], [1287, 415, 1434, 456], [2088, 418, 2173, 453], [374, 523, 474, 560], [499, 523, 657, 551], [670, 532, 706, 551], [718, 527, 799, 551], [811, 523, 942, 552], [955, 532, 975, 551], [991, 536, 1019, 545], [1035, 523, 1107, 557], [1121, 532, 1155, 551], [1168, 523, 1228, 551], [1240, 523, 1290, 551], [1301, 523, 1371, 551], [1383, 523, 1499, 551], [1501, 523, 1557, 551], [952, 613, 1012, 627], [1247, 604, 1269, 624], [1400, 613, 1405, 618], [1563, 630, 1589, 631], [1631, 604, 1653, 624], [858, 610, 934, 651], [952, 634, 980, 635], [996, 612, 1064, 670], [1085, 610, 1163, 651], [1179, 617, 1245, 644], [1274, 613, 1335, 641], [1349, 617, 1377, 644], [1391, 612, 1455, 670], [1475, 610, 1547, 651], [1603, 622, 1689, 649], [374, 718, 474, 746], [485, 727, 567, 755], [578, 718, 729, 755], [740, 718, 829, 755], [841, 718, 971, 746], [983, 718, 1157, 755], [1171, 718, 1267, 755], [1281, 718, 1375, 753], [2145, 718, 2173, 747], [437, 801, 565, 829], [578, 810, 618, 829], [631, 801, 823, 829], [834, 801, 1040, 838], [1053, 810, 1100, 829], [1114, 801, 1177, 829], [1189, 801, 1325, 838], [1337, 805, 1366, 829], [1379, 801, 1532, 829], [1546, 810, 1612, 829], [1613, 801, 1678, 829], [1687, 801, 1735, 829], [1747, 801, 1988, 838], [2000, 801, 2173, 838], [376, 852, 423, 880], [434, 852, 551, 880], [565, 852, 595, 880], [607, 852, 664, 880], [677, 861, 773, 889], [791, 853, 847, 880], [859, 861, 875, 880], [887, 861, 971, 880], [983, 852, 1110, 889], [1111, 852, 1213, 880], [1225, 861, 1264, 880], [1277, 852, 1333, 880], [1347, 852, 1428, 889], [1440, 861, 1487, 880], [1498, 852, 1693, 880], [1706, 852, 1755, 880], [1767, 852, 1954, 889], [1966, 853, 2028, 880], [2030, 852, 2116, 886], [376, 933, 549, 963], [561, 933, 620, 962], [635, 934, 854, 969], [865, 934, 1029, 969], [1049, 934, 1075, 962], [1089, 934, 1286, 971], [1300, 934, 1329, 962], [1347, 944, 1351, 962], [1369, 927, 1413, 962], [1431, 941, 1468, 962], [1484, 934, 1512, 962], [1513, 934, 1584, 971], [1597, 927, 1640, 962], [1657, 934, 1705, 962], [1714, 944, 1805, 971], [1809, 940, 1881, 963], [1893, 934, 1931, 971], [1937, 944, 2021, 963], [2035, 944, 2067, 963], [2071, 934, 2123, 963], [2125, 935, 2173, 967], [376, 985, 577, 1014], [591, 985, 619, 1022], [626, 985, 690, 1013], [702, 985, 773, 1021], [789, 985, 816, 1022], [825, 986, 846, 1013], [853, 985, 963, 1022], [979, 985, 1027, 1013], [1042, 985, 1240, 1022], [1255, 991, 1373, 1014], [1384, 991, 1534, 1022], [1554, 985, 1618, 1013], [1632, 986, 1664, 1018], [1676, 985, 1732, 1022], [1745, 983, 1774, 1013], [1793, 987, 1819, 1019], [1840, 985, 1916, 1019], [1937, 985, 1967, 1014], [1981, 984, 2077, 1013], [2098, 991, 2119, 1015], [2140, 985, 2177, 1018], [377, 1035, 396, 1064], [412, 1033, 433, 1074], [450, 1036, 479, 1064], [493, 1046, 537, 1065], [550, 1036, 626, 1065], [888, 1084, 1000, 1125], [1014, 1084, 1088, 1125], [1104, 1104, 1130, 1105], [1145, 1084, 1234, 1125], [1253, 1089, 1279, 1121], [1296, 1084, 1410, 1125], [1425, 1084, 1499, 1125], [1515, 1104, 1541, 1105], [1556, 1084, 1660, 1125], [438, 1169, 615, 1206], [630, 1178, 647, 1197], [659, 1169, 856, 1197], [868, 1169, 893, 1197], [907, 1169, 1103, 1197], [1114, 1169, 1141, 1197], [1151, 1169, 1262, 1206], [1275, 1178, 1292, 1197], [1303, 1178, 1370, 1197], [1382, 1169, 1501, 1197], [1503, 1173, 1556, 1197], [1568, 1169, 1618, 1197], [1631, 1173, 1676, 1197], [1686, 1169, 1794, 1197], [1806, 1169, 1837, 1197], [1849, 1169, 1910, 1197], [1922, 1169, 2010, 1197], [2023, 1178, 2055, 1197], [2068, 1169, 2117, 1197], [2130, 1173, 2175, 1197], [376, 1228, 458, 1256], [461, 1219, 517, 1247], [530, 1219, 600, 1247], [376, 1301, 549, 1331], [559, 1301, 619, 1331], [631, 1302, 783, 1337], [793, 1302, 950, 1337], [967, 1302, 992, 1330], [1004, 1302, 1194, 1339], [1206, 1302, 1235, 1330], [1252, 1312, 1256, 1330], [1273, 1295, 1317, 1330], [1335, 1309, 1372, 1330], [1387, 1302, 1415, 1330], [1416, 1302, 1484, 1339], [1493, 1302, 1510, 1330], [1514, 1295, 1599, 1330], [1606, 1312, 1694, 1339], [1697, 1307, 1765, 1331], [1775, 1302, 1811, 1339], [1815, 1312, 1897, 1331], [1908, 1307, 1953, 1331], [1963, 1302, 2000, 1335], [2016, 1302, 2045, 1330], [2050, 1298, 2095, 1340], [2113, 1315, 2141, 1324], [2157, 1302, 2174, 1331], [377, 1353, 401, 1381], [414, 1352, 554, 1381], [566, 1352, 641, 1387], [651, 1352, 718, 1381], [731, 1352, 940, 1387], [954, 1352, 982, 1389], [987, 1352, 1049, 1381], [1059, 1352, 1129, 1388], [1142, 1352, 1170, 1389], [1176, 1352, 1256, 1380], [1269, 1353, 1358, 1381], [1372, 1361, 1390, 1380], [1406, 1358, 1427, 1382], [1443, 1352, 1488, 1380], [1503, 1352, 1577, 1381], [1590, 1352, 1653, 1380], [1665, 1349, 1754, 1390], [1772, 1365, 1800, 1374], [1816, 1349, 1895, 1395], [1900, 1372, 1922, 1393], [1934, 1361, 1981, 1387], [438, 1434, 515, 1462], [530, 1434, 565, 1468], [585, 1443, 602, 1462], [617, 1434, 757, 1462], [773, 1434, 799, 1462], [815, 1434, 955, 1462], [971, 1434, 998, 1462], [1011, 1434, 1034, 1462], [1050, 1434, 1164, 1471], [1181, 1434, 1300, 1471], [1317, 1434, 1367, 1462], [1384, 1443, 1468, 1462], [1485, 1434, 1574, 1462], [1590, 1434, 1638, 1462], [1654, 1434, 1730, 1462], [1746, 1434, 1879, 1462], [1895, 1434, 1993, 1462], [2010, 1438, 2040, 1462], [2057, 1434, 2089, 1462], [2090, 1438, 2177, 1468], [375, 1485, 540, 1522], [553, 1485, 589, 1513], [598, 1485, 648, 1513], [659, 1485, 744, 1513], [755, 1485, 899, 1513], [913, 1485, 944, 1513], [956, 1485, 1005, 1513], [1018, 1489, 1069, 1513], [1086, 1485, 1114, 1513], [1127, 1494, 1249, 1513], [1251, 1485, 1444, 1513], [1456, 1485, 1504, 1513], [1515, 1485, 1653, 1513], [1664, 1485, 1800, 1513], [1803, 1485, 1853, 1513], [1868, 1482, 1944, 1523], [1962, 1498, 1990, 1507], [2006, 1482, 2112, 1528], [2124, 1494, 2172, 1520], [439, 1536, 644, 1565], [656, 1536, 812, 1564], [826, 1545, 883, 1564], [895, 1536, 934, 1564], [948, 1536, 1076, 1573], [1090, 1545, 1122, 1564], [1136, 1545, 1253, 1564], [1267, 1536, 1422, 1564], [1436, 1536, 1468, 1564], [1481, 1536, 1531, 1564], [1543, 1536, 1640, 1564], [1652, 1536, 1688, 1564], [1699, 1536, 1829, 1564], [1842, 1536, 2064, 1573], [2079, 1536, 2111, 1564], [2124, 1536, 2174, 1564], [377, 1596, 465, 1615], [478, 1587, 541, 1615], [553, 1587, 623, 1624], [637, 1587, 752, 1615], [764, 1587, 867, 1615], [879, 1587, 1047, 1624], [1060, 1587, 1123, 1615], [1136, 1587, 1226, 1616], [1239, 1587, 1288, 1615], [1300, 1587, 1437, 1615], [1449, 1587, 1670, 1624], [1690, 1587, 1851, 1624], [1866, 1587, 2006, 1615], [2018, 1587, 2173, 1615], [377, 1647, 425, 1666], [437, 1638, 606, 1666], [618, 1642, 649, 1666], [661, 1638, 756, 1666], [768, 1638, 931, 1666], [948, 1639, 989, 1666], [1002, 1638, 1091, 1666], [1104, 1638, 1179, 1666], [1190, 1638, 1389, 1666], [1402, 1638, 1527, 1675], [1538, 1647, 1585, 1667], [1596, 1638, 1715, 1675], [1727, 1638, 1763, 1666], [1772, 1638, 1822, 1666], [1834, 1638, 1995, 1675], [2007, 1638, 2173, 1675], [376, 1693, 527, 1726], [376, 1770, 549, 1800], [560, 1770, 620, 1799], [634, 1771, 726, 1806], [737, 1771, 906, 1808], [931, 1771, 989, 1799], [1002, 1771, 1076, 1800], [1085, 1771, 1230, 1808], [1244, 1771, 1298, 1805], [1313, 1771, 1351, 1808], [1356, 1781, 1374, 1799], [1387, 1771, 1586, 1800], [1590, 1771, 1732, 1808], [1745, 1771, 1774, 1799], [1788, 1772, 1812, 1800], [1826, 1771, 1873, 1799], [1882, 1771, 2073, 1808], [2084, 1772, 2174, 1808], [376, 1821, 413, 1857], [766, 1872, 819, 1906], [836, 1885, 864, 1894], [881, 1869, 1020, 1910], [1040, 1869, 1140, 1910], [1158, 1874, 1184, 1906], [1201, 1869, 1291, 1910], [1309, 1870, 1453, 1908], [1506, 1869, 1588, 1910], [1606, 1885, 1634, 1894], [1650, 1869, 1782, 1910], [438, 1954, 503, 1982], [504, 1954, 561, 1988], [575, 1954, 625, 1982], [636, 1954, 710, 1982], [721, 1954, 869, 1991], [881, 1954, 907, 1982], [920, 1963, 937, 1982], [947, 1954, 1140, 1991], [1151, 1954, 1274, 1982], [1286, 1954, 1417, 1991], [1428, 1954, 1524, 1982], [1535, 1954, 1702, 1991], [1715, 1954, 1895, 1982], [1908, 1963, 1949, 1982], [1961, 1954, 2011, 1982], [2023, 1954, 2127, 1982], [2140, 1954, 2176, 1982], [377, 2005, 406, 2033], [418, 2005, 467, 2033], [478, 2014, 568, 2042], [581, 2014, 640, 2033], [652, 2005, 688, 2033], [698, 2005, 748, 2033], [760, 2015, 783, 2033], [795, 2005, 928, 2033], [930, 2005, 992, 2033], [1002, 2005, 1052, 2033], [1063, 2009, 1215, 2042], [1227, 1998, 1283, 2039], [1297, 2005, 1355, 2033], [1369, 2014, 1407, 2033], [1418, 2005, 1553, 2042], [1565, 2005, 1731, 2033], [1742, 2005, 1791, 2033], [1802, 2005, 1852, 2033], [1864, 2005, 2018, 2042], [2031, 2009, 2084, 2033], [2100, 2005, 2173, 2033], [375, 2056, 481, 2084], [494, 2056, 525, 2084], [538, 2065, 554, 2084], [566, 2056, 795, 2084], [807, 2056, 918, 2084], [919, 2056, 980, 2084], [989, 2056, 1160, 2090], [1172, 2056, 1224, 2084], [1236, 2056, 1416, 2093], [1428, 2056, 1485, 2084], [1498, 2056, 1643, 2093], [1654, 2056, 1718, 2084], [1729, 2060, 1781, 2084], [1792, 2056, 1831, 2084], [1841, 2056, 1917, 2084], [1929, 2056, 2059, 2093], [376, 2137, 549, 2167], [560, 2137, 620, 2167], [634, 2138, 774, 2175], [786, 2138, 943, 2173], [968, 2138, 1025, 2166], [1038, 2143, 1162, 2175], [1166, 2138, 1304, 2175], [1318, 2137, 1363, 2172], [1371, 2138, 1426, 2175], [1436, 2148, 1517, 2167], [1530, 2143, 1700, 2175], [1712, 2138, 1816, 2167], [1827, 2148, 1936, 2166], [1948, 2143, 1993, 2167], [2004, 2136, 2033, 2166], [2048, 2144, 2069, 2168], [2085, 2138, 2133, 2166], [2149, 2139, 2174, 2167], [375, 2190, 463, 2226], [476, 2189, 514, 2225], [1014, 2237, 1118, 2278], [1136, 2253, 1164, 2262], [1179, 2249, 1239, 2276], [1252, 2231, 1448, 2282], [1465, 2232, 1534, 2282], [438, 2322, 501, 2350], [514, 2326, 636, 2359], [648, 2322, 784, 2350], [796, 2322, 821, 2350], [833, 2322, 934, 2350], [946, 2322, 1034, 2350], [1047, 2322, 1213, 2350], [1225, 2322, 1297, 2350], [1309, 2322, 1359, 2350], [1370, 2322, 1529, 2359], [1541, 2322, 1706, 2350], [375, 2403, 549, 2433], [564, 2403, 624, 2433], [641, 2404, 774, 2439], [789, 2404, 973, 2439], [999, 2404, 1137, 2441], [1154, 2414, 1173, 2432], [1189, 2404, 1387, 2441], [1404, 2404, 1433, 2432], [1449, 2404, 1524, 2433], [1541, 2404, 1605, 2432], [1621, 2400, 1700, 2442], [1725, 2417, 1753, 2426], [1775, 2404, 1800, 2433], [1828, 2405, 1869, 2433], [1884, 2405, 2001, 2435], [2016, 2405, 2173, 2433], [377, 2454, 398, 2492], [415, 2465, 419, 2483], [435, 2455, 480, 2483], [497, 2462, 534, 2483], [549, 2455, 615, 2484], [627, 2455, 747, 2492], [759, 2455, 886, 2492], [899, 2455, 946, 2483], [952, 2455, 1114, 2492], [1126, 2455, 1318, 2484], [1338, 2455, 1410, 2483], [1423, 2464, 1455, 2483], [1472, 2461, 1493, 2485], [1510, 2455, 1555, 2483], [1570, 2456, 1654, 2492], [1666, 2461, 1695, 2483], [1709, 2454, 1737, 2492], [1753, 2455, 1816, 2484], [1826, 2455, 1917, 2484], [1928, 2456, 1964, 2484], [1977, 2461, 2173, 2492], [377, 2506, 405, 2533], [418, 2505, 597, 2542], [609, 2505, 700, 2534], [710, 2514, 769, 2546], [790, 2507, 876, 2539], [894, 2507, 920, 2539], [936, 2514, 1009, 2548], [1025, 2505, 1093, 2533], [837, 2631, 923, 2672], [941, 2647, 969, 2656], [985, 2622, 1168, 2680], [1182, 2631, 1322, 2672], [1339, 2651, 1365, 2652], [1379, 2631, 1527, 2672], [1542, 2631, 1711, 2672], [985, 2692, 1041, 2712], [438, 2759, 533, 2788], [548, 2759, 722, 2796], [737, 2759, 913, 2787], [930, 2768, 979, 2787], [994, 2759, 1141, 2796], [1167, 2768, 1218, 2787], [1234, 2759, 1320, 2787], [1338, 2759, 1378, 2793], [1397, 2759, 1445, 2787], [1461, 2759, 1578, 2787], [1605, 2759, 1670, 2787], [1685, 2759, 1847, 2796], [1862, 2759, 1956, 2787], [1971, 2759, 2051, 2787], [2068, 2759, 2108, 2787], [2124, 2759, 2174, 2787], [376, 2810, 548, 2838], [562, 2819, 574, 2838], [577, 2810, 658, 2838], [1255, 2935, 1295, 2964], [376, 241, 578, 279], [589, 241, 680, 271], [702, 243, 761, 270], [773, 242, 802, 270], [815, 242, 1013, 271], [1016, 242, 1157, 279], [1170, 242, 1243, 271], [1257, 242, 1320, 270], [1331, 238, 1411, 280], [1429, 255, 1457, 264], [1472, 242, 1489, 271], [1502, 252, 1546, 271], [1559, 242, 1635, 271], [439, 336, 455, 352], [478, 327, 519, 355], [530, 327, 645, 357], [656, 327, 810, 355], [824, 325, 845, 363], [859, 327, 883, 355], [896, 336, 914, 354], [927, 336, 1039, 355], [1043, 326, 1191, 363], [439, 420, 455, 436], [481, 410, 539, 438], [552, 416, 678, 447], [682, 410, 822, 447], [836, 410, 873, 447], [879, 411, 915, 439], [928, 410, 1002, 439], [1010, 410, 1155, 447], [1169, 411, 1193, 439], [1206, 410, 1296, 447], [1309, 416, 1338, 438], [1352, 411, 1388, 439], [1400, 411, 1514, 441], [1526, 411, 1679, 439], [1681, 410, 1753, 443], [1757, 411, 1810, 443], [1827, 409, 1894, 448], [1904, 407, 1955, 448], [1973, 423, 2001, 432], [2017, 407, 2105, 448], [439, 504, 455, 520], [481, 494, 539, 522], [548, 494, 686, 531], [699, 494, 840, 533], [853, 491, 939, 532], [956, 495, 980, 523], [993, 494, 1065, 523], [1078, 500, 1106, 522], [1120, 494, 1207, 528], [1220, 491, 1298, 532], [1314, 498, 1342, 525], [1358, 486, 1473, 536], [1489, 494, 1559, 523], [1572, 493, 1612, 523], [1630, 507, 1658, 516], [1675, 491, 1771, 533], [1790, 496, 1816, 528], [1833, 491, 1878, 532], [438, 579, 495, 606], [510, 578, 616, 615], [634, 587, 675, 606], [691, 578, 776, 606], [791, 578, 893, 615], [910, 587, 958, 607], [974, 578, 1053, 606], [1069, 582, 1100, 606], [1117, 578, 1203, 606], [1221, 578, 1274, 612], [1303, 578, 1367, 606], [1384, 578, 1540, 615], [1557, 578, 1638, 606], [1654, 578, 1738, 606], [1753, 578, 1779, 606], [1796, 578, 1859, 606], [1875, 587, 1933, 615], [1950, 578, 2174, 606], [376, 637, 417, 656], [431, 637, 448, 656], [461, 628, 659, 656], [672, 628, 812, 656], [825, 637, 883, 656], [895, 628, 934, 656], [948, 632, 1013, 656], [1025, 628, 1089, 656], [1104, 637, 1121, 656], [1134, 637, 1251, 656], [1265, 628, 1478, 665], [1490, 628, 1639, 665], [1660, 628, 1879, 662], [1895, 628, 1943, 656], [1956, 628, 2043, 656], [2057, 637, 2174, 656], [376, 679, 596, 707], [607, 679, 759, 716], [773, 679, 878, 707], [890, 679, 1039, 716], [1051, 683, 1131, 707], [1144, 683, 1196, 707], [1208, 683, 1238, 707], [1250, 679, 1288, 707], [1300, 679, 1350, 707], [1361, 679, 1478, 708], [1491, 679, 1648, 707], [1660, 679, 1696, 707], [1706, 688, 1792, 707], [1804, 679, 1888, 707], [1900, 679, 2045, 713], [2059, 688, 2106, 707], [2118, 688, 2174, 707], [376, 734, 455, 758], [467, 730, 516, 758], [529, 734, 608, 767], [621, 730, 670, 758], [682, 730, 767, 758], [778, 739, 845, 767], [856, 730, 961, 764], [975, 730, 1130, 767], [1142, 730, 1191, 758], [1203, 730, 1423, 758], [1435, 730, 1470, 758], [1481, 739, 1497, 758], [1509, 730, 1689, 758], [1690, 730, 1859, 758], [438, 781, 587, 810], [598, 790, 667, 809], [680, 790, 696, 809], [708, 781, 877, 818], [888, 781, 1026, 818], [1037, 781, 1179, 820], [1191, 778, 1246, 827], [1260, 778, 1369, 821], [1386, 781, 1449, 809], [1461, 781, 1620, 818], [1631, 781, 1737, 809], [1750, 781, 1823, 809], [375, 870, 578, 908], [592, 870, 682, 899], [709, 871, 768, 899], [779, 871, 921, 908], [935, 871, 1076, 911], [1089, 868, 1144, 918], [1157, 868, 1255, 912], [1274, 872, 1299, 900], [1314, 871, 1489, 908], [1504, 877, 1533, 899], [1548, 871, 1633, 906], [1646, 868, 1701, 918], [1714, 868, 1802, 912], [1819, 875, 1847, 902], [1865, 864, 1938, 914], [1954, 865, 1977, 910], [1995, 871, 2066, 900], [2082, 870, 2122, 900], [2144, 884, 2172, 893], [1604, 923, 1617, 942], [1676, 930, 1680, 934], [1750, 928, 1807, 943], [1954, 928, 1965, 941], [1604, 948, 1626, 967], [1642, 929, 1712, 958], [1724, 939, 1745, 957], [1779, 950, 1807, 951], [1824, 946, 1850, 947], [1862, 926, 1917, 975], [1930, 939, 1976, 974], [375, 1013, 474, 1050], [499, 1013, 563, 1041], [577, 1013, 643, 1041], [656, 1013, 854, 1050], [868, 1013, 894, 1041], [910, 1022, 927, 1041], [940, 1013, 1035, 1041], [1047, 1013, 1142, 1041], [1155, 1013, 1191, 1041], [1202, 1013, 1252, 1041], [1265, 1013, 1433, 1050], [1448, 1013, 1484, 1041], [1496, 1013, 1615, 1041], [1629, 1013, 1805, 1041], [1823, 1013, 1876, 1047], [1892, 1013, 1924, 1041], [1936, 1013, 2099, 1050], [2112, 1013, 2175, 1041], [376, 1064, 423, 1092], [436, 1064, 470, 1100], [482, 1063, 511, 1093], [525, 1064, 738, 1092], [751, 1064, 824, 1093], [836, 1063, 955, 1092], [967, 1064, 1141, 1092], [1155, 1063, 1183, 1101], [1194, 1074, 1223, 1101], [1237, 1064, 1286, 1092], [1298, 1063, 1417, 1092], [1429, 1064, 1587, 1092], [1600, 1064, 1635, 1092], [1646, 1064, 1675, 1092], [1687, 1068, 1715, 1095], [1729, 1063, 1797, 1093], [1810, 1063, 1831, 1101], [1844, 1068, 1872, 1095], [1885, 1074, 1913, 1101], [1929, 1065, 1986, 1092], [1997, 1064, 2047, 1092], [2060, 1064, 2174, 1092], [376, 1114, 570, 1151], [582, 1123, 629, 1142], [640, 1114, 725, 1143], [724, 1213, 791, 1266], [801, 1201, 857, 1273], [868, 1210, 959, 1253], [974, 1217, 1002, 1244], [1019, 1205, 1124, 1255], [821, 1277, 833, 1296], [378, 926, 469, 969], [488, 931, 514, 963], [531, 926, 577, 967], [594, 929, 791, 957], [789, 930, 841, 957], [853, 930, 877, 958], [890, 929, 956, 958], [969, 929, 1142, 966], [1154, 935, 1182, 957], [1195, 929, 1371, 978], [1385, 943, 1416, 969], [1433, 921, 1532, 975], [1544, 926, 1588, 969], [1184, 1201, 1288, 1259], [1328, 1212, 1403, 1251], [1424, 1217, 1452, 1244], [1468, 1205, 1585, 1255], [1209, 1253, 1226, 1266], [1291, 1271, 1294, 1273], [1394, 1249, 1403, 1262], [1281, 1277, 1293, 1296], [1141, 1345, 1169, 1346], [1221, 1332, 1226, 1337], [1475, 1322, 1497, 1353], [1584, 1323, 1689, 1351], [1141, 1353, 1169, 1354], [1184, 1320, 1434, 1415], [1449, 1341, 1485, 1376], [1503, 1336, 1567, 1363], [1586, 1329, 1701, 1374], [1141, 1505, 1169, 1506], [1554, 1483, 1768, 1513], [1141, 1513, 1169, 1514], [1184, 1534, 1202, 1553], [1204, 1501, 1286, 1555], [1280, 1502, 1339, 1562], [1349, 1502, 1416, 1545], [1463, 1481, 1646, 1575], [1665, 1489, 1768, 1534], [1819, 1516, 1823, 1528], [1141, 1630, 1169, 1639], [1265, 1617, 1270, 1622], [1353, 1605, 1453, 1663], [1497, 1608, 1540, 1634], [1184, 1627, 1296, 1687], [1307, 1652, 1325, 1673], [1326, 1614, 1390, 1678], [1463, 1614, 1552, 1657], [377, 1752, 434, 1780], [446, 1752, 495, 1780], [507, 1752, 577, 1780], [588, 1752, 783, 1789], [796, 1751, 836, 1780], [854, 1765, 882, 1774], [899, 1769, 925, 1770], [937, 1749, 976, 1791], [979, 1774, 992, 1799], [1004, 1751, 1043, 1797], [1060, 1761, 1148, 1780], [1151, 1752, 1256, 1780], [1268, 1752, 1388, 1789], [1400, 1752, 1449, 1780], [1461, 1752, 1546, 1780], [1557, 1752, 1644, 1786], [1659, 1752, 1797, 1789], [1809, 1752, 1856, 1780], [1868, 1761, 1901, 1780], [2145, 1753, 2173, 1781], [438, 1836, 598, 1864], [611, 1845, 667, 1873], [679, 1836, 912, 1873], [926, 1836, 1118, 1864], [1129, 1836, 1355, 1870], [1369, 1845, 1402, 1864], [1414, 1845, 1481, 1864], [1492, 1836, 1528, 1864], [1536, 1836, 1653, 1865], [1665, 1836, 1835, 1864], [1847, 1836, 1914, 1873], [1927, 1835, 1958, 1870], [1973, 1840, 2056, 1870], [2069, 1845, 2125, 1864], [2136, 1836, 2173, 1864], [376, 1887, 477, 1915], [489, 1887, 551, 1915], [565, 1896, 581, 1915], [593, 1887, 756, 1924], [768, 1887, 906, 1924], [917, 1887, 948, 1915], [960, 1891, 1049, 1915], [1062, 1887, 1098, 1915], [1107, 1887, 1157, 1915], [1167, 1887, 1241, 1915], [1251, 1887, 1419, 1924], [1437, 1888, 1493, 1915], [1504, 1891, 1563, 1915], [1576, 1887, 1727, 1915], [1741, 1887, 1790, 1915], [1801, 1887, 1943, 1915], [1954, 1887, 2091, 1924], [2103, 1887, 2128, 1915], [2141, 1887, 2177, 1915], [377, 1938, 489, 1975], [501, 1938, 622, 1966], [634, 1938, 660, 1966], [668, 1938, 817, 1966], [830, 1947, 860, 1966], [631, 2030, 636, 2035], [703, 2023, 714, 2042], [902, 2022, 915, 2041], [1146, 2030, 1151, 2035], [1243, 2023, 1254, 2042], [1507, 2022, 1520, 2041], [1728, 2030, 1733, 2035], [1803, 2023, 1814, 2042], [1964, 2022, 1977, 2041], [595, 2040, 662, 2058], [700, 2027, 781, 2068], [796, 2027, 915, 2068], [973, 2043, 1001, 2052], [1109, 2040, 1176, 2058], [1263, 2027, 1520, 2068], [1578, 2043, 1606, 2052], [1692, 2040, 1759, 2058], [1800, 2027, 1977, 2068], [569, 2065, 682, 2095], [702, 2053, 715, 2072], [1084, 2065, 1196, 2095], [1242, 2053, 1255, 2072], [1675, 2065, 1771, 2095], [1802, 2053, 1815, 2072], [569, 2102, 623, 2125], [629, 2099, 682, 2130], [1060, 2099, 1222, 2130], [1664, 2100, 1782, 2130], [374, 2181, 446, 2209], [460, 2190, 483, 2209], [497, 2194, 525, 2203], [540, 2190, 590, 2217], [605, 2180, 624, 2209], [638, 2194, 666, 2203], [683, 2190, 764, 2217], [778, 2190, 810, 2209], [823, 2181, 881, 2209], [892, 2181, 1000, 2209], [1013, 2181, 1043, 2209], [1055, 2181, 1105, 2209], [1117, 2181, 1225, 2209], [1238, 2181, 1403, 2218], [1415, 2181, 1553, 2218], [1565, 2190, 1584, 2209], [1586, 2181, 1727, 2218], [1739, 2181, 1788, 2209], [1800, 2181, 1912, 2209], [1923, 2181, 2024, 2218], [2035, 2181, 2174, 2209], [376, 2236, 435, 2260], [448, 2241, 563, 2261], [576, 2236, 643, 2260], [660, 2233, 754, 2269], [767, 2232, 940, 2269], [953, 2232, 1029, 2261], [1040, 2232, 1118, 2260], [1129, 2241, 1259, 2269], [1261, 2232, 1321, 2260], [1334, 2232, 1432, 2260], [1443, 2232, 1595, 2269], [1608, 2232, 1639, 2260], [1651, 2232, 1708, 2260], [1721, 2232, 1809, 2266], [1822, 2236, 1901, 2260], [1913, 2232, 1949, 2260], [1958, 2232, 2040, 2260], [2051, 2232, 2173, 2269], [375, 2291, 430, 2310], [445, 2282, 481, 2310], [494, 2282, 672, 2319], [686, 2282, 857, 2319], [871, 2282, 1045, 2319], [1060, 2286, 1133, 2310], [1148, 2282, 1198, 2310], [1213, 2286, 1274, 2311], [1290, 2286, 1359, 2310], [1383, 2282, 1475, 2316], [1493, 2291, 1510, 2310], [1523, 2282, 1690, 2319], [1705, 2291, 1838, 2310], [1852, 2282, 1877, 2310], [1892, 2282, 1962, 2311], [1977, 2291, 2029, 2310], [2031, 2282, 2088, 2319], [2102, 2282, 2127, 2310], [2143, 2286, 2173, 2310], [376, 2337, 517, 2370], [530, 2333, 603, 2361], [614, 2333, 797, 2370], [810, 2333, 858, 2361], [870, 2333, 932, 2372], [951, 2333, 1008, 2361], [1022, 2333, 1130, 2372], [376, 2416, 578, 2454], [590, 2416, 680, 2445], [705, 2417, 803, 2446], [815, 2427, 834, 2445], [847, 2417, 1049, 2446], [1053, 2417, 1196, 2454], [1210, 2417, 1239, 2445], [1252, 2417, 1315, 2445], [1327, 2418, 1363, 2446], [1376, 2417, 1451, 2446], [1461, 2417, 1608, 2454], [1622, 2417, 1685, 2451], [1702, 2417, 1750, 2445], [1759, 2418, 1949, 2454], [1962, 2414, 2096, 2456], [2112, 2417, 2175, 2445], [376, 2465, 535, 2506], [551, 2468, 589, 2505], [594, 2478, 612, 2496], [621, 2469, 709, 2505], [721, 2477, 741, 2496], [756, 2474, 827, 2496], [841, 2468, 894, 2502], [909, 2478, 946, 2496], [957, 2469, 994, 2497], [1006, 2468, 1136, 2505], [1146, 2474, 1342, 2505], [1353, 2478, 1410, 2496], [1423, 2468, 1460, 2496], [1473, 2468, 1634, 2505], [1644, 2478, 1679, 2497], [1052, 2560, 1127, 2599], [1137, 2557, 1186, 2598], [1203, 2573, 1231, 2582], [1247, 2569, 1267, 2588], [1282, 2577, 1308, 2578], [1322, 2557, 1488, 2605], [1026, 2625, 1309, 2667], [1322, 2637, 1401, 2664], [1404, 2625, 1521, 2672], [376, 2721, 445, 2750], [457, 2730, 536, 2757], [545, 2722, 704, 2758], [716, 2727, 842, 2758], [846, 2721, 909, 2758], [914, 2731, 932, 2749], [938, 2721, 1086, 2758], [1103, 2720, 1124, 2758], [1138, 2721, 1185, 2749], [1197, 2722, 1312, 2752], [1323, 2722, 1477, 2750], [1490, 2721, 1528, 2758], [1533, 2721, 1570, 2749], [1255, 2935, 1293, 2964], [375, 242, 474, 279], [499, 243, 552, 270], [565, 246, 634, 270], [646, 242, 718, 270], [730, 242, 779, 270], [790, 242, 953, 279], [965, 242, 1001, 270], [1011, 241, 1032, 279], [1046, 242, 1104, 270], [1116, 242, 1200, 270], [1211, 251, 1266, 270], [1277, 251, 1323, 270], [1325, 246, 1386, 279], [1399, 251, 1415, 270], [1426, 242, 1622, 279], [1634, 242, 1706, 270], [1718, 242, 1767, 270], [1778, 242, 1946, 279], [1958, 246, 2101, 279], [847, 343, 925, 370], [928, 331, 1001, 378], [1019, 343, 1047, 360], [1061, 334, 1128, 387], [1138, 331, 1217, 372], [1232, 338, 1260, 365], [1277, 327, 1384, 376], [1399, 326, 1469, 372], [1019, 430, 1047, 431], [1197, 417, 1202, 422], [1262, 407, 1284, 427], [1370, 409, 1388, 436], [1452, 434, 1478, 435], [1538, 408, 1551, 427], [1019, 438, 1047, 439], [1061, 426, 1149, 477], [1160, 426, 1259, 469], [1289, 426, 1312, 445], [1326, 421, 1354, 448], [1372, 414, 1438, 459], [0, 0, 2550, 3300], [1493, 414, 1563, 455], [1019, 520, 1047, 521], [1186, 498, 1290, 525], [1401, 499, 1418, 526], [1496, 524, 1615, 525], [1675, 499, 1688, 518], [1019, 528, 1047, 529], [1061, 516, 1149, 568], [1160, 516, 1183, 543], [1215, 504, 1341, 545], [1356, 511, 1384, 538], [1403, 504, 1481, 549], [1536, 504, 1573, 545], [0, 0, 2550, 3300], [1630, 504, 1700, 545], [1019, 610, 1047, 611], [1109, 597, 1114, 602], [1164, 590, 1181, 616], [1255, 589, 1268, 608], [1284, 588, 1372, 615], [1019, 618, 1047, 619], [1061, 607, 1149, 658], [1166, 594, 1268, 639], [1324, 606, 1347, 633], [1377, 606, 1408, 633], [374, 797, 474, 825], [487, 797, 607, 834], [619, 797, 668, 825], [680, 797, 765, 825], [776, 797, 996, 825], [1008, 797, 1146, 834], [1158, 797, 1205, 825], [1218, 806, 1241, 825], [1254, 797, 1337, 834], [1351, 797, 1400, 825], [1411, 797, 1600, 834], [1602, 797, 1818, 834], [1832, 796, 1871, 825], [1890, 810, 1918, 819], [1933, 806, 1953, 825], [1968, 814, 1994, 815], [2008, 796, 2060, 833], [2076, 797, 2174, 834], [376, 848, 434, 876], [453, 857, 500, 877], [518, 857, 576, 876], [593, 848, 697, 876], [715, 848, 765, 876], [783, 848, 918, 876], [935, 848, 983, 876], [1000, 848, 1050, 876], [1067, 848, 1238, 885], [1255, 848, 1396, 885], [1413, 848, 1494, 876], [1511, 848, 1561, 876], [1578, 848, 1744, 885], [1761, 848, 1910, 885], [1932, 857, 1964, 876], [1982, 845, 2116, 886], [2144, 861, 2172, 870], [377, 907, 397, 926], [416, 915, 442, 916], [460, 907, 558, 943], [566, 895, 627, 936], [662, 898, 835, 935], [853, 902, 926, 926], [944, 898, 994, 926], [1013, 898, 1141, 935], [1159, 898, 1234, 926], [1251, 898, 1398, 935], [1417, 898, 1540, 927], [1559, 898, 1641, 926], [1658, 898, 1708, 926], [1726, 898, 1811, 926], [1830, 898, 1997, 935], [2017, 902, 2175, 935], [376, 946, 535, 988], [553, 962, 581, 971], [598, 946, 805, 988], [2145, 950, 2173, 978], [376, 1079, 674, 1131], [692, 1079, 879, 1120], [374, 1185, 424, 1213], [436, 1185, 483, 1213], [495, 1185, 746, 1213], [756, 1185, 915, 1222], [928, 1185, 1038, 1213], [1051, 1185, 1081, 1213], [1092, 1185, 1148, 1213], [1160, 1194, 1250, 1222], [1260, 1185, 1334, 1213], [1345, 1185, 1421, 1213], [1432, 1185, 1622, 1222], [1624, 1185, 1685, 1213], [1698, 1185, 1745, 1213], [1757, 1185, 1895, 1222], [1906, 1185, 2029, 1213], [2040, 1185, 2087, 1213], [2097, 1185, 2178, 1219], [375, 1235, 490, 1263], [504, 1235, 561, 1263], [573, 1235, 688, 1272], [690, 1235, 855, 1269], [869, 1239, 896, 1263], [907, 1235, 1472, 1272], [1487, 1235, 1548, 1263], [1561, 1235, 1686, 1263], [1697, 1235, 1750, 1263], [1762, 1235, 1839, 1263], [1851, 1235, 1996, 1272], [2008, 1239, 2038, 1263], [2050, 1235, 2087, 1263], [2099, 1235, 2174, 1263], [376, 1290, 429, 1314], [440, 1286, 476, 1314], [485, 1286, 535, 1314], [546, 1286, 609, 1314], [621, 1286, 652, 1314], [665, 1295, 682, 1314], [693, 1295, 763, 1314], [774, 1286, 906, 1323], [918, 1295, 996, 1323], [1010, 1286, 1059, 1314], [1070, 1286, 1215, 1320], [1229, 1286, 1279, 1314], [1291, 1286, 1445, 1323], [1457, 1286, 1575, 1314], [1587, 1286, 1726, 1314], [1740, 1291, 1787, 1314], [1799, 1286, 1901, 1314], [1914, 1286, 2173, 1314], [375, 1337, 538, 1374], [550, 1337, 597, 1365], [609, 1346, 625, 1365], [637, 1337, 726, 1374], [739, 1337, 836, 1374], [847, 1337, 927, 1365], [927, 1346, 970, 1365], [981, 1337, 1094, 1374], [1106, 1337, 1142, 1365], [1152, 1337, 1284, 1374], [1301, 1338, 1357, 1365], [1369, 1337, 1503, 1365], [372, 1419, 424, 1443], [448, 1413, 564, 1448], [579, 1413, 741, 1448], [377, 1488, 478, 1516], [493, 1489, 553, 1523], [570, 1488, 736, 1525], [751, 1488, 799, 1516], [814, 1497, 831, 1516], [845, 1488, 944, 1525], [959, 1493, 980, 1516], [996, 1488, 1032, 1516], [1045, 1497, 1102, 1525], [1117, 1488, 1292, 1516], [1307, 1488, 1365, 1516], [1381, 1497, 1398, 1516], [1410, 1488, 1645, 1525], [1659, 1488, 1747, 1516], [1765, 1491, 1918, 1517], [1942, 1488, 2006, 1516], [2020, 1488, 2173, 1525], [374, 1539, 497, 1567], [510, 1539, 546, 1567], [557, 1539, 616, 1567], [629, 1539, 770, 1576], [783, 1539, 809, 1567], [824, 1539, 889, 1567], [904, 1539, 1084, 1576], [1098, 1539, 1218, 1567], [1231, 1539, 1272, 1576], [1282, 1539, 1346, 1576], [1358, 1539, 1521, 1576], [1535, 1548, 1552, 1567], [1565, 1543, 1669, 1567], [1682, 1539, 1718, 1567], [1729, 1539, 1858, 1576], [1872, 1539, 1908, 1567], [1919, 1539, 1969, 1567], [1984, 1539, 2174, 1576], [376, 1590, 478, 1627], [491, 1599, 521, 1618], [535, 1590, 584, 1618], [599, 1593, 741, 1619], [755, 1594, 925, 1627], [438, 1641, 467, 1669], [477, 1650, 493, 1669], [505, 1641, 581, 1669], [592, 1645, 759, 1678], [770, 1651, 791, 1677], [805, 1641, 830, 1669], [842, 1641, 988, 1678], [1001, 1650, 1032, 1669], [372, 1723, 424, 1747], [448, 1717, 564, 1752], [578, 1717, 738, 1751], [750, 1717, 791, 1754], [375, 1792, 425, 1820], [437, 1792, 557, 1829], [569, 1793, 630, 1833], [644, 1792, 807, 1829], [818, 1792, 956, 1829], [968, 1792, 992, 1820], [1007, 1792, 1176, 1826], [1190, 1792, 1373, 1829], [1386, 1801, 1422, 1820], [1436, 1792, 1581, 1829], [1593, 1792, 1692, 1821], [1704, 1792, 1728, 1820], [1742, 1792, 1855, 1820], [1866, 1792, 1907, 1829], [1919, 1792, 1950, 1820], [1952, 1792, 2094, 1829], [437, 1844, 507, 1871], [508, 1843, 666, 1871], [668, 1843, 750, 1871], [753, 1852, 796, 1871], [798, 1843, 869, 1871], [881, 1843, 987, 1880], [1001, 1852, 1047, 1871], [1058, 1843, 1199, 1880], [1213, 1843, 1351, 1880], [1364, 1847, 1393, 1871], [1406, 1843, 1520, 1880], [1532, 1843, 1630, 1872], [1642, 1852, 1727, 1871], [1737, 1853, 1758, 1879], [1773, 1843, 1829, 1871], [1840, 1843, 2016, 1880], [2029, 1846, 2172, 1872], [374, 1894, 479, 1922], [495, 1898, 526, 1922], [541, 1903, 597, 1922], [613, 1894, 661, 1922], [676, 1894, 752, 1922], [767, 1894, 943, 1922], [958, 1894, 994, 1922], [1007, 1894, 1057, 1922], [1073, 1894, 1181, 1931], [1200, 1894, 1258, 1922], [1274, 1903, 1351, 1922], [1367, 1894, 1512, 1931], [1528, 1894, 1754, 1922], [1770, 1894, 1806, 1922], [1820, 1894, 1936, 1922], [1952, 1894, 2096, 1922], [2110, 1895, 2171, 1934], [375, 1945, 572, 1982], [590, 1945, 680, 1982], [696, 1945, 746, 1973], [763, 1954, 847, 1973], [863, 1945, 1046, 1973], [1073, 1945, 1180, 1973], [1194, 1945, 1274, 1973], [1289, 1949, 1320, 1973], [1336, 1945, 1386, 1973], [1401, 1945, 1652, 1973], [1667, 1945, 1774, 1974], [1789, 1945, 1839, 1973], [1855, 1945, 1982, 1973], [1998, 1945, 2046, 1973], [2061, 1945, 2175, 1973], [376, 1996, 578, 2024], [378, 2124, 416, 2166], [478, 2124, 622, 2166], [636, 2137, 696, 2166], [713, 2125, 790, 2166], [809, 2124, 1012, 2177], [1030, 2124, 1080, 2166], [1093, 2124, 1364, 2177], [1381, 2125, 1616, 2177], [374, 2231, 533, 2260], [546, 2230, 603, 2260], [618, 2231, 769, 2268], [782, 2231, 817, 2259], [826, 2231, 995, 2268], [1007, 2231, 1184, 2268], [1208, 2231, 1303, 2260], [1317, 2231, 1365, 2259], [1374, 2231, 1528, 2268], [607, 2354, 674, 2382], [684, 2343, 740, 2401], [753, 2351, 797, 2392], [813, 2371, 839, 2372], [853, 2342, 979, 2392], [1001, 2360, 1044, 2383], [1074, 2351, 1112, 2392], [1128, 2351, 1209, 2392], [1228, 2353, 1689, 2390], [1706, 2354, 1828, 2390], [1845, 2363, 1940, 2390], [2090, 2354, 2173, 2389], [686, 2412, 736, 2431], [375, 2481, 438, 2510], [649, 2518, 667, 2531], [590, 2555, 595, 2560], [727, 2537, 734, 2562], [830, 2553, 928, 2560], [1008, 2543, 1021, 2562], [1139, 2553, 1150, 2560], [1409, 2556, 1413, 2559], [1711, 2553, 1722, 2560], [1846, 2553, 1857, 2560], [554, 2565, 621, 2594], [644, 2543, 658, 2601], [741, 2555, 797, 2586], [813, 2552, 857, 2593], [873, 2572, 899, 2573], [913, 2552, 1032, 2593], [1054, 2561, 1097, 2584], [1127, 2552, 1165, 2593], [1181, 2552, 1262, 2593], [1282, 2557, 1308, 2589], [1323, 2564, 1367, 2589], [1378, 2554, 1742, 2591], [1759, 2555, 1881, 2591], [1898, 2564, 1993, 2591], [2090, 2555, 2173, 2590], [581, 2597, 594, 2610], [633, 2613, 683, 2632], [368, 2666, 424, 2703], [434, 2676, 452, 2694], [465, 2676, 608, 2697], [622, 2672, 725, 2695], [736, 2675, 776, 2699], [792, 2666, 864, 2694], [872, 2666, 1027, 2703], [1039, 2666, 1128, 2695], [1141, 2666, 1189, 2694], [1201, 2676, 1284, 2695], [1297, 2667, 1450, 2694], [1463, 2665, 1497, 2694], [1516, 2679, 1544, 2688], [1559, 2665, 1605, 2694], [1255, 2935, 1295, 2964], [375, 242, 474, 279], [499, 242, 562, 270], [574, 242, 762, 279], [774, 242, 809, 270], [818, 242, 956, 279], [967, 242, 1020, 271], [1037, 242, 1118, 270], [1132, 242, 1181, 270], [1193, 242, 1272, 270], [832, 334, 850, 347], [1146, 328, 1205, 347], [1565, 328, 1625, 347], [578, 368, 650, 409], [663, 380, 700, 407], [712, 368, 752, 409], [769, 384, 797, 393], [813, 360, 869, 418], [882, 368, 926, 409], [942, 388, 968, 389], [983, 359, 1090, 409], [1105, 375, 1133, 402], [1148, 360, 1204, 418], [1217, 380, 1256, 405], [1264, 368, 1308, 409], [1324, 388, 1350, 389], [1364, 380, 1395, 405], [1411, 388, 1437, 389], [1450, 368, 1510, 409], [1525, 375, 1553, 402], [1568, 360, 1624, 418], [1635, 368, 1768, 409], [1785, 388, 1811, 389], [1825, 380, 1855, 405], [1870, 368, 1970, 409], [815, 429, 865, 448], [1150, 429, 1200, 448], [1570, 429, 1620, 448], [376, 498, 434, 526], [446, 498, 482, 526], [495, 498, 849, 526], [860, 498, 1029, 535], [1041, 498, 1211, 526], [1226, 507, 1274, 526], [1286, 498, 1375, 535], [1386, 498, 1426, 535], [954, 587, 1039, 628], [1056, 607, 1082, 608], [1097, 587, 1143, 628], [1159, 607, 1185, 608], [1202, 587, 1246, 628], [1262, 607, 1288, 608], [1302, 587, 1391, 628], [1408, 599, 1479, 618], [1483, 606, 1534, 625], [1547, 589, 1595, 626], [2090, 590, 2173, 625], [1254, 651, 1293, 692], [1309, 651, 1390, 692], [1409, 656, 1435, 688], [1451, 663, 1506, 690], [2090, 654, 2173, 689], [1292, 726, 1343, 753], [1355, 716, 1391, 753], [1409, 719, 1435, 751], [1452, 717, 1479, 753], [2090, 717, 2173, 752], [1069, 840, 1202, 881], [1218, 860, 1244, 861], [1258, 852, 1288, 878], [1303, 847, 1331, 874], [1344, 840, 1391, 881], [1408, 856, 1436, 865], [1452, 843, 1479, 879], [2090, 843, 2173, 878], [375, 945, 410, 975], [425, 946, 643, 982], [660, 946, 685, 980], [699, 946, 757, 974], [769, 946, 851, 974], [852, 946, 911, 974], [913, 946, 1005, 974], [1017, 946, 1158, 983], [1170, 955, 1273, 974], [1286, 946, 1366, 974], [1377, 946, 1427, 974], [1439, 946, 1499, 974], [1511, 946, 1571, 974], [1587, 932, 1741, 989], [1759, 959, 1787, 968], [1802, 946, 1819, 975], [1834, 950, 1861, 974], [1873, 946, 1922, 974], [1934, 946, 2101, 974], [438, 997, 466, 1025], [469, 997, 543, 1025], [555, 997, 627, 1034], [639, 997, 804, 1025], [815, 997, 952, 1025], [964, 997, 1116, 1034], [1129, 997, 1182, 1026], [1199, 997, 1256, 1025], [1268, 997, 1325, 1026], [1337, 997, 1362, 1025], [1375, 997, 1406, 1025], [1418, 997, 1467, 1025], [1479, 997, 1558, 1025], [1570, 997, 1606, 1025], [1615, 997, 1664, 1025], [1676, 997, 1833, 1034], [1847, 997, 1896, 1025], [1908, 998, 1991, 1025], [2003, 997, 2172, 1025], [376, 1048, 423, 1076], [433, 1048, 571, 1085], [583, 1048, 640, 1077], [652, 1048, 720, 1076], [731, 1048, 781, 1076], [793, 1057, 876, 1076], [888, 1048, 968, 1076], [970, 1048, 1028, 1082], [1030, 1048, 1100, 1076], [1111, 1048, 1160, 1076], [1172, 1048, 1235, 1076], [1247, 1057, 1314, 1082], [883, 1131, 969, 1172], [985, 1151, 1011, 1152], [1026, 1131, 1072, 1172], [1272, 1131, 1317, 1172], [1333, 1151, 1359, 1152], [1373, 1131, 1461, 1172], [818, 1189, 872, 1237], [887, 1200, 915, 1227], [930, 1193, 1016, 1234], [1033, 1213, 1059, 1214], [1073, 1193, 1138, 1234], [1159, 1179, 1185, 1180], [1208, 1189, 1261, 1237], [1276, 1200, 1304, 1227], [1319, 1193, 1364, 1234], [1361, 1211, 1406, 1214], [1420, 1193, 1528, 1234], [1550, 1175, 1578, 1184], [1594, 1160, 1633, 1196], [1649, 1179, 1675, 1180], [1689, 1161, 1737, 1198], [2090, 1162, 2173, 1197], [1396, 1258, 1435, 1299], [1451, 1258, 1532, 1299], [1551, 1263, 1577, 1295], [1593, 1270, 1648, 1297], [2090, 1261, 2173, 1296], [1433, 1331, 1485, 1369], [1496, 1321, 1533, 1369], [1551, 1335, 1577, 1367], [1594, 1333, 1620, 1369], [2069, 1333, 2173, 1368], [1239, 1393, 1331, 1434], [1347, 1413, 1373, 1414], [1386, 1405, 1417, 1430], [1433, 1393, 1532, 1434], [1550, 1409, 1578, 1418], [1594, 1396, 1620, 1432], [2069, 1396, 2173, 1431], [1210, 1455, 1343, 1505], [1359, 1484, 1385, 1485], [1400, 1466, 1430, 1502], [1445, 1464, 1532, 1505], [1550, 1480, 1578, 1489], [1594, 1467, 1620, 1503], [2069, 1467, 2173, 1502], [375, 1559, 410, 1589], [427, 1573, 455, 1582], [474, 1560, 647, 1596], [664, 1560, 689, 1594], [705, 1560, 763, 1588], [776, 1560, 878, 1589], [891, 1569, 919, 1589], [921, 1569, 1006, 1588], [1018, 1560, 1070, 1588], [1082, 1560, 1220, 1588], [1232, 1560, 1280, 1588], [1293, 1560, 1343, 1588], [1356, 1560, 1427, 1588], [1440, 1560, 1631, 1588], [1645, 1564, 1676, 1588], [1689, 1560, 1741, 1588], [1754, 1560, 1838, 1588], [1851, 1564, 1934, 1597], [1946, 1560, 2028, 1588], [2040, 1560, 2127, 1588], [2140, 1560, 2176, 1588], [375, 1611, 513, 1648], [524, 1611, 589, 1640], [439, 1661, 579, 1698], [593, 1660, 627, 1689], [643, 1661, 816, 1689], [828, 1665, 858, 1689], [870, 1661, 1011, 1698], [1022, 1661, 1089, 1695], [1102, 1661, 1200, 1689], [1212, 1661, 1359, 1698], [1371, 1661, 1421, 1689], [1433, 1661, 1607, 1689], [1620, 1661, 1761, 1690], [1777, 1662, 1812, 1689], [1822, 1661, 1984, 1698], [1996, 1661, 2054, 1689], [2067, 1670, 2173, 1689], [376, 1712, 436, 1740], [447, 1712, 469, 1740], [480, 1712, 505, 1740], [518, 1712, 643, 1740], [656, 1716, 685, 1740], [699, 1712, 799, 1749], [811, 1712, 912, 1741], [925, 1716, 954, 1740], [967, 1712, 1015, 1740], [1028, 1712, 1097, 1740], [1109, 1712, 1293, 1740], [1308, 1721, 1345, 1748], [1357, 1711, 1383, 1748], [1396, 1712, 1426, 1740], [1439, 1712, 1512, 1740], [1525, 1721, 1541, 1740], [1552, 1721, 1598, 1740], [1600, 1712, 1690, 1749], [1702, 1712, 1750, 1740], [1763, 1712, 1930, 1740], [1945, 1712, 2038, 1741], [2052, 1721, 2099, 1740], [2111, 1716, 2179, 1740], [376, 1763, 404, 1791], [414, 1772, 460, 1791], [473, 1767, 517, 1791], [530, 1761, 548, 1791], [563, 1776, 591, 1785], [607, 1762, 641, 1791], [658, 1763, 688, 1791], [700, 1763, 750, 1791], [761, 1763, 931, 1791], [945, 1763, 1095, 1792], [1107, 1763, 1157, 1791], [1169, 1763, 1327, 1800], [1339, 1763, 1545, 1792], [1559, 1772, 1608, 1791], [1620, 1763, 1655, 1791], [1664, 1763, 1820, 1792], [479, 1847, 644, 1876], [656, 1847, 712, 1876], [724, 1847, 867, 1875], [881, 1847, 930, 1875], [943, 1856, 1007, 1875], [1009, 1856, 1069, 1875], [1082, 1847, 1237, 1875], [1250, 1847, 1315, 1881], [1330, 1847, 1387, 1875], [1400, 1856, 1435, 1875], [1447, 1847, 1468, 1875], [1480, 1847, 1505, 1875], [1518, 1847, 1724, 1884], [1736, 1851, 1804, 1875], [479, 1931, 542, 1959], [554, 1935, 692, 1968], [704, 1928, 779, 1969], [796, 1944, 824, 1953], [846, 1930, 948, 1982], [964, 1931, 988, 1959], [1002, 1931, 1183, 1960], [1196, 1931, 1253, 1959], [1265, 1935, 1477, 1959], [479, 2022, 543, 2050], [556, 2022, 667, 2059], [683, 2019, 749, 2060], [760, 2019, 812, 2060], [829, 2026, 941, 2050], [951, 2022, 991, 2050], [1003, 2022, 1078, 2050], [1090, 2031, 1245, 2050], [1260, 2026, 1288, 2050], [1300, 2022, 1350, 2050], [1364, 2031, 1448, 2050], [1461, 2022, 1543, 2056], [1559, 2022, 1643, 2050], [1657, 2031, 1697, 2056], [1716, 2028, 1742, 2052], [1761, 2022, 1778, 2051], [1791, 2022, 1932, 2050], [1947, 2031, 1977, 2056], [1996, 2035, 2024, 2044], [2040, 2031, 2071, 2056], [2086, 2026, 2114, 2053], [2127, 2031, 2171, 2056], [480, 2073, 537, 2101], [550, 2072, 586, 2109], [604, 2079, 630, 2103], [647, 2073, 664, 2102], [677, 2073, 815, 2101], [829, 2082, 859, 2107], [877, 2086, 905, 2095], [919, 2082, 950, 2107], [966, 2090, 992, 2091], [1006, 2082, 1061, 2107], [1076, 2073, 1133, 2101], [1145, 2082, 1189, 2107], [1204, 2073, 1229, 2101], [1242, 2082, 1403, 2101], [479, 2158, 586, 2185], [601, 2157, 659, 2185], [672, 2157, 805, 2185], [820, 2166, 871, 2193], [883, 2156, 919, 2193], [941, 2159, 967, 2191], [987, 2157, 1004, 2186], [1020, 2157, 1078, 2185], [1092, 2157, 1251, 2185], [1264, 2157, 1320, 2186], [1335, 2157, 1435, 2191], [1451, 2157, 1542, 2186], [1558, 2154, 1644, 2195], [1662, 2174, 1688, 2175], [1704, 2154, 1749, 2195], [1767, 2174, 1793, 2175], [1811, 2154, 1855, 2195], [1872, 2174, 1898, 2175], [1914, 2154, 2003, 2195], [2025, 2163, 2051, 2187], [2071, 2157, 2088, 2186], [2103, 2157, 2174, 2185], [480, 2217, 520, 2242], [538, 2214, 564, 2238], [581, 2208, 608, 2242], [622, 2207, 658, 2244], [675, 2221, 703, 2230], [719, 2208, 746, 2242], [761, 2208, 818, 2236], [830, 2208, 918, 2236], [933, 2205, 1019, 2246], [1035, 2225, 1061, 2226], [1076, 2205, 1122, 2246], [1138, 2225, 1164, 2226], [1181, 2205, 1225, 2246], [1241, 2225, 1267, 2226], [1281, 2205, 1370, 2246], [1389, 2214, 1415, 2237], [1431, 2208, 1448, 2237], [1461, 2208, 1531, 2236], [1544, 2217, 1584, 2242], [1601, 2221, 1629, 2230], [1645, 2208, 1672, 2242], [1686, 2207, 1722, 2244], [1740, 2214, 1766, 2238], [1783, 2208, 1809, 2237], [480, 2289, 592, 2330], [609, 2309, 635, 2310], [650, 2289, 696, 2330], [712, 2309, 738, 2310], [753, 2289, 824, 2330], [840, 2309, 866, 2310], [880, 2289, 968, 2330], [983, 2292, 1037, 2320], [1050, 2292, 1100, 2320], [1113, 2301, 1177, 2320], [1179, 2292, 1276, 2329], [1289, 2301, 1321, 2320], [1336, 2289, 1422, 2330], [1439, 2309, 1465, 2310], [1479, 2289, 1525, 2330], [1541, 2309, 1567, 2310], [1584, 2289, 1628, 2330], [1644, 2309, 1670, 2310], [1684, 2289, 1785, 2330], [1800, 2292, 1883, 2320], [1896, 2291, 1917, 2329], [1930, 2292, 1956, 2320], [1969, 2296, 2173, 2320], [480, 2343, 537, 2371], [551, 2352, 581, 2371], [596, 2343, 669, 2371], [680, 2352, 834, 2380], [848, 2343, 994, 2380], [480, 2427, 570, 2456], [583, 2426, 604, 2464], [617, 2427, 641, 2455], [655, 2427, 844, 2461], [857, 2427, 1012, 2455], [1024, 2427, 1079, 2456], [1093, 2436, 1149, 2455], [1160, 2427, 1198, 2455], [1210, 2436, 1259, 2455], [1261, 2427, 1322, 2464], [1335, 2427, 1442, 2464], [1458, 2424, 1523, 2465], [1535, 2415, 1587, 2465], [1605, 2440, 1633, 2449], [1651, 2424, 1826, 2465], [1841, 2427, 1889, 2455], [1901, 2427, 2015, 2456], [2032, 2426, 2093, 2461], [2110, 2433, 2136, 2456], [2155, 2427, 2178, 2455], [479, 2478, 559, 2505], [570, 2477, 631, 2505], [643, 2477, 700, 2505], [713, 2477, 811, 2505], [824, 2477, 955, 2505], [970, 2474, 1035, 2515], [1047, 2474, 1099, 2515], [1114, 2481, 1223, 2505], [1234, 2477, 1273, 2505], [1284, 2477, 1357, 2505], [1369, 2486, 1439, 2505], [1452, 2481, 1479, 2505], [1491, 2477, 1540, 2505], [1553, 2486, 1636, 2505], [1648, 2477, 1728, 2505], [479, 2561, 644, 2590], [656, 2561, 734, 2590], [746, 2561, 770, 2589], [784, 2565, 844, 2589], [856, 2561, 904, 2589], [915, 2561, 1001, 2589], [1013, 2561, 1135, 2589], [1148, 2561, 1184, 2589], [1194, 2560, 1245, 2597], [1257, 2549, 1305, 2597], [1320, 2570, 1350, 2589], [1364, 2561, 1419, 2590], [1433, 2570, 1494, 2589], [1507, 2565, 1568, 2589], [1580, 2561, 1628, 2589], [1640, 2570, 1691, 2597], [1703, 2560, 1739, 2597], [1755, 2561, 1885, 2595], [1902, 2560, 1921, 2589], [1937, 2561, 2006, 2590], [479, 2645, 663, 2674], [676, 2645, 752, 2674], [768, 2645, 826, 2673], [839, 2645, 918, 2674], [931, 2654, 980, 2673], [993, 2645, 1058, 2673], [1071, 2654, 1121, 2673], [1123, 2645, 1193, 2673], [1205, 2645, 1292, 2673], [1304, 2645, 1429, 2673], [1442, 2645, 1478, 2673], [1488, 2644, 1540, 2681], [1551, 2633, 1599, 2681], [1614, 2654, 1646, 2673], [1660, 2644, 1700, 2680], [1707, 2642, 1752, 2683], [1768, 2662, 1794, 2663], [1807, 2654, 1838, 2680], [1854, 2662, 1880, 2663], [1894, 2642, 1953, 2683], [1971, 2658, 1999, 2667], [2015, 2644, 2077, 2680], [2085, 2642, 2129, 2683], [2145, 2662, 2171, 2663], [479, 2705, 510, 2730], [526, 2713, 552, 2714], [566, 2693, 625, 2734], [643, 2709, 671, 2718], [687, 2696, 775, 2725], [787, 2693, 920, 2734], [936, 2713, 962, 2714], [977, 2705, 1007, 2730], [1022, 2700, 1050, 2727], [1062, 2693, 1109, 2734], [1127, 2709, 1155, 2718], [1171, 2693, 1326, 2734], [1342, 2713, 1368, 2714], [1382, 2705, 1412, 2730], [1427, 2700, 1455, 2727], [1468, 2693, 1515, 2734], [1532, 2709, 1560, 2718], [1576, 2696, 1602, 2725], [1255, 2935, 1293, 2964], [374, 242, 546, 276], [561, 242, 600, 270], [612, 242, 648, 270], [657, 242, 706, 270], [718, 242, 888, 279], [900, 242, 1072, 270], [1085, 242, 1236, 271], [1248, 242, 1296, 270], [1306, 242, 1445, 279], [1457, 242, 1514, 271], [1527, 251, 1576, 270], [1588, 246, 1650, 270], [1661, 242, 1709, 270], [1721, 241, 1755, 270], [1772, 242, 1904, 270], [1916, 242, 1952, 270], [1961, 242, 2099, 279], [2111, 242, 2177, 276], [377, 292, 434, 320], [447, 301, 481, 320], [494, 301, 510, 320], [522, 292, 682, 320], [694, 292, 730, 320], [738, 292, 876, 329], [887, 292, 941, 321], [957, 292, 981, 320], [996, 292, 1060, 320], [1073, 301, 1089, 320], [1101, 292, 1261, 320], [1273, 292, 1320, 320], [1330, 292, 1468, 329], [1480, 292, 1545, 321], [438, 343, 502, 371], [516, 343, 610, 380], [622, 352, 680, 371], [693, 343, 733, 371], [747, 343, 889, 380], [905, 343, 955, 371], [970, 343, 1056, 371], [1070, 352, 1138, 380], [1153, 343, 1251, 371], [1265, 343, 1306, 380], [1323, 343, 1433, 380], [1449, 352, 1467, 371], [1489, 356, 1517, 365], [1538, 342, 1572, 371], [1592, 343, 1719, 380], [1735, 343, 1783, 371], [1796, 343, 1938, 380], [1952, 343, 2019, 377], [2037, 343, 2173, 380], [376, 394, 425, 422], [440, 398, 580, 431], [594, 388, 714, 432], [735, 407, 763, 416], [786, 393, 904, 445], [922, 394, 980, 422], [994, 394, 1159, 431], [1174, 394, 1237, 422], [1250, 394, 1309, 422], [1324, 398, 1464, 431], [1477, 394, 1503, 422], [1518, 398, 1725, 422], [1741, 394, 1799, 422], [1814, 394, 1988, 431], [2006, 403, 2040, 422], [2055, 403, 2102, 423], [2117, 403, 2174, 422], [376, 461, 523, 489], [537, 458, 603, 499], [614, 458, 666, 499], [684, 474, 712, 483], [731, 458, 819, 499], [831, 449, 906, 499], [921, 461, 970, 489], [982, 470, 1069, 489], [1082, 460, 1101, 489], [1118, 463, 1144, 495], [1163, 461, 1176, 489], [1192, 461, 1250, 489], [1263, 461, 1313, 489], [1325, 461, 1497, 498], [1510, 461, 1684, 489], [1697, 461, 1828, 490], [1842, 461, 1890, 489], [1901, 461, 2042, 498], [2053, 461, 2108, 490], [2125, 470, 2174, 489], [376, 515, 438, 539], [450, 511, 612, 548], [626, 520, 643, 539], [656, 511, 772, 539], [783, 511, 947, 548], [960, 515, 991, 539], [1005, 511, 1055, 539], [1068, 520, 1127, 539], [1139, 511, 1300, 548], [1315, 511, 1421, 539], [1440, 511, 1532, 545], [1548, 520, 1565, 539], [1577, 511, 1741, 539], [1753, 511, 1801, 539], [1813, 511, 1954, 548], [1966, 511, 2024, 540], [2038, 511, 2063, 539], [2078, 511, 2143, 539], [2158, 520, 2175, 539], [376, 562, 536, 590], [547, 562, 595, 590], [605, 562, 743, 599], [755, 562, 821, 596], [834, 562, 934, 590], [942, 562, 1048, 599], [1060, 562, 1132, 590], [1145, 562, 1194, 590], [1205, 562, 1344, 599], [1357, 562, 1449, 590], [1461, 562, 1626, 599], [1639, 562, 1689, 590], [1699, 562, 1796, 599], [2145, 613, 2173, 642], [376, 742, 416, 782], [478, 741, 622, 783], [636, 754, 696, 783], [713, 742, 790, 783], [809, 741, 1103, 794], [1121, 741, 1172, 783], [1185, 741, 1435, 783], [1452, 741, 1723, 794], [1740, 742, 1930, 783], [376, 847, 578, 885], [593, 847, 662, 876], [690, 849, 786, 885], [802, 848, 892, 885], [908, 849, 1170, 885], [1187, 854, 1217, 876], [1233, 848, 1281, 876], [1296, 854, 1432, 885], [1446, 858, 1560, 877], [1574, 849, 1728, 876], [1742, 848, 1806, 876], [1820, 848, 1868, 876], [1885, 848, 2023, 877], [2037, 858, 2173, 877], [376, 900, 527, 936], [537, 899, 611, 928], [624, 905, 676, 927], [687, 899, 786, 936], [788, 899, 865, 927], [878, 899, 1009, 928], [1022, 899, 1060, 936], [1066, 899, 1113, 927], [1127, 900, 1299, 936], [1311, 899, 1439, 928], [375, 981, 474, 1018], [499, 982, 554, 1009], [564, 990, 600, 1009], [613, 985, 683, 1009], [696, 978, 775, 1019], [792, 990, 823, 1009], [836, 981, 885, 1009], [898, 981, 1034, 1009], [1045, 990, 1179, 1009], [1190, 981, 1338, 1018], [1349, 981, 1385, 1009], [1396, 990, 1481, 1009], [1493, 981, 1631, 1009], [1644, 980, 1665, 1018], [1678, 981, 1781, 1018], [1793, 981, 1908, 1018], [1919, 981, 2032, 1015], [2047, 978, 2125, 1019], [2142, 990, 2173, 1009], [376, 1032, 425, 1060], [437, 1036, 567, 1069], [578, 1041, 713, 1060], [725, 1032, 884, 1066], [898, 1029, 971, 1070], [988, 1041, 1020, 1060], [1032, 1032, 1082, 1060], [1095, 1032, 1231, 1060], [1243, 1032, 1335, 1060], [1347, 1032, 1496, 1069], [1508, 1032, 1566, 1060], [1578, 1029, 1652, 1070], [1668, 1041, 1700, 1060], [1713, 1032, 1762, 1060], [1774, 1036, 1904, 1069], [1917, 1032, 2009, 1060], [2021, 1032, 2179, 1060], [376, 1083, 400, 1110], [403, 1082, 592, 1119], [604, 1091, 651, 1110], [662, 1082, 738, 1111], [794, 1181, 828, 1222], [833, 1181, 914, 1222], [933, 1181, 1101, 1222], [1119, 1181, 1227, 1222], [1246, 1181, 1414, 1222], [1433, 1181, 1595, 1222], [1641, 1183, 1755, 1214], [438, 1258, 585, 1287], [596, 1267, 663, 1286], [676, 1258, 724, 1286], [736, 1262, 836, 1286], [849, 1258, 884, 1286], [893, 1258, 941, 1286], [954, 1258, 1120, 1295], [1132, 1258, 1276, 1295], [1290, 1258, 1387, 1286], [1401, 1267, 1417, 1286], [1429, 1258, 1580, 1295], [1594, 1258, 1764, 1295], [1776, 1258, 1845, 1286], [1857, 1258, 1893, 1286], [1901, 1258, 1999, 1286], [2013, 1257, 2045, 1293], [2062, 1262, 2089, 1286], [2100, 1258, 2174, 1286], [377, 1309, 490, 1337], [502, 1309, 526, 1337], [540, 1309, 691, 1337], [702, 1309, 741, 1346], [754, 1309, 910, 1346], [923, 1309, 971, 1337], [983, 1309, 1128, 1346], [1140, 1309, 1175, 1337], [1184, 1309, 1232, 1337], [1245, 1309, 1313, 1337], [1325, 1309, 1441, 1337], [1453, 1308, 1488, 1346], [1502, 1326, 1528, 1327], [1542, 1308, 1576, 1344], [1590, 1309, 1647, 1337], [1659, 1309, 1707, 1337], [1719, 1309, 1855, 1337], [1856, 1309, 1913, 1337], [1922, 1309, 1970, 1337], [1983, 1309, 2051, 1337], [2064, 1309, 2173, 1346], [375, 1359, 410, 1397], [423, 1364, 451, 1391], [464, 1359, 508, 1395], [525, 1361, 578, 1388], [589, 1360, 674, 1388], [685, 1360, 734, 1388], [746, 1360, 934, 1397], [949, 1360, 1044, 1389], [1057, 1369, 1097, 1388], [924, 1498, 989, 1539], [1005, 1518, 1031, 1519], [1046, 1500, 1078, 1535], [1097, 1498, 1248, 1539], [1265, 1518, 1291, 1519], [1305, 1498, 1353, 1539], [1372, 1503, 1398, 1535], [1415, 1498, 1518, 1539], [1534, 1518, 1560, 1519], [1575, 1498, 1623, 1539], [923, 1561, 958, 1602], [962, 1561, 1027, 1602], [1043, 1568, 1071, 1595], [1084, 1561, 1132, 1602], [1151, 1566, 1177, 1598], [1194, 1561, 1303, 1602], [1318, 1568, 1346, 1595], [1359, 1561, 1408, 1602], [1426, 1566, 1452, 1598], [1469, 1561, 1534, 1602], [1550, 1563, 1623, 1598], [438, 1655, 475, 1682], [474, 1654, 566, 1682], [579, 1654, 663, 1682], [676, 1654, 738, 1682], [750, 1663, 786, 1682], [798, 1654, 921, 1691], [933, 1654, 969, 1682], [979, 1654, 1114, 1682], [1125, 1663, 1259, 1682], [1271, 1654, 1419, 1691], [1429, 1654, 1441, 1683], [1452, 1658, 1581, 1691], [1592, 1663, 1708, 1682], [1720, 1654, 1858, 1682], [1859, 1654, 1965, 1682], [1976, 1654, 2044, 1691], [2047, 1654, 2115, 1682], [2124, 1654, 2174, 1682], [377, 1714, 458, 1733], [470, 1705, 590, 1742], [602, 1705, 735, 1742], [748, 1705, 836, 1733], [847, 1705, 934, 1742], [947, 1705, 995, 1733], [1009, 1705, 1098, 1733], [1112, 1705, 1373, 1742], [1390, 1706, 1441, 1733], [1454, 1705, 1594, 1742], [1606, 1705, 1704, 1733], [1717, 1705, 1837, 1742], [1851, 1714, 1881, 1733], [1894, 1705, 1942, 1733], [1956, 1705, 2062, 1742], [2075, 1705, 2173, 1733], [376, 1756, 423, 1784], [435, 1765, 451, 1784], [462, 1756, 547, 1793], [559, 1757, 570, 1784], [583, 1765, 630, 1784], [641, 1756, 718, 1785], [731, 1753, 803, 1794], [818, 1760, 846, 1787], [859, 1753, 907, 1794], [926, 1758, 952, 1790], [969, 1753, 1041, 1794], [1057, 1773, 1083, 1774], [1097, 1753, 1157, 1794], [438, 1807, 488, 1836], [490, 1807, 586, 1835], [598, 1807, 634, 1835], [645, 1807, 694, 1835], [707, 1807, 899, 1844], [911, 1807, 937, 1835], [950, 1816, 1032, 1844], [1051, 1807, 1078, 1835], [1089, 1804, 1198, 1845], [1214, 1811, 1242, 1838], [1256, 1804, 1304, 1845], [1323, 1809, 1349, 1841], [1367, 1804, 1476, 1845], [1493, 1824, 1519, 1825], [1534, 1804, 1568, 1845], [1584, 1807, 1632, 1835], [1645, 1816, 1732, 1835], [1745, 1808, 1766, 1841], [1781, 1807, 1852, 1835], [1863, 1807, 1954, 1844], [1967, 1807, 1999, 1835], [2000, 1807, 2173, 1835], [377, 1857, 469, 1885], [481, 1866, 527, 1886], [538, 1857, 612, 1885], [624, 1854, 659, 1895], [663, 1854, 728, 1895], [741, 1861, 769, 1888], [781, 1854, 829, 1895], [848, 1859, 874, 1891], [890, 1854, 955, 1895], [961, 1854, 999, 1895], [1013, 1861, 1041, 1888], [1052, 1854, 1100, 1895], [1119, 1859, 1145, 1891], [1162, 1854, 1227, 1895], [1232, 1854, 1271, 1895], [1285, 1874, 1311, 1875], [1324, 1854, 1372, 1895], [1390, 1859, 1416, 1891], [1433, 1854, 1537, 1895], [1551, 1874, 1577, 1875], [1589, 1854, 1650, 1895], [1664, 1857, 1719, 1885], [1732, 1866, 1765, 1885], [1777, 1857, 1825, 1885], [1838, 1857, 1926, 1885], [1939, 1857, 2174, 1894], [376, 1908, 488, 1936], [502, 1917, 559, 1945], [571, 1908, 692, 1945], [704, 1908, 806, 1945], [818, 1908, 905, 1945], [917, 1908, 947, 1936], [959, 1908, 1009, 1936], [1020, 1908, 1282, 1937], [1294, 1912, 1489, 1945], [438, 1959, 502, 1987], [517, 1959, 659, 1996], [674, 1959, 809, 1996], [825, 1959, 875, 1987], [890, 1959, 949, 1996], [965, 1959, 1160, 1987], [1175, 1959, 1238, 1987], [1253, 1959, 1284, 1987], [1299, 1959, 1349, 1987], [1365, 1959, 1537, 1996], [1553, 1959, 1678, 1987], [1693, 1959, 1768, 1987], [1783, 1959, 1933, 1996], [1949, 1959, 2007, 1987], [2023, 1959, 2175, 1987], [376, 2010, 526, 2038], [541, 2019, 589, 2038], [601, 2010, 739, 2047], [751, 2014, 781, 2038], [794, 2010, 843, 2038], [856, 2019, 939, 2038], [949, 2010, 1022, 2047], [1024, 2010, 1082, 2038], [1091, 2010, 1197, 2047], [1215, 2007, 1287, 2048], [1304, 2023, 1332, 2032], [1348, 2010, 1365, 2039], [1379, 2014, 1407, 2038], [1419, 2010, 1468, 2038], [1481, 2014, 1549, 2038], [1561, 2010, 1597, 2038], [1606, 2010, 1655, 2038], [1667, 2010, 1798, 2044], [1812, 2019, 1846, 2038], [1857, 2010, 1906, 2038], [1917, 2010, 2002, 2047], [2013, 2010, 2113, 2038], [2125, 2010, 2174, 2038], [376, 2061, 431, 2089], [443, 2065, 576, 2098], [588, 2070, 648, 2090], [661, 2061, 739, 2089], [753, 2061, 826, 2089], [837, 2061, 910, 2089], [920, 2065, 1029, 2089], [1045, 2062, 1099, 2089], [1110, 2070, 1144, 2089], [1158, 2070, 1275, 2089], [1288, 2058, 1360, 2099], [1378, 2074, 1406, 2083], [1421, 2061, 1438, 2090], [1452, 2061, 1563, 2090], [1565, 2061, 1647, 2089], [1660, 2061, 1695, 2089], [1704, 2061, 1870, 2098], [1888, 2061, 2023, 2098], [2035, 2070, 2102, 2090], [2114, 2061, 2174, 2089], [377, 2120, 413, 2139], [425, 2111, 544, 2148], [557, 2111, 581, 2139], [595, 2111, 730, 2139], [741, 2111, 781, 2148], [793, 2111, 841, 2139], [855, 2111, 944, 2139], [958, 2111, 1202, 2148], [1219, 2112, 1335, 2139], [1338, 2120, 1384, 2139], [1387, 2111, 1467, 2139], [1482, 2111, 1571, 2139], [1583, 2115, 1684, 2139], [1696, 2111, 1744, 2139], [1757, 2111, 2061, 2148], [2074, 2111, 2173, 2148], [377, 2171, 425, 2190], [437, 2166, 582, 2196], [596, 2162, 642, 2190], [838, 2244, 868, 2286], [887, 2244, 1162, 2286], [1179, 2244, 1247, 2288], [1298, 2251, 1331, 2286], [1349, 2251, 1625, 2286], [1642, 2251, 1709, 2285], [376, 2343, 527, 2376], [540, 2342, 567, 2370], [575, 2351, 621, 2371], [633, 2342, 770, 2370], [780, 2342, 828, 2370], [840, 2342, 1096, 2371], [1109, 2342, 1358, 2379], [1371, 2342, 1452, 2370], [1465, 2342, 1563, 2379], [1576, 2351, 1631, 2370], [1642, 2342, 1925, 2371], [1938, 2351, 1968, 2370], [1981, 2342, 2029, 2370], [2042, 2346, 2174, 2379], [375, 2402, 548, 2430], [552, 2393, 621, 2427], [622, 2393, 679, 2421], [893, 2477, 931, 2521], [950, 2477, 1031, 2521], [1050, 2485, 1135, 2517], [1153, 2477, 1247, 2521], [1301, 2477, 1339, 2521], [1358, 2477, 1543, 2521], [1561, 2485, 1587, 2517], [1604, 2477, 1655, 2521], [376, 2573, 522, 2602], [533, 2582, 600, 2602], [613, 2573, 660, 2601], [673, 2573, 975, 2610], [987, 2573, 1097, 2607], [1110, 2573, 1269, 2610], [1281, 2573, 1406, 2610], [1418, 2573, 1466, 2601], [1479, 2573, 1577, 2610], [1591, 2573, 1648, 2601], [1660, 2573, 1759, 2610], [1772, 2573, 1833, 2601], [1847, 2582, 1960, 2601], [1961, 2573, 2031, 2601], [2043, 2573, 2180, 2602], [376, 2624, 438, 2652], [451, 2624, 547, 2653], [560, 2624, 638, 2652], [639, 2624, 711, 2652], [723, 2624, 845, 2661], [856, 2624, 949, 2661], [440, 2748, 535, 2789], [539, 2748, 592, 2789], [606, 2740, 833, 2811], [887, 2748, 996, 2789], [1011, 2748, 1101, 2789], [1171, 2740, 1332, 2811], [1386, 2748, 1640, 2789], [1655, 2743, 1694, 2787], [1747, 2748, 1851, 2789], [1866, 2748, 1956, 2789], [2025, 2750, 2107, 2785], [1255, 2935, 1294, 2964], [377, 242, 466, 271], [479, 251, 516, 270], [528, 242, 649, 279], [660, 242, 713, 270], [726, 242, 804, 270], [816, 242, 952, 270], [964, 242, 995, 270], [1007, 242, 1056, 270], [1069, 242, 1160, 270], [1173, 242, 1421, 279], [1435, 251, 1482, 270], [1493, 242, 1569, 271], [1581, 242, 1642, 270], [1654, 242, 1701, 270], [1713, 251, 1780, 270], [1782, 242, 1883, 279], [1884, 243, 1917, 270], [939, 333, 971, 367], [986, 347, 1014, 356], [1029, 331, 1064, 372], [1068, 331, 1133, 372], [1149, 338, 1177, 365], [1190, 331, 1238, 372], [1257, 336, 1283, 368], [1300, 331, 1359, 372], [1364, 331, 1403, 372], [1419, 351, 1445, 352], [1460, 333, 1492, 368], [1525, 347, 1553, 356], [1568, 326, 1607, 370], [1498, 331, 1508, 372], [377, 435, 411, 454], [422, 425, 441, 459], [456, 428, 482, 460], [499, 418, 524, 454], [541, 426, 690, 455], [702, 435, 770, 454], [783, 426, 832, 454], [844, 426, 945, 455], [959, 435, 978, 454], [980, 426, 1053, 454], [1066, 426, 1157, 454], [1169, 426, 1465, 463], [1466, 430, 1517, 454], [1529, 426, 1578, 454], [1589, 426, 1674, 463], [1685, 426, 1891, 463], [1904, 426, 1979, 454], [1990, 426, 2039, 454], [2051, 426, 2157, 463], [980, 516, 1207, 557], [1221, 518, 1247, 555], [1301, 516, 1371, 557], [1387, 516, 1481, 557], [1499, 532, 1527, 541], [1543, 511, 1567, 547], [374, 612, 410, 639], [409, 611, 498, 640], [512, 611, 593, 640], [606, 620, 673, 640], [686, 611, 745, 639], [757, 611, 805, 639], [817, 611, 1056, 640], [1068, 615, 1252, 648], [1264, 615, 1342, 639], [1353, 611, 1419, 639], [1431, 611, 1546, 648], [1559, 611, 1606, 639], [1620, 620, 1700, 639], [1713, 611, 1798, 640], [1801, 615, 1854, 639], [1866, 611, 1947, 639], [1959, 611, 2065, 648], [2082, 612, 2122, 639], [2135, 611, 2173, 639], [377, 671, 411, 690], [423, 671, 451, 690], [453, 662, 549, 690], [561, 662, 624, 690], [637, 666, 763, 690], [775, 662, 824, 690], [836, 662, 995, 699], [1007, 662, 1076, 690], [1093, 662, 1175, 690], [1187, 666, 1266, 690], [1278, 662, 1354, 690], [1365, 662, 1464, 699], [1478, 672, 1499, 690], [1513, 662, 1570, 690], [1582, 672, 1611, 699], [1625, 672, 1686, 699], [1702, 664, 1728, 696], [1744, 663, 1765, 696], [1779, 662, 1879, 690], [607, 751, 641, 792], [646, 753, 681, 791], [696, 758, 724, 785], [738, 751, 793, 792], [810, 767, 838, 776], [854, 753, 889, 791], [905, 758, 933, 785], [946, 753, 985, 788], [1003, 767, 1031, 776], [1047, 751, 1126, 792], [1141, 758, 1169, 785], [1182, 751, 1250, 792], [1304, 751, 1376, 794], [1392, 771, 1418, 772], [1433, 751, 1487, 794], [1505, 767, 1533, 776], [1548, 753, 1583, 794], [1599, 771, 1625, 772], [1639, 753, 1678, 794], [1695, 767, 1723, 776], [1739, 757, 1762, 783], [1769, 751, 1817, 794], [1833, 771, 1859, 772], [1874, 751, 1940, 794], [376, 846, 438, 874], [450, 846, 475, 874], [488, 850, 519, 874], [533, 855, 593, 883], [607, 846, 657, 874], [670, 846, 763, 874], [775, 846, 1089, 883], [1101, 850, 1182, 874], [1194, 846, 1287, 874], [1298, 846, 1348, 874], [1361, 846, 1432, 874], [1444, 846, 1690, 883], [1703, 850, 1731, 874], [1744, 855, 1830, 874], [1842, 846, 1937, 883], [1951, 846, 2114, 875], [2126, 855, 2174, 875], [376, 897, 467, 925], [481, 897, 586, 925], [600, 906, 617, 925], [629, 901, 746, 934], [758, 897, 911, 925], [922, 897, 934, 926], [947, 897, 1070, 925], [1083, 897, 1233, 934], [1244, 897, 1285, 934], [1298, 897, 1445, 934], [1459, 897, 1517, 925], [1532, 897, 1677, 925], [1698, 897, 1762, 925], [1775, 897, 1935, 934], [1949, 901, 1980, 925], [1994, 897, 2044, 925], [2057, 906, 2174, 925], [376, 948, 524, 976], [535, 948, 547, 977], [558, 957, 691, 977], [703, 948, 849, 985], [862, 957, 910, 976], [922, 948, 991, 976], [1003, 948, 1145, 976], [1156, 948, 1197, 985], [1209, 948, 1375, 985], [1387, 948, 1436, 976], [1448, 948, 1636, 985], [1651, 952, 1678, 976], [1690, 948, 1739, 976], [1750, 948, 1915, 985], [1927, 957, 1946, 976], [1948, 948, 2021, 976], [2032, 948, 2129, 985], [438, 1000, 485, 1036], [503, 999, 553, 1027], [572, 999, 694, 1036], [711, 999, 872, 1036], [890, 999, 1083, 1036], [1102, 996, 1179, 1037], [1199, 1003, 1227, 1030], [1244, 996, 1297, 1037], [1327, 1001, 1353, 1033], [1379, 996, 1450, 1037], [1470, 1003, 1498, 1030], [1516, 996, 1581, 1037], [1601, 999, 1655, 1027], [1672, 999, 1713, 1027], [1729, 1008, 1765, 1027], [1785, 1008, 1918, 1036], [1936, 999, 1985, 1027], [2003, 1008, 2020, 1027], [2037, 1003, 2175, 1027], [377, 1047, 453, 1088], [468, 1054, 496, 1081], [510, 1047, 563, 1088], [582, 1056, 608, 1080], [624, 1047, 695, 1088], [711, 1054, 739, 1081], [752, 1047, 816, 1088], [833, 1050, 904, 1078], [918, 1050, 1019, 1078], [1031, 1050, 1126, 1087], [1140, 1046, 1178, 1088], [1196, 1056, 1222, 1080], [1237, 1049, 1264, 1083], [1282, 1051, 1334, 1078], [1346, 1050, 1416, 1078], [1428, 1050, 1530, 1078], [1541, 1050, 1599, 1079], [1600, 1050, 1690, 1078], [1703, 1054, 1730, 1078], [1742, 1050, 1791, 1078], [1803, 1050, 1947, 1087], [1958, 1050, 2043, 1087], [2055, 1060, 2076, 1078], [377, 1243, 407, 1262], [420, 1234, 468, 1262], [482, 1234, 581, 1271], [594, 1234, 625, 1262], [638, 1243, 654, 1262], [665, 1243, 780, 1263], [792, 1234, 939, 1262], [951, 1238, 1029, 1262], [1040, 1234, 1078, 1262], [1091, 1234, 1327, 1271], [1339, 1234, 1514, 1271], [1531, 1235, 1685, 1268], [1700, 1234, 1772, 1262], [1784, 1234, 1920, 1262], [1932, 1234, 2033, 1262], [2045, 1238, 2096, 1262], [2107, 1234, 2145, 1262], [2158, 1243, 2174, 1262], [374, 1285, 455, 1313], [468, 1294, 584, 1313], [596, 1285, 747, 1313], [749, 1294, 801, 1319], [814, 1285, 837, 1313], [848, 1285, 950, 1314], [962, 1294, 1045, 1322], [1058, 1294, 1130, 1313], [1143, 1284, 1164, 1322], [1177, 1289, 1205, 1316], [1218, 1284, 1248, 1314], [1265, 1285, 1428, 1313], [1441, 1282, 1481, 1323], [1485, 1284, 1517, 1322], [1533, 1289, 1561, 1316], [1575, 1282, 1628, 1323], [1645, 1298, 1673, 1307], [1689, 1282, 1723, 1323], [1727, 1284, 1760, 1322], [1776, 1289, 1804, 1316], [1817, 1282, 1870, 1323], [1885, 1289, 1966, 1313], [1976, 1285, 2059, 1313], [2075, 1285, 2174, 1322], [377, 1336, 580, 1373], [594, 1340, 759, 1373], [774, 1333, 850, 1374], [867, 1353, 893, 1354], [908, 1333, 960, 1374], [978, 1349, 1006, 1358], [1022, 1333, 1092, 1374], [1109, 1353, 1135, 1354], [1150, 1333, 1203, 1374], [1218, 1345, 1276, 1364], [1288, 1336, 1353, 1364], [1365, 1336, 1404, 1364], [1417, 1336, 1501, 1365], [1504, 1340, 1566, 1364], [1578, 1336, 1661, 1364], [1676, 1336, 1800, 1373], [1812, 1336, 1871, 1364], [1884, 1336, 1958, 1365], [1969, 1336, 2019, 1364], [2030, 1336, 2173, 1373], [376, 1387, 450, 1415], [464, 1396, 511, 1415], [522, 1387, 598, 1416], [610, 1387, 671, 1415], [733, 1476, 809, 1517], [825, 1483, 853, 1510], [867, 1476, 919, 1517], [937, 1492, 965, 1501], [980, 1476, 1051, 1517], [1067, 1476, 1162, 1517], [1179, 1492, 1207, 1501], [1221, 1510, 1236, 1512], [1256, 1471, 1316, 1513], [1330, 1492, 1358, 1501], [1374, 1476, 1444, 1517], [1461, 1496, 1487, 1497], [1502, 1476, 1554, 1517], [1572, 1492, 1600, 1501], [1616, 1476, 1692, 1517], [1709, 1496, 1735, 1497], [1749, 1476, 1814, 1517], [377, 1571, 433, 1599], [445, 1571, 592, 1599], [604, 1571, 652, 1599], [665, 1571, 785, 1608], [798, 1571, 933, 1599], [944, 1571, 985, 1608], [997, 1571, 1045, 1599], [1058, 1571, 1148, 1599], [1161, 1571, 1399, 1608], [1411, 1571, 1435, 1599], [1449, 1571, 1584, 1599], [1596, 1571, 1723, 1608], [1735, 1571, 1770, 1599], [1784, 1571, 2042, 1600], [2055, 1571, 2174, 1600], [377, 1631, 407, 1650], [420, 1622, 490, 1650], [502, 1622, 630, 1659], [643, 1619, 683, 1660], [687, 1621, 719, 1659], [735, 1626, 763, 1653], [776, 1619, 829, 1660], [848, 1624, 874, 1656], [891, 1619, 967, 1660], [984, 1639, 1010, 1640], [1024, 1619, 1088, 1660], [2145, 1673, 2173, 1702], [376, 1803, 413, 1843], [475, 1802, 923, 1855], [941, 1802, 1014, 1844], [1030, 1802, 1257, 1855], [1275, 1789, 1393, 1857], [376, 1909, 409, 1936], [421, 1908, 480, 1936], [493, 1908, 645, 1945], [657, 1917, 685, 1937], [688, 1917, 825, 1945], [827, 1908, 957, 1936], [970, 1908, 1006, 1936], [1016, 1917, 1033, 1936], [1043, 1908, 1346, 1945], [1359, 1908, 1437, 1943], [1452, 1908, 1604, 1945], [1616, 1912, 1647, 1936], [1660, 1908, 1781, 1945], [1794, 1908, 1843, 1936], [1856, 1908, 2078, 1945], [2090, 1908, 2179, 1945], [376, 1959, 438, 1987], [451, 1959, 536, 1994], [554, 1959, 713, 1996], [725, 1959, 897, 1996], [911, 1959, 1098, 1996], [1112, 1968, 1161, 1987], [1174, 1959, 1364, 1996], [1378, 1959, 1515, 1996], [1527, 1963, 1558, 1987], [1571, 1959, 1629, 1987], [1643, 1960, 1694, 1987], [1709, 1959, 1862, 1996], [1864, 1959, 1934, 1993], [1947, 1959, 2055, 1987], [2068, 1959, 2104, 1987], [2114, 1959, 2173, 1987], [376, 2010, 544, 2038], [558, 2019, 652, 2047], [668, 2014, 698, 2038], [713, 2010, 752, 2038], [767, 2010, 870, 2038], [885, 2010, 975, 2039], [990, 2010, 1175, 2047], [1191, 2010, 1383, 2038], [1399, 2010, 1448, 2038], [1461, 2010, 1608, 2047], [1624, 2009, 1763, 2050], [1778, 2011, 1832, 2038], [1847, 2014, 2104, 2047], [2121, 2010, 2175, 2038], [375, 2061, 484, 2098], [487, 2061, 587, 2089], [598, 2065, 723, 2098], [734, 2070, 787, 2089], [799, 2061, 853, 2089], [866, 2061, 896, 2089], [907, 2061, 1075, 2098], [1089, 2070, 1105, 2089], [1117, 2061, 1234, 2098], [1247, 2061, 1368, 2089], [1379, 2061, 1439, 2089], [1451, 2061, 1540, 2089], [1551, 2061, 1588, 2089], [1601, 2061, 1719, 2098], [1731, 2065, 1760, 2089], [1773, 2061, 1856, 2089], [1866, 2061, 2002, 2098], [2003, 2061, 2088, 2089], [2099, 2061, 2173, 2090], [377, 2116, 534, 2140], [548, 2112, 662, 2140], [673, 2116, 704, 2140], [716, 2113, 773, 2146], [786, 2121, 853, 2149], [867, 2121, 962, 2149], [974, 2112, 1207, 2141], [1222, 2112, 1260, 2146], [1274, 2112, 1325, 2146], [1341, 2112, 1398, 2140], [1410, 2111, 1543, 2146], [1556, 2112, 1685, 2149], [1700, 2112, 1760, 2146], [1775, 2112, 1835, 2146], [438, 2162, 501, 2190], [513, 2162, 735, 2199], [747, 2162, 818, 2190], [829, 2162, 969, 2199], [981, 2162, 1057, 2197], [1070, 2162, 1096, 2190], [1110, 2171, 1127, 2190], [1137, 2162, 1448, 2190], [1460, 2162, 1516, 2197], [1531, 2171, 1565, 2190], [1578, 2162, 1601, 2190], [1611, 2162, 1703, 2190], [1714, 2162, 1753, 2190], [1766, 2162, 1872, 2190], [1883, 2162, 1973, 2199], [1987, 2171, 2004, 2190], [2015, 2162, 2128, 2199], [2141, 2162, 2177, 2190], [376, 2213, 512, 2241], [526, 2213, 599, 2241], [611, 2222, 642, 2241], [655, 2213, 762, 2242], [778, 2213, 851, 2247], [864, 2213, 1043, 2242], [1061, 2213, 1133, 2247], [1147, 2222, 1181, 2241], [1191, 2213, 1485, 2250], [1498, 2213, 1574, 2248], [1590, 2213, 1662, 2247], [1679, 2213, 1854, 2250], [1868, 2213, 1950, 2241], [1962, 2213, 2098, 2241], [2112, 2213, 2174, 2241], [375, 2264, 413, 2292], [425, 2264, 591, 2292], [603, 2264, 630, 2292], [639, 2264, 768, 2293], [780, 2264, 995, 2298], [1009, 2264, 1205, 2301], [1218, 2264, 1253, 2292], [1262, 2264, 1400, 2301], [1413, 2268, 1556, 2292], [1568, 2264, 1592, 2292], [1607, 2273, 1623, 2292], [1635, 2268, 1714, 2292], [1726, 2264, 1773, 2292], [1786, 2264, 1905, 2301], [1919, 2264, 1980, 2299], [1983, 2264, 2179, 2301], [376, 2316, 398, 2343], [399, 2315, 509, 2343], [511, 2315, 621, 2343], [630, 2315, 700, 2343], [712, 2319, 743, 2343], [756, 2315, 829, 2343], [842, 2319, 985, 2343], [997, 2315, 1203, 2352], [1217, 2324, 1264, 2343], [1275, 2315, 1412, 2343], [1424, 2315, 1473, 2343], [1485, 2315, 1590, 2343], [1603, 2315, 1708, 2343], [438, 2367, 489, 2394], [500, 2375, 555, 2394], [558, 2366, 749, 2403], [761, 2366, 792, 2394], [804, 2366, 886, 2394], [897, 2366, 955, 2403], [968, 2370, 1047, 2403], [1053, 2366, 1138, 2394], [1150, 2366, 1172, 2394], [1184, 2366, 1333, 2394], [1348, 2375, 1364, 2394], [1377, 2366, 1490, 2403], [1503, 2366, 1605, 2394], [1617, 2366, 1652, 2394], [1662, 2367, 1759, 2395], [1772, 2366, 1925, 2395], [1938, 2366, 1995, 2394], [2007, 2375, 2076, 2394], [2090, 2366, 2174, 2394], [376, 2420, 406, 2444], [421, 2420, 565, 2453], [581, 2425, 598, 2444], [612, 2416, 746, 2444], [760, 2416, 901, 2444], [924, 2416, 1018, 2450], [1035, 2416, 1058, 2444], [1070, 2425, 1141, 2444], [1157, 2416, 1215, 2444], [1230, 2416, 1363, 2444], [1377, 2420, 1408, 2444], [1424, 2416, 1505, 2444], [1520, 2416, 1570, 2444], [1584, 2416, 1722, 2453], [1737, 2416, 1795, 2444], [1810, 2425, 1901, 2444], [1915, 2416, 1947, 2444], [1961, 2416, 2011, 2444], [2025, 2416, 2174, 2444], [376, 2467, 516, 2504], [528, 2471, 559, 2495], [571, 2467, 601, 2501], [615, 2467, 760, 2504], [772, 2467, 845, 2496], [858, 2476, 875, 2495], [887, 2467, 1026, 2504], [1040, 2467, 1066, 2495], [1076, 2467, 1201, 2495], [1218, 2467, 1341, 2504], [1355, 2467, 1404, 2495], [1416, 2471, 1487, 2495], [1498, 2467, 1602, 2495], [1614, 2467, 1639, 2495], [1652, 2467, 1794, 2495], [1806, 2467, 1847, 2504], [1858, 2467, 2027, 2504], [2039, 2471, 2112, 2495], [2124, 2467, 2174, 2495], [376, 2518, 566, 2552], [584, 2518, 642, 2546], [657, 2518, 707, 2546], [721, 2518, 808, 2555], [822, 2522, 949, 2555], [973, 2519, 1024, 2546], [1040, 2527, 1097, 2546], [1110, 2518, 1149, 2546], [1163, 2518, 1309, 2555], [1325, 2527, 1357, 2546], [1373, 2527, 1411, 2546], [1424, 2518, 1585, 2546], [1599, 2518, 1635, 2546], [1647, 2518, 1697, 2546], [1711, 2518, 2035, 2555], [2048, 2518, 2173, 2546], [375, 2569, 443, 2604], [460, 2569, 547, 2604], [561, 2569, 661, 2597], [673, 2569, 722, 2597], [734, 2573, 931, 2606], [945, 2569, 981, 2597], [990, 2569, 1039, 2597], [1051, 2569, 1185, 2606], [1197, 2569, 1258, 2597], [1270, 2569, 1358, 2597], [1370, 2569, 1419, 2597], [1430, 2569, 1574, 2606], [1586, 2569, 1732, 2597], [1744, 2569, 1904, 2597], [1917, 2578, 1965, 2597], [1976, 2569, 2129, 2603], [2143, 2569, 2174, 2597], [375, 2621, 397, 2648], [399, 2620, 511, 2648], [523, 2620, 572, 2648], [584, 2620, 719, 2657], [732, 2620, 789, 2648], [801, 2620, 850, 2648], [862, 2620, 992, 2648], [1005, 2629, 1053, 2648], [1066, 2620, 1197, 2649], [1209, 2624, 1239, 2648], [1251, 2624, 1393, 2657], [1394, 2620, 1480, 2648], [1493, 2620, 1663, 2657], [438, 2670, 478, 2698], [490, 2679, 543, 2698], [544, 2670, 713, 2698], [725, 2671, 776, 2698], [789, 2670, 896, 2698], [909, 2670, 959, 2698], [971, 2670, 1066, 2699], [1078, 2670, 1224, 2699], [605, 2763, 679, 2791], [695, 2760, 725, 2801], [744, 2760, 746, 2801], [766, 2760, 812, 2801], [829, 2776, 857, 2785], [874, 2773, 943, 2797], [961, 2763, 1018, 2791], [1035, 2760, 1183, 2801], [1201, 2769, 1227, 2793], [1244, 2760, 1271, 2801], [1318, 2772, 1351, 2791], [1397, 2760, 1443, 2801], [1460, 2776, 1488, 2785], [1503, 2773, 1542, 2797], [1559, 2763, 1616, 2791], [1633, 2760, 1781, 2801], [1800, 2769, 1826, 2792], [1843, 2760, 1941, 2801], [2092, 2763, 2173, 2798], [1255, 2935, 1294, 2964], [374, 242, 476, 271], [489, 252, 503, 270], [519, 244, 545, 276], [563, 242, 580, 271], [593, 242, 619, 270], [633, 242, 722, 270], [736, 242, 838, 270], [856, 242, 929, 270], [942, 242, 1128, 279], [1131, 246, 1188, 270], [1201, 242, 1251, 270], [1264, 246, 1310, 270], [1321, 242, 1357, 270], [1367, 242, 1517, 270], [1531, 246, 1560, 270], [1572, 251, 1589, 270], [1600, 242, 1714, 276], [1729, 242, 1787, 270], [1800, 242, 1848, 270], [1860, 242, 1962, 271], [1974, 242, 2024, 270], [2037, 242, 2175, 279], [375, 292, 472, 329], [486, 292, 581, 320], [593, 292, 641, 320], [653, 292, 778, 320], [790, 292, 902, 329], [916, 292, 976, 320], [987, 292, 1021, 326], [1035, 292, 1082, 320], [1093, 292, 1174, 320], [1187, 292, 1330, 321], [1343, 296, 1373, 320], [1385, 292, 1496, 320], [1507, 292, 1639, 329], [1652, 292, 1699, 320], [1712, 292, 1857, 329], [1870, 292, 2004, 320], [2016, 301, 2062, 321], [2074, 292, 2174, 321], [375, 343, 450, 372], [462, 347, 492, 371], [506, 347, 568, 380], [581, 347, 633, 371], [645, 343, 680, 371], [688, 343, 805, 371], [810, 344, 855, 371], [867, 343, 891, 371], [905, 343, 971, 371], [984, 343, 1063, 371], [1074, 343, 1135, 371], [1147, 343, 1229, 371], [1242, 343, 1386, 372], [1401, 352, 1448, 371], [1461, 343, 1496, 371], [1505, 352, 1544, 371], [1556, 352, 1609, 371], [1622, 343, 1654, 371], [1655, 343, 1737, 371], [1751, 343, 1895, 377], [1910, 352, 1943, 371], [1956, 352, 2001, 371], [2014, 343, 2112, 371], [2125, 343, 2173, 371], [376, 394, 627, 431], [641, 398, 684, 422], [696, 387, 718, 422], [732, 404, 770, 422], [787, 391, 958, 432], [962, 394, 1029, 422], [1038, 394, 1151, 422], [1164, 398, 1215, 422], [1227, 394, 1257, 422], [1269, 394, 1298, 428], [1311, 394, 1410, 422], [1423, 403, 1469, 422], [1482, 394, 1530, 422], [1542, 394, 1686, 423], [1699, 403, 1726, 422], [1729, 403, 1805, 422], [1818, 394, 1975, 422], [1987, 394, 2018, 422], [2028, 394, 2179, 431], [376, 446, 464, 473], [476, 445, 525, 473], [537, 445, 667, 473], [680, 445, 721, 473], [736, 458, 764, 467], [780, 439, 908, 483], [923, 454, 970, 473], [982, 449, 1093, 473], [1105, 445, 1154, 473], [1167, 445, 1299, 474], [1308, 446, 1441, 474], [1454, 445, 1511, 483], [1522, 445, 1541, 473], [1544, 445, 1721, 482], [1732, 454, 1810, 473], [1825, 445, 1882, 473], [1894, 445, 2032, 473], [2045, 445, 2174, 473], [375, 496, 416, 533], [428, 488, 456, 530], [471, 496, 529, 524], [541, 496, 572, 524], [586, 505, 603, 524], [615, 496, 729, 524], [741, 505, 808, 533], [821, 496, 871, 524], [884, 496, 993, 524], [1005, 496, 1147, 533], [1163, 493, 1328, 534], [1344, 496, 1443, 533], [1455, 496, 1540, 524], [1552, 505, 1599, 525], [1610, 496, 1746, 533], [1758, 505, 1775, 524], [1786, 496, 2000, 525], [2013, 496, 2180, 524], [375, 546, 485, 583], [497, 546, 527, 574], [539, 546, 589, 574], [600, 546, 680, 574], [994, 606, 1039, 635], [1054, 604, 1091, 625], [1107, 594, 1199, 635], [1213, 614, 1239, 615], [1253, 597, 1345, 642], [1351, 589, 1553, 635], [2092, 597, 2173, 632], [374, 673, 476, 702], [490, 683, 513, 701], [527, 673, 552, 701], [567, 682, 584, 701], [597, 673, 737, 710], [753, 673, 811, 701], [826, 673, 855, 701], [868, 673, 995, 701], [1008, 673, 1180, 710], [1192, 677, 1265, 701], [1279, 673, 1329, 701], [1342, 673, 1532, 707], [1547, 673, 1649, 702], [1662, 673, 1710, 701], [1722, 673, 1988, 701], [2001, 673, 2129, 701], [2143, 677, 2173, 701], [377, 724, 486, 761], [498, 724, 729, 753], [740, 724, 919, 761], [936, 725, 1016, 752], [1028, 724, 1091, 752], [1102, 724, 1175, 761], [1187, 724, 1237, 752], [1249, 724, 1398, 752], [1411, 724, 1442, 752], [1454, 724, 1504, 752], [1517, 728, 1562, 752], [1573, 716, 1595, 752], [1606, 733, 1655, 752], [1666, 724, 1799, 761], [1811, 724, 1842, 752], [1854, 724, 1913, 752], [1926, 724, 2038, 758], [2052, 724, 2173, 761], [376, 775, 425, 803], [436, 779, 497, 803], [507, 775, 696, 812], [712, 775, 813, 803], [826, 775, 899, 803], [911, 775, 1021, 812], [1032, 775, 1166, 812], [1178, 775, 1355, 812], [1368, 775, 1417, 803], [1429, 775, 1546, 803], [1558, 775, 1594, 803], [1603, 775, 1653, 803], [1663, 775, 1795, 803], [1807, 775, 1938, 803], [1951, 775, 2017, 812], [2030, 775, 2131, 803], [2143, 775, 2174, 803], [376, 825, 425, 853], [437, 825, 559, 862], [572, 834, 642, 853], [654, 834, 711, 853], [724, 829, 849, 853], [860, 829, 890, 853], [903, 825, 1131, 862], [1132, 825, 1236, 853], [1249, 825, 1279, 853], [1292, 825, 1341, 853], [1355, 819, 1457, 863], [1473, 825, 1567, 859], [1581, 834, 1628, 854], [1640, 825, 1704, 854], [1717, 834, 1768, 853], [1780, 834, 1849, 854], [1861, 825, 1931, 854], [1944, 825, 2112, 862], [2124, 825, 2174, 853], [377, 880, 519, 904], [531, 876, 567, 904], [576, 876, 625, 904], [636, 876, 774, 913], [787, 876, 890, 904], [903, 885, 937, 904], [951, 880, 981, 904], [993, 876, 1126, 913], [1139, 876, 1178, 904], [1190, 876, 1239, 904], [1252, 880, 1331, 913], [1345, 876, 1422, 905], [1424, 876, 1623, 913], [438, 927, 521, 961], [535, 927, 662, 956], [674, 927, 734, 955], [746, 927, 794, 955], [806, 927, 882, 962], [895, 927, 944, 955], [956, 927, 1065, 955], [1067, 927, 1122, 955], [724, 1135, 970, 1172], [1138, 1144, 1184, 1172], [1248, 1139, 1368, 1172], [1543, 1150, 1564, 1174], [1581, 1133, 1720, 1172], [1728, 1133, 1824, 1172], [1364, 1241, 1368, 1245], [1422, 1222, 1468, 1250], [1327, 1272, 1374, 1300], [1437, 1272, 1454, 1300], [438, 1363, 526, 1396], [540, 1362, 668, 1390], [680, 1362, 742, 1390], [753, 1362, 890, 1391], [891, 1362, 966, 1390], [979, 1362, 1075, 1390], [1088, 1366, 1133, 1390], [1144, 1362, 1172, 1396], [1186, 1362, 1236, 1390], [1248, 1362, 1486, 1399], [1497, 1362, 1629, 1390], [1641, 1362, 1772, 1390], [1786, 1362, 1842, 1399], [1854, 1362, 1986, 1390], [1999, 1362, 2173, 1399], [376, 1413, 566, 1450], [585, 1413, 658, 1441], [672, 1413, 867, 1441], [880, 1413, 905, 1441], [919, 1413, 1033, 1441], [1045, 1413, 1178, 1441], [1191, 1413, 1263, 1441], [1275, 1422, 1323, 1442], [1336, 1422, 1393, 1441], [1406, 1413, 1531, 1450], [1544, 1417, 1688, 1450], [1701, 1413, 1751, 1441], [1763, 1413, 1910, 1450], [1924, 1413, 2073, 1441], [2087, 1412, 2128, 1450], [2144, 1426, 2172, 1435], [377, 1455, 459, 1508], [468, 1460, 633, 1501], [647, 1463, 747, 1491], [759, 1472, 815, 1491], [826, 1463, 865, 1491], [876, 1463, 956, 1491], [966, 1463, 1007, 1500], [1020, 1463, 1140, 1500], [1152, 1463, 1201, 1491], [1213, 1463, 1307, 1491], [1319, 1467, 1432, 1500], [1445, 1462, 1546, 1501], [1560, 1476, 1588, 1485], [1607, 1458, 1778, 1501], [1791, 1472, 1822, 1491], [1835, 1463, 1966, 1491], [431, 1560, 454, 1588], [479, 1560, 630, 1597], [642, 1560, 691, 1588], [703, 1560, 857, 1597], [870, 1560, 1112, 1597], [1125, 1560, 1182, 1598], [1197, 1573, 1225, 1582], [1241, 1553, 1298, 1589], [1303, 1560, 1344, 1589], [427, 1628, 454, 1656], [480, 1628, 572, 1657], [584, 1628, 633, 1656], [645, 1628, 738, 1656], [751, 1632, 864, 1665], [876, 1621, 934, 1657], [938, 1637, 959, 1656], [975, 1641, 1003, 1650], [1022, 1625, 1178, 1666], [1191, 1632, 1221, 1656], [1233, 1628, 1335, 1656], [1347, 1637, 1378, 1656], [428, 1695, 454, 1724], [480, 1695, 572, 1724], [584, 1695, 633, 1723], [645, 1695, 738, 1723], [751, 1699, 864, 1732], [876, 1694, 954, 1733], [969, 1708, 997, 1717], [1011, 1704, 1032, 1723], [1047, 1699, 1077, 1723], [1089, 1695, 1192, 1723], [1205, 1694, 1254, 1733], [438, 1788, 576, 1815], [589, 1787, 638, 1815], [649, 1787, 782, 1815], [794, 1787, 906, 1815], [907, 1787, 964, 1815], [978, 1787, 1042, 1815], [1055, 1787, 1244, 1824], [1258, 1787, 1296, 1815], [1309, 1787, 1465, 1824], [1477, 1787, 1724, 1824], [1736, 1796, 1792, 1815], [1804, 1787, 1843, 1815], [1855, 1787, 2019, 1824], [2032, 1787, 2062, 1815], [2076, 1787, 2175, 1815], [377, 1839, 444, 1866], [457, 1842, 486, 1866], [499, 1838, 580, 1875], [593, 1847, 609, 1866], [619, 1838, 793, 1875], [804, 1838, 910, 1866], [923, 1838, 966, 1872], [979, 1838, 1078, 1866], [1090, 1838, 1121, 1866], [1133, 1842, 1197, 1866], [1210, 1838, 1313, 1866], [1326, 1842, 1355, 1866], [1369, 1838, 1452, 1867], [1465, 1838, 1513, 1866], [1527, 1838, 1695, 1875], [1697, 1838, 1812, 1866], [1824, 1842, 1936, 1875], [1938, 1838, 2027, 1866], [2040, 1838, 2071, 1866], [2083, 1838, 2176, 1866], [376, 1889, 455, 1917], [473, 1889, 644, 1926], [656, 1889, 789, 1917], [800, 1889, 932, 1917], [945, 1893, 976, 1917], [987, 1889, 1120, 1926], [1133, 1889, 1172, 1917], [1184, 1889, 1268, 1917], [1280, 1889, 1360, 1917], [1374, 1898, 1422, 1917], [1435, 1889, 1581, 1918], [1593, 1889, 1623, 1917], [1635, 1889, 1684, 1917], [1696, 1889, 1824, 1918], [1827, 1889, 2000, 1917], [2017, 1889, 2068, 1923], [438, 1940, 502, 1968], [514, 1944, 585, 1968], [597, 1940, 710, 1968], [722, 1940, 881, 1977], [882, 1940, 930, 1968], [943, 1940, 1079, 1968], [1092, 1940, 1240, 1968], [1251, 1940, 1287, 1968], [1297, 1940, 1347, 1968], [1360, 1940, 1491, 1977], [1504, 1950, 1537, 1968], [1554, 1940, 1618, 1968], [1630, 1940, 1760, 1977], [1772, 1941, 1823, 1968], [1837, 1940, 2000, 1977], [2011, 1940, 2173, 1968], [379, 1991, 440, 2025], [454, 1991, 668, 2019], [681, 1991, 924, 2028], [936, 1991, 1027, 2028], [1039, 1991, 1209, 2028], [1222, 2000, 1280, 2019], [1296, 1992, 1453, 2025], [1467, 1991, 1516, 2019], [1527, 2000, 1582, 2019], [1593, 1991, 1734, 2028], [1745, 1991, 1803, 2019], [1817, 1991, 1923, 2019], [1934, 1991, 1960, 2019], [1973, 1991, 2175, 2028], [376, 2042, 544, 2079], [562, 2042, 602, 2071], [615, 2051, 643, 2070], [645, 2046, 766, 2070], [778, 2046, 808, 2070], [822, 2051, 838, 2070], [848, 2042, 1060, 2079], [1074, 2046, 1201, 2079], [1212, 2042, 1300, 2079], [1313, 2042, 1464, 2079], [1477, 2042, 1686, 2079], [1701, 2042, 1774, 2076], [1788, 2042, 1887, 2070], [1899, 2042, 1996, 2070], [2011, 2042, 2175, 2079], [374, 2092, 454, 2121], [476, 2092, 549, 2120], [564, 2096, 695, 2129], [709, 2092, 735, 2120], [750, 2101, 782, 2120], [797, 2092, 930, 2121], [952, 2096, 1023, 2120], [1036, 2092, 1110, 2121], [1125, 2101, 1162, 2120], [1176, 2092, 1273, 2120], [1288, 2092, 1419, 2129], [1434, 2102, 1474, 2128], [1494, 2105, 1522, 2114], [1543, 2092, 1568, 2120], [1590, 2092, 1619, 2120], [1630, 2092, 1680, 2120], [1694, 2096, 1813, 2120], [1827, 2092, 1958, 2129], [1973, 2102, 2014, 2127], [2032, 2092, 2107, 2120], [2121, 2096, 2175, 2120], [375, 2143, 502, 2180], [515, 2143, 670, 2171], [681, 2143, 825, 2171], [837, 2143, 868, 2171], [881, 2142, 912, 2179], [925, 2143, 1010, 2171], [1023, 2152, 1040, 2171], [1051, 2143, 1206, 2180], [1219, 2143, 1323, 2171], [1334, 2143, 1424, 2180], [1438, 2140, 1529, 2181], [1544, 2140, 1610, 2181], [1623, 2160, 1649, 2161], [1664, 2140, 1758, 2181], [1773, 2143, 1831, 2171], [1845, 2141, 1885, 2177], [1889, 2140, 2000, 2182], [2016, 2143, 2110, 2177], [2124, 2143, 2174, 2171], [377, 2194, 508, 2231], [521, 2204, 604, 2231], [620, 2194, 646, 2222], [660, 2198, 705, 2222], [717, 2198, 747, 2222], [760, 2194, 810, 2222], [823, 2194, 911, 2222], [924, 2194, 987, 2222], [998, 2194, 1172, 2222], [1185, 2194, 1244, 2222], [1257, 2194, 1412, 2231], [1425, 2194, 1538, 2222], [1556, 2195, 1590, 2222], [1601, 2194, 1651, 2222], [1664, 2198, 1753, 2222], [1765, 2194, 1827, 2222], [1840, 2198, 1869, 2222], [1881, 2203, 1968, 2222], [1979, 2194, 2066, 2231], [2078, 2194, 2114, 2222], [2124, 2194, 2174, 2222], [375, 2245, 543, 2282], [558, 2245, 608, 2273], [622, 2254, 689, 2274], [706, 2255, 788, 2282], [807, 2245, 832, 2273], [848, 2245, 944, 2282], [958, 2245, 1030, 2273], [1044, 2254, 1078, 2273], [1092, 2249, 1144, 2273], [1160, 2245, 1276, 2273], [1290, 2249, 1321, 2273], [1337, 2255, 1390, 2279], [1407, 2245, 1444, 2273], [1460, 2245, 1548, 2273], [1563, 2245, 1589, 2273], [1603, 2245, 1724, 2273], [1747, 2246, 1782, 2273], [1796, 2245, 1854, 2273], [1870, 2245, 2001, 2279], [2018, 2245, 2173, 2282], [377, 2296, 611, 2333], [614, 2296, 674, 2324], [684, 2295, 706, 2332], [719, 2305, 766, 2324], [778, 2296, 898, 2324], [909, 2296, 982, 2324], [996, 2305, 1012, 2324], [1023, 2296, 1102, 2333], [1115, 2296, 1233, 2333], [1246, 2306, 1269, 2324], [1282, 2296, 1306, 2324], [1319, 2296, 1420, 2324], [1437, 2296, 1498, 2324], [1511, 2296, 1643, 2333], [1647, 2296, 1708, 2324], [1717, 2305, 1733, 2324], [1746, 2296, 1872, 2333], [1884, 2296, 1908, 2324], [1921, 2296, 2075, 2324], [2086, 2296, 2173, 2333], [376, 2346, 425, 2374], [437, 2346, 595, 2383], [607, 2346, 802, 2383], [814, 2346, 965, 2374], [977, 2346, 1100, 2374], [1111, 2346, 1175, 2374], [866, 2436, 946, 2477], [962, 2456, 988, 2457], [1002, 2436, 1072, 2477], [1086, 2436, 1119, 2477], [1133, 2436, 1267, 2477], [1286, 2441, 1312, 2473], [1329, 2449, 1369, 2467], [1384, 2449, 1446, 2473], [1463, 2436, 1591, 2477], [1608, 2436, 1681, 2477], [374, 2531, 474, 2559], [487, 2540, 503, 2559], [515, 2531, 665, 2559], [678, 2541, 699, 2559], [715, 2544, 743, 2553], [759, 2531, 829, 2560], [842, 2531, 940, 2559], [953, 2531, 1023, 2559], [1034, 2531, 1173, 2568], [438, 2583, 518, 2610], [533, 2582, 595, 2610], [609, 2582, 659, 2610], [673, 2582, 811, 2619], [826, 2579, 939, 2620], [957, 2582, 1055, 2619], [1068, 2582, 1107, 2610], [1121, 2582, 1305, 2619], [1320, 2582, 1351, 2610], [1365, 2582, 1415, 2610], [1430, 2582, 1588, 2610], [1603, 2582, 1700, 2610], [1715, 2582, 1742, 2610], [1753, 2591, 1779, 2610], [1793, 2582, 1848, 2610], [1863, 2586, 2065, 2619], [2082, 2586, 2110, 2610], [2124, 2582, 2174, 2610], [375, 2633, 533, 2670], [550, 2633, 608, 2661], [624, 2632, 647, 2661], [660, 2633, 762, 2670], [778, 2633, 899, 2661], [914, 2633, 972, 2661], [987, 2633, 1146, 2670], [1162, 2633, 1307, 2668], [1322, 2633, 1402, 2667], [1420, 2633, 1479, 2661], [1494, 2637, 1525, 2661], [1540, 2633, 1590, 2661], [1606, 2633, 1793, 2670], [1806, 2633, 1977, 2670], [1991, 2642, 2032, 2661], [2046, 2633, 2109, 2661], [2124, 2633, 2179, 2661], [375, 2692, 542, 2720], [544, 2683, 669, 2712], [681, 2683, 720, 2711], [732, 2683, 876, 2711], [887, 2683, 928, 2720], [942, 2683, 1082, 2720], [1095, 2683, 1215, 2711], [1227, 2683, 1277, 2711], [1290, 2683, 1419, 2711], [1431, 2683, 1560, 2720], [1577, 2684, 1618, 2711], [1632, 2683, 1755, 2711], [1768, 2683, 1827, 2711], [1840, 2692, 1981, 2717], [1995, 2692, 2042, 2712], [2055, 2683, 2175, 2720], [376, 2734, 425, 2762], [437, 2734, 645, 2771], [658, 2734, 694, 2762], [703, 2734, 753, 2762], [765, 2734, 902, 2771], [914, 2734, 944, 2763], [949, 2731, 1040, 2772], [1054, 2734, 1178, 2771], [1191, 2743, 1246, 2762], [1257, 2734, 1307, 2762], [1319, 2734, 1429, 2762], [1441, 2734, 1504, 2762], [1514, 2734, 1607, 2762], [1619, 2738, 1649, 2762], [1662, 2734, 1809, 2762], [1822, 2738, 2023, 2771], [2034, 2734, 2173, 2771], [376, 2785, 494, 2813], [506, 2785, 555, 2813], [567, 2785, 676, 2813], [678, 2789, 759, 2813], [1255, 2935, 1293, 2964], [373, 239, 557, 277], [571, 239, 607, 268], [622, 243, 744, 276], [756, 243, 886, 268], [897, 242, 940, 268], [950, 243, 1089, 276], [1099, 243, 1216, 268], [416, 296, 575, 327], [592, 306, 632, 331], [649, 309, 677, 318], [695, 296, 720, 330], [734, 295, 753, 324], [769, 309, 797, 318], [813, 296, 839, 330], [854, 295, 885, 330], [899, 296, 1050, 324], [1061, 300, 1227, 333], [1239, 306, 1260, 324], [417, 346, 510, 376], [523, 344, 602, 385], [618, 364, 644, 365], [659, 344, 808, 385], [823, 344, 917, 385], [935, 353, 961, 376], [978, 357, 999, 375], [1015, 362, 1019, 367], [1033, 357, 1074, 381], [1092, 344, 1240, 385], [1258, 362, 1262, 367], [1276, 344, 1312, 385], [1327, 347, 1369, 376], [1243, 389, 1331, 427], [1340, 393, 1403, 422], [1094, 432, 1467, 465], [1475, 432, 1567, 461], [479, 475, 506, 504], [516, 486, 598, 514], [618, 482, 644, 506], [660, 486, 701, 511], [717, 484, 754, 505], [767, 486, 850, 514], [868, 485, 896, 502], [912, 486, 965, 511], [978, 476, 1055, 505], [1068, 486, 1151, 514], [1169, 489, 1197, 498], [1216, 469, 1291, 519], [480, 526, 656, 558], [417, 578, 480, 607], [492, 577, 585, 607], [417, 631, 529, 658], [542, 639, 583, 663], [479, 411, 639, 439], [651, 411, 803, 448], [816, 411, 927, 439], [945, 421, 1028, 449], [1046, 424, 1074, 433], [373, 742, 557, 780], [571, 742, 609, 771], [621, 746, 667, 771], [678, 746, 822, 779], [832, 745, 876, 771], [885, 746, 1144, 779], [417, 806, 471, 833], [485, 805, 532, 834], [547, 818, 575, 827], [590, 802, 759, 843], [774, 805, 859, 834], [872, 798, 973, 833], [979, 804, 1070, 834], [1089, 818, 1117, 827], [1133, 805, 1204, 841], [417, 855, 444, 884], [457, 850, 611, 894], [621, 853, 668, 894], [687, 858, 713, 890], [732, 856, 756, 890], [770, 858, 882, 885], [894, 855, 948, 884], [417, 900, 459, 935], [476, 920, 504, 929], [520, 904, 740, 945], [417, 956, 510, 986], [522, 954, 637, 995], [655, 963, 681, 987], [696, 967, 710, 985], [723, 957, 765, 986], [479, 1008, 609, 1045], [622, 1012, 666, 1036], [678, 1008, 713, 1036], [724, 1008, 819, 1037], [830, 1008, 1007, 1036], [1021, 1008, 1050, 1042], [1064, 1008, 1104, 1036], [1116, 1001, 1138, 1036], [1150, 1021, 1178, 1030], [1195, 1005, 1368, 1046], [1381, 1008, 1409, 1036], [479, 1059, 639, 1088], [650, 1059, 781, 1087], [793, 1059, 923, 1087], [936, 1059, 1000, 1097], [480, 1110, 572, 1139], [585, 1109, 686, 1148], [700, 1123, 728, 1132], [747, 1105, 926, 1148], [479, 1161, 630, 1198], [643, 1161, 772, 1198], [785, 1171, 808, 1189], [820, 1161, 909, 1198], [920, 1161, 1134, 1198], [1146, 1168, 1167, 1189], [1180, 1161, 1390, 1198], [1403, 1161, 1484, 1198], [1503, 1161, 1560, 1196], [479, 1211, 598, 1248], [610, 1203, 689, 1256], [707, 1224, 735, 1233], [751, 1206, 839, 1255], [852, 1228, 878, 1229], [893, 1208, 980, 1249], [479, 1262, 651, 1293], [417, 1313, 480, 1342], [492, 1312, 585, 1342], [417, 1366, 529, 1393], [541, 1359, 590, 1392], [438, 1507, 499, 1535], [511, 1507, 608, 1536], [621, 1507, 747, 1544], [760, 1507, 902, 1535], [912, 1507, 1074, 1544], [1086, 1507, 1110, 1535], [1124, 1507, 1227, 1536], [1238, 1507, 1268, 1535], [1280, 1507, 1449, 1544], [1463, 1507, 1506, 1535], [1523, 1507, 1584, 1535], [1596, 1507, 1728, 1535], [1739, 1507, 1891, 1544], [1903, 1507, 1933, 1535], [1944, 1507, 2000, 1535], [2012, 1507, 2173, 1544], [376, 1558, 400, 1586], [413, 1558, 461, 1586], [473, 1558, 640, 1587], [652, 1558, 687, 1586], [697, 1557, 728, 1594], [741, 1558, 848, 1592], [862, 1558, 1059, 1587], [1072, 1567, 1127, 1586], [1138, 1558, 1175, 1586], [1188, 1558, 1248, 1586], [1249, 1558, 1308, 1586], [1320, 1558, 1412, 1586], [1423, 1558, 1501, 1586], [1517, 1558, 1729, 1592], [1743, 1558, 1773, 1586], [1784, 1558, 1912, 1595], [1926, 1567, 1942, 1586], [1953, 1558, 2011, 1587], [2024, 1558, 2173, 1586], [376, 1618, 459, 1637], [471, 1609, 541, 1637], [554, 1609, 661, 1637], [673, 1613, 704, 1637], [716, 1609, 818, 1637], [831, 1618, 847, 1637], [859, 1618, 919, 1646], [921, 1609, 1090, 1646], [438, 1660, 569, 1694], [584, 1669, 600, 1688], [611, 1660, 668, 1688], [680, 1661, 731, 1688], [743, 1660, 880, 1688], [893, 1669, 924, 1688], [937, 1660, 1095, 1688], [1108, 1660, 1203, 1689], [1214, 1669, 1284, 1688], [1298, 1664, 1326, 1688], [1339, 1657, 1423, 1698], [1438, 1664, 1512, 1688], [1528, 1660, 1618, 1694], [1631, 1660, 1672, 1697], [1684, 1660, 1850, 1697], [1863, 1660, 1912, 1688], [1925, 1664, 2068, 1688], [2080, 1660, 2115, 1688], [2125, 1660, 2174, 1688], [375, 1710, 519, 1747], [533, 1719, 579, 1738], [591, 1719, 698, 1747], [701, 1714, 759, 1738], [771, 1710, 879, 1738], [892, 1710, 940, 1738], [953, 1704, 1040, 1748], [1046, 1707, 1123, 1748], [1126, 1714, 1184, 1747], [1186, 1710, 1346, 1738], [1358, 1710, 1393, 1738], [1403, 1719, 1419, 1738], [1431, 1710, 1551, 1747], [1562, 1711, 1613, 1738], [1626, 1710, 1784, 1747], [1795, 1714, 1825, 1738], [1839, 1719, 1855, 1738], [1866, 1710, 2037, 1738], [2049, 1710, 2178, 1738], [374, 1761, 438, 1789], [450, 1761, 630, 1798], [632, 1761, 699, 1789], [709, 1761, 759, 1789], [771, 1761, 918, 1798], [931, 1761, 1056, 1789], [1070, 1761, 1095, 1789], [1110, 1761, 1217, 1790], [1231, 1770, 1263, 1789], [1276, 1761, 1452, 1798], [1468, 1761, 1513, 1789], [1532, 1762, 1613, 1789], [1626, 1761, 1689, 1789], [1701, 1761, 1732, 1789], [1745, 1761, 1795, 1789], [1809, 1761, 1924, 1798], [1937, 1770, 2008, 1789], [2021, 1761, 2111, 1790], [2124, 1761, 2174, 1789], [374, 1812, 499, 1849], [515, 1812, 562, 1841], [579, 1822, 617, 1840], [631, 1809, 787, 1850], [804, 1821, 851, 1840], [865, 1821, 898, 1840], [911, 1812, 990, 1849], [1003, 1812, 1063, 1840], [1075, 1812, 1123, 1840], [1135, 1812, 1365, 1840], [1377, 1812, 1525, 1849], [1536, 1812, 1689, 1840], [1703, 1812, 1774, 1840], [1786, 1812, 1834, 1840], [1847, 1812, 2035, 1840], [2047, 1821, 2114, 1846], [2127, 1821, 2173, 1840], [376, 1872, 431, 1891], [442, 1863, 543, 1891], [554, 1862, 595, 1891], [612, 1863, 734, 1900], [746, 1863, 795, 1891], [807, 1863, 924, 1900], [937, 1856, 1039, 1891], [1045, 1862, 1136, 1892], [1155, 1876, 1183, 1885], [1199, 1863, 1261, 1899], [1275, 1863, 1386, 1898], [1398, 1872, 1453, 1891], [1465, 1863, 1528, 1891], [1539, 1863, 1576, 1891], [1589, 1863, 1666, 1891], [1679, 1867, 1706, 1891], [1719, 1860, 1790, 1901], [1793, 1860, 1903, 1901], [1920, 1863, 1981, 1891], [1994, 1863, 2104, 1900], [2117, 1872, 2173, 1900], [376, 1914, 411, 1942], [420, 1914, 470, 1942], [482, 1918, 598, 1942], [610, 1914, 742, 1942], [754, 1914, 778, 1942], [791, 1914, 866, 1942], [879, 1923, 910, 1942], [924, 1923, 940, 1942], [953, 1914, 1093, 1951], [1105, 1914, 1253, 1948], [1267, 1914, 1367, 1942], [1379, 1923, 1425, 1942], [1436, 1923, 1491, 1942], [1504, 1923, 1520, 1942], [1532, 1914, 1683, 1942], [1694, 1914, 1730, 1942], [1740, 1924, 1754, 1942], [1769, 1927, 1797, 1936], [1814, 1908, 1893, 1943], [1908, 1914, 1938, 1942], [1950, 1914, 2088, 1951], [376, 2043, 410, 2083], [473, 2042, 654, 2095], [671, 2042, 844, 2095], [862, 2043, 956, 2084], [973, 2042, 1144, 2094], [1163, 2043, 1256, 2084], [1274, 2042, 1606, 2095], [1625, 2043, 1790, 2084], [374, 2149, 438, 2177], [455, 2149, 572, 2186], [588, 2149, 664, 2177], [681, 2149, 713, 2177], [729, 2149, 779, 2177], [795, 2149, 999, 2186], [1017, 2158, 1066, 2177], [1082, 2149, 1242, 2186], [1259, 2149, 1291, 2177], [1306, 2149, 1388, 2178], [1403, 2149, 1536, 2183], [1556, 2149, 1647, 2186], [1664, 2149, 1738, 2178], [1754, 2149, 1830, 2177], [1846, 2149, 2098, 2186], [2115, 2149, 2173, 2177], [376, 2200, 785, 2229], [797, 2200, 930, 2229], [944, 2200, 991, 2228], [1002, 2200, 1076, 2228], [1089, 2200, 1247, 2237], [1258, 2200, 1360, 2228], [1377, 2200, 1433, 2235], [1444, 2200, 1573, 2228], [1586, 2200, 1699, 2237], [1713, 2209, 1790, 2228], [1803, 2200, 1961, 2237], [1972, 2200, 2013, 2237], [2025, 2200, 2173, 2237], [375, 2251, 500, 2279], [511, 2255, 570, 2279], [581, 2251, 668, 2288], [681, 2251, 799, 2288], [812, 2251, 892, 2279], [904, 2244, 993, 2279], [1007, 2252, 1122, 2288], [1136, 2251, 1229, 2288], [1242, 2251, 1299, 2279], [1307, 2251, 1453, 2288], [0, 0, 2550, 3300], [1465, 2244, 1539, 2279], [1551, 2251, 1683, 2288], [1697, 2251, 1840, 2280], [1853, 2251, 1910, 2279], [1922, 2251, 2088, 2288], [2099, 2251, 2174, 2279], [376, 2301, 406, 2329], [416, 2301, 495, 2338], [498, 2301, 697, 2338], [701, 2301, 856, 2338], [868, 2301, 923, 2329], [935, 2302, 1030, 2329], [0, 0, 2550, 3300], [1041, 2294, 1115, 2329], [1127, 2301, 1189, 2329], [1200, 2301, 1332, 2338], [1344, 2301, 1494, 2329], [1510, 2301, 1611, 2338], [1622, 2301, 1696, 2329], [1707, 2301, 1738, 2329], [1748, 2301, 1796, 2329], [1807, 2301, 1961, 2329], [1972, 2301, 2178, 2338], [376, 2352, 400, 2380], [415, 2361, 431, 2380], [441, 2352, 514, 2389], [525, 2352, 691, 2380], [704, 2352, 784, 2381], [800, 2360, 820, 2380], [837, 2352, 915, 2381], [929, 2352, 1117, 2389], [1129, 2352, 1165, 2380], [1174, 2352, 1300, 2381], [1313, 2352, 1393, 2381], [1405, 2346, 1528, 2380], [1546, 2352, 1609, 2380], [1620, 2356, 1679, 2380], [1691, 2352, 1727, 2380], [1736, 2352, 1785, 2380], [1797, 2352, 1911, 2389], [1925, 2361, 2004, 2380], [2016, 2352, 2175, 2389], [376, 2403, 494, 2431], [505, 2403, 545, 2440], [558, 2403, 607, 2431], [620, 2403, 747, 2431], [437, 2455, 493, 2482], [504, 2454, 552, 2482], [565, 2454, 653, 2483], [666, 2454, 873, 2491], [887, 2454, 935, 2482], [947, 2454, 1107, 2488], [1120, 2454, 1303, 2491], [1314, 2454, 1371, 2482], [1383, 2454, 1497, 2490], [1510, 2463, 1673, 2491], [1686, 2463, 1763, 2482], [1775, 2454, 1858, 2488], [1872, 2454, 1970, 2482], [1983, 2463, 2030, 2482], [2042, 2454, 2174, 2491], [377, 2505, 524, 2533], [537, 2509, 565, 2533], [579, 2505, 653, 2539], [669, 2505, 713, 2533], [727, 2514, 764, 2533], [776, 2505, 925, 2542], [939, 2505, 1051, 2533], [1063, 2505, 1144, 2533], [1155, 2505, 1205, 2533], [1217, 2505, 1282, 2533], [1293, 2505, 1384, 2533], [1398, 2514, 1446, 2533], [1458, 2505, 1617, 2542], [1630, 2505, 1660, 2533], [1673, 2505, 1754, 2534], [1765, 2505, 1897, 2539], [1911, 2505, 2002, 2542], [2014, 2505, 2087, 2534], [2099, 2505, 2175, 2533], [376, 2556, 623, 2593], [635, 2556, 779, 2585], [420, 2687, 1329, 2722], [421, 2728, 561, 2757], [571, 2734, 635, 2757], [644, 2737, 734, 2763], [746, 2735, 1618, 2763], [421, 2769, 432, 2786], [435, 2776, 534, 2798], [548, 2775, 676, 2798], [685, 2775, 787, 2798], [801, 2778, 892, 2804], [903, 2776, 1493, 2804], [421, 2810, 561, 2838], [571, 2815, 635, 2838], [644, 2816, 854, 2844], [866, 2816, 1675, 2844], [414, 588, 565, 783], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1223, 1785, 1293, 1809], [1099, 2037, 1190, 2055], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1650, 1591, 1762, 1604], [1776, 1593, 1791, 1603], [1809, 1591, 1824, 1603], [1840, 1591, 1880, 1603], [1891, 1591, 1932, 1603], [1728, 2112, 1788, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1095, 2205, 1188, 2235], [1197, 2209, 1257, 2228], [1269, 2207, 1371, 2228], [1390, 2206, 1446, 2228], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [376, 2856, 484, 2893], [497, 2856, 546, 2885], [579, 2857, 648, 2884], [660, 2856, 778, 2893], [790, 2856, 866, 2884], [879, 2856, 911, 2884], [923, 2856, 973, 2884], [986, 2856, 1190, 2893], [1203, 2856, 1341, 2893], [1353, 2856, 1427, 2885], [1439, 2856, 1516, 2884], [1529, 2856, 1608, 2884], [1621, 2856, 1653, 2884], [1664, 2856, 1772, 2893], [1791, 2857, 1910, 2893], [1924, 2856, 2084, 2893], [2096, 2856, 2174, 2884], [375, 2906, 452, 2934], [465, 2906, 566, 2934], [578, 2906, 647, 2934], [649, 2910, 710, 2934], [723, 2906, 756, 2934], [768, 2906, 798, 2934], [809, 2915, 895, 2943], [1682, 959, 1840, 1017], [1685, 1019, 1880, 1069], [1741, 1140, 1771, 1188], [1739, 1200, 1770, 1255], [1683, 1268, 1694, 1315], [1682, 1203, 1695, 1252], [1685, 1140, 1701, 1188], [1777, 1268, 1795, 1338], [1787, 1202, 1797, 1252], [1785, 1138, 1805, 1189], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [1307, 1680, 1425, 1771], [1427, 1870, 1502, 1911], [1021, 1884, 1082, 1905], [1098, 2035, 1191, 2064], [1452, 1953, 1517, 2043], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1602, 1590, 1626, 1604], [1650, 1590, 1770, 1605], [1776, 1591, 1796, 1604], [1801, 1591, 1824, 1604], [1836, 1590, 1881, 1604], [1890, 1590, 1942, 1604], [1617, 1669, 1626, 1673], [1789, 1670, 1802, 1674], [1854, 1669, 1859, 1673], [1876, 1670, 1884, 1673], [1914, 1666, 1928, 1674], [1995, 1666, 1999, 1674], [1620, 1714, 1633, 1718], [1839, 1714, 1842, 1718], [1906, 1711, 1925, 1718], [1621, 1738, 1625, 1739], [1758, 1737, 1760, 1739], [1848, 1732, 1865, 1742], [1621, 1758, 1637, 1765], [1756, 1759, 1775, 1763], [1854, 1755, 1857, 1762], [1616, 1780, 1625, 1787], [1768, 1783, 1769, 1786], [2068, 1781, 2076, 1785], [1978, 1857, 2002, 1865], [1606, 1902, 1614, 1910], [1740, 1901, 1745, 1910], [1818, 1903, 1832, 1910], [1981, 1906, 1994, 1909], [1602, 1929, 1607, 1934], [1821, 1924, 1823, 1932], [1738, 2005, 1739, 2008], [1856, 2005, 1869, 2015], [1902, 2002, 1935, 2012], [1966, 2004, 2020, 2011], [1602, 2056, 1634, 2067], [1655, 2058, 1712, 2070], [1722, 2056, 1766, 2067], [1775, 2055, 1854, 2069], [730, 2695, 750, 2712], [720, 2712, 744, 2721], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1049, 2197, 1189, 2240], [1195, 2205, 1260, 2230], [1267, 2205, 1375, 2240], [1388, 2204, 1446, 2239], [1476, 2205, 1485, 2207], [1006, 2239, 1049, 2254], [1034, 2666, 1050, 2685], [1284, 2683, 1286, 2685], [1453, 2668, 1460, 2675], [1485, 2686, 1490, 2688], [1052, 2685, 1077, 2705], [1114, 2685, 1193, 2708], [1261, 2686, 1281, 2702], [1363, 2691, 1377, 2706], [1466, 2690, 1488, 2704], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [754, 2856, 860, 2893], [872, 2856, 921, 2885], [951, 2856, 1049, 2893], [1061, 2856, 1195, 2885], [1209, 2856, 1245, 2884], [1254, 2856, 1368, 2893], [1381, 2856, 1456, 2884], [1468, 2856, 1499, 2884], [1511, 2856, 1560, 2884], [1572, 2856, 1780, 2893], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1604, 1591, 1626, 1604], [1651, 1591, 1769, 1604], [1776, 1591, 1795, 1604], [1801, 1591, 1825, 1603], [1837, 1591, 1880, 1603], [1890, 1591, 1942, 1604], [1839, 2003, 1892, 2013], [1903, 2002, 1944, 2011], [1953, 2004, 2042, 2011], [2074, 2005, 2075, 2009], [1603, 2057, 1634, 2067], [1655, 2058, 1712, 2070], [1722, 2056, 1767, 2066], [1776, 2055, 1854, 2068], [1728, 2112, 1788, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1095, 2205, 1188, 2235], [1197, 2210, 1257, 2228], [1269, 2209, 1372, 2228], [1390, 2208, 1444, 2227], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [1060, 2856, 1229, 2893], [1240, 2856, 1346, 2884], [1360, 2856, 1407, 2884], [1419, 2856, 1468, 2884], [1480, 2860, 1536, 2884], [1548, 2856, 1671, 2893], [2048, 805, 2079, 840], [2052, 2758, 2063, 2793], [2027, 805, 2044, 834], [2023, 1884, 2052, 1909], [2024, 2007, 2040, 2010], [2032, 2758, 2049, 2787], [2007, 805, 2024, 834], [2006, 1455, 2017, 1490], [2012, 1669, 2021, 1671], [2010, 2007, 2016, 2010], [2013, 2758, 2026, 2786], [1986, 1455, 2003, 1484], [1986, 1669, 1998, 1695], [1966, 2005, 2003, 2011], [1989, 2108, 2000, 2143], [1991, 2758, 2009, 2787], [1969, 813, 1989, 833], [1965, 1455, 1982, 1483], [1972, 1669, 1975, 1670], [1969, 2108, 1986, 2137], [1972, 2758, 1985, 2786], [1946, 1455, 1959, 1483], [1951, 1906, 1960, 1908], [1949, 2108, 1966, 2137], [1935, 805, 1952, 834], [1927, 2005, 1940, 2009], [1928, 2108, 1945, 2137], [1932, 2766, 1952, 2786], [1914, 805, 1931, 834], [1907, 1463, 1927, 1483], [1910, 1596, 1940, 1603], [1911, 1672, 1918, 1673], [1917, 1927, 1927, 1931], [1906, 2007, 1920, 2010], [1880, 805, 1911, 840], [1892, 1596, 1909, 1603], [1883, 1927, 1893, 1931], [1903, 1984, 1910, 1986], [1890, 2116, 1910, 2136], [1880, 2758, 1915, 2787], [1873, 1455, 1890, 1484], [1865, 1591, 1880, 1600], [1876, 1670, 1891, 1673], [1857, 2758, 1875, 2787], [1848, 805, 1867, 833], [1852, 1455, 1869, 1483], [1859, 1669, 1862, 1670], [1846, 1783, 1855, 1785], [1843, 1987, 1847, 1988], [1836, 2108, 1873, 2137], [1838, 2758, 1851, 2786], [1835, 822, 1845, 825], [1833, 1455, 1846, 1483], [1838, 1593, 1846, 1599], [1821, 1648, 1840, 1694], [1821, 1783, 1827, 1784], [1827, 2008, 1830, 2009], [1809, 2061, 1852, 2066], [1822, 2758, 1833, 2793], [1806, 806, 1832, 833], [1818, 1455, 1829, 1490], [1807, 1594, 1826, 1604], [1816, 1670, 1818, 1673], [1792, 2061, 1832, 2143], [1776, 805, 1804, 840], [1766, 1464, 1805, 1492], [1770, 1555, 1794, 1603], [1772, 1647, 1781, 1650], [1777, 1671, 1802, 1673], [1777, 2056, 1788, 2066], [1778, 2112, 1788, 2136], [1778, 2767, 1809, 2786], [1744, 814, 1775, 833], [1750, 1464, 1766, 1483], [1746, 1672, 1754, 1673], [1740, 2061, 1776, 2136], [1746, 2762, 1777, 2786], [1723, 814, 1742, 833], [1727, 1455, 1747, 1483], [1728, 1558, 1732, 1559], [1715, 1596, 1766, 1603], [1716, 1669, 1738, 1694], [1726, 2061, 1745, 2136], [1725, 2767, 1744, 2786], [1682, 805, 1721, 833], [1670, 1464, 1725, 1604], [1692, 1714, 1708, 1761], [1685, 2758, 1724, 2786], [1664, 814, 1680, 833], [1658, 1591, 1669, 1603], [1664, 1669, 1684, 1673], [1656, 2058, 1701, 2067], [1665, 2767, 1685, 2795], [1648, 814, 1662, 833], [1630, 1555, 1635, 1559], [1478, 805, 1489, 840], [1478, 1456, 1489, 1491], [1473, 1773, 1485, 1777], [1487, 1886, 1505, 1903], [1479, 1991, 1516, 2041], [1458, 805, 1475, 834], [1458, 1456, 1475, 1485], [1452, 1612, 1489, 1720], [1458, 1771, 1475, 1788], [1457, 1887, 1489, 1902], [1453, 2759, 1464, 2794], [1450, 1428, 1452, 1431], [1448, 1592, 1473, 1612], [1452, 1786, 1461, 1787], [1450, 1892, 1452, 1896], [1438, 805, 1456, 834], [1438, 1456, 1455, 1485], [1423, 1694, 1456, 1736], [1434, 1768, 1453, 1783], [1441, 1887, 1449, 1899], [1437, 2107, 1448, 2142], [1433, 2759, 1450, 2788], [1419, 805, 1432, 833], [1417, 1456, 1434, 1485], [1420, 1937, 1426, 1942], [1418, 2006, 1427, 2055], [1417, 2060, 1428, 2077], [1396, 2107, 1434, 2136], [1389, 2206, 1445, 2228], [1412, 2759, 1429, 2788], [1379, 813, 1399, 833], [1379, 1464, 1399, 1484], [1359, 1986, 1426, 2010], [1375, 2107, 1392, 2135], [1373, 2759, 1408, 2788], [1345, 805, 1362, 834], [1345, 1456, 1362, 1485], [1357, 1822, 1368, 1939], [1358, 1948, 1366, 1983], [1325, 805, 1343, 834], [1325, 1456, 1342, 1485], [1338, 2115, 1358, 2135], [1319, 2208, 1373, 2228], [1333, 2767, 1353, 2787], [1290, 805, 1319, 840], [1290, 1456, 1321, 1491], [1277, 1599, 1312, 1606], [1304, 1620, 1313, 1626], [1303, 1633, 1314, 1714], [1296, 1784, 1304, 1789], [1297, 1836, 1304, 1839], [1283, 2107, 1321, 2136], [1268, 2207, 1318, 2228], [1278, 2759, 1316, 2788], [1245, 805, 1273, 833], [1245, 1456, 1277, 1484], [1260, 1592, 1270, 1599], [1246, 1739, 1266, 1765], [1220, 1784, 1305, 1810], [1248, 1869, 1266, 1955], [1253, 1962, 1261, 1980], [1252, 1990, 1262, 2035], [1248, 2107, 1279, 2142], [1239, 2759, 1275, 2788], [1216, 806, 1242, 833], [1206, 1427, 1259, 1582], [1198, 2013, 1260, 2082], [1205, 2116, 1236, 2135], [0, 0, 2550, 3300], [1211, 2211, 1258, 2229], [1223, 2759, 1234, 2794], [1154, 805, 1214, 840], [0, 0, 2550, 3300], [1178, 910, 1185, 914], [1162, 962, 1192, 1097], [1154, 1456, 1214, 1615], [1152, 1811, 1216, 1819], [1202, 2022, 1211, 2065], [1172, 2116, 1203, 2135], [1197, 2208, 1210, 2227], [1176, 2768, 1211, 2787], [1158, 916, 1178, 1021], [1159, 1027, 1179, 1097], [1159, 1237, 1169, 1247], [1153, 1428, 1159, 1432], [1152, 1824, 1160, 1884], [1156, 2768, 1175, 2787], [1113, 805, 1152, 833], [0, 0, 2550, 3300], [1111, 899, 1160, 1004], [1101, 1029, 1169, 1161], [1107, 1173, 1155, 1275], [1113, 1456, 1152, 1484], [1151, 1831, 1175, 1859], [1095, 1890, 1160, 1901], [1097, 2039, 1192, 2064], [1122, 2107, 1171, 2144], [1112, 2211, 1189, 2235], [1124, 2763, 1155, 2787], [1092, 814, 1111, 833], [1082, 909, 1124, 934], [1082, 936, 1124, 1035], [1088, 1029, 1131, 1106], [1077, 1108, 1122, 1188], [1046, 1201, 1124, 1301], [1092, 1465, 1111, 1484], [1093, 1910, 1103, 1926], [1102, 2035, 1106, 2037], [1101, 2107, 1120, 2135], [1094, 2205, 1111, 2227], [1085, 2768, 1122, 2787], [1074, 814, 1090, 833], [1066, 901, 1070, 943], [1060, 956, 1100, 979], [1065, 991, 1087, 1043], [1082, 1178, 1100, 1198], [1036, 1207, 1090, 1271], [1053, 1267, 1082, 1295], [1074, 1465, 1090, 1484], [1066, 1885, 1085, 1902], [1078, 2029, 1085, 2072], [1059, 814, 1073, 833], [1058, 894, 1062, 898], [1022, 909, 1055, 922], [1010, 923, 1094, 1048], [1045, 1054, 1078, 1142], [1044, 1153, 1071, 1196], [1006, 1190, 1081, 1264], [1059, 1465, 1073, 1484], [1023, 1884, 1083, 1904], [1040, 940, 1043, 942], [1024, 1044, 1046, 1088], [1006, 922, 1017, 973], [1005, 995, 1031, 1024], [1005, 1026, 1023, 1062], [1004, 1065, 1035, 1140], [1006, 1138, 1040, 1166], [1004, 1158, 1050, 1213], [888, 805, 899, 840], [888, 1456, 899, 1491], [848, 805, 886, 834], [848, 1456, 886, 1485], [829, 805, 842, 833], [827, 1456, 844, 1485], [831, 1567, 865, 1618], [831, 1623, 842, 1636], [807, 2108, 859, 2143], [810, 2759, 840, 2794], [789, 813, 809, 833], [789, 1464, 809, 1484], [766, 1568, 816, 1634], [786, 2108, 803, 2137], [789, 2759, 806, 2788], [735, 805, 773, 834], [735, 1456, 773, 1485], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [729, 1568, 755, 1635], [749, 2116, 769, 2136], [731, 2759, 786, 2787], [676, 2759, 693, 2788], [655, 805, 687, 834], [642, 894, 718, 1038], [579, 993, 769, 1225], [646, 1423, 685, 1636], [660, 2108, 690, 2143], [654, 2759, 673, 2787], [627, 806, 653, 833], [598, 905, 658, 945], [585, 924, 639, 1047], [630, 1030, 636, 1037], [629, 1065, 652, 1079], [627, 1457, 653, 1484], [630, 2117, 647, 2136], [641, 2759, 652, 2794], [597, 805, 625, 840], [550, 962, 626, 1051], [597, 1456, 625, 1491], [599, 1567, 636, 1637], [580, 2108, 627, 2136], [568, 2759, 628, 2787], [523, 805, 595, 833], [523, 1456, 595, 1484], [552, 1567, 588, 1635], [529, 2768, 566, 2787], [502, 814, 521, 833], [502, 1465, 541, 1636], [510, 2112, 535, 2136], [485, 814, 501, 833], [485, 1465, 501, 1484], [469, 814, 483, 833], [469, 1465, 483, 1484], [820, 2856, 917, 2893], [930, 2856, 987, 2884], [1000, 2856, 1180, 2885], [1192, 2856, 1327, 2885], [1340, 2856, 1376, 2884], [1385, 2856, 1500, 2893], [1512, 2856, 1587, 2884], [1599, 2856, 1630, 2884], [1642, 2856, 1691, 2884], [1703, 2856, 1912, 2893], [622, 2856, 729, 2893], [741, 2856, 789, 2885], [469, 805, 687, 840], [700, 805, 773, 840], [789, 813, 809, 833], [829, 805, 899, 840], [1059, 805, 1273, 840], [1290, 805, 1362, 840], [1379, 813, 1399, 833], [1419, 805, 1489, 840], [1684, 727, 1718, 748], [1777, 733, 1867, 769], [1873, 733, 1970, 761], [2004, 733, 2058, 764], [1648, 805, 1845, 840], [1848, 805, 1952, 840], [1969, 813, 1989, 833], [2007, 805, 2079, 840], [469, 1456, 685, 1491], [700, 1456, 773, 1491], [789, 1464, 809, 1484], [827, 1456, 899, 1491], [1059, 1456, 1277, 1491], [1290, 1456, 1362, 1491], [1379, 1464, 1399, 1484], [1417, 1456, 1489, 1491], [1684, 979, 1843, 1091], [0, 0, 2550, 3300], [1962, 981, 2059, 1087], [1684, 1136, 1838, 1190], [1973, 1113, 2048, 1178], [1995, 1188, 2032, 1231], [1681, 1201, 1832, 1318], [1940, 1165, 2053, 1305], [1713, 1455, 1805, 1492], [1818, 1455, 1890, 1490], [1907, 1463, 1927, 1483], [1946, 1455, 2017, 1490], [507, 1567, 636, 1638], [645, 1567, 866, 1637], [510, 2108, 647, 2136], [660, 2108, 732, 2143], [749, 2116, 769, 2136], [786, 2108, 859, 2143], [1203, 1549, 1265, 1611], [1011, 1656, 1129, 1698], [1307, 1669, 1473, 1697], [1131, 1698, 1160, 1726], [1242, 1699, 1313, 1751], [1428, 1701, 1450, 1730], [1474, 1701, 1498, 1734], [1190, 1751, 1325, 1783], [1436, 1770, 1484, 1787], [1211, 1784, 1304, 1810], [1152, 1807, 1367, 1853], [1097, 1872, 1158, 1885], [1250, 1868, 1266, 1892], [1357, 1854, 1503, 1891], [1002, 1890, 1158, 1915], [1359, 1881, 1365, 1909], [1424, 1882, 1504, 1903], [1002, 1924, 1101, 1936], [1255, 1910, 1545, 1946], [0, 0, 2550, 3300], [1078, 2070, 1217, 2085], [1101, 2107, 1236, 2144], [1248, 2107, 1321, 2142], [1338, 2115, 1358, 2135], [1375, 2107, 1448, 2142], [1728, 2112, 1788, 2136], [1801, 2108, 1873, 2143], [1890, 2116, 1910, 2136], [1928, 2108, 2000, 2143], [818, 2373, 824, 2380], [702, 2379, 795, 2389], [820, 2382, 824, 2384], [669, 2381, 674, 2389], [718, 2389, 723, 2391], [774, 2388, 815, 2396], [779, 2710, 803, 2733], [837, 2706, 889, 2733], [529, 2759, 628, 2787], [641, 2759, 714, 2794], [731, 2767, 751, 2787], [767, 2759, 840, 2794], [1085, 2763, 1211, 2787], [1223, 2759, 1316, 2794], [1333, 2767, 1353, 2787], [1373, 2759, 1464, 2794], [1665, 2758, 1809, 2795], [1822, 2758, 1915, 2793], [1932, 2766, 1952, 2786], [1972, 2758, 2063, 2793], [826, 2856, 933, 2893], [944, 2856, 993, 2885], [1023, 2856, 1266, 2885], [1277, 2856, 1383, 2884], [1397, 2856, 1444, 2884], [1455, 2856, 1505, 2884], [1516, 2860, 1573, 2884], [1585, 2856, 1708, 2893], [1693, 1312, 1704, 1317], [1774, 1309, 1781, 1321], [1689, 1322, 1709, 1339], [1798, 1318, 1847, 1340], [1687, 1333, 1709, 1350], [1680, 1349, 1697, 1381], [1723, 1321, 1778, 1384], [1798, 1343, 1832, 1365], [696, 2732, 803, 2769], [816, 2732, 863, 2761], [893, 2732, 921, 2760], [935, 2732, 1080, 2760], [1092, 2732, 1128, 2760], [1137, 2732, 1247, 2760], [1260, 2732, 1339, 2760], [1351, 2732, 1400, 2760], [1412, 2732, 1564, 2761], [1577, 2732, 1668, 2761], [1681, 2741, 1838, 2769], [763, 2732, 870, 2769], [883, 2732, 930, 2761], [960, 2732, 1058, 2769], [1070, 2732, 1180, 2760], [1193, 2732, 1273, 2760], [1284, 2732, 1334, 2760], [1345, 2732, 1497, 2761], [1510, 2732, 1601, 2761], [1614, 2741, 1771, 2769], [734, 2732, 841, 2769], [854, 2732, 901, 2761], [932, 2732, 1087, 2760], [1099, 2732, 1208, 2760], [1222, 2732, 1301, 2760], [1313, 2732, 1362, 2760], [1374, 2732, 1526, 2761], [1539, 2732, 1630, 2761], [1643, 2741, 1800, 2769]], "scoresstructures": {"pages": {"version": "1.0", "structure_value": [[0, 458], [458, 996], [996, 1653], [1653, 2191], [2191, 2561], [2561, 3170], [3170, 3639], [3639, 4088], [4088, 4573], [4573, 5221], [5221, 5565], [5565, 6218], [6218, 6600], [6600, 7149], [7149, 7522], [7522, 8019], [8019, 8384], [8384, 8865], [8865, 9224], [9224, 9663], [9663, 10021], [10021, 10432], [10432, 10844], [10844, 11393], [11393, 11733], [11733, 12373], [12373, 12627], [12627, 12955], [12955, 13331], [13331, 13638], [13638, 13981], [13981, 14417], [14417, 14874], [14874, 15398], [15398, 15876], [15876, 16468], [16468, 16997], [16997, 17385], [17385, 17788], [17788, 18119], [18119, 18718], [18718, 19269], [19269, 19614], [19614, 19983], [19983, 20480], [20480, 20927], [20927, 21475], [21475, 21995], [21995, 22506], [22506, 23055], [23055, 23486], [23486, 23984], [23984, 24454], [24454, 24830], [24830, 25308], [25308, 25823], [25823, 26421], [26421, 27027], [27027, 27457], [27457, 27525], [27525, 27626], [27626, 27678], [27678, 27977], [27977, 28076], [28076, 28095], [28095, 28104], [28104, 28113]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 5], [5, 7], [7, 10], [10, 20], [20, 27], [27, 30], [30, 36], [36, 43], [43, 44], [44, 59], [59, 72], [72, 89], [89, 105], [105, 118], [118, 131], [131, 145], [145, 162], [162, 178], [178, 193], [193, 212], [212, 214], [214, 229], [229, 242], [242, 257], [257, 271], [271, 281], [281, 286], [286, 309], [309, 317], [317, 333], [333, 348], [348, 352], [352, 364], [364, 365], [365, 378], [378, 387], [387, 390], [390, 392], [392, 401], [401, 404], [404, 411], [411, 412], [412, 433], [433, 442], [442, 458], [458, 486], [486, 495], [495, 501], [501, 520], [520, 524], [524, 539], [539, 552], [552, 568], [568, 587], [587, 601], [601, 613], [613, 614], [614, 630], [630, 645], [645, 652], [652, 663], [663, 677], [677, 692], [692, 709], [709, 722], [722, 733], [733, 751], [751, 754], [754, 756], [756, 772], [772, 779], [779, 797], [797, 817], [817, 821], [821, 836], [836, 849], [849, 865], [865, 875], [875, 887], [887, 905], [905, 921], [921, 922], [922, 935], [935, 951], [951, 967], [967, 983], [983, 996], [996, 1011], [1011, 1022], [1022, 1038], [1038, 1048], [1048, 1065], [1065, 1085], [1085, 1102], [1102, 1103], [1103, 1106], [1106, 1125], [1125, 1134], [1134, 1150], [1150, 1165], [1165, 1170], [1170, 1185], [1185, 1200], [1200, 1216], [1216, 1231], [1231, 1249], [1249, 1264], [1264, 1280], [1280, 1298], [1298, 1315], [1315, 1336], [1336, 1356], [1356, 1369], [1369, 1384], [1384, 1401], [1401, 1420], [1420, 1435], [1435, 1450], [1450, 1459], [1459, 1477], [1477, 1495], [1495, 1511], [1511, 1525], [1525, 1530], [1530, 1548], [1548, 1566], [1566, 1585], [1585, 1601], [1601, 1613], [1613, 1630], [1630, 1643], [1643, 1645], [1645, 1653], [1653, 1669], [1669, 1688], [1688, 1702], [1702, 1703], [1703, 1709], [1709, 1728], [1728, 1745], [1745, 1762], [1762, 1767], [1767, 1780], [1780, 1783], [1783, 1799], [1799, 1817], [1817, 1831], [1831, 1847], [1847, 1863], [1863, 1872], [1872, 1888], [1888, 1908], [1908, 1914], [1914, 1929], [1929, 1944], [1944, 1959], [1959, 1974], [1974, 1987], [1987, 2005], [2005, 2016], [2016, 2032], [2032, 2049], [2049, 2067], [2067, 2084], [2084, 2096], [2096, 2102], [2102, 2119], [2119, 2124], [2124, 2138], [2138, 2148], [2148, 2156], [2156, 2176], [2176, 2177], [2177, 2191], [2191, 2208], [2208, 2211], [2211, 2227], [2227, 2251], [2251, 2262], [2262, 2265], [2265, 2287], [2287, 2289], [2289, 2293], [2293, 2294], [2294, 2296], [2296, 2308], [2308, 2323], [2323, 2339], [2339, 2340], [2340, 2360], [2360, 2373], [2373, 2390], [2390, 2408], [2408, 2428], [2428, 2437], [2437, 2456], [2456, 2457], [2457, 2465], [2465, 2483], [2483, 2504], [2504, 2505], [2505, 2507], [2507, 2530], [2530, 2553], [2553, 2561], [2561, 2568], [2568, 2578], [2578, 2593], [2593, 2597], [2597, 2615], [2615, 2622], [2622, 2630], [2630, 2633], [2633, 2651], [2651, 2658], [2658, 2666], [2666, 2669], [2669, 2681], [2681, 2696], [2696, 2702], [2702, 2716], [2716, 2730], [2730, 2733], [2733, 2739], [2739, 2753], [2753, 2767], [2767, 2770], [2770, 2773], [2773, 2775], [2775, 2778], [2778, 2792], [2792, 2813], [2813, 2832], [2832, 2852], [2852, 2871], [2871, 2893], [2893, 2910], [2910, 2928], [2928, 2948], [2948, 2963], [2963, 2977], [2977, 2993], [2993, 3010], [3010, 3029], [3029, 3035], [3035, 3052], [3052, 3068], [3068, 3086], [3086, 3103], [3103, 3108], [3108, 3125], [3125, 3138], [3138, 3156], [3156, 3170], [3170, 3173], [3173, 3192], [3192, 3213], [3213, 3229], [3229, 3248], [3248, 3272], [3272, 3292], [3292, 3312], [3312, 3332], [3332, 3349], [3349, 3370], [3370, 3392], [3392, 3398], [3398, 3412], [3412, 3429], [3429, 3448], [3448, 3468], [3468, 3486], [3486, 3508], [3508, 3527], [3527, 3543], [3543, 3561], [3561, 3565], [3565, 3584], [3584, 3602], [3602, 3616], [3616, 3630], [3630, 3639], [3639, 3645], [3645, 3660], [3660, 3679], [3679, 3681], [3681, 3697], [3697, 3713], [3713, 3728], [3728, 3737], [3737, 3756], [3756, 3774], [3774, 3783], [3783, 3791], [3791, 3806], [3806, 3821], [3821, 3830], [3830, 3838], [3838, 3851], [3851, 3864], [3864, 3880], [3880, 3890], [3890, 3893], [3893, 3911], [3911, 3934], [3934, 3948], [3948, 3962], [3962, 3979], [3979, 3995], [3995, 4012], [4012, 4030], [4030, 4049], [4049, 4069], [4069, 4088], [4088, 4096], [4096, 4103], [4103, 4111], [4111, 4125], [4125, 4138], [4138, 4139], [4139, 4151], [4151, 4157], [4157, 4171], [4171, 4180], [4180, 4181], [4181, 4183], [4183, 4186], [4186, 4200], [4200, 4212], [4212, 4218], [4218, 4231], [4231, 4246], [4246, 4248], [4248, 4251], [4251, 4262], [4262, 4266], [4266, 4274], [4274, 4284], [4284, 4295], [4295, 4298], [4298, 4309], [4309, 4314], [4314, 4322], [4322, 4332], [4332, 4343], [4343, 4346], [4346, 4356], [4356, 4359], [4359, 4367], [4367, 4387], [4387, 4395], [4395, 4413], [4413, 4427], [4427, 4444], [4444, 4461], [4461, 4480], [4480, 4497], [4497, 4516], [4516, 4520], [4520, 4532], [4532, 4548], [4548, 4566], [4566, 4573], [4573, 4576], [4576, 4581], [4581, 4584], [4584, 4596], [4596, 4598], [4598, 4609], [4609, 4630], [4630, 4637], [4637, 4642], [4642, 4665], [4665, 4684], [4684, 4703], [4703, 4727], [4727, 4736], [4736, 4757], [4757, 4776], [4776, 4793], [4793, 4815], [4815, 4834], [4834, 4841], [4841, 4842], [4842, 4844], [4844, 4863], [4863, 4886], [4886, 4910], [4910, 4912], [4912, 4918], [4918, 4919], [4919, 4920], [4920, 4921], [4921, 4938], [4938, 4957], [4957, 4983], [4983, 4989], [4989, 5011], [5011, 5034], [5034, 5052], [5052, 5068], [5068, 5083], [5083, 5102], [5102, 5114], [5114, 5133], [5133, 5149], [5149, 5167], [5167, 5180], [5180, 5189], [5189, 5205], [5205, 5220], [5220, 5221], [5221, 5227], [5227, 5230], [5230, 5250], [5250, 5271], [5271, 5288], [5288, 5311], [5311, 5335], [5335, 5356], [5356, 5376], [5376, 5399], [5399, 5405], [5405, 5421], [5421, 5438], [5438, 5452], [5452, 5468], [5468, 5488], [5488, 5505], [5505, 5522], [5522, 5540], [5540, 5556], [5556, 5564], [5564, 5565], [5565, 5583], [5583, 5601], [5601, 5616], [5616, 5637], [5637, 5656], [5656, 5674], [5674, 5675], [5675, 5690], [5690, 5708], [5708, 5730], [5730, 5751], [5751, 5770], [5770, 5779], [5779, 5785], [5785, 5800], [5800, 5804], [5804, 5808], [5808, 5816], [5816, 5834], [5834, 5841], [5841, 5847], [5847, 5864], [5864, 5877], [5877, 5881], [5881, 5892], [5892, 5894], [5894, 5913], [5913, 5914], [5914, 5923], [5923, 5925], [5925, 5936], [5936, 5940], [5940, 5955], [5955, 5957], [5957, 5976], [5976, 5993], [5993, 6012], [6012, 6030], [6030, 6047], [6047, 6064], [6064, 6082], [6082, 6105], [6105, 6116], [6116, 6129], [6129, 6144], [6144, 6161], [6161, 6177], [6177, 6187], [6187, 6206], [6206, 6217], [6217, 6218], [6218, 6220], [6220, 6241], [6241, 6264], [6264, 6288], [6288, 6300], [6300, 6310], [6310, 6321], [6321, 6349], [6349, 6350], [6350, 6379], [6379, 6380], [6380, 6385], [6385, 6403], [6403, 6425], [6425, 6444], [6444, 6449], [6449, 6464], [6464, 6475], [6475, 6492], [6492, 6498], [6498, 6513], [6513, 6532], [6532, 6548], [6548, 6563], [6563, 6564], [6564, 6571], [6571, 6576], [6576, 6577], [6577, 6580], [6580, 6599], [6599, 6600], [6600, 6624], [6624, 6643], [6643, 6665], [6665, 6686], [6686, 6688], [6688, 6706], [6706, 6720], [6720, 6735], [6735, 6743], [6743, 6762], [6762, 6785], [6785, 6787], [6787, 6789], [6789, 6800], [6800, 6802], [6802, 6806], [6806, 6811], [6811, 6829], [6829, 6852], [6852, 6858], [6858, 6859], [6859, 6864], [6864, 6869], [6869, 6875], [6875, 6877], [6877, 6878], [6878, 6885], [6885, 6887], [6887, 6892], [6892, 6895], [6895, 6899], [6899, 6902], [6902, 6920], [6920, 6934], [6934, 6950], [6950, 6969], [6969, 6985], [6985, 7004], [7004, 7022], [7022, 7039], [7039, 7044], [7044, 7049], [7049, 7068], [7068, 7087], [7087, 7102], [7102, 7127], [7127, 7148], [7148, 7149], [7149, 7155], [7155, 7162], [7162, 7173], [7173, 7182], [7182, 7190], [7190, 7198], [7198, 7204], [7204, 7205], [7205, 7207], [7207, 7209], [7209, 7216], [7216, 7223], [7223, 7227], [7227, 7235], [7235, 7244], [7244, 7245], [7245, 7247], [7247, 7249], [7249, 7267], [7267, 7286], [7286, 7304], [7304, 7318], [7318, 7323], [7323, 7336], [7336, 7348], [7348, 7365], [7365, 7382], [7382, 7403], [7403, 7419], [7419, 7437], [7437, 7441], [7441, 7447], [7447, 7456], [7456, 7464], [7464, 7479], [7479, 7488], [7488, 7507], [7507, 7516], [7516, 7521], [7521, 7522], [7522, 7542], [7542, 7558], [7558, 7564], [7564, 7585], [7585, 7596], [7596, 7610], [7610, 7619], [7619, 7627], [7627, 7637], [7637, 7651], [7651, 7659], [7659, 7679], [7679, 7688], [7688, 7697], [7697, 7718], [7718, 7730], [7730, 7738], [7738, 7752], [7752, 7756], [7756, 7761], [7761, 7770], [7770, 7771], [7771, 7789], [7789, 7800], [7800, 7807], [7807, 7811], [7811, 7820], [7820, 7822], [7822, 7835], [7835, 7853], [7853, 7866], [7866, 7872], [7872, 7889], [7889, 7904], [7904, 7919], [7919, 7936], [7936, 7953], [7953, 7957], [7957, 7963], [7963, 7983], [7983, 8004], [8004, 8018], [8018, 8019], [8019, 8023], [8023, 8029], [8029, 8035], [8035, 8041], [8041, 8053], [8053, 8066], [8066, 8074], [8074, 8075], [8075, 8077], [8077, 8079], [8079, 8096], [8096, 8124], [8124, 8132], [8132, 8134], [8134, 8142], [8142, 8150], [8150, 8156], [8156, 8173], [8173, 8181], [8181, 8196], [8196, 8197], [8197, 8218], [8218, 8229], [8229, 8234], [8234, 8252], [8252, 8254], [8254, 8262], [8262, 8281], [8281, 8299], [8299, 8317], [8317, 8318], [8318, 8324], [8324, 8341], [8341, 8348], [8348, 8351], [8351, 8371], [8371, 8378], [8378, 8383], [8383, 8384], [8384, 8396], [8396, 8413], [8413, 8432], [8432, 8445], [8445, 8460], [8460, 8479], [8479, 8495], [8495, 8498], [8498, 8504], [8504, 8520], [8520, 8537], [8537, 8539], [8539, 8556], [8556, 8577], [8577, 8597], [8597, 8606], [8606, 8621], [8621, 8642], [8642, 8656], [8656, 8672], [8672, 8688], [8688, 8698], [8698, 8702], [8702, 8712], [8712, 8719], [8719, 8738], [8738, 8755], [8755, 8760], [8760, 8777], [8777, 8792], [8792, 8810], [8810, 8812], [8812, 8832], [8832, 8847], [8847, 8864], [8864, 8865], [8865, 8869], [8869, 8877], [8877, 8889], [8889, 8895], [8895, 8904], [8904, 8913], [8913, 8922], [8922, 8931], [8931, 8932], [8932, 8934], [8934, 8936], [8936, 8940], [8940, 8948], [8948, 8957], [8957, 8963], [8963, 8972], [8972, 8976], [8976, 8978], [8978, 8983], [8983, 8992], [8992, 8999], [8999, 9001], [9001, 9002], [9002, 9004], [9004, 9006], [9006, 9023], [9023, 9033], [9033, 9039], [9039, 9053], [9053, 9059], [9059, 9066], [9066, 9089], [9089, 9095], [9095, 9103], [9103, 9121], [9121, 9138], [9138, 9155], [9155, 9162], [9162, 9179], [9179, 9199], [9199, 9214], [9214, 9222], [9222, 9223], [9223, 9224], [9224, 9232], [9232, 9238], [9238, 9254], [9254, 9275], [9275, 9295], [9295, 9301], [9301, 9321], [9321, 9336], [9336, 9343], [9343, 9359], [9359, 9376], [9376, 9395], [9395, 9396], [9396, 9402], [9402, 9414], [9414, 9437], [9437, 9459], [9459, 9472], [9472, 9489], [9489, 9504], [9504, 9512], [9512, 9526], [9526, 9532], [9532, 9536], [9536, 9543], [9543, 9544], [9544, 9549], [9549, 9555], [9555, 9560], [9560, 9566], [9566, 9574], [9574, 9575], [9575, 9577], [9577, 9582], [9582, 9588], [9588, 9594], [9594, 9610], [9610, 9627], [9627, 9644], [9644, 9662], [9662, 9663], [9663, 9671], [9671, 9679], [9679, 9687], [9687, 9693], [9693, 9695], [9695, 9698], [9698, 9707], [9707, 9713], [9713, 9716], [9716, 9724], [9724, 9726], [9726, 9727], [9727, 9729], [9729, 9731], [9731, 9744], [9744, 9745], [9745, 9747], [9747, 9756], [9756, 9758], [9758, 9760], [9760, 9763], [9763, 9765], [9765, 9780], [9780, 9788], [9788, 9805], [9805, 9814], [9814, 9830], [9830, 9846], [9846, 9847], [9847, 9848], [9848, 9856], [9856, 9857], [9857, 9858], [9858, 9862], [9862, 9874], [9874, 9875], [9875, 9892], [9892, 9903], [9903, 9907], [9907, 9924], [9924, 9941], [9941, 9957], [9957, 9965], [9965, 9982], [9982, 9990], [9990, 9992], [9992, 10006], [10006, 10015], [10015, 10019], [10019, 10020], [10020, 10021], [10021, 10039], [10039, 10046], [10046, 10053], [10053, 10059], [10059, 10066], [10066, 10086], [10086, 10103], [10103, 10121], [10121, 10139], [10139, 10158], [10158, 10179], [10179, 10196], [10196, 10201], [10201, 10203], [10203, 10209], [10209, 10211], [10211, 10227], [10227, 10235], [10235, 10236], [10236, 10238], [10238, 10257], [10257, 10277], [10277, 10291], [10291, 10303], [10303, 10304], [10304, 10310], [10310, 10311], [10311, 10335], [10335, 10339], [10339, 10340], [10340, 10349], [10349, 10350], [10350, 10356], [10356, 10369], [10369, 10376], [10376, 10396], [10396, 10413], [10413, 10431], [10431, 10432], [10432, 10449], [10449, 10453], [10453, 10461], [10461, 10464], [10464, 10465], [10465, 10480], [10480, 10482], [10482, 10491], [10491, 10493], [10493, 10513], [10513, 10517], [10517, 10531], [10531, 10535], [10535, 10544], [10544, 10563], [10563, 10564], [10564, 10565], [10565, 10573], [10573, 10576], [10576, 10583], [10583, 10585], [10585, 10588], [10588, 10602], [10602, 10620], [10620, 10636], [10636, 10641], [10641, 10645], [10645, 10655], [10655, 10656], [10656, 10658], [10658, 10675], [10675, 10694], [10694, 10697], [10697, 10712], [10712, 10719], [10719, 10735], [10735, 10753], [10753, 10769], [10769, 10772], [10772, 10776], [10776, 10782], [10782, 10803], [10803, 10811], [10811, 10829], [10829, 10835], [10835, 10843], [10843, 10844], [10844, 10862], [10862, 10879], [10879, 10898], [10898, 10916], [10916, 10926], [10926, 10929], [10929, 10943], [10943, 10964], [10964, 10973], [10973, 10975], [10975, 10976], [10976, 10981], [10981, 11002], [11002, 11005], [11005, 11027], [11027, 11036], [11036, 11047], [11047, 11063], [11063, 11072], [11072, 11093], [11093, 11108], [11108, 11116], [11116, 11136], [11136, 11144], [11144, 11159], [11159, 11170], [11170, 11179], [11179, 11198], [11198, 11219], [11219, 11239], [11239, 11257], [11257, 11273], [11273, 11288], [11288, 11297], [11297, 11301], [11301, 11319], [11319, 11337], [11337, 11347], [11347, 11363], [11363, 11378], [11378, 11390], [11390, 11392], [11392, 11393], [11393, 11398], [11398, 11414], [11414, 11432], [11432, 11433], [11433, 11440], [11440, 11450], [11450, 11472], [11472, 11490], [11490, 11491], [11491, 11507], [11507, 11525], [11525, 11531], [11531, 11532], [11532, 11534], [11534, 11537], [11537, 11540], [11540, 11544], [11544, 11546], [11546, 11547], [11547, 11548], [11548, 11551], [11551, 11553], [11553, 11556], [11556, 11560], [11560, 11562], [11562, 11581], [11581, 11592], [11592, 11609], [11609, 11614], [11614, 11622], [11622, 11632], [11632, 11644], [11644, 11652], [11652, 11659], [11659, 11678], [11678, 11695], [11695, 11697], [11697, 11710], [11710, 11726], [11726, 11732], [11732, 11733], [11733, 11750], [11750, 11770], [11770, 11787], [11787, 11803], [11803, 11822], [11822, 11841], [11841, 11856], [11856, 11861], [11861, 11876], [11876, 11881], [11881, 11895], [11895, 11911], [11911, 11912], [11912, 11929], [11929, 11947], [11947, 11959], [11959, 11973], [11973, 11977], [11977, 11994], [11994, 12008], [12008, 12023], [12023, 12040], [12040, 12055], [12055, 12065], [12065, 12069], [12069, 12084], [12084, 12102], [12102, 12119], [12119, 12137], [12137, 12150], [12150, 12156], [12156, 12175], [12175, 12192], [12192, 12212], [12212, 12230], [12230, 12247], [12247, 12265], [12265, 12280], [12280, 12292], [12292, 12300], [12300, 12316], [12316, 12332], [12332, 12342], [12342, 12357], [12357, 12372], [12372, 12373], [12373, 12376], [12376, 12380], [12380, 12385], [12385, 12390], [12390, 12393], [12393, 12399], [12399, 12405], [12405, 12408], [12408, 12410], [12410, 12412], [12412, 12432], [12432, 12446], [12446, 12457], [12457, 12462], [12462, 12472], [12472, 12484], [12484, 12503], [12503, 12519], [12519, 12536], [12536, 12551], [12551, 12552], [12552, 12566], [12566, 12579], [12579, 12587], [12587, 12603], [12603, 12619], [12619, 12626], [12626, 12627], [12627, 12630], [12630, 12635], [12635, 12636], [12636, 12639], [12639, 12645], [12645, 12649], [12649, 12655], [12655, 12657], [12657, 12658], [12658, 12659], [12659, 12662], [12662, 12663], [12663, 12664], [12664, 12667], [12667, 12669], [12669, 12671], [12671, 12677], [12677, 12683], [12683, 12684], [12684, 12704], [12704, 12714], [12714, 12721], [12721, 12740], [12740, 12758], [12758, 12773], [12773, 12775], [12775, 12794], [12794, 12797], [12797, 12818], [12818, 12840], [12840, 12846], [12846, 12867], [12867, 12873], [12873, 12891], [12891, 12905], [12905, 12916], [12916, 12936], [12936, 12954], [12954, 12955], [12955, 12957], [12957, 12961], [12961, 12966], [12966, 12970], [12970, 12974], [12974, 12980], [12980, 12981], [12981, 12982], [12982, 12983], [12983, 12984], [12984, 12987], [12987, 12988], [12988, 12990], [12990, 12998], [12998, 13004], [13004, 13005], [13005, 13025], [13025, 13039], [13039, 13040], [13040, 13046], [13046, 13052], [13052, 13071], [13071, 13091], [13091, 13112], [13112, 13128], [13128, 13138], [13138, 13154], [13154, 13171], [13171, 13191], [13191, 13210], [13210, 13228], [13228, 13244], [13244, 13258], [13258, 13276], [13276, 13293], [13293, 13315], [13315, 13330], [13330, 13331], [13331, 13334], [13334, 13337], [13337, 13340], [13340, 13341], [13341, 13344], [13344, 13352], [13352, 13358], [13358, 13367], [13367, 13369], [13369, 13370], [13370, 13372], [13372, 13378], [13378, 13382], [13382, 13389], [13389, 13393], [13393, 13394], [13394, 13395], [13395, 13412], [13412, 13427], [13427, 13430], [13430, 13431], [13431, 13432], [13432, 13435], [13435, 13438], [13438, 13439], [13439, 13440], [13440, 13442], [13442, 13444], [13444, 13445], [13445, 13446], [13446, 13448], [13448, 13449], [13449, 13467], [13467, 13479], [13479, 13498], [13498, 13510], [13510, 13516], [13516, 13535], [13535, 13553], [13553, 13569], [13569, 13583], [13583, 13600], [13600, 13621], [13621, 13637], [13637, 13638], [13638, 13642], [13642, 13646], [13646, 13647], [13647, 13649], [13649, 13653], [13653, 13654], [13654, 13655], [13655, 13656], [13656, 13668], [13668, 13674], [13674, 13677], [13677, 13696], [13696, 13712], [13712, 13718], [13718, 13722], [13722, 13726], [13726, 13730], [13730, 13735], [13735, 13740], [13740, 13744], [13744, 13748], [13748, 13753], [13753, 13755], [13755, 13757], [13757, 13758], [13758, 13759], [13759, 13760], [13760, 13762], [13762, 13763], [13763, 13764], [13764, 13765], [13765, 13767], [13767, 13769], [13769, 13780], [13780, 13782], [13782, 13792], [13792, 13794], [13794, 13796], [13796, 13801], [13801, 13805], [13805, 13813], [13813, 13815], [13815, 13834], [13834, 13850], [13850, 13861], [13861, 13877], [13877, 13899], [13899, 13919], [13919, 13939], [13939, 13956], [13956, 13975], [13975, 13980], [13980, 13981], [13981, 13997], [13997, 14017], [14017, 14040], [14040, 14059], [14059, 14077], [14077, 14098], [14098, 14113], [14113, 14129], [14129, 14135], [14135, 14153], [14153, 14170], [14170, 14186], [14186, 14192], [14192, 14198], [14198, 14199], [14199, 14203], [14203, 14205], [14205, 14225], [14225, 14230], [14230, 14236], [14236, 14254], [14254, 14258], [14258, 14271], [14271, 14291], [14291, 14310], [14310, 14325], [14325, 14328], [14328, 14346], [14346, 14365], [14365, 14374], [14374, 14385], [14385, 14400], [14400, 14416], [14416, 14417], [14417, 14421], [14421, 14432], [14432, 14433], [14433, 14434], [14434, 14437], [14437, 14442], [14442, 14445], [14445, 14451], [14451, 14453], [14453, 14461], [14461, 14464], [14464, 14483], [14483, 14500], [14500, 14504], [14504, 14519], [14519, 14537], [14537, 14546], [14546, 14557], [14557, 14577], [14577, 14596], [14596, 14611], [14611, 14628], [14628, 14640], [14640, 14656], [14656, 14674], [14674, 14696], [14696, 14713], [14713, 14721], [14721, 14725], [14725, 14743], [14743, 14758], [14758, 14775], [14775, 14792], [14792, 14812], [14812, 14817], [14817, 14834], [14834, 14855], [14855, 14873], [14873, 14874], [14874, 14878], [14878, 14882], [14882, 14900], [14900, 14916], [14916, 14932], [14932, 14951], [14951, 14952], [14952, 14970], [14970, 14972], [14972, 14975], [14975, 14979], [14979, 14980], [14980, 14982], [14982, 14986], [14986, 14991], [14991, 14996], [14996, 14998], [14998, 15004], [15004, 15012], [15012, 15028], [15028, 15034], [15034, 15042], [15042, 15048], [15048, 15066], [15066, 15068], [15068, 15070], [15070, 15072], [15072, 15074], [15074, 15076], [15076, 15078], [15078, 15080], [15080, 15082], [15082, 15084], [15084, 15086], [15086, 15088], [15088, 15090], [15090, 15092], [15092, 15094], [15094, 15097], [15097, 15111], [15111, 15120], [15120, 15126], [15126, 15143], [15143, 15148], [15148, 15167], [15167, 15182], [15182, 15199], [15199, 15222], [15222, 15241], [15241, 15261], [15261, 15280], [15280, 15298], [15298, 15303], [15303, 15308], [15308, 15326], [15326, 15342], [15342, 15360], [15360, 15376], [15376, 15395], [15395, 15397], [15397, 15398], [15398, 15413], [15413, 15422], [15422, 15428], [15428, 15433], [15433, 15438], [15438, 15443], [15443, 15448], [15448, 15453], [15453, 15469], [15469, 15485], [15485, 15500], [15500, 15517], [15517, 15527], [15527, 15532], [15532, 15546], [15546, 15563], [15563, 15567], [15567, 15573], [15573, 15593], [15593, 15610], [15610, 15631], [15631, 15647], [15647, 15657], [15657, 15673], [15673, 15688], [15688, 15704], [15704, 15707], [15707, 15716], [15716, 15718], [15718, 15725], [15725, 15741], [15741, 15762], [15762, 15782], [15782, 15797], [15797, 15815], [15815, 15833], [15833, 15854], [15854, 15872], [15872, 15875], [15875, 15876], [15876, 15894], [15894, 15908], [15908, 15924], [15924, 15941], [15941, 15958], [15958, 15975], [15975, 15990], [15990, 15995], [15995, 16011], [16011, 16029], [16029, 16049], [16049, 16065], [16065, 16067], [16067, 16079], [16079, 16087], [16087, 16105], [16105, 16126], [16126, 16132], [16132, 16137], [16137, 16147], [16147, 16165], [16165, 16182], [16182, 16191], [16191, 16198], [16198, 16206], [16206, 16212], [16212, 16228], [16228, 16244], [16244, 16254], [16254, 16267], [16267, 16283], [16283, 16295], [16295, 16311], [16311, 16327], [16327, 16342], [16342, 16357], [16357, 16373], [16373, 16387], [16387, 16388], [16388, 16397], [16397, 16401], [16401, 16421], [16421, 16439], [16439, 16459], [16459, 16467], [16467, 16468], [16468, 16490], [16490, 16505], [16505, 16525], [16525, 16545], [16545, 16551], [16551, 16558], [16558, 16563], [16563, 16568], [16568, 16573], [16573, 16578], [16578, 16583], [16583, 16588], [16588, 16593], [16593, 16598], [16598, 16613], [16613, 16624], [16624, 16627], [16627, 16636], [16636, 16650], [16650, 16669], [16669, 16686], [16686, 16704], [16704, 16723], [16723, 16743], [16743, 16758], [16758, 16772], [16772, 16788], [16788, 16793], [16793, 16810], [16810, 16819], [16819, 16836], [16836, 16850], [16850, 16868], [16868, 16874], [16874, 16891], [16891, 16906], [16906, 16920], [16920, 16934], [16934, 16936], [16936, 16953], [16953, 16971], [16971, 16972], [16972, 16990], [16990, 16996], [16996, 16997], [16997, 17009], [17009, 17013], [17013, 17016], [17016, 17017], [17017, 17019], [17019, 17021], [17021, 17023], [17023, 17025], [17025, 17027], [17027, 17029], [17029, 17030], [17030, 17031], [17031, 17032], [17032, 17034], [17034, 17035], [17035, 17038], [17038, 17039], [17039, 17041], [17041, 17043], [17043, 17045], [17045, 17047], [17047, 17049], [17049, 17051], [17051, 17053], [17053, 17054], [17054, 17055], [17055, 17057], [17057, 17059], [17059, 17060], [17060, 17063], [17063, 17064], [17064, 17065], [17065, 17066], [17066, 17068], [17068, 17070], [17070, 17072], [17072, 17074], [17074, 17076], [17076, 17078], [17078, 17079], [17079, 17080], [17080, 17082], [17082, 17084], [17084, 17085], [17085, 17088], [17088, 17089], [17089, 17091], [17091, 17093], [17093, 17095], [17095, 17097], [17097, 17099], [17099, 17101], [17101, 17102], [17102, 17103], [17103, 17115], [17115, 17119], [17119, 17120], [17120, 17122], [17122, 17125], [17125, 17126], [17126, 17127], [17127, 17128], [17128, 17129], [17129, 17130], [17130, 17131], [17131, 17132], [17132, 17133], [17133, 17134], [17134, 17135], [17135, 17136], [17136, 17138], [17138, 17139], [17139, 17142], [17142, 17144], [17144, 17145], [17145, 17146], [17146, 17147], [17147, 17148], [17148, 17149], [17149, 17150], [17150, 17151], [17151, 17152], [17152, 17154], [17154, 17156], [17156, 17157], [17157, 17160], [17160, 17162], [17162, 17164], [17164, 17165], [17165, 17166], [17166, 17167], [17167, 17169], [17169, 17171], [17171, 17172], [17172, 17173], [17173, 17174], [17174, 17175], [17175, 17177], [17177, 17178], [17178, 17181], [17181, 17182], [17182, 17184], [17184, 17185], [17185, 17186], [17186, 17187], [17187, 17188], [17188, 17189], [17189, 17190], [17190, 17191], [17191, 17193], [17193, 17194], [17194, 17196], [17196, 17197], [17197, 17209], [17209, 17213], [17213, 17216], [17216, 17218], [17218, 17219], [17219, 17220], [17220, 17221], [17221, 17222], [17222, 17223], [17223, 17224], [17224, 17225], [17225, 17226], [17226, 17227], [17227, 17228], [17228, 17230], [17230, 17231], [17231, 17234], [17234, 17236], [17236, 17237], [17237, 17238], [17238, 17239], [17239, 17240], [17240, 17241], [17241, 17242], [17242, 17243], [17243, 17244], [17244, 17246], [17246, 17248], [17248, 17249], [17249, 17252], [17252, 17254], [17254, 17255], [17255, 17256], [17256, 17257], [17257, 17259], [17259, 17261], [17261, 17262], [17262, 17263], [17263, 17266], [17266, 17268], [17268, 17269], [17269, 17270], [17270, 17271], [17271, 17272], [17272, 17273], [17273, 17274], [17274, 17275], [17275, 17276], [17276, 17278], [17278, 17280], [17280, 17281], [17281, 17298], [17298, 17304], [17304, 17320], [17320, 17337], [17337, 17354], [17354, 17368], [17368, 17384], [17384, 17385], [17385, 17388], [17388, 17390], [17390, 17391], [17391, 17392], [17392, 17394], [17394, 17396], [17396, 17398], [17398, 17399], [17399, 17400], [17400, 17403], [17403, 17405], [17405, 17408], [17408, 17409], [17409, 17410], [17410, 17411], [17411, 17412], [17412, 17416], [17416, 17418], [17418, 17420], [17420, 17423], [17423, 17424], [17424, 17425], [17425, 17426], [17426, 17429], [17429, 17431], [17431, 17434], [17434, 17435], [17435, 17436], [17436, 17437], [17437, 17438], [17438, 17439], [17439, 17440], [17440, 17442], [17442, 17445], [17445, 17446], [17446, 17448], [17448, 17449], [17449, 17452], [17452, 17454], [17454, 17456], [17456, 17457], [17457, 17458], [17458, 17461], [17461, 17463], [17463, 17466], [17466, 17467], [17467, 17468], [17468, 17469], [17469, 17470], [17470, 17471], [17471, 17474], [17474, 17476], [17476, 17477], [17477, 17480], [17480, 17482], [17482, 17484], [17484, 17486], [17486, 17487], [17487, 17488], [17488, 17491], [17491, 17493], [17493, 17496], [17496, 17497], [17497, 17498], [17498, 17499], [17499, 17500], [17500, 17504], [17504, 17507], [17507, 17510], [17510, 17512], [17512, 17515], [17515, 17517], [17517, 17519], [17519, 17520], [17520, 17521], [17521, 17524], [17524, 17526], [17526, 17529], [17529, 17530], [17530, 17531], [17531, 17532], [17532, 17533], [17533, 17534], [17534, 17538], [17538, 17541], [17541, 17544], [17544, 17546], [17546, 17549], [17549, 17551], [17551, 17553], [17553, 17554], [17554, 17555], [17555, 17558], [17558, 17560], [17560, 17563], [17563, 17564], [17564, 17565], [17565, 17566], [17566, 17567], [17567, 17569], [17569, 17572], [17572, 17574], [17574, 17577], [17577, 17579], [17579, 17582], [17582, 17584], [17584, 17585], [17585, 17587], [17587, 17589], [17589, 17591], [17591, 17594], [17594, 17595], [17595, 17597], [17597, 17599], [17599, 17601], [17601, 17603], [17603, 17604], [17604, 17606], [17606, 17607], [17607, 17608], [17608, 17611], [17611, 17613], [17613, 17616], [17616, 17617], [17617, 17618], [17618, 17619], [17619, 17621], [17621, 17623], [17623, 17625], [17625, 17626], [17626, 17627], [17627, 17630], [17630, 17632], [17632, 17635], [17635, 17636], [17636, 17637], [17637, 17638], [17638, 17639], [17639, 17640], [17640, 17642], [17642, 17643], [17643, 17644], [17644, 17647], [17647, 17649], [17649, 17652], [17652, 17653], [17653, 17654], [17654, 17655], [17655, 17658], [17658, 17660], [17660, 17663], [17663, 17664], [17664, 17665], [17665, 17666], [17666, 17667], [17667, 17668], [17668, 17670], [17670, 17671], [17671, 17672], [17672, 17675], [17675, 17677], [17677, 17680], [17680, 17681], [17681, 17682], [17682, 17683], [17683, 17684], [17684, 17685], [17685, 17687], [17687, 17689], [17689, 17691], [17691, 17692], [17692, 17693], [17693, 17694], [17694, 17697], [17697, 17699], [17699, 17715], [17715, 17724], [17724, 17742], [17742, 17750], [17750, 17753], [17753, 17769], [17769, 17787], [17787, 17788], [17788, 17801], [17801, 17802], [17802, 17804], [17804, 17806], [17806, 17807], [17807, 17811], [17811, 17813], [17813, 17817], [17817, 17822], [17822, 17824], [17824, 17828], [17828, 17829], [17829, 17834], [17834, 17838], [17838, 17841], [17841, 17843], [17843, 17844], [17844, 17845], [17845, 17850], [17850, 17855], [17855, 17858], [17858, 17859], [17859, 17860], [17860, 17861], [17861, 17865], [17865, 17866], [17866, 17867], [17867, 17876], [17876, 17878], [17878, 17886], [17886, 17894], [17894, 17896], [17896, 17899], [17899, 17901], [17901, 17905], [17905, 17910], [17910, 17913], [17913, 17914], [17914, 17917], [17917, 17918], [17918, 17920], [17920, 17926], [17926, 17933], [17933, 17935], [17935, 17936], [17936, 17937], [17937, 17944], [17944, 17945], [17945, 17951], [17951, 17958], [17958, 17978], [17978, 17992], [17992, 18013], [18013, 18034], [18034, 18050], [18050, 18057], [18057, 18074], [18074, 18092], [18092, 18108], [18108, 18118], [18118, 18119], [18119, 18134], [18134, 18139], [18139, 18140], [18140, 18141], [18141, 18144], [18144, 18147], [18147, 18152], [18152, 18156], [18156, 18161], [18161, 18163], [18163, 18169], [18169, 18172], [18172, 18174], [18174, 18176], [18176, 18177], [18177, 18178], [18178, 18181], [18181, 18212], [18212, 18224], [18224, 18245], [18245, 18246], [18246, 18248], [18248, 18249], [18249, 18251], [18251, 18252], [18252, 18257], [18257, 18258], [18258, 18263], [18263, 18269], [18269, 18273], [18273, 18276], [18276, 18278], [18278, 18280], [18280, 18281], [18281, 18285], [18285, 18316], [18316, 18328], [18328, 18339], [18339, 18343], [18343, 18359], [18359, 18378], [18378, 18385], [18385, 18391], [18391, 18411], [18411, 18420], [18420, 18430], [18430, 18450], [18450, 18467], [18467, 18484], [18484, 18502], [18502, 18518], [18518, 18536], [18536, 18553], [18553, 18570], [18570, 18591], [18591, 18593], [18593, 18610], [18610, 18630], [18630, 18650], [18650, 18664], [18664, 18668], [18668, 18682], [18682, 18697], [18697, 18717], [18717, 18718], [18718, 18721], [18721, 18727], [18727, 18733], [18733, 18737], [18737, 18743], [18743, 18749], [18749, 18755], [18755, 18759], [18759, 18765], [18765, 18784], [18784, 18802], [18802, 18822], [18822, 18840], [18840, 18853], [18853, 18866], [18866, 18880], [18880, 18895], [18895, 18913], [18913, 18932], [18932, 18952], [18952, 18967], [18967, 18985], [18985, 19004], [19004, 19022], [19022, 19028], [19028, 19045], [19045, 19062], [19062, 19082], [19082, 19099], [19099, 19113], [19113, 19125], [19125, 19130], [19130, 19145], [19145, 19156], [19156, 19167], [19167, 19183], [19183, 19194], [19194, 19206], [19206, 19226], [19226, 19241], [19241, 19258], [19258, 19261], [19261, 19268], [19268, 19269], [19269, 19272], [19272, 19274], [19274, 19276], [19276, 19278], [19278, 19280], [19280, 19281], [19281, 19283], [19283, 19284], [19284, 19286], [19286, 19290], [19290, 19291], [19291, 19293], [19293, 19295], [19295, 19298], [19298, 19300], [19300, 19302], [19302, 19303], [19303, 19307], [19307, 19309], [19309, 19312], [19312, 19313], [19313, 19315], [19315, 19317], [19317, 19319], [19319, 19321], [19321, 19323], [19323, 19327], [19327, 19328], [19328, 19330], [19330, 19332], [19332, 19335], [19335, 19337], [19337, 19339], [19339, 19341], [19341, 19343], [19343, 19344], [19344, 19345], [19345, 19349], [19349, 19350], [19350, 19354], [19354, 19355], [19355, 19356], [19356, 19359], [19359, 19361], [19361, 19362], [19362, 19363], [19363, 19365], [19365, 19366], [19366, 19368], [19368, 19369], [19369, 19371], [19371, 19372], [19372, 19373], [19373, 19374], [19374, 19375], [19375, 19379], [19379, 19382], [19382, 19384], [19384, 19387], [19387, 19389], [19389, 19390], [19390, 19394], [19394, 19396], [19396, 19399], [19399, 19401], [19401, 19402], [19402, 19403], [19403, 19404], [19404, 19406], [19406, 19410], [19410, 19411], [19411, 19413], [19413, 19415], [19415, 19418], [19418, 19420], [19420, 19421], [19421, 19422], [19422, 19424], [19424, 19425], [19425, 19426], [19426, 19427], [19427, 19428], [19428, 19432], [19432, 19433], [19433, 19434], [19434, 19437], [19437, 19438], [19438, 19439], [19439, 19441], [19441, 19442], [19442, 19443], [19443, 19444], [19444, 19448], [19448, 19449], [19449, 19451], [19451, 19452], [19452, 19453], [19453, 19454], [19454, 19455], [19455, 19458], [19458, 19460], [19460, 19463], [19463, 19467], [19467, 19469], [19469, 19472], [19472, 19473], [19473, 19475], [19475, 19476], [19476, 19477], [19477, 19478], [19478, 19480], [19480, 19482], [19482, 19486], [19486, 19489], [19489, 19491], [19491, 19494], [19494, 19496], [19496, 19497], [19497, 19498], [19498, 19500], [19500, 19501], [19501, 19502], [19502, 19503], [19503, 19504], [19504, 19508], [19508, 19511], [19511, 19513], [19513, 19528], [19528, 19536], [19536, 19554], [19554, 19570], [19570, 19588], [19588, 19604], [19604, 19613], [19613, 19614], [19614, 19617], [19617, 19619], [19619, 19620], [19620, 19621], [19621, 19623], [19623, 19624], [19624, 19625], [19625, 19626], [19626, 19627], [19627, 19628], [19628, 19629], [19629, 19630], [19630, 19631], [19631, 19633], [19633, 19635], [19635, 19638], [19638, 19639], [19639, 19640], [19640, 19641], [19641, 19642], [19642, 19643], [19643, 19646], [19646, 19647], [19647, 19648], [19648, 19650], [19650, 19651], [19651, 19653], [19653, 19655], [19655, 19658], [19658, 19660], [19660, 19661], [19661, 19662], [19662, 19663], [19663, 19665], [19665, 19667], [19667, 19669], [19669, 19670], [19670, 19673], [19673, 19675], [19675, 19676], [19676, 19678], [19678, 19679], [19679, 19681], [19681, 19683], [19683, 19686], [19686, 19687], [19687, 19688], [19688, 19690], [19690, 19691], [19691, 19692], [19692, 19693], [19693, 19695], [19695, 19696], [19696, 19697], [19697, 19698], [19698, 19699], [19699, 19702], [19702, 19703], [19703, 19704], [19704, 19705], [19705, 19707], [19707, 19709], [19709, 19711], [19711, 19713], [19713, 19714], [19714, 19715], [19715, 19716], [19716, 19717], [19717, 19718], [19718, 19719], [19719, 19720], [19720, 19721], [19721, 19724], [19724, 19726], [19726, 19729], [19729, 19730], [19730, 19731], [19731, 19732], [19732, 19733], [19733, 19736], [19736, 19740], [19740, 19742], [19742, 19744], [19744, 19746], [19746, 19747], [19747, 19749], [19749, 19751], [19751, 19753], [19753, 19755], [19755, 19758], [19758, 19759], [19759, 19762], [19762, 19764], [19764, 19767], [19767, 19769], [19769, 19770], [19770, 19772], [19772, 19773], [19773, 19774], [19774, 19775], [19775, 19777], [19777, 19779], [19779, 19782], [19782, 19784], [19784, 19786], [19786, 19788], [19788, 19789], [19789, 19792], [19792, 19793], [19793, 19794], [19794, 19796], [19796, 19797], [19797, 19799], [19799, 19802], [19802, 19803], [19803, 19804], [19804, 19805], [19805, 19808], [19808, 19810], [19810, 19811], [19811, 19814], [19814, 19816], [19816, 19817], [19817, 19819], [19819, 19821], [19821, 19824], [19824, 19826], [19826, 19829], [19829, 19830], [19830, 19831], [19831, 19832], [19832, 19834], [19834, 19835], [19835, 19836], [19836, 19837], [19837, 19838], [19838, 19840], [19840, 19842], [19842, 19845], [19845, 19846], [19846, 19848], [19848, 19849], [19849, 19850], [19850, 19852], [19852, 19854], [19854, 19855], [19855, 19856], [19856, 19859], [19859, 19862], [19862, 19864], [19864, 19867], [19867, 19869], [19869, 19870], [19870, 19872], [19872, 19873], [19873, 19876], [19876, 19877], [19877, 19879], [19879, 19880], [19880, 19882], [19882, 19885], [19885, 19887], [19887, 19903], [19903, 19912], [19912, 19917], [19917, 19932], [19932, 19954], [19954, 19972], [19972, 19973], [19973, 19974], [19974, 19975], [19975, 19982], [19982, 19983], [19983, 19987], [19987, 19988], [19988, 19989], [19989, 19990], [19990, 19991], [19991, 19992], [19992, 19993], [19993, 19994], [19994, 19995], [19995, 20005], [20005, 20012], [20012, 20019], [20019, 20026], [20026, 20039], [20039, 20058], [20058, 20075], [20075, 20082], [20082, 20102], [20102, 20121], [20121, 20137], [20137, 20154], [20154, 20171], [20171, 20182], [20182, 20188], [20188, 20198], [20198, 20215], [20215, 20222], [20222, 20241], [20241, 20256], [20256, 20273], [20273, 20291], [20291, 20309], [20309, 20326], [20326, 20342], [20342, 20351], [20351, 20352], [20352, 20354], [20354, 20355], [20355, 20356], [20356, 20357], [20357, 20358], [20358, 20359], [20359, 20363], [20363, 20367], [20367, 20377], [20377, 20387], [20387, 20393], [20393, 20394], [20394, 20401], [20401, 20407], [20407, 20424], [20424, 20431], [20431, 20446], [20446, 20463], [20463, 20479], [20479, 20480], [20480, 20489], [20489, 20499], [20499, 20510], [20510, 20519], [20519, 20528], [20528, 20536], [20536, 20542], [20542, 20558], [20558, 20568], [20568, 20585], [20585, 20604], [20604, 20621], [20621, 20636], [20636, 20642], [20642, 20658], [20658, 20660], [20660, 20672], [20672, 20690], [20690, 20707], [20707, 20722], [20722, 20741], [20741, 20745], [20745, 20762], [20762, 20779], [20779, 20798], [20798, 20799], [20799, 20800], [20800, 20810], [20810, 20817], [20817, 20836], [20836, 20851], [20851, 20852], [20852, 20870], [20870, 20881], [20881, 20898], [20898, 20904], [20904, 20919], [20919, 20926], [20926, 20927], [20927, 20928], [20928, 20929], [20929, 20930], [20930, 20931], [20931, 20932], [20932, 20933], [20933, 20934], [20934, 20935], [20935, 20936], [20936, 20937], [20937, 20938], [20938, 20939], [20939, 20940], [20940, 20941], [20941, 20942], [20942, 20943], [20943, 20944], [20944, 20945], [20945, 20946], [20946, 20947], [20947, 20948], [20948, 20949], [20949, 20960], [20960, 20972], [20972, 20973], [20973, 20988], [20988, 21004], [21004, 21020], [21020, 21034], [21034, 21035], [21035, 21050], [21050, 21059], [21059, 21074], [21074, 21084], [21084, 21085], [21085, 21101], [21101, 21113], [21113, 21129], [21129, 21135], [21135, 21150], [21150, 21164], [21164, 21177], [21177, 21185], [21185, 21198], [21198, 21206], [21206, 21217], [21217, 21231], [21231, 21242], [21242, 21243], [21243, 21258], [21258, 21265], [21265, 21274], [21274, 21275], [21275, 21292], [21292, 21298], [21298, 21312], [21312, 21319], [21319, 21333], [21333, 21342], [21342, 21357], [21357, 21366], [21366, 21380], [21380, 21390], [21390, 21407], [21407, 21414], [21414, 21427], [21427, 21439], [21439, 21455], [21455, 21460], [21460, 21473], [21473, 21474], [21474, 21475], [21475, 21490], [21490, 21495], [21495, 21510], [21510, 21517], [21517, 21533], [21533, 21553], [21553, 21561], [21561, 21578], [21578, 21580], [21580, 21596], [21596, 21604], [21604, 21619], [21619, 21624], [21624, 21639], [21639, 21646], [21646, 21663], [21663, 21666], [21666, 21680], [21680, 21695], [21695, 21705], [21705, 21706], [21706, 21720], [21720, 21728], [21728, 21745], [21745, 21752], [21752, 21769], [21769, 21780], [21780, 21781], [21781, 21795], [21795, 21801], [21801, 21816], [21816, 21823], [21823, 21838], [21838, 21852], [21852, 21853], [21853, 21868], [21868, 21873], [21873, 21889], [21889, 21897], [21897, 21915], [21915, 21916], [21916, 21931], [21931, 21935], [21935, 21950], [21950, 21956], [21956, 21973], [21973, 21976], [21976, 21994], [21994, 21995], [21995, 22010], [22010, 22015], [22015, 22032], [22032, 22037], [22037, 22053], [22053, 22063], [22063, 22079], [22079, 22088], [22088, 22090], [22090, 22105], [22105, 22111], [22111, 22130], [22130, 22133], [22133, 22149], [22149, 22167], [22167, 22170], [22170, 22191], [22191, 22199], [22199, 22216], [22216, 22220], [22220, 22230], [22230, 22236], [22236, 22257], [22257, 22259], [22259, 22277], [22277, 22280], [22280, 22298], [22298, 22304], [22304, 22317], [22317, 22323], [22323, 22335], [22335, 22350], [22350, 22351], [22351, 22364], [22364, 22366], [22366, 22382], [22382, 22386], [22386, 22403], [22403, 22404], [22404, 22421], [22421, 22423], [22423, 22438], [22438, 22455], [22455, 22457], [22457, 22473], [22473, 22485], [22485, 22502], [22502, 22505], [22505, 22506], [22506, 22525], [22525, 22538], [22538, 22552], [22552, 22553], [22553, 22569], [22569, 22570], [22570, 22586], [22586, 22597], [22597, 22611], [22611, 22613], [22613, 22629], [22629, 22646], [22646, 22652], [22652, 22666], [22666, 22670], [22670, 22686], [22686, 22705], [22705, 22708], [22708, 22726], [22726, 22735], [22735, 22750], [22750, 22755], [22755, 22773], [22773, 22787], [22787, 22804], [22804, 22813], [22813, 22830], [22830, 22833], [22833, 22852], [22852, 22863], [22863, 22866], [22866, 22889], [22889, 22903], [22903, 22908], [22908, 22925], [22925, 22931], [22931, 22951], [22951, 22956], [22956, 22975], [22975, 22985], [22985, 22994], [22994, 23010], [23010, 23028], [23028, 23032], [23032, 23048], [23048, 23054], [23054, 23055], [23055, 23058], [23058, 23077], [23077, 23078], [23078, 23101], [23101, 23114], [23114, 23123], [23123, 23143], [23143, 23154], [23154, 23161], [23161, 23164], [23164, 23174], [23174, 23193], [23193, 23202], [23202, 23210], [23210, 23231], [23231, 23253], [23253, 23269], [23269, 23274], [23274, 23294], [23294, 23300], [23300, 23309], [23309, 23316], [23316, 23327], [23327, 23350], [23350, 23359], [23359, 23369], [23369, 23370], [23370, 23386], [23386, 23403], [23403, 23414], [23414, 23430], [23430, 23440], [23440, 23450], [23450, 23466], [23466, 23484], [23484, 23485], [23485, 23486], [23486, 23502], [23502, 23508], [23508, 23512], [23512, 23526], [23526, 23531], [23531, 23541], [23541, 23550], [23550, 23564], [23564, 23583], [23583, 23604], [23604, 23625], [23625, 23630], [23630, 23639], [23639, 23659], [23659, 23662], [23662, 23686], [23686, 23707], [23707, 23727], [23727, 23746], [23746, 23762], [23762, 23776], [23776, 23792], [23792, 23793], [23793, 23810], [23810, 23811], [23811, 23821], [23821, 23838], [23838, 23859], [23859, 23875], [23875, 23893], [23893, 23895], [23895, 23900], [23900, 23911], [23911, 23927], [23927, 23948], [23948, 23956], [23956, 23963], [23963, 23964], [23964, 23980], [23980, 23983], [23983, 23984], [23984, 23997], [23997, 24006], [24006, 24026], [24026, 24044], [24044, 24062], [24062, 24078], [24078, 24095], [24095, 24109], [24109, 24121], [24121, 24136], [24136, 24140], [24140, 24144], [24144, 24151], [24151, 24169], [24169, 24191], [24191, 24194], [24194, 24199], [24199, 24200], [24200, 24213], [24213, 24217], [24217, 24220], [24220, 24221], [24221, 24225], [24225, 24230], [24230, 24232], [24232, 24240], [24240, 24244], [24244, 24248], [24248, 24268], [24268, 24283], [24283, 24302], [24302, 24307], [24307, 24316], [24316, 24325], [24325, 24331], [24331, 24335], [24335, 24356], [24356, 24374], [24374, 24393], [24393, 24400], [24400, 24416], [24416, 24431], [24431, 24437], [24437, 24440], [24440, 24453], [24453, 24454], [24454, 24473], [24473, 24481], [24481, 24487], [24487, 24495], [24495, 24500], [24500, 24509], [24509, 24514], [24514, 24519], [24519, 24537], [24537, 24554], [24554, 24570], [24570, 24574], [24574, 24576], [24576, 24593], [24593, 24607], [24607, 24625], [24625, 24637], [24637, 24640], [24640, 24657], [24657, 24675], [24675, 24680], [24680, 24688], [24688, 24692], [24692, 24708], [24708, 24725], [24725, 24742], [24742, 24757], [24757, 24758], [24758, 24766], [24766, 24775], [24775, 24787], [24787, 24788], [24788, 24789], [24789, 24790], [24790, 24798], [24798, 24813], [24813, 24814], [24814, 24815], [24815, 24829], [24829, 24830], [24830, 24839], [24839, 24842], [24842, 24864], [24864, 24867], [24867, 24875], [24875, 24886], [24886, 24891], [24891, 24896], [24896, 24904], [24904, 24923], [24923, 24942], [24942, 24954], [24954, 24960], [24960, 24976], [24976, 24981], [24981, 24986], [24986, 24993], [24993, 25000], [25000, 25021], [25021, 25023], [25023, 25038], [25038, 25061], [25061, 25077], [25077, 25091], [25091, 25100], [25100, 25122], [25122, 25136], [25136, 25158], [25158, 25182], [25182, 25205], [25205, 25210], [25210, 25230], [25230, 25245], [25245, 25265], [25265, 25289], [25289, 25307], [25307, 25308], [25308, 25326], [25326, 25340], [25340, 25359], [25359, 25376], [25376, 25396], [25396, 25415], [25415, 25428], [25428, 25429], [25429, 25438], [25438, 25452], [25452, 25462], [25462, 25481], [25481, 25498], [25498, 25502], [25502, 25509], [25509, 25527], [25527, 25548], [25548, 25557], [25557, 25567], [25567, 25578], [25578, 25596], [25596, 25612], [25612, 25625], [25625, 25647], [25647, 25673], [25673, 25682], [25682, 25697], [25697, 25720], [25720, 25740], [25740, 25756], [25756, 25759], [25759, 25765], [25765, 25779], [25779, 25782], [25782, 25790], [25790, 25805], [25805, 25811], [25811, 25822], [25822, 25823], [25823, 25840], [25840, 25853], [25853, 25854], [25854, 25873], [25873, 25879], [25879, 25898], [25898, 25917], [25917, 25941], [25941, 25958], [25958, 25975], [25975, 25992], [25992, 26011], [26011, 26034], [26034, 26052], [26052, 26076], [26076, 26096], [26096, 26100], [26100, 26117], [26117, 26132], [26132, 26143], [26143, 26144], [26144, 26149], [26149, 26165], [26165, 26181], [26181, 26195], [26195, 26214], [26214, 26228], [26228, 26246], [26246, 26261], [26261, 26277], [26277, 26290], [26290, 26309], [26309, 26328], [26328, 26347], [26347, 26363], [26363, 26380], [26380, 26393], [26393, 26401], [26401, 26420], [26420, 26421], [26421, 26443], [26443, 26461], [26461, 26485], [26485, 26504], [26504, 26522], [26522, 26540], [26540, 26544], [26544, 26551], [26551, 26568], [26568, 26586], [26586, 26603], [26603, 26622], [26622, 26635], [26635, 26643], [26643, 26649], [26649, 26651], [26651, 26653], [26653, 26668], [26668, 26684], [26684, 26700], [26700, 26709], [26709, 26721], [26721, 26732], [26732, 26747], [26747, 26767], [26767, 26783], [26783, 26799], [26799, 26813], [26813, 26828], [26828, 26849], [26849, 26868], [26868, 26889], [26889, 26909], [26909, 26929], [26929, 26935], [26935, 26945], [26945, 26954], [26954, 26972], [26972, 26989], [26989, 27005], [27005, 27022], [27022, 27026], [27026, 27027], [27027, 27034], [27034, 27045], [27045, 27058], [27058, 27060], [27060, 27062], [27062, 27074], [27074, 27075], [27075, 27077], [27077, 27079], [27079, 27084], [27084, 27090], [27090, 27099], [27099, 27106], [27106, 27109], [27109, 27114], [27114, 27125], [27125, 27129], [27129, 27133], [27133, 27142], [27142, 27148], [27148, 27149], [27149, 27151], [27151, 27153], [27153, 27169], [27169, 27188], [27188, 27196], [27196, 27215], [27215, 27234], [27234, 27253], [27253, 27270], [27270, 27291], [27291, 27312], [27312, 27320], [27320, 27336], [27336, 27349], [27349, 27366], [27366, 27383], [27383, 27402], [27402, 27406], [27406, 27421], [27421, 27440], [27440, 27442], [27442, 27443], [27443, 27447], [27447, 27453], [27453, 27457], [27457, 27458], [27458, 27462], [27462, 27466], [27466, 27470], [27470, 27471], [27471, 27472], [27472, 27476], [27476, 27481], [27481, 27485], [27485, 27489], [27489, 27493], [27493, 27497], [27497, 27501], [27501, 27518], [27518, 27525], [27525, 27526], [27526, 27527], [27527, 27528], [27528, 27529], [27529, 27532], [27532, 27535], [27535, 27539], [27539, 27540], [27540, 27541], [27541, 27542], [27542, 27543], [27543, 27544], [27544, 27548], [27548, 27554], [27554, 27560], [27560, 27563], [27563, 27566], [27566, 27569], [27569, 27572], [27572, 27573], [27573, 27577], [27577, 27579], [27579, 27583], [27583, 27587], [27587, 27588], [27588, 27589], [27589, 27593], [27593, 27598], [27598, 27599], [27599, 27603], [27603, 27608], [27608, 27612], [27612, 27616], [27616, 27618], [27618, 27626], [27626, 27630], [27630, 27634], [27634, 27638], [27638, 27644], [27644, 27648], [27648, 27652], [27652, 27656], [27656, 27660], [27660, 27664], [27664, 27668], [27668, 27672], [27672, 27678], [27678, 27680], [27680, 27684], [27684, 27689], [27689, 27694], [27694, 27699], [27699, 27702], [27702, 27706], [27706, 27712], [27712, 27718], [27718, 27722], [27722, 27729], [27729, 27737], [27737, 27742], [27742, 27750], [27750, 27755], [27755, 27762], [27762, 27766], [27766, 27771], [27771, 27772], [27772, 27773], [27773, 27778], [27778, 27784], [27784, 27788], [27788, 27795], [27795, 27803], [27803, 27808], [27808, 27812], [27812, 27817], [27817, 27827], [27827, 27837], [27837, 27844], [27844, 27854], [27854, 27860], [27860, 27872], [27872, 27884], [27884, 27894], [27894, 27903], [27903, 27905], [27905, 27911], [27911, 27913], [27913, 27915], [27915, 27921], [27921, 27926], [27926, 27933], [27933, 27934], [27934, 27940], [27940, 27948], [27948, 27954], [27954, 27958], [27958, 27961], [27961, 27963], [27963, 27965], [27965, 27975], [27975, 27977], [27977, 27981], [27981, 27985], [27985, 27989], [27989, 27993], [27993, 27997], [27997, 28001], [28001, 28004], [28004, 28006], [28006, 28007], [28007, 28009], [28009, 28013], [28013, 28015], [28015, 28019], [28019, 28020], [28020, 28022], [28022, 28026], [28026, 28028], [28028, 28029], [28029, 28030], [28030, 28033], [28033, 28036], [28036, 28038], [28038, 28040], [28040, 28044], [28044, 28048], [28048, 28049], [28049, 28051], [28051, 28054], [28054, 28056], [28056, 28060], [28060, 28064], [28064, 28068], [28068, 28076], [28076, 28078], [28078, 28080], [28080, 28081], [28081, 28084], [28084, 28095], [28095, 28104], [28104, 28113]], "positions": [[512, 270, 2036, 335], [866, 363, 1684, 428], [375, 513, 2171, 544], [374, 563, 1570, 597], [372, 609, 1062, 643], [375, 681, 2172, 712], [373, 735, 1119, 769], [372, 786, 1295, 820], [1205, 874, 1344, 900], [534, 943, 2070, 977], [478, 990, 2070, 1025], [479, 1036, 2069, 1070], [478, 1083, 2069, 1117], [478, 1129, 2073, 1163], [480, 1176, 2071, 1210], [479, 1223, 2070, 1256], [479, 1269, 2070, 1303], [479, 1316, 2073, 1350], [479, 1362, 2070, 1396], [479, 1409, 2060, 1443], [379, 1535, 787, 1577], [377, 1642, 2179, 1679], [376, 1692, 2173, 1730], [375, 1744, 2174, 1781], [377, 1795, 1803, 1832], [439, 1845, 1595, 1882], [985, 1935, 2173, 1976], [0, 0, 2550, 3300], [377, 2081, 1592, 2118], [438, 2125, 2178, 2169], [376, 2182, 1344, 2219], [842, 2265, 1656, 2301], [741, 2276, 2173, 2351], [1245, 2330, 1300, 2355], [376, 2401, 1530, 2449], [374, 2463, 1512, 2500], [974, 2549, 1850, 2578], [728, 2578, 937, 2604], [682, 2561, 2173, 2661], [0, 0, 2550, 3300], [1646, 2412, 2175, 2451], [1531, 2427, 1643, 2451], [421, 2726, 2174, 2756], [376, 2766, 1433, 2796], [424, 2802, 1639, 2837], [374, 228, 2178, 289], [376, 294, 1085, 331], [769, 381, 1963, 422], [492, 404, 2173, 479], [760, 482, 1538, 507], [438, 557, 2175, 594], [376, 608, 2174, 645], [375, 659, 2178, 696], [438, 709, 2174, 746], [376, 760, 1430, 797], [747, 847, 2173, 905], [1054, 905, 1122, 927], [374, 978, 2173, 1015], [377, 1028, 2073, 1065], [843, 1118, 2173, 1165], [375, 1213, 1553, 1250], [438, 1264, 2174, 1301], [375, 1315, 2177, 1353], [376, 1365, 2175, 1404], [377, 1416, 2174, 1454], [377, 1467, 1860, 1504], [438, 1517, 2173, 1558], [376, 1569, 755, 1606], [378, 1683, 783, 1718], [376, 1767, 2173, 1804], [376, 1818, 1200, 1855], [439, 1911, 2174, 1948], [479, 1961, 2175, 1998], [479, 2012, 1045, 2049], [439, 2075, 2179, 2112], [479, 2126, 2173, 2163], [478, 2177, 2174, 2214], [478, 2227, 1740, 2265], [439, 2290, 1706, 2331], [528, 2359, 2133, 2396], [528, 2414, 2175, 2451], [571, 2464, 717, 2492], [439, 2544, 2179, 2581], [477, 2595, 2179, 2632], [479, 2646, 2179, 2683], [478, 2697, 2174, 2734], [478, 2747, 1944, 2784], [439, 242, 2177, 279], [479, 285, 1809, 329], [374, 385, 2173, 422], [376, 436, 1590, 473], [376, 511, 2175, 548], [377, 562, 2173, 599], [376, 613, 2176, 650], [376, 657, 518, 692], [378, 778, 772, 813], [374, 863, 2175, 900], [375, 913, 1347, 950], [438, 964, 2174, 1001], [375, 1015, 2173, 1052], [377, 1066, 871, 1103], [438, 1107, 2174, 1160], [376, 1167, 2174, 1204], [377, 1218, 2175, 1255], [377, 1269, 2179, 1306], [438, 1320, 2176, 1357], [376, 1371, 2173, 1408], [375, 1421, 2174, 1458], [376, 1471, 2132, 1509], [438, 1522, 2179, 1560], [374, 1574, 2175, 1611], [375, 1625, 2175, 1662], [377, 1675, 1732, 1712], [438, 1726, 2173, 1763], [376, 1777, 2174, 1814], [375, 1827, 2175, 1865], [377, 1879, 2173, 1916], [377, 1930, 2173, 1967], [376, 1980, 1435, 2017], [438, 2031, 2177, 2068], [374, 2082, 2177, 2119], [376, 2133, 2177, 2170], [376, 2184, 1638, 2221], [378, 2298, 967, 2342], [374, 2382, 2174, 2419], [375, 2432, 2173, 2470], [374, 2484, 2179, 2521], [374, 2525, 2174, 2573], [376, 2576, 2174, 2630], [374, 2636, 2173, 2673], [377, 2687, 2173, 2724], [421, 2762, 939, 2797], [421, 2802, 1413, 2838], [377, 242, 2175, 279], [376, 292, 2174, 329], [377, 343, 2174, 380], [377, 398, 469, 431], [376, 510, 1402, 578], [374, 628, 2174, 666], [377, 680, 2174, 717], [375, 731, 2173, 768], [376, 782, 906, 819], [438, 832, 1895, 870], [1007, 917, 2173, 982], [374, 1032, 1921, 1072], [438, 1084, 2174, 1121], [376, 1134, 2174, 1171], [375, 1185, 2173, 1222], [376, 1236, 2171, 1273], [377, 1287, 1461, 1324], [438, 1338, 2175, 1375], [376, 1388, 2174, 1425], [376, 1439, 1028, 1476], [438, 1481, 2171, 1528], [375, 1531, 2174, 1585], [376, 1592, 2173, 1629], [377, 1642, 2177, 1679], [377, 1690, 2175, 1731], [375, 1744, 2174, 1781], [374, 1794, 1619, 1832], [438, 1846, 2175, 1883], [375, 1896, 2173, 1933], [374, 1947, 2175, 1984], [375, 1997, 2174, 2035], [375, 2049, 1647, 2086], [376, 2154, 1167, 2209], [374, 2248, 2174, 2285], [377, 2299, 904, 2336], [438, 2349, 2173, 2386], [376, 2400, 1538, 2437], [913, 2483, 2173, 2545], [374, 2595, 2173, 2640], [1051, 2686, 1110, 2705], [760, 2698, 1790, 2748], [376, 242, 1826, 279], [753, 324, 1257, 349], [0, 0, 2550, 3300], [375, 445, 2170, 497], [376, 508, 1462, 545], [533, 590, 1238, 615], [496, 597, 2050, 655], [523, 642, 693, 661], [374, 711, 960, 748], [852, 793, 870, 806], [742, 800, 1120, 819], [705, 800, 2173, 865], [375, 915, 1660, 952], [689, 1026, 2173, 1091], [779, 1096, 829, 1115], [374, 1165, 2173, 1202], [376, 1206, 1647, 1254], [438, 1267, 2174, 1304], [376, 1314, 2176, 1355], [376, 1367, 2174, 1405], [376, 1419, 1325, 1456], [438, 1470, 2173, 1507], [376, 1521, 436, 1549], [633, 1610, 1914, 1651], [374, 1698, 2174, 1742], [376, 1756, 2173, 1793], [377, 1811, 535, 1844], [1064, 1925, 1616, 1986], [376, 2699, 2174, 2736], [376, 2746, 2173, 2783], [0, 0, 2550, 3300], [373, 239, 1235, 277], [397, 295, 1167, 329], [394, 334, 1611, 379], [394, 388, 668, 416], [393, 433, 1889, 470], [394, 481, 1100, 515], [394, 528, 1266, 562], [394, 574, 646, 601], [395, 619, 1892, 656], [394, 668, 1085, 695], [381, 714, 1268, 748], [381, 761, 646, 788], [381, 807, 1980, 841], [381, 854, 1793, 888], [381, 900, 1045, 928], [381, 947, 1777, 981], [381, 994, 1643, 1028], [381, 1040, 643, 1067], [381, 1087, 1044, 1121], [381, 1133, 1775, 1167], [0, 0, 2550, 3300], [378, 1226, 643, 1253], [378, 1273, 587, 1300], [378, 1321, 582, 1349], [378, 1366, 590, 1393], [378, 1413, 1520, 1447], [438, 1561, 2173, 1598], [376, 1612, 2174, 1649], [375, 1661, 2174, 1699], [376, 1712, 2174, 1750], [376, 1764, 2173, 1801], [376, 1815, 2176, 1852], [376, 1866, 1996, 1903], [438, 1917, 2174, 1954], [376, 1967, 2177, 2004], [374, 2018, 2175, 2055], [376, 2069, 2174, 2106], [376, 2120, 2177, 2157], [376, 2171, 2173, 2208], [376, 2218, 988, 2259], [438, 2272, 2173, 2309], [376, 2323, 2174, 2360], [374, 2374, 2173, 2411], [377, 2425, 2179, 2462], [376, 2535, 1198, 2573], [374, 2615, 2174, 2652], [376, 2666, 2174, 2703], [376, 2717, 2174, 2754], [376, 2767, 2172, 2804], [608, 1246, 1916, 1328], [376, 1440, 2175, 1477], [376, 1488, 2173, 1522], [375, 1536, 2173, 1569], [376, 1582, 2174, 1615], [376, 1629, 2174, 1662], [377, 1674, 2174, 1708], [376, 1721, 2174, 1755], [377, 1768, 2177, 1802], [375, 1814, 2174, 1848], [376, 1861, 2175, 1895], [376, 1907, 2173, 1941], [376, 1954, 993, 1988], [375, 2084, 2173, 2121], [376, 2135, 2175, 2172], [376, 2186, 2175, 2223], [376, 2237, 2174, 2274], [376, 2288, 2174, 2325], [376, 2339, 2173, 2376], [377, 2389, 2177, 2426], [376, 2440, 2173, 2477], [376, 2491, 2174, 2528], [375, 2542, 779, 2579], [438, 2593, 2172, 2630], [376, 2643, 2173, 2680], [376, 2694, 2174, 2731], [374, 2745, 2175, 2782], [376, 2796, 1903, 2832], [376, 228, 1314, 284], [374, 322, 2175, 359], [376, 373, 2174, 410], [376, 424, 620, 461], [438, 475, 2174, 512], [376, 525, 2175, 562], [375, 576, 2174, 613], [375, 627, 1340, 664], [438, 678, 2173, 715], [376, 729, 2176, 766], [376, 799, 1730, 837], [431, 876, 1091, 913], [427, 927, 1714, 972], [428, 993, 1716, 1031], [427, 1045, 1218, 1090], [427, 1111, 1159, 1149], [427, 1164, 1718, 1208], [427, 1230, 1728, 1268], [375, 1315, 2174, 1352], [376, 1365, 1478, 1402], [701, 2098, 1633, 2165], [375, 2225, 2174, 2262], [375, 2272, 2173, 2307], [377, 2320, 1420, 2354], [438, 2417, 2173, 2454], [376, 2468, 2174, 2505], [376, 2519, 2053, 2556], [438, 2570, 2174, 2607], [376, 2613, 2174, 2658], [376, 2664, 2174, 2708], [377, 2714, 2174, 2759], [376, 2773, 2177, 2810], [373, 239, 1395, 277], [397, 294, 1325, 334], [394, 347, 1156, 388], [394, 393, 1230, 427], [413, 439, 1473, 474], [393, 444, 409, 466], [394, 487, 1443, 521], [394, 524, 710, 561], [394, 574, 1576, 618], [395, 624, 1919, 661], [394, 677, 408, 700], [413, 673, 687, 700], [381, 719, 587, 746], [381, 765, 1475, 800], [381, 813, 1456, 840], [381, 850, 740, 890], [381, 905, 1578, 941], [381, 946, 1948, 987], [381, 999, 687, 1026], [381, 1045, 587, 1072], [381, 1092, 1212, 1126], [381, 1133, 750, 1171], [378, 1172, 973, 1229], [378, 1233, 1228, 1276], [378, 1284, 1274, 1322], [378, 1335, 587, 1362], [378, 1381, 1243, 1415], [378, 1428, 720, 1460], [378, 1472, 997, 1526], [378, 1530, 1231, 1573], [378, 1585, 1276, 1619], [378, 1632, 587, 1659], [378, 1679, 1175, 1713], [378, 1725, 590, 1752], [378, 1771, 1018, 1807], [377, 1921, 2173, 1958], [376, 1971, 1309, 2008], [438, 2022, 2174, 2059], [377, 2073, 2175, 2110], [376, 2124, 2174, 2161], [376, 2175, 2174, 2212], [374, 2225, 2172, 2262], [376, 2276, 2174, 2313], [375, 2321, 2173, 2365], [377, 2378, 785, 2415], [438, 2429, 1707, 2466], [376, 2539, 2175, 2577], [377, 2590, 2173, 2628], [377, 2642, 966, 2676], [856, 235, 1915, 271], [0, 0, 2550, 3300], [400, 342, 1586, 378], [0, 0, 2550, 3300], [855, 444, 1077, 481], [638, 556, 1909, 593], [439, 680, 2174, 717], [375, 731, 1100, 768], [1106, 811, 1441, 849], [376, 891, 2173, 929], [376, 943, 2174, 980], [376, 993, 2174, 1031], [376, 1045, 2172, 1082], [377, 1096, 1033, 1133], [438, 1146, 2174, 1184], [376, 1197, 2173, 1234], [376, 1248, 2177, 1285], [376, 1299, 2175, 1336], [377, 1342, 1994, 1387], [900, 1420, 1633, 1484], [1644, 1480, 1648, 1492], [1077, 1494, 1443, 1512], [374, 1545, 2173, 1590], [376, 1603, 2175, 1641], [376, 1653, 2091, 1691], [1657, 1724, 1764, 1766], [767, 1724, 1780, 1796], [1705, 1799, 1716, 1817], [785, 1775, 794, 1794], [1155, 1799, 1166, 1817], [374, 1851, 2173, 1888], [376, 1902, 2173, 1939], [375, 1945, 2173, 1990], [376, 2004, 768, 2032], [438, 2054, 2173, 2091], [375, 2094, 2174, 2142], [376, 2156, 2174, 2193], [376, 2207, 2174, 2244], [376, 2258, 2173, 2295], [375, 2308, 2172, 2345], [377, 2359, 1384, 2396], [438, 2410, 2174, 2447], [376, 2461, 2172, 2498], [375, 2512, 2173, 2549], [377, 2563, 1719, 2600], [376, 2674, 1704, 2718], [374, 2759, 2179, 2796], [374, 2810, 2173, 2847], [1259, 2935, 1295, 2964], [638, 1272, 2034, 1320], [640, 1333, 1896, 1358], [376, 1843, 2175, 1880], [375, 1892, 2173, 1926], [376, 1938, 2174, 1972], [377, 1985, 2177, 2019], [376, 2031, 2174, 2065], [375, 2078, 2173, 2112], [376, 2125, 2177, 2159], [377, 2171, 2173, 2205], [375, 2218, 885, 2252], [376, 2348, 2175, 2385], [375, 2399, 2174, 2436], [375, 2450, 2059, 2487], [438, 2501, 2173, 2538], [375, 2552, 2174, 2589], [376, 2602, 2177, 2639], [376, 2653, 2174, 2690], [376, 2704, 2173, 2741], [374, 2752, 2174, 2793], [376, 2806, 1272, 2843], [1259, 2935, 1291, 2963], [438, 242, 2173, 279], [375, 292, 2174, 329], [376, 343, 2173, 380], [376, 387, 2177, 432], [376, 445, 2173, 482], [376, 489, 2174, 534], [376, 550, 543, 583], [438, 597, 2180, 634], [376, 648, 2175, 685], [376, 692, 2173, 736], [375, 750, 2178, 787], [374, 801, 2174, 838], [376, 851, 1467, 888], [376, 953, 1306, 1008], [377, 1047, 2174, 1084], [376, 1098, 848, 1135], [932, 1161, 1397, 1197], [895, 1174, 2173, 1238], [374, 1265, 2174, 1313], [376, 1324, 1104, 1361], [761, 1388, 2173, 1440], [374, 1471, 2174, 1508], [375, 1522, 1493, 1559], [797, 1585, 1695, 1610], [761, 1592, 1786, 1650], [784, 1637, 958, 1656], [374, 1687, 1873, 1739], [767, 1765, 785, 1778], [631, 1772, 1916, 1830], [658, 1818, 817, 1837], [376, 1868, 1795, 1905], [621, 1943, 1561, 1968], [584, 1950, 2173, 2008], [611, 1995, 770, 2014], [438, 2045, 2177, 2086], [374, 2098, 2174, 2136], [377, 2150, 2174, 2187], [376, 2199, 2100, 2237], [438, 2251, 2174, 2288], [374, 2293, 2177, 2340], [376, 2350, 2174, 2391], [377, 2403, 2174, 2441], [374, 2453, 1277, 2491], [439, 2505, 2173, 2542], [376, 2556, 2175, 2593], [374, 2607, 2173, 2644], [375, 2658, 2173, 2695], [376, 2708, 1333, 2745], [438, 2759, 2173, 2796], [376, 2810, 1473, 2847], [1259, 2935, 1295, 2963], [1043, 261, 1607, 322], [376, 1039, 2179, 1076], [374, 1088, 2173, 1121], [374, 1132, 2179, 1169], [0, 0, 2550, 3300], [373, 1272, 1367, 1310], [394, 1328, 1280, 1371], [395, 1378, 2177, 1418], [439, 1425, 578, 1459], [381, 1472, 2177, 1512], [439, 1524, 578, 1554], [376, 1651, 1371, 1693], [374, 1757, 2174, 1798], [375, 1809, 2174, 1846], [376, 1858, 1723, 1900], [376, 1962, 1056, 2018], [376, 2057, 1675, 2094], [829, 2131, 2173, 2183], [376, 2224, 2175, 2261], [376, 2275, 1052, 2312], [438, 2326, 2179, 2363], [374, 2377, 2179, 2414], [376, 2427, 2175, 2465], [376, 2478, 2173, 2515], [375, 2529, 550, 2566], [438, 2580, 1298, 2617], [1042, 2654, 1437, 2701], [2097, 2694, 2173, 2729], [1040, 2724, 1507, 2765], [374, 2807, 1943, 2848], [1259, 2935, 1293, 2964], [438, 239, 2174, 280], [376, 285, 2173, 330], [376, 336, 2174, 380], [380, 391, 2174, 432], [380, 442, 549, 483], [438, 489, 2177, 534], [376, 546, 1576, 583], [438, 591, 1777, 636], [1047, 680, 2173, 728], [374, 780, 2178, 817], [376, 830, 2174, 865], [376, 881, 573, 909], [1128, 927, 2173, 971], [377, 1004, 1461, 1044], [1034, 1089, 1378, 1129], [1016, 1092, 2173, 1160], [1018, 1147, 1517, 1190], [438, 1235, 2174, 1272], [377, 1278, 2174, 1324], [375, 1336, 1071, 1371], [1538, 1459, 1641, 1504], [1394, 1518, 1798, 1560], [1078, 1577, 1413, 1621], [743, 1485, 1375, 1533], [1197, 1634, 1430, 1678], [1169, 1695, 1182, 1714], [993, 1696, 1467, 1796], [1081, 1754, 1370, 1797], [376, 1884, 1523, 1960], [1226, 1931, 1544, 1960], [1029, 1918, 2173, 2018], [1212, 1918, 1501, 2018], [438, 2046, 2174, 2091], [377, 2101, 1501, 2142], [438, 2155, 2173, 2192], [377, 2205, 2173, 2242], [376, 2256, 2174, 2293], [376, 2301, 2149, 2347], [438, 2358, 2175, 2395], [376, 2409, 2175, 2446], [377, 2459, 873, 2496], [980, 2502, 2173, 2553], [438, 2585, 2176, 2622], [376, 2633, 2174, 2674], [376, 2680, 2177, 2724], [376, 2728, 2174, 2803], [374, 2807, 2174, 2848], [1259, 2935, 1295, 2963], [373, 239, 1089, 277], [416, 296, 849, 330], [417, 339, 1198, 390], [479, 391, 1355, 436], [479, 441, 1151, 487], [479, 492, 1066, 537], [480, 541, 981, 616], [650, 581, 730, 614], [417, 620, 585, 650], [417, 674, 589, 706], [373, 785, 1175, 823], [416, 842, 852, 883], [417, 898, 810, 936], [479, 943, 1126, 993], [479, 995, 1255, 1039], [479, 1052, 651, 1083], [417, 1102, 585, 1132], [417, 1148, 590, 1182], [375, 1297, 2174, 1339], [376, 1348, 2173, 1385], [376, 1397, 2174, 1435], [375, 1448, 1766, 1486], [375, 1554, 1065, 1616], [375, 1648, 1464, 1688], [841, 1731, 2173, 1793], [374, 1843, 2175, 1884], [376, 1896, 2179, 1934], [375, 1948, 2174, 1985], [377, 1999, 2174, 2036], [375, 2050, 2174, 2087], [377, 2100, 891, 2128], [376, 2211, 1121, 2252], [374, 2290, 1211, 2331], [865, 2375, 2173, 2425], [376, 2475, 1680, 2512], [922, 2559, 2173, 2610], [374, 2657, 2175, 2706], [377, 2711, 1547, 2748], [1063, 2800, 1484, 2849], [1259, 2935, 1293, 2964], [376, 242, 2173, 279], [376, 292, 2174, 329], [376, 343, 1021, 380], [438, 394, 2174, 431], [375, 445, 1527, 482], [753, 520, 2173, 592], [374, 630, 1166, 668], [959, 708, 2173, 761], [374, 795, 1799, 838], [481, 877, 2068, 943], [724, 960, 1215, 1013], [374, 1050, 2174, 1100], [376, 1106, 1576, 1143], [940, 1182, 2173, 1234], [438, 1277, 2176, 1314], [377, 1327, 1461, 1356], [930, 1402, 2173, 1457], [374, 1495, 1690, 1550], [1474, 1589, 1759, 1639], [816, 1612, 1412, 1642], [771, 1620, 1777, 1702], [2076, 1628, 2173, 1663], [375, 1740, 2174, 1777], [375, 1791, 1460, 1828], [1345, 1866, 1842, 1926], [1431, 1937, 1752, 1987], [689, 1906, 2173, 1952], [701, 2026, 1342, 2047], [374, 2031, 1525, 2086], [438, 2092, 2174, 2129], [375, 2140, 1581, 2181], [375, 2252, 1285, 2294], [374, 2332, 2174, 2369], [376, 2383, 2173, 2420], [376, 2434, 1711, 2471], [438, 2485, 2173, 2525], [375, 2535, 2174, 2572], [374, 2586, 650, 2615], [870, 2628, 2173, 2679], [374, 2701, 2173, 2752], [377, 2752, 2173, 2797], [377, 2798, 1426, 2850], [1259, 2935, 1294, 2964], [373, 239, 909, 277], [417, 295, 979, 333], [417, 347, 823, 382], [417, 396, 981, 434], [479, 445, 1337, 486], [479, 496, 1474, 539], [479, 547, 1021, 588], [479, 601, 651, 632], [417, 651, 585, 681], [417, 704, 589, 737], [438, 851, 2174, 888], [376, 899, 2173, 940], [376, 953, 1226, 990], [904, 1032, 1595, 1052], [867, 1036, 1679, 1088], [374, 1138, 1162, 1175], [1041, 1227, 1506, 1268], [374, 1315, 2175, 1360], [376, 1373, 1286, 1410], [789, 1453, 1758, 1503], [1151, 1500, 1213, 1522], [377, 1572, 2174, 1609], [377, 1623, 1415, 1660], [376, 1737, 1021, 1781], [374, 1813, 2175, 1860], [375, 1873, 482, 1901], [889, 1915, 2173, 1966], [374, 1999, 2173, 2036], [376, 2047, 2173, 2088], [376, 2101, 2173, 2138], [376, 2152, 524, 2180], [376, 2280, 1493, 2333], [374, 2387, 2173, 2424], [376, 2438, 1354, 2475], [376, 2552, 887, 2596], [374, 2637, 2173, 2674], [377, 2688, 1063, 2725], [1024, 2770, 2173, 2841], [1259, 2935, 1294, 2963], [374, 242, 1182, 277], [437, 292, 2174, 329], [376, 343, 2174, 380], [376, 393, 2173, 431], [374, 445, 2175, 482], [376, 490, 2175, 536], [375, 546, 2173, 583], [376, 597, 661, 634], [842, 645, 2173, 709], [375, 751, 2172, 793], [376, 799, 2178, 840], [855, 920, 1292, 961], [376, 1453, 2173, 1493], [376, 1503, 2176, 1537], [376, 1549, 2174, 1583], [376, 1596, 1328, 1630], [438, 1692, 2174, 1730], [377, 1743, 2174, 1780], [376, 1794, 2175, 1831], [374, 1844, 2174, 1881], [376, 1895, 2174, 1932], [374, 1946, 1492, 1983], [376, 2057, 907, 2094], [374, 2136, 1432, 2173], [968, 2221, 1579, 2282], [374, 2332, 2177, 2369], [374, 2383, 2174, 2420], [374, 2433, 893, 2470], [438, 2484, 2173, 2521], [376, 2535, 2174, 2572], [376, 2586, 2174, 2623], [377, 2637, 543, 2665], [438, 2687, 2174, 2724], [373, 2738, 2177, 2775], [376, 2789, 2177, 2826], [1259, 2935, 1293, 2964], [373, 239, 893, 277], [417, 296, 1014, 333], [417, 347, 1057, 383], [417, 397, 981, 435], [479, 446, 1242, 491], [479, 503, 982, 537], [479, 547, 1282, 593], [479, 605, 1019, 638], [479, 652, 651, 683], [417, 702, 585, 732], [417, 753, 602, 788], [373, 867, 990, 905], [417, 923, 1100, 960], [417, 968, 1250, 1013], [417, 1024, 1004, 1062], [479, 1075, 958, 1113], [540, 1124, 814, 1169], [479, 1176, 605, 1206], [480, 1221, 764, 1270], [479, 1278, 958, 1316], [543, 1324, 936, 1371], [479, 1380, 605, 1410], [479, 1431, 641, 1462], [417, 1481, 585, 1511], [417, 1533, 591, 1567], [375, 1682, 2174, 1719], [376, 1732, 1770, 1770], [376, 1843, 1357, 1881], [374, 1923, 2175, 1960], [376, 1974, 949, 2008], [1087, 2022, 2173, 2078], [377, 2110, 2173, 2152], [377, 2165, 892, 2202], [1045, 2208, 2173, 2258], [374, 2291, 2175, 2336], [375, 2342, 2173, 2379], [376, 2393, 2173, 2430], [377, 2444, 1068, 2481], [438, 2494, 2174, 2532], [376, 2538, 2174, 2583], [376, 2596, 2162, 2633], [865, 2680, 1681, 2731], [1143, 2737, 1160, 2750], [1259, 2935, 1294, 2964], [374, 242, 1216, 279], [917, 329, 2173, 387], [374, 442, 2174, 479], [376, 492, 2173, 530], [376, 543, 2175, 582], [1035, 631, 1511, 687], [376, 736, 2174, 773], [375, 786, 1809, 823], [993, 874, 2173, 922], [374, 968, 2175, 1005], [376, 1019, 2173, 1056], [376, 1070, 2174, 1107], [376, 1120, 495, 1157], [836, 1208, 1293, 1256], [810, 1277, 1737, 1325], [374, 1369, 2174, 1420], [374, 1427, 2173, 1464], [376, 1476, 1930, 1522], [438, 1528, 2174, 1565], [376, 1579, 2178, 1616], [373, 1676, 1410, 1714], [417, 1733, 1826, 1770], [417, 1784, 838, 1819], [417, 1835, 950, 1872], [459, 1880, 1075, 1940], [628, 1949, 665, 1969], [459, 1956, 940, 2009], [460, 2017, 989, 2077], [460, 2085, 937, 2145], [417, 2151, 981, 2189], [480, 2195, 1007, 2247], [479, 2253, 651, 2284], [417, 2303, 585, 2333], [418, 2352, 969, 2400], [417, 2405, 760, 2435], [376, 2578, 1460, 2616], [374, 2658, 2174, 2695], [376, 2705, 2172, 2746], [376, 2759, 2178, 2796], [374, 2804, 2175, 2851], [1255, 2935, 1295, 2964], [373, 239, 1435, 277], [417, 296, 1100, 333], [417, 340, 1198, 386], [417, 396, 1004, 434], [624, 443, 902, 487], [480, 468, 800, 507], [479, 509, 958, 547], [543, 553, 1039, 609], [576, 601, 888, 620], [542, 621, 1080, 666], [479, 674, 605, 704], [479, 726, 641, 757], [417, 776, 585, 806], [417, 828, 591, 862], [375, 975, 2174, 1012], [376, 1025, 562, 1062], [690, 1109, 1143, 1122], [557, 1135, 1735, 1193], [582, 1186, 1046, 1203], [678, 1204, 1154, 1223], [892, 1186, 1022, 1204], [1261, 1248, 1769, 1293], [848, 1264, 1989, 1339], [892, 1313, 1767, 1361], [374, 1409, 2174, 1446], [376, 1460, 1058, 1497], [438, 1511, 2173, 1548], [377, 1562, 2173, 1599], [376, 1612, 618, 1640], [1198, 1684, 1225, 1697], [497, 1691, 1360, 1755], [775, 1750, 792, 1763], [1322, 1788, 1349, 1801], [667, 1807, 1830, 1835], [0, 0, 2550, 3300], [1310, 1889, 1343, 1902], [374, 1949, 2173, 1986], [377, 2000, 1640, 2037], [376, 2110, 928, 2148], [374, 2190, 2174, 2227], [376, 2241, 2174, 2279], [375, 2279, 2173, 2329], [376, 2342, 1322, 2379], [438, 2393, 2176, 2430], [379, 2444, 1089, 2481], [1072, 2531, 1475, 2587], [376, 2634, 2173, 2672], [374, 2685, 1377, 2722], [943, 2766, 1604, 2813], [968, 2815, 1065, 2834], [1255, 2935, 1291, 2963], [374, 241, 2180, 279], [376, 292, 989, 329], [999, 382, 1509, 423], [997, 445, 1549, 487], [997, 508, 1507, 549], [374, 603, 2174, 641], [375, 653, 2173, 691], [379, 705, 2173, 742], [376, 756, 2174, 793], [377, 807, 2175, 844], [377, 857, 2179, 896], [437, 908, 2171, 945], [376, 959, 1014, 996], [925, 1049, 1308, 1090], [911, 1102, 1637, 1160], [913, 1172, 1316, 1212], [374, 1267, 1758, 1304], [975, 1351, 1573, 1402], [1165, 1427, 1276, 1458], [1024, 1420, 1277, 1520], [374, 1567, 2179, 1604], [374, 1617, 2175, 1655], [375, 1669, 1951, 1717], [438, 1719, 1717, 1756], [1375, 1806, 1402, 1819], [975, 1831, 1571, 1896], [1363, 1901, 1413, 1920], [377, 1969, 2175, 2019], [377, 2027, 752, 2064], [1436, 2118, 1463, 2131], [777, 2110, 1603, 2235], [1424, 2213, 1474, 2232], [769, 2252, 1234, 2298], [775, 2320, 1779, 2376], [775, 2392, 1538, 2441], [376, 2491, 2175, 2532], [376, 2541, 2173, 2582], [376, 2594, 2058, 2634], [1255, 2935, 1295, 2963], [438, 242, 2174, 279], [375, 292, 911, 329], [827, 368, 1438, 429], [789, 450, 1646, 503], [831, 500, 879, 518], [789, 539, 1758, 593], [831, 588, 948, 608], [789, 629, 1624, 676], [852, 678, 948, 691], [374, 732, 2173, 778], [376, 790, 976, 827], [853, 866, 1698, 921], [877, 937, 1525, 960], [850, 938, 1564, 993], [374, 1029, 2109, 1072], [1282, 1109, 1412, 1146], [1339, 1171, 1356, 1199], [949, 1224, 1757, 1278], [1427, 1135, 1996, 1181], [551, 1140, 1261, 1181], [590, 1152, 738, 1175], [632, 1168, 863, 1206], [376, 1316, 2174, 1353], [376, 1367, 2173, 1404], [377, 1417, 2174, 1456], [376, 1469, 937, 1506], [987, 1557, 1735, 1589], [0, 0, 2550, 3300], [1233, 1623, 1250, 1636], [987, 1659, 1467, 1709], [376, 1750, 2177, 1793], [376, 1802, 2179, 1839], [376, 1914, 931, 1949], [376, 1997, 1828, 2036], [507, 2073, 1996, 2115], [460, 2084, 2173, 2163], [374, 2200, 2179, 2254], [376, 2260, 2174, 2297], [375, 2311, 616, 2339], [867, 2344, 1485, 2376], [820, 2351, 2173, 2421], [374, 2444, 2163, 2498], [960, 2535, 2173, 2588], [374, 2640, 2177, 2692], [377, 2706, 1032, 2743], [682, 2780, 2173, 2859], [1255, 2935, 1293, 2964], [374, 232, 2172, 286], [377, 292, 2177, 329], [376, 334, 2174, 387], [377, 394, 2174, 431], [377, 445, 1444, 482], [376, 559, 989, 603], [376, 634, 1886, 688], [438, 691, 2175, 741], [376, 753, 947, 790], [1743, 718, 1854, 742], [943, 837, 1021, 861], [482, 844, 1997, 898], [435, 861, 2173, 936], [655, 939, 1009, 968], [374, 1016, 2174, 1057], [376, 1069, 1109, 1107], [438, 1118, 2174, 1159], [376, 1171, 1899, 1209], [922, 1260, 2173, 1331], [374, 1375, 2173, 1419], [376, 1426, 2163, 1464], [1009, 1510, 2173, 1562], [374, 1608, 2179, 1646], [377, 1660, 1215, 1697], [438, 1711, 2174, 1748], [376, 1752, 1203, 1798], [860, 1842, 2173, 1920], [374, 1965, 2173, 2002], [376, 2007, 2174, 2050], [376, 2057, 2175, 2104], [377, 2118, 2175, 2155], [376, 2159, 2174, 2213], [376, 2219, 2172, 2256], [374, 2270, 1527, 2307], [376, 2398, 1235, 2451], [374, 2505, 2173, 2542], [374, 2547, 2173, 2594], [376, 2607, 1429, 2641], [438, 2658, 2174, 2695], [376, 2708, 2176, 2745], [375, 2759, 2244, 2796], [376, 2810, 551, 2847], [1255, 2935, 1295, 2963], [376, 228, 1231, 284], [377, 313, 2178, 360], [376, 373, 2172, 410], [376, 424, 451, 452], [376, 534, 1189, 572], [374, 614, 1364, 651], [419, 670, 2175, 715], [468, 725, 2173, 766], [469, 778, 512, 814], [405, 845, 2179, 888], [468, 898, 1962, 939], [711, 1049, 1889, 1079], [1931, 1088, 1974, 1115], [566, 1111, 796, 1132], [566, 1138, 809, 1160], [566, 1166, 840, 1188], [492, 1188, 801, 1216], [567, 1223, 692, 1241], [619, 1252, 703, 1269], [620, 1279, 676, 1297], [567, 1307, 805, 1329], [567, 1336, 740, 1357], [640, 1653, 1151, 1679], [807, 1692, 1802, 1719], [825, 1748, 1700, 1777], [375, 1843, 2173, 1891], [377, 1904, 1303, 1941], [438, 2003, 2174, 2040], [376, 2054, 894, 2082], [439, 2138, 1393, 2175], [439, 2205, 1506, 2242], [439, 2272, 1694, 2309], [439, 2340, 1400, 2377], [439, 2407, 1171, 2444], [439, 2465, 2178, 2513], [439, 2542, 2173, 2579], [479, 2593, 791, 2630], [439, 2660, 1984, 2697], [439, 2728, 2175, 2765], [478, 2779, 1074, 2816], [1255, 2935, 1293, 2964], [438, 242, 2174, 279], [375, 292, 2174, 329], [376, 343, 2173, 380], [376, 394, 1937, 431], [438, 439, 2173, 482], [376, 495, 2136, 533], [438, 546, 2173, 583], [377, 597, 842, 625], [439, 677, 2174, 714], [479, 728, 1224, 765], [439, 809, 2174, 846], [479, 854, 2173, 898], [480, 911, 601, 948], [439, 990, 2175, 1031], [479, 1044, 2173, 1081], [479, 1094, 2173, 1131], [478, 1145, 2175, 1182], [479, 1196, 1066, 1225], [439, 1278, 2175, 1315], [479, 1329, 2173, 1366], [479, 1379, 2175, 1416], [479, 1430, 2173, 1467], [478, 1481, 2177, 1518], [479, 1532, 1405, 1569], [376, 1641, 848, 1671], [374, 1715, 2174, 1759], [374, 1772, 2173, 1809], [377, 1823, 2174, 1860], [376, 1874, 2173, 1911], [375, 1924, 1778, 1961], [376, 2034, 1086, 2072], [376, 2114, 2174, 2151], [377, 2165, 2174, 2202], [376, 2215, 2174, 2252], [376, 2266, 2173, 2303], [377, 2317, 2179, 2354], [374, 2368, 2176, 2405], [376, 2419, 2173, 2456], [376, 2469, 2173, 2506], [376, 2520, 1360, 2557], [438, 2571, 2177, 2608], [374, 2622, 2174, 2659], [376, 2673, 1379, 2710], [439, 2759, 2173, 2796], [478, 2810, 2177, 2847], [1255, 2935, 1294, 2964], [972, 310, 1627, 366], [643, 426, 1362, 473], [0, 0, 2550, 3300], [470, 553, 1110, 617], [646, 642, 1188, 678], [0, 0, 2550, 3300], [414, 758, 1396, 857], [412, 955, 600, 995], [471, 1158, 600, 1201], [1175, 1452, 1423, 1491], [375, 1594, 2173, 1641], [377, 1654, 1798, 1691], [670, 1782, 1864, 1830], [782, 1868, 1757, 1905], [782, 1959, 1768, 1996], [782, 2010, 1747, 2047], [479, 2166, 2173, 2203], [479, 2217, 2174, 2254], [478, 2268, 2174, 2305], [479, 2319, 2173, 2356], [479, 2374, 568, 2398], [439, 2454, 2174, 2491], [478, 2504, 2173, 2541], [480, 2555, 1326, 2592], [439, 2639, 2175, 2676], [478, 2690, 2175, 2727], [479, 2741, 1463, 2778], [1255, 2935, 1294, 2963], [969, 310, 1631, 378], [475, 426, 1362, 491], [504, 473, 600, 489], [645, 498, 1160, 534], [473, 570, 1345, 616], [417, 642, 1188, 696], [417, 699, 1265, 783], [425, 822, 600, 865], [418, 872, 448, 900], [424, 906, 449, 924], [425, 929, 600, 970], [417, 981, 448, 1011], [420, 1014, 448, 1047], [417, 1050, 600, 1092], [493, 1184, 600, 1211], [494, 1305, 600, 1332], [767, 1352, 1834, 1368], [730, 1395, 1860, 1431], [1230, 1452, 1371, 1491], [376, 1594, 2179, 1641], [375, 1654, 1621, 1691], [376, 1787, 1226, 1825], [374, 1866, 2177, 1903], [374, 1917, 2173, 1954], [376, 1968, 2173, 2005], [375, 2023, 622, 2056], [439, 2070, 2173, 2107], [377, 2120, 716, 2148], [419, 2181, 2173, 2222], [468, 2232, 2172, 2273], [468, 2285, 1160, 2322], [405, 2356, 2174, 2394], [467, 2405, 1114, 2446], [438, 2492, 2174, 2529], [374, 2543, 2172, 2580], [375, 2593, 1593, 2630], [438, 2644, 2175, 2681], [376, 2695, 2156, 2732], [1255, 2935, 1293, 2964], [1066, 313, 1536, 378], [643, 426, 1362, 472], [475, 498, 1160, 558], [644, 570, 1344, 616], [417, 642, 1188, 696], [425, 714, 1265, 778], [421, 789, 457, 843], [425, 847, 447, 865], [425, 872, 448, 900], [425, 906, 448, 924], [425, 929, 600, 963], [417, 981, 448, 1011], [475, 1129, 600, 1157], [475, 1327, 1834, 1368], [730, 1395, 1860, 1431], [1230, 1452, 1371, 1491], [376, 1594, 2179, 1641], [375, 1654, 2173, 1691], [375, 1705, 529, 1742], [376, 1832, 1302, 1876], [376, 1916, 1058, 1954], [375, 1987, 2173, 2034], [375, 2047, 2173, 2084], [377, 2092, 2176, 2135], [376, 2142, 2173, 2185], [376, 2199, 1408, 2236], [438, 2250, 2174, 2287], [377, 2301, 2174, 2338], [376, 2349, 2173, 2390], [377, 2402, 2177, 2440], [376, 2452, 2173, 2490], [377, 2504, 2174, 2541], [377, 2555, 2042, 2592], [438, 2606, 2173, 2643], [377, 2657, 2176, 2694], [377, 2704, 2174, 2745], [374, 2758, 2174, 2795], [1255, 2935, 1294, 2964], [714, 261, 1071, 299], [1522, 262, 1948, 300], [1403, 332, 1799, 357], [494, 296, 529, 325], [562, 331, 958, 357], [562, 362, 1780, 388], [562, 394, 1719, 420], [522, 426, 1700, 463], [494, 459, 553, 479], [457, 529, 478, 562], [457, 605, 539, 643], [494, 759, 2074, 799], [1363, 834, 1969, 854], [645, 845, 1987, 893], [807, 898, 1799, 928], [1666, 960, 1700, 989], [825, 961, 858, 989], [376, 1056, 2175, 1093], [374, 1097, 1839, 1143], [715, 1229, 1073, 1266], [562, 1283, 669, 1318], [562, 1329, 648, 1350], [1522, 1229, 1948, 1267], [1875, 1293, 2072, 1301], [1403, 1283, 1510, 1318], [1403, 1329, 1490, 1350], [1374, 1361, 1564, 1394], [807, 1867, 984, 1891], [825, 1927, 858, 1955], [1719, 1839, 1725, 1858], [1673, 1865, 1799, 1895], [1666, 1926, 1700, 1955], [376, 2022, 2174, 2069], [376, 2082, 1484, 2119], [375, 2215, 2175, 2252], [377, 2266, 1696, 2303], [376, 2377, 1060, 2415], [375, 2447, 2173, 2501], [376, 2506, 2174, 2548], [377, 2558, 2173, 2595], [376, 2609, 2175, 2646], [376, 2659, 2174, 2697], [376, 2704, 2172, 2748], [375, 2761, 1746, 2798], [1256, 2935, 1295, 2964], [548, 259, 865, 284], [1137, 259, 1453, 284], [1071, 305, 1166, 318], [1071, 326, 1533, 343], [1737, 259, 2031, 284], [1660, 305, 1755, 318], [1660, 326, 1776, 339], [435, 654, 452, 667], [459, 665, 2133, 685], [647, 691, 1945, 706], [657, 739, 1868, 768], [376, 835, 2175, 872], [375, 876, 2179, 930], [376, 937, 848, 974], [535, 1054, 893, 1079], [1124, 1054, 1482, 1079], [1724, 1054, 2060, 1079], [440, 1076, 2069, 1101], [492, 1099, 2045, 1121], [799, 1116, 2070, 1146], [797, 1138, 2066, 1165], [794, 1159, 2060, 1186], [1717, 1182, 1963, 1205], [1891, 1199, 1965, 1219], [1596, 1228, 1612, 1238], [1596, 1240, 1612, 1261], [1636, 1257, 1655, 1265], [1592, 1263, 1635, 1284], [1596, 1286, 1607, 1295], [1592, 1297, 1607, 1309], [1636, 1347, 1655, 1355], [1618, 1353, 1789, 1379], [1029, 1438, 1655, 1457], [937, 1456, 2139, 1494], [1250, 1529, 1873, 1558], [1042, 1614, 2054, 1645], [1024, 1643, 1630, 1656], [1071, 1660, 1755, 1673], [1071, 1681, 2063, 1703], [1071, 1700, 2064, 1728], [1024, 1724, 2028, 1747], [1246, 2094, 1866, 2123], [376, 2190, 2174, 2227], [377, 2231, 2174, 2285], [376, 2292, 1317, 2329], [438, 2424, 2174, 2465], [377, 2476, 2173, 2513], [376, 2527, 2174, 2564], [375, 2578, 2173, 2615], [377, 2622, 2177, 2665], [376, 2678, 2173, 2720], [375, 2730, 1037, 2767], [1256, 2935, 1291, 2964], [438, 242, 2174, 279], [376, 291, 2173, 329], [377, 342, 2174, 380], [377, 388, 2174, 431], [377, 445, 2172, 482], [377, 496, 2173, 533], [376, 546, 2174, 583], [376, 597, 2136, 634], [376, 708, 1077, 746], [375, 778, 2179, 826], [375, 837, 2176, 875], [375, 888, 2173, 929], [376, 931, 937, 984], [773, 1070, 1877, 1103], [1670, 1609, 1676, 1626], [857, 1631, 1742, 1658], [870, 1690, 1655, 1719], [375, 1785, 2174, 1833], [377, 1845, 757, 1882], [376, 1999, 1423, 2037], [374, 2078, 2174, 2115], [376, 2129, 684, 2157], [889, 2171, 2173, 2233], [374, 2266, 2177, 2314], [376, 2326, 2172, 2363], [377, 2377, 2173, 2414], [377, 2428, 608, 2457], [438, 2479, 2174, 2516], [376, 2529, 2177, 2566], [375, 2580, 1173, 2617], [439, 2655, 1507, 2703], [439, 2722, 2175, 2776], [480, 2782, 2175, 2827], [1256, 2935, 1295, 2964], [715, 247, 1871, 295], [580, 337, 1954, 382], [1585, 410, 1600, 425], [1555, 545, 1743, 600], [588, 689, 1202, 749], [615, 780, 1213, 865], [1345, 689, 1945, 749], [1354, 781, 1954, 824], [1650, 829, 1947, 857], [729, 1132, 1805, 1169], [680, 1252, 2168, 1283], [479, 1263, 2179, 1338], [479, 1343, 2174, 1383], [480, 1394, 755, 1422], [439, 1451, 2172, 1499], [480, 1503, 2179, 1578], [480, 1582, 1282, 1623], [439, 1643, 1395, 1697], [438, 1737, 2173, 1774], [376, 1788, 2174, 1825], [375, 1838, 2174, 1876], [376, 1889, 2173, 1926], [377, 1940, 1599, 1977], [438, 1988, 2180, 2029], [376, 2032, 2175, 2089], [375, 2093, 2174, 2130], [376, 2143, 2176, 2180], [377, 2194, 1086, 2231], [376, 2305, 1160, 2343], [374, 2385, 2174, 2422], [375, 2434, 2174, 2472], [377, 2486, 2173, 2523], [376, 2527, 2173, 2575], [375, 2588, 2174, 2625], [375, 2639, 935, 2676], [438, 2687, 2174, 2726], [376, 2739, 2175, 2777], [376, 2788, 2179, 2829], [1256, 2935, 1293, 2964], [306, 631, 328, 960], [306, 1208, 328, 1537], [374, 242, 2171, 279], [377, 283, 2175, 331], [377, 343, 2173, 380], [376, 394, 2177, 431], [376, 445, 536, 473], [417, 534, 2256, 559], [1003, 568, 1711, 593], [360, 631, 1655, 662], [337, 655, 1706, 688], [972, 691, 1660, 731], [974, 739, 1655, 759], [337, 768, 1655, 807], [570, 802, 1655, 855], [822, 849, 2237, 871], [972, 870, 2249, 913], [337, 907, 2255, 946], [397, 944, 2261, 986], [397, 979, 2267, 1007], [572, 1006, 2276, 1028], [558, 1024, 2241, 1057], [609, 1054, 2052, 1081], [417, 1111, 2254, 1138], [977, 1208, 1655, 1231], [977, 1232, 1655, 1265], [977, 1269, 1660, 1294], [977, 1295, 1655, 1309], [974, 1316, 1655, 1337], [977, 1345, 1655, 1359], [977, 1359, 1655, 1385], [974, 1387, 1655, 1407], [972, 1408, 1655, 1425], [972, 1426, 1655, 1440], [972, 1448, 1655, 1478], [974, 1475, 1655, 1487], [972, 1489, 1655, 1506], [973, 1508, 1655, 1538], [1026, 1529, 1838, 1568], [397, 1565, 1959, 1585], [397, 1596, 2288, 1634], [609, 1631, 2050, 1658], [376, 1746, 2174, 1783], [376, 1797, 1010, 1834], [438, 1906, 2176, 1943], [376, 1947, 2175, 1995], [376, 2007, 2174, 2044], [375, 2056, 2175, 2095], [376, 2099, 2174, 2147], [377, 2158, 2173, 2197], [376, 2203, 2174, 2253], [375, 2261, 2174, 2298], [376, 2312, 863, 2349], [376, 2423, 1426, 2461], [376, 2503, 2174, 2540], [376, 2553, 2177, 2590], [375, 2604, 2173, 2641], [377, 2655, 2174, 2692], [376, 2699, 2174, 2744], [374, 2757, 644, 2794], [1256, 2935, 1295, 2964], [374, 270, 2173, 307], [376, 320, 1212, 358], [0, 0, 2550, 3300], [850, 486, 1689, 524], [850, 537, 1689, 567], [850, 588, 1689, 618], [850, 639, 1689, 669], [850, 689, 1689, 719], [438, 847, 2175, 884], [376, 897, 2173, 934], [376, 948, 2173, 985], [375, 990, 2178, 1037], [374, 1040, 1496, 1088], [376, 1164, 1300, 1208], [374, 1249, 2173, 1286], [377, 1290, 2173, 1344], [376, 1350, 951, 1387], [376, 1461, 1299, 1499], [376, 1541, 2174, 1578], [376, 1589, 2174, 1628], [375, 1642, 2173, 1679], [376, 1693, 2173, 1730], [376, 1744, 1231, 1781], [438, 1794, 2174, 1832], [376, 1845, 2174, 1882], [376, 1895, 2173, 1933], [376, 1947, 660, 1984], [931, 2017, 2173, 2084], [1331, 2087, 1451, 2112], [374, 2143, 962, 2186], [374, 2379, 1688, 2419], [438, 2430, 2173, 2467], [376, 2477, 2179, 2518], [374, 2531, 2175, 2568], [375, 2582, 2174, 2619], [374, 2633, 2173, 2670], [377, 2684, 2173, 2721], [377, 2734, 2174, 2771], [376, 2785, 665, 2820], [1256, 2935, 1293, 2964], [438, 242, 2175, 279], [374, 292, 2175, 329], [376, 343, 2175, 380], [375, 385, 2173, 438], [375, 442, 2173, 496], [376, 501, 2173, 539], [376, 544, 2177, 597], [375, 604, 1074, 641], [438, 655, 2173, 692], [377, 705, 2174, 742], [375, 756, 2173, 793], [376, 798, 2174, 851], [377, 858, 620, 895], [437, 899, 2107, 953], [992, 998, 2173, 1062], [376, 1112, 2175, 1166], [375, 1172, 2178, 1209], [376, 1223, 1054, 1260], [439, 1314, 920, 1352], [439, 1382, 1672, 1420], [439, 1449, 2173, 1487], [479, 1501, 2131, 1538], [439, 1567, 1379, 1605], [439, 1635, 1197, 1673], [439, 1702, 1265, 1740], [439, 1770, 1046, 1808], [439, 1838, 2174, 1875], [479, 1889, 2174, 1926], [479, 1940, 1605, 1969], [376, 2032, 2173, 2069], [375, 2083, 2174, 2120], [376, 2134, 2177, 2171], [374, 2184, 2177, 2221], [374, 2235, 2175, 2272], [376, 2280, 2174, 2323], [375, 2337, 2174, 2374], [377, 2388, 2174, 2425], [375, 2431, 2172, 2489], [688, 2493, 696, 2506], [377, 2500, 1142, 2535], [493, 2527, 1004, 2549], [438, 2558, 2175, 2595], [374, 2609, 2177, 2646], [374, 2659, 2177, 2696], [376, 2710, 1396, 2747], [1256, 2935, 1294, 2964], [374, 270, 2174, 306], [376, 319, 2173, 352], [376, 365, 2174, 399], [375, 412, 2177, 446], [376, 459, 932, 492], [761, 530, 1789, 567], [760, 622, 1687, 657], [762, 673, 1687, 710], [761, 723, 1687, 751], [761, 773, 1687, 811], [761, 825, 1694, 854], [761, 875, 1687, 905], [761, 926, 1698, 956], [760, 976, 1687, 1014], [438, 1130, 2177, 1168], [376, 1181, 1728, 1219], [1412, 1262, 1602, 1307], [929, 1293, 1617, 1364], [374, 1408, 1649, 1445], [438, 1459, 2173, 1496], [376, 1509, 2175, 1546], [376, 1560, 2173, 1597], [377, 1611, 2173, 1648], [375, 1662, 2172, 1699], [375, 1713, 2030, 1750], [439, 1794, 2174, 1831], [480, 1845, 2175, 1882], [478, 1896, 1037, 1933], [439, 1967, 2173, 2004], [480, 2018, 1371, 2055], [439, 2089, 2180, 2126], [479, 2140, 2174, 2177], [478, 2191, 2174, 2228], [478, 2241, 1310, 2278], [439, 2312, 2174, 2349], [480, 2363, 2174, 2400], [479, 2414, 2175, 2451], [478, 2465, 2173, 2502], [480, 2516, 648, 2553], [439, 2587, 2177, 2624], [480, 2637, 2175, 2674], [478, 2688, 618, 2716], [439, 2759, 2180, 2796], [479, 2810, 1328, 2847], [1256, 2935, 1294, 2964], [309, 346, 331, 1666], [309, 1883, 331, 2180], [350, 236, 859, 265], [343, 281, 374, 300], [401, 471, 553, 488], [432, 494, 497, 507], [432, 516, 572, 529], [401, 538, 480, 555], [414, 560, 540, 574], [401, 583, 536, 600], [400, 605, 463, 618], [400, 627, 464, 640], [664, 668, 701, 688], [584, 700, 683, 726], [468, 668, 504, 688], [350, 751, 859, 780], [446, 803, 517, 818], [343, 810, 416, 830], [401, 986, 553, 1003], [432, 1008, 497, 1021], [432, 1031, 572, 1044], [401, 1053, 480, 1070], [414, 1075, 540, 1088], [401, 1098, 536, 1115], [400, 1120, 463, 1133], [400, 1142, 464, 1155], [629, 1183, 839, 1202], [584, 1215, 683, 1241], [452, 1183, 489, 1202], [376, 1266, 820, 1295], [407, 1299, 450, 1310], [451, 1306, 529, 1320], [343, 1307, 374, 1327], [401, 1501, 553, 1518], [432, 1523, 497, 1536], [432, 1545, 572, 1558], [432, 1568, 480, 1585], [414, 1590, 540, 1603], [401, 1612, 536, 1629], [400, 1634, 463, 1647], [400, 1657, 464, 1670], [620, 1698, 837, 1717], [584, 1730, 683, 1756], [438, 1698, 475, 1717], [399, 1781, 812, 1810], [400, 1814, 567, 1842], [401, 2016, 553, 2033], [432, 2038, 497, 2051], [432, 2060, 572, 2073], [401, 2082, 480, 2099], [414, 2104, 540, 2118], [401, 2127, 536, 2144], [400, 2149, 463, 2162], [400, 2171, 464, 2184], [975, 346, 997, 1666], [975, 1883, 997, 2180], [1009, 287, 1040, 307], [1009, 801, 1068, 826], [1016, 236, 1520, 265], [1068, 283, 1255, 311], [1106, 471, 1219, 488], [1106, 494, 1163, 507], [1106, 516, 1238, 529], [1106, 538, 1146, 555], [1106, 561, 1206, 574], [1106, 583, 1202, 600], [1066, 605, 1129, 618], [1066, 627, 1130, 640], [1428, 668, 1462, 688], [1240, 668, 1277, 688], [1250, 700, 1349, 726], [1052, 668, 1088, 688], [1016, 751, 1525, 780], [1097, 798, 1238, 814], [1186, 810, 1243, 823], [1106, 986, 1219, 1003], [1106, 1008, 1163, 1021], [1106, 1031, 1238, 1044], [1106, 1053, 1146, 1070], [1106, 1075, 1206, 1088], [1106, 1098, 1202, 1115], [1066, 1142, 1130, 1155], [1232, 1183, 1443, 1202], [1250, 1215, 1349, 1241], [1056, 1183, 1093, 1202], [1043, 1266, 1486, 1295], [1009, 1298, 1140, 1328], [1067, 1501, 1219, 1518], [1106, 1523, 1163, 1536], [1106, 1545, 1238, 1558], [1106, 1568, 1146, 1585], [1080, 1590, 1206, 1603], [1067, 1612, 1202, 1629], [1066, 1634, 1129, 1647], [1066, 1657, 1130, 1670], [1014, 1502, 1040, 1521], [1363, 1698, 1396, 1717], [1250, 1730, 1349, 1756], [1175, 1698, 1212, 1717], [1048, 1781, 1487, 1810], [1089, 1814, 1230, 1828], [1137, 1820, 1254, 1837], [1106, 2016, 1219, 2033], [1106, 2038, 1163, 2051], [1106, 2060, 1238, 2073], [1106, 2082, 1146, 2099], [1106, 2105, 1206, 2118], [1106, 2127, 1202, 2144], [1066, 2149, 1129, 2162], [1066, 2171, 1477, 2190], [1307, 2212, 1338, 2232], [1250, 2244, 1349, 2270], [1129, 2212, 1163, 2232], [1641, 346, 1663, 1666], [1641, 1883, 1663, 2180], [1682, 236, 2191, 265], [1757, 287, 1876, 307], [1772, 471, 1885, 488], [1772, 494, 1829, 507], [1772, 516, 1904, 529], [1772, 538, 1812, 555], [1772, 561, 1872, 574], [1772, 583, 1868, 600], [1732, 605, 1795, 618], [1732, 627, 1796, 640], [1680, 488, 1706, 507], [2001, 668, 2035, 688], [1916, 700, 2015, 726], [1814, 668, 1851, 688], [1729, 752, 2143, 781], [1733, 785, 1843, 801], [1715, 798, 1727, 807], [1772, 986, 1885, 1003], [1772, 1008, 1829, 1021], [1772, 1031, 1904, 1044], [1772, 1053, 1812, 1070], [1772, 1075, 1872, 1088], [1772, 1098, 1868, 1115], [1732, 1142, 1796, 1155], [1944, 1183, 2160, 1202], [1916, 1215, 2015, 1241], [1762, 1183, 1798, 1202], [1745, 1266, 2125, 1295], [1733, 1501, 1885, 1518], [1772, 1523, 1829, 1536], [1772, 1545, 1904, 1558], [1772, 1568, 1812, 1585], [1746, 1590, 1872, 1603], [1733, 1612, 1868, 1629], [1732, 1634, 1795, 1647], [1732, 1657, 1796, 1670], [1858, 1698, 2237, 1717], [1916, 1730, 2015, 1756], [1772, 2016, 1885, 2033], [1772, 2038, 1829, 2051], [1772, 2060, 1904, 2073], [1772, 2082, 1812, 2099], [1772, 2105, 1872, 2118], [1772, 2127, 1868, 2144], [1732, 2149, 1795, 2162], [1732, 2171, 1796, 2184], [1891, 2212, 2093, 2232], [1916, 2244, 2015, 2270], [1715, 2212, 1749, 2232], [375, 2356, 2173, 2393], [376, 2406, 1158, 2443], [438, 2540, 2179, 2577], [374, 2591, 2174, 2628], [375, 2641, 2175, 2678], [377, 2692, 2175, 2729], [376, 2743, 1993, 2780], [1256, 2935, 1293, 2964], [350, 236, 859, 265], [702, 471, 851, 488], [751, 494, 796, 507], [751, 516, 870, 529], [699, 538, 778, 555], [712, 560, 838, 574], [699, 583, 834, 600], [698, 605, 761, 618], [698, 627, 762, 640], [468, 668, 896, 688], [584, 700, 683, 726], [350, 751, 859, 780], [364, 799, 373, 813], [364, 860, 373, 874], [364, 921, 373, 935], [337, 960, 354, 974], [337, 978, 851, 1007], [364, 1044, 722, 1064], [712, 1075, 838, 1088], [365, 1098, 834, 1119], [698, 1120, 761, 1133], [698, 1142, 762, 1155], [364, 1166, 373, 1180], [452, 1183, 839, 1202], [584, 1215, 683, 1241], [376, 1266, 820, 1295], [364, 1299, 373, 1313], [737, 1322, 748, 1334], [364, 1347, 373, 1361], [364, 1394, 373, 1408], [364, 1442, 373, 1456], [337, 1468, 354, 1482], [337, 1486, 766, 1504], [337, 1501, 851, 1521], [751, 1523, 796, 1536], [364, 1537, 870, 1558], [750, 1571, 778, 1585], [364, 1585, 838, 1603], [699, 1612, 834, 1629], [365, 1633, 761, 1647], [698, 1657, 762, 1670], [364, 1681, 373, 1695], [438, 1698, 837, 1717], [584, 1730, 683, 1756], [399, 1781, 812, 1810], [364, 1817, 373, 1831], [364, 1871, 373, 1885], [364, 1925, 373, 1939], [337, 1979, 373, 1997], [337, 2001, 354, 2014], [337, 2016, 851, 2036], [364, 2033, 796, 2051], [751, 2060, 870, 2073], [364, 2082, 778, 2101], [712, 2104, 838, 2118], [699, 2127, 834, 2144], [365, 2141, 761, 2162], [698, 2171, 762, 2184], [364, 2195, 373, 2209], [429, 2212, 823, 2232], [584, 2244, 683, 2270], [1016, 236, 1520, 265], [1011, 314, 1037, 328], [1030, 362, 1039, 376], [1011, 410, 1037, 424], [983, 445, 1039, 472], [983, 463, 1517, 492], [983, 494, 1462, 507], [1012, 507, 1536, 529], [1365, 538, 1444, 555], [1031, 555, 1504, 574], [1365, 583, 1500, 600], [1011, 603, 1427, 618], [1364, 627, 1428, 640], [1030, 651, 1039, 665], [1052, 668, 1462, 688], [1250, 700, 1349, 726], [1016, 751, 1525, 780], [1030, 802, 1039, 816], [1011, 847, 1037, 861], [1030, 893, 1039, 907], [1011, 938, 1037, 952], [983, 960, 1000, 974], [983, 978, 1517, 1007], [983, 1008, 1462, 1021], [1012, 1029, 1536, 1044], [1379, 1053, 1444, 1070], [1031, 1075, 1504, 1089], [1375, 1098, 1500, 1115], [1011, 1120, 1427, 1134], [1364, 1142, 1428, 1155], [1030, 1166, 1039, 1180], [1056, 1183, 1443, 1202], [1250, 1215, 1349, 1241], [1043, 1266, 1486, 1295], [1030, 1331, 1039, 1345], [1030, 1384, 1039, 1398], [1030, 1437, 1039, 1451], [996, 1468, 1013, 1482], [996, 1486, 1432, 1504], [996, 1501, 1517, 1521], [1393, 1523, 1462, 1536], [1023, 1542, 1536, 1558], [1365, 1568, 1444, 1585], [1023, 1590, 1504, 1609], [1365, 1612, 1500, 1629], [1364, 1634, 1427, 1647], [1023, 1648, 1428, 1670], [1175, 1698, 1396, 1717], [1250, 1730, 1349, 1756], [1048, 1781, 1487, 1810], [990, 1983, 1008, 2036], [1375, 2016, 1517, 2033], [1393, 2038, 1462, 2051], [1393, 2060, 1536, 2073], [1389, 2082, 1444, 2099], [1404, 2105, 1504, 2118], [1389, 2127, 1500, 2144], [1364, 2149, 1427, 2162], [1364, 2171, 1428, 2184], [1129, 2212, 1510, 2232], [1250, 2244, 1349, 2270], [1682, 236, 2191, 265], [2070, 471, 2183, 488], [2070, 494, 2128, 507], [2070, 516, 2202, 529], [2031, 538, 2110, 555], [2044, 560, 2170, 574], [2031, 583, 2166, 600], [2030, 605, 2093, 618], [2030, 627, 2094, 640], [1814, 668, 2220, 688], [1916, 700, 2015, 726], [1729, 752, 2143, 781], [1696, 806, 1705, 820], [1696, 866, 1705, 880], [1696, 926, 1705, 940], [1669, 953, 1686, 967], [1669, 971, 1686, 984], [1669, 986, 2183, 1006], [2070, 1008, 2128, 1021], [2070, 1031, 2202, 1044], [1696, 1046, 2110, 1070], [2044, 1075, 2170, 1088], [1697, 1098, 2166, 1120], [2030, 1120, 2093, 1133], [2030, 1142, 2094, 1155], [1696, 1166, 1705, 1180], [1762, 1183, 2160, 1202], [1916, 1215, 2015, 1241], [1745, 1266, 2125, 1295], [2070, 1501, 2183, 1518], [2070, 1523, 2128, 1536], [2070, 1545, 2202, 1558], [2070, 1568, 2110, 1585], [2070, 1590, 2170, 1603], [2031, 1612, 2166, 1629], [2030, 1634, 2093, 1647], [2030, 1657, 2094, 1670], [1858, 1698, 2237, 1717], [1916, 1730, 2015, 1756], [1704, 1781, 2157, 1810], [1669, 1983, 1687, 2036], [1696, 2008, 1705, 2022], [2070, 2016, 2183, 2033], [2070, 2038, 2128, 2051], [2070, 2060, 2202, 2073], [2031, 2082, 2110, 2099], [2044, 2104, 2170, 2118], [2031, 2127, 2166, 2144], [2030, 2149, 2093, 2162], [2030, 2171, 2094, 2184], [1696, 2195, 1705, 2209], [1715, 2212, 2093, 2232], [1916, 2244, 2015, 2270], [376, 2296, 2175, 2333], [376, 2347, 1492, 2384], [437, 2481, 2173, 2518], [375, 2532, 1187, 2569], [376, 2642, 983, 2680], [376, 2722, 2172, 2759], [376, 2773, 2173, 2810], [1256, 2935, 1294, 2964], [609, 270, 1927, 313], [415, 352, 542, 380], [876, 352, 1053, 389], [415, 442, 733, 480], [791, 447, 819, 525], [876, 443, 1479, 480], [876, 494, 1270, 531], [877, 545, 1316, 582], [876, 596, 1431, 633], [415, 687, 707, 724], [0, 0, 2550, 3300], [786, 795, 823, 818], [876, 687, 1467, 715], [876, 738, 1205, 766], [876, 789, 1135, 818], [416, 881, 653, 918], [791, 885, 819, 912], [786, 988, 823, 1011], [876, 881, 1483, 918], [877, 932, 1455, 969], [876, 982, 1135, 1011], [415, 1074, 700, 1103], [786, 1131, 823, 1154], [877, 1074, 959, 1103], [876, 1125, 1298, 1154], [415, 1216, 533, 1245], [791, 1220, 819, 1247], [877, 1216, 2135, 1253], [876, 1267, 1133, 1304], [876, 1318, 1967, 1355], [876, 1369, 1782, 1406], [415, 1461, 669, 1498], [0, 0, 2550, 3300], [876, 1462, 1114, 1489], [877, 1511, 1428, 1548], [876, 1562, 1518, 1599], [876, 1613, 1288, 1650], [415, 1705, 623, 1742], [0, 0, 2550, 3300], [786, 1812, 823, 1835], [876, 1706, 1114, 1733], [877, 1755, 1453, 1784], [876, 1806, 1780, 1843], [415, 1898, 636, 1927], [791, 1902, 819, 1929], [786, 2056, 823, 2079], [877, 1898, 1573, 1935], [877, 1949, 959, 1978], [876, 2000, 1555, 2037], [876, 2050, 1645, 2087], [376, 2207, 2174, 2244], [375, 2257, 2179, 2294], [375, 2308, 2173, 2345], [377, 2359, 2174, 2396], [375, 2410, 2174, 2447], [377, 2461, 1240, 2498], [438, 2511, 2174, 2548], [377, 2562, 2171, 2599], [376, 2613, 2175, 2650], [377, 2664, 1220, 2701], [1255, 2935, 1295, 2964], [429, 236, 1725, 265], [1961, 246, 2211, 265], [2288, 637, 2308, 652], [1335, 292, 1356, 307], [328, 304, 1870, 334], [328, 363, 1870, 380], [302, 391, 1832, 418], [302, 415, 1870, 442], [306, 437, 1832, 460], [809, 455, 1828, 465], [302, 462, 1870, 482], [302, 481, 1828, 500], [1336, 509, 1870, 529], [338, 534, 862, 555], [1838, 564, 1870, 579], [1336, 581, 1356, 596], [338, 599, 1870, 629], [376, 637, 2252, 652], [485, 656, 2165, 676], [438, 701, 2218, 729], [326, 735, 358, 750], [828, 762, 1375, 785], [1838, 799, 1865, 814], [326, 813, 1375, 831], [828, 834, 871, 848], [301, 864, 1832, 881], [305, 876, 316, 884], [301, 879, 1865, 910], [305, 906, 1828, 927], [301, 925, 1828, 958], [301, 947, 1323, 962], [1332, 956, 1865, 977], [327, 969, 871, 992], [1332, 1003, 1375, 1017], [337, 1043, 1861, 1064], [385, 1097, 2308, 1113], [492, 1118, 2165, 1137], [703, 1222, 1845, 1259], [375, 1355, 1079, 1393], [374, 1433, 2173, 1471], [376, 1484, 2173, 1522], [375, 1536, 956, 1573], [1119, 1587, 1427, 1624], [374, 1663, 2177, 1700], [375, 1713, 1357, 1750], [982, 1798, 2173, 1861], [374, 1911, 2173, 1952], [376, 1964, 1891, 2001], [438, 2015, 2173, 2052], [375, 2066, 2174, 2103], [375, 2117, 2173, 2154], [376, 2168, 2173, 2205], [375, 2218, 2174, 2255], [375, 2269, 2173, 2306], [374, 2320, 2174, 2357], [374, 2371, 678, 2408], [438, 2422, 2173, 2459], [375, 2472, 2174, 2509], [375, 2523, 2174, 2560], [374, 2574, 2174, 2611], [376, 2625, 702, 2662], [438, 2675, 2173, 2713], [375, 2726, 2174, 2763], [376, 2776, 2072, 2814], [1255, 2935, 1291, 2963], [829, 262, 1609, 299], [828, 353, 1686, 390], [830, 404, 1605, 441], [829, 455, 1590, 484], [829, 506, 1676, 543], [829, 557, 1617, 594], [829, 607, 1687, 641], [829, 658, 1590, 687], [828, 709, 1717, 746], [374, 856, 2173, 892], [376, 905, 2174, 939], [375, 951, 2176, 985], [376, 999, 2174, 1032], [376, 1045, 1651, 1079], [438, 1164, 2175, 1201], [376, 1214, 2173, 1251], [376, 1265, 2179, 1302], [374, 1316, 2176, 1353], [376, 1367, 2174, 1404], [376, 1418, 2174, 1455], [376, 1468, 2174, 1505], [376, 1513, 2173, 1556], [376, 1570, 2175, 1607], [376, 1621, 2176, 1658], [376, 1672, 1108, 1709], [437, 1722, 2178, 1759], [376, 1773, 2173, 1810], [376, 1824, 2173, 1861], [377, 1875, 2174, 1912], [377, 1926, 1609, 1963], [438, 1977, 1728, 2014], [376, 2084, 1167, 2122], [374, 2163, 2173, 2201], [374, 2214, 1266, 2252], [0, 0, 2550, 3300], [438, 2370, 2174, 2408], [375, 2422, 1253, 2459], [811, 2490, 2173, 2543], [376, 2577, 2174, 2614], [376, 2627, 1991, 2665], [438, 2679, 2174, 2716], [376, 2730, 779, 2767], [775, 2800, 1771, 2859], [1255, 2935, 1295, 2963], [312, 236, 885, 265], [401, 471, 548, 488], [432, 494, 551, 511], [432, 516, 551, 533], [401, 538, 551, 555], [400, 561, 486, 578], [400, 583, 490, 600], [400, 605, 496, 622], [400, 627, 490, 644], [309, 346, 331, 643], [553, 471, 567, 555], [524, 668, 786, 688], [584, 700, 683, 726], [312, 751, 885, 780], [432, 1031, 536, 1048], [401, 1053, 536, 1070], [400, 1075, 486, 1092], [309, 860, 331, 1158], [584, 1215, 683, 1241], [338, 1266, 847, 1295], [446, 1307, 484, 1317], [401, 1501, 548, 1518], [432, 1523, 551, 1540], [432, 1545, 551, 1562], [401, 1568, 551, 1585], [400, 1590, 486, 1607], [309, 1369, 331, 1666], [553, 1501, 567, 1585], [527, 1698, 777, 1717], [584, 1730, 683, 1756], [361, 1781, 838, 1810], [401, 2016, 567, 2033], [432, 2038, 567, 2055], [432, 2060, 567, 2077], [401, 2082, 567, 2099], [400, 2105, 486, 2122], [400, 2127, 496, 2144], [338, 2146, 496, 2166], [400, 2171, 496, 2188], [309, 1883, 331, 2180], [338, 2027, 357, 2041], [363, 2022, 374, 2032], [977, 236, 1546, 265], [1067, 471, 1214, 488], [1106, 494, 1217, 511], [1106, 516, 1217, 533], [1067, 538, 1217, 555], [1066, 561, 1152, 578], [1066, 583, 1156, 600], [1066, 605, 1162, 622], [1066, 627, 1156, 644], [1219, 471, 1227, 484], [1219, 494, 1227, 507], [1219, 516, 1227, 529], [1219, 538, 1227, 551], [975, 346, 997, 643], [1066, 668, 1554, 688], [1250, 700, 1349, 726], [977, 751, 1551, 780], [1067, 986, 1202, 1003], [1106, 1008, 1202, 1025], [975, 860, 997, 1158], [1250, 1215, 1349, 1241], [1005, 1266, 1512, 1295], [1067, 1501, 1214, 1518], [1106, 1523, 1217, 1540], [1106, 1545, 1217, 1562], [1106, 1568, 1217, 1585], [1066, 1590, 1152, 1607], [975, 1369, 997, 1666], [1219, 1501, 1227, 1581], [1237, 1698, 1495, 1717], [1250, 1730, 1349, 1756], [1010, 1781, 1513, 1810], [1067, 2016, 1233, 2033], [1106, 2038, 1233, 2055], [1106, 2060, 1233, 2077], [1067, 2082, 1233, 2099], [1066, 2105, 1152, 2122], [1066, 2127, 1162, 2144], [1066, 2149, 1162, 2166], [1066, 2171, 1162, 2188], [975, 1883, 997, 2180], [1004, 2035, 1023, 2049], [1029, 2029, 1040, 2039], [1643, 236, 2217, 265], [1680, 383, 1689, 397], [1695, 378, 1706, 388], [1733, 471, 1899, 488], [1772, 494, 1899, 511], [1772, 516, 1899, 533], [1869, 538, 1899, 555], [1641, 346, 1663, 643], [1670, 517, 1706, 537], [1733, 538, 1868, 555], [1732, 561, 1818, 578], [1732, 583, 1828, 600], [1732, 605, 1828, 622], [1732, 627, 1828, 644], [1696, 668, 2163, 688], [1916, 700, 2015, 726], [1691, 752, 2169, 781], [1641, 854, 1663, 1151], [1916, 1215, 2015, 1241], [1707, 1266, 2151, 1295], [1729, 1310, 1787, 1343], [1733, 1501, 1868, 1518], [1869, 1501, 1873, 1518], [1869, 1523, 1873, 1540], [1772, 1545, 1873, 1562], [1733, 1568, 1873, 1585], [1732, 1590, 1818, 1607], [1641, 1369, 1663, 1666], [1751, 1698, 2210, 1717], [1916, 1730, 2015, 1756], [1666, 1781, 2183, 1810], [1733, 2016, 1893, 2033], [1772, 2038, 1893, 2055], [1772, 2060, 1893, 2077], [1733, 2082, 1893, 2099], [1732, 2105, 1818, 2122], [1732, 2127, 1828, 2144], [1732, 2149, 1828, 2166], [1732, 2171, 1828, 2188], [1641, 1883, 1663, 2180], [1764, 2212, 2239, 2232], [1916, 2244, 2015, 2270], [376, 2356, 2177, 2393], [376, 2406, 1278, 2443], [438, 2530, 2179, 2583], [376, 2591, 2175, 2628], [377, 2632, 2174, 2685], [375, 2692, 2174, 2729], [375, 2743, 1444, 2780], [1255, 2935, 1293, 2964], [312, 236, 885, 265], [699, 471, 846, 488], [750, 494, 849, 511], [750, 516, 849, 533], [699, 538, 849, 555], [698, 561, 785, 578], [698, 583, 795, 600], [698, 605, 795, 622], [698, 627, 795, 644], [851, 471, 859, 484], [851, 494, 859, 507], [851, 516, 859, 529], [851, 538, 859, 551], [524, 668, 786, 688], [584, 700, 683, 726], [312, 751, 885, 780], [345, 800, 371, 814], [345, 863, 371, 877], [345, 926, 371, 940], [317, 960, 334, 974], [317, 978, 371, 1007], [364, 1052, 834, 1070], [698, 1075, 785, 1092], [698, 1098, 795, 1115], [346, 1115, 795, 1137], [698, 1142, 795, 1159], [517, 1183, 767, 1202], [584, 1215, 683, 1241], [338, 1266, 847, 1295], [364, 1318, 615, 1333], [345, 1371, 371, 1385], [364, 1423, 373, 1437], [317, 1468, 334, 1482], [317, 1476, 371, 1499], [317, 1501, 865, 1521], [364, 1523, 865, 1542], [835, 1545, 865, 1562], [345, 1568, 865, 1594], [357, 1590, 785, 1607], [698, 1612, 795, 1629], [364, 1632, 795, 1651], [698, 1657, 795, 1674], [527, 1698, 777, 1717], [584, 1730, 683, 1756], [361, 1781, 838, 1810], [345, 1936, 371, 1950], [317, 1983, 335, 2036], [699, 2016, 834, 2033], [835, 2016, 865, 2033], [835, 2038, 865, 2055], [750, 2060, 865, 2077], [699, 2082, 865, 2099], [698, 2105, 785, 2122], [698, 2127, 795, 2144], [698, 2149, 795, 2166], [698, 2171, 795, 2188], [977, 236, 1546, 265], [1011, 298, 1037, 312], [983, 445, 1001, 498], [1030, 459, 1039, 473], [1365, 471, 1512, 488], [1365, 494, 1515, 511], [1365, 516, 1515, 533], [1365, 538, 1515, 555], [1364, 561, 1451, 578], [1364, 583, 1461, 600], [1364, 605, 1461, 622], [1364, 627, 1461, 644], [1517, 471, 1525, 484], [1517, 494, 1525, 507], [1517, 516, 1525, 529], [1517, 538, 1525, 551], [1066, 668, 1554, 688], [1250, 700, 1349, 726], [977, 751, 1551, 780], [1011, 815, 1037, 829], [1011, 879, 1037, 893], [1011, 942, 1037, 956], [983, 960, 1000, 974], [983, 978, 1531, 1007], [983, 1005, 1531, 1025], [1365, 1031, 1531, 1048], [1365, 1053, 1531, 1070], [1012, 1068, 1451, 1092], [1364, 1098, 1461, 1115], [1012, 1120, 1461, 1145], [1023, 1142, 1461, 1159], [1164, 1183, 1398, 1202], [1250, 1215, 1349, 1241], [1005, 1266, 1512, 1295], [983, 1468, 1000, 1499], [983, 1493, 1531, 1521], [1365, 1523, 1531, 1540], [1030, 1545, 1531, 1566], [1365, 1568, 1531, 1585], [1364, 1590, 1451, 1607], [1012, 1612, 1461, 1629], [1364, 1634, 1461, 1651], [1364, 1657, 1461, 1674], [1012, 1671, 1037, 1685], [1237, 1698, 1495, 1717], [1250, 1730, 1349, 1756], [1010, 1781, 1513, 1810], [1365, 2016, 1531, 2033], [1365, 2038, 1531, 2055], [1393, 2060, 1531, 2077], [1501, 2082, 1531, 2099], [1030, 2075, 1500, 2099], [1364, 2105, 1451, 2122], [1364, 2127, 1461, 2144], [1030, 2149, 1461, 2166], [1364, 2171, 1461, 2188], [1217, 2212, 1471, 2232], [1643, 236, 2217, 265], [1677, 278, 1703, 292], [1677, 343, 1703, 357], [1649, 445, 1666, 459], [1649, 463, 2197, 492], [1649, 494, 2197, 511], [2070, 516, 2197, 533], [1696, 535, 2197, 555], [2030, 561, 2116, 578], [2030, 583, 2127, 600], [1678, 600, 2127, 622], [1721, 627, 2127, 657], [1696, 668, 2163, 688], [1916, 700, 2015, 726], [1691, 752, 2169, 781], [2070, 986, 2166, 1003], [2070, 1008, 2166, 1025], [2070, 1031, 2166, 1048], [2031, 1053, 2166, 1070], [2030, 1075, 2116, 1092], [2030, 1098, 2127, 1115], [2030, 1120, 2127, 1137], [2030, 1142, 2127, 1159], [1816, 1183, 2077, 1202], [1916, 1215, 2015, 1241], [1707, 1266, 2151, 1295], [1677, 1366, 1703, 1380], [2031, 1501, 2197, 1518], [2070, 1523, 2197, 1540], [2070, 1545, 2197, 1562], [2031, 1568, 2197, 1585], [2030, 1590, 2116, 1607], [2030, 1612, 2127, 1629], [2030, 1634, 2127, 1651], [1678, 1653, 2127, 1688], [1751, 1698, 2210, 1717], [1916, 1730, 2015, 1756], [1666, 1781, 2183, 1810], [2031, 2016, 2166, 2033], [2167, 2016, 2197, 2033], [1696, 2038, 2197, 2055], [2070, 2060, 2197, 2077], [1677, 2081, 2197, 2099], [2030, 2105, 2116, 2122], [1696, 2123, 2127, 2144], [2030, 2149, 2127, 2166], [1678, 2165, 2127, 2188], [1764, 2212, 2239, 2232], [1916, 2244, 2015, 2270], [376, 2356, 2175, 2393], [376, 2406, 1492, 2443], [376, 2533, 1292, 2577], [374, 2617, 2173, 2655], [376, 2667, 2174, 2705], [375, 2712, 1874, 2756], [942, 2810, 1030, 2844], [1415, 2835, 1530, 2854], [1255, 2935, 1295, 2963], [1086, 2801, 1604, 2852], [2097, 2810, 2173, 2845], [306, 1995, 328, 2324], [337, 2059, 345, 2075], [348, 2059, 358, 2075], [337, 2188, 345, 2204], [348, 2188, 358, 2204], [360, 2179, 374, 2190], [337, 2316, 345, 2332], [348, 2316, 358, 2332], [360, 2308, 374, 2319], [628, 262, 1921, 299], [627, 353, 1810, 382], [627, 404, 1826, 441], [627, 455, 1836, 491], [654, 602, 1882, 638], [374, 725, 2174, 779], [376, 786, 2174, 823], [376, 836, 1123, 873], [438, 887, 2174, 924], [375, 938, 2173, 975], [376, 989, 2173, 1026], [376, 1040, 2174, 1077], [376, 1090, 2173, 1127], [376, 1141, 1701, 1178], [439, 1224, 1066, 1262], [439, 1292, 1336, 1330], [439, 1360, 2177, 1397], [479, 1411, 1281, 1448], [376, 1495, 2175, 1532], [376, 1546, 2174, 1583], [377, 1597, 2175, 1634], [376, 1647, 2173, 1684], [376, 1698, 2174, 1735], [374, 1749, 2173, 1786], [377, 1800, 1992, 1837], [433, 1898, 2212, 1930], [390, 1943, 572, 1966], [574, 1958, 1321, 1989], [1003, 2063, 1011, 2079], [1014, 2063, 1024, 2079], [1003, 2192, 1011, 2208], [1014, 2192, 1024, 2208], [1026, 2184, 1040, 2195], [972, 1995, 994, 2324], [1638, 1995, 1660, 2324], [396, 2294, 2259, 2326], [411, 2322, 2274, 2356], [396, 2344, 2283, 2381], [2279, 2373, 2290, 2381], [569, 2387, 2078, 2420], [609, 2417, 2052, 2444], [375, 2532, 2173, 2569], [376, 2583, 1311, 2620], [439, 2684, 2174, 2721], [374, 2734, 2175, 2771], [377, 2785, 2173, 2822], [1255, 2935, 1293, 2964], [408, 240, 2205, 273], [476, 658, 2210, 683], [0, 0, 2550, 3300], [368, 707, 2203, 735], [363, 732, 2064, 758], [550, 755, 2056, 781], [591, 778, 2038, 806], [376, 835, 2175, 872], [376, 886, 1646, 923], [376, 1019, 2173, 1056], [376, 1070, 2175, 1107], [377, 1121, 2177, 1158], [439, 1205, 2175, 1242], [480, 1256, 1164, 1293], [439, 1327, 2174, 1364], [479, 1378, 590, 1406], [439, 1450, 1686, 1487], [439, 1521, 2175, 1558], [480, 1572, 2174, 1609], [479, 1623, 2173, 1660], [479, 1674, 2173, 1711], [479, 1724, 1032, 1761], [438, 1808, 2176, 1845], [376, 1859, 2174, 1896], [376, 1910, 2174, 1947], [375, 1961, 534, 1998], [375, 2075, 763, 2119], [376, 2151, 2177, 2197], [377, 2210, 2175, 2245], [376, 2261, 2174, 2298], [376, 2312, 2012, 2349], [377, 2441, 651, 2483], [399, 2547, 2173, 2584], [466, 2598, 2053, 2635], [399, 2644, 2175, 2690], [462, 2704, 1268, 2741], [399, 2759, 2178, 2796], [465, 2810, 1437, 2847], [1255, 2935, 1294, 2964], [399, 242, 440, 276], [399, 297, 440, 331], [399, 402, 440, 436], [399, 509, 440, 542], [379, 927, 440, 961], [379, 1033, 440, 1067], [379, 1139, 440, 1173], [379, 1244, 440, 1278], [378, 1350, 440, 1384], [378, 1456, 440, 1490], [378, 1511, 440, 1545], [379, 1667, 440, 1701], [379, 1773, 440, 1807], [379, 1879, 440, 1913], [379, 1985, 440, 2019], [378, 2091, 440, 2125], [378, 2196, 440, 2230], [378, 2302, 440, 2336], [379, 2408, 440, 2442], [379, 2514, 440, 2548], [379, 2619, 440, 2653], [378, 2725, 440, 2759], [465, 242, 1981, 279], [465, 297, 2175, 334], [465, 347, 745, 376], [464, 402, 2174, 439], [466, 453, 2122, 490], [465, 499, 2179, 545], [465, 559, 2177, 596], [465, 610, 554, 639], [465, 665, 2173, 702], [464, 715, 1774, 752], [465, 761, 2173, 807], [464, 821, 2177, 858], [465, 872, 1074, 909], [465, 927, 2175, 961], [464, 978, 1877, 1015], [465, 1033, 2178, 1070], [465, 1084, 1209, 1121], [465, 1139, 2173, 1176], [465, 1189, 2051, 1226], [465, 1244, 2174, 1281], [465, 1295, 1602, 1332], [465, 1350, 2176, 1387], [463, 1401, 1420, 1438], [465, 1456, 1970, 1493], [464, 1511, 2173, 1548], [466, 1562, 2176, 1599], [465, 1612, 554, 1641], [464, 1667, 2177, 1704], [464, 1718, 1642, 1755], [465, 1773, 2175, 1810], [467, 1824, 698, 1855], [465, 1879, 2173, 1916], [465, 1930, 1509, 1967], [465, 1985, 2173, 2022], [466, 2036, 1438, 2073], [465, 2091, 2173, 2128], [465, 2141, 1669, 2178], [465, 2196, 2173, 2233], [465, 2247, 1750, 2284], [465, 2302, 2175, 2339], [462, 2353, 1794, 2390], [465, 2408, 2174, 2445], [465, 2459, 1601, 2496], [465, 2514, 2174, 2551], [466, 2564, 1998, 2601], [465, 2619, 2174, 2656], [465, 2670, 1110, 2707], [465, 2725, 2177, 2762], [465, 2776, 554, 2805], [1255, 2935, 1294, 2963], [379, 242, 2177, 279], [465, 292, 1147, 326], [379, 347, 2174, 384], [465, 398, 1633, 433], [378, 453, 1818, 490], [378, 508, 2174, 545], [464, 559, 1622, 596], [379, 614, 2177, 651], [465, 665, 760, 700], [379, 720, 2173, 757], [465, 770, 1928, 807], [378, 825, 2181, 862], [460, 876, 1201, 913], [379, 931, 2179, 968], [464, 982, 1525, 1019], [378, 1037, 2173, 1074], [464, 1088, 964, 1123], [379, 1143, 2082, 1178], [379, 1198, 2174, 1235], [464, 1248, 2176, 1285], [466, 1299, 1549, 1335], [378, 1354, 2179, 1391], [463, 1405, 1729, 1442], [378, 1460, 2174, 1497], [465, 1511, 1536, 1548], [379, 1566, 2175, 1603], [465, 1617, 2176, 1654], [466, 1667, 1144, 1703], [379, 1722, 2173, 1759], [464, 1773, 1373, 1810], [379, 1828, 2174, 1865], [466, 1879, 1477, 1916], [379, 1934, 2174, 1971], [466, 1985, 2174, 2022], [466, 2036, 1681, 2072], [378, 2090, 2177, 2128], [466, 2141, 1236, 2178], [379, 2196, 2175, 2233], [464, 2247, 1604, 2284], [379, 2301, 2177, 2339], [466, 2353, 802, 2382], [379, 2408, 2177, 2445], [465, 2459, 1029, 2496], [379, 2514, 2178, 2551], [460, 2564, 1221, 2601], [379, 2619, 2176, 2656], [464, 2670, 950, 2705], [379, 2725, 2144, 2762], [1255, 2935, 1293, 2964], [379, 242, 2173, 279], [462, 292, 1232, 329], [379, 347, 2175, 384], [465, 398, 1268, 435], [378, 453, 2174, 490], [465, 504, 1847, 541], [379, 559, 2179, 596], [464, 610, 2183, 647], [467, 661, 1318, 697], [379, 715, 2176, 752], [463, 766, 1269, 803], [379, 821, 2178, 858], [463, 872, 863, 909], [379, 927, 1850, 964], [378, 982, 2179, 1019], [465, 1033, 1281, 1070], [378, 1088, 2175, 1125], [466, 1139, 1487, 1176], [378, 1194, 2174, 1231], [462, 1244, 848, 1281], [379, 1299, 2173, 1336], [462, 1350, 1465, 1387], [379, 1405, 2177, 1442], [465, 1456, 679, 1490], [379, 1511, 2174, 1548], [465, 1562, 810, 1599], [379, 1617, 2177, 1654], [463, 1667, 1158, 1701], [379, 1722, 2177, 1759], [465, 1773, 1224, 1810], [379, 1828, 1744, 1865], [378, 1881, 2178, 1920], [465, 1934, 554, 1963], [379, 1989, 2177, 2026], [465, 2040, 700, 2074], [379, 2095, 2178, 2132], [465, 2145, 1420, 2181], [379, 2200, 2177, 2237], [465, 2251, 554, 2280], [379, 2306, 2174, 2343], [465, 2357, 823, 2392], [379, 2411, 2178, 2449], [379, 2467, 2174, 2504], [465, 2518, 779, 2553], [379, 2573, 2175, 2610], [465, 2624, 2043, 2661], [378, 2678, 2173, 2715], [463, 2729, 823, 2763], [1255, 2935, 1294, 2964], [379, 242, 2177, 279], [465, 292, 2174, 329], [463, 343, 2175, 380], [468, 394, 1736, 430], [379, 449, 2177, 486], [465, 500, 554, 529], [379, 555, 2175, 592], [465, 606, 1997, 643], [378, 661, 2173, 698], [464, 711, 706, 747], [379, 766, 2078, 803], [379, 821, 2176, 858], [464, 872, 1289, 909], [378, 927, 2173, 964], [465, 978, 1230, 1013], [379, 1033, 2178, 1070], [379, 1088, 2179, 1125], [463, 1139, 982, 1174], [379, 1194, 2173, 1231], [465, 1244, 1395, 1280], [378, 1299, 2177, 1336], [464, 1350, 1343, 1385], [379, 1405, 2174, 1442], [465, 1456, 2164, 1493], [379, 1511, 2173, 1548], [465, 1562, 1622, 1599], [379, 1617, 2173, 1654], [466, 1667, 1026, 1704], [379, 1722, 2174, 1759], [465, 1773, 2177, 1810], [464, 1824, 750, 1858], [379, 1879, 2175, 1916], [465, 1930, 2173, 1967], [463, 1981, 1183, 2018], [379, 2036, 2178, 2073], [464, 2086, 1261, 2123], [379, 2141, 2173, 2178], [467, 2192, 1179, 2229], [378, 2247, 2175, 2284], [465, 2298, 2174, 2335], [465, 2349, 1518, 2386], [379, 2404, 2179, 2441], [379, 2459, 2178, 2496], [464, 2509, 906, 2544], [379, 2564, 2174, 2601], [464, 2615, 1287, 2652], [1255, 2935, 1295, 2964], [376, 229, 1154, 282], [374, 335, 2174, 372], [376, 386, 490, 414], [437, 434, 2174, 475], [377, 485, 1385, 526], [956, 577, 2173, 618], [374, 669, 2174, 710], [369, 722, 1324, 760], [925, 820, 2173, 888], [1370, 880, 1615, 919], [374, 975, 1000, 1013], [438, 1024, 2175, 1067], [376, 1075, 1156, 1116], [1001, 1167, 2173, 1212], [374, 1259, 2173, 1300], [374, 1305, 2174, 1355], [376, 1364, 2174, 1401], [374, 1415, 917, 1452], [376, 1496, 1878, 1537], [1078, 1583, 2173, 1639], [375, 1683, 1483, 1720], [375, 1767, 2173, 1804], [376, 1851, 1660, 1888], [376, 1932, 2175, 1974], [376, 1979, 1255, 2029], [930, 2070, 2173, 2141], [1183, 2124, 1221, 2143], [376, 2194, 1557, 2232], [439, 2277, 2173, 2316], [376, 2329, 1534, 2367], [376, 2410, 1789, 2451], [973, 2497, 2173, 2550], [374, 2597, 2173, 2634], [374, 2681, 2175, 2718], [374, 2732, 2175, 2769], [377, 2783, 559, 2820], [1255, 2935, 1291, 2964], [376, 239, 1965, 280], [973, 329, 2173, 388], [963, 409, 2173, 475], [374, 523, 1557, 560], [952, 604, 1653, 631], [858, 610, 1689, 670], [374, 718, 2173, 755], [437, 801, 2173, 838], [376, 852, 2116, 889], [376, 927, 2173, 971], [376, 983, 2177, 1022], [377, 1033, 626, 1074], [888, 1084, 1660, 1125], [438, 1169, 2175, 1206], [376, 1219, 600, 1256], [376, 1295, 2174, 1340], [377, 1349, 1981, 1395], [438, 1434, 2177, 1471], [375, 1482, 2172, 1528], [439, 1536, 2174, 1573], [377, 1587, 2173, 1624], [377, 1638, 2173, 1675], [376, 1693, 527, 1726], [376, 1770, 2174, 1808], [376, 1821, 413, 1857], [766, 1869, 1782, 1910], [438, 1954, 2176, 1991], [377, 1998, 2173, 2042], [375, 2056, 2059, 2093], [376, 2136, 2174, 2175], [375, 2189, 514, 2226], [1014, 2231, 1534, 2282], [438, 2322, 1706, 2359], [375, 2400, 2173, 2442], [377, 2454, 2173, 2492], [377, 2505, 1093, 2548], [837, 2622, 1711, 2680], [985, 2692, 1041, 2712], [438, 2759, 2174, 2796], [376, 2810, 658, 2838], [1255, 2935, 1295, 2964], [376, 238, 1635, 280], [439, 325, 1191, 363], [439, 407, 2105, 448], [439, 486, 1878, 536], [438, 578, 2174, 615], [376, 628, 2174, 665], [376, 679, 2174, 716], [376, 730, 1859, 767], [438, 778, 1823, 827], [375, 864, 1938, 918], [1954, 865, 2172, 910], [1604, 923, 1965, 943], [1604, 926, 1976, 975], [375, 1013, 2175, 1050], [376, 1063, 2174, 1101], [376, 1114, 725, 1151], [724, 1201, 1124, 1273], [821, 1277, 833, 1296], [378, 921, 1588, 978], [1184, 1201, 1585, 1259], [1209, 1249, 1403, 1273], [1281, 1277, 1293, 1296], [1141, 1322, 1689, 1353], [1141, 1320, 1701, 1415], [1141, 1483, 1768, 1513], [1141, 1481, 1823, 1575], [1141, 1605, 1540, 1663], [1184, 1614, 1552, 1687], [377, 1749, 2173, 1799], [438, 1835, 2173, 1873], [376, 1887, 2177, 1924], [377, 1938, 860, 1975], [631, 2022, 1977, 2042], [595, 2027, 1977, 2068], [569, 2053, 1815, 2095], [569, 2099, 1782, 2130], [374, 2180, 2174, 2218], [376, 2232, 2173, 2269], [375, 2282, 2173, 2319], [376, 2333, 1130, 2372], [376, 2414, 2175, 2456], [376, 2465, 1679, 2506], [1052, 2557, 1488, 2605], [1026, 2625, 1521, 2672], [376, 2720, 1570, 2758], [1255, 2935, 1293, 2964], [375, 241, 2101, 279], [847, 326, 1469, 387], [1019, 407, 1551, 436], [0, 0, 2550, 3300], [1019, 498, 1688, 526], [0, 0, 2550, 3300], [1019, 588, 1372, 616], [1019, 594, 1408, 658], [374, 796, 2174, 834], [376, 845, 2172, 886], [377, 895, 2175, 943], [376, 946, 2173, 988], [376, 1079, 879, 1131], [374, 1185, 2178, 1222], [375, 1235, 2174, 1272], [376, 1286, 2173, 1323], [375, 1337, 1503, 1374], [372, 1413, 741, 1448], [377, 1488, 2173, 1525], [374, 1539, 2174, 1576], [376, 1590, 925, 1627], [438, 1641, 1032, 1678], [372, 1717, 791, 1754], [375, 1792, 2094, 1833], [437, 1843, 2172, 1880], [374, 1894, 2171, 1934], [375, 1945, 2175, 1982], [376, 1996, 578, 2024], [378, 2124, 1616, 2177], [374, 2230, 1528, 2268], [607, 2342, 2173, 2401], [686, 2412, 736, 2431], [375, 2481, 438, 2510], [649, 2518, 667, 2531], [590, 2537, 1857, 2562], [554, 2543, 2173, 2601], [581, 2597, 594, 2610], [633, 2613, 683, 2632], [368, 2665, 1605, 2703], [1255, 2935, 1295, 2964], [375, 242, 1272, 279], [832, 328, 1625, 347], [578, 359, 1970, 418], [815, 429, 1620, 448], [376, 498, 1426, 535], [954, 587, 2173, 628], [1254, 651, 2173, 692], [1292, 716, 2173, 753], [1069, 840, 2173, 881], [375, 932, 2101, 989], [438, 997, 2172, 1034], [376, 1048, 1314, 1085], [883, 1131, 1461, 1172], [818, 1160, 2173, 1237], [1396, 1258, 2173, 1299], [1433, 1321, 2173, 1369], [1239, 1393, 2173, 1434], [1210, 1455, 2173, 1505], [375, 1559, 2176, 1597], [375, 1611, 589, 1648], [439, 1660, 2173, 1698], [376, 1711, 2179, 1749], [376, 1761, 1820, 1800], [479, 1847, 1804, 1884], [479, 1928, 1477, 1982], [479, 2019, 2171, 2060], [480, 2072, 1403, 2109], [479, 2154, 2174, 2195], [480, 2205, 1809, 2246], [480, 2289, 2173, 2330], [480, 2343, 994, 2380], [480, 2415, 2178, 2465], [479, 2474, 1728, 2515], [479, 2549, 2006, 2597], [479, 2633, 2171, 2683], [479, 2693, 1602, 2734], [1255, 2935, 1293, 2964], [374, 241, 2177, 279], [377, 292, 1545, 329], [438, 342, 2173, 380], [376, 388, 2174, 445], [376, 449, 2174, 499], [376, 511, 2175, 548], [376, 562, 1796, 599], [2145, 613, 2173, 642], [376, 741, 1930, 794], [376, 847, 2173, 885], [376, 899, 1439, 936], [375, 978, 2173, 1019], [376, 1029, 2179, 1070], [376, 1082, 738, 1119], [794, 1181, 1755, 1222], [438, 1257, 2174, 1295], [377, 1308, 2173, 1346], [375, 1359, 1097, 1397], [924, 1498, 1623, 1539], [923, 1561, 1623, 1602], [438, 1654, 2174, 1691], [377, 1705, 2173, 1742], [376, 1753, 1157, 1794], [438, 1804, 2173, 1845], [377, 1854, 2174, 1895], [376, 1908, 1489, 1945], [438, 1959, 2175, 1996], [376, 2007, 2174, 2048], [376, 2058, 2174, 2099], [377, 2111, 2173, 2148], [377, 2162, 642, 2196], [838, 2244, 1709, 2288], [376, 2342, 2174, 2379], [375, 2393, 679, 2430], [893, 2477, 1655, 2521], [376, 2573, 2180, 2610], [376, 2624, 949, 2661], [440, 2740, 2107, 2811], [1255, 2935, 1294, 2964], [377, 242, 1917, 279], [939, 326, 1607, 372], [1498, 331, 1508, 372], [377, 418, 2157, 463], [980, 511, 1567, 557], [374, 611, 2173, 648], [377, 662, 1879, 699], [607, 751, 1940, 794], [376, 846, 2174, 883], [376, 897, 2174, 934], [376, 948, 2129, 985], [438, 996, 2175, 1037], [377, 1046, 2076, 1088], [377, 1234, 2174, 1271], [374, 1282, 2174, 1323], [377, 1333, 2173, 1374], [376, 1387, 671, 1416], [733, 1471, 1814, 1517], [377, 1571, 2174, 1608], [377, 1619, 1088, 1660], [2145, 1673, 2173, 1702], [376, 1789, 1393, 1857], [376, 1908, 2179, 1945], [376, 1959, 2173, 1996], [376, 2009, 2175, 2050], [375, 2061, 2173, 2098], [377, 2111, 1835, 2149], [438, 2162, 2177, 2199], [376, 2213, 2174, 2250], [375, 2264, 2179, 2301], [376, 2315, 1708, 2352], [438, 2366, 2174, 2403], [376, 2416, 2174, 2453], [376, 2467, 2174, 2504], [376, 2518, 2173, 2555], [375, 2569, 2174, 2606], [375, 2620, 1663, 2657], [438, 2670, 1224, 2699], [605, 2760, 2173, 2801], [1255, 2935, 1294, 2964], [374, 242, 2175, 279], [375, 292, 2174, 329], [375, 343, 2173, 380], [376, 387, 2179, 432], [376, 439, 2174, 483], [375, 488, 2180, 534], [375, 546, 680, 583], [994, 589, 2173, 642], [374, 673, 2173, 710], [377, 716, 2173, 761], [376, 775, 2174, 812], [376, 819, 2174, 863], [377, 876, 1623, 913], [438, 927, 1122, 962], [724, 1133, 1824, 1174], [1364, 1222, 1468, 1250], [1327, 1272, 1454, 1300], [438, 1362, 2173, 1399], [376, 1412, 2172, 1450], [377, 1455, 1966, 1508], [431, 1553, 1344, 1598], [427, 1621, 1378, 1666], [428, 1694, 1254, 1733], [438, 1787, 2175, 1824], [377, 1838, 2176, 1875], [376, 1889, 2068, 1926], [438, 1940, 2173, 1977], [379, 1991, 2175, 2028], [376, 2042, 2175, 2079], [374, 2092, 2175, 2129], [375, 2140, 2174, 2182], [377, 2194, 2174, 2231], [375, 2245, 2173, 2282], [377, 2295, 2173, 2333], [376, 2346, 1175, 2383], [866, 2436, 1681, 2477], [374, 2531, 1173, 2568], [438, 2579, 2174, 2620], [375, 2632, 2179, 2670], [375, 2683, 2175, 2720], [376, 2731, 2173, 2772], [376, 2785, 759, 2813], [1255, 2935, 1293, 2964], [373, 239, 1216, 277], [416, 295, 1260, 333], [417, 344, 1369, 385], [1243, 389, 1403, 427], [1094, 432, 1567, 465], [479, 469, 1291, 519], [480, 526, 656, 558], [417, 577, 585, 607], [417, 631, 583, 663], [479, 411, 1074, 449], [373, 742, 1144, 780], [417, 798, 1204, 843], [417, 850, 948, 894], [417, 900, 740, 945], [417, 954, 765, 995], [479, 1001, 1409, 1046], [479, 1059, 1000, 1097], [480, 1105, 926, 1148], [479, 1161, 1560, 1198], [479, 1203, 980, 1256], [479, 1262, 651, 1293], [417, 1312, 585, 1342], [417, 1359, 590, 1393], [438, 1507, 2173, 1544], [376, 1557, 2173, 1595], [376, 1609, 1090, 1646], [438, 1657, 2174, 1698], [375, 1704, 2178, 1748], [374, 1761, 2174, 1798], [374, 1809, 2173, 1850], [376, 1856, 2173, 1901], [376, 1908, 2088, 1951], [376, 2042, 1790, 2095], [374, 2149, 2173, 2186], [376, 2200, 2173, 2237], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [376, 2346, 2175, 2389], [376, 2403, 747, 2440], [437, 2454, 2174, 2491], [377, 2505, 2175, 2542], [376, 2556, 779, 2593], [420, 2687, 1329, 2722], [421, 2728, 1618, 2763], [421, 2769, 1493, 2804], [421, 2810, 1675, 2844], [414, 588, 565, 783], [469, 805, 899, 840], [1713, 1455, 2017, 1492], [510, 2108, 859, 2143], [1223, 1785, 1293, 1809], [1099, 2037, 1190, 2055], [1101, 2107, 1448, 2144], [1650, 1591, 1932, 1604], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1095, 2205, 1446, 2235], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [376, 2856, 2174, 2893], [375, 2906, 895, 2943], [1682, 959, 1840, 1017], [1685, 1019, 1880, 1069], [1741, 1140, 1771, 1188], [1739, 1200, 1770, 1255], [1682, 1140, 1701, 1315], [1777, 1138, 1805, 1338], [1713, 1455, 2017, 1492], [1307, 1680, 1425, 1771], [1427, 1870, 1502, 1911], [1021, 1884, 1082, 1905], [1098, 2035, 1191, 2064], [1452, 1953, 1517, 2043], [1101, 2107, 1448, 2144], [1602, 1590, 1942, 1605], [1617, 1666, 1999, 1674], [1620, 1711, 1925, 1718], [1621, 1732, 1865, 1742], [1621, 1755, 1857, 1765], [1616, 1780, 2076, 1787], [1978, 1857, 2002, 1865], [1606, 1901, 1994, 1910], [1602, 1924, 1823, 1934], [1738, 2002, 2020, 2015], [1602, 2055, 1854, 2070], [730, 2695, 750, 2712], [720, 2712, 744, 2721], [529, 2759, 840, 2794], [1049, 2197, 1485, 2240], [1006, 2239, 1049, 2254], [1034, 2666, 1490, 2688], [1052, 2685, 1488, 2708], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [754, 2856, 921, 2893], [951, 2856, 1780, 2893], [1059, 1456, 1489, 1491], [1713, 1455, 2017, 1492], [1101, 2107, 1448, 2144], [1604, 1591, 1942, 1604], [1839, 2002, 2075, 2013], [1603, 2055, 1854, 2070], [1728, 2108, 2000, 2143], [529, 2759, 840, 2794], [1095, 2205, 1444, 2235], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [1060, 2856, 1671, 2893], [2048, 805, 2079, 2793], [2023, 805, 2052, 2787], [2006, 805, 2026, 2786], [1966, 1455, 2009, 2787], [1965, 813, 1989, 2786], [1946, 1455, 1966, 2137], [1927, 805, 1952, 2786], [1906, 805, 1940, 2010], [1880, 805, 1915, 2787], [1857, 1455, 1891, 2787], [1836, 805, 1873, 2786], [1809, 822, 1852, 2793], [1792, 806, 1832, 2143], [1766, 805, 1809, 2786], [1740, 814, 1777, 2786], [1715, 814, 1766, 2786], [1670, 805, 1725, 2786], [1656, 814, 1701, 2795], [1648, 814, 1662, 1597], [1602, 1555, 1635, 2066], [1473, 805, 1516, 2041], [1452, 805, 1489, 2794], [1448, 1428, 1473, 1896], [1423, 805, 1456, 2788], [1389, 805, 1445, 2788], [1359, 813, 1426, 2788], [1345, 805, 1368, 1983], [1319, 805, 1373, 2787], [1268, 805, 1321, 2788], [1220, 805, 1305, 2788], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [1152, 916, 1179, 2787], [0, 0, 2550, 3300], [1046, 814, 1131, 2787], [1036, 814, 1100, 2072], [1006, 814, 1094, 1904], [1023, 940, 1046, 1910], [1004, 922, 1050, 1213], [888, 805, 899, 1491], [848, 805, 886, 1485], [807, 805, 865, 2794], [766, 813, 816, 2788], [0, 0, 2550, 3300], [676, 2759, 693, 2788], [579, 805, 769, 2787], [585, 806, 658, 2794], [550, 805, 636, 2787], [523, 805, 595, 2787], [502, 814, 541, 2136], [485, 814, 501, 1484], [469, 814, 483, 1484], [820, 2856, 1912, 2893], [622, 2856, 789, 2893], [469, 805, 899, 840], [1059, 805, 1489, 840], [1684, 727, 2058, 769], [1648, 805, 2079, 840], [469, 1456, 899, 1491], [1059, 1456, 1489, 1491], [0, 0, 2550, 3300], [1684, 1113, 2048, 1190], [1995, 1188, 2032, 1231], [1681, 1165, 2053, 1318], [1713, 1455, 2017, 1492], [507, 1567, 866, 1638], [510, 2108, 859, 2143], [1203, 1549, 1265, 1611], [1011, 1656, 1473, 1698], [1131, 1698, 1498, 1751], [1190, 1751, 1484, 1787], [1211, 1784, 1304, 1810], [1152, 1807, 1367, 1853], [1097, 1854, 1503, 1892], [1002, 1881, 1504, 1915], [1002, 1910, 1545, 1946], [0, 0, 2550, 3300], [1101, 2107, 1448, 2144], [1728, 2108, 2000, 2143], [818, 2373, 824, 2380], [702, 2379, 824, 2389], [669, 2381, 815, 2396], [779, 2706, 889, 2733], [529, 2759, 840, 2794], [1085, 2759, 1464, 2794], [1665, 2758, 2063, 2795], [826, 2856, 1708, 2893], [1693, 1309, 1781, 1321], [1689, 1318, 1847, 1340], [1687, 1333, 1709, 1350], [1680, 1321, 1832, 1384], [696, 2732, 1838, 2769], [763, 2732, 1771, 2769], [734, 2732, 1800, 2769]]}}}}]}
