{"name": "1312.6173v4", "contents": [{"tool_name": "djvu", "text": "Multilingual Distributed Representations without Word Alignment Karl Moritz Hermann and Phil Blunsom Department of Computer Science University of Oxford Oxford, OX1 3QD, UK {karl.moritz.hermann,phil.blunsom}@cs.ox.ac.uk Abstract Distributed representations of meaning are a natural way to encode covariance relationships between words and phrases in NLP. By overcoming data sparsity problems, as well as providing information about semantic relatedness which is not available in discrete representations, distributed representations have proven useful in many NLP tasks. Recent work has shown how compositional semantic representations can successfully be applied to a number of monolingual applica- tions such as sentiment analysis. At the same time, there has been some initial success in work on learning shared word-level representations across languages. We combine these two approaches by proposing a method for learning distributed representations in a multilingual setup. Our model learns to assign similar embed- dings to aligned sentences and dissimilar ones to sentence which are not aligned while not requiring word alignments. We show that our representations are seman- tically informative and apply them to a cross-lingual document classification task where we outperform the previous state of the art. Further, by employing parallel corpora of multiple language pairs we find that our model learns representations that capture semantic relationships across languages for which no parallel data was used. 1 Introduction Distributed representations of words are increasingly being used to achieve high levels of generalisa- tion within language modelling tasks. Successful applications of this approach include word-sense disambiguation, word similarity and synonym detection (e.g. [10, 27]). Subsequent work has also attempted to learn distributed semantics of larger structures, allowing us to apply distributed rep- resentation to tasks such as sentiment analysis or paraphrase detection (i.a. [1, 3, 12, 14, 21, 25]). At the same time a second strand of work has focused on transferring linguistic knowledge across languages, and particularly from English into low-resource languages, by means of distributed rep- resentations at the word level [13, 16]. Currently, work on compositional semantic representations focuses on monolingual data while the cross-lingual work focuses on word level representations only. However, it appears logical that these two strands of work should be combined as there exists a plethora of parallel corpora with aligned data at the sentence level or beyond which could be exploited in such work. Further, sentence aligned data provides a plausible concept of semantic similarity, which can be harder to define at the word level. Consider the case of alignment between a German compound noun (e.g. \u201cSchwerlastverkehr\u201d) and its English equivalent (\u201cheavy goods vehicle traffic\u201d). Semantic alignment at the phrase level here appears far more plausible than aligning individual tokens for semantic transfer. 1 a r X i v : 1 3 1 2 . 6 1 7 3 v 4 [ c s . C L ] 2 0 M a r 2 0 1 4 Using this rationale, and building on both work related to learning cross-lingual embeddings as well as to compositional semantic representations, we introduce a model that learns cross-lingual em- beddings at the sentence level. In the following section we will briefly discuss prior work in these two fields before going on to describe the bilingual training signal that we developed for learning multilingual compositional embeddings. Subsequently, we will describe our model in greater detail as well as its training procedure and experimental setup. Finally, we perform a number of evalua- tions and demonstrate that our training signal allows a very simple compositional vector model to outperform the state of the art on a task designed to evaluate its ability to transfer semantic informa- tion across languages. Unlike other work in this area, our model does not require word aligned data. In fact, while we evaluate our model on sentence aligned data in this paper, there is no theoretical requirement for this and technically our algorithm could also be applied to document-level parallel data or even comparable data only. 2 Models of Compositional Distributed Semantics In the case of representing individual words as vectors, the distributional account of semantics pro- vides a plausible explanation of what is encoded in a word vector. This follows the idea that the meaning of a word can be determined by \u201cthe company it keeps\u201d [11], that is by the context it ap- pears in. Such context can easily be encoded in vectors using collocational methods, and is also underlying other methods of learning word embeddings [7, 20]. For a number of important problems, semantic representations of individual words do not suffice, but instead a semantic representation of a larger structure\u2014e.g . a phrase or a sentence\u2014is required. This was highlighted in [10], who proposed a mechanism for modifying a word\u2019s representation based on its individual context. The distributional account of semantics can, due to sparsity, not be applied to such larger linguistic units. A notable exception perhaps is Baroni and Zamparelli [1], who learned distributional representations for adjective noun pairs using a collocational approach on a corpus of unprecedented size. The bigram representations learned from that corpus were subsequently used to learn lexicalised composition functions for the constituent words. Most alternative attempts to extract such higher-level semantic representations have focused on learning composition functions that represent the semantics of a larger structure as a function of the representations of its parts. [21] provides an evaluation of a number of simple composition func- tions applied to bigrams. Applied recursively, such approaches can then easily be reconciled with the co-occurrence based word level representations. There are a number of proposals motivating such recursive or deep composition models. Notably, [3] propose a tensor-based model for semantic composition and, similarly, [4] develop a framework for semantic composition by combining dis- tributional theory with pregroup grammars. The latter framework was empirically evaluated and supported by the results in [12]. More recently, various forms of recursive neural networks have successfully been used for semantic composition and related tasks such as sentiment analysis. Such models include recursive autoencoders [24], matrix-vector recursive neural networks [25], untied recursive neural networks [14] or convolutional networks [15]. 2.1 Multilingual Embeddings Much research has been devoted to the task of inducing distributed semantic representations for single languages. In particular English, with its large number of annotated resources, has enjoyed most attention. Recently, progress has been made at representation learning for languages with fewer available resources. Klementiev et al. [16] described a form of multitask learning on word-aligned parallel data to transfer embeddings from one language to another. Earlier work, Haghighi et al. [13], proposed a method for inducing cross-lingual lexica using monolingual feature representations and a small initial lexicon to bootstrap with. This approach has recently been extended by [18, 19], who developed a method for learning transformation matrices to convert semantic vectors of one language into those of another. Is was demonstrated that this approach can be applied to improve tasks related to machine translation. Their CBOW model is also worth noting for its similarities to the composition function used in this paper. Using a slightly different approach, [29], also learned bilingual embeddings for machine translation. It is important to note that, unlike our proposed system, all of these methods require word aligned parallel data for training. 2 Two recent workshop papers deserve mention in this respect. Both Lauly et al. [17] and Sarath Chan- dar et al. [23] propose methods for learning word embeddings by exploiting bilingual data, not unlike the method proposed in this paper. Instead of the noise-contrastive method developed in this paper, both groups of authors make use of autoencoders to encode monolingual representations and to support the bilingual transfer. So far almost all of this work has been focused on learning multilingual representations at the word level. As distributed representations of larger expressions have been shown to be highly useful for a number of tasks, it seems to be a natural next step to also attempt to induce these using cross-lingual data. This paper provides a first step in that direction. 3 Model Description Language acquisition in humans is widely seen as grounded in sensory-motor experience [22, 2]. Based on this idea, there have been some attempts at using multi-modal data for learning better vector representations of words (e.g . [26]). Such methods, however, are not easily scalable across languages or to large amounts of data for which no secondary or tertiary representation might exist. We abstract the underlying principle one step further and attempt to learn semantics from multi- lingual data. The idea is that, given enough parallel data, a shared representation would be forced to capture the common elements between sentences from different languages. What two parallel sentences have in common, of course, is the semantics of those two sentences. Using this data, we propose a novel method for learning vector representations at the word level and beyond. 3.1 Bilingual Signal Exploiting the semantic similarity of parallel sentences across languages, we can define a simple bilingual (and trivially multilingual) error function as follows: Given a compositional sentence model (CV M) MA , which maps a sentence to a vector, we can train a second CVM MB using a corpus CA,B of parallel data from the language pair A, B . For each pair of parallel sentences (a, b) \u2208 CA,B , we attempt to minimize Edist(a, b) =karoot \u2212 brootk 2 (1) where aroot is the vector representing sentence a and broot the vector representing sentence b. 3.2 The BICVM Model A CVM learns semantic representations of larger syntactic units given the semantic representations of their constituents. We assume individual words to be represented by vectors (x \u2208 Rd). Previous methods employ binary parse trees on the data (e.g . [14, 25]) and use weighted or multi- plicative composition functions. Under such a setup, where each node in the tree is terminal or has two children (p \u2192 c0 , c1 ), a binary composition function could take the following form: p=g(We[c0;c1]+be) (2) where [c0; c1] is the concatenation of the two child vectors, W e \u2208 Rd\u00d72d and be \u2208 Rd the encod- ing matrix and bias, respectively, and g an element-wise activation function such as the hyperbolic tangent. For the purposes of evaluation the bilingual signal proposed above, we simplify this com- position function by setting all weight matrices to the identity and all biases to zero. Thereby the CVM reduces to a simple additive composition function: aroot = |a| X i=0 ai (3) Of course, this is a very simplified CVM, as such a bag-of-words approach no longer accounts for word ordering and other effects which a more complex CVM might capture. However, for the purposes of this evaluation (and with the experimental evaluation in mind), such a simplistic composition function should be sufficient to evaluate the novel objective function proposed here. 3 Figure 1: Description of a bilingual model with parallel input sentences a and b. The objective function of this model is to minimize the distance between the sentence level encoding of the bi- text. Principally any composition function can be used to generate the compositional sentence level representations. The composition function is represented by the CVM boxes in the diagram above. Using this additive CVM we want to optimize the bilingual error signal defined above (Eq. 1). For the moment, assume that MA is a perfectly trained CVM such that aroot represents the semantics of the sentence a. Further, due to the use of parallel data, we know that a and b are semantically equivalent. Hence we transfer the semantic knowledge contained in MA onto MB , by learning \u03b8MB to minimize: Ebi (CA,B ) = X (a,b)\u2208CA,B Edist (a, b) (4) Of course, this objective function assumes a fully trained model which we do not have at this stage. While this can be a useful objective for transferring linguistic knowledge into low-resource lan- guages [16], this precondition is not helpful when there is no model to learn from in first place. We resolve this issue by jointly training both models MA and MB . Applying Ebi to parallel data ensures that both models learn a shared representation at the sentence level. As the parallel input sentences share the same meaning, it is reasonable to assume that mini- mizing Ebi will force the model to learn their semantic representation. Let \u03b8bi = \u03b8MA \u222a \u03b8MB . The joint objective function J (\u03b8bi ) thus becomes: J(\u03b8bi) = Ebi(CA,B) + \u03bb 2 k\u03b8bi k 2 (5) where \u03bbk\u03b8bi k1 is the L2 regularization term. It is apparent that this joint objective J (\u03b8bi ) is degenerate. The models could learn to reduce all embeddings and composition weights to zero and thereby minimize the objective function. We ad- dress this issue by employing a form of contrastive estimation penalizing small distances between non-parallel sentence pairs. For every pair of parallel sentences (a, b) we sample a number of ad- ditional sentences n \u2208 CB , which\u2014with high probability\u2014are not exact translations of a. This is comparable to the second term of the loss function of a large margin nearest neighbour classifier (see Eq. 12 in [28]): Enoise (a, b, n) = [1 + Edist (a, b) \u2212 Edist(a, n)]+ (6) 4 where [x]+ = max(x, 0) denotes the standard hinge loss. Thus, the final objective function to minimize for the BICVM model is: J(\u03b8bi) = X (a,b)\u2208CA,B k X i=1 Enoise (a, b, ni) !+ \u03bb 2 k\u03b8bi k 2 (7) 3.3 Model Learning Given the objective function as defined above, model learning can employ the same techniques as any monolingual CVM. In particular, as the objective function is differentiable, we can use standard gradient descent techniques such as stochastic gradient descent, L-BFGS or the adaptive gradient algorithm AdaGrad [8]. Within each monolingual CVM, we use backpropagation through structure after applying the joint error to each sentence level node. 4 Experiments 4.1 Data and Parameters All model weights were randomly initialised using a Gaussian distribution. There are a number of parameters that can influence model training. We selected the following values for simplicity and comparability with prior work. In future work we will investigate the effect of these parameters in greater detail. L2 regularization (1), step-size (0.1), number of noise elements (50), margin size (50), embedding dimensionality (d=40). The noise elements samples were randomly drawn from the corpus at training time, individually for each training sample and epoch. We use the Europarl corpus (v7)1 for training the bilingual model. The corpus was pre-processed using the set of tools provided by cdec2 [9] for tokenizing and lowercasing the data. Further, all empty sentences as well as their translations were removed from the corpus. We present results from two experiments. The BICVM model was trained on 500k sentence pairs of the English-German parallel section of the Europarl corpus. The BICVM+ model used this dataset in combination with another 500k parallel sentences from the English-French section of the corpus, resulting in 1 million English sentences, each paired up with either a German or a French sentence. Each language\u2019s vocabulary used distinct encodings to avoid potential overlap. The motivation behind B ICVM+ is to investigate whether we can learn better embeddings by intro- ducing additional data in a different language. This is similar to prior work in machine translation where English was used as a pivot for translation between low-resource languages [5]. We use the adaptive gradient method, AdaGrad [8], for updating the weights of our models, and ter- minate training after 50 iterations. Earlier experiments indicated that the BICVM model converges faster than the B ICVM+ model, but we report results on the same number of iterations for better comparability3 . 4.2 Cross-Lingual Document Classification We evaluate our model using the cross-lingual document classification (CLDC) task of Klementiev et al. [16]. This task involves learning language independent embeddings which are then used for document classification across the English-German language pair. For this, CLDC employs a par- ticular kind of supervision, namely using supervised training data in one language and evaluating without supervision in another. Thus, CLDC is a good task for establishing whether our learned representations are semantically useful across multiple languages. We follow the experimental setup described in [16], with the exception that we learn our embeddings using solely the Europarl data and only use the Reuters RCV1/RCV2 corpora during the classifier training and testing stages. Each document in the classification task is represented by the average 1 http://www.statmt.org/europarl/ 2 https://github.com/redpony/cdec 3 These numbers were updated following comments in the ICLR open review process. Results for other dimensionalities and our source code for our model are available at http://www.karlmoritz.com. 5 Model en\u2192de de\u2192en Majority Class 46.8 46.8 Glossed 65.1 68.6 MT 68.1 67.4 I-Matrix 77.6 71.1 BICVM 83.7 71.4 BICVM+ 86.2 76.9 Table 1: Classification accuracy for training on English and German with 1000 labeled examples. Cross-lingual compositional representations (B ICVM and BICVM+), cross-lingual representations using learned embeddings and an interaction matrix (I-Matrix) [16] translated (MT) and glossed (Glossed) words, and the majority class baseline. The MT and Glossed results are also taken from Klementiev et al. [16]. 100 200 500 1000 5000 10000 50 60 70 80 Training Documents (en) C l a s s i fi c a t i o n A c c u r a c y ( % ) 100 200 500 1000 5000 10000 50 60 70 80 Training Documents (de) BICVM BICVM+ I-Matrix MT Glossed Majority Class Figure 2: Classification accuracy for a number of models (see Table 1 for model descriptions). The left chart shows results for these models when trained on English data and evaluated on German data, the right chart vice versa. of the d-dimensional representations of all its sentences. We train the multiclass classifier using the same settings and implementation of the averaged perceptron classifier [6] as used in [16]. We ran the CLDC experiments both by training on English and testing on German documents and vice versa. Using the data splits provided by [16], we used varying training data sizes from 100 to 10,000 documents for training the multiclass classifier. The results of this task across training sizes are shown in Figure 2. Table 1 shows the results for training on 1,000 documents. Both models, BICVM and BICVM+ outperform all prior work on this task. Further, the BICVM+ model outperforms the BICVM model, indicating the usefulness of adding training data even from a separate language pair. 4.3 Visualization While the CLDC experiment focused on establishing the semantic content of the sentence level representations, we also want to briefly investigate the induced word embeddings. In particular the BICVM+ model is interesting for that purpose, as it allows us to evaluate our approach of using English as a pivot language in a multilingual setup. In Figure 3 we show the t-SNE projections for a number of English, French and German words. Of particular interest should be the right chart, which highlights bilingual embeddings between French and German words. Even though the model did not use any parallel French-German data during training, it still managed to learn semantic word-word similarity across these two languages. 6 Figure 3: The left scatter plot shows t-SNE projections for a weekdays in all three languages using the representations learned in the BICVM+ model. Even though the model did not use any parallel French-German data during training, it still learns semantic similarity between these two languages using English as a pivot. To highlight this, the right plot shows another set of words (months of the year) using only the German and French words. 5 Conclusions With this paper we have proposed a novel method for inducing cross-lingual distributed represen- tations for compositional semantics. Using a very simple method for semantic composition, we nevertheless managed to obtain state of the art results on the CLDC task, specifically designed to evaluate semantic transfer across languages. After extending our approach to include multilingual training data in the BICVM+ model, we were able to demonstrate that adding additional languages further improves the model. Furthermore, using some qualitative experiments and visualizations, we showed that our approach also allows us to learn semantically related embeddings across languages without any direct training data. Our approach provides great flexibility in training data and requires little to no annotation. Hav- ing demonstrated the successful training of semantic representations using sentence aligned data, a plausible next step is to attempt training using document-aligned data or even corpora of comparable documents. This may provide even greater possibilities for working with low-resource languages. In the same vein, the success of our pivoting experiments suggest further work. Unlike other pivot approaches, it is easy to extend our model to have multiple pivot languages. Thus some pivots could preserve different aspects such as case, gender etc., and overcome other issues related to having a single pivot language. As we have achieved the results in this paper with a relatively simple CV M, it would also be inter- esting to establish whether our objective function can be used in combination with more complex compositional vector models such as MV-RNN [25] or tensor-based approaches, to see whether these can further improve results on both mono- and multilingual tasks when used in conjunction with our cross-lingual objective function. Related to this, we will also apply our model to a wider variety of tasks including machine translation and multilingual information extraction. Acknowledgements The authors would like to thank Alexandre Klementiev and his co-authors for making their datasets and averaged perceptron implementation available, as well as answering a number of questions related to their work on this task. This work was supported by EPSRC grant EP/K036580/1 and a Xerox Foundation Award. 7 References [1] Marco Baroni and Roberto Zamparelli. Nouns are vectors, adjectives are matrices: Represent- ing adjective-noun constructions in semantic space. In Proceedings of EMNLP, 2010. [2] Paul Bloom. Precis of how children learn the meanings of words. Behavioral and Brain Sciences, 24:1095\u20131103, 2001. [3] Stephen Clark and Stephen Pulman. Combining symbolic and distributional models of mean- ing. In Proceedings of AAAI Spring Symposium on Quantum Interaction. AAAI Press, 2007. [4] Bob Coecke, Mehrnoosh Sadrzadeh, and Stephen Clark. Mathematical foundations for a com- positional distributional model of meaning. Lambek Festschrift. Linguistic Analysis, 36:345\u2013 384, 2010. [5] Trevor Cohn and Mirella Lapata. Machine translation by triangulation: Making effective use of multi-parallel corpora. In Proceedings of ACL, pages 728\u2013735, Prague, Czech Republic, June 2007. Association for Computational Linguistics. [6] Michael Collins. Discriminative training methods for hidden markov models: Theory and experiments with perceptron algorithms. In Proceedings of ACL-EMNLP. Association for Computational Linguistics, 2002. doi: 10.3115/1118693.1118694. [7] Ronan Collobert and Jason Weston. A unified architecture for natural language processing: Deep neural networks with multitask learning. In Proceedings of ICML, 2008. [8] John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research, 12:2121\u20132159, July 2011. ISSN 1532-4435. [9] Chris Dyer, Adam Lopez, Juri Ganitkevitch, Johnathan Weese, Ferhan Ture, Phil Blunsom, Hendra Setiawan, Vladimir Eidelman, and Philip Resnik. cdec: A decoder, alignment, and learning framework for finite-state and context-free translation models. In Proceedings of ACL, 2010. [10] K. Erk and S. Pad \u0301o . A structured vector space model for word meaning in context. Proceedings of EMNLP, 2008. [11] J. R . Firth. A synopsis of linguistic theory 1930-55 . 1952-59:1\u201332, 1957. [12] Edward Grefenstette and Mehrnoosh Sadrzadeh. Experimental support for a categorical com- positional distributional model of meaning. In Proceedings of EMNLP, 2011. [13] Aria Haghighi, Percy Liang, Taylor Berg-Kirkpatrick, and Dan Klein. Learning bilingual lexicons from monolingual corpora. In Proceedings of ACL-HLT, 2008. [14] Karl Moritz Hermann and Phil Blunsom. The Role of Syntax in Vector Space Models of Compositional Semantics. In Proceedings of ACL, 2013. [15] Nal Kalchbrenner and Phil Blunsom. Recurrent convolutional neural networks for discourse compositionality. In Proceedings of the Workshop on Continuous Vector Space Models and their Compositionality, 2013. [16] Alexandre Klementiev, Ivan Titov, and Binod Bhattarai. Inducing crosslingual distributed representations of words. In Proceedings of COLING, 2012. [17] Stanislas Lauly, Alex Boulanger, and Hugo Larochelle. Learning multilingual word represen- tations using a bag-of-words autoencoder. In Deep Learning Workshop at NIPS, 2013. [18] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Efficient estimation of word representations in vector space. CoRR, 2013. [19] Tomas Mikolov, Quoc V. Le, and Ilya Sutskever. Exploiting similarities among languages for machine translation. CoRR, 2013. [20] Tom \u0301a \u02c7s Mikolov, Martin Karafi\u0301at, Luk \u0301a \u02c7s Burget, Jan \u02c7Cernock \u0301y, and Sanjeev Khudanpur. Re- current neural network based language model. In Proceedings of INTERSPEECH, 2010. [21] Jeff Mitchell and Mirella Lapata. Vector-based models of semantic composition. In In Pro- ceedings of ACL, 2008. [22] D. Roy. Grounded spoken language acquisition: Experiments in word learning. IEEE Trans- actions on Multimedia, 5(2):197\u2013209, June 2003. ISSN 1520-9210. doi: 10.1109/TMM.2003. 811618. 8 [23] A P Sarath Chandar, M Khapra Mitesh, B Ravindran, Vikas Raykar, and Amrita Saha. Multi- lingual deep learning. In Deep Learning Workshop at NIPS, 2013. [24] Richard Socher, Jeffrey Pennington, Eric H. Huang, Andrew Y. Ng, and Christopher D. Man- ning. Semi-supervised recursive autoencoders for predicting sentiment distributions. In Pro- ceedings of EMNLP, 2011. [25] Richard Socher, Brody Huval, Christopher D. Manning, and Andrew Y. Ng. Semantic compo- sitionality through recursive matrix-vector spaces. In Proceedings of EMNLP-CoNLL, pages 1201\u20131211, 2012. [26] Nitish Srivastava and Ruslan Salakhutdinov. Multimodal learning with deep boltzmann ma- chines. In Proceedings of NIPS. 2012. [27] P. D . Turney and P. Pantel. From frequency to meaning: Vector space models of semantics. Journal of Artificial Intelligence Research, 37(1):141\u2013188, 2010. [28] Kilian Q. Weinberger and Lawrence K. Saul. Distance metric learning for large margin nearest neighbor classification. Journal of Machine Learning Research, 10:207\u2013244, June 2009. ISSN 1532-4435. [29] Will Y. Zou, Richard Socher, Daniel Cer, and Christopher D. Manning. Bilingual word em- beddings for phrase-based machine translation. In Proceedings of EMNLP, 2013. 9", "tokens_layer": {"doc_id": "./1312.6173v4.hocr", "tokens": ["Multilingual", "Distributed", "Representations", "without", "Word", "Alignment", "Karl", "Moritz", "Hermann", "and", "Phil", "Blunsom", "Department", "of", "Computer", "Science", "University", "of", "Oxford", "Oxford,", "OX1", "3QD,", "UK", "{karl.moritz.hermann,phil.blunsom}@cs.ox.ac.uk", "Abstract", "Distributed", "representations", "of", "meaning", "are", "a", "natural", "way", "to", "encode", "covariance", "relationships", "between", "words", "and", "phrases", "in", "NLP.", "By", "overcoming", "data", "sparsity", "problems,", "as", "well", "as", "providing", "information", "about", "semantic", "relatedness", "which", "is", "not", "available", "in", "discrete", "representations,", "distributed", "representations", "have", "proven", "useful", "in", "many", "NLP", "tasks.", "Recent", "work", "has", "shown", "how", "compositional", "semantic", "representations", "can", "successfully", "be", "applied", "to", "a", "number", "of", "monolingual", "applica-", "tions", "such", "as", "sentiment", "analysis.", "At", "the", "same", "time,", "there", "has", "been", "some", "initial", "success", "in", "work", "on", "learning", "shared", "word-level", "representations", "across", "languages.", "We", "combine", "these", "two", "approaches", "by", "proposing", "a", "method", "for", "learning", "distributed", "representations", "in", "a", "multilingual", "setup.", "Our", "model", "learns", "to", "assign", "similar", "embed-", "dings", "to", "aligned", "sentences", "and", "dissimilar", "ones", "to", "sentence", "which", "are", "not", "aligned", "while", "not", "requiring", "word", "alignments.", "We", "show", "that", "our", "representations", "are", "seman-", "tically", "informative", "and", "apply", "them", "to", "a", "cross-lingual", "document", "classification", "task", "where", "we", "outperform", "the", "previous", "state", "of", "the", "art.", "Further,", "by", "employing", "parallel", "corpora", "of", "multiple", "language", "pairs", "we", "find", "that", "our", "model", "learns", "representations", "that", "capture", "semantic", "relationships", "across", "languages", "for", "which", "no", "parallel", "data", "was", "used.", "1", "Introduction", "Distributed", "representations", "of", "words", "are", "increasingly", "being", "used", "to", "achieve", "high", "levels", "of", "generalisa-", "tion", "within", "language", "modelling", "tasks.", "Successful", "applications", "of", "this", "approach", "include", "word-sense", "disambiguation,", "word", "similarity", "and", "synonym", "detection", "(e.g.", "[10,", "27]).", "Subsequent", "work", "has", "also", "attempted", "to", "learn", "distributed", "semantics", "of", "larger", "structures,", "allowing", "us", "to", "apply", "distributed", "rep-", "resentation", "to", "tasks", "such", "as", "sentiment", "analysis", "or", "paraphrase", "detection", "(i.a.", "[1,", "3,", "12,", "14,", "21,", "25]).", "At", "the", "same", "time", "a", "second", "strand", "of", "work", "has", "focused", "on", "transferring", "linguistic", "knowledge", "across", "languages,", "and", "particularly", "from", "English", "into", "low-resource", "languages,", "by", "means", "of", "distributed", "rep-", "resentations", "at", "the", "word", "level", "[13,", "16].", "Currently,", "work", "on", "compositional", "semantic", "representations", "focuses", "on", "monolingual", "data", "while", "the", "cross-lingual", "work", "focuses", "on", "word", "level", "representations", "only.", "However,", "it", "appears", "logical", "that", "these", "two", "strands", "of", "work", "should", "be", "combined", "as", "there", "exists", "a", "plethora", "of", "parallel", "corpora", "with", "aligned", "data", "at", "the", "sentence", "level", "or", "beyond", "which", "could", "be", "exploited", "in", "such", "work.", "Further,", "sentence", "aligned", "data", "provides", "a", "plausible", "concept", "of", "semantic", "similarity,", "which", "can", "be", "harder", "to", "define", "at", "the", "word", "level.", "Consider", "the", "case", "of", "alignment", "between", "a", "German", "compound", "noun", "(e.g.", "\u201cSchwerlastverkehr\u201d)", "and", "its", "English", "equivalent", "(\u201cheavy", "goods", "vehicle", "traffic\u201d).", "Semantic", "alignment", "at", "the", "phrase", "level", "here", "appears", "far", "more", "plausible", "than", "aligning", "individual", "tokens", "for", "semantic", "transfer.", "1", "a", "r", "X", "i", "v", ":", "1", "3", "1", "2", ".", "6", "1", "7", "3", "v", "4", "[", "c", "s", ".", "C", "L", "]", "2", "0", "M", "a", "r", "2", "0", "1", "4", "Using", "this", "rationale,", "and", "building", "on", "both", "work", "related", "to", "learning", "cross-lingual", "embeddings", "as", "well", "as", "to", "compositional", "semantic", "representations,", "we", "introduce", "a", "model", "that", "learns", "cross-lingual", "em-", "beddings", "at", "the", "sentence", "level.", "In", "the", "following", "section", "we", "will", "briefly", "discuss", "prior", "work", "in", "these", "two", "fields", "before", "going", "on", "to", "describe", "the", "bilingual", "training", "signal", "that", "we", "developed", "for", "learning", "multilingual", "compositional", "embeddings.", "Subsequently,", "we", "will", "describe", "our", "model", "in", "greater", "detail", "as", "well", "as", "its", "training", "procedure", "and", "experimental", "setup.", "Finally,", "we", "perform", "a", "number", "of", "evalua-", "tions", "and", "demonstrate", "that", "our", "training", "signal", "allows", "a", "very", "simple", "compositional", "vector", "model", "to", "outperform", "the", "state", "of", "the", "art", "on", "a", "task", "designed", "to", "evaluate", "its", "ability", "to", "transfer", "semantic", "informa-", "tion", "across", "languages.", "Unlike", "other", "work", "in", "this", "area,", "our", "model", "does", "not", "require", "word", "aligned", "data.", "In", "fact,", "while", "we", "evaluate", "our", "model", "on", "sentence", "aligned", "data", "in", "this", "paper,", "there", "is", "no", "theoretical", "requirement", "for", "this", "and", "technically", "our", "algorithm", "could", "also", "be", "applied", "to", "document-level", "parallel", "data", "or", "even", "comparable", "data", "only.", "2", "Models", "of", "Compositional", "Distributed", "Semantics", "In", "the", "case", "of", "representing", "individual", "words", "as", "vectors,", "the", "distributional", "account", "of", "semantics", "pro-", "vides", "a", "plausible", "explanation", "of", "what", "is", "encoded", "in", "a", "word", "vector.", "This", "follows", "the", "idea", "that", "the", "meaning", "of", "a", "word", "can", "be", "determined", "by", "\u201cthe", "company", "it", "keeps\u201d", "[11],", "that", "is", "by", "the", "context", "it", "ap-", "pears", "in.", "Such", "context", "can", "easily", "be", "encoded", "in", "vectors", "using", "collocational", "methods,", "and", "is", "also", "underlying", "other", "methods", "of", "learning", "word", "embeddings", "[7,", "20].", "For", "a", "number", "of", "important", "problems,", "semantic", "representations", "of", "individual", "words", "do", "not", "suffice,", "but", "instead", "a", "semantic", "representation", "of", "a", "larger", "structure\u2014e.g", ".", "a", "phrase", "or", "a", "sentence\u2014is", "required.", "This", "was", "highlighted", "in", "[10],", "who", "proposed", "a", "mechanism", "for", "modifying", "a", "word\u2019s", "representation", "based", "on", "its", "individual", "context.", "The", "distributional", "account", "of", "semantics", "can,", "due", "to", "sparsity,", "not", "be", "applied", "to", "such", "larger", "linguistic", "units.", "A", "notable", "exception", "perhaps", "is", "Baroni", "and", "Zamparelli", "[1],", "who", "learned", "distributional", "representations", "for", "adjective", "noun", "pairs", "using", "a", "collocational", "approach", "on", "a", "corpus", "of", "unprecedented", "size.", "The", "bigram", "representations", "learned", "from", "that", "corpus", "were", "subsequently", "used", "to", "learn", "lexicalised", "composition", "functions", "for", "the", "constituent", "words.", "Most", "alternative", "attempts", "to", "extract", "such", "higher-level", "semantic", "representations", "have", "focused", "on", "learning", "composition", "functions", "that", "represent", "the", "semantics", "of", "a", "larger", "structure", "as", "a", "function", "of", "the", "representations", "of", "its", "parts.", "[21]", "provides", "an", "evaluation", "of", "a", "number", "of", "simple", "composition", "func-", "tions", "applied", "to", "bigrams.", "Applied", "recursively,", "such", "approaches", "can", "then", "easily", "be", "reconciled", "with", "the", "co-occurrence", "based", "word", "level", "representations.", "There", "are", "a", "number", "of", "proposals", "motivating", "such", "recursive", "or", "deep", "composition", "models.", "Notably,", "[3]", "propose", "a", "tensor-based", "model", "for", "semantic", "composition", "and,", "similarly,", "[4]", "develop", "a", "framework", "for", "semantic", "composition", "by", "combining", "dis-", "tributional", "theory", "with", "pregroup", "grammars.", "The", "latter", "framework", "was", "empirically", "evaluated", "and", "supported", "by", "the", "results", "in", "[12].", "More", "recently,", "various", "forms", "of", "recursive", "neural", "networks", "have", "successfully", "been", "used", "for", "semantic", "composition", "and", "related", "tasks", "such", "as", "sentiment", "analysis.", "Such", "models", "include", "recursive", "autoencoders", "[24],", "matrix-vector", "recursive", "neural", "networks", "[25],", "untied", "recursive", "neural", "networks", "[14]", "or", "convolutional", "networks", "[15].", "2.1", "Multilingual", "Embeddings", "Much", "research", "has", "been", "devoted", "to", "the", "task", "of", "inducing", "distributed", "semantic", "representations", "for", "single", "languages.", "In", "particular", "English,", "with", "its", "large", "number", "of", "annotated", "resources,", "has", "enjoyed", "most", "attention.", "Recently,", "progress", "has", "been", "made", "at", "representation", "learning", "for", "languages", "with", "fewer", "available", "resources.", "Klementiev", "et", "al.", "[16]", "described", "a", "form", "of", "multitask", "learning", "on", "word-aligned", "parallel", "data", "to", "transfer", "embeddings", "from", "one", "language", "to", "another.", "Earlier", "work,", "Haghighi", "et", "al.", "[13],", "proposed", "a", "method", "for", "inducing", "cross-lingual", "lexica", "using", "monolingual", "feature", "representations", "and", "a", "small", "initial", "lexicon", "to", "bootstrap", "with.", "This", "approach", "has", "recently", "been", "extended", "by", "[18,", "19],", "who", "developed", "a", "method", "for", "learning", "transformation", "matrices", "to", "convert", "semantic", "vectors", "of", "one", "language", "into", "those", "of", "another.", "Is", "was", "demonstrated", "that", "this", "approach", "can", "be", "applied", "to", "improve", "tasks", "related", "to", "machine", "translation.", "Their", "CBOW", "model", "is", "also", "worth", "noting", "for", "its", "similarities", "to", "the", "composition", "function", "used", "in", "this", "paper.", "Using", "a", "slightly", "different", "approach,", "[29],", "also", "learned", "bilingual", "embeddings", "for", "machine", "translation.", "It", "is", "important", "to", "note", "that,", "unlike", "our", "proposed", "system,", "all", "of", "these", "methods", "require", "word", "aligned", "parallel", "data", "for", "training.", "2", "Two", "recent", "workshop", "papers", "deserve", "mention", "in", "this", "respect.", "Both", "Lauly", "et", "al.", "[17]", "and", "Sarath", "Chan-", "dar", "et", "al.", "[23]", "propose", "methods", "for", "learning", "word", "embeddings", "by", "exploiting", "bilingual", "data,", "not", "unlike", "the", "method", "proposed", "in", "this", "paper.", "Instead", "of", "the", "noise-contrastive", "method", "developed", "in", "this", "paper,", "both", "groups", "of", "authors", "make", "use", "of", "autoencoders", "to", "encode", "monolingual", "representations", "and", "to", "support", "the", "bilingual", "transfer.", "So", "far", "almost", "all", "of", "this", "work", "has", "been", "focused", "on", "learning", "multilingual", "representations", "at", "the", "word", "level.", "As", "distributed", "representations", "of", "larger", "expressions", "have", "been", "shown", "to", "be", "highly", "useful", "for", "a", "number", "of", "tasks,", "it", "seems", "to", "be", "a", "natural", "next", "step", "to", "also", "attempt", "to", "induce", "these", "using", "cross-lingual", "data.", "This", "paper", "provides", "a", "first", "step", "in", "that", "direction.", "3", "Model", "Description", "Language", "acquisition", "in", "humans", "is", "widely", "seen", "as", "grounded", "in", "sensory-motor", "experience", "[22,", "2].", "Based", "on", "this", "idea,", "there", "have", "been", "some", "attempts", "at", "using", "multi-modal", "data", "for", "learning", "better", "vector", "representations", "of", "words", "(e.g", ".", "[26]).", "Such", "methods,", "however,", "are", "not", "easily", "scalable", "across", "languages", "or", "to", "large", "amounts", "of", "data", "for", "which", "no", "secondary", "or", "tertiary", "representation", "might", "exist.", "We", "abstract", "the", "underlying", "principle", "one", "step", "further", "and", "attempt", "to", "learn", "semantics", "from", "multi-", "lingual", "data.", "The", "idea", "is", "that,", "given", "enough", "parallel", "data,", "a", "shared", "representation", "would", "be", "forced", "to", "capture", "the", "common", "elements", "between", "sentences", "from", "different", "languages.", "What", "two", "parallel", "sentences", "have", "in", "common,", "of", "course,", "is", "the", "semantics", "of", "those", "two", "sentences.", "Using", "this", "data,", "we", "propose", "a", "novel", "method", "for", "learning", "vector", "representations", "at", "the", "word", "level", "and", "beyond.", "3.1", "Bilingual", "Signal", "Exploiting", "the", "semantic", "similarity", "of", "parallel", "sentences", "across", "languages,", "we", "can", "define", "a", "simple", "bilingual", "(and", "trivially", "multilingual)", "error", "function", "as", "follows:", "Given", "a", "compositional", "sentence", "model", "(CV", "M)", "MA", ",", "which", "maps", "a", "sentence", "to", "a", "vector,", "we", "can", "train", "a", "second", "CVM", "MB", "using", "a", "corpus", "CA,B", "of", "parallel", "data", "from", "the", "language", "pair", "A,", "B", ".", "For", "each", "pair", "of", "parallel", "sentences", "(a,", "b)", "\u2208", "CA,B", ",", "we", "attempt", "to", "minimize", "Edist(a,", "b)", "=karoot", "\u2212", "brootk", "2", "(1)", "where", "aroot", "is", "the", "vector", "representing", "sentence", "a", "and", "broot", "the", "vector", "representing", "sentence", "b.", "3.2", "The", "BICVM", "Model", "A", "CVM", "learns", "semantic", "representations", "of", "larger", "syntactic", "units", "given", "the", "semantic", "representations", "of", "their", "constituents.", "We", "assume", "individual", "words", "to", "be", "represented", "by", "vectors", "(x", "\u2208", "Rd).", "Previous", "methods", "employ", "binary", "parse", "trees", "on", "the", "data", "(e.g", ".", "[14,", "25])", "and", "use", "weighted", "or", "multi-", "plicative", "composition", "functions.", "Under", "such", "a", "setup,", "where", "each", "node", "in", "the", "tree", "is", "terminal", "or", "has", "two", "children", "(p", "\u2192", "c0", ",", "c1", "),", "a", "binary", "composition", "function", "could", "take", "the", "following", "form:", "p=g(We[c0;c1]+be)", "(2)", "where", "[c0;", "c1]", "is", "the", "concatenation", "of", "the", "two", "child", "vectors,", "W", "e", "\u2208", "Rd\u00d72d", "and", "be", "\u2208", "Rd", "the", "encod-", "ing", "matrix", "and", "bias,", "respectively,", "and", "g", "an", "element-wise", "activation", "function", "such", "as", "the", "hyperbolic", "tangent.", "For", "the", "purposes", "of", "evaluation", "the", "bilingual", "signal", "proposed", "above,", "we", "simplify", "this", "com-", "position", "function", "by", "setting", "all", "weight", "matrices", "to", "the", "identity", "and", "all", "biases", "to", "zero.", "Thereby", "the", "CVM", "reduces", "to", "a", "simple", "additive", "composition", "function:", "aroot", "=", "|a|", "X", "i=0", "ai", "(3)", "Of", "course,", "this", "is", "a", "very", "simplified", "CVM,", "as", "such", "a", "bag-of-words", "approach", "no", "longer", "accounts", "for", "word", "ordering", "and", "other", "effects", "which", "a", "more", "complex", "CVM", "might", "capture.", "However,", "for", "the", "purposes", "of", "this", "evaluation", "(and", "with", "the", "experimental", "evaluation", "in", "mind),", "such", "a", "simplistic", "composition", "function", "should", "be", "sufficient", "to", "evaluate", "the", "novel", "objective", "function", "proposed", "here.", "3", "Figure", "1:", "Description", "of", "a", "bilingual", "model", "with", "parallel", "input", "sentences", "a", "and", "b.", "The", "objective", "function", "of", "this", "model", "is", "to", "minimize", "the", "distance", "between", "the", "sentence", "level", "encoding", "of", "the", "bi-", "text.", "Principally", "any", "composition", "function", "can", "be", "used", "to", "generate", "the", "compositional", "sentence", "level", "representations.", "The", "composition", "function", "is", "represented", "by", "the", "CVM", "boxes", "in", "the", "diagram", "above.", "Using", "this", "additive", "CVM", "we", "want", "to", "optimize", "the", "bilingual", "error", "signal", "defined", "above", "(Eq.", "1).", "For", "the", "moment,", "assume", "that", "MA", "is", "a", "perfectly", "trained", "CVM", "such", "that", "aroot", "represents", "the", "semantics", "of", "the", "sentence", "a.", "Further,", "due", "to", "the", "use", "of", "parallel", "data,", "we", "know", "that", "a", "and", "b", "are", "semantically", "equivalent.", "Hence", "we", "transfer", "the", "semantic", "knowledge", "contained", "in", "MA", "onto", "MB", ",", "by", "learning", "\u03b8MB", "to", "minimize:", "Ebi", "(CA,B", ")", "=", "X", "(a,b)\u2208CA,B", "Edist", "(a,", "b)", "(4)", "Of", "course,", "this", "objective", "function", "assumes", "a", "fully", "trained", "model", "which", "we", "do", "not", "have", "at", "this", "stage.", "While", "this", "can", "be", "a", "useful", "objective", "for", "transferring", "linguistic", "knowledge", "into", "low-resource", "lan-", "guages", "[16],", "this", "precondition", "is", "not", "helpful", "when", "there", "is", "no", "model", "to", "learn", "from", "in", "first", "place.", "We", "resolve", "this", "issue", "by", "jointly", "training", "both", "models", "MA", "and", "MB", ".", "Applying", "Ebi", "to", "parallel", "data", "ensures", "that", "both", "models", "learn", "a", "shared", "representation", "at", "the", "sentence", "level.", "As", "the", "parallel", "input", "sentences", "share", "the", "same", "meaning,", "it", "is", "reasonable", "to", "assume", "that", "mini-", "mizing", "Ebi", "will", "force", "the", "model", "to", "learn", "their", "semantic", "representation.", "Let", "\u03b8bi", "=", "\u03b8MA", "\u222a", "\u03b8MB", ".", "The", "joint", "objective", "function", "J", "(\u03b8bi", ")", "thus", "becomes:", "J(\u03b8bi)", "=", "Ebi(CA,B)", "+", "\u03bb", "2", "k\u03b8bi", "k", "2", "(5)", "where", "\u03bbk\u03b8bi", "k1", "is", "the", "L2", "regularization", "term.", "It", "is", "apparent", "that", "this", "joint", "objective", "J", "(\u03b8bi", ")", "is", "degenerate.", "The", "models", "could", "learn", "to", "reduce", "all", "embeddings", "and", "composition", "weights", "to", "zero", "and", "thereby", "minimize", "the", "objective", "function.", "We", "ad-", "dress", "this", "issue", "by", "employing", "a", "form", "of", "contrastive", "estimation", "penalizing", "small", "distances", "between", "non-parallel", "sentence", "pairs.", "For", "every", "pair", "of", "parallel", "sentences", "(a,", "b)", "we", "sample", "a", "number", "of", "ad-", "ditional", "sentences", "n", "\u2208", "CB", ",", "which\u2014with", "high", "probability\u2014are", "not", "exact", "translations", "of", "a.", "This", "is", "comparable", "to", "the", "second", "term", "of", "the", "loss", "function", "of", "a", "large", "margin", "nearest", "neighbour", "classifier", "(see", "Eq.", "12", "in", "[28]):", "Enoise", "(a,", "b,", "n)", "=", "[1", "+", "Edist", "(a,", "b)", "\u2212", "Edist(a,", "n)]+", "(6)", "4", "where", "[x]+", "=", "max(x,", "0)", "denotes", "the", "standard", "hinge", "loss.", "Thus,", "the", "final", "objective", "function", "to", "minimize", "for", "the", "BICVM", "model", "is:", "J(\u03b8bi)", "=", "X", "(a,b)\u2208CA,B", "k", "X", "i=1", "Enoise", "(a,", "b,", "ni)", "!+", "\u03bb", "2", "k\u03b8bi", "k", "2", "(7)", "3.3", "Model", "Learning", "Given", "the", "objective", "function", "as", "defined", "above,", "model", "learning", "can", "employ", "the", "same", "techniques", "as", "any", "monolingual", "CVM.", "In", "particular,", "as", "the", "objective", "function", "is", "differentiable,", "we", "can", "use", "standard", "gradient", "descent", "techniques", "such", "as", "stochastic", "gradient", "descent,", "L-BFGS", "or", "the", "adaptive", "gradient", "algorithm", "AdaGrad", "[8].", "Within", "each", "monolingual", "CVM,", "we", "use", "backpropagation", "through", "structure", "after", "applying", "the", "joint", "error", "to", "each", "sentence", "level", "node.", "4", "Experiments", "4.1", "Data", "and", "Parameters", "All", "model", "weights", "were", "randomly", "initialised", "using", "a", "Gaussian", "distribution.", "There", "are", "a", "number", "of", "parameters", "that", "can", "influence", "model", "training.", "We", "selected", "the", "following", "values", "for", "simplicity", "and", "comparability", "with", "prior", "work.", "In", "future", "work", "we", "will", "investigate", "the", "effect", "of", "these", "parameters", "in", "greater", "detail.", "L2", "regularization", "(1),", "step-size", "(0.1),", "number", "of", "noise", "elements", "(50),", "margin", "size", "(50),", "embedding", "dimensionality", "(d=40).", "The", "noise", "elements", "samples", "were", "randomly", "drawn", "from", "the", "corpus", "at", "training", "time,", "individually", "for", "each", "training", "sample", "and", "epoch.", "We", "use", "the", "Europarl", "corpus", "(v7)1", "for", "training", "the", "bilingual", "model.", "The", "corpus", "was", "pre-processed", "using", "the", "set", "of", "tools", "provided", "by", "cdec2", "[9]", "for", "tokenizing", "and", "lowercasing", "the", "data.", "Further,", "all", "empty", "sentences", "as", "well", "as", "their", "translations", "were", "removed", "from", "the", "corpus.", "We", "present", "results", "from", "two", "experiments.", "The", "BICVM", "model", "was", "trained", "on", "500k", "sentence", "pairs", "of", "the", "English-German", "parallel", "section", "of", "the", "Europarl", "corpus.", "The", "BICVM+", "model", "used", "this", "dataset", "in", "combination", "with", "another", "500k", "parallel", "sentences", "from", "the", "English-French", "section", "of", "the", "corpus,", "resulting", "in", "1", "million", "English", "sentences,", "each", "paired", "up", "with", "either", "a", "German", "or", "a", "French", "sentence.", "Each", "language\u2019s", "vocabulary", "used", "distinct", "encodings", "to", "avoid", "potential", "overlap.", "The", "motivation", "behind", "B", "ICVM+", "is", "to", "investigate", "whether", "we", "can", "learn", "better", "embeddings", "by", "intro-", "ducing", "additional", "data", "in", "a", "different", "language.", "This", "is", "similar", "to", "prior", "work", "in", "machine", "translation", "where", "English", "was", "used", "as", "a", "pivot", "for", "translation", "between", "low-resource", "languages", "[5].", "We", "use", "the", "adaptive", "gradient", "method,", "AdaGrad", "[8],", "for", "updating", "the", "weights", "of", "our", "models,", "and", "ter-", "minate", "training", "after", "50", "iterations.", "Earlier", "experiments", "indicated", "that", "the", "BICVM", "model", "converges", "faster", "than", "the", "B", "ICVM+", "model,", "but", "we", "report", "results", "on", "the", "same", "number", "of", "iterations", "for", "better", "comparability3", ".", "4.2", "Cross-Lingual", "Document", "Classification", "We", "evaluate", "our", "model", "using", "the", "cross-lingual", "document", "classification", "(CLDC)", "task", "of", "Klementiev", "et", "al.", "[16].", "This", "task", "involves", "learning", "language", "independent", "embeddings", "which", "are", "then", "used", "for", "document", "classification", "across", "the", "English-German", "language", "pair.", "For", "this,", "CLDC", "employs", "a", "par-", "ticular", "kind", "of", "supervision,", "namely", "using", "supervised", "training", "data", "in", "one", "language", "and", "evaluating", "without", "supervision", "in", "another.", "Thus,", "CLDC", "is", "a", "good", "task", "for", "establishing", "whether", "our", "learned", "representations", "are", "semantically", "useful", "across", "multiple", "languages.", "We", "follow", "the", "experimental", "setup", "described", "in", "[16],", "with", "the", "exception", "that", "we", "learn", "our", "embeddings", "using", "solely", "the", "Europarl", "data", "and", "only", "use", "the", "Reuters", "RCV1/RCV2", "corpora", "during", "the", "classifier", "training", "and", "testing", "stages.", "Each", "document", "in", "the", "classification", "task", "is", "represented", "by", "the", "average", "1", "http://www.statmt.org/europarl/", "2", "https://github.com/redpony/cdec", "3", "These", "numbers", "were", "updated", "following", "comments", "in", "the", "ICLR", "open", "review", "process.", "Results", "for", "other", "dimensionalities", "and", "our", "source", "code", "for", "our", "model", "are", "available", "at", "http://www.karlmoritz.com.", "5", "Model", "en\u2192de", "de\u2192en", "Majority", "Class", "46.8", "46.8", "Glossed", "65.1", "68.6", "MT", "68.1", "67.4", "I-Matrix", "77.6", "71.1", "BICVM", "83.7", "71.4", "BICVM+", "86.2", "76.9", "Table", "1:", "Classification", "accuracy", "for", "training", "on", "English", "and", "German", "with", "1000", "labeled", "examples.", "Cross-lingual", "compositional", "representations", "(B", "ICVM", "and", "BICVM+),", "cross-lingual", "representations", "using", "learned", "embeddings", "and", "an", "interaction", "matrix", "(I-Matrix)", "[16]", "translated", "(MT)", "and", "glossed", "(Glossed)", "words,", "and", "the", "majority", "class", "baseline.", "The", "MT", "and", "Glossed", "results", "are", "also", "taken", "from", "Klementiev", "et", "al.", "[16].", "100", "200", "500", "1000", "5000", "10000", "50", "60", "70", "80", "Training", "Documents", "(en)", "C", "l", "a", "s", "s", "i", "fi", "c", "a", "t", "i", "o", "n", "A", "c", "c", "u", "r", "a", "c", "y", "(", "%", ")", "100", "200", "500", "1000", "5000", "10000", "50", "60", "70", "80", "Training", "Documents", "(de)", "BICVM", "BICVM+", "I-Matrix", "MT", "Glossed", "Majority", "Class", "Figure", "2:", "Classification", "accuracy", "for", "a", "number", "of", "models", "(see", "Table", "1", "for", "model", "descriptions).", "The", "left", "chart", "shows", "results", "for", "these", "models", "when", "trained", "on", "English", "data", "and", "evaluated", "on", "German", "data,", "the", "right", "chart", "vice", "versa.", "of", "the", "d-dimensional", "representations", "of", "all", "its", "sentences.", "We", "train", "the", "multiclass", "classifier", "using", "the", "same", "settings", "and", "implementation", "of", "the", "averaged", "perceptron", "classifier", "[6]", "as", "used", "in", "[16].", "We", "ran", "the", "CLDC", "experiments", "both", "by", "training", "on", "English", "and", "testing", "on", "German", "documents", "and", "vice", "versa.", "Using", "the", "data", "splits", "provided", "by", "[16],", "we", "used", "varying", "training", "data", "sizes", "from", "100", "to", "10,000", "documents", "for", "training", "the", "multiclass", "classifier.", "The", "results", "of", "this", "task", "across", "training", "sizes", "are", "shown", "in", "Figure", "2.", "Table", "1", "shows", "the", "results", "for", "training", "on", "1,000", "documents.", "Both", "models,", "BICVM", "and", "BICVM+", "outperform", "all", "prior", "work", "on", "this", "task.", "Further,", "the", "BICVM+", "model", "outperforms", "the", "BICVM", "model,", "indicating", "the", "usefulness", "of", "adding", "training", "data", "even", "from", "a", "separate", "language", "pair.", "4.3", "Visualization", "While", "the", "CLDC", "experiment", "focused", "on", "establishing", "the", "semantic", "content", "of", "the", "sentence", "level", "representations,", "we", "also", "want", "to", "briefly", "investigate", "the", "induced", "word", "embeddings.", "In", "particular", "the", "BICVM+", "model", "is", "interesting", "for", "that", "purpose,", "as", "it", "allows", "us", "to", "evaluate", "our", "approach", "of", "using", "English", "as", "a", "pivot", "language", "in", "a", "multilingual", "setup.", "In", "Figure", "3", "we", "show", "the", "t-SNE", "projections", "for", "a", "number", "of", "English,", "French", "and", "German", "words.", "Of", "particular", "interest", "should", "be", "the", "right", "chart,", "which", "highlights", "bilingual", "embeddings", "between", "French", "and", "German", "words.", "Even", "though", "the", "model", "did", "not", "use", "any", "parallel", "French-German", "data", "during", "training,", "it", "still", "managed", "to", "learn", "semantic", "word-word", "similarity", "across", "these", "two", "languages.", "6", "Figure", "3:", "The", "left", "scatter", "plot", "shows", "t-SNE", "projections", "for", "a", "weekdays", "in", "all", "three", "languages", "using", "the", "representations", "learned", "in", "the", "BICVM+", "model.", "Even", "though", "the", "model", "did", "not", "use", "any", "parallel", "French-German", "data", "during", "training,", "it", "still", "learns", "semantic", "similarity", "between", "these", "two", "languages", "using", "English", "as", "a", "pivot.", "To", "highlight", "this,", "the", "right", "plot", "shows", "another", "set", "of", "words", "(months", "of", "the", "year)", "using", "only", "the", "German", "and", "French", "words.", "5", "Conclusions", "With", "this", "paper", "we", "have", "proposed", "a", "novel", "method", "for", "inducing", "cross-lingual", "distributed", "represen-", "tations", "for", "compositional", "semantics.", "Using", "a", "very", "simple", "method", "for", "semantic", "composition,", "we", "nevertheless", "managed", "to", "obtain", "state", "of", "the", "art", "results", "on", "the", "CLDC", "task,", "specifically", "designed", "to", "evaluate", "semantic", "transfer", "across", "languages.", "After", "extending", "our", "approach", "to", "include", "multilingual", "training", "data", "in", "the", "BICVM+", "model,", "we", "were", "able", "to", "demonstrate", "that", "adding", "additional", "languages", "further", "improves", "the", "model.", "Furthermore,", "using", "some", "qualitative", "experiments", "and", "visualizations,", "we", "showed", "that", "our", "approach", "also", "allows", "us", "to", "learn", "semantically", "related", "embeddings", "across", "languages", "without", "any", "direct", "training", "data.", "Our", "approach", "provides", "great", "flexibility", "in", "training", "data", "and", "requires", "little", "to", "no", "annotation.", "Hav-", "ing", "demonstrated", "the", "successful", "training", "of", "semantic", "representations", "using", "sentence", "aligned", "data,", "a", "plausible", "next", "step", "is", "to", "attempt", "training", "using", "document-aligned", "data", "or", "even", "corpora", "of", "comparable", "documents.", "This", "may", "provide", "even", "greater", "possibilities", "for", "working", "with", "low-resource", "languages.", "In", "the", "same", "vein,", "the", "success", "of", "our", "pivoting", "experiments", "suggest", "further", "work.", "Unlike", "other", "pivot", "approaches,", "it", "is", "easy", "to", "extend", "our", "model", "to", "have", "multiple", "pivot", "languages.", "Thus", "some", "pivots", "could", "preserve", "different", "aspects", "such", "as", "case,", "gender", "etc.,", "and", "overcome", "other", "issues", "related", "to", "having", "a", "single", "pivot", "language.", "As", "we", "have", "achieved", "the", "results", "in", "this", "paper", "with", "a", "relatively", "simple", "CV", "M,", "it", "would", "also", "be", "inter-", "esting", "to", "establish", "whether", "our", "objective", "function", "can", "be", "used", "in", "combination", "with", "more", "complex", "compositional", "vector", "models", "such", "as", "MV-RNN", "[25]", "or", "tensor-based", "approaches,", "to", "see", "whether", "these", "can", "further", "improve", "results", "on", "both", "mono-", "and", "multilingual", "tasks", "when", "used", "in", "conjunction", "with", "our", "cross-lingual", "objective", "function.", "Related", "to", "this,", "we", "will", "also", "apply", "our", "model", "to", "a", "wider", "variety", "of", "tasks", "including", "machine", "translation", "and", "multilingual", "information", "extraction.", "Acknowledgements", "The", "authors", "would", "like", "to", "thank", "Alexandre", "Klementiev", "and", "his", "co-authors", "for", "making", "their", "datasets", "and", "averaged", "perceptron", "implementation", "available,", "as", "well", "as", "answering", "a", "number", "of", "questions", "related", "to", "their", "work", "on", "this", "task.", "This", "work", "was", "supported", "by", "EPSRC", "grant", "EP/K036580/1", "and", "a", "Xerox", "Foundation", "Award.", "7", "References", "[1]", "Marco", "Baroni", "and", "Roberto", "Zamparelli.", "Nouns", "are", "vectors,", "adjectives", "are", "matrices:", "Represent-", "ing", "adjective-noun", "constructions", "in", "semantic", "space.", "In", "Proceedings", "of", "EMNLP,", "2010.", "[2]", "Paul", "Bloom.", "Precis", "of", "how", "children", "learn", "the", "meanings", "of", "words.", "Behavioral", "and", "Brain", "Sciences,", "24:1095\u20131103,", "2001.", "[3]", "Stephen", "Clark", "and", "Stephen", "Pulman.", "Combining", "symbolic", "and", "distributional", "models", "of", "mean-", "ing.", "In", "Proceedings", "of", "AAAI", "Spring", "Symposium", "on", "Quantum", "Interaction.", "AAAI", "Press,", "2007.", "[4]", "Bob", "Coecke,", "Mehrnoosh", "Sadrzadeh,", "and", "Stephen", "Clark.", "Mathematical", "foundations", "for", "a", "com-", "positional", "distributional", "model", "of", "meaning.", "Lambek", "Festschrift.", "Linguistic", "Analysis,", "36:345\u2013", "384,", "2010.", "[5]", "Trevor", "Cohn", "and", "Mirella", "Lapata.", "Machine", "translation", "by", "triangulation:", "Making", "effective", "use", "of", "multi-parallel", "corpora.", "In", "Proceedings", "of", "ACL,", "pages", "728\u2013735,", "Prague,", "Czech", "Republic,", "June", "2007.", "Association", "for", "Computational", "Linguistics.", "[6]", "Michael", "Collins.", "Discriminative", "training", "methods", "for", "hidden", "markov", "models:", "Theory", "and", "experiments", "with", "perceptron", "algorithms.", "In", "Proceedings", "of", "ACL-EMNLP.", "Association", "for", "Computational", "Linguistics,", "2002.", "doi:", "10.3115/1118693.1118694.", "[7]", "Ronan", "Collobert", "and", "Jason", "Weston.", "A", "unified", "architecture", "for", "natural", "language", "processing:", "Deep", "neural", "networks", "with", "multitask", "learning.", "In", "Proceedings", "of", "ICML,", "2008.", "[8]", "John", "Duchi,", "Elad", "Hazan,", "and", "Yoram", "Singer.", "Adaptive", "subgradient", "methods", "for", "online", "learning", "and", "stochastic", "optimization.", "Journal", "of", "Machine", "Learning", "Research,", "12:2121\u20132159,", "July", "2011.", "ISSN", "1532-4435.", "[9]", "Chris", "Dyer,", "Adam", "Lopez,", "Juri", "Ganitkevitch,", "Johnathan", "Weese,", "Ferhan", "Ture,", "Phil", "Blunsom,", "Hendra", "Setiawan,", "Vladimir", "Eidelman,", "and", "Philip", "Resnik.", "cdec:", "A", "decoder,", "alignment,", "and", "learning", "framework", "for", "finite-state", "and", "context-free", "translation", "models.", "In", "Proceedings", "of", "ACL,", "2010.", "[10]", "K.", "Erk", "and", "S.", "Pad", "\u0301o", ".", "A", "structured", "vector", "space", "model", "for", "word", "meaning", "in", "context.", "Proceedings", "of", "EMNLP,", "2008.", "[11]", "J.", "R", ".", "Firth.", "A", "synopsis", "of", "linguistic", "theory", "1930-55", ".", "1952-59:1\u201332,", "1957.", "[12]", "Edward", "Grefenstette", "and", "Mehrnoosh", "Sadrzadeh.", "Experimental", "support", "for", "a", "categorical", "com-", "positional", "distributional", "model", "of", "meaning.", "In", "Proceedings", "of", "EMNLP,", "2011.", "[13]", "Aria", "Haghighi,", "Percy", "Liang,", "Taylor", "Berg-Kirkpatrick,", "and", "Dan", "Klein.", "Learning", "bilingual", "lexicons", "from", "monolingual", "corpora.", "In", "Proceedings", "of", "ACL-HLT,", "2008.", "[14]", "Karl", "Moritz", "Hermann", "and", "Phil", "Blunsom.", "The", "Role", "of", "Syntax", "in", "Vector", "Space", "Models", "of", "Compositional", "Semantics.", "In", "Proceedings", "of", "ACL,", "2013.", "[15]", "Nal", "Kalchbrenner", "and", "Phil", "Blunsom.", "Recurrent", "convolutional", "neural", "networks", "for", "discourse", "compositionality.", "In", "Proceedings", "of", "the", "Workshop", "on", "Continuous", "Vector", "Space", "Models", "and", "their", "Compositionality,", "2013.", "[16]", "Alexandre", "Klementiev,", "Ivan", "Titov,", "and", "Binod", "Bhattarai.", "Inducing", "crosslingual", "distributed", "representations", "of", "words.", "In", "Proceedings", "of", "COLING,", "2012.", "[17]", "Stanislas", "Lauly,", "Alex", "Boulanger,", "and", "Hugo", "Larochelle.", "Learning", "multilingual", "word", "represen-", "tations", "using", "a", "bag-of-words", "autoencoder.", "In", "Deep", "Learning", "Workshop", "at", "NIPS,", "2013.", "[18]", "Tomas", "Mikolov,", "Kai", "Chen,", "Greg", "Corrado,", "and", "Jeffrey", "Dean.", "Efficient", "estimation", "of", "word", "representations", "in", "vector", "space.", "CoRR,", "2013.", "[19]", "Tomas", "Mikolov,", "Quoc", "V.", "Le,", "and", "Ilya", "Sutskever.", "Exploiting", "similarities", "among", "languages", "for", "machine", "translation.", "CoRR,", "2013.", "[20]", "Tom", "\u0301a", "\u02c7s", "Mikolov,", "Martin", "Karafi\u0301at,", "Luk", "\u0301a", "\u02c7s", "Burget,", "Jan", "\u02c7Cernock", "\u0301y,", "and", "Sanjeev", "Khudanpur.", "Re-", "current", "neural", "network", "based", "language", "model.", "In", "Proceedings", "of", "INTERSPEECH,", "2010.", "[21]", "Jeff", "Mitchell", "and", "Mirella", "Lapata.", "Vector-based", "models", "of", "semantic", "composition.", "In", "In", "Pro-", "ceedings", "of", "ACL,", "2008.", "[22]", "D.", "Roy.", "Grounded", "spoken", "language", "acquisition:", "Experiments", "in", "word", "learning.", "IEEE", "Trans-", "actions", "on", "Multimedia,", "5(2):197\u2013209,", "June", "2003.", "ISSN", "1520-9210.", "doi:", "10.1109/TMM.2003.", "811618.", "8", "[23]", "A", "P", "Sarath", "Chandar,", "M", "Khapra", "Mitesh,", "B", "Ravindran,", "Vikas", "Raykar,", "and", "Amrita", "Saha.", "Multi-", "lingual", "deep", "learning.", "In", "Deep", "Learning", "Workshop", "at", "NIPS,", "2013.", "[24]", "Richard", "Socher,", "Jeffrey", "Pennington,", "Eric", "H.", "Huang,", "Andrew", "Y.", "Ng,", "and", "Christopher", "D.", "Man-", "ning.", "Semi-supervised", "recursive", "autoencoders", "for", "predicting", "sentiment", "distributions.", "In", "Pro-", "ceedings", "of", "EMNLP,", "2011.", "[25]", "Richard", "Socher,", "Brody", "Huval,", "Christopher", "D.", "Manning,", "and", "Andrew", "Y.", "Ng.", "Semantic", "compo-", "sitionality", "through", "recursive", "matrix-vector", "spaces.", "In", "Proceedings", "of", "EMNLP-CoNLL,", "pages", "1201\u20131211,", "2012.", "[26]", "Nitish", "Srivastava", "and", "Ruslan", "Salakhutdinov.", "Multimodal", "learning", "with", "deep", "boltzmann", "ma-", "chines.", "In", "Proceedings", "of", "NIPS.", "2012.", "[27]", "P.", "D", ".", "Turney", "and", "P.", "Pantel.", "From", "frequency", "to", "meaning:", "Vector", "space", "models", "of", "semantics.", "Journal", "of", "Artificial", "Intelligence", "Research,", "37(1):141\u2013188,", "2010.", "[28]", "Kilian", "Q.", "Weinberger", "and", "Lawrence", "K.", "Saul.", "Distance", "metric", "learning", "for", "large", "margin", "nearest", "neighbor", "classification.", "Journal", "of", "Machine", "Learning", "Research,", "10:207\u2013244,", "June", "2009.", "ISSN", "1532-4435.", "[29]", "Will", "Y.", "Zou,", "Richard", "Socher,", "Daniel", "Cer,", "and", "Christopher", "D.", "Manning.", "Bilingual", "word", "em-", "beddings", "for", "phrase-based", "machine", "translation.", "In", "Proceedings", "of", "EMNLP,", "2013.", "9"], "positions": [[519, 462, 898, 527], [919, 462, 1266, 513], [1287, 462, 1776, 527], [1798, 462, 2031, 513], [1018, 547, 1189, 596], [1210, 545, 1532, 610], [914, 799, 995, 828], [1007, 798, 1127, 828], [1140, 799, 1308, 828], [1321, 799, 1386, 828], [1398, 798, 1468, 827], [1480, 799, 1635, 828], [997, 846, 1193, 882], [1203, 845, 1239, 873], [1248, 845, 1414, 882], [1426, 845, 1552, 874], [1101, 890, 1273, 927], [1285, 890, 1321, 918], [1330, 890, 1448, 919], [1080, 936, 1207, 970], [1220, 936, 1294, 965], [1311, 936, 1398, 971], [1411, 937, 1470, 965], [709, 979, 1840, 1020], [1182, 1148, 1368, 1183], [600, 1272, 784, 1300], [800, 1272, 1050, 1309], [1068, 1272, 1104, 1300], [1118, 1272, 1260, 1309], [1278, 1281, 1326, 1300], [1344, 1281, 1360, 1300], [1377, 1272, 1491, 1300], [1508, 1281, 1575, 1309], [1592, 1276, 1623, 1300], [1640, 1272, 1756, 1300], [1773, 1272, 1950, 1301], [599, 1318, 809, 1355], [827, 1318, 964, 1347], [981, 1318, 1079, 1347], [1099, 1318, 1156, 1346], [1172, 1318, 1295, 1355], [1313, 1318, 1344, 1346], [1361, 1319, 1442, 1346], [1461, 1319, 1507, 1355], [1525, 1318, 1720, 1355], [1737, 1318, 1805, 1346], [1823, 1318, 1949, 1355], [599, 1363, 761, 1400], [780, 1372, 810, 1391], [827, 1363, 897, 1392], [913, 1372, 943, 1391], [959, 1363, 1119, 1400], [1134, 1363, 1329, 1391], [1345, 1363, 1436, 1391], [1451, 1363, 1595, 1391], [1610, 1363, 1792, 1391], [1808, 1363, 1908, 1392], [1923, 1363, 1948, 1391], [600, 1413, 652, 1437], [667, 1409, 813, 1438], [828, 1409, 858, 1437], [873, 1409, 1001, 1437], [1015, 1409, 1274, 1446], [1292, 1409, 1467, 1437], [1481, 1409, 1730, 1446], [1746, 1409, 1822, 1438], [1836, 1418, 1949, 1446], [599, 1455, 700, 1483], [713, 1455, 744, 1483], [758, 1464, 848, 1492], [861, 1456, 939, 1483], [952, 1455, 1042, 1483], [1063, 1456, 1178, 1483], [1190, 1455, 1274, 1484], [1286, 1455, 1339, 1483], [1355, 1455, 1460, 1484], [1473, 1455, 1542, 1484], [1556, 1455, 1790, 1492], [1805, 1455, 1949, 1483], [599, 1500, 848, 1537], [863, 1509, 919, 1528], [934, 1500, 1134, 1537], [1147, 1500, 1186, 1528], [1201, 1500, 1320, 1537], [1334, 1504, 1365, 1528], [1380, 1509, 1396, 1528], [1409, 1500, 1535, 1528], [1548, 1500, 1584, 1528], [1595, 1500, 1804, 1537], [1818, 1500, 1948, 1537], [600, 1546, 678, 1574], [696, 1546, 769, 1574], [786, 1555, 816, 1574], [834, 1546, 994, 1574], [1009, 1546, 1149, 1583], [1176, 1546, 1217, 1574], [1231, 1546, 1281, 1574], [1297, 1555, 1380, 1574], [1395, 1546, 1476, 1580], [1494, 1546, 1576, 1574], [1590, 1546, 1643, 1574], [1659, 1546, 1737, 1574], [1754, 1555, 1839, 1574], [1854, 1546, 1950, 1574], [601, 1601, 721, 1620], [737, 1592, 768, 1620], [782, 1592, 866, 1621], [880, 1601, 920, 1620], [934, 1592, 1068, 1629], [1084, 1592, 1189, 1620], [1204, 1592, 1380, 1621], [1393, 1592, 1642, 1629], [1659, 1601, 1759, 1620], [1775, 1592, 1948, 1629], [599, 1638, 653, 1665], [664, 1637, 806, 1665], [817, 1637, 901, 1665], [912, 1641, 972, 1666], [985, 1637, 1167, 1674], [1179, 1637, 1220, 1674], [1231, 1637, 1396, 1674], [1409, 1646, 1425, 1665], [1436, 1637, 1559, 1665], [1570, 1637, 1618, 1665], [1628, 1637, 1763, 1674], [1774, 1637, 1949, 1665], [599, 1683, 848, 1720], [860, 1683, 891, 1711], [903, 1692, 919, 1711], [930, 1683, 1131, 1720], [1143, 1687, 1236, 1720], [1252, 1683, 1316, 1712], [1326, 1683, 1428, 1711], [1439, 1683, 1535, 1711], [1548, 1687, 1578, 1711], [1590, 1683, 1691, 1720], [1703, 1683, 1817, 1711], [1827, 1683, 1948, 1711], [600, 1729, 687, 1766], [702, 1733, 733, 1757], [747, 1729, 867, 1766], [882, 1733, 1037, 1757], [1053, 1729, 1110, 1757], [1124, 1729, 1287, 1757], [1300, 1738, 1373, 1757], [1388, 1733, 1418, 1757], [1433, 1733, 1574, 1757], [1587, 1729, 1687, 1758], [1702, 1738, 1750, 1757], [1764, 1733, 1816, 1757], [1830, 1729, 1949, 1766], [600, 1774, 691, 1803], [701, 1778, 753, 1802], [761, 1774, 912, 1811], [923, 1774, 1006, 1803], [1017, 1774, 1205, 1811], [1220, 1775, 1273, 1802], [1284, 1774, 1368, 1803], [1378, 1774, 1440, 1802], [1449, 1783, 1503, 1802], [1511, 1774, 1761, 1811], [1773, 1783, 1821, 1802], [1832, 1783, 1948, 1802], [600, 1820, 702, 1857], [714, 1820, 905, 1849], [918, 1820, 975, 1848], [989, 1820, 1078, 1857], [1091, 1820, 1173, 1848], [1185, 1824, 1215, 1848], [1229, 1829, 1245, 1848], [1257, 1820, 1470, 1857], [1482, 1820, 1645, 1848], [1657, 1820, 1872, 1848], [1884, 1820, 1950, 1848], [600, 1866, 700, 1895], [712, 1875, 759, 1895], [771, 1866, 957, 1903], [969, 1866, 1018, 1894], [1029, 1866, 1169, 1903], [1184, 1870, 1258, 1894], [1270, 1866, 1305, 1894], [1315, 1866, 1364, 1894], [1378, 1870, 1427, 1894], [1445, 1866, 1572, 1900], [1585, 1866, 1626, 1903], [1639, 1866, 1814, 1903], [1826, 1866, 1950, 1903], [600, 1920, 725, 1948], [739, 1911, 775, 1939], [786, 1911, 923, 1948], [937, 1911, 1085, 1948], [1098, 1911, 1177, 1948], [1192, 1920, 1239, 1940], [1253, 1911, 1316, 1939], [1330, 1911, 1392, 1939], [1404, 1920, 1459, 1939], [1472, 1911, 1574, 1939], [1588, 1911, 1684, 1939], [1699, 1911, 1948, 1948], [600, 1957, 662, 1985], [677, 1961, 798, 1994], [816, 1957, 960, 1985], [977, 1957, 1187, 1994], [1206, 1966, 1306, 1985], [1324, 1957, 1487, 1994], [1505, 1957, 1553, 1985], [1569, 1957, 1668, 1986], [1685, 1966, 1725, 1985], [1741, 1957, 1865, 1994], [1882, 1957, 1950, 1985], [600, 2012, 661, 2032], [673, 2003, 758, 2031], [452, 2182, 471, 2216], [525, 2182, 794, 2217], [450, 2303, 635, 2331], [644, 2303, 893, 2340], [905, 2303, 941, 2331], [948, 2303, 1046, 2332], [1059, 2312, 1107, 2331], [1117, 2303, 1318, 2340], [1328, 2303, 1419, 2340], [1429, 2303, 1504, 2331], [1514, 2307, 1545, 2331], [1556, 2303, 1679, 2332], [1688, 2303, 1761, 2340], [1771, 2303, 1863, 2332], [1875, 2303, 1911, 2331], [1918, 2303, 2098, 2340], [450, 2348, 513, 2376], [527, 2348, 631, 2377], [644, 2348, 793, 2385], [806, 2348, 972, 2385], [986, 2348, 1076, 2376], [1096, 2348, 1271, 2377], [1286, 2348, 1482, 2385], [1497, 2348, 1532, 2376], [1543, 2348, 1600, 2376], [1615, 2348, 1765, 2385], [1778, 2348, 1899, 2376], [1912, 2348, 2099, 2377], [450, 2394, 713, 2431], [729, 2394, 813, 2423], [828, 2394, 984, 2431], [999, 2394, 1056, 2422], [1071, 2403, 1220, 2431], [1234, 2394, 1384, 2422], [1399, 2394, 1468, 2431], [1493, 2394, 1552, 2428], [1568, 2394, 1644, 2429], [1667, 2394, 1856, 2431], [1869, 2394, 1953, 2423], [1965, 2394, 2018, 2422], [2035, 2394, 2099, 2422], [451, 2440, 612, 2477], [628, 2444, 658, 2468], [674, 2440, 755, 2468], [771, 2440, 946, 2468], [962, 2440, 1122, 2468], [1138, 2440, 1174, 2468], [1187, 2440, 1282, 2477], [1297, 2444, 1465, 2474], [1484, 2440, 1625, 2477], [1640, 2449, 1674, 2468], [1691, 2444, 1722, 2468], [1738, 2440, 1828, 2477], [1843, 2440, 2018, 2468], [2033, 2449, 2098, 2477], [449, 2485, 631, 2513], [645, 2489, 676, 2513], [690, 2485, 770, 2513], [786, 2485, 859, 2513], [874, 2494, 905, 2513], [921, 2485, 1081, 2513], [1095, 2485, 1225, 2522], [1240, 2494, 1274, 2513], [1286, 2485, 1466, 2522], [1479, 2485, 1630, 2513], [1645, 2485, 1705, 2520], [1730, 2485, 1769, 2519], [1786, 2485, 1812, 2519], [1832, 2485, 1877, 2519], [1896, 2485, 1941, 2519], [1957, 2485, 2005, 2519], [2021, 2484, 2097, 2520], [450, 2531, 491, 2559], [504, 2531, 554, 2559], [568, 2540, 651, 2559], [665, 2531, 737, 2559], [752, 2540, 768, 2559], [783, 2531, 895, 2559], [911, 2531, 1009, 2559], [1023, 2531, 1059, 2559], [1070, 2531, 1154, 2560], [1167, 2531, 1220, 2559], [1235, 2531, 1363, 2559], [1377, 2540, 1416, 2559], [1430, 2531, 1622, 2568], [1636, 2531, 1789, 2568], [1802, 2531, 1983, 2568], [1998, 2540, 2097, 2559], [450, 2577, 624, 2614], [639, 2577, 696, 2605], [708, 2577, 899, 2614], [911, 2577, 991, 2605], [1003, 2577, 1128, 2614], [1141, 2577, 1204, 2605], [1217, 2577, 1431, 2606], [1443, 2577, 1616, 2614], [1630, 2577, 1670, 2614], [1683, 2586, 1786, 2605], [1800, 2577, 1836, 2605], [1846, 2577, 2021, 2605], [2033, 2586, 2098, 2614], [449, 2622, 646, 2650], [660, 2626, 689, 2650], [700, 2622, 749, 2650], [761, 2622, 844, 2651], [856, 2622, 933, 2651], [948, 2622, 1008, 2656], [1025, 2622, 1084, 2656], [450, 2693, 614, 2730], [630, 2693, 714, 2722], [727, 2702, 767, 2721], [781, 2693, 1014, 2730], [1029, 2693, 1173, 2721], [1187, 2693, 1436, 2730], [1451, 2693, 1573, 2721], [1588, 2702, 1628, 2721], [1642, 2693, 1850, 2730], [1864, 2693, 1932, 2721], [1945, 2693, 2036, 2722], [2050, 2693, 2099, 2721], [450, 2739, 663, 2776], [674, 2739, 758, 2768], [768, 2739, 889, 2767], [901, 2748, 941, 2767], [951, 2739, 1035, 2768], [1045, 2739, 1123, 2768], [1132, 2739, 1381, 2776], [1393, 2739, 1471, 2776], [1487, 2740, 1642, 2773], [1655, 2739, 1677, 2767], [1687, 2748, 1810, 2776], [1822, 2739, 1934, 2776], [1944, 2739, 2006, 2767], [2015, 2739, 2099, 2767], [450, 2788, 511, 2813], [525, 2784, 639, 2812], [654, 2784, 689, 2812], [700, 2784, 784, 2813], [798, 2784, 906, 2812], [918, 2784, 957, 2812], [970, 2784, 1132, 2812], [1147, 2793, 1177, 2812], [1192, 2784, 1274, 2812], [1287, 2784, 1378, 2812], [1394, 2793, 1410, 2812], [1422, 2784, 1558, 2821], [1571, 2784, 1607, 2812], [1617, 2784, 1741, 2821], [1754, 2793, 1879, 2821], [1893, 2784, 1965, 2813], [1979, 2784, 2099, 2821], [450, 2830, 518, 2858], [529, 2834, 557, 2858], [566, 2830, 615, 2858], [626, 2834, 766, 2858], [776, 2830, 854, 2859], [863, 2839, 897, 2858], [905, 2830, 1026, 2867], [1036, 2830, 1136, 2859], [1146, 2830, 1236, 2858], [1245, 2830, 1284, 2858], [1293, 2830, 1445, 2867], [1455, 2830, 1486, 2858], [1497, 2830, 1570, 2858], [1580, 2830, 1672, 2859], [1688, 2830, 1815, 2864], [1828, 2834, 1969, 2858], [1979, 2830, 2099, 2867], [450, 2876, 518, 2904], [530, 2876, 671, 2913], [687, 2885, 703, 2904], [715, 2876, 864, 2913], [877, 2880, 1006, 2913], [1018, 2876, 1054, 2904], [1066, 2876, 1210, 2904], [1225, 2876, 1387, 2913], [1403, 2876, 1502, 2905], [1516, 2885, 1572, 2904], [1584, 2876, 1623, 2904], [1635, 2876, 1742, 2904], [1754, 2880, 1785, 2904], [1798, 2876, 1898, 2904], [1912, 2880, 1941, 2904], [1953, 2876, 2002, 2904], [2016, 2876, 2099, 2905], [450, 2921, 537, 2950], [552, 2921, 701, 2950], [710, 2921, 760, 2949], [769, 2930, 839, 2949], [849, 2921, 885, 2949], [893, 2921, 1057, 2958], [1065, 2921, 1203, 2950], [1214, 2930, 1230, 2949], [1239, 2921, 1371, 2950], [1381, 2921, 1555, 2958], [1565, 2930, 1646, 2949], [1657, 2921, 1726, 2958], [1743, 2921, 2098, 2956], [451, 2967, 509, 2995], [523, 2967, 559, 2995], [575, 2967, 701, 3004], [715, 2967, 885, 3004], [900, 2967, 1028, 3004], [1042, 2967, 1138, 3004], [1154, 2967, 1272, 2996], [1286, 2967, 1424, 3002], [1449, 2967, 1600, 2996], [1616, 2967, 1780, 3004], [1795, 2971, 1823, 2995], [1837, 2967, 1886, 2995], [1899, 2967, 2007, 3004], [2021, 2967, 2099, 2996], [449, 3013, 521, 3041], [533, 3022, 656, 3050], [669, 3013, 714, 3041], [726, 3022, 809, 3041], [820, 3013, 970, 3050], [981, 3013, 1051, 3041], [1064, 3013, 1198, 3050], [1210, 3013, 1376, 3042], [1387, 3013, 1492, 3041], [1506, 3013, 1553, 3041], [1566, 3013, 1710, 3041], [1723, 3013, 1854, 3041], [1269, 3137, 1280, 3165], [97, 2265, 134, 2308], [97, 2235, 133, 2272], [83, 2188, 133, 2246], [83, 2162, 133, 2184], [98, 2117, 133, 2164], [103, 2102, 134, 2113], [82, 2058, 133, 2089], [82, 2010, 134, 2051], [82, 1975, 133, 2006], [82, 1929, 133, 1968], [125, 1913, 134, 1924], [82, 1864, 134, 1906], [82, 1829, 133, 1860], [83, 1781, 133, 1821], [82, 1740, 134, 1781], [98, 1698, 133, 1745], [82, 1654, 133, 1700], [81, 1594, 142, 1613], [97, 1549, 134, 1588], [97, 1517, 134, 1550], [125, 1504, 134, 1515], [82, 1443, 134, 1497], [83, 1393, 133, 1441], [81, 1370, 142, 1389], [82, 1281, 133, 1320], [82, 1237, 134, 1278], [83, 1141, 133, 1218], [97, 1101, 134, 1144], [97, 1071, 133, 1108], [82, 1017, 133, 1056], [82, 974, 134, 1015], [82, 938, 133, 969], [82, 888, 133, 934], [451, 354, 548, 391], [559, 354, 616, 382], [628, 354, 781, 388], [795, 354, 853, 382], [863, 354, 1000, 391], [1011, 363, 1051, 382], [1061, 354, 1134, 382], [1146, 354, 1230, 383], [1239, 354, 1351, 382], [1363, 358, 1393, 382], [1405, 354, 1539, 391], [1550, 354, 1763, 391], [1775, 354, 1972, 391], [1986, 363, 2016, 382], [2029, 354, 2099, 383], [452, 409, 482, 428], [499, 404, 530, 428], [546, 400, 779, 437], [796, 400, 940, 428], [956, 400, 1215, 437], [1234, 409, 1281, 429], [1296, 400, 1452, 428], [1468, 409, 1484, 428], [1500, 400, 1602, 428], [1618, 400, 1679, 428], [1694, 400, 1790, 428], [1807, 400, 2020, 437], [2036, 409, 2098, 428], [450, 445, 597, 482], [613, 449, 642, 473], [655, 445, 704, 473], [718, 449, 859, 473], [872, 445, 958, 474], [980, 446, 1013, 473], [1026, 445, 1076, 473], [1089, 445, 1248, 482], [1263, 445, 1378, 473], [1391, 454, 1438, 474], [1452, 445, 1515, 474], [1528, 445, 1635, 482], [1649, 445, 1766, 473], [1780, 445, 1861, 482], [1874, 445, 1958, 474], [1971, 445, 2001, 473], [2015, 445, 2099, 473], [451, 495, 511, 520], [525, 491, 612, 519], [627, 491, 733, 519], [747, 491, 840, 528], [855, 500, 895, 519], [909, 495, 940, 519], [955, 491, 1091, 519], [1106, 491, 1155, 519], [1169, 491, 1316, 528], [1330, 491, 1458, 528], [1473, 491, 1570, 528], [1584, 491, 1646, 519], [1660, 500, 1707, 520], [1721, 491, 1888, 528], [1903, 491, 1951, 519], [1964, 491, 2099, 528], [451, 537, 652, 574], [664, 537, 898, 574], [910, 537, 1117, 574], [1135, 537, 1362, 574], [1376, 546, 1423, 566], [1435, 537, 1498, 566], [1510, 537, 1647, 565], [1659, 546, 1714, 565], [1725, 537, 1827, 565], [1840, 537, 1870, 565], [1882, 541, 1997, 574], [2008, 537, 2099, 565], [452, 591, 482, 610], [498, 582, 567, 611], [582, 591, 613, 610], [628, 582, 665, 610], [680, 582, 807, 619], [821, 582, 986, 619], [1001, 582, 1058, 610], [1072, 582, 1287, 619], [1302, 586, 1396, 619], [1418, 582, 1540, 619], [1556, 591, 1603, 611], [1616, 582, 1750, 619], [1764, 591, 1780, 610], [1794, 582, 1920, 610], [1933, 582, 1969, 610], [1980, 582, 2098, 611], [451, 628, 528, 656], [545, 628, 602, 656], [616, 628, 818, 656], [832, 628, 894, 656], [907, 637, 961, 656], [975, 628, 1102, 665], [1117, 628, 1214, 665], [1229, 628, 1332, 657], [1349, 637, 1365, 656], [1379, 637, 1451, 665], [1466, 628, 1574, 665], [1588, 628, 1822, 665], [1836, 632, 1938, 657], [1952, 628, 2054, 656], [2068, 632, 2099, 656], [451, 674, 636, 711], [647, 674, 696, 702], [709, 678, 782, 702], [794, 674, 829, 702], [838, 674, 887, 702], [900, 678, 942, 702], [952, 683, 992, 702], [1005, 683, 1021, 702], [1032, 674, 1098, 702], [1108, 674, 1254, 711], [1266, 678, 1296, 702], [1308, 674, 1443, 703], [1454, 674, 1490, 702], [1504, 674, 1608, 711], [1619, 678, 1650, 702], [1661, 674, 1787, 702], [1799, 674, 1943, 702], [1955, 674, 2098, 702], [451, 719, 513, 747], [526, 728, 625, 747], [638, 719, 811, 756], [827, 719, 938, 748], [950, 719, 1034, 747], [1045, 719, 1129, 748], [1139, 719, 1170, 747], [1181, 719, 1238, 747], [1252, 728, 1327, 753], [1340, 728, 1395, 747], [1405, 719, 1507, 747], [1519, 719, 1592, 747], [1604, 723, 1657, 747], [1666, 719, 1783, 756], [1794, 719, 1878, 748], [1890, 719, 2010, 756], [2021, 719, 2097, 747], [451, 766, 483, 793], [497, 765, 566, 799], [582, 765, 673, 794], [687, 774, 734, 794], [748, 765, 883, 794], [896, 774, 951, 793], [964, 765, 1066, 793], [1080, 774, 1120, 793], [1135, 769, 1276, 793], [1290, 765, 1410, 802], [1424, 765, 1492, 793], [1505, 765, 1536, 793], [1550, 765, 1607, 793], [1621, 774, 1720, 802], [1736, 765, 1818, 793], [1831, 765, 1856, 793], [1871, 774, 1911, 793], [1925, 765, 2099, 793], [450, 811, 651, 848], [662, 811, 710, 839], [722, 811, 779, 839], [795, 811, 852, 839], [865, 811, 1045, 848], [1059, 820, 1113, 839], [1126, 811, 1285, 848], [1298, 811, 1389, 839], [1403, 811, 1467, 839], [1479, 811, 1518, 839], [1532, 811, 1651, 848], [1664, 815, 1695, 839], [1708, 811, 1963, 840], [1975, 811, 2099, 848], [451, 856, 518, 884], [530, 865, 564, 884], [575, 865, 650, 885], [662, 856, 854, 893], [866, 856, 934, 884], [946, 856, 1024, 893], [451, 989, 474, 1023], [525, 989, 678, 1024], [693, 989, 736, 1024], [748, 989, 1055, 1033], [1069, 989, 1310, 1024], [1325, 989, 1537, 1024], [451, 1105, 483, 1132], [496, 1104, 545, 1132], [558, 1113, 628, 1132], [640, 1104, 676, 1132], [684, 1104, 889, 1141], [902, 1104, 1067, 1133], [1080, 1104, 1178, 1133], [1193, 1113, 1223, 1132], [1237, 1108, 1364, 1138], [1378, 1104, 1427, 1132], [1440, 1104, 1659, 1132], [1672, 1108, 1800, 1132], [1811, 1104, 1847, 1132], [1858, 1104, 2017, 1132], [2030, 1113, 2098, 1141], [451, 1150, 535, 1179], [553, 1159, 569, 1178], [583, 1150, 733, 1187], [748, 1150, 939, 1187], [954, 1150, 990, 1178], [1003, 1150, 1083, 1179], [1097, 1150, 1122, 1178], [1139, 1150, 1275, 1178], [1291, 1150, 1321, 1178], [1338, 1159, 1354, 1178], [1369, 1150, 1452, 1179], [1468, 1154, 1575, 1179], [1602, 1150, 1672, 1178], [1689, 1150, 1810, 1179], [1826, 1150, 1876, 1178], [1891, 1150, 1959, 1178], [1974, 1150, 2036, 1178], [2050, 1150, 2099, 1178], [451, 1195, 592, 1232], [605, 1195, 641, 1223], [653, 1204, 669, 1223], [682, 1195, 766, 1224], [779, 1204, 835, 1223], [848, 1195, 887, 1223], [900, 1195, 1085, 1223], [1098, 1195, 1139, 1232], [1153, 1195, 1220, 1223], [1234, 1204, 1383, 1232], [1397, 1195, 1420, 1223], [1431, 1195, 1542, 1232], [1560, 1195, 1633, 1229], [1649, 1195, 1710, 1223], [1723, 1195, 1747, 1223], [1762, 1195, 1802, 1232], [1816, 1195, 1865, 1223], [1879, 1199, 2000, 1223], [2012, 1195, 2035, 1223], [2049, 1204, 2098, 1232], [450, 1250, 535, 1278], [552, 1241, 591, 1269], [620, 1241, 700, 1270], [716, 1245, 837, 1269], [851, 1250, 907, 1269], [923, 1241, 1018, 1278], [1033, 1241, 1072, 1269], [1087, 1241, 1224, 1269], [1240, 1241, 1270, 1269], [1286, 1245, 1402, 1270], [1418, 1241, 1508, 1278], [1523, 1241, 1736, 1269], [1752, 1241, 1900, 1275], [1919, 1241, 1976, 1269], [1992, 1241, 2016, 1269], [2035, 1241, 2099, 1269], [450, 1287, 629, 1324], [641, 1287, 725, 1315], [736, 1287, 874, 1315], [887, 1287, 923, 1315], [932, 1287, 1067, 1324], [1079, 1287, 1162, 1316], [1174, 1287, 1372, 1324], [1388, 1288, 1427, 1321], [1440, 1287, 1503, 1321], [451, 1358, 507, 1385], [517, 1366, 533, 1385], [543, 1357, 669, 1385], [678, 1357, 714, 1385], [721, 1357, 882, 1394], [890, 1357, 1052, 1394], [1065, 1357, 1210, 1385], [1219, 1357, 1469, 1394], [1480, 1357, 1516, 1385], [1523, 1357, 1689, 1386], [1699, 1357, 1797, 1386], [1808, 1357, 1848, 1385], [1858, 1361, 1911, 1385], [1920, 1357, 2036, 1391], [2047, 1357, 2100, 1385], [451, 1403, 566, 1431], [577, 1412, 593, 1431], [604, 1403, 748, 1431], [757, 1403, 992, 1440], [1002, 1403, 1037, 1431], [1045, 1412, 1061, 1431], [1071, 1403, 1166, 1440], [1176, 1407, 1409, 1440], [1413, 1427, 1418, 1431], [1435, 1412, 1451, 1431], [1459, 1403, 1567, 1440], [1577, 1412, 1610, 1431], [1620, 1412, 1636, 1431], [1647, 1403, 1855, 1431], [1865, 1403, 2011, 1440], [2027, 1403, 2097, 1431], [451, 1458, 511, 1478], [523, 1449, 711, 1486], [722, 1449, 753, 1477], [767, 1449, 840, 1483], [853, 1449, 923, 1478], [933, 1449, 1084, 1486], [1096, 1458, 1112, 1477], [1123, 1449, 1311, 1477], [1321, 1449, 1369, 1477], [1379, 1449, 1550, 1486], [1562, 1458, 1578, 1477], [1589, 1449, 1698, 1478], [1710, 1449, 1944, 1486], [1954, 1449, 2048, 1477], [2059, 1458, 2099, 1477], [451, 1494, 487, 1522], [500, 1494, 666, 1523], [677, 1498, 806, 1522], [822, 1494, 885, 1522], [897, 1494, 1116, 1522], [1129, 1498, 1256, 1522], [1267, 1494, 1303, 1522], [1313, 1494, 1472, 1522], [1485, 1503, 1550, 1528], [1564, 1494, 1622, 1522], [1634, 1498, 1664, 1522], [1677, 1494, 1810, 1531], [1823, 1498, 1876, 1522], [1885, 1494, 1924, 1522], [1937, 1494, 2056, 1531], [2068, 1498, 2099, 1522], [452, 1540, 525, 1568], [537, 1540, 633, 1577], [644, 1540, 796, 1577], [809, 1540, 897, 1568], [915, 1540, 943, 1568], [956, 1540, 1077, 1568], [1089, 1540, 1248, 1577], [1259, 1540, 1386, 1577], [1400, 1540, 1425, 1568], [1439, 1540, 1550, 1568], [1564, 1540, 1621, 1568], [1632, 1540, 1814, 1577], [1829, 1540, 1882, 1574], [1896, 1540, 1966, 1569], [1978, 1540, 2099, 1568], [451, 1586, 670, 1614], [681, 1586, 930, 1623], [944, 1586, 991, 1614], [1004, 1586, 1149, 1623], [1161, 1595, 1243, 1614], [1254, 1586, 1332, 1623], [1345, 1586, 1434, 1623], [1448, 1595, 1464, 1614], [1476, 1586, 1689, 1614], [1702, 1586, 1851, 1623], [1864, 1595, 1903, 1614], [1917, 1595, 1933, 1614], [1945, 1595, 2052, 1623], [2066, 1586, 2102, 1614], [450, 1631, 691, 1668], [703, 1631, 774, 1659], [790, 1631, 853, 1659], [863, 1631, 980, 1668], [990, 1631, 1239, 1668], [1252, 1631, 1372, 1659], [1384, 1631, 1463, 1659], [1474, 1631, 1536, 1659], [1546, 1640, 1653, 1668], [1666, 1640, 1745, 1660], [1757, 1631, 1971, 1668], [1982, 1631, 2057, 1659], [2068, 1635, 2099, 1659], [451, 1677, 532, 1705], [544, 1677, 719, 1705], [731, 1677, 935, 1714], [947, 1677, 1098, 1705], [1112, 1677, 1159, 1705], [1170, 1677, 1220, 1705], [1232, 1677, 1413, 1705], [1424, 1677, 1532, 1706], [451, 1749, 535, 1776], [554, 1748, 725, 1777], [744, 1752, 881, 1785], [901, 1752, 931, 1776], [950, 1752, 1061, 1776], [1080, 1748, 1153, 1776], [1171, 1748, 1368, 1785], [1388, 1748, 1532, 1776], [1550, 1748, 1799, 1785], [1818, 1748, 1895, 1777], [1913, 1748, 2040, 1776], [2059, 1757, 2099, 1776], [451, 1793, 585, 1830], [601, 1793, 805, 1830], [821, 1793, 972, 1821], [990, 1793, 1052, 1821], [1066, 1797, 1219, 1830], [1234, 1793, 1283, 1821], [1300, 1793, 1460, 1821], [1478, 1793, 1513, 1821], [1528, 1802, 1544, 1821], [1560, 1793, 1655, 1830], [1672, 1797, 1815, 1821], [1832, 1802, 1862, 1821], [1881, 1802, 1897, 1821], [1913, 1793, 2050, 1821], [2066, 1793, 2102, 1821], [451, 1839, 500, 1867], [510, 1839, 759, 1876], [771, 1839, 807, 1867], [815, 1839, 851, 1867], [863, 1843, 951, 1876], [970, 1839, 1032, 1873], [1045, 1839, 1185, 1876], [1199, 1848, 1235, 1867], [1246, 1839, 1415, 1868], [1426, 1839, 1462, 1867], [1471, 1848, 1487, 1867], [1498, 1839, 1624, 1867], [1634, 1839, 1670, 1867], [1679, 1839, 1788, 1876], [1798, 1839, 2002, 1876], [2013, 1839, 2098, 1867], [451, 1884, 528, 1912], [545, 1884, 664, 1921], [679, 1888, 709, 1912], [723, 1884, 864, 1921], [887, 1884, 1019, 1921], [1033, 1884, 1221, 1921], [1238, 1884, 1312, 1912], [1327, 1884, 1510, 1921], [1526, 1893, 1581, 1912], [1596, 1884, 1665, 1912], [1680, 1884, 1775, 1921], [1788, 1884, 1827, 1912], [1840, 1884, 2012, 1912], [2027, 1884, 2099, 1913], [451, 1930, 500, 1958], [515, 1939, 749, 1958], [764, 1930, 857, 1958], [873, 1930, 956, 1959], [972, 1930, 1050, 1959], [1064, 1930, 1324, 1967], [1351, 1930, 1447, 1958], [1463, 1939, 1512, 1958], [1528, 1939, 1544, 1958], [1560, 1930, 1686, 1958], [1701, 1930, 1736, 1958], [1748, 1930, 1905, 1967], [1923, 1930, 2099, 1967], [452, 1976, 525, 2004], [535, 1976, 685, 2005], [696, 1985, 730, 2004], [740, 1976, 817, 2013], [828, 1976, 1031, 2013], [1043, 1976, 1170, 2004], [1186, 1976, 1324, 2013], [1340, 1976, 1380, 2010], [1394, 1985, 1525, 2013], [1536, 1985, 1552, 2004], [1563, 1976, 1771, 2004], [1782, 1976, 1884, 2004], [1895, 1976, 1943, 2004], [1954, 1976, 2098, 2004], [451, 2021, 654, 2058], [670, 2021, 736, 2055], [754, 2021, 905, 2058], [925, 2021, 966, 2055], [984, 2021, 1112, 2058], [1128, 2030, 1144, 2049], [1158, 2021, 1338, 2050], [1352, 2021, 1400, 2049], [1415, 2021, 1559, 2049], [1574, 2021, 1778, 2058], [1792, 2021, 1833, 2058], [1848, 2021, 2023, 2058], [2038, 2021, 2098, 2049], [451, 2067, 621, 2095], [637, 2067, 742, 2104], [758, 2067, 830, 2096], [845, 2076, 994, 2104], [1010, 2076, 1183, 2104], [1212, 2067, 1275, 2095], [1291, 2067, 1376, 2095], [1391, 2067, 1571, 2096], [1587, 2076, 1648, 2096], [1665, 2067, 1853, 2104], [1869, 2067, 2024, 2096], [2042, 2067, 2099, 2095], [452, 2113, 612, 2150], [627, 2113, 668, 2150], [684, 2113, 733, 2141], [748, 2113, 854, 2141], [871, 2113, 901, 2141], [920, 2113, 993, 2147], [1021, 2114, 1109, 2141], [1124, 2113, 1263, 2150], [1281, 2113, 1399, 2142], [1416, 2113, 1510, 2141], [1527, 2113, 1563, 2141], [1575, 2113, 1725, 2142], [1740, 2113, 1842, 2141], [1858, 2113, 2006, 2142], [2023, 2113, 2099, 2142], [452, 2158, 652, 2195], [663, 2158, 740, 2186], [751, 2158, 827, 2186], [839, 2158, 886, 2186], [898, 2158, 1043, 2186], [1055, 2158, 1259, 2195], [1272, 2158, 1329, 2186], [1340, 2158, 1452, 2186], [1464, 2158, 1544, 2186], [1559, 2158, 1632, 2186], [1645, 2167, 1675, 2186], [1690, 2158, 1850, 2186], [1861, 2158, 2001, 2195], [2018, 2158, 2099, 2187], [451, 2204, 567, 2232], [585, 2204, 705, 2232], [720, 2204, 870, 2233], [887, 2204, 1102, 2232], [1122, 2204, 1195, 2238], [1214, 2204, 1438, 2233], [1452, 2204, 1602, 2233], [1618, 2204, 1720, 2232], [1736, 2204, 1885, 2233], [1905, 2203, 1978, 2238], [1996, 2204, 2099, 2232], [450, 2250, 600, 2279], [611, 2250, 714, 2278], [725, 2250, 874, 2279], [891, 2250, 952, 2284], [967, 2259, 1001, 2278], [1012, 2250, 1236, 2279], [1248, 2250, 1397, 2279], [1413, 2249, 1487, 2284], [451, 2371, 499, 2401], [544, 2371, 764, 2409], [776, 2371, 995, 2409], [451, 2465, 546, 2493], [562, 2465, 699, 2493], [715, 2465, 768, 2493], [786, 2465, 863, 2493], [880, 2465, 1008, 2494], [1025, 2469, 1056, 2493], [1072, 2465, 1122, 2493], [1138, 2465, 1205, 2493], [1221, 2465, 1256, 2493], [1270, 2465, 1414, 2502], [1431, 2465, 1606, 2493], [1624, 2465, 1768, 2493], [1785, 2465, 2034, 2502], [2052, 2465, 2100, 2493], [452, 2510, 548, 2547], [562, 2510, 735, 2547], [758, 2511, 791, 2538], [804, 2510, 964, 2547], [977, 2510, 1111, 2547], [1128, 2510, 1200, 2539], [1214, 2510, 1250, 2538], [1266, 2510, 1347, 2547], [1361, 2510, 1487, 2538], [1500, 2510, 1536, 2538], [1548, 2510, 1707, 2538], [1720, 2519, 1885, 2544], [1901, 2510, 1954, 2538], [1970, 2510, 2099, 2547], [451, 2560, 531, 2584], [540, 2556, 692, 2584], [707, 2556, 859, 2593], [870, 2565, 1009, 2593], [1019, 2556, 1072, 2584], [1083, 2556, 1160, 2584], [1170, 2556, 1259, 2584], [1269, 2560, 1298, 2584], [1306, 2556, 1540, 2593], [1550, 2556, 1684, 2593], [1694, 2556, 1742, 2584], [1751, 2556, 1914, 2593], [1925, 2556, 1997, 2585], [2007, 2556, 2100, 2585], [452, 2602, 597, 2631], [609, 2611, 774, 2630], [794, 2602, 985, 2631], [998, 2606, 1028, 2630], [1041, 2602, 1077, 2630], [1095, 2602, 1156, 2636], [1173, 2602, 1330, 2630], [1345, 2611, 1361, 2630], [1374, 2602, 1453, 2630], [1466, 2602, 1502, 2630], [1512, 2602, 1666, 2630], [1679, 2602, 1813, 2639], [1826, 2611, 1866, 2630], [1880, 2602, 2099, 2639], [450, 2647, 573, 2684], [589, 2647, 657, 2675], [672, 2651, 703, 2675], [719, 2647, 845, 2675], [860, 2647, 1057, 2684], [1074, 2647, 1154, 2675], [1169, 2656, 1228, 2675], [1243, 2647, 1392, 2684], [1407, 2651, 1438, 2675], [1455, 2647, 1583, 2675], [1610, 2647, 1722, 2675], [1737, 2647, 1829, 2681], [1847, 2647, 2000, 2684], [2016, 2651, 2046, 2675], [2061, 2647, 2097, 2675], [454, 2693, 527, 2727], [539, 2693, 690, 2730], [702, 2702, 718, 2721], [729, 2693, 851, 2721], [863, 2693, 910, 2721], [920, 2693, 1064, 2730], [1075, 2693, 1288, 2730], [1298, 2693, 1396, 2721], [1405, 2693, 1494, 2730], [1506, 2693, 1714, 2730], [1725, 2693, 1838, 2721], [1848, 2693, 2097, 2730], [452, 2739, 509, 2767], [522, 2748, 538, 2767], [552, 2739, 639, 2767], [651, 2739, 747, 2767], [759, 2739, 879, 2767], [891, 2743, 922, 2767], [934, 2739, 1087, 2776], [1100, 2739, 1181, 2768], [1198, 2739, 1269, 2767], [1284, 2739, 1433, 2776], [1445, 2739, 1498, 2767], [1511, 2739, 1644, 2776], [1656, 2739, 1733, 2767], [1746, 2739, 1893, 2767], [1905, 2739, 1946, 2776], [1961, 2739, 2021, 2773], [2039, 2739, 2097, 2773], [451, 2784, 520, 2813], [536, 2784, 703, 2821], [720, 2793, 736, 2812], [751, 2784, 874, 2812], [890, 2784, 937, 2812], [952, 2784, 1086, 2821], [1102, 2784, 1345, 2812], [1360, 2784, 1498, 2812], [1515, 2788, 1545, 2812], [1561, 2788, 1683, 2813], [1698, 2784, 1842, 2812], [1859, 2788, 1975, 2813], [1992, 2784, 2028, 2812], [2041, 2793, 2099, 2812], [451, 2830, 599, 2867], [613, 2830, 676, 2858], [691, 2830, 777, 2858], [791, 2830, 827, 2858], [840, 2830, 968, 2858], [991, 2831, 1018, 2858], [1034, 2839, 1095, 2859], [1111, 2830, 1333, 2858], [1348, 2830, 1409, 2858], [1423, 2830, 1480, 2858], [1497, 2830, 1646, 2867], [1661, 2839, 1717, 2858], [1730, 2830, 1769, 2858], [1784, 2830, 1904, 2867], [1918, 2834, 1949, 2858], [1963, 2830, 2099, 2867], [451, 2876, 530, 2904], [544, 2876, 656, 2904], [669, 2880, 700, 2904], [713, 2876, 852, 2904], [865, 2876, 1048, 2904], [1067, 2876, 1156, 2904], [1169, 2876, 1291, 2905], [1303, 2876, 1405, 2904], [1418, 2876, 1443, 2904], [1459, 2876, 1523, 2904], [1536, 2876, 1631, 2905], [1644, 2876, 1748, 2913], [1762, 2876, 1809, 2904], [1821, 2876, 1858, 2904], [1873, 2876, 2054, 2904], [2068, 2880, 2099, 2904], [451, 2921, 500, 2949], [513, 2921, 717, 2958], [730, 2921, 867, 2949], [879, 2921, 955, 2949], [968, 2921, 999, 2949], [1012, 2921, 1069, 2949], [1083, 2930, 1181, 2958], [1202, 2921, 1299, 2958], [1314, 2930, 1330, 2949], [1344, 2921, 1466, 2958], [1479, 2921, 1621, 2949], [1634, 2921, 1792, 2958], [1811, 2921, 1884, 2955], [1901, 2921, 1965, 2949], [1978, 2921, 2099, 2949], [450, 2967, 597, 3004], [614, 2967, 812, 3004], [831, 2967, 879, 2995], [896, 2967, 1035, 2995], [1052, 2967, 1235, 2995], [1268, 2968, 1293, 2995], [1310, 2967, 1334, 2995], [1353, 2967, 1514, 3004], [1531, 2971, 1562, 2995], [1579, 2971, 1650, 2995], [1667, 2967, 1736, 3001], [1756, 2967, 1859, 2995], [1877, 2976, 1931, 2995], [1947, 2967, 2099, 3004], [452, 3017, 573, 3050], [588, 3013, 627, 3041], [638, 3013, 674, 3041], [683, 3013, 767, 3041], [779, 3013, 917, 3041], [929, 3013, 1046, 3050], [1058, 3013, 1141, 3042], [1154, 3013, 1274, 3050], [1285, 3013, 1409, 3050], [1421, 3013, 1489, 3041], [1500, 3013, 1548, 3041], [1559, 3013, 1695, 3050], [1265, 3137, 1284, 3165], [451, 355, 521, 383], [530, 358, 632, 382], [641, 354, 803, 391], [812, 363, 918, 391], [929, 354, 1054, 383], [1064, 354, 1198, 382], [1208, 354, 1239, 382], [1249, 354, 1306, 382], [1316, 358, 1442, 391], [1457, 354, 1536, 382], [1547, 354, 1642, 391], [1652, 358, 1681, 382], [1691, 354, 1727, 382], [1742, 354, 1803, 388], [1817, 354, 1875, 382], [1886, 354, 1989, 383], [1999, 354, 2098, 383], [451, 400, 503, 428], [512, 404, 541, 428], [551, 400, 587, 428], [601, 400, 663, 434], [675, 409, 806, 437], [815, 400, 953, 428], [964, 400, 1012, 428], [1021, 400, 1155, 437], [1165, 400, 1248, 429], [1258, 400, 1455, 437], [1466, 400, 1506, 437], [1516, 400, 1682, 437], [1691, 400, 1838, 437], [1848, 400, 1924, 434], [1936, 404, 1988, 428], [1996, 400, 2099, 428], [451, 445, 500, 473], [512, 445, 635, 473], [647, 445, 798, 482], [811, 445, 841, 473], [854, 445, 911, 473], [924, 454, 1022, 482], [1039, 445, 1158, 473], [1170, 445, 1206, 473], [1216, 445, 1265, 473], [1277, 445, 1558, 474], [1570, 445, 1693, 473], [1706, 445, 1873, 482], [1885, 445, 1916, 473], [1929, 445, 1986, 473], [1999, 454, 2097, 482], [450, 491, 523, 519], [540, 500, 650, 528], [669, 491, 705, 519], [720, 491, 838, 519], [857, 491, 945, 519], [961, 500, 1016, 519], [1033, 491, 1069, 519], [1085, 491, 1300, 519], [1318, 495, 1349, 519], [1367, 491, 1483, 519], [1500, 491, 1708, 528], [1724, 491, 1974, 528], [1994, 491, 2051, 519], [2068, 495, 2099, 519], [452, 541, 574, 574], [585, 537, 635, 565], [646, 537, 793, 574], [805, 537, 936, 565], [452, 607, 493, 636], [505, 607, 550, 635], [562, 607, 671, 635], [683, 607, 722, 635], [734, 607, 770, 635], [779, 607, 836, 635], [850, 607, 934, 636], [944, 607, 998, 635], [1010, 607, 1088, 635], [1100, 607, 1228, 635], [1240, 616, 1280, 635], [1292, 607, 1426, 644], [1438, 607, 1640, 644], [1651, 607, 1900, 644], [1915, 611, 1943, 635], [1954, 607, 2004, 635], [2016, 607, 2099, 636], [451, 653, 537, 682], [553, 653, 596, 681], [609, 653, 784, 681], [795, 653, 1044, 690], [1057, 653, 1093, 681], [1102, 653, 1197, 690], [1208, 653, 1398, 690], [1410, 653, 1487, 682], [1497, 653, 1575, 681], [1588, 653, 1692, 682], [1704, 657, 1735, 681], [1746, 653, 1784, 681], [1795, 653, 1900, 690], [1911, 653, 2012, 681], [2024, 653, 2071, 681], [2083, 662, 2099, 681], [451, 699, 576, 727], [587, 699, 623, 727], [631, 699, 721, 733], [734, 699, 757, 727], [768, 708, 865, 727], [878, 703, 908, 727], [918, 699, 957, 727], [969, 708, 985, 727], [996, 699, 1110, 727], [1121, 703, 1191, 727], [1202, 703, 1266, 736], [1278, 703, 1308, 727], [1320, 699, 1384, 727], [1397, 703, 1520, 736], [1530, 703, 1560, 727], [1572, 699, 1681, 727], [1692, 699, 1776, 727], [1786, 699, 1875, 736], [1886, 699, 2099, 736], [451, 744, 527, 772], [543, 744, 614, 772], [626, 753, 718, 781], [729, 744, 869, 781], [883, 753, 899, 772], [911, 744, 975, 772], [987, 748, 1051, 781], [1063, 744, 1094, 772], [1106, 744, 1168, 772], [1179, 744, 1333, 772], [451, 860, 473, 895], [525, 860, 659, 895], [673, 860, 918, 904], [451, 967, 613, 1003], [629, 966, 808, 1003], [823, 966, 854, 994], [868, 966, 995, 994], [1012, 966, 1036, 994], [1053, 966, 1164, 1003], [1180, 975, 1251, 994], [1267, 975, 1298, 994], [1315, 966, 1470, 1003], [1485, 966, 1515, 994], [1531, 970, 1769, 1003], [1784, 966, 1961, 1003], [1979, 966, 2039, 1000], [2056, 966, 2097, 1000], [451, 1011, 550, 1039], [567, 1020, 607, 1039], [624, 1011, 680, 1039], [699, 1011, 775, 1045], [795, 1011, 876, 1039], [892, 1011, 968, 1040], [984, 1011, 1061, 1039], [1079, 1020, 1164, 1039], [1182, 1015, 1318, 1048], [1338, 1015, 1366, 1039], [1381, 1011, 1470, 1048], [1487, 1011, 1690, 1039], [1707, 1011, 1775, 1039], [1791, 1011, 1839, 1039], [1855, 1011, 1989, 1048], [2005, 1011, 2100, 1039], [451, 1061, 553, 1086], [565, 1057, 814, 1094], [829, 1057, 865, 1085], [876, 1057, 974, 1086], [990, 1057, 1051, 1094], [1055, 1081, 1060, 1085], [1084, 1057, 1171, 1092], [1194, 1057, 1274, 1086], [1288, 1057, 1436, 1091], [1451, 1057, 1598, 1091], [1615, 1066, 1663, 1085], [1677, 1061, 1729, 1085], [1742, 1057, 1837, 1094], [1852, 1057, 1983, 1085], [1998, 1066, 2097, 1085], [451, 1103, 613, 1140], [627, 1112, 661, 1131], [672, 1107, 702, 1131], [715, 1103, 795, 1140], [808, 1107, 945, 1131], [958, 1103, 994, 1131], [1003, 1103, 1071, 1131], [1083, 1103, 1130, 1131], [1141, 1103, 1241, 1132], [1253, 1112, 1293, 1131], [1306, 1103, 1472, 1140], [1484, 1112, 1518, 1131], [1529, 1103, 1647, 1140], [1658, 1103, 1892, 1140], [1905, 1103, 2001, 1140], [2012, 1103, 2097, 1131], [450, 1174, 503, 1201], [520, 1173, 648, 1201], [663, 1173, 712, 1201], [727, 1173, 906, 1210], [921, 1173, 1069, 1210], [1085, 1182, 1143, 1201], [1160, 1177, 1224, 1210], [1240, 1173, 1352, 1201], [1369, 1173, 1426, 1201], [1443, 1177, 1566, 1210], [1581, 1177, 1612, 1201], [1628, 1173, 1709, 1201], [1727, 1173, 1886, 1201], [1904, 1173, 1983, 1201], [1999, 1173, 2098, 1201], [451, 1219, 564, 1256], [578, 1219, 654, 1247], [677, 1219, 740, 1247], [754, 1219, 821, 1247], [835, 1219, 860, 1247], [875, 1219, 945, 1253], [961, 1219, 1050, 1256], [1064, 1219, 1184, 1256], [1198, 1219, 1322, 1256], [1335, 1219, 1412, 1253], [1429, 1228, 1445, 1247], [1460, 1219, 1565, 1247], [1579, 1219, 1813, 1256], [1827, 1219, 1929, 1248], [1942, 1219, 1981, 1247], [1994, 1219, 2099, 1247], [451, 1269, 481, 1293], [497, 1269, 618, 1302], [633, 1265, 682, 1293], [698, 1274, 842, 1293], [857, 1265, 1002, 1293], [1018, 1265, 1156, 1294], [1173, 1269, 1327, 1293], [1345, 1265, 1424, 1293], [1440, 1265, 1581, 1293], [1596, 1265, 1769, 1302], [1795, 1265, 1885, 1293], [1900, 1269, 1960, 1294], [1975, 1265, 2099, 1302], [452, 1314, 606, 1338], [620, 1310, 697, 1339], [710, 1310, 740, 1338], [753, 1319, 906, 1344], [921, 1310, 957, 1338], [967, 1319, 1082, 1344], [1097, 1310, 1122, 1338], [1137, 1310, 1186, 1338], [1200, 1310, 1360, 1338], [1374, 1310, 1410, 1338], [1420, 1310, 1506, 1338], [1519, 1314, 1579, 1339], [1594, 1314, 1759, 1338], [1779, 1310, 1876, 1347], [1889, 1310, 1946, 1338], [1961, 1310, 2037, 1344], [2052, 1319, 2099, 1339], [450, 1365, 580, 1393], [593, 1365, 609, 1384], [621, 1356, 711, 1385], [722, 1356, 845, 1384], [857, 1356, 905, 1384], [916, 1356, 1050, 1393], [1063, 1360, 1165, 1385], [1175, 1356, 1424, 1393], [1439, 1360, 1467, 1384], [1478, 1356, 1527, 1384], [1539, 1356, 1622, 1385], [1634, 1356, 1712, 1385], [1725, 1356, 1782, 1384], [1793, 1356, 1923, 1393], [451, 1461, 499, 1491], [544, 1461, 704, 1499], [716, 1461, 825, 1499], [451, 1548, 624, 1585], [640, 1548, 689, 1576], [705, 1548, 850, 1576], [867, 1548, 1023, 1585], [1039, 1548, 1075, 1576], [1087, 1548, 1211, 1585], [1227, 1552, 1382, 1576], [1400, 1557, 1500, 1576], [1517, 1548, 1690, 1585], [1708, 1557, 1755, 1577], [1770, 1557, 1826, 1576], [1842, 1548, 1942, 1576], [1958, 1557, 1974, 1576], [1991, 1548, 2099, 1585], [450, 1594, 597, 1631], [616, 1594, 687, 1629], [706, 1594, 835, 1631], [853, 1594, 1067, 1631], [1087, 1603, 1167, 1622], [1185, 1594, 1321, 1622], [1341, 1603, 1372, 1622], [1392, 1594, 1522, 1623], [1553, 1594, 1651, 1623], [1671, 1603, 1687, 1622], [1705, 1594, 1939, 1631], [1959, 1598, 2099, 1622], [451, 1639, 553, 1667], [569, 1639, 640, 1674], [645, 1639, 693, 1674], [710, 1638, 783, 1673], [788, 1663, 794, 1673], [812, 1639, 911, 1668], [927, 1648, 1011, 1676], [1029, 1648, 1045, 1667], [1061, 1643, 1201, 1667], [1216, 1643, 1247, 1667], [1263, 1648, 1279, 1667], [1294, 1643, 1403, 1673], [1420, 1648, 1467, 1668], [1482, 1648, 1538, 1667], [1554, 1639, 1628, 1667], [1644, 1648, 1660, 1667], [1676, 1639, 1789, 1667], [1805, 1639, 1902, 1668], [1919, 1638, 1991, 1673], [2010, 1639, 2099, 1676], [452, 1694, 468, 1713], [484, 1694, 591, 1722], [610, 1684, 689, 1725], [710, 1685, 746, 1713], [759, 1685, 883, 1722], [899, 1685, 967, 1713], [983, 1685, 1063, 1713], [1079, 1685, 1128, 1713], [1145, 1685, 1293, 1722], [1309, 1685, 1373, 1722], [1389, 1683, 1427, 1721], [1440, 1685, 1469, 1713], [1474, 1709, 1479, 1713], [1510, 1686, 1566, 1713], [1582, 1685, 1656, 1713], [1672, 1685, 1736, 1722], [1752, 1685, 1788, 1713], [1801, 1685, 1925, 1722], [1942, 1689, 2097, 1713], [454, 1728, 496, 1769], [508, 1728, 536, 1769], [555, 1737, 576, 1761], [592, 1730, 671, 1771], [678, 1755, 684, 1765], [698, 1740, 745, 1760], [758, 1735, 881, 1768], [891, 1735, 922, 1759], [934, 1731, 1089, 1759], [1020, 1814, 1154, 1855], [1166, 1814, 1194, 1855], [1212, 1814, 1356, 1855], [1372, 1834, 1398, 1835], [1413, 1814, 1507, 1855], [1515, 1805, 1528, 1824], [2053, 1817, 2098, 1852], [451, 1893, 550, 1922], [563, 1903, 643, 1927], [658, 1893, 683, 1921], [696, 1893, 746, 1921], [757, 1897, 860, 1922], [870, 1893, 1074, 1930], [1088, 1897, 1228, 1921], [1241, 1903, 1260, 1921], [1273, 1893, 1330, 1921], [1343, 1892, 1419, 1927], [1434, 1893, 1484, 1921], [1495, 1897, 1598, 1922], [1608, 1893, 1812, 1930], [1826, 1897, 1966, 1921], [1979, 1892, 2003, 1921], [451, 1998, 501, 2028], [544, 1999, 612, 2028], [625, 1998, 765, 2028], [778, 1999, 890, 2028], [451, 2085, 479, 2113], [492, 2085, 588, 2114], [602, 2085, 698, 2113], [712, 2085, 856, 2113], [868, 2085, 1117, 2122], [1130, 2085, 1166, 2113], [1175, 2085, 1270, 2122], [1282, 2085, 1426, 2122], [1438, 2085, 1516, 2113], [1530, 2085, 1619, 2122], [1631, 2085, 1680, 2113], [1692, 2085, 1837, 2113], [1848, 2085, 2097, 2122], [451, 2130, 486, 2158], [495, 2130, 571, 2158], [582, 2130, 787, 2158], [803, 2131, 856, 2158], [869, 2139, 989, 2158], [1001, 2130, 1167, 2159], [1178, 2130, 1276, 2159], [1290, 2134, 1320, 2158], [1332, 2130, 1370, 2158], [1381, 2130, 1572, 2167], [1583, 2130, 1624, 2167], [1636, 2134, 1752, 2159], [1766, 2130, 1800, 2165], [1816, 2136, 1837, 2160], [1854, 2123, 1924, 2165], [451, 2201, 592, 2230], [607, 2201, 744, 2229], [759, 2201, 882, 2238], [894, 2201, 999, 2238], [1012, 2210, 1099, 2238], [1113, 2205, 1188, 2229], [1203, 2210, 1243, 2229], [1256, 2201, 1305, 2229], [1319, 2201, 1386, 2229], [1401, 2201, 1461, 2238], [1465, 2225, 1470, 2229], [1494, 2201, 1553, 2235], [1568, 2200, 1635, 2236], [1650, 2201, 1708, 2229], [1720, 2210, 1775, 2229], [1789, 2201, 1939, 2238], [1953, 2210, 1986, 2229], [1999, 2201, 2098, 2229], [450, 2247, 590, 2284], [603, 2247, 806, 2284], [819, 2247, 981, 2275], [1000, 2247, 1102, 2276], [1115, 2247, 1189, 2275], [1203, 2256, 1219, 2275], [1232, 2251, 1326, 2284], [1341, 2247, 1441, 2276], [1453, 2247, 1528, 2275], [1540, 2247, 1620, 2275], [1632, 2247, 1663, 2275], [1676, 2247, 1725, 2275], [1738, 2251, 1798, 2275], [1811, 2247, 1836, 2275], [1850, 2247, 1987, 2275], [1999, 2256, 2033, 2275], [2044, 2247, 2097, 2275], [451, 2296, 511, 2321], [523, 2292, 657, 2320], [670, 2292, 702, 2328], [716, 2299, 753, 2320], [769, 2302, 800, 2327], [808, 2316, 812, 2328], [824, 2302, 854, 2326], [860, 2292, 881, 2327], [896, 2301, 912, 2320], [922, 2292, 1028, 2329], [1040, 2292, 1243, 2329], [1256, 2292, 1392, 2320], [1404, 2292, 1495, 2320], [1507, 2292, 1574, 2320], [1586, 2292, 1635, 2320], [1647, 2292, 1806, 2329], [1818, 2292, 1906, 2320], [1073, 2365, 1471, 2406], [2053, 2368, 2098, 2403], [451, 2452, 550, 2481], [568, 2449, 619, 2490], [632, 2449, 673, 2490], [691, 2452, 715, 2480], [731, 2452, 780, 2480], [794, 2452, 1022, 2480], [1036, 2452, 1072, 2480], [1083, 2452, 1132, 2480], [1146, 2456, 1206, 2481], [1220, 2452, 1301, 2480], [1315, 2456, 1441, 2486], [1458, 2452, 1500, 2481], [1503, 2452, 1515, 2465], [1537, 2458, 1558, 2482], [1577, 2445, 1683, 2480], [1699, 2452, 1756, 2480], [1771, 2451, 1801, 2480], [1823, 2458, 1844, 2482], [1863, 2445, 1909, 2480], [1925, 2452, 1974, 2480], [1988, 2452, 2098, 2480], [451, 2498, 502, 2535], [515, 2498, 622, 2526], [636, 2498, 693, 2526], [706, 2498, 781, 2532], [795, 2498, 999, 2535], [1016, 2498, 1073, 2526], [1086, 2508, 1105, 2535], [1120, 2507, 1157, 2526], [1170, 2498, 1390, 2527], [1404, 2498, 1563, 2527], [1577, 2498, 1713, 2526], [1728, 2498, 1801, 2526], [1815, 2507, 1846, 2526], [1861, 2498, 1910, 2526], [1922, 2498, 2098, 2535], [451, 2547, 580, 2580], [599, 2544, 656, 2571], [668, 2543, 717, 2571], [729, 2552, 875, 2580], [889, 2543, 925, 2571], [935, 2543, 1105, 2572], [1118, 2543, 1167, 2571], [1179, 2543, 1326, 2580], [1340, 2543, 1437, 2580], [1449, 2543, 1600, 2580], [1615, 2543, 1719, 2577], [1734, 2552, 1781, 2572], [1795, 2543, 1930, 2580], [1944, 2543, 2001, 2571], [2015, 2552, 2098, 2571], [450, 2589, 583, 2626], [597, 2589, 734, 2617], [748, 2589, 788, 2626], [804, 2589, 912, 2626], [928, 2589, 967, 2617], [981, 2589, 1094, 2626], [1107, 2589, 1244, 2617], [1261, 2593, 1291, 2617], [1306, 2589, 1355, 2617], [1369, 2589, 1495, 2626], [1510, 2589, 1567, 2617], [1583, 2589, 1622, 2617], [1636, 2589, 1735, 2617], [1751, 2593, 1781, 2617], [1796, 2598, 1875, 2617], [1899, 2589, 2035, 2626], [2050, 2589, 2099, 2617], [452, 2635, 548, 2664], [561, 2635, 685, 2663], [699, 2639, 729, 2663], [742, 2644, 758, 2663], [771, 2635, 880, 2672], [892, 2635, 1022, 2664], [1034, 2635, 1237, 2672], [1250, 2635, 1395, 2663], [1155, 2770, 1235, 2794], [1252, 2773, 1280, 2782], [1309, 2710, 1339, 2739], [1296, 2748, 1352, 2806], [1298, 2818, 1349, 2838], [1363, 2770, 1392, 2794], [2053, 2760, 2098, 2795], [451, 2876, 495, 2905], [510, 2885, 625, 2910], [645, 2876, 702, 2904], [721, 2876, 745, 2904], [765, 2885, 781, 2904], [798, 2885, 869, 2913], [888, 2876, 1051, 2913], [1069, 2876, 1176, 2910], [1196, 2885, 1226, 2904], [1246, 2876, 1319, 2904], [1337, 2885, 1353, 2904], [1369, 2876, 1590, 2913], [1610, 2876, 1759, 2913], [1777, 2885, 1816, 2904], [1834, 2876, 1939, 2913], [1956, 2880, 2097, 2904], [451, 2921, 498, 2949], [515, 2921, 598, 2950], [616, 2921, 754, 2958], [773, 2921, 830, 2949], [848, 2921, 932, 2949], [949, 2921, 1055, 2949], [1074, 2921, 1174, 2950], [1193, 2930, 1209, 2949], [1226, 2930, 1310, 2949], [1327, 2921, 1468, 2958], [1486, 2921, 1583, 2950], [1602, 2921, 1698, 2958], [1715, 2925, 1844, 2958], [1877, 2922, 2031, 2955], [2052, 2921, 2100, 2949], [451, 2967, 500, 2995], [515, 2976, 660, 3004], [678, 2967, 713, 2995], [727, 2967, 784, 2995], [801, 2967, 970, 2996], [987, 2967, 1058, 3002], [1075, 2967, 1147, 2996], [1163, 2967, 1212, 2995], [1228, 2967, 1443, 3004], [1459, 2967, 1628, 2996], [1644, 2967, 1674, 2995], [1691, 2967, 1797, 3002], [1817, 2967, 1890, 2995], [1907, 2976, 1923, 2995], [1940, 2967, 2098, 3004], [451, 3013, 654, 3050], [666, 3013, 803, 3041], [816, 3013, 924, 3041], [935, 3013, 974, 3041], [987, 3013, 1138, 3041], [1149, 3017, 1180, 3041], [1192, 3013, 1327, 3042], [1339, 3013, 1388, 3041], [1400, 3013, 1489, 3042], [1501, 3013, 1650, 3050], [1662, 3013, 1799, 3041], [1810, 3013, 1961, 3050], [1972, 3013, 2052, 3041], [1266, 3137, 1282, 3166], [451, 1216, 557, 1253], [578, 1216, 602, 1244], [628, 1216, 820, 1253], [837, 1216, 873, 1244], [887, 1225, 903, 1244], [919, 1216, 1066, 1253], [1082, 1216, 1185, 1244], [1201, 1216, 1273, 1245], [1289, 1216, 1413, 1253], [1429, 1216, 1514, 1253], [1531, 1220, 1686, 1244], [1705, 1226, 1724, 1244], [1742, 1216, 1799, 1244], [1817, 1215, 1840, 1244], [1870, 1216, 1934, 1244], [1950, 1216, 2099, 1253], [451, 1262, 587, 1290], [602, 1262, 638, 1290], [650, 1262, 707, 1290], [724, 1262, 826, 1290], [841, 1262, 866, 1290], [882, 1266, 913, 1290], [928, 1262, 1083, 1290], [1098, 1262, 1147, 1290], [1162, 1262, 1297, 1290], [1311, 1262, 1448, 1291], [1464, 1262, 1513, 1290], [1529, 1266, 1669, 1290], [1684, 1262, 1762, 1291], [1777, 1262, 1927, 1299], [1942, 1262, 1978, 1290], [1990, 1262, 2040, 1290], [2053, 1262, 2098, 1290], [451, 1312, 519, 1336], [536, 1308, 716, 1345], [729, 1317, 786, 1345], [798, 1308, 1002, 1345], [1014, 1308, 1151, 1336], [1163, 1317, 1219, 1336], [1230, 1308, 1269, 1336], [1280, 1308, 1355, 1336], [1367, 1312, 1398, 1336], [1410, 1312, 1549, 1345], [1561, 1308, 1610, 1336], [1622, 1308, 1856, 1345], [1869, 1312, 2010, 1336], [2021, 1308, 2099, 1337], [450, 1353, 709, 1390], [725, 1353, 788, 1381], [800, 1353, 1003, 1390], [1016, 1353, 1152, 1381], [1164, 1353, 1189, 1381], [1201, 1353, 1392, 1390], [1403, 1353, 1444, 1390], [1456, 1353, 1505, 1381], [1519, 1353, 1605, 1382], [1616, 1353, 1710, 1381], [1723, 1353, 1754, 1381], [1766, 1353, 1815, 1381], [1827, 1353, 1962, 1390], [1975, 1353, 2078, 1382], [451, 1530, 548, 1567], [561, 1530, 617, 1558], [632, 1530, 762, 1559], [775, 1530, 872, 1559], [886, 1539, 933, 1559], [945, 1534, 1025, 1559], [1037, 1534, 1067, 1558], [1080, 1530, 1224, 1567], [1236, 1530, 1285, 1558], [1296, 1530, 1444, 1567], [1456, 1539, 1536, 1558], [1549, 1530, 1645, 1567], [1658, 1530, 1778, 1558], [1792, 1530, 1887, 1559], [1900, 1530, 1966, 1567], [1988, 1530, 2026, 1565], [2043, 1531, 2100, 1558], [451, 1576, 500, 1604], [513, 1580, 656, 1610], [672, 1585, 792, 1604], [805, 1576, 867, 1604], [879, 1575, 952, 1610], [968, 1576, 992, 1604], [1008, 1585, 1024, 1604], [1036, 1576, 1183, 1613], [1196, 1576, 1310, 1604], [1324, 1576, 1421, 1605], [1437, 1576, 1510, 1604], [1523, 1576, 1585, 1604], [1598, 1586, 1678, 1610], [1693, 1580, 1860, 1613], [1874, 1576, 1924, 1604], [1938, 1576, 2097, 1604], [451, 1621, 486, 1649], [498, 1621, 548, 1649], [563, 1625, 704, 1649], [719, 1631, 747, 1649], [772, 1621, 899, 1655], [917, 1621, 975, 1649], [990, 1625, 1020, 1649], [1035, 1621, 1084, 1649], [1098, 1630, 1153, 1649], [1168, 1621, 1203, 1649], [1214, 1621, 1338, 1658], [1353, 1621, 1429, 1655], [1446, 1630, 1493, 1650], [1507, 1621, 1597, 1650], [1612, 1621, 1674, 1649], [1689, 1631, 1708, 1649], [1724, 1621, 1781, 1649], [1797, 1620, 1812, 1649], [1828, 1630, 1876, 1649], [1892, 1621, 2099, 1658], [451, 1667, 628, 1704], [656, 1668, 761, 1695], [777, 1676, 824, 1696], [839, 1667, 965, 1695], [981, 1667, 1030, 1695], [1047, 1667, 1191, 1695], [1206, 1667, 1387, 1704], [1403, 1667, 1563, 1695], [1579, 1667, 1609, 1695], [1625, 1666, 1698, 1701], [1716, 1671, 1788, 1695], [1805, 1666, 1877, 1701], [1884, 1691, 1890, 1701], [1908, 1667, 1948, 1704], [1964, 1667, 2099, 1704], [452, 1712, 528, 1751], [546, 1717, 577, 1741], [589, 1713, 753, 1741], [985, 1818, 1038, 1852], [1046, 1815, 1139, 1858], [1145, 1815, 1155, 1856], [1173, 1831, 1201, 1840], [1269, 1806, 1325, 1864], [1218, 1875, 1374, 1906], [1388, 1818, 1472, 1852], [1480, 1815, 1522, 1856], [1534, 1815, 1562, 1856], [2053, 1818, 2098, 1853], [451, 1986, 495, 2015], [505, 1995, 620, 2020], [634, 1986, 691, 2014], [704, 1986, 853, 2023], [865, 1986, 1002, 2014], [1015, 1995, 1149, 2014], [1164, 1995, 1180, 2014], [1192, 1986, 1268, 2023], [1281, 1986, 1394, 2014], [1406, 1986, 1509, 2014], [1520, 1986, 1620, 2015], [1632, 1995, 1679, 2015], [1691, 1986, 1731, 2014], [1743, 1990, 1796, 2014], [1806, 1986, 1882, 2015], [1895, 1990, 1923, 2014], [1934, 1986, 1991, 2014], [2006, 1990, 2097, 2023], [450, 2032, 551, 2060], [567, 2032, 624, 2060], [643, 2041, 698, 2060], [714, 2032, 753, 2060], [771, 2041, 787, 2060], [803, 2032, 904, 2060], [920, 2032, 1069, 2069], [1086, 2032, 1134, 2060], [1150, 2032, 1342, 2069], [1359, 2032, 1511, 2069], [1528, 2032, 1708, 2069], [1725, 2032, 1788, 2060], [1805, 2032, 2019, 2061], [2036, 2032, 2098, 2060], [451, 2086, 563, 2114], [579, 2077, 653, 2111], [667, 2077, 724, 2105], [737, 2077, 946, 2114], [958, 2077, 983, 2105], [996, 2081, 1049, 2105], [1059, 2077, 1176, 2114], [1189, 2077, 1277, 2106], [1289, 2077, 1371, 2105], [1383, 2077, 1407, 2105], [1421, 2086, 1461, 2105], [1473, 2077, 1576, 2105], [1588, 2081, 1618, 2105], [1631, 2077, 1712, 2105], [1725, 2077, 1804, 2105], [1816, 2077, 1847, 2105], [1859, 2077, 1923, 2105], [1933, 2077, 2029, 2114], [2045, 2078, 2099, 2105], [450, 2123, 568, 2152], [580, 2123, 637, 2151], [650, 2123, 732, 2151], [743, 2123, 784, 2160], [792, 2123, 902, 2160], [915, 2123, 1042, 2160], [1053, 2123, 1126, 2151], [1138, 2123, 1255, 2151], [1269, 2122, 1341, 2157], [1357, 2123, 1414, 2151], [1426, 2122, 1499, 2157], [1507, 2147, 1512, 2151], [450, 2194, 606, 2231], [619, 2194, 672, 2228], [688, 2198, 718, 2222], [730, 2194, 853, 2231], [866, 2194, 933, 2222], [945, 2203, 1067, 2222], [1080, 2194, 1142, 2222], [1152, 2194, 1225, 2222], [1238, 2194, 1355, 2222], [1368, 2194, 1450, 2222], [1463, 2203, 1479, 2222], [1492, 2194, 1598, 2222], [1609, 2194, 1843, 2231], [1857, 2198, 1885, 2222], [1896, 2194, 1946, 2222], [1959, 2198, 2099, 2222], [450, 2239, 537, 2268], [555, 2239, 598, 2267], [612, 2239, 662, 2267], [673, 2239, 797, 2276], [810, 2239, 895, 2276], [907, 2243, 1062, 2267], [1078, 2239, 1163, 2267], [1175, 2239, 1225, 2267], [1238, 2248, 1321, 2267], [1334, 2239, 1484, 2276], [1499, 2239, 1521, 2267], [1533, 2239, 1557, 2267], [1571, 2239, 1748, 2267], [1760, 2243, 1791, 2267], [1805, 2248, 1925, 2267], [1937, 2239, 1999, 2267], [2011, 2239, 2098, 2267], [450, 2285, 564, 2322], [577, 2285, 630, 2319], [645, 2285, 708, 2314], [720, 2285, 804, 2313], [816, 2285, 865, 2313], [877, 2285, 979, 2313], [991, 2289, 1021, 2313], [1033, 2285, 1115, 2313], [1127, 2285, 1202, 2313], [1214, 2285, 1358, 2313], [1370, 2285, 1613, 2322], [1629, 2286, 1684, 2313], [1696, 2284, 1738, 2319], [1755, 2298, 1783, 2307], [1799, 2284, 1876, 2323], [1892, 2288, 1915, 2314], [1929, 2284, 2005, 2323], [2015, 2309, 2020, 2313], [2036, 2285, 2099, 2313], [446, 2331, 526, 2368], [537, 2331, 686, 2368], [698, 2331, 835, 2359], [849, 2331, 872, 2360], [877, 2328, 933, 2369], [939, 2328, 949, 2369], [964, 2331, 1030, 2359], [1043, 2331, 1196, 2359], [1011, 2446, 1112, 2487], [1129, 2462, 1157, 2471], [1173, 2446, 1343, 2489], [1359, 2453, 1387, 2480], [1405, 2420, 1426, 2450], [1407, 2477, 1424, 2505], [1438, 2446, 1497, 2487], [1506, 2446, 1516, 2487], [1524, 2441, 1537, 2460], [2053, 2448, 2098, 2484], [451, 2560, 550, 2589], [563, 2557, 650, 2598], [659, 2557, 689, 2598], [705, 2560, 729, 2588], [743, 2560, 792, 2588], [805, 2560, 846, 2594], [860, 2560, 1090, 2597], [1102, 2564, 1185, 2588], [451, 2631, 475, 2658], [490, 2630, 515, 2658], [533, 2634, 674, 2667], [689, 2630, 751, 2658], [765, 2630, 822, 2658], [835, 2630, 915, 2667], [930, 2630, 1079, 2667], [1096, 2630, 1119, 2659], [1124, 2627, 1181, 2668], [1187, 2627, 1197, 2668], [1216, 2630, 1240, 2658], [1258, 2630, 1444, 2667], [1471, 2630, 1535, 2658], [1550, 2630, 1667, 2658], [1684, 2630, 1775, 2658], [1791, 2630, 1872, 2658], [1888, 2634, 1918, 2658], [1933, 2630, 2043, 2658], [2060, 2630, 2099, 2658], [451, 2676, 648, 2713], [664, 2676, 721, 2704], [734, 2676, 937, 2713], [951, 2676, 1077, 2713], [1091, 2680, 1122, 2704], [1135, 2685, 1204, 2704], [1219, 2676, 1276, 2704], [1289, 2676, 1412, 2713], [1425, 2676, 1580, 2704], [1593, 2676, 1642, 2704], [1655, 2676, 1804, 2713], [1817, 2676, 1962, 2704], [1981, 2677, 2035, 2704], [2049, 2676, 2098, 2704], [451, 2721, 533, 2749], [548, 2721, 605, 2749], [621, 2721, 702, 2749], [715, 2721, 756, 2758], [770, 2721, 946, 2758], [961, 2730, 977, 2749], [991, 2721, 1070, 2749], [1084, 2721, 1120, 2749], [1131, 2721, 1310, 2750], [1324, 2721, 1495, 2749], [1509, 2721, 1681, 2758], [1696, 2721, 1783, 2749], [1798, 2721, 1947, 2749], [1961, 2721, 2099, 2750], [451, 2767, 650, 2804], [665, 2771, 805, 2795], [818, 2767, 907, 2804], [930, 2768, 986, 2795], [999, 2776, 1088, 2804], [1102, 2767, 1166, 2804], [1180, 2767, 1215, 2795], [1226, 2767, 1350, 2804], [1365, 2771, 1520, 2795], [1539, 2764, 1581, 2805], [1593, 2764, 1621, 2805], [1639, 2776, 1686, 2796], [1701, 2767, 1816, 2804], [1831, 2776, 1847, 2795], [1861, 2767, 1987, 2795], [2000, 2767, 2036, 2795], [2048, 2767, 2098, 2795], [451, 2813, 576, 2841], [591, 2817, 746, 2841], [761, 2823, 784, 2841], [803, 2819, 824, 2843], [844, 2812, 889, 2847], [896, 2837, 902, 2847], [918, 2813, 1133, 2842], [1146, 2813, 1219, 2850], [1232, 2813, 1506, 2850], [1520, 2817, 1572, 2841], [1585, 2817, 1672, 2841], [1685, 2813, 1873, 2841], [1888, 2813, 1924, 2841], [1936, 2823, 1964, 2841], [1987, 2813, 2057, 2841], [2073, 2813, 2097, 2841], [451, 2858, 643, 2895], [658, 2862, 689, 2886], [704, 2858, 754, 2886], [770, 2858, 882, 2886], [898, 2862, 973, 2886], [988, 2858, 1024, 2886], [1036, 2858, 1086, 2886], [1101, 2858, 1162, 2886], [1179, 2858, 1316, 2886], [1332, 2858, 1367, 2886], [1381, 2867, 1397, 2886], [1412, 2858, 1493, 2895], [1509, 2858, 1624, 2895], [1639, 2862, 1756, 2886], [1771, 2858, 1938, 2895], [1953, 2858, 2100, 2886], [452, 2904, 516, 2939], [528, 2905, 581, 2941], [601, 2904, 637, 2932], [649, 2904, 680, 2932], [695, 2904, 782, 2939], [855, 2997, 962, 3031], [970, 2994, 1012, 3035], [1024, 2996, 1048, 3033], [1060, 2994, 1096, 3035], [1113, 3010, 1141, 3019], [1160, 2994, 1184, 3035], [1199, 3001, 1227, 3028], [1240, 2997, 1324, 3031], [1332, 2994, 1374, 3035], [1387, 2994, 1414, 3035], [1431, 3014, 1457, 3015], [1471, 2994, 1605, 3035], [1617, 2994, 1691, 3040], [2053, 2997, 2098, 3032], [1265, 3137, 1284, 3165], [451, 354, 550, 383], [571, 351, 636, 392], [663, 367, 691, 376], [716, 351, 845, 392], [857, 351, 888, 392], [908, 354, 1032, 382], [1051, 354, 1100, 382], [1118, 354, 1256, 382], [1272, 354, 1363, 391], [1380, 354, 1452, 382], [1483, 354, 1573, 388], [1593, 354, 1643, 382], [1659, 354, 1732, 382], [1749, 354, 1898, 391], [1914, 354, 2051, 382], [2068, 358, 2099, 382], [451, 400, 606, 428], [618, 400, 665, 428], [676, 400, 726, 428], [739, 400, 873, 429], [886, 400, 988, 428], [1000, 400, 1035, 428], [818, 505, 918, 546], [935, 521, 963, 530], [1031, 496, 1087, 554], [980, 565, 1137, 595], [1204, 464, 1218, 484], [1183, 496, 1239, 554], [1185, 566, 1236, 585], [1250, 508, 1357, 542], [1365, 505, 1407, 546], [1419, 507, 1443, 544], [1455, 505, 1504, 546], [1510, 463, 1581, 588], [1599, 479, 1620, 509], [1601, 536, 1618, 564], [1631, 505, 1691, 546], [1700, 505, 1710, 546], [1718, 500, 1731, 519], [2053, 508, 2098, 543], [451, 662, 500, 692], [544, 663, 655, 692], [667, 662, 829, 700], [451, 748, 549, 777], [563, 748, 612, 776], [626, 748, 775, 785], [789, 748, 926, 776], [941, 757, 971, 776], [987, 748, 1108, 776], [1123, 748, 1227, 782], [1243, 748, 1345, 776], [1359, 748, 1494, 785], [1508, 757, 1564, 776], [1578, 748, 1701, 785], [1715, 748, 1764, 776], [1779, 757, 1862, 776], [1876, 748, 2050, 785], [2067, 757, 2097, 776], [452, 803, 508, 831], [519, 794, 727, 831], [739, 794, 846, 823], [859, 795, 892, 822], [902, 794, 1067, 831], [1081, 803, 1111, 822], [1124, 794, 1173, 822], [1184, 794, 1333, 831], [1344, 794, 1480, 822], [1491, 794, 1516, 822], [1528, 794, 1758, 828], [1771, 803, 1818, 823], [1828, 803, 1884, 822], [1894, 803, 1949, 822], [1961, 794, 2099, 822], [451, 839, 586, 876], [600, 839, 724, 867], [738, 839, 913, 876], [930, 839, 1004, 867], [1020, 848, 1050, 867], [1068, 839, 1228, 867], [1244, 839, 1380, 876], [1394, 839, 1525, 873], [1543, 839, 1682, 868], [1700, 848, 1733, 867], [1748, 839, 1797, 867], [1813, 839, 1949, 876], [1964, 839, 2100, 876], [452, 885, 611, 922], [622, 885, 772, 914], [787, 885, 839, 919], [854, 885, 967, 913], [979, 885, 1053, 913], [1065, 885, 1273, 922], [1286, 885, 1393, 919], [1406, 894, 1453, 914], [1463, 894, 1518, 913], [1529, 885, 1804, 922], [1816, 885, 1944, 922], [1956, 889, 2099, 913], [452, 931, 526, 959], [538, 931, 680, 968], [693, 931, 742, 959], [750, 931, 829, 968], [840, 940, 920, 959], [931, 935, 962, 959], [974, 931, 1048, 959], [1061, 935, 1202, 959], [1214, 931, 1291, 960], [1303, 931, 1391, 959], [451, 1045, 474, 1079], [525, 1045, 794, 1089], [451, 1148, 499, 1178], [544, 1149, 627, 1178], [640, 1149, 704, 1178], [717, 1149, 919, 1178], [451, 1235, 502, 1263], [515, 1235, 618, 1263], [631, 1235, 757, 1272], [772, 1244, 851, 1264], [864, 1235, 1022, 1272], [1036, 1235, 1198, 1263], [1210, 1235, 1299, 1272], [1314, 1244, 1330, 1263], [1343, 1235, 1494, 1264], [1507, 1235, 1705, 1263], [1726, 1235, 1821, 1263], [1835, 1244, 1884, 1263], [1898, 1244, 1914, 1263], [1927, 1235, 2053, 1263], [2066, 1235, 2102, 1263], [450, 1284, 629, 1317], [645, 1280, 707, 1308], [720, 1289, 776, 1308], [791, 1280, 942, 1308], [956, 1280, 1058, 1308], [1073, 1280, 1209, 1317], [1231, 1281, 1285, 1308], [1300, 1280, 1431, 1308], [1446, 1280, 1495, 1308], [1509, 1280, 1668, 1317], [1683, 1280, 1784, 1309], [1800, 1280, 1848, 1308], [1863, 1280, 2026, 1317], [2042, 1280, 2099, 1308], [451, 1326, 679, 1363], [696, 1326, 768, 1355], [783, 1326, 864, 1363], [879, 1326, 971, 1355], [1000, 1327, 1033, 1354], [1049, 1326, 1147, 1354], [1163, 1326, 1247, 1355], [1262, 1335, 1309, 1355], [1325, 1326, 1388, 1355], [1404, 1326, 1580, 1363], [1596, 1326, 1645, 1354], [1661, 1326, 1754, 1354], [1769, 1326, 1805, 1354], [1819, 1326, 1902, 1354], [1917, 1330, 2097, 1363], [451, 1372, 481, 1400], [495, 1376, 609, 1409], [622, 1372, 721, 1400], [742, 1372, 786, 1400], [799, 1372, 1028, 1409], [1042, 1372, 1097, 1407], [1113, 1372, 1256, 1409], [1270, 1372, 1356, 1407], [1372, 1372, 1498, 1400], [1510, 1372, 1546, 1400], [1557, 1372, 1643, 1400], [1656, 1372, 1801, 1400], [1817, 1371, 1892, 1407], [1907, 1372, 2022, 1409], [2037, 1372, 2099, 1400], [452, 1416, 527, 1452], [543, 1417, 726, 1454], [741, 1417, 986, 1454], [1001, 1416, 1130, 1452], [1154, 1417, 1217, 1445], [1231, 1417, 1317, 1445], [1332, 1417, 1476, 1445], [1493, 1417, 1623, 1454], [1639, 1426, 1718, 1446], [1731, 1417, 1889, 1454], [1904, 1417, 2005, 1446], [2020, 1417, 2099, 1445], [451, 1463, 500, 1491], [514, 1472, 622, 1500], [638, 1467, 667, 1491], [680, 1463, 808, 1500], [822, 1463, 903, 1497], [920, 1463, 1118, 1500], [1132, 1463, 1180, 1491], [1193, 1463, 1268, 1491], [1282, 1463, 1409, 1500], [1425, 1463, 1540, 1500], [1555, 1463, 1613, 1491], [1627, 1463, 1733, 1500], [1756, 1464, 1809, 1491], [1823, 1472, 1878, 1491], [1892, 1463, 1941, 1491], [1955, 1463, 2099, 1500], [451, 1517, 558, 1545], [574, 1501, 653, 1543], [672, 1508, 719, 1536], [732, 1508, 860, 1545], [874, 1508, 923, 1536], [936, 1508, 1083, 1545], [1097, 1508, 1208, 1536], [1230, 1508, 1293, 1536], [1307, 1517, 1414, 1545], [1430, 1517, 1491, 1537], [1505, 1508, 1735, 1545], [1748, 1508, 1837, 1545], [1851, 1508, 1901, 1536], [1915, 1512, 1960, 1536], [1973, 1508, 2009, 1536], [2020, 1508, 2097, 1536], [450, 1554, 596, 1591], [607, 1554, 648, 1591], [661, 1547, 750, 1582], [767, 1554, 808, 1588], [823, 1554, 871, 1582], [883, 1554, 1056, 1591], [1069, 1554, 1126, 1582], [1139, 1554, 1337, 1591], [1349, 1554, 1399, 1582], [1411, 1554, 1487, 1582], [1505, 1554, 1632, 1588], [1648, 1554, 1687, 1582], [1699, 1558, 1801, 1591], [1815, 1558, 1970, 1582], [1985, 1563, 2015, 1582], [2029, 1554, 2099, 1583], [452, 1609, 482, 1628], [495, 1600, 571, 1628], [582, 1600, 770, 1628], [784, 1609, 863, 1629], [874, 1600, 1017, 1629], [1029, 1600, 1109, 1628], [1120, 1600, 1169, 1628], [1181, 1609, 1299, 1637], [450, 1671, 503, 1698], [513, 1674, 634, 1707], [642, 1670, 749, 1698], [761, 1670, 841, 1698], [851, 1674, 911, 1699], [922, 1670, 1132, 1707], [1148, 1670, 1211, 1698], [1223, 1670, 1357, 1699], [1369, 1670, 1471, 1698], [1482, 1679, 1543, 1699], [1556, 1670, 1669, 1698], [1680, 1679, 1720, 1698], [1731, 1669, 1813, 1699], [1825, 1674, 1965, 1698], [1975, 1670, 2053, 1707], [2066, 1670, 2102, 1698], [451, 1716, 500, 1744], [512, 1716, 785, 1753], [797, 1716, 921, 1753], [934, 1716, 1049, 1744], [1062, 1716, 1098, 1744], [1108, 1716, 1157, 1744], [1169, 1716, 1313, 1753], [1326, 1725, 1443, 1753], [1462, 1716, 1525, 1744], [1539, 1716, 1698, 1745], [1712, 1716, 1814, 1744], [1826, 1716, 1901, 1744], [1914, 1716, 1971, 1744], [1985, 1716, 2100, 1744], [451, 1762, 481, 1790], [493, 1762, 699, 1790], [711, 1762, 783, 1791], [796, 1762, 919, 1790], [930, 1761, 1012, 1791], [1022, 1762, 1146, 1799], [1159, 1766, 1314, 1790], [1327, 1762, 1407, 1790], [1418, 1762, 1468, 1790], [1479, 1762, 1734, 1799], [1747, 1762, 1861, 1790], [1874, 1762, 1909, 1790], [1918, 1762, 1968, 1790], [1979, 1771, 2097, 1799], [450, 1807, 594, 1844], [607, 1807, 637, 1835], [654, 1807, 665, 1835], [681, 1807, 799, 1835], [812, 1807, 937, 1844], [950, 1811, 1115, 1841], [1130, 1807, 1204, 1835], [1215, 1807, 1318, 1844], [1330, 1816, 1371, 1844], [1383, 1807, 1455, 1836], [1468, 1807, 1561, 1835], [1574, 1816, 1590, 1835], [1602, 1807, 1734, 1836], [1747, 1816, 1780, 1835], [1793, 1816, 1809, 1835], [1821, 1807, 1935, 1835], [1948, 1811, 2097, 1835], [451, 1853, 532, 1881], [544, 1853, 718, 1890], [732, 1853, 913, 1890], [924, 1853, 999, 1881], [1011, 1853, 1133, 1881], [1144, 1853, 1309, 1890], [1323, 1857, 1353, 1881], [1366, 1853, 1454, 1882], [1465, 1853, 1610, 1890], [1622, 1853, 1752, 1890], [451, 1924, 514, 1952], [525, 1924, 701, 1953], [712, 1924, 824, 1952], [837, 1930, 856, 1952], [862, 1924, 996, 1953], [1010, 1924, 1035, 1952], [1048, 1928, 1078, 1952], [1090, 1924, 1266, 1961], [1278, 1924, 1411, 1953], [1422, 1933, 1469, 1953], [1480, 1933, 1536, 1952], [1548, 1924, 1629, 1952], [1640, 1924, 1735, 1952], [1746, 1924, 1943, 1961], [1956, 1924, 1996, 1961], [2008, 1924, 2098, 1952], [451, 1969, 562, 2006], [577, 1969, 740, 1997], [754, 1969, 821, 1997], [835, 1969, 865, 1997], [880, 1978, 896, 1997], [910, 1969, 1051, 1997], [1063, 1969, 1220, 2006], [1241, 1969, 1312, 1997], [1327, 1969, 1352, 1997], [1368, 1969, 1481, 1997], [1494, 1973, 1525, 1997], [1538, 1969, 1618, 2006], [1631, 1969, 1715, 1998], [1728, 1969, 1759, 1997], [1773, 1969, 1912, 1997], [1925, 1969, 2099, 1997], [451, 2015, 550, 2044], [562, 2015, 687, 2052], [700, 2024, 761, 2044], [773, 2015, 848, 2043], [862, 2024, 892, 2043], [906, 2024, 922, 2043], [933, 2015, 1017, 2052], [1028, 2015, 1076, 2043], [1087, 2015, 1260, 2043], [1272, 2015, 1409, 2044], [1421, 2015, 1635, 2044], [1647, 2015, 1810, 2052], [1827, 2014, 1879, 2049], [450, 2086, 503, 2113], [514, 2094, 569, 2113], [580, 2085, 629, 2113], [641, 2085, 778, 2122], [789, 2085, 925, 2122], [935, 2085, 1067, 2119], [1080, 2085, 1231, 2114], [1245, 2085, 1298, 2119], [1311, 2085, 1358, 2113], [1368, 2085, 1513, 2122], [1524, 2085, 1574, 2113], [1585, 2085, 1711, 2122], [1724, 2085, 1760, 2113], [1768, 2094, 1823, 2113], [1834, 2085, 1961, 2119], [1975, 2085, 2032, 2113], [2044, 2089, 2098, 2113], [451, 2131, 562, 2159], [575, 2131, 702, 2168], [716, 2131, 790, 2159], [802, 2130, 842, 2160], [855, 2131, 1016, 2159], [1035, 2131, 1147, 2159], [1159, 2131, 1358, 2168], [1372, 2131, 1523, 2159], [1536, 2131, 1597, 2159], [1609, 2131, 1658, 2159], [1672, 2131, 1806, 2160], [1820, 2131, 1923, 2159], [1935, 2140, 2097, 2168], [451, 2177, 541, 2205], [556, 2177, 625, 2205], [640, 2177, 690, 2205], [705, 2183, 724, 2205], [730, 2177, 865, 2206], [881, 2177, 992, 2211], [1009, 2177, 1061, 2205], [1075, 2186, 1122, 2206], [1136, 2181, 1235, 2214], [1248, 2177, 1354, 2205], [1371, 2186, 1411, 2205], [1426, 2177, 1475, 2205], [1491, 2186, 1574, 2205], [1588, 2177, 1714, 2205], [1729, 2177, 1764, 2205], [1776, 2177, 1928, 2205], [1944, 2177, 1992, 2205], [2005, 2177, 2100, 2205], [451, 2215, 693, 2259], [700, 2246, 705, 2250], [451, 2325, 501, 2355], [545, 2325, 795, 2363], [807, 2326, 989, 2355], [1001, 2325, 1235, 2355], [450, 2413, 503, 2440], [516, 2412, 651, 2441], [663, 2421, 718, 2440], [729, 2412, 832, 2440], [843, 2412, 932, 2449], [945, 2412, 995, 2440], [1007, 2412, 1220, 2449], [1232, 2412, 1396, 2440], [1407, 2412, 1622, 2440], [1636, 2412, 1771, 2447], [1784, 2412, 1850, 2440], [1862, 2412, 1898, 2440], [1908, 2412, 2099, 2441], [451, 2462, 480, 2486], [494, 2458, 530, 2486], [549, 2458, 622, 2492], [645, 2458, 716, 2486], [732, 2458, 798, 2486], [811, 2458, 946, 2487], [962, 2458, 1096, 2495], [1110, 2458, 1259, 2495], [1273, 2458, 1475, 2495], [1488, 2458, 1686, 2495], [1702, 2458, 1801, 2487], [1817, 2467, 1865, 2486], [1879, 2458, 1949, 2486], [1962, 2458, 2038, 2486], [2052, 2458, 2100, 2486], [451, 2503, 614, 2531], [627, 2503, 842, 2531], [857, 2512, 956, 2531], [972, 2503, 1021, 2531], [1035, 2503, 1308, 2540], [1322, 2503, 1470, 2540], [1483, 2503, 1553, 2540], [1575, 2504, 1632, 2531], [1645, 2503, 1712, 2537], [1728, 2503, 1836, 2532], [1851, 2503, 1988, 2540], [2005, 2512, 2021, 2531], [2034, 2512, 2098, 2540], [451, 2549, 556, 2577], [569, 2549, 642, 2577], [657, 2549, 693, 2577], [706, 2549, 903, 2586], [920, 2549, 1041, 2586], [1055, 2549, 1144, 2586], [1160, 2549, 1335, 2586], [1350, 2549, 1477, 2586], [1492, 2549, 1560, 2577], [1575, 2549, 1605, 2577], [1620, 2558, 1679, 2577], [1693, 2549, 1842, 2586], [1857, 2549, 1915, 2577], [1930, 2549, 2099, 2586], [451, 2594, 577, 2623], [592, 2594, 781, 2631], [797, 2594, 828, 2622], [844, 2594, 973, 2622], [1000, 2594, 1090, 2628], [1109, 2594, 1217, 2623], [1233, 2594, 1258, 2622], [1276, 2603, 1292, 2622], [1308, 2594, 1389, 2631], [1405, 2594, 1471, 2622], [1486, 2594, 1534, 2622], [1549, 2594, 1745, 2631], [1761, 2594, 1894, 2623], [1909, 2603, 1963, 2622], [1978, 2594, 2099, 2622], [450, 2640, 699, 2677], [713, 2649, 761, 2668], [774, 2640, 981, 2677], [992, 2640, 1093, 2668], [1106, 2649, 1206, 2668], [1219, 2640, 1356, 2677], [1368, 2640, 1541, 2677], [450, 2712, 503, 2739], [513, 2711, 619, 2740], [629, 2711, 678, 2739], [688, 2711, 903, 2748], [914, 2715, 999, 2748], [1009, 2711, 1167, 2739], [1177, 2711, 1207, 2739], [1221, 2711, 1294, 2745], [1306, 2711, 1378, 2740], [1388, 2711, 1438, 2739], [1448, 2711, 1607, 2748], [1617, 2711, 1679, 2739], [1688, 2720, 1735, 2740], [1745, 2711, 1826, 2739], [1836, 2720, 1891, 2739], [1900, 2711, 2097, 2748], [450, 2756, 539, 2793], [554, 2756, 650, 2793], [664, 2756, 713, 2784], [727, 2756, 871, 2793], [885, 2756, 952, 2784], [967, 2756, 1024, 2784], [1038, 2756, 1110, 2793], [1123, 2765, 1178, 2784], [1192, 2756, 1241, 2784], [1255, 2757, 1379, 2784], [1394, 2756, 1616, 2785], [1630, 2765, 1756, 2793], [1769, 2756, 1876, 2793], [1890, 2756, 1939, 2784], [1953, 2756, 2100, 2784], [451, 2802, 578, 2839], [593, 2802, 651, 2830], [665, 2802, 774, 2839], [790, 2806, 897, 2839], [921, 2802, 1002, 2830], [1016, 2802, 1179, 2830], [1193, 2802, 1223, 2830], [1238, 2802, 1287, 2830], [1301, 2802, 1516, 2830], [1531, 2802, 1597, 2830], [1611, 2802, 1635, 2830], [1650, 2802, 1841, 2839], [1854, 2802, 1895, 2839], [1909, 2802, 1959, 2830], [1974, 2811, 2099, 2839], [505, 2876, 512, 2893], [519, 2883, 1207, 2915], [503, 2921, 514, 2938], [519, 2929, 1209, 2961], [503, 2966, 513, 2983], [518, 2973, 605, 2999], [620, 2973, 746, 2999], [762, 2982, 833, 3000], [846, 2973, 964, 3007], [979, 2973, 1121, 3007], [1136, 2977, 1287, 2999], [1303, 2973, 1330, 2999], [1344, 2973, 1389, 2999], [1403, 2974, 1488, 3000], [1502, 2982, 1572, 3007], [1586, 2973, 1685, 3000], [1699, 2982, 1818, 3007], [1844, 2973, 1952, 2999], [1967, 2973, 2010, 2999], [2024, 2973, 2100, 2999], [451, 3015, 693, 3041], [705, 3015, 757, 3041], [768, 3024, 817, 3041], [828, 3024, 923, 3041], [934, 3015, 1003, 3041], [1014, 3015, 1057, 3041], [1067, 3024, 1116, 3041], [1126, 3015, 1218, 3041], [1229, 3024, 1273, 3041], [1284, 3015, 1415, 3042], [1426, 3019, 1452, 3041], [1463, 3016, 2029, 3048], [1265, 3136, 1282, 3166], [962, 345, 1069, 373], [1258, 345, 1397, 373], [1448, 345, 1587, 373], [962, 392, 1106, 429], [1118, 392, 1205, 421], [1292, 392, 1361, 421], [1482, 392, 1551, 421], [962, 438, 1094, 467], [1292, 437, 1359, 467], [1482, 438, 1552, 467], [962, 484, 1023, 511], [1292, 483, 1359, 512], [1482, 483, 1553, 512], [962, 529, 1101, 557], [1292, 529, 1362, 558], [1482, 529, 1549, 557], [963, 576, 1097, 605], [1293, 576, 1362, 605], [1482, 576, 1553, 604], [963, 622, 1122, 651], [1292, 621, 1363, 651], [1482, 621, 1553, 651], [450, 709, 540, 737], [558, 709, 582, 737], [604, 709, 829, 738], [844, 718, 988, 746], [1003, 709, 1050, 737], [1064, 709, 1191, 746], [1206, 718, 1246, 737], [1260, 709, 1385, 746], [1401, 709, 1458, 737], [1472, 709, 1604, 738], [1619, 709, 1691, 738], [1710, 709, 1787, 738], [1801, 709, 1919, 737], [1934, 709, 2097, 746], [450, 755, 673, 792], [685, 755, 919, 792], [930, 755, 1179, 792], [1194, 755, 1226, 790], [1232, 755, 1342, 784], [1356, 755, 1413, 783], [1427, 755, 1610, 790], [1624, 755, 1837, 792], [1848, 755, 2097, 792], [449, 800, 539, 837], [555, 800, 676, 828], [692, 800, 890, 837], [909, 800, 966, 828], [984, 809, 1020, 828], [1037, 800, 1213, 828], [1229, 800, 1336, 828], [1354, 800, 1518, 835], [1539, 800, 1600, 834], [1620, 800, 1780, 828], [1797, 800, 1883, 835], [1902, 800, 1959, 828], [1976, 800, 2099, 837], [451, 846, 609, 881], [624, 846, 732, 880], [748, 846, 805, 874], [819, 846, 868, 874], [881, 846, 1020, 883], [1034, 846, 1111, 874], [1125, 846, 1269, 874], [1290, 846, 1353, 874], [1366, 847, 1427, 874], [1441, 846, 1498, 874], [1512, 846, 1644, 875], [1656, 846, 1763, 874], [1778, 855, 1827, 874], [1841, 846, 1905, 874], [1919, 846, 2006, 874], [2020, 846, 2099, 874], [450, 892, 641, 921], [654, 896, 683, 920], [695, 892, 731, 920], [748, 892, 821, 926], [600, 1515, 657, 1544], [720, 1515, 779, 1544], [842, 1515, 901, 1544], [956, 1515, 1033, 1544], [1076, 1515, 1155, 1544], [1190, 1515, 1288, 1544], [573, 1404, 611, 1433], [573, 1311, 611, 1340], [573, 1217, 611, 1246], [573, 1124, 611, 1153], [724, 1579, 864, 1616], [876, 1580, 1062, 1607], [1077, 1579, 1140, 1614], [464, 1462, 493, 1487], [464, 1449, 492, 1459], [473, 1431, 492, 1447], [473, 1416, 492, 1428], [473, 1400, 492, 1412], [464, 1387, 492, 1397], [464, 1365, 492, 1386], [473, 1346, 492, 1362], [473, 1327, 492, 1343], [468, 1315, 492, 1326], [464, 1304, 492, 1314], [473, 1284, 492, 1303], [473, 1263, 492, 1282], [464, 1223, 492, 1251], [473, 1205, 492, 1221], [473, 1186, 492, 1202], [473, 1165, 492, 1185], [473, 1150, 492, 1164], [473, 1132, 492, 1148], [473, 1115, 492, 1131], [473, 1094, 501, 1113], [464, 1070, 499, 1081], [464, 1037, 493, 1066], [464, 1022, 499, 1033], [1357, 1515, 1413, 1544], [1477, 1515, 1535, 1544], [1599, 1515, 1657, 1544], [1713, 1515, 1790, 1544], [1833, 1515, 1912, 1544], [1946, 1515, 2044, 1544], [1330, 1404, 1367, 1433], [1330, 1274, 1367, 1303], [1330, 1143, 1367, 1172], [1330, 1013, 1367, 1042], [1481, 1579, 1621, 1616], [1633, 1580, 1819, 1607], [1833, 1579, 1896, 1614], [643, 1673, 777, 1702], [873, 1673, 1032, 1702], [1127, 1673, 1266, 1701], [1359, 1673, 1420, 1700], [1513, 1673, 1645, 1702], [1738, 1673, 1882, 1710], [1894, 1673, 1981, 1702], [451, 1790, 557, 1827], [570, 1790, 597, 1818], [616, 1790, 840, 1819], [853, 1799, 998, 1827], [1010, 1790, 1058, 1818], [1070, 1799, 1086, 1818], [1098, 1790, 1224, 1818], [1236, 1790, 1272, 1818], [1281, 1790, 1398, 1818], [1413, 1790, 1478, 1825], [1490, 1790, 1580, 1818], [1596, 1790, 1607, 1818], [1623, 1790, 1671, 1818], [1683, 1790, 1785, 1818], [1797, 1790, 2018, 1827], [2036, 1790, 2099, 1818], [451, 1836, 505, 1864], [520, 1836, 602, 1864], [618, 1836, 717, 1865], [733, 1836, 839, 1864], [856, 1836, 904, 1864], [919, 1836, 1003, 1864], [1018, 1836, 1135, 1864], [1153, 1836, 1241, 1865], [1257, 1836, 1370, 1864], [1386, 1845, 1426, 1864], [1442, 1836, 1567, 1873], [1583, 1836, 1650, 1864], [1667, 1836, 1724, 1864], [1740, 1836, 1895, 1865], [1911, 1845, 1951, 1864], [1967, 1836, 2099, 1865], [451, 1882, 527, 1916], [540, 1882, 590, 1910], [601, 1882, 679, 1919], [690, 1882, 773, 1910], [784, 1882, 851, 1911], [863, 1891, 957, 1911], [451, 2037, 486, 2065], [496, 2037, 545, 2065], [558, 2036, 794, 2065], [805, 2037, 1054, 2074], [1068, 2037, 1104, 2065], [1114, 2037, 1153, 2065], [1166, 2037, 1202, 2065], [1217, 2041, 1382, 2065], [1398, 2038, 1452, 2065], [1464, 2037, 1538, 2065], [1550, 2037, 1600, 2065], [1612, 2037, 1777, 2065], [1791, 2037, 1938, 2065], [1948, 2037, 2037, 2074], [2050, 2037, 2099, 2065], [452, 2091, 534, 2110], [547, 2082, 670, 2119], [684, 2082, 742, 2110], [754, 2082, 1013, 2119], [1025, 2082, 1060, 2110], [1070, 2082, 1119, 2110], [1132, 2082, 1277, 2119], [1289, 2086, 1465, 2119], [1477, 2082, 1624, 2110], [1638, 2082, 1679, 2116], [1695, 2091, 1726, 2110], [1738, 2082, 1813, 2110], [1826, 2082, 1856, 2110], [1871, 2082, 1944, 2116], [450, 2154, 503, 2181], [516, 2162, 568, 2181], [582, 2153, 631, 2181], [645, 2153, 753, 2182], [767, 2153, 966, 2190], [981, 2153, 1054, 2181], [1067, 2153, 1107, 2190], [1121, 2153, 1248, 2190], [1262, 2162, 1302, 2181], [1316, 2153, 1441, 2190], [1456, 2153, 1513, 2181], [1527, 2153, 1636, 2190], [1649, 2162, 1689, 2181], [1703, 2153, 1835, 2182], [1849, 2153, 2025, 2181], [2042, 2153, 2099, 2181], [451, 2199, 518, 2228], [531, 2208, 625, 2228], [646, 2199, 743, 2236], [756, 2199, 806, 2227], [819, 2199, 887, 2227], [901, 2199, 984, 2236], [998, 2199, 1144, 2236], [1157, 2199, 1197, 2236], [1214, 2199, 1287, 2233], [1302, 2208, 1349, 2228], [1362, 2199, 1437, 2227], [1450, 2199, 1574, 2236], [1588, 2199, 1715, 2236], [1729, 2199, 1796, 2227], [1810, 2199, 1887, 2227], [1902, 2199, 1981, 2227], [1998, 2199, 2055, 2228], [2068, 2203, 2099, 2227], [455, 2244, 563, 2278], [576, 2244, 752, 2272], [766, 2244, 814, 2272], [826, 2244, 953, 2281], [966, 2244, 1015, 2272], [1027, 2244, 1192, 2272], [1206, 2244, 1359, 2272], [1376, 2244, 1440, 2272], [1451, 2244, 1557, 2272], [1571, 2244, 1607, 2272], [1617, 2244, 1673, 2272], [1687, 2244, 1754, 2272], [1766, 2253, 1866, 2272], [1880, 2244, 2007, 2281], [2021, 2244, 2097, 2272], [452, 2299, 500, 2318], [513, 2290, 617, 2319], [629, 2290, 660, 2318], [672, 2290, 779, 2327], [791, 2290, 818, 2318], [835, 2290, 924, 2318], [940, 2290, 951, 2318], [968, 2290, 1067, 2319], [1081, 2290, 1130, 2318], [1141, 2290, 1247, 2318], [1260, 2290, 1308, 2318], [1319, 2290, 1447, 2327], [1459, 2299, 1498, 2318], [1515, 2290, 1602, 2324], [1614, 2290, 1801, 2318], [451, 2361, 529, 2389], [542, 2361, 669, 2395], [685, 2361, 819, 2390], [834, 2361, 891, 2389], [905, 2361, 1064, 2390], [1079, 2361, 1264, 2398], [1278, 2361, 1317, 2389], [1328, 2361, 1409, 2398], [1421, 2361, 1505, 2390], [1517, 2370, 1557, 2389], [1570, 2361, 1626, 2389], [1641, 2361, 1715, 2389], [1733, 2361, 1860, 2395], [1875, 2361, 1924, 2389], [1938, 2361, 2097, 2390], [451, 2406, 553, 2434], [566, 2406, 765, 2443], [780, 2406, 829, 2434], [843, 2406, 977, 2435], [991, 2406, 1102, 2440], [1117, 2406, 1281, 2443], [1294, 2406, 1344, 2434], [1355, 2406, 1526, 2434], [1541, 2406, 1576, 2434], [1588, 2406, 1698, 2443], [1711, 2406, 1838, 2443], [1851, 2406, 1919, 2434], [1932, 2415, 2007, 2435], [2020, 2406, 2099, 2434], [452, 2461, 468, 2480], [480, 2456, 614, 2489], [626, 2452, 774, 2489], [785, 2452, 855, 2489], [451, 2574, 500, 2604], [544, 2574, 773, 2604], [450, 2668, 551, 2696], [568, 2668, 617, 2696], [634, 2668, 742, 2697], [761, 2668, 946, 2705], [962, 2668, 1090, 2696], [1107, 2677, 1147, 2696], [1164, 2668, 1361, 2705], [1378, 2668, 1428, 2696], [1446, 2668, 1590, 2696], [1608, 2672, 1730, 2696], [1746, 2668, 1782, 2696], [1796, 2668, 1846, 2696], [1864, 2672, 2004, 2696], [2021, 2668, 2099, 2697], [450, 2714, 709, 2751], [724, 2723, 771, 2743], [785, 2714, 849, 2742], [862, 2718, 941, 2743], [953, 2718, 984, 2742], [996, 2714, 1104, 2751], [1117, 2714, 1293, 2751], [1305, 2714, 1355, 2742], [1368, 2714, 1497, 2742], [1510, 2714, 1594, 2743], [1607, 2714, 1814, 2751], [1833, 2715, 1866, 2742], [1878, 2714, 2038, 2751], [2050, 2714, 2099, 2742], [452, 2759, 611, 2788], [628, 2759, 730, 2787], [746, 2759, 770, 2787], [788, 2759, 961, 2796], [977, 2759, 1024, 2787], [1039, 2759, 1101, 2787], [1114, 2768, 1254, 2796], [1273, 2768, 1304, 2787], [1321, 2759, 1343, 2787], [1359, 2759, 1462, 2788], [1478, 2768, 1513, 2787], [1530, 2763, 1561, 2787], [1576, 2759, 1711, 2788], [1726, 2768, 1781, 2787], [1797, 2759, 1946, 2796], [1962, 2759, 1998, 2787], [2010, 2759, 2099, 2796], [451, 2805, 576, 2842], [589, 2814, 619, 2833], [634, 2814, 650, 2833], [660, 2805, 744, 2842], [755, 2805, 904, 2842], [916, 2805, 946, 2833], [959, 2814, 975, 2833], [987, 2805, 1189, 2842], [1201, 2809, 1295, 2842], [451, 2877, 483, 2904], [496, 2876, 603, 2913], [616, 2876, 632, 2905], [646, 2885, 693, 2905], [706, 2876, 790, 2905], [802, 2876, 851, 2904], [863, 2876, 966, 2905], [977, 2876, 1159, 2913], [1173, 2876, 1220, 2904], [1233, 2885, 1249, 2904], [1261, 2876, 1387, 2904], [1398, 2876, 1434, 2904], [1443, 2876, 1577, 2913], [1591, 2876, 1705, 2904], [1718, 2876, 1775, 2904], [1788, 2876, 1920, 2905], [1932, 2876, 2040, 2905], [2057, 2876, 2102, 2905], [450, 2921, 609, 2958], [620, 2921, 742, 2949], [754, 2921, 862, 2949], [873, 2921, 912, 2949], [924, 2921, 973, 2949], [984, 2921, 1063, 2958], [1074, 2921, 1164, 2955], [1178, 2921, 1278, 2950], [1289, 2921, 1453, 2958], [1466, 2921, 1613, 2958], [1625, 2921, 1823, 2958], [1835, 2921, 1973, 2950], [1985, 2921, 2099, 2949], [452, 2967, 509, 2995], [524, 2967, 656, 2996], [672, 2967, 780, 2996], [807, 2968, 890, 2996], [906, 2967, 1019, 3004], [1035, 2967, 1084, 2995], [1100, 2967, 1202, 2995], [1217, 2967, 1269, 2995], [1284, 2971, 1337, 2995], [1350, 2976, 1405, 2995], [1422, 2976, 1478, 3004], [1493, 2967, 1617, 3004], [1632, 2967, 1893, 2996], [1909, 2967, 1977, 2995], [1992, 2967, 2099, 3004], [451, 3013, 587, 3050], [600, 3013, 623, 3041], [635, 3013, 695, 3041], [707, 3013, 855, 3050], [867, 3017, 897, 3041], [909, 3013, 991, 3041], [1004, 3013, 1148, 3041], [1161, 3013, 1343, 3042], [1356, 3013, 1512, 3050], [1525, 3022, 1625, 3041], [1638, 3013, 1722, 3041], [1734, 3017, 1794, 3042], [1806, 3013, 1979, 3050], [1265, 3137, 1283, 3166], [451, 986, 557, 1023], [571, 986, 598, 1015], [617, 986, 680, 1014], [693, 986, 747, 1014], [760, 990, 867, 1014], [878, 986, 943, 1023], [955, 986, 1054, 1015], [1068, 986, 1171, 1015], [1182, 986, 1365, 1023], [1379, 986, 1427, 1014], [1440, 995, 1456, 1014], [1468, 986, 1629, 1023], [1643, 986, 1674, 1014], [1687, 986, 1726, 1014], [1739, 986, 1821, 1014], [1833, 986, 1996, 1023], [2010, 986, 2099, 1023], [451, 1031, 500, 1059], [511, 1031, 760, 1068], [774, 1031, 895, 1059], [907, 1031, 938, 1059], [950, 1031, 999, 1059], [1013, 1031, 1172, 1060], [1186, 1031, 1297, 1059], [1314, 1032, 1397, 1060], [1410, 1031, 1523, 1068], [1536, 1031, 1585, 1059], [1598, 1031, 1700, 1059], [1712, 1031, 1763, 1059], [1776, 1035, 1828, 1059], [1839, 1040, 1894, 1059], [1907, 1040, 1963, 1068], [1975, 1031, 2099, 1068], [451, 1077, 712, 1106], [724, 1077, 792, 1105], [804, 1077, 910, 1114], [923, 1077, 1059, 1114], [1073, 1077, 1095, 1105], [1108, 1077, 1167, 1105], [1180, 1077, 1275, 1105], [1290, 1077, 1434, 1105], [1448, 1077, 1605, 1114], [1616, 1077, 1754, 1106], [1766, 1077, 1850, 1105], [1862, 1081, 1922, 1106], [1935, 1077, 2097, 1114], [450, 1123, 539, 1160], [551, 1123, 676, 1160], [690, 1132, 720, 1151], [735, 1132, 751, 1151], [763, 1123, 854, 1160], [872, 1124, 913, 1151], [925, 1123, 1075, 1160], [1086, 1123, 1153, 1157], [1168, 1123, 1217, 1151], [1228, 1123, 1307, 1160], [1318, 1123, 1383, 1160], [1395, 1123, 1494, 1152], [1509, 1123, 1631, 1151], [1644, 1127, 1689, 1151], [1700, 1123, 1736, 1151], [1745, 1123, 1843, 1152], [1858, 1123, 1990, 1158], [2004, 1123, 2040, 1151], [2050, 1123, 2099, 1151], [451, 1168, 533, 1205], [545, 1168, 634, 1205], [646, 1168, 719, 1205], [731, 1168, 780, 1196], [792, 1168, 924, 1197], [937, 1168, 994, 1196], [1006, 1168, 1120, 1196], [1132, 1168, 1240, 1197], [451, 1363, 473, 1397], [526, 1363, 780, 1398], [450, 1510, 530, 1538], [545, 1510, 601, 1538], [616, 1519, 709, 1547], [722, 1519, 769, 1539], [782, 1510, 859, 1539], [872, 1510, 1024, 1547], [1039, 1519, 1055, 1538], [1069, 1510, 1159, 1539], [1173, 1510, 1296, 1538], [1310, 1510, 1358, 1538], [1371, 1510, 1515, 1547], [1529, 1510, 1742, 1547], [1757, 1510, 1932, 1538], [1945, 1519, 2098, 1547], [451, 1556, 558, 1584], [576, 1556, 624, 1584], [640, 1556, 874, 1593], [891, 1556, 1061, 1584], [1092, 1556, 1189, 1593], [1207, 1565, 1223, 1584], [1240, 1565, 1311, 1593], [1329, 1556, 1437, 1593], [1454, 1556, 1577, 1584], [1594, 1556, 1641, 1584], [1658, 1556, 1802, 1584], [1820, 1556, 2032, 1593], [2052, 1565, 2099, 1585], [451, 1601, 651, 1630], [667, 1601, 815, 1638], [830, 1605, 861, 1629], [876, 1601, 978, 1629], [994, 1605, 1067, 1629], [1082, 1601, 1118, 1629], [1129, 1601, 1179, 1629], [1194, 1605, 1237, 1629], [1249, 1601, 1356, 1629], [1372, 1610, 1412, 1629], [1426, 1601, 1476, 1629], [1490, 1601, 1598, 1630], [1614, 1601, 1688, 1635], [1706, 1601, 1893, 1638], [1907, 1601, 2053, 1638], [2068, 1605, 2099, 1629], [451, 1647, 585, 1676], [600, 1647, 744, 1675], [759, 1647, 885, 1675], [899, 1656, 999, 1675], [1015, 1647, 1188, 1684], [1210, 1647, 1297, 1675], [1310, 1647, 1471, 1684], [1486, 1656, 1540, 1675], [1555, 1647, 1704, 1684], [1718, 1651, 1749, 1675], [1763, 1647, 1884, 1675], [1898, 1647, 2099, 1684], [451, 1693, 578, 1730], [590, 1693, 658, 1721], [670, 1693, 701, 1721], [713, 1693, 763, 1721], [776, 1693, 935, 1722], [949, 1693, 1060, 1727], [1074, 1702, 1121, 1722], [1133, 1702, 1212, 1722], [1225, 1693, 1292, 1721], [1304, 1697, 1335, 1721], [1347, 1693, 1549, 1721], [1561, 1693, 1623, 1721], [1635, 1693, 1745, 1730], [1759, 1693, 1922, 1721], [1934, 1693, 2097, 1730], [451, 1738, 563, 1766], [572, 1738, 722, 1775], [734, 1738, 784, 1766], [794, 1738, 904, 1766], [920, 1738, 1135, 1772], [1146, 1738, 1235, 1775], [1247, 1747, 1332, 1766], [1342, 1738, 1514, 1775], [1525, 1738, 1724, 1775], [1737, 1738, 1794, 1766], [1804, 1738, 2040, 1772], [2052, 1747, 2099, 1767], [452, 1784, 575, 1813], [587, 1784, 648, 1812], [659, 1793, 714, 1812], [726, 1784, 875, 1821], [889, 1784, 953, 1812], [966, 1784, 1069, 1813], [1082, 1793, 1116, 1812], [1130, 1788, 1160, 1812], [1172, 1784, 1254, 1812], [1267, 1784, 1474, 1821], [1485, 1784, 1597, 1812], [1609, 1784, 1807, 1821], [1821, 1793, 1921, 1812], [1935, 1784, 2097, 1821], [451, 1830, 577, 1859], [589, 1839, 645, 1867], [657, 1830, 751, 1858], [762, 1830, 890, 1867], [902, 1830, 978, 1858], [451, 1900, 514, 1929], [530, 1900, 679, 1937], [694, 1900, 834, 1937], [851, 1904, 934, 1937], [948, 1900, 1107, 1937], [1123, 1900, 1154, 1928], [1169, 1900, 1297, 1937], [1313, 1900, 1380, 1928], [1397, 1900, 1454, 1928], [1469, 1900, 1600, 1937], [1617, 1900, 1692, 1928], [1707, 1904, 1738, 1928], [1754, 1909, 1793, 1928], [1810, 1900, 1991, 1928], [2018, 1901, 2098, 1929], [451, 1946, 502, 1983], [515, 1946, 737, 1974], [750, 1946, 799, 1974], [813, 1946, 981, 1974], [994, 1946, 1121, 1983], [1134, 1946, 1170, 1974], [1181, 1946, 1325, 1974], [1338, 1946, 1587, 1983], [1601, 1946, 1690, 1983], [1704, 1950, 1845, 1974], [1858, 1946, 1978, 1983], [1991, 1946, 2067, 1980], [2083, 1955, 2099, 1974], [450, 1992, 599, 2029], [609, 1996, 680, 2020], [690, 1996, 754, 2029], [765, 1992, 789, 2020], [801, 1996, 832, 2020], [843, 1996, 966, 2029], [976, 1992, 1103, 2029], [1113, 1992, 1202, 2029], [1212, 1992, 1510, 2029], [1521, 1992, 1589, 2020], [1599, 2001, 1633, 2020], [1642, 2001, 1717, 2021], [1728, 2001, 1853, 2029], [1863, 1992, 1899, 2020], [1907, 1992, 2099, 2029], [451, 2037, 637, 2065], [654, 2037, 724, 2065], [738, 2046, 808, 2074], [819, 2037, 944, 2074], [956, 2046, 1031, 2066], [1043, 2041, 1158, 2074], [1168, 2037, 1364, 2074], [1378, 2037, 1425, 2065], [1436, 2037, 1573, 2074], [1585, 2037, 1657, 2066], [1669, 2037, 1883, 2066], [1895, 2037, 2068, 2074], [451, 2109, 483, 2136], [497, 2108, 546, 2136], [560, 2117, 643, 2136], [656, 2108, 734, 2142], [749, 2108, 799, 2136], [813, 2117, 933, 2136], [948, 2108, 984, 2136], [994, 2117, 1049, 2136], [1060, 2108, 1196, 2145], [1209, 2108, 1408, 2145], [1424, 2112, 1547, 2145], [1559, 2108, 1671, 2136], [1684, 2108, 1776, 2137], [1796, 2108, 1907, 2137], [1920, 2108, 2005, 2136], [2016, 2108, 2100, 2145], [452, 2154, 644, 2191], [657, 2154, 680, 2182], [690, 2154, 715, 2182], [727, 2163, 799, 2191], [811, 2158, 841, 2182], [853, 2154, 961, 2182], [972, 2163, 1027, 2182], [1037, 2154, 1139, 2182], [1151, 2158, 1181, 2182], [1192, 2154, 1268, 2183], [1279, 2154, 1416, 2191], [1426, 2154, 1510, 2191], [1520, 2154, 1693, 2191], [1709, 2154, 1789, 2182], [1803, 2163, 1888, 2182], [1898, 2154, 1995, 2191], [2008, 2154, 2099, 2182], [450, 2208, 589, 2236], [603, 2199, 744, 2227], [759, 2203, 874, 2236], [891, 2199, 965, 2227], [980, 2208, 1010, 2227], [1026, 2208, 1105, 2233], [1121, 2199, 1233, 2236], [1247, 2203, 1313, 2233], [1330, 2199, 1387, 2227], [1402, 2208, 1563, 2228], [1577, 2199, 1661, 2227], [1675, 2199, 1771, 2227], [1786, 2199, 1898, 2227], [1912, 2203, 1943, 2227], [1956, 2199, 2068, 2236], [2083, 2208, 2099, 2227], [452, 2245, 548, 2282], [559, 2245, 643, 2282], [654, 2245, 811, 2282], [451, 2315, 493, 2343], [508, 2324, 555, 2344], [566, 2315, 643, 2344], [656, 2315, 799, 2344], [812, 2315, 861, 2343], [873, 2315, 979, 2343], [993, 2315, 1024, 2343], [1036, 2315, 1093, 2343], [1106, 2324, 1199, 2352], [1211, 2315, 1283, 2344], [1296, 2324, 1312, 2343], [1324, 2315, 1478, 2352], [1492, 2315, 1600, 2352], [1614, 2315, 1671, 2344], [1676, 2316, 1720, 2349], [1735, 2315, 1757, 2343], [1769, 2315, 1871, 2344], [1884, 2315, 1948, 2343], [1960, 2315, 1999, 2343], [2011, 2315, 2098, 2343], [451, 2361, 548, 2398], [563, 2365, 593, 2389], [608, 2361, 751, 2389], [766, 2361, 899, 2390], [913, 2370, 967, 2389], [981, 2361, 1130, 2398], [1144, 2361, 1281, 2389], [1296, 2370, 1352, 2389], [1365, 2361, 1404, 2389], [1417, 2361, 1493, 2389], [1507, 2361, 1538, 2389], [1553, 2361, 1758, 2389], [1773, 2361, 1845, 2390], [1860, 2370, 1944, 2389], [1958, 2361, 2099, 2398], [451, 2407, 684, 2444], [701, 2411, 804, 2436], [820, 2407, 937, 2435], [956, 2407, 1030, 2435], [1048, 2416, 1079, 2435], [1097, 2408, 1259, 2435], [1280, 2406, 1341, 2441], [1362, 2416, 1396, 2435], [1412, 2407, 1619, 2435], [1637, 2407, 1830, 2444], [1850, 2411, 1881, 2435], [1899, 2416, 1950, 2435], [1967, 2407, 2100, 2436], [451, 2452, 534, 2480], [549, 2461, 605, 2480], [620, 2452, 732, 2480], [746, 2452, 882, 2489], [895, 2452, 1001, 2480], [1018, 2461, 1058, 2480], [1072, 2452, 1145, 2480], [1160, 2461, 1265, 2480], [1282, 2452, 1339, 2480], [1354, 2452, 1556, 2489], [1570, 2452, 1650, 2480], [1667, 2452, 1755, 2481], [1769, 2452, 1844, 2480], [1859, 2452, 1890, 2480], [1904, 2452, 2099, 2489], [451, 2498, 523, 2527], [536, 2507, 591, 2526], [604, 2498, 817, 2535], [831, 2498, 980, 2535], [993, 2498, 1139, 2526], [1160, 2498, 1285, 2526], [1299, 2502, 1330, 2526], [1344, 2498, 1411, 2532], [1427, 2507, 1474, 2527], [1487, 2498, 1550, 2527], [1565, 2498, 1629, 2526], [1644, 2498, 1734, 2535], [1747, 2507, 1802, 2526], [1815, 2498, 1917, 2526], [1931, 2502, 1961, 2526], [1976, 2507, 1992, 2526], [2006, 2498, 2100, 2527], [451, 2544, 563, 2581], [575, 2544, 611, 2572], [620, 2544, 700, 2572], [713, 2544, 869, 2581], [881, 2544, 1020, 2572], [1032, 2544, 1205, 2572], [1218, 2544, 1276, 2572], [1288, 2544, 1489, 2581], [1501, 2544, 1695, 2572], [1707, 2544, 1880, 2572], [450, 2729, 860, 2773], [451, 2876, 514, 2904], [526, 2876, 644, 2904], [658, 2876, 759, 2905], [772, 2876, 832, 2904], [844, 2880, 874, 2904], [886, 2876, 978, 2904], [989, 2876, 1160, 2904], [1172, 2876, 1362, 2905], [1376, 2876, 1433, 2904], [1444, 2876, 1490, 2904], [1504, 2876, 1676, 2904], [1689, 2876, 1737, 2904], [1748, 2876, 1871, 2913], [1883, 2876, 1958, 2904], [1969, 2876, 2097, 2904], [452, 2921, 509, 2949], [528, 2921, 673, 2958], [690, 2925, 867, 2958], [885, 2921, 1144, 2958], [1163, 2921, 1317, 2955], [1339, 2930, 1370, 2949], [1389, 2921, 1459, 2950], [1478, 2930, 1508, 2949], [1529, 2921, 1697, 2958], [1716, 2930, 1732, 2949], [1750, 2921, 1876, 2949], [1893, 2921, 1929, 2949], [1944, 2921, 2097, 2958], [450, 2967, 562, 2995], [576, 2971, 606, 2995], [620, 2967, 695, 2995], [708, 2967, 792, 2996], [805, 2976, 845, 2995], [859, 2967, 916, 2995], [931, 2967, 1005, 2995], [1026, 2967, 1097, 2995], [1112, 2967, 1196, 2996], [1209, 2976, 1270, 2996], [1286, 2967, 1447, 3004], [1460, 2967, 1501, 3004], [1515, 2967, 1639, 2996], [1654, 2971, 1738, 3004], [1751, 2966, 1992, 2996], [2011, 2967, 2068, 2995], [2083, 2976, 2099, 2995], [450, 3014, 552, 3041], [565, 3013, 751, 3041], [763, 3013, 879, 3042], [1265, 3138, 1283, 3165], [451, 348, 680, 383], [474, 426, 515, 460], [540, 427, 647, 454], [659, 426, 770, 454], [783, 426, 840, 454], [852, 426, 984, 454], [994, 426, 1185, 463], [1202, 427, 1307, 454], [1321, 435, 1370, 454], [1381, 430, 1507, 460], [1522, 426, 1682, 463], [1696, 435, 1744, 454], [1756, 426, 1903, 454], [1921, 427, 2098, 463], [540, 472, 592, 509], [605, 472, 847, 509], [859, 472, 1077, 500], [1091, 472, 1122, 500], [1135, 472, 1279, 500], [1293, 481, 1391, 509], [1409, 473, 1442, 500], [1453, 472, 1658, 509], [1670, 472, 1708, 509], [1712, 473, 1856, 506], [1870, 472, 1960, 501], [474, 532, 515, 566], [540, 532, 612, 560], [630, 532, 750, 560], [786, 532, 884, 560], [903, 532, 939, 560], [953, 532, 1023, 561], [1041, 532, 1175, 560], [1193, 532, 1274, 560], [1292, 532, 1341, 560], [1358, 532, 1514, 569], [1533, 532, 1569, 560], [1584, 532, 1692, 561], [1727, 532, 1912, 561], [1928, 532, 1991, 561], [2006, 533, 2099, 560], [540, 577, 690, 611], [704, 576, 951, 611], [965, 577, 1055, 606], [474, 637, 515, 671], [541, 637, 672, 674], [685, 637, 777, 666], [789, 637, 846, 665], [860, 637, 991, 674], [1004, 637, 1137, 665], [1157, 637, 1342, 674], [1356, 637, 1505, 674], [1519, 637, 1576, 665], [1589, 637, 1808, 665], [1820, 637, 1937, 665], [1951, 637, 1987, 665], [1997, 646, 2098, 665], [540, 683, 600, 720], [619, 684, 652, 711], [663, 683, 867, 720], [880, 683, 918, 720], [919, 683, 1014, 711], [1023, 683, 1132, 720], [1144, 683, 1331, 720], [1343, 693, 1383, 711], [1396, 683, 1548, 719], [1559, 684, 1751, 711], [1765, 683, 1867, 711], [1879, 684, 1973, 717], [1987, 683, 2077, 712], [474, 743, 515, 777], [540, 743, 607, 771], [619, 743, 750, 777], [764, 743, 951, 771], [964, 743, 1142, 777], [1157, 743, 1214, 771], [1226, 743, 1357, 780], [1369, 743, 1468, 772], [1485, 743, 1712, 771], [1723, 743, 1916, 771], [1929, 743, 1976, 771], [1988, 752, 2004, 771], [2015, 752, 2098, 771], [539, 789, 703, 826], [716, 789, 935, 817], [949, 789, 1051, 817], [1064, 789, 1100, 817], [1111, 789, 1261, 826], [1283, 789, 1415, 817], [1426, 789, 1606, 826], [1622, 790, 1788, 826], [1798, 789, 1949, 826], [1965, 788, 2100, 818], [541, 835, 610, 869], [623, 835, 713, 864], [474, 894, 515, 929], [540, 896, 649, 924], [662, 895, 750, 924], [765, 895, 822, 923], [836, 895, 956, 923], [970, 896, 1090, 932], [1113, 895, 1256, 923], [1270, 895, 1443, 923], [1456, 895, 1497, 932], [1510, 895, 1729, 932], [1750, 895, 1877, 932], [1891, 895, 2032, 924], [2044, 904, 2099, 923], [540, 940, 576, 968], [589, 940, 813, 977], [828, 949, 962, 977], [991, 941, 1024, 968], [1039, 940, 1243, 977], [1259, 940, 1297, 977], [1302, 940, 1387, 974], [1403, 949, 1495, 977], [1512, 939, 1665, 974], [1683, 941, 1805, 977], [1823, 940, 1925, 969], [1940, 940, 2097, 977], [539, 987, 615, 1015], [627, 986, 717, 1015], [731, 986, 925, 1014], [937, 986, 985, 1014], [996, 986, 1241, 1023], [1253, 986, 1445, 1023], [474, 1046, 515, 1080], [540, 1046, 675, 1074], [692, 1046, 819, 1075], [854, 1046, 1098, 1075], [1115, 1046, 1242, 1083], [1260, 1046, 1397, 1074], [1416, 1046, 1464, 1074], [1479, 1046, 1591, 1074], [1609, 1046, 1733, 1075], [1750, 1046, 1877, 1074], [1905, 1046, 2023, 1083], [2042, 1046, 2099, 1074], [540, 1092, 740, 1129], [759, 1092, 831, 1121], [849, 1096, 1025, 1129], [1044, 1092, 1228, 1129], [1266, 1093, 1299, 1120], [1316, 1092, 1521, 1129], [1539, 1092, 1577, 1129], [1585, 1092, 1820, 1121], [1840, 1092, 2034, 1120], [2052, 1092, 2100, 1120], [540, 1137, 786, 1174], [798, 1137, 989, 1174], [1003, 1137, 1093, 1166], [1111, 1137, 1171, 1165], [1193, 1136, 1643, 1166], [474, 1199, 515, 1232], [540, 1199, 647, 1226], [663, 1198, 819, 1227], [834, 1198, 892, 1226], [906, 1199, 998, 1227], [1012, 1199, 1144, 1226], [1173, 1198, 1201, 1226], [1216, 1198, 1331, 1226], [1347, 1198, 1541, 1226], [1556, 1198, 1604, 1226], [1619, 1198, 1732, 1226], [1748, 1198, 1896, 1235], [1910, 1198, 2096, 1235], [540, 1244, 626, 1280], [638, 1243, 741, 1271], [752, 1243, 901, 1272], [915, 1243, 987, 1272], [999, 1243, 1153, 1271], [1164, 1243, 1307, 1280], [1325, 1244, 1358, 1271], [1369, 1243, 1574, 1280], [1586, 1243, 1624, 1280], [1628, 1243, 1735, 1277], [1749, 1243, 1839, 1272], [474, 1303, 515, 1337], [539, 1303, 617, 1332], [628, 1303, 737, 1337], [750, 1303, 824, 1331], [835, 1304, 948, 1337], [962, 1303, 1019, 1331], [1031, 1304, 1140, 1331], [1152, 1303, 1264, 1340], [1280, 1303, 1429, 1340], [1441, 1303, 1633, 1340], [1643, 1303, 1781, 1331], [1793, 1303, 1841, 1331], [1851, 1303, 1954, 1331], [1964, 1303, 2099, 1340], [541, 1349, 599, 1377], [609, 1349, 770, 1377], [780, 1349, 997, 1386], [1009, 1349, 1138, 1378], [1147, 1349, 1184, 1386], [1185, 1349, 1329, 1377], [1339, 1350, 1490, 1386], [1498, 1349, 1659, 1383], [1675, 1348, 1918, 1383], [1929, 1349, 1997, 1386], [2007, 1349, 2097, 1378], [540, 1395, 628, 1424], [645, 1394, 828, 1424], [474, 1455, 515, 1489], [540, 1455, 627, 1484], [645, 1456, 733, 1492], [752, 1455, 852, 1483], [867, 1456, 978, 1492], [996, 1455, 1057, 1484], [1073, 1455, 1293, 1489], [1311, 1455, 1478, 1484], [1493, 1456, 1609, 1489], [1627, 1455, 1741, 1483], [1757, 1456, 1840, 1489], [1859, 1455, 1924, 1483], [1940, 1455, 2097, 1489], [540, 1500, 661, 1528], [678, 1500, 835, 1534], [853, 1500, 1002, 1528], [1017, 1500, 1183, 1534], [1203, 1500, 1260, 1528], [1276, 1500, 1373, 1537], [1389, 1500, 1512, 1528], [1542, 1500, 1625, 1528], [1650, 1500, 1678, 1528], [1694, 1500, 1831, 1534], [1850, 1500, 2022, 1537], [2042, 1500, 2099, 1528], [540, 1546, 675, 1583], [693, 1546, 873, 1575], [890, 1546, 937, 1574], [955, 1546, 1129, 1574], [1147, 1546, 1205, 1574], [1223, 1546, 1421, 1574], [1439, 1546, 1613, 1574], [1631, 1546, 1758, 1574], [1795, 1547, 1828, 1574], [1845, 1546, 2050, 1583], [2068, 1546, 2106, 1583], [537, 1592, 622, 1626], [636, 1592, 726, 1621], [454, 1652, 515, 1686], [540, 1653, 577, 1680], [589, 1652, 648, 1680], [659, 1652, 716, 1680], [727, 1652, 756, 1681], [768, 1652, 828, 1680], [830, 1652, 849, 1680], [853, 1676, 858, 1680], [872, 1652, 900, 1680], [911, 1652, 1075, 1680], [1085, 1656, 1187, 1681], [1197, 1661, 1287, 1689], [1297, 1652, 1399, 1680], [1409, 1652, 1457, 1680], [1466, 1652, 1549, 1681], [1560, 1652, 1701, 1689], [1711, 1652, 1742, 1680], [1752, 1656, 1881, 1680], [1894, 1652, 2098, 1689], [540, 1698, 578, 1735], [582, 1699, 726, 1732], [740, 1698, 830, 1727], [454, 1758, 515, 1792], [539, 1759, 564, 1787], [577, 1759, 603, 1786], [607, 1782, 612, 1786], [626, 1758, 713, 1786], [732, 1758, 760, 1786], [773, 1758, 912, 1795], [926, 1758, 961, 1786], [971, 1758, 1123, 1795], [1135, 1758, 1240, 1795], [1256, 1757, 1386, 1787], [1392, 1782, 1397, 1786], [1420, 1757, 1655, 1792], [1673, 1757, 1759, 1787], [454, 1818, 515, 1852], [540, 1818, 667, 1847], [680, 1818, 881, 1847], [895, 1818, 952, 1846], [965, 1818, 1152, 1846], [1165, 1818, 1344, 1847], [1364, 1818, 1586, 1855], [1600, 1822, 1723, 1855], [1734, 1818, 1782, 1846], [1795, 1827, 1811, 1846], [1823, 1818, 2003, 1855], [2015, 1827, 2098, 1846], [539, 1863, 703, 1900], [715, 1863, 934, 1891], [946, 1863, 1048, 1891], [1060, 1863, 1095, 1891], [1105, 1863, 1255, 1900], [1273, 1864, 1306, 1891], [1317, 1863, 1521, 1900], [1534, 1863, 1572, 1900], [1576, 1864, 1720, 1897], [1733, 1863, 1823, 1892], [454, 1924, 515, 1958], [540, 1924, 613, 1952], [631, 1924, 792, 1961], [814, 1925, 906, 1961], [924, 1924, 1028, 1961], [1049, 1924, 1156, 1961], [1173, 1924, 1466, 1961], [1488, 1924, 1545, 1952], [1563, 1925, 1631, 1952], [1649, 1924, 1748, 1952], [1786, 1924, 1935, 1961], [1952, 1924, 2099, 1961], [540, 1969, 675, 1997], [689, 1969, 768, 1997], [780, 1969, 988, 2006], [1000, 1978, 1134, 2006], [1152, 1970, 1185, 1997], [1196, 1969, 1400, 2006], [1413, 1969, 1451, 2006], [1453, 1969, 1627, 2003], [1640, 1969, 1730, 1998], [454, 2029, 515, 2063], [540, 2029, 613, 2057], [630, 2029, 741, 2057], [759, 2030, 912, 2057], [930, 2029, 988, 2057], [1005, 2029, 1071, 2057], [1088, 2029, 1245, 2057], [1281, 2029, 1344, 2057], [1362, 2029, 1439, 2057], [1456, 2029, 1492, 2057], [1508, 2029, 1620, 2066], [1638, 2029, 1668, 2057], [1686, 2030, 1794, 2057], [1811, 2029, 1908, 2066], [1925, 2029, 2047, 2057], [2066, 2029, 2102, 2057], [540, 2075, 783, 2112], [796, 2075, 973, 2104], [991, 2076, 1024, 2103], [1035, 2075, 1240, 2112], [1252, 2075, 1290, 2112], [1292, 2075, 1377, 2109], [1391, 2075, 1481, 2104], [454, 2134, 515, 2169], [540, 2135, 599, 2163], [613, 2135, 838, 2163], [853, 2135, 910, 2163], [924, 2135, 990, 2163], [1004, 2135, 1161, 2163], [1187, 2136, 1350, 2163], [1363, 2135, 1587, 2164], [1602, 2135, 1704, 2163], [1718, 2135, 1867, 2164], [1883, 2135, 1930, 2163], [1944, 2135, 2099, 2163], [540, 2181, 824, 2218], [853, 2182, 886, 2209], [900, 2181, 1105, 2218], [1121, 2181, 1158, 2218], [1168, 2181, 1215, 2209], [1233, 2181, 1393, 2218], [1409, 2191, 1449, 2209], [1466, 2181, 1654, 2210], [1672, 2182, 1776, 2210], [1789, 2181, 1886, 2218], [1900, 2181, 2022, 2210], [2038, 2181, 2101, 2210], [541, 2226, 619, 2254], [631, 2226, 922, 2263], [936, 2226, 1026, 2255], [454, 2287, 515, 2321], [540, 2287, 711, 2315], [729, 2287, 926, 2321], [948, 2288, 1019, 2316], [1037, 2287, 1129, 2321], [1152, 2287, 1209, 2315], [1227, 2287, 1327, 2315], [1345, 2287, 1504, 2315], [1542, 2287, 1688, 2324], [1707, 2287, 1906, 2324], [1924, 2287, 2099, 2315], [539, 2332, 789, 2369], [802, 2332, 838, 2360], [847, 2332, 955, 2361], [973, 2333, 1006, 2360], [1017, 2332, 1222, 2369], [1234, 2332, 1272, 2369], [1279, 2332, 1436, 2366], [1450, 2332, 1540, 2361], [454, 2392, 515, 2426], [541, 2392, 685, 2421], [699, 2392, 800, 2429], [814, 2392, 893, 2420], [905, 2392, 1083, 2429], [1099, 2392, 1156, 2420], [1169, 2393, 1259, 2429], [1272, 2392, 1456, 2420], [1476, 2392, 1624, 2429], [1637, 2392, 1838, 2429], [1850, 2392, 1934, 2421], [1945, 2401, 2098, 2429], [540, 2438, 648, 2466], [660, 2438, 750, 2475], [763, 2447, 779, 2466], [790, 2438, 1011, 2475], [1025, 2438, 1232, 2466], [1250, 2439, 1283, 2466], [1294, 2439, 1380, 2475], [1392, 2439, 1544, 2475], [1558, 2438, 1717, 2475], [1731, 2443, 1762, 2466], [1771, 2438, 1868, 2472], [1882, 2438, 1972, 2467], [454, 2498, 515, 2532], [540, 2499, 647, 2526], [666, 2498, 812, 2532], [832, 2498, 891, 2526], [908, 2498, 1003, 2532], [1023, 2498, 1104, 2535], [1121, 2498, 1264, 2532], [1285, 2498, 1343, 2526], [1359, 2498, 1472, 2535], [1489, 2499, 1584, 2526], [1619, 2498, 1760, 2526], [1777, 2498, 1948, 2526], [1965, 2498, 2001, 2526], [2016, 2498, 2099, 2527], [539, 2544, 789, 2581], [802, 2544, 833, 2572], [845, 2548, 947, 2573], [959, 2553, 1057, 2581], [1078, 2544, 1182, 2578], [1196, 2544, 1286, 2573], [454, 2604, 515, 2638], [540, 2605, 647, 2632], [661, 2604, 807, 2638], [822, 2604, 910, 2639], [923, 2605, 955, 2632], [969, 2605, 1020, 2638], [1036, 2604, 1093, 2632], [1106, 2604, 1169, 2641], [1183, 2604, 1348, 2633], [1369, 2604, 1542, 2641], [1556, 2604, 1737, 2632], [1752, 2613, 1862, 2641], [1875, 2604, 2038, 2641], [2052, 2604, 2100, 2632], [540, 2650, 680, 2678], [691, 2650, 874, 2678], [894, 2650, 998, 2684], [1012, 2650, 1102, 2679], [454, 2710, 515, 2744], [540, 2711, 614, 2738], [617, 2709, 633, 2738], [634, 2709, 647, 2738], [662, 2710, 809, 2744], [825, 2710, 936, 2738], [950, 2709, 1091, 2744], [1107, 2710, 1174, 2738], [1175, 2709, 1191, 2738], [1193, 2709, 1206, 2738], [1221, 2711, 1341, 2747], [1356, 2711, 1410, 2739], [1425, 2700, 1564, 2739], [1565, 2709, 1593, 2747], [1610, 2710, 1667, 2738], [1683, 2710, 1810, 2747], [1824, 2710, 2016, 2747], [2041, 2711, 2098, 2738], [540, 2759, 657, 2783], [668, 2755, 771, 2783], [782, 2755, 917, 2784], [927, 2755, 1021, 2783], [1033, 2755, 1182, 2792], [1194, 2755, 1304, 2783], [1323, 2756, 1356, 2783], [1367, 2755, 1571, 2792], [1584, 2755, 1621, 2792], [1625, 2755, 1903, 2789], [1917, 2755, 2007, 2784], [454, 2815, 515, 2849], [539, 2815, 603, 2844], [615, 2815, 754, 2843], [769, 2815, 826, 2843], [841, 2815, 962, 2843], [976, 2816, 1096, 2852], [1123, 2815, 1337, 2843], [1351, 2815, 1468, 2843], [1484, 2815, 1520, 2843], [1533, 2815, 1677, 2843], [1692, 2815, 1905, 2852], [1931, 2816, 1964, 2843], [1978, 2816, 2012, 2843], [2025, 2816, 2098, 2843], [540, 2861, 684, 2898], [696, 2861, 734, 2898], [736, 2861, 821, 2895], [834, 2861, 924, 2890], [454, 2921, 515, 2955], [540, 2922, 577, 2949], [592, 2922, 665, 2958], [688, 2921, 852, 2950], [866, 2921, 981, 2958], [994, 2921, 1142, 2958], [1156, 2921, 1345, 2958], [1364, 2921, 1571, 2958], [1586, 2921, 1616, 2949], [1630, 2921, 1713, 2950], [1726, 2921, 1869, 2958], [1890, 2922, 1981, 2949], [1994, 2922, 2098, 2950], [540, 2968, 658, 2996], [670, 2977, 710, 2995], [719, 2967, 919, 3001], [933, 2966, 1166, 3002], [1178, 2968, 1253, 2996], [1264, 2967, 1354, 2996], [1371, 2967, 1459, 2996], [1475, 2966, 1657, 2996], [1674, 2967, 1734, 2995], [1755, 2967, 2097, 2996], [541, 3013, 672, 3042], [1266, 3137, 1282, 3166], [454, 354, 515, 388], [540, 354, 568, 382], [581, 355, 603, 382], [616, 354, 720, 383], [732, 354, 878, 388], [893, 355, 928, 382], [940, 354, 1061, 391], [1074, 354, 1196, 388], [1210, 355, 1234, 382], [1249, 354, 1428, 388], [1442, 354, 1534, 382], [1548, 354, 1673, 391], [1688, 354, 1746, 382], [1758, 354, 1874, 382], [1888, 354, 1974, 383], [1994, 354, 2098, 382], [540, 400, 654, 437], [666, 400, 743, 437], [755, 400, 898, 437], [916, 401, 949, 428], [960, 401, 1046, 437], [1058, 401, 1210, 437], [1224, 400, 1383, 437], [1397, 405, 1428, 428], [1437, 400, 1534, 434], [1548, 400, 1638, 429], [454, 462, 515, 496], [540, 462, 670, 490], [684, 462, 804, 496], [817, 462, 930, 499], [943, 462, 1139, 499], [1154, 462, 1221, 490], [1234, 463, 1271, 490], [1286, 463, 1404, 499], [1418, 462, 1549, 491], [1562, 463, 1594, 490], [1608, 463, 1666, 499], [1682, 462, 1739, 490], [1752, 462, 1947, 499], [1959, 463, 1996, 490], [2011, 463, 2098, 490], [540, 508, 621, 545], [646, 508, 920, 545], [933, 508, 1083, 537], [1097, 508, 1312, 536], [1328, 508, 1375, 536], [1387, 508, 1555, 545], [1569, 508, 1729, 536], [1742, 508, 1956, 536], [1980, 509, 2012, 536], [2025, 509, 2098, 536], [540, 553, 684, 590], [696, 553, 734, 590], [738, 554, 882, 587], [896, 553, 986, 582], [454, 615, 515, 650], [540, 616, 670, 644], [683, 616, 802, 650], [816, 616, 918, 653], [929, 616, 1037, 650], [1050, 616, 1245, 653], [1256, 617, 1293, 644], [1306, 616, 1463, 653], [1478, 616, 1535, 644], [1547, 616, 1677, 645], [1689, 617, 1721, 644], [1734, 617, 1792, 653], [1810, 616, 1961, 645], [1974, 625, 2098, 653], [541, 661, 705, 698], [719, 661, 846, 698], [859, 661, 1010, 690], [1023, 661, 1248, 690], [1262, 670, 1376, 698], [1401, 662, 1434, 689], [1447, 661, 1652, 698], [1666, 661, 1704, 698], [1710, 661, 1990, 695], [2005, 670, 2097, 698], [544, 707, 734, 741], [748, 707, 838, 736], [454, 769, 515, 803], [540, 769, 640, 797], [656, 769, 823, 798], [838, 769, 896, 797], [911, 769, 1024, 797], [1040, 769, 1283, 798], [1310, 769, 1505, 797], [1519, 769, 1654, 806], [1669, 769, 1741, 798], [1756, 769, 1832, 806], [1846, 769, 2021, 797], [2036, 778, 2098, 797], [540, 815, 653, 843], [672, 816, 705, 843], [716, 815, 920, 852], [933, 815, 971, 852], [973, 815, 1070, 844], [1084, 815, 1174, 844], [454, 877, 515, 911], [540, 878, 566, 905], [582, 878, 609, 905], [614, 901, 619, 905], [636, 878, 752, 914], [767, 877, 825, 905], [840, 878, 865, 905], [882, 877, 992, 905], [1019, 878, 1108, 905], [1122, 877, 1286, 914], [1300, 881, 1331, 905], [1346, 877, 1496, 914], [1519, 878, 1626, 905], [1641, 886, 1731, 914], [1746, 877, 1862, 905], [1879, 877, 1914, 905], [1927, 877, 2097, 905], [539, 923, 668, 952], [679, 923, 717, 960], [719, 923, 869, 960], [879, 923, 1073, 960], [1083, 923, 1245, 957], [1260, 923, 1512, 958], [1526, 923, 1616, 952], [454, 985, 515, 1019], [540, 985, 642, 1013], [653, 985, 690, 1020], [702, 985, 894, 1022], [905, 985, 962, 1013], [974, 986, 1135, 1014], [1146, 986, 1183, 1013], [1196, 985, 1276, 1014], [1292, 985, 1436, 1013], [1447, 985, 1550, 1013], [1562, 985, 1696, 1022], [1708, 985, 1755, 1013], [1765, 985, 1846, 1022], [1857, 985, 1972, 1022], [1983, 989, 2100, 1013], [540, 1031, 687, 1068], [697, 1031, 921, 1059], [935, 1031, 1064, 1060], [1073, 1031, 1111, 1068], [1113, 1031, 1257, 1059], [1268, 1032, 1419, 1068], [1428, 1031, 1589, 1065], [1606, 1031, 1807, 1065], [1819, 1032, 1895, 1060], [1905, 1031, 1995, 1060], [2011, 1031, 2099, 1060], [544, 1075, 727, 1105], [454, 1139, 515, 1173], [539, 1139, 611, 1167], [626, 1140, 657, 1167], [672, 1140, 747, 1173], [764, 1139, 894, 1167], [910, 1139, 1029, 1173], [1046, 1139, 1155, 1167], [1170, 1139, 1235, 1173], [1253, 1139, 1310, 1167], [1325, 1139, 1520, 1176], [1534, 1140, 1571, 1167], [1587, 1139, 1744, 1176], [1771, 1139, 1924, 1176], [1938, 1139, 2021, 1168], [2036, 1148, 2098, 1167], [539, 1184, 687, 1221], [701, 1184, 748, 1212], [758, 1184, 974, 1221], [987, 1184, 1126, 1212], [1138, 1184, 1320, 1212], [1338, 1185, 1371, 1212], [1382, 1184, 1587, 1221], [1599, 1184, 1637, 1221], [1641, 1185, 1785, 1218], [1799, 1184, 1889, 1213], [1265, 3137, 1283, 3166]], "scores": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "structures": {"pages": {"version": "1.0", "structure_value": [[0, 470], [470, 1191], [1191, 1786], [1786, 2185], [2185, 2752], [2752, 3167], [3167, 3590], [3590, 4113], [4113, 4289]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 4], [4, 6], [6, 12], [12, 16], [16, 19], [19, 23], [23, 24], [24, 25], [25, 36], [36, 47], [47, 58], [58, 67], [67, 79], [79, 90], [90, 104], [104, 114], [114, 126], [126, 138], [138, 151], [151, 163], [163, 174], [174, 187], [187, 199], [199, 210], [210, 212], [212, 214], [214, 228], [228, 240], [240, 253], [253, 267], [267, 284], [284, 300], [300, 313], [313, 320], [320, 332], [332, 346], [346, 363], [363, 380], [380, 397], [397, 410], [410, 424], [424, 436], [436, 437], [437, 438], [438, 439], [439, 440], [440, 441], [441, 442], [442, 443], [443, 444], [444, 445], [445, 446], [446, 447], [447, 448], [448, 449], [449, 450], [450, 451], [451, 452], [452, 453], [453, 454], [454, 455], [455, 456], [456, 457], [457, 458], [458, 459], [459, 460], [460, 461], [461, 462], [462, 463], [463, 464], [464, 465], [465, 466], [466, 467], [467, 468], [468, 469], [469, 470], [470, 485], [485, 498], [498, 515], [515, 531], [531, 543], [543, 559], [559, 574], [574, 592], [592, 609], [609, 627], [627, 641], [641, 647], [647, 653], [653, 668], [668, 686], [686, 706], [706, 722], [722, 731], [731, 746], [746, 762], [762, 777], [777, 793], [793, 808], [808, 822], [822, 835], [835, 843], [843, 855], [855, 870], [870, 886], [886, 900], [900, 913], [913, 927], [927, 940], [940, 952], [952, 967], [967, 981], [981, 992], [992, 1000], [1000, 1003], [1003, 1017], [1017, 1031], [1031, 1045], [1045, 1059], [1059, 1074], [1074, 1086], [1086, 1103], [1103, 1117], [1117, 1133], [1133, 1149], [1149, 1164], [1164, 1178], [1178, 1190], [1190, 1191], [1191, 1208], [1208, 1224], [1224, 1239], [1239, 1253], [1253, 1257], [1257, 1274], [1274, 1290], [1290, 1309], [1309, 1319], [1319, 1322], [1322, 1336], [1336, 1352], [1352, 1367], [1367, 1383], [1383, 1398], [1398, 1414], [1414, 1427], [1427, 1444], [1444, 1458], [1458, 1461], [1461, 1475], [1475, 1487], [1487, 1507], [1507, 1526], [1526, 1535], [1535, 1540], [1540, 1541], [1541, 1542], [1542, 1557], [1557, 1561], [1561, 1574], [1574, 1589], [1589, 1607], [1607, 1624], [1624, 1641], [1641, 1642], [1642, 1643], [1643, 1655], [1655, 1656], [1656, 1664], [1664, 1679], [1679, 1694], [1694, 1711], [1711, 1719], [1719, 1721], [1721, 1722], [1722, 1723], [1723, 1724], [1724, 1725], [1725, 1726], [1726, 1742], [1742, 1757], [1757, 1772], [1772, 1785], [1785, 1786], [1786, 1802], [1802, 1819], [1819, 1833], [1833, 1847], [1847, 1864], [1864, 1880], [1880, 1900], [1900, 1915], [1915, 1918], [1918, 1922], [1922, 1923], [1923, 1924], [1924, 1927], [1927, 1928], [1928, 1946], [1946, 1960], [1960, 1979], [1979, 1991], [1991, 2007], [2007, 2024], [2024, 2043], [2043, 2051], [2051, 2055], [2055, 2056], [2056, 2057], [2057, 2059], [2059, 2060], [2060, 2061], [2061, 2069], [2069, 2088], [2088, 2102], [2102, 2116], [2116, 2133], [2133, 2149], [2149, 2165], [2165, 2170], [2170, 2183], [2183, 2184], [2184, 2185], [2185, 2201], [2201, 2207], [2207, 2209], [2209, 2210], [2210, 2211], [2211, 2212], [2212, 2213], [2213, 2214], [2214, 2218], [2218, 2219], [2219, 2220], [2220, 2221], [2221, 2223], [2223, 2224], [2224, 2225], [2225, 2228], [2228, 2243], [2243, 2258], [2258, 2271], [2271, 2283], [2283, 2293], [2293, 2295], [2295, 2299], [2299, 2314], [2314, 2328], [2328, 2343], [2343, 2358], [2358, 2370], [2370, 2386], [2386, 2402], [2402, 2418], [2418, 2426], [2426, 2442], [2442, 2456], [2456, 2470], [2470, 2487], [2487, 2497], [2497, 2513], [2513, 2529], [2529, 2542], [2542, 2559], [2559, 2572], [2572, 2590], [2590, 2592], [2592, 2596], [2596, 2609], [2609, 2624], [2624, 2637], [2637, 2651], [2651, 2666], [2666, 2673], [2673, 2689], [2689, 2704], [2704, 2719], [2719, 2720], [2720, 2721], [2721, 2722], [2722, 2723], [2723, 2724], [2724, 2739], [2739, 2751], [2751, 2752], [2752, 2753], [2753, 2755], [2755, 2758], [2758, 2759], [2759, 2760], [2760, 2761], [2761, 2762], [2762, 2763], [2763, 2764], [2764, 2765], [2765, 2766], [2766, 2767], [2767, 2768], [2768, 2769], [2769, 2770], [2770, 2771], [2771, 2772], [2772, 2773], [2773, 2774], [2774, 2788], [2788, 2797], [2797, 2810], [2810, 2826], [2826, 2830], [2830, 2836], [2836, 2837], [2837, 2838], [2838, 2839], [2839, 2840], [2840, 2843], [2843, 2844], [2844, 2845], [2845, 2846], [2846, 2847], [2847, 2848], [2848, 2849], [2849, 2850], [2850, 2851], [2851, 2852], [2852, 2853], [2853, 2854], [2854, 2855], [2855, 2856], [2856, 2857], [2857, 2858], [2858, 2859], [2859, 2860], [2860, 2861], [2861, 2862], [2862, 2863], [2863, 2864], [2864, 2865], [2865, 2866], [2866, 2867], [2867, 2873], [2873, 2874], [2874, 2875], [2875, 2876], [2876, 2877], [2877, 2880], [2880, 2881], [2881, 2882], [2882, 2883], [2883, 2884], [2884, 2885], [2885, 2887], [2887, 2903], [2903, 2919], [2919, 2925], [2925, 2940], [2940, 2954], [2954, 2970], [2970, 2988], [2988, 3003], [3003, 3018], [3018, 3033], [3033, 3047], [3047, 3051], [3051, 3053], [3053, 3067], [3067, 3081], [3081, 3098], [3098, 3107], [3107, 3125], [3125, 3138], [3138, 3153], [3153, 3166], [3166, 3167], [3167, 3184], [3184, 3200], [3200, 3213], [3213, 3232], [3232, 3240], [3240, 3242], [3242, 3256], [3256, 3269], [3269, 3285], [3285, 3297], [3297, 3312], [3312, 3324], [3324, 3338], [3338, 3343], [3343, 3358], [3358, 3371], [3371, 3386], [3386, 3398], [3398, 3414], [3414, 3431], [3431, 3447], [3447, 3450], [3450, 3470], [3470, 3485], [3485, 3498], [3498, 3513], [3513, 3530], [3530, 3540], [3540, 3541], [3541, 3556], [3556, 3569], [3569, 3586], [3586, 3589], [3589, 3590], [3590, 3591], [3591, 3604], [3604, 3615], [3615, 3630], [3630, 3633], [3633, 3646], [3646, 3659], [3659, 3672], [3672, 3682], [3682, 3684], [3684, 3697], [3697, 3709], [3709, 3715], [3715, 3727], [3727, 3737], [3737, 3742], [3742, 3755], [3755, 3766], [3766, 3780], [3780, 3791], [3791, 3793], [3793, 3806], [3806, 3818], [3818, 3829], [3829, 3831], [3831, 3850], [3850, 3853], [3853, 3867], [3867, 3879], [3879, 3889], [3889, 3901], [3901, 3910], [3910, 3926], [3926, 3933], [3933, 3945], [3945, 3957], [3957, 3960], [3960, 3971], [3971, 3979], [3979, 3991], [3991, 4003], [4003, 4017], [4017, 4023], [4023, 4037], [4037, 4041], [4041, 4059], [4059, 4070], [4070, 4084], [4084, 4088], [4088, 4101], [4101, 4111], [4111, 4112], [4112, 4113], [4113, 4129], [4129, 4139], [4139, 4154], [4154, 4164], [4164, 4168], [4168, 4182], [4182, 4192], [4192, 4194], [4194, 4206], [4206, 4212], [4212, 4229], [4229, 4236], [4236, 4251], [4251, 4262], [4262, 4263], [4263, 4278], [4278, 4288], [4288, 4289]], "positions": [[519, 462, 2031, 527], [1018, 545, 1532, 610], [914, 798, 1635, 828], [997, 845, 1552, 882], [1101, 890, 1448, 927], [1080, 936, 1470, 971], [709, 979, 1840, 1020], [1182, 1148, 1368, 1183], [600, 1272, 1950, 1309], [599, 1318, 1949, 1355], [599, 1363, 1948, 1400], [600, 1409, 1949, 1446], [599, 1455, 1949, 1492], [599, 1500, 1948, 1537], [600, 1546, 1950, 1583], [601, 1592, 1948, 1629], [599, 1637, 1949, 1674], [599, 1683, 1948, 1720], [600, 1729, 1949, 1766], [600, 1774, 1948, 1811], [600, 1820, 1950, 1857], [600, 1866, 1950, 1903], [600, 1911, 1948, 1948], [600, 1957, 1950, 1994], [600, 2003, 758, 2032], [452, 2182, 794, 2217], [450, 2303, 2098, 2340], [450, 2348, 2099, 2385], [450, 2394, 2099, 2431], [451, 2440, 2098, 2477], [449, 2484, 2097, 2522], [450, 2531, 2097, 2568], [450, 2577, 2098, 2614], [449, 2622, 1084, 2656], [450, 2693, 2099, 2730], [450, 2739, 2099, 2776], [450, 2784, 2099, 2821], [450, 2830, 2099, 2867], [450, 2876, 2099, 2913], [450, 2921, 2098, 2958], [451, 2967, 2099, 3004], [449, 3013, 1854, 3050], [1269, 3137, 1280, 3165], [97, 2265, 134, 2308], [97, 2235, 133, 2272], [83, 2188, 133, 2246], [83, 2162, 133, 2184], [98, 2117, 133, 2164], [103, 2102, 134, 2113], [82, 2058, 133, 2089], [82, 2010, 134, 2051], [82, 1975, 133, 2006], [82, 1929, 133, 1968], [125, 1913, 134, 1924], [82, 1864, 134, 1906], [82, 1829, 133, 1860], [83, 1781, 133, 1821], [82, 1740, 134, 1781], [98, 1698, 133, 1745], [82, 1654, 133, 1700], [81, 1594, 142, 1613], [97, 1549, 134, 1588], [97, 1517, 134, 1550], [125, 1504, 134, 1515], [82, 1443, 134, 1497], [83, 1393, 133, 1441], [81, 1370, 142, 1389], [82, 1281, 133, 1320], [82, 1237, 134, 1278], [83, 1141, 133, 1218], [97, 1101, 134, 1144], [97, 1071, 133, 1108], [82, 1017, 133, 1056], [82, 974, 134, 1015], [82, 938, 133, 969], [82, 888, 133, 934], [451, 354, 2099, 391], [452, 400, 2098, 437], [450, 445, 2099, 482], [451, 491, 2099, 528], [451, 537, 2099, 574], [452, 582, 2098, 619], [451, 628, 2099, 665], [451, 674, 2098, 711], [451, 719, 2097, 756], [451, 765, 2099, 802], [450, 811, 2099, 848], [451, 856, 1024, 893], [451, 989, 1537, 1033], [451, 1104, 2098, 1141], [451, 1150, 2099, 1187], [451, 1195, 2098, 1232], [450, 1241, 2099, 1278], [450, 1287, 1503, 1324], [451, 1357, 2100, 1394], [451, 1403, 2097, 1440], [451, 1449, 2099, 1486], [451, 1494, 2099, 1531], [452, 1540, 2099, 1577], [451, 1586, 2102, 1623], [450, 1631, 2099, 1668], [451, 1677, 1532, 1714], [451, 1748, 2099, 1785], [451, 1793, 2102, 1830], [451, 1839, 2098, 1876], [451, 1884, 2099, 1921], [451, 1930, 2099, 1967], [452, 1976, 2098, 2013], [451, 2021, 2098, 2058], [451, 2067, 2099, 2104], [452, 2113, 2099, 2150], [452, 2158, 2099, 2195], [451, 2203, 2099, 2238], [450, 2249, 1487, 2284], [451, 2371, 995, 2409], [451, 2465, 2100, 2502], [452, 2510, 2099, 2547], [451, 2556, 2100, 2593], [452, 2602, 2099, 2639], [450, 2647, 2097, 2684], [454, 2693, 2097, 2730], [452, 2739, 2097, 2776], [451, 2784, 2099, 2821], [451, 2830, 2099, 2867], [451, 2876, 2099, 2913], [451, 2921, 2099, 2958], [450, 2967, 2099, 3004], [452, 3013, 1695, 3050], [1265, 3137, 1284, 3165], [451, 354, 2098, 391], [451, 400, 2099, 437], [451, 445, 2097, 482], [450, 491, 2099, 528], [452, 537, 936, 574], [452, 607, 2099, 644], [451, 653, 2099, 690], [451, 699, 2099, 736], [451, 744, 1333, 781], [451, 860, 918, 904], [451, 966, 2097, 1003], [451, 1011, 2100, 1048], [451, 1057, 2097, 1094], [451, 1103, 2097, 1140], [450, 1173, 2098, 1210], [451, 1219, 2099, 1256], [451, 1265, 2099, 1302], [452, 1310, 2099, 1347], [450, 1356, 1923, 1393], [451, 1461, 825, 1499], [451, 1548, 2099, 1585], [450, 1594, 2099, 1631], [451, 1638, 2099, 1676], [452, 1683, 2097, 1725], [454, 1728, 1089, 1771], [1020, 1814, 1507, 1855], [1515, 1805, 1528, 1824], [2053, 1817, 2098, 1852], [451, 1892, 2003, 1930], [451, 1998, 890, 2028], [451, 2085, 2097, 2122], [451, 2123, 1924, 2167], [451, 2200, 2098, 2238], [450, 2247, 2097, 2284], [451, 2292, 1906, 2329], [1073, 2365, 1471, 2406], [2053, 2368, 2098, 2403], [451, 2449, 1500, 2490], [1503, 2452, 1515, 2465], [1537, 2445, 2098, 2482], [451, 2498, 2098, 2535], [451, 2543, 2098, 2580], [450, 2589, 2099, 2626], [452, 2635, 1395, 2672], [1155, 2770, 1280, 2794], [1309, 2710, 1339, 2739], [1296, 2748, 1352, 2806], [1298, 2818, 1349, 2838], [1363, 2770, 1392, 2794], [2053, 2760, 2098, 2795], [451, 2876, 2097, 2913], [451, 2921, 2100, 2958], [451, 2967, 2098, 3004], [451, 3013, 2052, 3050], [1266, 3137, 1282, 3166], [451, 1215, 2099, 1253], [451, 1262, 2098, 1299], [451, 1308, 2099, 1345], [450, 1353, 2078, 1390], [451, 1530, 2100, 1567], [451, 1575, 2097, 1613], [451, 1620, 2099, 1658], [451, 1666, 2099, 1704], [452, 1712, 753, 1751], [985, 1815, 1201, 1858], [1269, 1806, 1325, 1864], [1218, 1875, 1374, 1906], [1388, 1815, 1562, 1856], [2053, 1818, 2098, 1853], [451, 1986, 2097, 2023], [450, 2032, 2098, 2069], [451, 2077, 2099, 2114], [450, 2122, 1512, 2160], [450, 2194, 2099, 2231], [450, 2239, 2098, 2276], [450, 2284, 2099, 2323], [446, 2328, 1196, 2369], [1011, 2446, 1387, 2489], [1405, 2420, 1426, 2450], [1407, 2477, 1424, 2505], [1438, 2446, 1516, 2487], [1524, 2441, 1537, 2460], [2053, 2448, 2098, 2484], [451, 2557, 1185, 2598], [451, 2627, 2099, 2668], [451, 2676, 2098, 2713], [451, 2721, 2099, 2758], [451, 2764, 2098, 2805], [451, 2812, 2097, 2850], [451, 2858, 2100, 2895], [452, 2904, 782, 2941], [855, 2994, 1691, 3040], [2053, 2997, 2098, 3032], [1265, 3137, 1284, 3165], [451, 351, 2099, 392], [451, 400, 1035, 429], [818, 505, 963, 546], [1031, 496, 1087, 554], [980, 565, 1137, 595], [1204, 464, 1218, 484], [1183, 496, 1239, 554], [1185, 566, 1236, 585], [1250, 505, 1504, 546], [1510, 463, 1581, 588], [1599, 479, 1620, 509], [1601, 536, 1618, 564], [1631, 505, 1710, 546], [1718, 500, 1731, 519], [2053, 508, 2098, 543], [451, 662, 829, 700], [451, 748, 2097, 785], [452, 794, 2099, 831], [451, 839, 2100, 876], [452, 885, 2099, 922], [452, 931, 1391, 968], [451, 1045, 794, 1089], [451, 1148, 919, 1178], [451, 1235, 2102, 1272], [450, 1280, 2099, 1317], [451, 1326, 2097, 1363], [451, 1371, 2099, 1409], [452, 1416, 2099, 1454], [451, 1463, 2099, 1500], [451, 1501, 2097, 1545], [450, 1547, 2099, 1591], [452, 1600, 1299, 1637], [450, 1669, 2102, 1707], [451, 1716, 2100, 1753], [451, 1761, 2097, 1799], [450, 1807, 2097, 1844], [451, 1853, 1752, 1890], [451, 1924, 2098, 1961], [451, 1969, 2099, 2006], [451, 2014, 1879, 2052], [450, 2085, 2098, 2122], [451, 2130, 2097, 2168], [451, 2177, 2100, 2214], [451, 2215, 705, 2259], [451, 2325, 1235, 2363], [450, 2412, 2099, 2449], [451, 2458, 2100, 2495], [451, 2503, 2098, 2540], [451, 2549, 2099, 2586], [451, 2594, 2099, 2631], [450, 2640, 1541, 2677], [450, 2711, 2097, 2748], [450, 2756, 2100, 2793], [451, 2802, 2099, 2839], [505, 2876, 512, 2893], [519, 2883, 1207, 2915], [503, 2921, 514, 2938], [519, 2929, 1209, 2961], [503, 2966, 513, 2983], [518, 2973, 2100, 3007], [451, 3015, 2029, 3048], [1265, 3136, 1282, 3166], [962, 345, 1069, 373], [1258, 345, 1587, 373], [962, 392, 1361, 429], [1482, 392, 1551, 421], [962, 438, 1094, 467], [1292, 437, 1359, 467], [1482, 438, 1552, 467], [962, 484, 1023, 511], [1292, 483, 1359, 512], [1482, 483, 1553, 512], [962, 529, 1101, 557], [1292, 529, 1362, 558], [1482, 529, 1549, 557], [963, 576, 1097, 605], [1293, 576, 1362, 605], [1482, 576, 1553, 604], [963, 622, 1122, 651], [1292, 621, 1363, 651], [1482, 621, 1553, 651], [450, 709, 2097, 746], [450, 755, 2097, 792], [449, 800, 2099, 837], [451, 846, 2099, 883], [450, 892, 821, 926], [600, 1515, 1288, 1544], [573, 1404, 611, 1433], [573, 1311, 611, 1340], [573, 1217, 611, 1246], [573, 1124, 611, 1153], [724, 1579, 1140, 1616], [464, 1462, 493, 1487], [464, 1449, 492, 1459], [473, 1431, 492, 1447], [473, 1416, 492, 1428], [473, 1400, 492, 1412], [464, 1387, 492, 1397], [464, 1365, 492, 1386], [473, 1346, 492, 1362], [473, 1327, 492, 1343], [468, 1315, 492, 1326], [464, 1304, 492, 1314], [473, 1284, 492, 1303], [473, 1263, 492, 1282], [464, 1223, 492, 1251], [473, 1205, 492, 1221], [473, 1186, 492, 1202], [473, 1165, 492, 1185], [473, 1150, 492, 1164], [473, 1132, 492, 1148], [473, 1115, 492, 1131], [473, 1094, 501, 1113], [464, 1070, 499, 1081], [464, 1037, 493, 1066], [464, 1022, 499, 1033], [1357, 1515, 2044, 1544], [1330, 1404, 1367, 1433], [1330, 1274, 1367, 1303], [1330, 1143, 1367, 1172], [1330, 1013, 1367, 1042], [1481, 1579, 1896, 1616], [643, 1673, 777, 1702], [873, 1673, 1032, 1702], [1127, 1673, 1266, 1701], [1359, 1673, 1420, 1700], [1513, 1673, 1645, 1702], [1738, 1673, 1981, 1710], [451, 1790, 2099, 1827], [451, 1836, 2099, 1873], [451, 1882, 957, 1919], [451, 2036, 2099, 2074], [452, 2082, 1944, 2119], [450, 2153, 2099, 2190], [451, 2199, 2099, 2236], [455, 2244, 2097, 2281], [452, 2290, 1801, 2327], [451, 2361, 2097, 2398], [451, 2406, 2099, 2443], [452, 2452, 855, 2489], [451, 2574, 773, 2604], [450, 2668, 2099, 2705], [450, 2714, 2099, 2751], [452, 2759, 2099, 2796], [451, 2805, 1295, 2842], [451, 2876, 2102, 2913], [450, 2921, 2099, 2958], [452, 2967, 2099, 3004], [451, 3013, 1979, 3050], [1265, 3137, 1283, 3166], [451, 986, 2099, 1023], [451, 1031, 2099, 1068], [451, 1077, 2097, 1114], [450, 1123, 2099, 1160], [451, 1168, 1240, 1205], [451, 1363, 780, 1398], [450, 1510, 2098, 1547], [451, 1556, 2099, 1593], [451, 1601, 2099, 1638], [451, 1647, 2099, 1684], [451, 1693, 2097, 1730], [451, 1738, 2099, 1775], [452, 1784, 2097, 1821], [451, 1830, 978, 1867], [451, 1900, 2098, 1937], [451, 1946, 2099, 1983], [450, 1992, 2099, 2029], [451, 2037, 2068, 2074], [451, 2108, 2100, 2145], [452, 2154, 2099, 2191], [450, 2199, 2099, 2236], [452, 2245, 811, 2282], [451, 2315, 2098, 2352], [451, 2361, 2099, 2398], [451, 2406, 2100, 2444], [451, 2452, 2099, 2489], [451, 2498, 2100, 2535], [451, 2544, 1880, 2581], [450, 2729, 860, 2773], [451, 2876, 2097, 2913], [452, 2921, 2097, 2958], [450, 2966, 2099, 3004], [450, 3013, 879, 3042], [1265, 3138, 1283, 3165], [451, 348, 680, 383], [474, 426, 2098, 463], [540, 472, 1960, 509], [474, 532, 2099, 569], [540, 576, 1055, 611], [474, 637, 2098, 674], [540, 683, 2077, 720], [474, 743, 2098, 780], [539, 788, 2100, 826], [541, 835, 713, 869], [474, 894, 2099, 932], [540, 939, 2097, 977], [539, 986, 1445, 1023], [474, 1046, 2099, 1083], [540, 1092, 2100, 1129], [540, 1136, 1643, 1174], [474, 1198, 2096, 1235], [540, 1243, 1839, 1280], [474, 1303, 2099, 1340], [541, 1348, 2097, 1386], [540, 1394, 828, 1424], [474, 1455, 2097, 1492], [540, 1500, 2099, 1537], [540, 1546, 2106, 1583], [537, 1592, 726, 1626], [454, 1652, 2098, 1689], [540, 1698, 830, 1735], [454, 1757, 1759, 1795], [454, 1818, 2098, 1855], [539, 1863, 1823, 1900], [454, 1924, 2099, 1961], [540, 1969, 1730, 2006], [454, 2029, 2102, 2066], [540, 2075, 1481, 2112], [454, 2134, 2099, 2169], [540, 2181, 2101, 2218], [541, 2226, 1026, 2263], [454, 2287, 2099, 2324], [539, 2332, 1540, 2369], [454, 2392, 2098, 2429], [540, 2438, 1972, 2475], [454, 2498, 2099, 2535], [539, 2544, 1286, 2581], [454, 2604, 2100, 2641], [540, 2650, 1102, 2684], [454, 2700, 2098, 2747], [540, 2755, 2007, 2792], [454, 2815, 2098, 2852], [540, 2861, 924, 2898], [454, 2921, 2098, 2958], [540, 2966, 2097, 3002], [541, 3013, 672, 3042], [1266, 3137, 1282, 3166], [454, 354, 2098, 391], [540, 400, 1638, 437], [454, 462, 2098, 499], [540, 508, 2098, 545], [540, 553, 986, 590], [454, 615, 2098, 653], [541, 661, 2097, 698], [544, 707, 838, 741], [454, 769, 2098, 806], [540, 815, 1174, 852], [454, 877, 2097, 914], [539, 923, 1616, 960], [454, 985, 2100, 1022], [540, 1031, 2099, 1068], [544, 1075, 727, 1105], [454, 1139, 2098, 1176], [539, 1184, 1889, 1221], [1265, 3137, 1283, 3166]]}}}}, {"tool_name": "tesseract", "text": "Multilingual Distributed Representations without Word Alignment Karl Moritz Hermann and Phil Blunsom Department of Computer Science University of Oxford Oxford, OX1 3QD, UK {karl.moritz.hermann, phil.blunsom}@cs.ox.ac.uk Abstract Distributed representations of meaning are a natural way to encode covariance relationships between words and phrases in NLP. By overcoming data sparsity problems, as well as providing information about semantic relatedness which is not available in discrete representations, distributed representations have proven useful in many NLP tasks. Recent work has shown how compositional semantic representations can successfully be applied to a number of monolingual applica- tions such as sentiment analysis. At the same time, there has been some initial success in work on learning shared word-level representations across languages. We combine these two approaches by proposing a method for learning distributed representations in a multilingual setup. Our model learns to assign similar embed- dings to aligned sentences and dissimilar ones to sentence which are not aligned while not requiring word alignments. We show that our representations are seman- tically informative and apply them to a cross-lingual document classification task where we outperform the previous state of the art. Further, by employing parallel corpora of multiple language pairs we find that our model learns representations that capture semantic relationships across languages for which no parallel data was used. 1 Introduction Distributed representations of words are increasingly being used to achieve high levels of generalisa- tion within language modelling tasks. Successful applications of this approach include word-sense disambiguation, word similarity and synonym detection (e.g. [10, 27]). Subsequent work has also attempted to learn distributed semantics of larger structures, allowing us to apply distributed rep- resentation to tasks such as sentiment analysis or paraphrase detection (i.a. [1, 3, 12, 14, 21, 25]). At the same time a second strand of work has focused on transferring linguistic knowledge across languages, and particularly from English into low-resource languages, by means of distributed rep- resentations at the word level [13, 16]. Currently, work on compositional semantic representations focuses on monolingual data while the cross-lingual work focuses on word level representations only. However, it appears logical that these two strands of work should be combined as there exists a plethora of parallel corpora with aligned data at the sentence level or beyond which could be exploited in such work. Further, sentence aligned data provides a plausible concept of semantic similarity, which can be harder to define at the word level. Consider the case of alignment between a German compound noun (e.g. \u201cSchwerlastverkehr\u2019\u2019) and its English equivalent (\u201cheavy goods vehicle traffic\u2019). Semantic alignment at the phrase level here appears far more plausible than aligning individual tokens for semantic transfer. Using this rationale, and building on both work related to learning cross-lingual embeddings as well as to compositional semantic representations, we introduce a model that learns cross-lingual em- beddings at the sentence level. In the following section we will briefly discuss prior work in these two fields before going on to describe the bilingual training signal that we developed for learning multilingual compositional embeddings. Subsequently, we will describe our model in greater detail as well as its training procedure and experimental setup. Finally, we perform a number of evalua- tions and demonstrate that our training signal allows a very simple compositional vector model to outperform the state of the art on a task designed to evaluate its ability to transfer semantic informa- tion across languages. Unlike other work in this area, our model does not require word aligned data. In fact, while we evaluate our model on sentence aligned data in this paper, there is no theoretical requirement for this and technically our algorithm could also be applied to document-level parallel data or even comparable data only. 2 Models of Compositional Distributed Semantics In the case of representing individual words as vectors, the distributional account of semantics pro- vides a plausible explanation of what is encoded in a word vector. This follows the idea that the meaning of a word can be determined by \u201cthe company it keeps\u201d [11], that is by the context it ap- pears in. Such context can easily be encoded in vectors using collocational methods, and is also underlying other methods of learning word embeddings [7, 20]. For a number of important problems, semantic representations of individual words do not suffice, but instead a semantic representation of a larger structure\u2014e.g. a phrase or a sentence\u2014is required. This was highlighted in [10], who proposed a mechanism for modifying a word\u2019s representation based on its individual context. The distributional account of semantics can, due to sparsity, not be applied to such larger linguistic units. A notable exception perhaps is Baroni and Zamparelli [1], who learned distributional representations for adjective noun pairs using a collocational approach on a corpus of unprecedented size. The bigram representations learned from that corpus were subsequently used to learn lexicalised composition functions for the constituent words. Most alternative attempts to extract such higher-level semantic representations have focused on learning composition functions that represent the semantics of a larger structure as a function of the representations of its parts. [21] provides an evaluation of a number of simple composition func- tions applied to bigrams. Applied recursively, such approaches can then easily be reconciled with the co-occurrence based word level representations. There are a number of proposals motivating such recursive or deep composition models. Notably, [3] propose a tensor-based model for semantic composition and, similarly, [4] develop a framework for semantic composition by combining dis- tributional theory with pregroup grammars. The latter framework was empirically evaluated and supported by the results in [12]. More recently, various forms of recursive neural networks have successfully been used for semantic composition and related tasks such as sentiment analysis. Such models include recursive autoencoders [24], matrix-vector recursive neural networks [25], untied recursive neural networks [14] or convolutional networks [15]. 2.1 Multilingual Embeddings Much research has been devoted to the task of inducing distributed semantic representations for single languages. In particular English, with its large number of annotated resources, has enjoyed most attention. Recently, progress has been made at representation learning for languages with fewer available resources. Klementiev et al. [16] described a form of multitask learning on word-aligned parallel data to transfer embeddings from one language to another. Earlier work, Haghighi et al. [13], proposed a method for inducing cross-lingual lexica using monolingual feature representations and a small initial lexicon to bootstrap with. This approach has recently been extended by [18, 19], who developed a method for learning transformation matrices to convert semantic vectors of one language into those of another. Is was demonstrated that this approach can be applied to improve tasks related to machine translation. Their CBOW model is also worth noting for its similarities to the composition function used in this paper. Using a slightly different approach, [29], also learned bilingual embeddings for machine translation. It is important to note that, unlike our proposed system, all of these methods require word aligned parallel data for training. Two recent workshop papers deserve mention in this respect. Both Lauly et al. [17] and Sarath Chan- dar et al. [23] propose methods for learning word embeddings by exploiting bilingual data, not unlike the method proposed in this paper. Instead of the noise-contrastive method developed in this paper, both groups of authors make use of autoencoders to encode monolingual representations and to support the bilingual transfer. So far almost all of this work has been focused on learning multilingual representations at the word level. As distributed representations of larger expressions have been shown to be highly useful for a number of tasks, it seems to be a natural next step to also attempt to induce these using cross-lingual data. This paper provides a first step in that direction. 3 Model Description Language acquisition in humans is widely seen as grounded in sensory-motor experience [22, 2]. Based on this idea, there have been some attempts at using multi-modal data for learning better vector representations of words (e.g. [26]). Such methods, however, are not easily scalable across languages or to large amounts of data for which no secondary or tertiary representation might exist. We abstract the underlying principle one step further and attempt to learn semantics from multi- lingual data. The idea is that, given enough parallel data, a shared representation would be forced to capture the common elements between sentences from different languages. What two parallel sentences have in common, of course, is the semantics of those two sentences. Using this data, we propose a novel method for learning vector representations at the word level and beyond. 3.1 Bilingual Signal Exploiting the semantic similarity of parallel sentences across languages, we can define a simple bilingual (and trivially multilingual) error function as follows: Given a compositional sentence model (CVM) M4, which maps a sentence to a vector, we can train a second CVM Mp using a corpus C4\\,5 of parallel data from the language pair A, B. For each pair of parallel sentences (a,b) \u20ac C4.p, we attempt to minimize Eaist (a, b) = ||Groot \u2014 broot ll (1) where @,-oo\u00a2 1s the vector representing sentence a and 6,4: the vector representing sentence b. 3.2. The BICVM Model A CVM learns semantic representations of larger syntactic units given the semantic representations of their constituents. We assume individual words to be represented by vectors (x \u20ac R\u00ae). Previous methods employ binary parse trees on the data (e.g. [14, 25]) and use weighted or multi- plicative composition functions. Under such a setup, where each node in the tree is terminal or has two children (p \u2014 co, \u20ac1), a binary composition function could take the following form: p= g(W*[co; c1] + b\u00b0) (2) where [co; \u00a21] is the concatenation of the two child vectors, W\u00b0 \u20ac IR?*?\u00a2 and 6\u00b0 \u20ac R\u00ae the encod- ing matrix and bias, respectively, and g an element-wise activation function such as the hyperbolic tangent. For the purposes of evaluation the bilingual signal proposed above, we simplify this com- position function by setting all weight matrices to the identity and all biases to zero. Thereby the CVM reduces to a simple additive composition function: |a| Groot = S- ay (3) 1=0 Of course, this is a very simplified CVM, as such a bag-of-words approach no longer accounts for word ordering and other effects which a more complex CVM might capture. However, for the purposes of this evaluation (and with the experimental evaluation in mind), such a simplistic composition function should be sufficient to evaluate the novel objective function proposed here. (0000) (oo ee) (00 00) (00 oo) at a2 a3 a4 Figure 1: Description of a bilingual model with parallel input sentences a and 6. The objective function of this model is to minimize the distance between the sentence level encoding of the bi- text. Principally any composition function can be used to generate the compositional sentence level representations. The composition function is represented by the CVM boxes in the diagram above. Using this additive CVM we want to optimize the bilingual error signal defined above (Eq. 1). For the moment, assume that M 4 is a perfectly trained CVM such that a@,oo\u00a2 represents the semantics of the sentence a. Further, due to the use of parallel data, we know that a and b are semantically equivalent. Hence we transfer the semantic knowledge contained in M4 onto Mag, by learning 944, to minimize: Byi(Ca.p)= S> Buise(a,b) (4) (a,b)EC 4 B Of course, this objective function assumes a fully trained model which we do not have at this stage. While this can be a useful objective for transferring linguistic knowledge into low-resource lan- guages [16], this precondition is not helpful when there is no model to learn from in first place. We resolve this issue by jointly training both models M 4 and Mp. Applying \u00a3; to parallel data ensures that both models learn a shared representation at the sentence level. As the parallel input sentences share the same meaning, it is reasonable to assume that mini- mizing F,,; will force the model to learn their semantic representation. Let 04; = 004, UO@m,. The joint objective function J(6;;) thus becomes: A J(0y:) = Evi(Ca,B) + 5 li@eill\u201d (3) where A||03;||1 is the Lz regularization term. It is apparent that this joint objective J(@,;) is degenerate. The models could learn to reduce all embeddings and composition weights to zero and thereby minimize the objective function. We ad- dress this issue by employing a form of contrastive estimation penalizing small distances between non-parallel sentence pairs. For every pair of parallel sentences (a,b) we sample a number of ad- ditional sentences n \u20ac Cg, which\u2014with high probability\u2014are not exact translations of a. This is comparable to the second term of the loss function of a large margin nearest neighbour classifier (see Eq. 12 in [28]): noise (a, b, n) = [1 + aust (a, b) \u2014_ Eaist(, ny, (6) where [x], = maz(x,0) denotes the standard hinge loss. Thus, the final objective function to minimize for the BICVM model is: k X J (Obi) = S- (>: Enoise (a, b, v0) + 5 lel\u201d (7) (a,b)EC4,B \\i=1 3.3 Model Learning Given the objective function as defined above, model learning can employ the same techniques as any monolingual CVM. In particular, as the objective function is differentiable, we can use standard gradient descent techniques such as stochastic gradient descent, L-BFGS or the adaptive gradient algorithm AdaGrad [8]. Within each monolingual CVM, we use backpropagation through structure after applying the joint error to each sentence level node. 4 Experiments 4.1 Data and Parameters All model weights were randomly initialised using a Gaussian distribution. There are a number of parameters that can influence model training. We selected the following values for simplicity and comparability with prior work. In future work we will investigate the effect of these parameters in greater detail. L2 regularization (1), step-size (0.1), number of noise elements (50), margin size (50), embedding dimensionality (d=40). The noise elements samples were randomly drawn from the corpus at training time, individually for each training sample and epoch. We use the Europarl corpus (v7)! for training the bilingual model. The corpus was pre-processed using the set of tools provided by cdec? [9] for tokenizing and lowercasing the data. Further, all empty sentences as well as their translations were removed from the corpus. We present results from two experiments. The BICVM model was trained on 500k sentence pairs of the English-German parallel section of the Europarl corpus. The BICVM-+ model used this dataset in combination with another 500k parallel sentences from the English-French section of the corpus, resulting in 1 million English sentences, each paired up with either a German or a French sentence. Each language\u2019s vocabulary used distinct encodings to avoid potential overlap. The motivation behind BICVM-+ is to investigate whether we can learn better embeddings by intro- ducing additional data in a different language. This is similar to prior work in machine translation where English was used as a pivot for translation between low-resource languages [5]. We use the adaptive gradient method, AdaGrad [8], for updating the weights of our models, and ter- minate training after 50 iterations. Earlier experiments indicated that the BICVM model converges faster than the BICVM+ model, but we report results on the same number of iterations for better comparability?. 4.2 Cross-Lingual Document Classification We evaluate our model using the cross-lingual document classification (CLDC) task of Klementiev et al. [16]. This task involves learning language independent embeddings which are then used for document classification across the English-German language pair. For this, CLDC employs a par- ticular kind of supervision, namely using supervised training data in one language and evaluating without supervision in another. Thus, CLDC is a good task for establishing whether our learned representations are semantically useful across multiple languages. We follow the experimental setup described in [16], with the exception that we learn our embeddings using solely the Europarl data and only use the Reuters RCV1/RCV2 corpora during the classifier training and testing stages. Each document in the classification task is represented by the average \u2018nttp://www.statmt .org/europarl/ *https://github.com/redpony/cdec >These numbers were updated following comments in the ICLR open review process. Results for other dimensionalities and our source code for our model are available at http://www. karlmoritz.com. Model en\u2014de de\u2014-en Majority Class 46.8 46.8 Glossed 65.1 68.6 MT 68.1 67.4 I-Matrix 77.6 71.1 BICVM 83.7 71.4 BICVM+ 86.2 76.9 Table 1: Classification accuracy for training on English and German with 1000 labeled examples. Cross-lingual compositional representations (BIC VM and BICVM-4), cross-lingual representations using learned embeddings and an interaction matrix (I-Matrix) [16] translated (MT) and glossed (Glossed) words, and the majority class baseline. The MT and Glossed results are also taken from Klementiev et al. [16]. Classification Accuracy (%) 100 =200 \u00a96500) \u00ab\u00a91000 5000 10000 100 200 \u00a7\u00a9500 = 61000 5000 10000 Training Documents (en) Training Documents (de) \u2014@ BICVM \u2014\u00ae BIC VM+ \u2014e\u2014 I-Matrix \u20144\u00ab\u2014 MT \u2014*\u2014 Glossed - - - Majority Class Figure 2: Classification accuracy for a number of models (see Table 1 for model descriptions). The left chart shows results for these models when trained on English data and evaluated on German data, the right chart vice versa. of the d-dimensional representations of all its sentences. We train the multiclass classifier using the same settings and implementation of the averaged perceptron classifier [6] as used in [16]. We ran the CLDC experiments both by training on English and testing on German documents and vice versa. Using the data splits provided by [16], we used varying training data sizes from 100 to 10,000 documents for training the multiclass classifier. The results of this task across training sizes are shown in Figure 2. Table 1 shows the results for training on 1,000 documents. Both models, BICVM and BICVM+ outperform all prior work on this task. Further, the BICVM+ model outperforms the BICVM model, indicating the usefulness of adding training data even from a separate language pair. 4.3 Visualization While the CLDC experiment focused on establishing the semantic content of the sentence level representations, we also want to briefly investigate the induced word embeddings. In particular the BICVM+ model is interesting for that purpose, as it allows us to evaluate our approach of using English as a pivot language in a multilingual setup. In Figure 3 we show the t-SNE projections for a number of English, French and German words. Of particular interest should be the right chart, which highlights bilingual embeddings between French and German words. Even though the model did not use any parallel French-German data during training, it still managed to learn semantic word-word similarity across these two languages. t / Maeexs, ee aera. abr Cirnaaaiaa, . aUugHatyt ; adhaay lyon Janyat Ac HRSA i Vite t= 5 8 - ne nBRORS. wear. GORA ae \u201cHERR: septembre ia sans yi september * = Star Figure 3: The left scatter plot shows t-SNE projections for a weekdays in all three languages using the representations learned in the BIC VM+ model. Even though the model did not use any parallel French-German data during training, it still learns semantic similarity between these two languages using English as a pivot. To highlight this, the right plot shows another set of words (months of the year) using only the German and French words. 5 Conclusions With this paper we have proposed a novel method for inducing cross-lingual distributed represen- tations for compositional semantics. Using a very simple method for semantic composition, we nevertheless managed to obtain state of the art results on the CLDC task, specifically designed to evaluate semantic transfer across languages. After extending our approach to include multilingual training data in the BIC VM+ model, we were able to demonstrate that adding additional languages further improves the model. Furthermore, using some qualitative experiments and visualizations, we showed that our approach also allows us to learn semantically related embeddings across languages without any direct training data. Our approach provides great flexibility in training data and requires little to no annotation. Hav- ing demonstrated the successful training of semantic representations using sentence aligned data, a plausible next step is to attempt training using document-aligned data or even corpora of comparable documents. This may provide even greater possibilities for working with low-resource languages. In the same vein, the success of our pivoting experiments suggest further work. Unlike other pivot approaches, it is easy to extend our model to have multiple pivot languages. Thus some pivots could preserve different aspects such as case, gender etc., and overcome other issues related to having a single pivot language. As we have achieved the results in this paper with a relatively simple CVM, it would also be inter- esting to establish whether our objective function can be used in combination with more complex compositional vector models such as MV-RNN [25] or tensor-based approaches, to see whether these can further improve results on both mono- and multilingual tasks when used in conjunction with our cross-lingual objective function. Related to this, we will also apply our model to a wider variety of tasks including machine translation and multilingual information extraction. Acknowledgements The authors would like to thank Alexandre Klementiev and his co-authors for making their datasets and averaged perceptron implementation available, as well as answering a number of questions related to their work on this task. This work was supported by EPSRC grant EP/K036580/1 and a Xerox Foundation Award. References [1] [10] [11] [12] [13] [14] [15] [16] [17] [18] [19] [20] [21] [22] Marco Baroni and Roberto Zamparelli. Nouns are vectors, adjectives are matrices: Represent- ing adjective-noun constructions in semantic space. In Proceedings of EMNLP, 2010. Paul Bloom. Precis of how children learn the meanings of words. Behavioral and Brain Sciences, 24:1095\u20141103, 2001. Stephen Clark and Stephen Pulman. Combining symbolic and distributional models of mean- ing. In Proceedings of AAAI Spring Symposium on Quantum Interaction. AAAI Press, 2007. Bob Coecke, Mehrnoosh Sadrzadeh, and Stephen Clark. Mathematical foundations for a com- positional distributional model of meaning. Lambek Festschrift. Linguistic Analysis, 36:345\u2014 384, 2010. Trevor Cohn and Mirella Lapata. Machine translation by triangulation: Making effective use of multi-parallel corpora. In Proceedings of ACL, pages 728-735, Prague, Czech Republic, June 2007. Association for Computational Linguistics. Michael Collins. Discriminative training methods for hidden markov models: Theory and experiments with perceptron algorithms. In Proceedings of ACL-EMNLP. Association for Computational Linguistics, 2002. doi: 10.3115/1118693.1118694. Ronan Collobert and Jason Weston. A unified architecture for natural language processing: Deep neural networks with multitask learning. In Proceedings of ICML, 2008. John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research, 12:2121\u20142159, July 2011. ISSN 1532-4435. Chris Dyer, Adam Lopez, Juri Ganitkevitch, Johnathan Weese, Ferhan Ture, Phil Blunsom, Hendra Setiawan, Vladimir Eidelman, and Philip Resnik. cdec: A decoder, alignment, and learning framework for finite-state and context-free translation models. In Proceedings of ACE, 2010. K. Erk and S. Pad\u00e9. A structured vector space model for word meaning in context. Proceedings of EMNEP, 2008. J.R. Firth. A synopsis of linguistic theory 1930-55. 1952-59:1\u201432, 1957. Edward Grefenstette and Mehrnoosh Sadrzadeh. Experimental support for a categorical com- positional distributional model of meaning. In Proceedings of EMNLP, 2011. Aria Haghighi, Percy Liang, Taylor Berg-Kirkpatrick, and Dan Klein. Learning bilingual lexicons from monolingual corpora. In Proceedings of ACL-HLT, 2008. Karl Moritz Hermann and Phil Blunsom. The Role of Syntax in Vector Space Models of Compositional Semantics. In Proceedings of ACL, 2013. Nal Kalchbrenner and Phil Blunsom. Recurrent convolutional neural networks for discourse compositionality. In Proceedings of the Workshop on Continuous Vector Space Models and their Compositionality, 2013. Alexandre Klementiev, Ivan Titov, and Binod Bhattarai. Inducing crosslingual distributed representations of words. In Proceedings of COLING, 2012. Stanislas Lauly, Alex Boulanger, and Hugo Larochelle. Learning multilingual word represen- tations using a bag-of-words autoencoder. In Deep Learning Workshop at NIPS, 2013. Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Efficient estimation of word representations in vector space. CoRR, 2013. Tomas Mikolov, Quoc V. Le, and Ilya Sutskever. Exploiting similarities among languages for machine translation. CoRR, 2013. Toma\u00e9 Mikoloy, Martin Karafidt, Luka8 Burget, Jan Cernocky, and Sanjeev Khudanpur. Re- current neural network based language model. In Proceedings of INTERSPEECH, 2010. Jeff Mitchell and Mirella Lapata. Vector-based models of semantic composition. In In Pro- ceedings of ACL, 2008. D. Roy. Grounded spoken language acquisition: Experiments in word learning. [EEE Trans- actions on Multimedia, 5(2):197\u2014209, June 2003. ISSN 1520-9210. doi: 10.1109/TMM.2003. 811618. [23] [24] [25] [26] [27] [28] [29] A P Sarath Chandar, M Khapra Mitesh, B Ravindran, Vikas Raykar, and Amrita Saha. Multi- lingual deep learning. In Deep Learning Workshop at NIPS, 2013. Richard Socher, Jeffrey Pennington, Eric H. Huang, Andrew Y. Ng, and Christopher D. Man- ning. Semi-supervised recursive autoencoders for predicting sentiment distributions. In Pro- ceedings of EMNLP, 2011. Richard Socher, Brody Huval, Christopher D. Manning, and Andrew Y. Ng. Semantic compo- sitionality through recursive matrix-vector spaces. In Proceedings of EMNLP-CoNLL, pages 1201-1211, 2012. Nitish Srivastava and Ruslan Salakhutdinov. Multimodal learning with deep boltzmann ma- chines. In Proceedings of NIPS. 2012. P. D. Tumey and P. Pantel. From frequency to meaning: Vector space models of semantics. Journal of Artificial Intelligence Research, 37(1):141-188, 2010. Kilian Q. Weinberger and Lawrence K. Saul. Distance metric learning for large margin nearest neighbor classification. Journal of Machine Learning Research, 10:207\u2014244, June 2009. ISSN 1532-4435. Will Y. Zou, Richard Socher, Daniel Cer, and Christopher D. Manning. Bilingual word em- beddings for phrase-based machine translation. In Proceedings of EMNLP, 2013.", "tokens_layer": {"doc_id": "./1312.6173v4.hocr", "tokens": ["Multilingual", "Distributed", "Representations", "without", "Word", "Alignment", "Karl", "Moritz", "Hermann", "and", "Phil", "Blunsom", "Department", "of", "Computer", "Science", "University", "of", "Oxford", "Oxford,", "OX1", "3QD,", "UK", "{karl.moritz.hermann,", "phil.blunsom}@cs.ox.ac.uk", "Abstract", "Distributed", "representations", "of", "meaning", "are", "a", "natural", "way", "to", "encode", "covariance", "relationships", "between", "words", "and", "phrases", "in", "NLP.", "By", "overcoming", "data", "sparsity", "problems,", "as", "well", "as", "providing", "information", "about", "semantic", "relatedness", "which", "is", "not", "available", "in", "discrete", "representations,", "distributed", "representations", "have", "proven", "useful", "in", "many", "NLP", "tasks.", "Recent", "work", "has", "shown", "how", "compositional", "semantic", "representations", "can", "successfully", "be", "applied", "to", "a", "number", "of", "monolingual", "applica-", "tions", "such", "as", "sentiment", "analysis.", "At", "the", "same", "time,", "there", "has", "been", "some", "initial", "success", "in", "work", "on", "learning", "shared", "word-level", "representations", "across", "languages.", "We", "combine", "these", "two", "approaches", "by", "proposing", "a", "method", "for", "learning", "distributed", "representations", "in", "a", "multilingual", "setup.", "Our", "model", "learns", "to", "assign", "similar", "embed-", "dings", "to", "aligned", "sentences", "and", "dissimilar", "ones", "to", "sentence", "which", "are", "not", "aligned", "while", "not", "requiring", "word", "alignments.", "We", "show", "that", "our", "representations", "are", "seman-", "tically", "informative", "and", "apply", "them", "to", "a", "cross-lingual", "document", "classification", "task", "where", "we", "outperform", "the", "previous", "state", "of", "the", "art.", "Further,", "by", "employing", "parallel", "corpora", "of", "multiple", "language", "pairs", "we", "find", "that", "our", "model", "learns", "representations", "that", "capture", "semantic", "relationships", "across", "languages", "for", "which", "no", "parallel", "data", "was", "used.", "1", "Introduction", "Distributed", "representations", "of", "words", "are", "increasingly", "being", "used", "to", "achieve", "high", "levels", "of", "generalisa-", "tion", "within", "language", "modelling", "tasks.", "Successful", "applications", "of", "this", "approach", "include", "word-sense", "disambiguation,", "word", "similarity", "and", "synonym", "detection", "(e.g.", "[10,", "27]).", "Subsequent", "work", "has", "also", "attempted", "to", "learn", "distributed", "semantics", "of", "larger", "structures,", "allowing", "us", "to", "apply", "distributed", "rep-", "resentation", "to", "tasks", "such", "as", "sentiment", "analysis", "or", "paraphrase", "detection", "(i.a.", "[1,", "3,", "12,", "14,", "21,", "25]).", "At", "the", "same", "time", "a", "second", "strand", "of", "work", "has", "focused", "on", "transferring", "linguistic", "knowledge", "across", "languages,", "and", "particularly", "from", "English", "into", "low-resource", "languages,", "by", "means", "of", "distributed", "rep-", "resentations", "at", "the", "word", "level", "[13,", "16].", "Currently,", "work", "on", "compositional", "semantic", "representations", "focuses", "on", "monolingual", "data", "while", "the", "cross-lingual", "work", "focuses", "on", "word", "level", "representations", "only.", "However,", "it", "appears", "logical", "that", "these", "two", "strands", "of", "work", "should", "be", "combined", "as", "there", "exists", "a", "plethora", "of", "parallel", "corpora", "with", "aligned", "data", "at", "the", "sentence", "level", "or", "beyond", "which", "could", "be", "exploited", "in", "such", "work.", "Further,", "sentence", "aligned", "data", "provides", "a", "plausible", "concept", "of", "semantic", "similarity,", "which", "can", "be", "harder", "to", "define", "at", "the", "word", "level.", "Consider", "the", "case", "of", "alignment", "between", "a", "German", "compound", "noun", "(e.g.", "\u201cSchwerlastverkehr\u2019\u2019)", "and", "its", "English", "equivalent", "(\u201cheavy", "goods", "vehicle", "traffic\u2019).", "Semantic", "alignment", "at", "the", "phrase", "level", "here", "appears", "far", "more", "plausible", "than", "aligning", "individual", "tokens", "for", "semantic", "transfer.", "Using", "this", "rationale,", "and", "building", "on", "both", "work", "related", "to", "learning", "cross-lingual", "embeddings", "as", "well", "as", "to", "compositional", "semantic", "representations,", "we", "introduce", "a", "model", "that", "learns", "cross-lingual", "em-", "beddings", "at", "the", "sentence", "level.", "In", "the", "following", "section", "we", "will", "briefly", "discuss", "prior", "work", "in", "these", "two", "fields", "before", "going", "on", "to", "describe", "the", "bilingual", "training", "signal", "that", "we", "developed", "for", "learning", "multilingual", "compositional", "embeddings.", "Subsequently,", "we", "will", "describe", "our", "model", "in", "greater", "detail", "as", "well", "as", "its", "training", "procedure", "and", "experimental", "setup.", "Finally,", "we", "perform", "a", "number", "of", "evalua-", "tions", "and", "demonstrate", "that", "our", "training", "signal", "allows", "a", "very", "simple", "compositional", "vector", "model", "to", "outperform", "the", "state", "of", "the", "art", "on", "a", "task", "designed", "to", "evaluate", "its", "ability", "to", "transfer", "semantic", "informa-", "tion", "across", "languages.", "Unlike", "other", "work", "in", "this", "area,", "our", "model", "does", "not", "require", "word", "aligned", "data.", "In", "fact,", "while", "we", "evaluate", "our", "model", "on", "sentence", "aligned", "data", "in", "this", "paper,", "there", "is", "no", "theoretical", "requirement", "for", "this", "and", "technically", "our", "algorithm", "could", "also", "be", "applied", "to", "document-level", "parallel", "data", "or", "even", "comparable", "data", "only.", "2", "Models", "of", "Compositional", "Distributed", "Semantics", "In", "the", "case", "of", "representing", "individual", "words", "as", "vectors,", "the", "distributional", "account", "of", "semantics", "pro-", "vides", "a", "plausible", "explanation", "of", "what", "is", "encoded", "in", "a", "word", "vector.", "This", "follows", "the", "idea", "that", "the", "meaning", "of", "a", "word", "can", "be", "determined", "by", "\u201cthe", "company", "it", "keeps\u201d", "[11],", "that", "is", "by", "the", "context", "it", "ap-", "pears", "in.", "Such", "context", "can", "easily", "be", "encoded", "in", "vectors", "using", "collocational", "methods,", "and", "is", "also", "underlying", "other", "methods", "of", "learning", "word", "embeddings", "[7,", "20].", "For", "a", "number", "of", "important", "problems,", "semantic", "representations", "of", "individual", "words", "do", "not", "suffice,", "but", "instead", "a", "semantic", "representation", "of", "a", "larger", "structure\u2014e.g.", "a", "phrase", "or", "a", "sentence\u2014is", "required.", "This", "was", "highlighted", "in", "[10],", "who", "proposed", "a", "mechanism", "for", "modifying", "a", "word\u2019s", "representation", "based", "on", "its", "individual", "context.", "The", "distributional", "account", "of", "semantics", "can,", "due", "to", "sparsity,", "not", "be", "applied", "to", "such", "larger", "linguistic", "units.", "A", "notable", "exception", "perhaps", "is", "Baroni", "and", "Zamparelli", "[1],", "who", "learned", "distributional", "representations", "for", "adjective", "noun", "pairs", "using", "a", "collocational", "approach", "on", "a", "corpus", "of", "unprecedented", "size.", "The", "bigram", "representations", "learned", "from", "that", "corpus", "were", "subsequently", "used", "to", "learn", "lexicalised", "composition", "functions", "for", "the", "constituent", "words.", "Most", "alternative", "attempts", "to", "extract", "such", "higher-level", "semantic", "representations", "have", "focused", "on", "learning", "composition", "functions", "that", "represent", "the", "semantics", "of", "a", "larger", "structure", "as", "a", "function", "of", "the", "representations", "of", "its", "parts.", "[21]", "provides", "an", "evaluation", "of", "a", "number", "of", "simple", "composition", "func-", "tions", "applied", "to", "bigrams.", "Applied", "recursively,", "such", "approaches", "can", "then", "easily", "be", "reconciled", "with", "the", "co-occurrence", "based", "word", "level", "representations.", "There", "are", "a", "number", "of", "proposals", "motivating", "such", "recursive", "or", "deep", "composition", "models.", "Notably,", "[3]", "propose", "a", "tensor-based", "model", "for", "semantic", "composition", "and,", "similarly,", "[4]", "develop", "a", "framework", "for", "semantic", "composition", "by", "combining", "dis-", "tributional", "theory", "with", "pregroup", "grammars.", "The", "latter", "framework", "was", "empirically", "evaluated", "and", "supported", "by", "the", "results", "in", "[12].", "More", "recently,", "various", "forms", "of", "recursive", "neural", "networks", "have", "successfully", "been", "used", "for", "semantic", "composition", "and", "related", "tasks", "such", "as", "sentiment", "analysis.", "Such", "models", "include", "recursive", "autoencoders", "[24],", "matrix-vector", "recursive", "neural", "networks", "[25],", "untied", "recursive", "neural", "networks", "[14]", "or", "convolutional", "networks", "[15].", "2.1", "Multilingual", "Embeddings", "Much", "research", "has", "been", "devoted", "to", "the", "task", "of", "inducing", "distributed", "semantic", "representations", "for", "single", "languages.", "In", "particular", "English,", "with", "its", "large", "number", "of", "annotated", "resources,", "has", "enjoyed", "most", "attention.", "Recently,", "progress", "has", "been", "made", "at", "representation", "learning", "for", "languages", "with", "fewer", "available", "resources.", "Klementiev", "et", "al.", "[16]", "described", "a", "form", "of", "multitask", "learning", "on", "word-aligned", "parallel", "data", "to", "transfer", "embeddings", "from", "one", "language", "to", "another.", "Earlier", "work,", "Haghighi", "et", "al.", "[13],", "proposed", "a", "method", "for", "inducing", "cross-lingual", "lexica", "using", "monolingual", "feature", "representations", "and", "a", "small", "initial", "lexicon", "to", "bootstrap", "with.", "This", "approach", "has", "recently", "been", "extended", "by", "[18,", "19],", "who", "developed", "a", "method", "for", "learning", "transformation", "matrices", "to", "convert", "semantic", "vectors", "of", "one", "language", "into", "those", "of", "another.", "Is", "was", "demonstrated", "that", "this", "approach", "can", "be", "applied", "to", "improve", "tasks", "related", "to", "machine", "translation.", "Their", "CBOW", "model", "is", "also", "worth", "noting", "for", "its", "similarities", "to", "the", "composition", "function", "used", "in", "this", "paper.", "Using", "a", "slightly", "different", "approach,", "[29],", "also", "learned", "bilingual", "embeddings", "for", "machine", "translation.", "It", "is", "important", "to", "note", "that,", "unlike", "our", "proposed", "system,", "all", "of", "these", "methods", "require", "word", "aligned", "parallel", "data", "for", "training.", "Two", "recent", "workshop", "papers", "deserve", "mention", "in", "this", "respect.", "Both", "Lauly", "et", "al.", "[17]", "and", "Sarath", "Chan-", "dar", "et", "al.", "[23]", "propose", "methods", "for", "learning", "word", "embeddings", "by", "exploiting", "bilingual", "data,", "not", "unlike", "the", "method", "proposed", "in", "this", "paper.", "Instead", "of", "the", "noise-contrastive", "method", "developed", "in", "this", "paper,", "both", "groups", "of", "authors", "make", "use", "of", "autoencoders", "to", "encode", "monolingual", "representations", "and", "to", "support", "the", "bilingual", "transfer.", "So", "far", "almost", "all", "of", "this", "work", "has", "been", "focused", "on", "learning", "multilingual", "representations", "at", "the", "word", "level.", "As", "distributed", "representations", "of", "larger", "expressions", "have", "been", "shown", "to", "be", "highly", "useful", "for", "a", "number", "of", "tasks,", "it", "seems", "to", "be", "a", "natural", "next", "step", "to", "also", "attempt", "to", "induce", "these", "using", "cross-lingual", "data.", "This", "paper", "provides", "a", "first", "step", "in", "that", "direction.", "3", "Model", "Description", "Language", "acquisition", "in", "humans", "is", "widely", "seen", "as", "grounded", "in", "sensory-motor", "experience", "[22,", "2].", "Based", "on", "this", "idea,", "there", "have", "been", "some", "attempts", "at", "using", "multi-modal", "data", "for", "learning", "better", "vector", "representations", "of", "words", "(e.g.", "[26]).", "Such", "methods,", "however,", "are", "not", "easily", "scalable", "across", "languages", "or", "to", "large", "amounts", "of", "data", "for", "which", "no", "secondary", "or", "tertiary", "representation", "might", "exist.", "We", "abstract", "the", "underlying", "principle", "one", "step", "further", "and", "attempt", "to", "learn", "semantics", "from", "multi-", "lingual", "data.", "The", "idea", "is", "that,", "given", "enough", "parallel", "data,", "a", "shared", "representation", "would", "be", "forced", "to", "capture", "the", "common", "elements", "between", "sentences", "from", "different", "languages.", "What", "two", "parallel", "sentences", "have", "in", "common,", "of", "course,", "is", "the", "semantics", "of", "those", "two", "sentences.", "Using", "this", "data,", "we", "propose", "a", "novel", "method", "for", "learning", "vector", "representations", "at", "the", "word", "level", "and", "beyond.", "3.1", "Bilingual", "Signal", "Exploiting", "the", "semantic", "similarity", "of", "parallel", "sentences", "across", "languages,", "we", "can", "define", "a", "simple", "bilingual", "(and", "trivially", "multilingual)", "error", "function", "as", "follows:", "Given", "a", "compositional", "sentence", "model", "(CVM)", "M4,", "which", "maps", "a", "sentence", "to", "a", "vector,", "we", "can", "train", "a", "second", "CVM", "Mp", "using", "a", "corpus", "C4\\,5", "of", "parallel", "data", "from", "the", "language", "pair", "A,", "B.", "For", "each", "pair", "of", "parallel", "sentences", "(a,b)", "\u20ac", "C4.p,", "we", "attempt", "to", "minimize", "Eaist", "(a,", "b)", "=", "||Groot", "\u2014", "broot", "ll", "(1)", "where", "@,-oo\u00a2", "1s", "the", "vector", "representing", "sentence", "a", "and", "6,4:", "the", "vector", "representing", "sentence", "b.", "3.2.", "The", "BICVM", "Model", "A", "CVM", "learns", "semantic", "representations", "of", "larger", "syntactic", "units", "given", "the", "semantic", "representations", "of", "their", "constituents.", "We", "assume", "individual", "words", "to", "be", "represented", "by", "vectors", "(x", "\u20ac", "R\u00ae).", "Previous", "methods", "employ", "binary", "parse", "trees", "on", "the", "data", "(e.g.", "[14,", "25])", "and", "use", "weighted", "or", "multi-", "plicative", "composition", "functions.", "Under", "such", "a", "setup,", "where", "each", "node", "in", "the", "tree", "is", "terminal", "or", "has", "two", "children", "(p", "\u2014", "co,", "\u20ac1),", "a", "binary", "composition", "function", "could", "take", "the", "following", "form:", "p=", "g(W*[co;", "c1]", "+", "b\u00b0)", "(2)", "where", "[co;", "\u00a21]", "is", "the", "concatenation", "of", "the", "two", "child", "vectors,", "W\u00b0", "\u20ac", "IR?*?\u00a2", "and", "6\u00b0", "\u20ac", "R\u00ae", "the", "encod-", "ing", "matrix", "and", "bias,", "respectively,", "and", "g", "an", "element-wise", "activation", "function", "such", "as", "the", "hyperbolic", "tangent.", "For", "the", "purposes", "of", "evaluation", "the", "bilingual", "signal", "proposed", "above,", "we", "simplify", "this", "com-", "position", "function", "by", "setting", "all", "weight", "matrices", "to", "the", "identity", "and", "all", "biases", "to", "zero.", "Thereby", "the", "CVM", "reduces", "to", "a", "simple", "additive", "composition", "function:", "|a|", "Groot", "=", "S-", "ay", "(3)", "1=0", "Of", "course,", "this", "is", "a", "very", "simplified", "CVM,", "as", "such", "a", "bag-of-words", "approach", "no", "longer", "accounts", "for", "word", "ordering", "and", "other", "effects", "which", "a", "more", "complex", "CVM", "might", "capture.", "However,", "for", "the", "purposes", "of", "this", "evaluation", "(and", "with", "the", "experimental", "evaluation", "in", "mind),", "such", "a", "simplistic", "composition", "function", "should", "be", "sufficient", "to", "evaluate", "the", "novel", "objective", "function", "proposed", "here.", "(0000)", "(oo", "ee)", "(00", "00)", "(00", "oo)", "at", "a2", "a3", "a4", "Figure", "1:", "Description", "of", "a", "bilingual", "model", "with", "parallel", "input", "sentences", "a", "and", "6.", "The", "objective", "function", "of", "this", "model", "is", "to", "minimize", "the", "distance", "between", "the", "sentence", "level", "encoding", "of", "the", "bi-", "text.", "Principally", "any", "composition", "function", "can", "be", "used", "to", "generate", "the", "compositional", "sentence", "level", "representations.", "The", "composition", "function", "is", "represented", "by", "the", "CVM", "boxes", "in", "the", "diagram", "above.", "Using", "this", "additive", "CVM", "we", "want", "to", "optimize", "the", "bilingual", "error", "signal", "defined", "above", "(Eq.", "1).", "For", "the", "moment,", "assume", "that", "M", "4", "is", "a", "perfectly", "trained", "CVM", "such", "that", "a@,oo\u00a2", "represents", "the", "semantics", "of", "the", "sentence", "a.", "Further,", "due", "to", "the", "use", "of", "parallel", "data,", "we", "know", "that", "a", "and", "b", "are", "semantically", "equivalent.", "Hence", "we", "transfer", "the", "semantic", "knowledge", "contained", "in", "M4", "onto", "Mag,", "by", "learning", "944,", "to", "minimize:", "Byi(Ca.p)=", "S>", "Buise(a,b)", "(4)", "(a,b)EC", "4", "B", "Of", "course,", "this", "objective", "function", "assumes", "a", "fully", "trained", "model", "which", "we", "do", "not", "have", "at", "this", "stage.", "While", "this", "can", "be", "a", "useful", "objective", "for", "transferring", "linguistic", "knowledge", "into", "low-resource", "lan-", "guages", "[16],", "this", "precondition", "is", "not", "helpful", "when", "there", "is", "no", "model", "to", "learn", "from", "in", "first", "place.", "We", "resolve", "this", "issue", "by", "jointly", "training", "both", "models", "M", "4", "and", "Mp.", "Applying", "\u00a3;", "to", "parallel", "data", "ensures", "that", "both", "models", "learn", "a", "shared", "representation", "at", "the", "sentence", "level.", "As", "the", "parallel", "input", "sentences", "share", "the", "same", "meaning,", "it", "is", "reasonable", "to", "assume", "that", "mini-", "mizing", "F,,;", "will", "force", "the", "model", "to", "learn", "their", "semantic", "representation.", "Let", "04;", "=", "004,", "UO@m,.", "The", "joint", "objective", "function", "J(6;;)", "thus", "becomes:", "A", "J(0y:)", "=", "Evi(Ca,B)", "+", "5", "li@eill\u201d", "(3)", "where", "A||03;||1", "is", "the", "Lz", "regularization", "term.", "It", "is", "apparent", "that", "this", "joint", "objective", "J(@,;)", "is", "degenerate.", "The", "models", "could", "learn", "to", "reduce", "all", "embeddings", "and", "composition", "weights", "to", "zero", "and", "thereby", "minimize", "the", "objective", "function.", "We", "ad-", "dress", "this", "issue", "by", "employing", "a", "form", "of", "contrastive", "estimation", "penalizing", "small", "distances", "between", "non-parallel", "sentence", "pairs.", "For", "every", "pair", "of", "parallel", "sentences", "(a,b)", "we", "sample", "a", "number", "of", "ad-", "ditional", "sentences", "n", "\u20ac", "Cg,", "which\u2014with", "high", "probability\u2014are", "not", "exact", "translations", "of", "a.", "This", "is", "comparable", "to", "the", "second", "term", "of", "the", "loss", "function", "of", "a", "large", "margin", "nearest", "neighbour", "classifier", "(see", "Eq.", "12", "in", "[28]):", "noise", "(a,", "b,", "n)", "=", "[1", "+", "aust", "(a,", "b)", "\u2014_", "Eaist(,", "ny,", "(6)", "where", "[x],", "=", "maz(x,0)", "denotes", "the", "standard", "hinge", "loss.", "Thus,", "the", "final", "objective", "function", "to", "minimize", "for", "the", "BICVM", "model", "is:", "k", "X", "J", "(Obi)", "=", "S-", "(>:", "Enoise", "(a,", "b,", "v0)", "+", "5", "lel\u201d", "(7)", "(a,b)EC4,B", "\\i=1", "3.3", "Model", "Learning", "Given", "the", "objective", "function", "as", "defined", "above,", "model", "learning", "can", "employ", "the", "same", "techniques", "as", "any", "monolingual", "CVM.", "In", "particular,", "as", "the", "objective", "function", "is", "differentiable,", "we", "can", "use", "standard", "gradient", "descent", "techniques", "such", "as", "stochastic", "gradient", "descent,", "L-BFGS", "or", "the", "adaptive", "gradient", "algorithm", "AdaGrad", "[8].", "Within", "each", "monolingual", "CVM,", "we", "use", "backpropagation", "through", "structure", "after", "applying", "the", "joint", "error", "to", "each", "sentence", "level", "node.", "4", "Experiments", "4.1", "Data", "and", "Parameters", "All", "model", "weights", "were", "randomly", "initialised", "using", "a", "Gaussian", "distribution.", "There", "are", "a", "number", "of", "parameters", "that", "can", "influence", "model", "training.", "We", "selected", "the", "following", "values", "for", "simplicity", "and", "comparability", "with", "prior", "work.", "In", "future", "work", "we", "will", "investigate", "the", "effect", "of", "these", "parameters", "in", "greater", "detail.", "L2", "regularization", "(1),", "step-size", "(0.1),", "number", "of", "noise", "elements", "(50),", "margin", "size", "(50),", "embedding", "dimensionality", "(d=40).", "The", "noise", "elements", "samples", "were", "randomly", "drawn", "from", "the", "corpus", "at", "training", "time,", "individually", "for", "each", "training", "sample", "and", "epoch.", "We", "use", "the", "Europarl", "corpus", "(v7)!", "for", "training", "the", "bilingual", "model.", "The", "corpus", "was", "pre-processed", "using", "the", "set", "of", "tools", "provided", "by", "cdec?", "[9]", "for", "tokenizing", "and", "lowercasing", "the", "data.", "Further,", "all", "empty", "sentences", "as", "well", "as", "their", "translations", "were", "removed", "from", "the", "corpus.", "We", "present", "results", "from", "two", "experiments.", "The", "BICVM", "model", "was", "trained", "on", "500k", "sentence", "pairs", "of", "the", "English-German", "parallel", "section", "of", "the", "Europarl", "corpus.", "The", "BICVM-+", "model", "used", "this", "dataset", "in", "combination", "with", "another", "500k", "parallel", "sentences", "from", "the", "English-French", "section", "of", "the", "corpus,", "resulting", "in", "1", "million", "English", "sentences,", "each", "paired", "up", "with", "either", "a", "German", "or", "a", "French", "sentence.", "Each", "language\u2019s", "vocabulary", "used", "distinct", "encodings", "to", "avoid", "potential", "overlap.", "The", "motivation", "behind", "BICVM-+", "is", "to", "investigate", "whether", "we", "can", "learn", "better", "embeddings", "by", "intro-", "ducing", "additional", "data", "in", "a", "different", "language.", "This", "is", "similar", "to", "prior", "work", "in", "machine", "translation", "where", "English", "was", "used", "as", "a", "pivot", "for", "translation", "between", "low-resource", "languages", "[5].", "We", "use", "the", "adaptive", "gradient", "method,", "AdaGrad", "[8],", "for", "updating", "the", "weights", "of", "our", "models,", "and", "ter-", "minate", "training", "after", "50", "iterations.", "Earlier", "experiments", "indicated", "that", "the", "BICVM", "model", "converges", "faster", "than", "the", "BICVM+", "model,", "but", "we", "report", "results", "on", "the", "same", "number", "of", "iterations", "for", "better", "comparability?.", "4.2", "Cross-Lingual", "Document", "Classification", "We", "evaluate", "our", "model", "using", "the", "cross-lingual", "document", "classification", "(CLDC)", "task", "of", "Klementiev", "et", "al.", "[16].", "This", "task", "involves", "learning", "language", "independent", "embeddings", "which", "are", "then", "used", "for", "document", "classification", "across", "the", "English-German", "language", "pair.", "For", "this,", "CLDC", "employs", "a", "par-", "ticular", "kind", "of", "supervision,", "namely", "using", "supervised", "training", "data", "in", "one", "language", "and", "evaluating", "without", "supervision", "in", "another.", "Thus,", "CLDC", "is", "a", "good", "task", "for", "establishing", "whether", "our", "learned", "representations", "are", "semantically", "useful", "across", "multiple", "languages.", "We", "follow", "the", "experimental", "setup", "described", "in", "[16],", "with", "the", "exception", "that", "we", "learn", "our", "embeddings", "using", "solely", "the", "Europarl", "data", "and", "only", "use", "the", "Reuters", "RCV1/RCV2", "corpora", "during", "the", "classifier", "training", "and", "testing", "stages.", "Each", "document", "in", "the", "classification", "task", "is", "represented", "by", "the", "average", "\u2018nttp://www.statmt", ".org/europarl/", "*https://github.com/redpony/cdec", ">These", "numbers", "were", "updated", "following", "comments", "in", "the", "ICLR", "open", "review", "process.", "Results", "for", "other", "dimensionalities", "and", "our", "source", "code", "for", "our", "model", "are", "available", "at", "http://www.", "karlmoritz.com.", "Model", "en\u2014de", "de\u2014-en", "Majority", "Class", "46.8", "46.8", "Glossed", "65.1", "68.6", "MT", "68.1", "67.4", "I-Matrix", "77.6", "71.1", "BICVM", "83.7", "71.4", "BICVM+", "86.2", "76.9", "Table", "1:", "Classification", "accuracy", "for", "training", "on", "English", "and", "German", "with", "1000", "labeled", "examples.", "Cross-lingual", "compositional", "representations", "(BIC", "VM", "and", "BICVM-4),", "cross-lingual", "representations", "using", "learned", "embeddings", "and", "an", "interaction", "matrix", "(I-Matrix)", "[16]", "translated", "(MT)", "and", "glossed", "(Glossed)", "words,", "and", "the", "majority", "class", "baseline.", "The", "MT", "and", "Glossed", "results", "are", "also", "taken", "from", "Klementiev", "et", "al.", "[16].", "Classification", "Accuracy", "(%)", "100", "=200", "\u00a96500)", "\u00ab\u00a91000", "5000", "10000", "100", "200", "\u00a7\u00a9500", "=", "61000", "5000", "10000", "Training", "Documents", "(en)", "Training", "Documents", "(de)", "\u2014@", "BICVM", "\u2014\u00ae", "BIC", "VM+", "\u2014e\u2014", "I-Matrix", "\u20144\u00ab\u2014", "MT", "\u2014*\u2014", "Glossed", "-", "-", "-", "Majority", "Class", "Figure", "2:", "Classification", "accuracy", "for", "a", "number", "of", "models", "(see", "Table", "1", "for", "model", "descriptions).", "The", "left", "chart", "shows", "results", "for", "these", "models", "when", "trained", "on", "English", "data", "and", "evaluated", "on", "German", "data,", "the", "right", "chart", "vice", "versa.", "of", "the", "d-dimensional", "representations", "of", "all", "its", "sentences.", "We", "train", "the", "multiclass", "classifier", "using", "the", "same", "settings", "and", "implementation", "of", "the", "averaged", "perceptron", "classifier", "[6]", "as", "used", "in", "[16].", "We", "ran", "the", "CLDC", "experiments", "both", "by", "training", "on", "English", "and", "testing", "on", "German", "documents", "and", "vice", "versa.", "Using", "the", "data", "splits", "provided", "by", "[16],", "we", "used", "varying", "training", "data", "sizes", "from", "100", "to", "10,000", "documents", "for", "training", "the", "multiclass", "classifier.", "The", "results", "of", "this", "task", "across", "training", "sizes", "are", "shown", "in", "Figure", "2.", "Table", "1", "shows", "the", "results", "for", "training", "on", "1,000", "documents.", "Both", "models,", "BICVM", "and", "BICVM+", "outperform", "all", "prior", "work", "on", "this", "task.", "Further,", "the", "BICVM+", "model", "outperforms", "the", "BICVM", "model,", "indicating", "the", "usefulness", "of", "adding", "training", "data", "even", "from", "a", "separate", "language", "pair.", "4.3", "Visualization", "While", "the", "CLDC", "experiment", "focused", "on", "establishing", "the", "semantic", "content", "of", "the", "sentence", "level", "representations,", "we", "also", "want", "to", "briefly", "investigate", "the", "induced", "word", "embeddings.", "In", "particular", "the", "BICVM+", "model", "is", "interesting", "for", "that", "purpose,", "as", "it", "allows", "us", "to", "evaluate", "our", "approach", "of", "using", "English", "as", "a", "pivot", "language", "in", "a", "multilingual", "setup.", "In", "Figure", "3", "we", "show", "the", "t-SNE", "projections", "for", "a", "number", "of", "English,", "French", "and", "German", "words.", "Of", "particular", "interest", "should", "be", "the", "right", "chart,", "which", "highlights", "bilingual", "embeddings", "between", "French", "and", "German", "words.", "Even", "though", "the", "model", "did", "not", "use", "any", "parallel", "French-German", "data", "during", "training,", "it", "still", "managed", "to", "learn", "semantic", "word-word", "similarity", "across", "these", "two", "languages.", "t", "/", "Maeexs,", "ee", "aera.", "abr", "Cirnaaaiaa,", ".", "aUugHatyt", ";", "adhaay", "lyon", "Janyat", "Ac", "HRSA", "i", "Vite", "t=", "5", "8", "-", "ne", "nBRORS.", "wear.", "GORA", "ae", "\u201cHERR:", "septembre", "ia", "sans", "yi", "september", "*", "=", "Star", "Figure", "3:", "The", "left", "scatter", "plot", "shows", "t-SNE", "projections", "for", "a", "weekdays", "in", "all", "three", "languages", "using", "the", "representations", "learned", "in", "the", "BIC", "VM+", "model.", "Even", "though", "the", "model", "did", "not", "use", "any", "parallel", "French-German", "data", "during", "training,", "it", "still", "learns", "semantic", "similarity", "between", "these", "two", "languages", "using", "English", "as", "a", "pivot.", "To", "highlight", "this,", "the", "right", "plot", "shows", "another", "set", "of", "words", "(months", "of", "the", "year)", "using", "only", "the", "German", "and", "French", "words.", "5", "Conclusions", "With", "this", "paper", "we", "have", "proposed", "a", "novel", "method", "for", "inducing", "cross-lingual", "distributed", "represen-", "tations", "for", "compositional", "semantics.", "Using", "a", "very", "simple", "method", "for", "semantic", "composition,", "we", "nevertheless", "managed", "to", "obtain", "state", "of", "the", "art", "results", "on", "the", "CLDC", "task,", "specifically", "designed", "to", "evaluate", "semantic", "transfer", "across", "languages.", "After", "extending", "our", "approach", "to", "include", "multilingual", "training", "data", "in", "the", "BIC", "VM+", "model,", "we", "were", "able", "to", "demonstrate", "that", "adding", "additional", "languages", "further", "improves", "the", "model.", "Furthermore,", "using", "some", "qualitative", "experiments", "and", "visualizations,", "we", "showed", "that", "our", "approach", "also", "allows", "us", "to", "learn", "semantically", "related", "embeddings", "across", "languages", "without", "any", "direct", "training", "data.", "Our", "approach", "provides", "great", "flexibility", "in", "training", "data", "and", "requires", "little", "to", "no", "annotation.", "Hav-", "ing", "demonstrated", "the", "successful", "training", "of", "semantic", "representations", "using", "sentence", "aligned", "data,", "a", "plausible", "next", "step", "is", "to", "attempt", "training", "using", "document-aligned", "data", "or", "even", "corpora", "of", "comparable", "documents.", "This", "may", "provide", "even", "greater", "possibilities", "for", "working", "with", "low-resource", "languages.", "In", "the", "same", "vein,", "the", "success", "of", "our", "pivoting", "experiments", "suggest", "further", "work.", "Unlike", "other", "pivot", "approaches,", "it", "is", "easy", "to", "extend", "our", "model", "to", "have", "multiple", "pivot", "languages.", "Thus", "some", "pivots", "could", "preserve", "different", "aspects", "such", "as", "case,", "gender", "etc.,", "and", "overcome", "other", "issues", "related", "to", "having", "a", "single", "pivot", "language.", "As", "we", "have", "achieved", "the", "results", "in", "this", "paper", "with", "a", "relatively", "simple", "CVM,", "it", "would", "also", "be", "inter-", "esting", "to", "establish", "whether", "our", "objective", "function", "can", "be", "used", "in", "combination", "with", "more", "complex", "compositional", "vector", "models", "such", "as", "MV-RNN", "[25]", "or", "tensor-based", "approaches,", "to", "see", "whether", "these", "can", "further", "improve", "results", "on", "both", "mono-", "and", "multilingual", "tasks", "when", "used", "in", "conjunction", "with", "our", "cross-lingual", "objective", "function.", "Related", "to", "this,", "we", "will", "also", "apply", "our", "model", "to", "a", "wider", "variety", "of", "tasks", "including", "machine", "translation", "and", "multilingual", "information", "extraction.", "Acknowledgements", "The", "authors", "would", "like", "to", "thank", "Alexandre", "Klementiev", "and", "his", "co-authors", "for", "making", "their", "datasets", "and", "averaged", "perceptron", "implementation", "available,", "as", "well", "as", "answering", "a", "number", "of", "questions", "related", "to", "their", "work", "on", "this", "task.", "This", "work", "was", "supported", "by", "EPSRC", "grant", "EP/K036580/1", "and", "a", "Xerox", "Foundation", "Award.", "References", "[1]", "[10]", "[11]", "[12]", "[13]", "[14]", "[15]", "[16]", "[17]", "[18]", "[19]", "[20]", "[21]", "[22]", "Marco", "Baroni", "and", "Roberto", "Zamparelli.", "Nouns", "are", "vectors,", "adjectives", "are", "matrices:", "Represent-", "ing", "adjective-noun", "constructions", "in", "semantic", "space.", "In", "Proceedings", "of", "EMNLP,", "2010.", "Paul", "Bloom.", "Precis", "of", "how", "children", "learn", "the", "meanings", "of", "words.", "Behavioral", "and", "Brain", "Sciences,", "24:1095\u20141103,", "2001.", "Stephen", "Clark", "and", "Stephen", "Pulman.", "Combining", "symbolic", "and", "distributional", "models", "of", "mean-", "ing.", "In", "Proceedings", "of", "AAAI", "Spring", "Symposium", "on", "Quantum", "Interaction.", "AAAI", "Press,", "2007.", "Bob", "Coecke,", "Mehrnoosh", "Sadrzadeh,", "and", "Stephen", "Clark.", "Mathematical", "foundations", "for", "a", "com-", "positional", "distributional", "model", "of", "meaning.", "Lambek", "Festschrift.", "Linguistic", "Analysis,", "36:345\u2014", "384,", "2010.", "Trevor", "Cohn", "and", "Mirella", "Lapata.", "Machine", "translation", "by", "triangulation:", "Making", "effective", "use", "of", "multi-parallel", "corpora.", "In", "Proceedings", "of", "ACL,", "pages", "728-735,", "Prague,", "Czech", "Republic,", "June", "2007.", "Association", "for", "Computational", "Linguistics.", "Michael", "Collins.", "Discriminative", "training", "methods", "for", "hidden", "markov", "models:", "Theory", "and", "experiments", "with", "perceptron", "algorithms.", "In", "Proceedings", "of", "ACL-EMNLP.", "Association", "for", "Computational", "Linguistics,", "2002.", "doi:", "10.3115/1118693.1118694.", "Ronan", "Collobert", "and", "Jason", "Weston.", "A", "unified", "architecture", "for", "natural", "language", "processing:", "Deep", "neural", "networks", "with", "multitask", "learning.", "In", "Proceedings", "of", "ICML,", "2008.", "John", "Duchi,", "Elad", "Hazan,", "and", "Yoram", "Singer.", "Adaptive", "subgradient", "methods", "for", "online", "learning", "and", "stochastic", "optimization.", "Journal", "of", "Machine", "Learning", "Research,", "12:2121\u20142159,", "July", "2011.", "ISSN", "1532-4435.", "Chris", "Dyer,", "Adam", "Lopez,", "Juri", "Ganitkevitch,", "Johnathan", "Weese,", "Ferhan", "Ture,", "Phil", "Blunsom,", "Hendra", "Setiawan,", "Vladimir", "Eidelman,", "and", "Philip", "Resnik.", "cdec:", "A", "decoder,", "alignment,", "and", "learning", "framework", "for", "finite-state", "and", "context-free", "translation", "models.", "In", "Proceedings", "of", "ACE,", "2010.", "K.", "Erk", "and", "S.", "Pad\u00e9.", "A", "structured", "vector", "space", "model", "for", "word", "meaning", "in", "context.", "Proceedings", "of", "EMNEP,", "2008.", "J.R.", "Firth.", "A", "synopsis", "of", "linguistic", "theory", "1930-55.", "1952-59:1\u201432,", "1957.", "Edward", "Grefenstette", "and", "Mehrnoosh", "Sadrzadeh.", "Experimental", "support", "for", "a", "categorical", "com-", "positional", "distributional", "model", "of", "meaning.", "In", "Proceedings", "of", "EMNLP,", "2011.", "Aria", "Haghighi,", "Percy", "Liang,", "Taylor", "Berg-Kirkpatrick,", "and", "Dan", "Klein.", "Learning", "bilingual", "lexicons", "from", "monolingual", "corpora.", "In", "Proceedings", "of", "ACL-HLT,", "2008.", "Karl", "Moritz", "Hermann", "and", "Phil", "Blunsom.", "The", "Role", "of", "Syntax", "in", "Vector", "Space", "Models", "of", "Compositional", "Semantics.", "In", "Proceedings", "of", "ACL,", "2013.", "Nal", "Kalchbrenner", "and", "Phil", "Blunsom.", "Recurrent", "convolutional", "neural", "networks", "for", "discourse", "compositionality.", "In", "Proceedings", "of", "the", "Workshop", "on", "Continuous", "Vector", "Space", "Models", "and", "their", "Compositionality,", "2013.", "Alexandre", "Klementiev,", "Ivan", "Titov,", "and", "Binod", "Bhattarai.", "Inducing", "crosslingual", "distributed", "representations", "of", "words.", "In", "Proceedings", "of", "COLING,", "2012.", "Stanislas", "Lauly,", "Alex", "Boulanger,", "and", "Hugo", "Larochelle.", "Learning", "multilingual", "word", "represen-", "tations", "using", "a", "bag-of-words", "autoencoder.", "In", "Deep", "Learning", "Workshop", "at", "NIPS,", "2013.", "Tomas", "Mikolov,", "Kai", "Chen,", "Greg", "Corrado,", "and", "Jeffrey", "Dean.", "Efficient", "estimation", "of", "word", "representations", "in", "vector", "space.", "CoRR,", "2013.", "Tomas", "Mikolov,", "Quoc", "V.", "Le,", "and", "Ilya", "Sutskever.", "Exploiting", "similarities", "among", "languages", "for", "machine", "translation.", "CoRR,", "2013.", "Toma\u00e9", "Mikoloy,", "Martin", "Karafidt,", "Luka8", "Burget,", "Jan", "Cernocky,", "and", "Sanjeev", "Khudanpur.", "Re-", "current", "neural", "network", "based", "language", "model.", "In", "Proceedings", "of", "INTERSPEECH,", "2010.", "Jeff", "Mitchell", "and", "Mirella", "Lapata.", "Vector-based", "models", "of", "semantic", "composition.", "In", "In", "Pro-", "ceedings", "of", "ACL,", "2008.", "D.", "Roy.", "Grounded", "spoken", "language", "acquisition:", "Experiments", "in", "word", "learning.", "[EEE", "Trans-", "actions", "on", "Multimedia,", "5(2):197\u2014209,", "June", "2003.", "ISSN", "1520-9210.", "doi:", "10.1109/TMM.2003.", "811618.", "[23]", "[24]", "[25]", "[26]", "[27]", "[28]", "[29]", "A", "P", "Sarath", "Chandar,", "M", "Khapra", "Mitesh,", "B", "Ravindran,", "Vikas", "Raykar,", "and", "Amrita", "Saha.", "Multi-", "lingual", "deep", "learning.", "In", "Deep", "Learning", "Workshop", "at", "NIPS,", "2013.", "Richard", "Socher,", "Jeffrey", "Pennington,", "Eric", "H.", "Huang,", "Andrew", "Y.", "Ng,", "and", "Christopher", "D.", "Man-", "ning.", "Semi-supervised", "recursive", "autoencoders", "for", "predicting", "sentiment", "distributions.", "In", "Pro-", "ceedings", "of", "EMNLP,", "2011.", "Richard", "Socher,", "Brody", "Huval,", "Christopher", "D.", "Manning,", "and", "Andrew", "Y.", "Ng.", "Semantic", "compo-", "sitionality", "through", "recursive", "matrix-vector", "spaces.", "In", "Proceedings", "of", "EMNLP-CoNLL,", "pages", "1201-1211,", "2012.", "Nitish", "Srivastava", "and", "Ruslan", "Salakhutdinov.", "Multimodal", "learning", "with", "deep", "boltzmann", "ma-", "chines.", "In", "Proceedings", "of", "NIPS.", "2012.", "P.", "D.", "Tumey", "and", "P.", "Pantel.", "From", "frequency", "to", "meaning:", "Vector", "space", "models", "of", "semantics.", "Journal", "of", "Artificial", "Intelligence", "Research,", "37(1):141-188,", "2010.", "Kilian", "Q.", "Weinberger", "and", "Lawrence", "K.", "Saul.", "Distance", "metric", "learning", "for", "large", "margin", "nearest", "neighbor", "classification.", "Journal", "of", "Machine", "Learning", "Research,", "10:207\u2014244,", "June", "2009.", "ISSN", "1532-4435.", "Will", "Y.", "Zou,", "Richard", "Socher,", "Daniel", "Cer,", "and", "Christopher", "D.", "Manning.", "Bilingual", "word", "em-", "beddings", "for", "phrase-based", "machine", "translation.", "In", "Proceedings", "of", "EMNLP,", "2013."], "positions": [[519, 463, 898, 527], [919, 463, 1266, 513], [1287, 463, 1776, 527], [1798, 463, 2031, 513], [1018, 547, 1189, 596], [1210, 545, 1532, 610], [914, 799, 995, 828], [1007, 798, 1127, 828], [1140, 799, 1285, 828], [1287, 799, 1386, 828], [1398, 798, 1468, 827], [1480, 799, 1635, 828], [997, 846, 1192, 882], [1203, 845, 1239, 873], [1248, 845, 1414, 882], [1426, 845, 1552, 874], [1101, 890, 1273, 927], [1285, 890, 1321, 918], [1330, 890, 1448, 919], [1080, 936, 1207, 970], [1220, 936, 1294, 965], [1311, 936, 1398, 971], [1411, 937, 1470, 965], [709, 979, 1214, 1020], [1226, 979, 1840, 1020], [1182, 1148, 1367, 1183], [600, 1272, 784, 1300], [800, 1272, 1050, 1309], [1068, 1272, 1104, 1300], [1118, 1272, 1260, 1309], [1278, 1281, 1326, 1300], [1344, 1281, 1360, 1300], [1377, 1272, 1491, 1300], [1508, 1281, 1575, 1309], [1592, 1276, 1623, 1300], [1640, 1272, 1756, 1300], [1773, 1272, 1950, 1301], [599, 1318, 809, 1355], [827, 1318, 964, 1346], [981, 1318, 1079, 1346], [1099, 1318, 1156, 1346], [1172, 1318, 1295, 1355], [1313, 1318, 1344, 1346], [1361, 1319, 1441, 1346], [1461, 1319, 1507, 1355], [1525, 1318, 1720, 1355], [1737, 1318, 1805, 1346], [1823, 1318, 1949, 1355], [599, 1363, 761, 1400], [780, 1372, 810, 1391], [827, 1363, 897, 1391], [913, 1372, 943, 1391], [959, 1363, 1119, 1400], [1134, 1363, 1329, 1391], [1345, 1363, 1435, 1391], [1451, 1363, 1595, 1391], [1610, 1363, 1792, 1391], [1808, 1363, 1908, 1391], [1923, 1363, 1948, 1391], [600, 1413, 651, 1437], [667, 1409, 813, 1438], [828, 1409, 858, 1437], [873, 1409, 1001, 1437], [1015, 1409, 1274, 1446], [1292, 1409, 1467, 1437], [1481, 1409, 1730, 1446], [1746, 1409, 1822, 1438], [1836, 1418, 1949, 1446], [599, 1455, 700, 1483], [713, 1455, 744, 1483], [758, 1464, 848, 1492], [861, 1456, 939, 1483], [952, 1455, 1041, 1483], [1063, 1456, 1177, 1483], [1190, 1455, 1274, 1483], [1286, 1455, 1339, 1483], [1355, 1455, 1460, 1483], [1473, 1455, 1542, 1483], [1556, 1455, 1790, 1492], [1805, 1455, 1949, 1483], [599, 1500, 848, 1537], [863, 1509, 919, 1528], [934, 1500, 1134, 1537], [1147, 1500, 1186, 1528], [1201, 1500, 1320, 1537], [1334, 1504, 1365, 1528], [1380, 1509, 1396, 1528], [1409, 1500, 1535, 1528], [1548, 1500, 1584, 1528], [1595, 1500, 1804, 1537], [1818, 1500, 1948, 1537], [600, 1546, 678, 1574], [696, 1546, 769, 1574], [786, 1555, 816, 1574], [834, 1546, 993, 1574], [1009, 1546, 1148, 1583], [1176, 1546, 1216, 1574], [1231, 1546, 1281, 1574], [1297, 1555, 1380, 1574], [1395, 1546, 1476, 1580], [1494, 1546, 1576, 1574], [1590, 1546, 1643, 1574], [1659, 1546, 1737, 1574], [1754, 1555, 1821, 1574], [1822, 1546, 1950, 1574], [601, 1601, 721, 1620], [737, 1592, 768, 1620], [782, 1592, 866, 1620], [880, 1601, 920, 1620], [934, 1592, 1068, 1629], [1084, 1592, 1189, 1620], [1204, 1592, 1380, 1621], [1393, 1592, 1642, 1629], [1659, 1601, 1759, 1620], [1775, 1592, 1947, 1629], [600, 1638, 653, 1665], [664, 1637, 806, 1665], [817, 1637, 901, 1665], [912, 1641, 972, 1665], [985, 1637, 1167, 1674], [1179, 1637, 1220, 1674], [1231, 1637, 1396, 1674], [1409, 1646, 1425, 1665], [1436, 1637, 1559, 1665], [1570, 1637, 1618, 1665], [1628, 1637, 1763, 1674], [1774, 1637, 1949, 1665], [599, 1683, 848, 1720], [860, 1683, 891, 1711], [903, 1692, 919, 1711], [930, 1683, 1131, 1720], [1143, 1687, 1235, 1720], [1252, 1683, 1316, 1712], [1326, 1683, 1417, 1711], [1418, 1683, 1535, 1711], [1548, 1687, 1578, 1711], [1590, 1683, 1691, 1720], [1703, 1683, 1817, 1711], [1827, 1683, 1948, 1711], [600, 1729, 687, 1766], [702, 1733, 733, 1757], [747, 1729, 867, 1766], [882, 1733, 1037, 1757], [1053, 1729, 1110, 1757], [1124, 1729, 1287, 1757], [1300, 1738, 1373, 1757], [1388, 1733, 1418, 1757], [1433, 1733, 1574, 1757], [1587, 1729, 1687, 1757], [1702, 1738, 1750, 1757], [1764, 1733, 1815, 1757], [1830, 1729, 1949, 1766], [600, 1774, 691, 1802], [701, 1778, 752, 1802], [761, 1774, 912, 1811], [923, 1774, 1006, 1802], [1017, 1774, 1204, 1811], [1221, 1775, 1273, 1802], [1284, 1774, 1368, 1802], [1378, 1774, 1439, 1802], [1449, 1783, 1503, 1802], [1511, 1774, 1761, 1811], [1773, 1783, 1821, 1802], [1832, 1783, 1948, 1802], [600, 1820, 702, 1857], [714, 1820, 905, 1849], [918, 1820, 975, 1848], [989, 1820, 1078, 1857], [1091, 1820, 1173, 1848], [1185, 1824, 1215, 1848], [1229, 1829, 1245, 1848], [1257, 1820, 1470, 1857], [1482, 1820, 1633, 1848], [1634, 1820, 1872, 1848], [1884, 1820, 1950, 1848], [600, 1866, 700, 1894], [712, 1875, 759, 1894], [771, 1866, 957, 1903], [969, 1866, 1018, 1894], [1029, 1866, 1154, 1903], [1157, 1870, 1258, 1894], [1270, 1866, 1305, 1894], [1315, 1866, 1364, 1894], [1378, 1870, 1426, 1894], [1445, 1866, 1572, 1900], [1585, 1866, 1626, 1903], [1639, 1866, 1814, 1903], [1826, 1866, 1950, 1903], [600, 1920, 725, 1948], [739, 1911, 775, 1939], [786, 1911, 923, 1948], [937, 1911, 1085, 1948], [1098, 1911, 1177, 1948], [1192, 1920, 1239, 1939], [1253, 1911, 1316, 1939], [1330, 1911, 1391, 1939], [1404, 1920, 1459, 1939], [1472, 1911, 1574, 1939], [1588, 1911, 1684, 1939], [1699, 1911, 1948, 1948], [600, 1957, 661, 1985], [677, 1961, 798, 1994], [816, 1957, 960, 1985], [977, 1957, 1187, 1994], [1206, 1966, 1306, 1985], [1324, 1957, 1487, 1994], [1505, 1957, 1553, 1985], [1569, 1957, 1668, 1985], [1685, 1966, 1725, 1985], [1741, 1957, 1865, 1994], [1882, 1957, 1950, 1985], [600, 2012, 646, 2031], [649, 2003, 757, 2031], [452, 2182, 471, 2216], [525, 2182, 794, 2217], [450, 2303, 635, 2331], [644, 2303, 893, 2340], [905, 2303, 941, 2331], [948, 2303, 1031, 2331], [1034, 2312, 1107, 2331], [1117, 2303, 1318, 2340], [1328, 2303, 1419, 2340], [1429, 2303, 1504, 2331], [1514, 2307, 1545, 2331], [1556, 2303, 1679, 2332], [1688, 2303, 1761, 2340], [1771, 2303, 1863, 2332], [1875, 2303, 1911, 2331], [1918, 2303, 2098, 2340], [450, 2348, 513, 2376], [527, 2348, 631, 2376], [644, 2348, 793, 2385], [806, 2348, 972, 2385], [986, 2348, 1075, 2376], [1096, 2348, 1271, 2377], [1286, 2348, 1482, 2385], [1497, 2348, 1532, 2376], [1543, 2348, 1600, 2376], [1615, 2348, 1765, 2385], [1778, 2348, 1899, 2376], [1912, 2348, 2099, 2376], [450, 2394, 713, 2431], [729, 2394, 813, 2422], [828, 2394, 984, 2431], [999, 2394, 1056, 2422], [1071, 2403, 1220, 2431], [1234, 2394, 1384, 2422], [1399, 2394, 1467, 2431], [1493, 2394, 1552, 2428], [1568, 2394, 1643, 2429], [1667, 2394, 1855, 2431], [1869, 2394, 1953, 2422], [1965, 2394, 2018, 2422], [2035, 2394, 2099, 2422], [451, 2440, 612, 2477], [628, 2444, 658, 2468], [674, 2440, 755, 2468], [771, 2440, 946, 2468], [962, 2440, 1122, 2468], [1138, 2440, 1174, 2468], [1187, 2440, 1282, 2477], [1297, 2444, 1465, 2474], [1484, 2440, 1625, 2477], [1640, 2449, 1674, 2468], [1691, 2444, 1722, 2468], [1738, 2440, 1828, 2477], [1843, 2440, 2018, 2468], [2033, 2449, 2098, 2477], [449, 2485, 631, 2513], [645, 2489, 676, 2513], [690, 2485, 770, 2513], [786, 2485, 859, 2513], [874, 2494, 905, 2513], [921, 2485, 1080, 2513], [1095, 2485, 1225, 2522], [1240, 2494, 1274, 2513], [1286, 2485, 1466, 2522], [1479, 2485, 1630, 2513], [1645, 2485, 1704, 2520], [1730, 2485, 1769, 2519], [1786, 2485, 1812, 2519], [1832, 2485, 1877, 2519], [1896, 2485, 1941, 2519], [1957, 2485, 2005, 2519], [2021, 2485, 2096, 2520], [450, 2531, 490, 2559], [504, 2531, 554, 2559], [568, 2540, 651, 2559], [665, 2531, 737, 2559], [752, 2540, 768, 2559], [783, 2531, 895, 2559], [911, 2531, 1009, 2559], [1023, 2531, 1059, 2559], [1070, 2531, 1154, 2559], [1167, 2531, 1220, 2559], [1235, 2531, 1363, 2559], [1377, 2540, 1416, 2559], [1430, 2531, 1622, 2568], [1636, 2531, 1789, 2568], [1802, 2531, 1983, 2568], [1998, 2540, 2097, 2559], [450, 2577, 624, 2614], [639, 2577, 696, 2605], [708, 2577, 899, 2614], [911, 2577, 991, 2605], [1003, 2577, 1128, 2614], [1141, 2577, 1204, 2605], [1217, 2577, 1431, 2605], [1443, 2577, 1616, 2614], [1630, 2577, 1670, 2614], [1683, 2586, 1771, 2605], [1774, 2586, 1819, 2605], [1821, 2577, 2021, 2605], [2033, 2586, 2098, 2614], [449, 2622, 646, 2650], [660, 2626, 688, 2650], [700, 2622, 749, 2650], [761, 2622, 844, 2650], [856, 2622, 933, 2651], [948, 2622, 1008, 2656], [1025, 2622, 1083, 2656], [450, 2693, 614, 2730], [630, 2693, 714, 2721], [727, 2702, 767, 2721], [781, 2693, 1014, 2730], [1029, 2693, 1173, 2721], [1187, 2693, 1436, 2730], [1451, 2693, 1573, 2721], [1588, 2702, 1628, 2721], [1642, 2693, 1850, 2730], [1864, 2693, 1932, 2721], [1945, 2693, 2036, 2721], [2050, 2693, 2099, 2721], [450, 2739, 663, 2776], [674, 2739, 758, 2767], [768, 2739, 889, 2767], [901, 2748, 941, 2767], [951, 2739, 1035, 2767], [1045, 2739, 1123, 2768], [1132, 2739, 1381, 2776], [1393, 2739, 1470, 2776], [1487, 2740, 1642, 2773], [1655, 2739, 1676, 2767], [1687, 2748, 1810, 2776], [1822, 2739, 1934, 2776], [1944, 2739, 2005, 2767], [2015, 2739, 2099, 2767], [450, 2788, 511, 2812], [525, 2784, 639, 2812], [654, 2784, 689, 2812], [700, 2784, 784, 2812], [798, 2784, 906, 2812], [918, 2784, 957, 2812], [970, 2784, 1132, 2812], [1147, 2793, 1177, 2812], [1192, 2784, 1274, 2812], [1287, 2784, 1378, 2812], [1394, 2793, 1410, 2812], [1422, 2784, 1558, 2821], [1571, 2784, 1607, 2812], [1617, 2784, 1741, 2821], [1754, 2793, 1879, 2821], [1893, 2784, 1965, 2812], [1979, 2784, 2099, 2821], [450, 2830, 518, 2858], [529, 2834, 556, 2858], [566, 2830, 615, 2858], [626, 2834, 766, 2858], [776, 2830, 854, 2859], [863, 2839, 897, 2858], [905, 2830, 1026, 2867], [1036, 2830, 1136, 2858], [1146, 2830, 1236, 2858], [1245, 2830, 1284, 2858], [1293, 2830, 1445, 2867], [1455, 2830, 1486, 2858], [1497, 2830, 1570, 2858], [1580, 2830, 1671, 2858], [1688, 2830, 1815, 2864], [1828, 2834, 1969, 2858], [1979, 2830, 2099, 2867], [450, 2876, 518, 2904], [530, 2876, 671, 2913], [687, 2885, 703, 2904], [715, 2876, 864, 2913], [877, 2880, 1005, 2913], [1018, 2876, 1054, 2904], [1066, 2876, 1210, 2904], [1225, 2876, 1387, 2913], [1403, 2876, 1502, 2904], [1516, 2885, 1572, 2904], [1584, 2876, 1623, 2904], [1635, 2876, 1727, 2904], [1728, 2880, 1785, 2904], [1798, 2876, 1898, 2904], [1912, 2880, 1940, 2904], [1953, 2876, 2002, 2904], [2016, 2876, 2099, 2904], [450, 2921, 536, 2950], [552, 2921, 701, 2950], [710, 2921, 760, 2949], [769, 2930, 839, 2949], [849, 2921, 885, 2949], [893, 2921, 1056, 2958], [1065, 2921, 1203, 2949], [1214, 2930, 1230, 2949], [1239, 2921, 1371, 2950], [1381, 2921, 1555, 2958], [1565, 2930, 1625, 2949], [1627, 2921, 1725, 2958], [1743, 2921, 2098, 2956], [451, 2967, 509, 2995], [523, 2967, 559, 2995], [575, 2967, 701, 3004], [715, 2967, 884, 3004], [900, 2967, 1028, 3004], [1042, 2967, 1138, 3004], [1154, 2967, 1272, 2996], [1286, 2967, 1423, 3002], [1449, 2967, 1600, 2996], [1616, 2967, 1779, 3004], [1795, 2971, 1822, 2995], [1837, 2967, 1886, 2995], [1899, 2967, 2007, 3004], [2021, 2967, 2099, 2996], [449, 3013, 521, 3041], [533, 3022, 656, 3050], [669, 3013, 714, 3041], [726, 3022, 809, 3041], [820, 3013, 970, 3050], [981, 3013, 1051, 3041], [1064, 3013, 1198, 3050], [1210, 3013, 1376, 3042], [1387, 3013, 1492, 3041], [1506, 3013, 1553, 3041], [1566, 3013, 1710, 3041], [1723, 3013, 1853, 3041], [451, 354, 548, 391], [559, 354, 616, 382], [628, 354, 781, 388], [795, 354, 853, 382], [863, 354, 1000, 391], [1011, 363, 1051, 382], [1061, 354, 1134, 382], [1146, 363, 1209, 382], [1209, 354, 1351, 382], [1363, 358, 1393, 382], [1405, 354, 1539, 391], [1550, 354, 1763, 391], [1775, 354, 1957, 391], [1960, 363, 2016, 382], [2029, 354, 2099, 382], [452, 409, 482, 428], [499, 404, 530, 428], [546, 400, 779, 437], [796, 400, 940, 428], [956, 400, 1215, 437], [1234, 409, 1281, 428], [1296, 400, 1452, 428], [1468, 409, 1484, 428], [1500, 400, 1590, 428], [1592, 400, 1678, 428], [1694, 400, 1790, 428], [1807, 400, 2020, 437], [2036, 409, 2098, 428], [450, 445, 597, 482], [613, 449, 641, 473], [655, 445, 704, 473], [718, 449, 859, 473], [872, 445, 957, 474], [980, 446, 1013, 473], [1026, 445, 1076, 473], [1089, 445, 1248, 482], [1263, 445, 1378, 473], [1391, 454, 1438, 473], [1452, 445, 1515, 473], [1528, 445, 1635, 482], [1649, 445, 1766, 473], [1780, 445, 1861, 482], [1874, 445, 1958, 473], [1971, 445, 2001, 473], [2015, 445, 2099, 473], [451, 495, 511, 519], [525, 491, 612, 519], [627, 491, 733, 519], [747, 491, 840, 528], [855, 500, 895, 519], [909, 495, 940, 519], [955, 491, 1091, 519], [1106, 491, 1155, 519], [1169, 491, 1316, 528], [1330, 491, 1458, 528], [1473, 491, 1570, 528], [1584, 491, 1645, 519], [1660, 500, 1707, 519], [1721, 491, 1888, 528], [1903, 491, 1951, 519], [1964, 491, 2099, 528], [451, 537, 652, 574], [664, 537, 898, 574], [910, 537, 1116, 574], [1135, 537, 1362, 574], [1376, 546, 1423, 565], [1435, 537, 1498, 565], [1510, 537, 1647, 565], [1659, 546, 1714, 565], [1725, 537, 1827, 565], [1840, 537, 1870, 565], [1882, 541, 1997, 574], [2008, 537, 2099, 565], [452, 591, 482, 610], [498, 582, 567, 610], [582, 591, 613, 610], [628, 582, 665, 610], [680, 582, 807, 619], [821, 582, 986, 619], [1001, 582, 1058, 610], [1072, 582, 1287, 619], [1302, 586, 1395, 619], [1418, 582, 1540, 619], [1556, 591, 1603, 610], [1616, 582, 1750, 619], [1764, 591, 1780, 610], [1794, 582, 1920, 610], [1933, 582, 1969, 610], [1980, 582, 2098, 611], [451, 628, 528, 656], [545, 628, 602, 656], [616, 628, 818, 656], [832, 628, 893, 656], [907, 637, 961, 656], [975, 628, 1102, 665], [1117, 628, 1214, 665], [1229, 628, 1332, 656], [1349, 637, 1365, 656], [1379, 637, 1451, 665], [1466, 628, 1574, 665], [1588, 628, 1822, 665], [1836, 632, 1938, 657], [1952, 628, 2054, 656], [2068, 632, 2099, 656], [451, 674, 636, 711], [647, 674, 696, 702], [709, 678, 782, 702], [794, 674, 829, 702], [838, 674, 887, 702], [900, 678, 941, 702], [952, 683, 992, 702], [1005, 683, 1021, 702], [1032, 674, 1098, 702], [1108, 674, 1254, 711], [1266, 678, 1296, 702], [1308, 674, 1443, 703], [1454, 674, 1490, 702], [1504, 674, 1608, 711], [1619, 678, 1650, 702], [1661, 674, 1787, 702], [1799, 674, 1943, 702], [1955, 674, 2098, 702], [451, 719, 513, 747], [526, 728, 625, 747], [638, 719, 810, 756], [827, 719, 938, 748], [950, 719, 1034, 747], [1045, 719, 1129, 747], [1139, 719, 1170, 747], [1181, 719, 1238, 747], [1252, 728, 1327, 753], [1340, 728, 1395, 747], [1405, 719, 1507, 747], [1519, 719, 1592, 747], [1604, 723, 1656, 747], [1666, 719, 1783, 756], [1794, 719, 1878, 747], [1890, 719, 2010, 756], [2021, 719, 2096, 747], [451, 766, 483, 793], [497, 765, 566, 799], [582, 765, 673, 793], [687, 774, 734, 793], [748, 765, 883, 794], [896, 774, 951, 793], [964, 765, 1066, 793], [1080, 774, 1120, 793], [1135, 769, 1276, 793], [1290, 765, 1410, 802], [1424, 765, 1492, 793], [1505, 765, 1536, 793], [1550, 765, 1607, 793], [1621, 774, 1720, 802], [1736, 765, 1818, 793], [1831, 765, 1856, 793], [1871, 774, 1911, 793], [1925, 765, 2099, 793], [450, 811, 638, 848], [640, 811, 710, 839], [722, 811, 779, 839], [795, 811, 852, 839], [865, 811, 1045, 848], [1059, 820, 1113, 839], [1126, 811, 1285, 848], [1298, 811, 1389, 839], [1403, 811, 1467, 839], [1479, 811, 1518, 839], [1532, 811, 1651, 848], [1664, 815, 1695, 839], [1708, 811, 1963, 840], [1975, 811, 2099, 848], [451, 856, 518, 884], [530, 865, 564, 884], [575, 865, 650, 885], [662, 856, 854, 893], [866, 856, 934, 884], [946, 856, 1023, 893], [451, 989, 474, 1023], [525, 989, 678, 1024], [693, 989, 736, 1024], [748, 989, 1055, 1033], [1069, 989, 1310, 1024], [1325, 989, 1537, 1024], [451, 1105, 483, 1132], [496, 1104, 545, 1132], [558, 1113, 628, 1132], [640, 1104, 676, 1132], [684, 1104, 889, 1141], [902, 1104, 1067, 1133], [1080, 1104, 1178, 1132], [1193, 1113, 1223, 1132], [1237, 1108, 1364, 1138], [1378, 1104, 1427, 1132], [1440, 1104, 1659, 1132], [1672, 1108, 1799, 1132], [1811, 1104, 1847, 1132], [1858, 1104, 2017, 1132], [2030, 1113, 2098, 1141], [451, 1150, 535, 1179], [553, 1159, 569, 1178], [583, 1150, 733, 1187], [748, 1150, 939, 1187], [954, 1150, 990, 1178], [1003, 1150, 1082, 1178], [1097, 1150, 1122, 1178], [1139, 1150, 1275, 1178], [1291, 1150, 1321, 1178], [1338, 1159, 1354, 1178], [1369, 1150, 1452, 1178], [1468, 1154, 1574, 1179], [1602, 1150, 1672, 1178], [1689, 1150, 1810, 1178], [1826, 1150, 1876, 1178], [1891, 1150, 1959, 1178], [1974, 1150, 2035, 1178], [2050, 1150, 2099, 1178], [451, 1195, 592, 1232], [605, 1195, 641, 1223], [653, 1204, 669, 1223], [682, 1195, 766, 1223], [779, 1204, 835, 1223], [848, 1195, 887, 1223], [900, 1195, 1085, 1223], [1098, 1195, 1139, 1232], [1153, 1195, 1220, 1223], [1234, 1204, 1363, 1232], [1364, 1195, 1419, 1232], [1431, 1195, 1542, 1232], [1560, 1195, 1633, 1229], [1649, 1195, 1709, 1223], [1723, 1195, 1747, 1223], [1762, 1195, 1802, 1232], [1816, 1195, 1865, 1223], [1879, 1199, 1999, 1223], [2012, 1195, 2034, 1223], [2049, 1204, 2098, 1232], [450, 1250, 535, 1278], [552, 1241, 590, 1269], [620, 1241, 700, 1270], [716, 1245, 836, 1269], [851, 1250, 907, 1269], [923, 1241, 1018, 1278], [1033, 1241, 1072, 1269], [1087, 1241, 1224, 1269], [1240, 1241, 1270, 1269], [1286, 1245, 1402, 1270], [1418, 1241, 1508, 1278], [1523, 1241, 1736, 1269], [1752, 1241, 1900, 1275], [1919, 1241, 1976, 1269], [1992, 1241, 2016, 1269], [2035, 1241, 2099, 1269], [450, 1287, 629, 1324], [641, 1287, 725, 1315], [736, 1287, 874, 1315], [887, 1287, 923, 1315], [932, 1287, 1067, 1324], [1079, 1287, 1162, 1315], [1174, 1287, 1357, 1324], [1360, 1288, 1427, 1321], [1440, 1287, 1502, 1321], [451, 1358, 507, 1385], [517, 1366, 533, 1385], [543, 1357, 654, 1385], [655, 1357, 714, 1385], [721, 1357, 881, 1394], [890, 1357, 1052, 1394], [1065, 1357, 1210, 1385], [1219, 1357, 1469, 1394], [1480, 1357, 1516, 1385], [1523, 1357, 1689, 1386], [1699, 1357, 1782, 1385], [1785, 1357, 1827, 1385], [1829, 1366, 1898, 1385], [1900, 1357, 2036, 1391], [2047, 1357, 2099, 1385], [451, 1403, 566, 1431], [577, 1412, 593, 1431], [604, 1403, 748, 1431], [757, 1403, 992, 1440], [1002, 1403, 1037, 1431], [1045, 1412, 1061, 1431], [1071, 1403, 1166, 1440], [1176, 1407, 1417, 1440], [1435, 1412, 1451, 1431], [1459, 1403, 1567, 1440], [1577, 1412, 1610, 1431], [1620, 1412, 1636, 1431], [1647, 1403, 1855, 1431], [1865, 1403, 2010, 1440], [2027, 1403, 2097, 1431], [451, 1458, 511, 1477], [523, 1449, 711, 1486], [722, 1449, 753, 1477], [767, 1449, 840, 1483], [853, 1449, 923, 1477], [933, 1449, 1084, 1486], [1096, 1458, 1112, 1477], [1123, 1449, 1311, 1477], [1321, 1449, 1369, 1477], [1379, 1449, 1550, 1486], [1562, 1458, 1578, 1477], [1589, 1449, 1698, 1477], [1710, 1449, 1944, 1486], [1954, 1449, 2048, 1477], [2059, 1458, 2099, 1477], [451, 1494, 487, 1522], [500, 1494, 666, 1523], [677, 1498, 805, 1522], [822, 1494, 885, 1522], [897, 1494, 1116, 1522], [1129, 1498, 1255, 1522], [1267, 1494, 1303, 1522], [1313, 1494, 1472, 1522], [1485, 1503, 1550, 1528], [1564, 1494, 1622, 1522], [1634, 1498, 1664, 1522], [1677, 1494, 1810, 1531], [1823, 1498, 1875, 1522], [1885, 1494, 1924, 1522], [1937, 1494, 2056, 1531], [2068, 1498, 2099, 1522], [452, 1540, 525, 1568], [537, 1540, 633, 1577], [644, 1540, 796, 1577], [809, 1540, 896, 1568], [915, 1540, 943, 1568], [956, 1540, 1077, 1568], [1089, 1540, 1248, 1577], [1259, 1540, 1386, 1577], [1400, 1540, 1425, 1568], [1439, 1540, 1550, 1568], [1564, 1540, 1621, 1568], [1632, 1540, 1814, 1577], [1829, 1540, 1882, 1574], [1896, 1540, 1966, 1568], [1978, 1540, 2099, 1568], [451, 1586, 670, 1614], [681, 1586, 930, 1623], [944, 1586, 991, 1614], [1004, 1586, 1149, 1623], [1161, 1595, 1243, 1614], [1254, 1586, 1332, 1623], [1345, 1586, 1434, 1623], [1448, 1595, 1464, 1614], [1476, 1586, 1689, 1614], [1702, 1586, 1851, 1623], [1864, 1595, 1903, 1614], [1917, 1595, 1933, 1614], [1945, 1595, 2052, 1623], [2066, 1586, 2102, 1614], [450, 1631, 691, 1668], [703, 1631, 773, 1659], [790, 1631, 853, 1659], [863, 1631, 980, 1668], [990, 1631, 1239, 1668], [1252, 1631, 1372, 1659], [1384, 1631, 1463, 1659], [1474, 1631, 1535, 1659], [1546, 1640, 1653, 1668], [1666, 1640, 1745, 1659], [1757, 1631, 1971, 1668], [1982, 1631, 2057, 1659], [2068, 1635, 2099, 1659], [451, 1677, 532, 1705], [544, 1677, 719, 1705], [731, 1677, 935, 1714], [947, 1677, 1098, 1705], [1112, 1677, 1159, 1705], [1170, 1677, 1220, 1705], [1232, 1677, 1412, 1705], [1424, 1677, 1531, 1705], [451, 1749, 534, 1776], [554, 1748, 725, 1777], [744, 1752, 881, 1785], [901, 1752, 931, 1776], [950, 1752, 1060, 1776], [1080, 1748, 1153, 1776], [1171, 1748, 1368, 1785], [1388, 1748, 1532, 1776], [1550, 1748, 1799, 1785], [1818, 1748, 1895, 1777], [1913, 1748, 2040, 1776], [2059, 1757, 2099, 1776], [451, 1793, 585, 1830], [601, 1793, 805, 1830], [821, 1793, 972, 1821], [990, 1793, 1051, 1821], [1066, 1797, 1218, 1830], [1234, 1793, 1283, 1821], [1300, 1793, 1460, 1821], [1478, 1793, 1513, 1821], [1528, 1802, 1544, 1821], [1560, 1793, 1655, 1830], [1672, 1797, 1815, 1821], [1832, 1802, 1862, 1821], [1881, 1802, 1897, 1821], [1913, 1793, 2050, 1821], [2066, 1793, 2102, 1821], [451, 1839, 500, 1867], [510, 1839, 744, 1876], [747, 1839, 807, 1867], [815, 1839, 851, 1867], [863, 1843, 950, 1876], [970, 1839, 1032, 1873], [1045, 1839, 1185, 1876], [1199, 1848, 1235, 1867], [1246, 1839, 1415, 1868], [1426, 1839, 1462, 1867], [1471, 1848, 1487, 1867], [1498, 1839, 1624, 1867], [1634, 1839, 1670, 1867], [1679, 1839, 1788, 1876], [1798, 1839, 2002, 1876], [2013, 1839, 2098, 1867], [451, 1884, 528, 1912], [545, 1884, 664, 1921], [679, 1888, 709, 1912], [723, 1884, 863, 1921], [887, 1884, 1019, 1921], [1033, 1884, 1221, 1921], [1238, 1884, 1312, 1912], [1327, 1884, 1510, 1921], [1526, 1893, 1581, 1912], [1596, 1884, 1665, 1912], [1680, 1884, 1775, 1921], [1788, 1884, 1827, 1912], [1840, 1884, 2012, 1912], [2027, 1884, 2099, 1912], [451, 1930, 500, 1958], [515, 1939, 749, 1958], [764, 1930, 857, 1958], [873, 1930, 956, 1958], [972, 1930, 1050, 1959], [1064, 1930, 1323, 1967], [1351, 1930, 1447, 1958], [1463, 1939, 1512, 1958], [1528, 1939, 1544, 1958], [1560, 1930, 1686, 1958], [1701, 1930, 1736, 1958], [1748, 1930, 1905, 1967], [1923, 1930, 2099, 1967], [452, 1976, 525, 2004], [535, 1976, 685, 2005], [696, 1985, 730, 2004], [740, 1976, 817, 2013], [828, 1976, 1031, 2013], [1043, 1976, 1169, 2004], [1186, 1976, 1324, 2013], [1340, 1976, 1380, 2010], [1394, 1985, 1525, 2013], [1536, 1985, 1552, 2004], [1563, 1976, 1771, 2004], [1782, 1976, 1873, 2004], [1874, 1976, 1943, 2004], [1954, 1976, 2098, 2004], [451, 2021, 654, 2058], [670, 2021, 736, 2055], [754, 2021, 905, 2058], [925, 2021, 966, 2055], [984, 2021, 1112, 2058], [1128, 2030, 1144, 2049], [1158, 2021, 1338, 2049], [1352, 2021, 1400, 2049], [1415, 2021, 1559, 2049], [1574, 2021, 1778, 2058], [1792, 2021, 1833, 2058], [1848, 2021, 2023, 2058], [2038, 2021, 2098, 2049], [451, 2067, 621, 2095], [637, 2067, 742, 2104], [758, 2067, 830, 2095], [845, 2076, 994, 2104], [1010, 2076, 1182, 2104], [1212, 2067, 1275, 2095], [1291, 2067, 1376, 2095], [1391, 2067, 1571, 2095], [1587, 2076, 1648, 2095], [1665, 2067, 1853, 2104], [1869, 2067, 2024, 2096], [2042, 2067, 2099, 2095], [452, 2113, 612, 2150], [627, 2113, 668, 2150], [684, 2113, 733, 2141], [748, 2113, 854, 2141], [871, 2113, 901, 2141], [920, 2113, 992, 2147], [1021, 2114, 1109, 2141], [1124, 2113, 1263, 2150], [1281, 2113, 1399, 2142], [1416, 2113, 1510, 2141], [1527, 2113, 1563, 2141], [1575, 2113, 1725, 2142], [1740, 2113, 1842, 2141], [1858, 2113, 2006, 2141], [2023, 2113, 2099, 2142], [452, 2158, 652, 2195], [663, 2158, 740, 2186], [751, 2158, 827, 2186], [839, 2158, 886, 2186], [898, 2158, 1043, 2186], [1055, 2158, 1259, 2195], [1272, 2158, 1329, 2186], [1340, 2158, 1452, 2186], [1464, 2158, 1544, 2186], [1559, 2158, 1632, 2186], [1645, 2167, 1675, 2186], [1690, 2158, 1849, 2186], [1861, 2158, 2000, 2195], [2018, 2158, 2099, 2187], [451, 2204, 567, 2232], [585, 2204, 705, 2232], [720, 2204, 870, 2233], [887, 2204, 1102, 2232], [1122, 2204, 1195, 2238], [1214, 2204, 1438, 2233], [1452, 2204, 1602, 2233], [1618, 2204, 1720, 2232], [1736, 2204, 1885, 2232], [1905, 2204, 1978, 2238], [1996, 2204, 2099, 2232], [450, 2250, 600, 2279], [611, 2250, 714, 2278], [725, 2250, 860, 2278], [862, 2250, 952, 2284], [967, 2259, 1001, 2278], [1012, 2250, 1236, 2279], [1248, 2250, 1397, 2278], [1413, 2250, 1486, 2284], [451, 2371, 499, 2400], [544, 2371, 764, 2409], [776, 2371, 995, 2409], [451, 2466, 524, 2493], [526, 2465, 699, 2493], [715, 2465, 768, 2493], [786, 2465, 863, 2493], [880, 2465, 1008, 2494], [1025, 2469, 1056, 2493], [1072, 2465, 1122, 2493], [1138, 2465, 1205, 2493], [1221, 2465, 1256, 2493], [1270, 2465, 1414, 2502], [1431, 2465, 1606, 2493], [1624, 2465, 1768, 2493], [1785, 2465, 2034, 2502], [2052, 2465, 2100, 2493], [452, 2510, 548, 2547], [562, 2510, 734, 2547], [758, 2511, 791, 2538], [804, 2510, 964, 2547], [977, 2510, 1111, 2547], [1128, 2510, 1200, 2538], [1214, 2510, 1250, 2538], [1266, 2510, 1347, 2547], [1361, 2510, 1487, 2538], [1500, 2510, 1536, 2538], [1548, 2510, 1707, 2538], [1720, 2519, 1885, 2544], [1901, 2510, 1954, 2538], [1970, 2510, 2099, 2547], [451, 2565, 517, 2584], [520, 2556, 691, 2584], [707, 2556, 859, 2593], [870, 2565, 1009, 2593], [1019, 2556, 1072, 2584], [1083, 2556, 1160, 2584], [1170, 2556, 1240, 2584], [1242, 2560, 1297, 2584], [1306, 2556, 1540, 2593], [1550, 2556, 1684, 2593], [1694, 2556, 1742, 2584], [1751, 2556, 1914, 2593], [1925, 2556, 1997, 2584], [2007, 2556, 2100, 2584], [452, 2602, 597, 2631], [609, 2611, 773, 2630], [794, 2602, 985, 2631], [998, 2606, 1027, 2630], [1041, 2602, 1076, 2630], [1095, 2602, 1156, 2636], [1173, 2602, 1330, 2630], [1345, 2611, 1361, 2630], [1374, 2602, 1453, 2630], [1466, 2602, 1502, 2630], [1512, 2602, 1666, 2630], [1679, 2602, 1813, 2639], [1826, 2611, 1866, 2630], [1880, 2602, 2099, 2639], [450, 2647, 573, 2684], [589, 2647, 657, 2675], [672, 2651, 703, 2675], [719, 2647, 845, 2675], [860, 2647, 1057, 2684], [1074, 2647, 1154, 2675], [1169, 2656, 1228, 2675], [1243, 2647, 1392, 2684], [1407, 2651, 1438, 2675], [1455, 2647, 1582, 2675], [1610, 2647, 1722, 2675], [1737, 2647, 1829, 2681], [1847, 2647, 1989, 2684], [1990, 2647, 2033, 2675], [2035, 2647, 2096, 2675], [454, 2693, 527, 2727], [539, 2693, 690, 2730], [702, 2702, 718, 2721], [729, 2693, 851, 2721], [863, 2693, 910, 2721], [920, 2693, 1064, 2730], [1075, 2693, 1288, 2730], [1298, 2693, 1396, 2721], [1405, 2693, 1494, 2730], [1506, 2693, 1702, 2730], [1704, 2693, 1838, 2721], [1848, 2693, 2097, 2730], [452, 2739, 509, 2767], [522, 2748, 538, 2767], [552, 2739, 639, 2767], [651, 2739, 747, 2767], [759, 2739, 879, 2767], [891, 2743, 922, 2767], [934, 2739, 1087, 2776], [1100, 2739, 1180, 2767], [1198, 2739, 1269, 2767], [1284, 2739, 1433, 2776], [1445, 2739, 1498, 2767], [1511, 2739, 1644, 2776], [1656, 2739, 1733, 2767], [1746, 2739, 1893, 2767], [1905, 2739, 1946, 2776], [1961, 2739, 2021, 2773], [2039, 2739, 2097, 2773], [451, 2784, 520, 2812], [536, 2784, 703, 2821], [720, 2793, 736, 2812], [751, 2784, 874, 2812], [890, 2784, 937, 2812], [952, 2784, 1086, 2821], [1102, 2784, 1345, 2812], [1360, 2784, 1498, 2812], [1515, 2788, 1545, 2812], [1561, 2788, 1682, 2813], [1698, 2784, 1842, 2812], [1859, 2788, 1975, 2813], [1992, 2784, 2028, 2812], [2041, 2793, 2099, 2812], [451, 2830, 599, 2867], [613, 2830, 676, 2858], [691, 2830, 777, 2858], [791, 2830, 827, 2858], [840, 2830, 967, 2858], [991, 2831, 1018, 2858], [1034, 2839, 1095, 2858], [1111, 2830, 1333, 2858], [1348, 2830, 1408, 2858], [1423, 2830, 1480, 2858], [1497, 2830, 1646, 2867], [1661, 2839, 1717, 2858], [1730, 2830, 1769, 2858], [1784, 2830, 1904, 2867], [1918, 2834, 1949, 2858], [1963, 2830, 2099, 2867], [451, 2876, 530, 2904], [544, 2876, 656, 2904], [669, 2880, 700, 2904], [713, 2876, 834, 2904], [835, 2876, 1047, 2904], [1067, 2876, 1156, 2904], [1169, 2876, 1290, 2905], [1303, 2876, 1394, 2904], [1395, 2876, 1443, 2904], [1459, 2876, 1523, 2904], [1536, 2876, 1631, 2904], [1644, 2876, 1748, 2913], [1762, 2876, 1809, 2904], [1821, 2876, 1858, 2904], [1873, 2876, 2054, 2904], [2068, 2880, 2099, 2904], [451, 2921, 500, 2949], [513, 2921, 717, 2958], [730, 2921, 867, 2949], [879, 2921, 955, 2949], [968, 2921, 999, 2949], [1012, 2921, 1069, 2949], [1083, 2930, 1180, 2958], [1202, 2921, 1299, 2958], [0, 0, 2550, 3300], [1314, 2921, 1466, 2958], [1479, 2921, 1620, 2949], [1634, 2921, 1792, 2958], [1811, 2921, 1884, 2955], [1901, 2921, 1965, 2949], [1978, 2921, 2099, 2949], [450, 2967, 597, 3004], [614, 2967, 812, 3004], [831, 2967, 879, 2995], [896, 2967, 1035, 2995], [1052, 2967, 1234, 2995], [1268, 2968, 1292, 2995], [1310, 2967, 1334, 2995], [1353, 2967, 1513, 3004], [1531, 2971, 1562, 2995], [1579, 2971, 1650, 2995], [1667, 2967, 1736, 3001], [1756, 2967, 1859, 2995], [1877, 2976, 1931, 2995], [1947, 2967, 2099, 3004], [452, 3017, 573, 3050], [588, 3013, 627, 3041], [638, 3013, 674, 3041], [683, 3013, 767, 3041], [779, 3013, 917, 3041], [929, 3013, 1046, 3050], [1058, 3013, 1141, 3041], [1154, 3013, 1274, 3050], [1285, 3013, 1409, 3050], [1421, 3013, 1489, 3041], [1500, 3013, 1548, 3041], [1559, 3013, 1694, 3050], [451, 355, 501, 382], [502, 358, 631, 382], [641, 354, 803, 391], [812, 363, 918, 391], [929, 354, 1054, 383], [1064, 354, 1177, 382], [1179, 354, 1239, 382], [1249, 354, 1306, 382], [1316, 358, 1441, 391], [1457, 354, 1536, 382], [1547, 354, 1621, 382], [1623, 358, 1680, 391], [1691, 354, 1726, 382], [1742, 354, 1803, 388], [1817, 354, 1875, 382], [1886, 354, 1989, 383], [1999, 354, 2098, 383], [451, 400, 488, 428], [489, 404, 540, 428], [551, 400, 586, 428], [601, 400, 663, 434], [675, 409, 806, 437], [815, 400, 938, 428], [941, 400, 1012, 428], [1021, 400, 1155, 437], [1165, 400, 1248, 428], [1258, 400, 1440, 437], [1443, 400, 1506, 437], [1516, 400, 1682, 437], [1691, 400, 1838, 437], [1848, 400, 1924, 434], [1936, 404, 1987, 428], [1996, 400, 2099, 428], [451, 445, 500, 473], [512, 445, 635, 473], [647, 454, 778, 482], [779, 445, 841, 473], [854, 445, 911, 473], [924, 454, 1021, 482], [1039, 445, 1158, 473], [1170, 445, 1206, 473], [1216, 445, 1265, 473], [1277, 445, 1558, 474], [1570, 445, 1693, 473], [1706, 445, 1852, 482], [1854, 445, 1916, 473], [1929, 445, 1986, 473], [1999, 454, 2097, 482], [450, 491, 523, 519], [540, 500, 650, 528], [669, 491, 705, 519], [720, 491, 838, 519], [857, 491, 945, 519], [961, 500, 1016, 519], [1033, 491, 1069, 519], [1085, 491, 1300, 519], [1318, 495, 1349, 519], [1367, 491, 1483, 519], [1500, 491, 1708, 528], [1724, 491, 1974, 528], [1994, 491, 2051, 519], [2068, 495, 2099, 519], [452, 541, 573, 574], [585, 537, 635, 565], [646, 537, 793, 574], [805, 537, 935, 565], [452, 607, 493, 636], [505, 607, 550, 635], [562, 607, 670, 635], [683, 607, 722, 635], [734, 607, 770, 635], [779, 607, 836, 635], [850, 607, 934, 635], [944, 607, 998, 635], [1010, 607, 1088, 635], [1100, 607, 1228, 635], [1240, 616, 1280, 635], [1292, 607, 1426, 644], [1438, 607, 1640, 644], [1651, 607, 1900, 644], [1915, 611, 1942, 635], [1954, 607, 2004, 635], [2016, 607, 2099, 635], [451, 653, 536, 682], [553, 653, 596, 681], [609, 653, 784, 681], [795, 653, 1044, 690], [1057, 653, 1093, 681], [1102, 653, 1197, 690], [1208, 653, 1398, 690], [1410, 653, 1487, 682], [1497, 653, 1575, 681], [1588, 653, 1671, 681], [1673, 657, 1735, 681], [1746, 653, 1784, 681], [1795, 653, 1900, 690], [1911, 653, 2012, 681], [2024, 653, 2071, 681], [2083, 662, 2099, 681], [451, 699, 562, 727], [562, 708, 606, 727], [608, 699, 721, 733], [734, 699, 756, 727], [768, 708, 865, 727], [878, 703, 908, 727], [918, 699, 957, 727], [969, 708, 985, 727], [996, 699, 1110, 727], [1121, 703, 1190, 727], [1202, 703, 1266, 736], [1278, 703, 1308, 727], [1320, 699, 1384, 727], [1397, 703, 1519, 736], [1530, 703, 1560, 727], [1572, 699, 1681, 727], [1692, 699, 1776, 727], [1786, 699, 1875, 736], [1886, 699, 2099, 736], [451, 744, 526, 772], [543, 744, 614, 772], [626, 753, 718, 781], [729, 744, 854, 781], [857, 753, 899, 772], [911, 744, 974, 772], [987, 748, 1051, 781], [1063, 744, 1094, 772], [1106, 744, 1167, 772], [1179, 744, 1332, 772], [451, 860, 473, 895], [525, 860, 659, 895], [673, 860, 918, 904], [451, 967, 613, 1003], [629, 966, 808, 1003], [823, 966, 854, 994], [868, 966, 995, 994], [1012, 966, 1036, 994], [1053, 966, 1164, 1003], [1180, 975, 1251, 994], [1267, 975, 1298, 994], [1315, 966, 1470, 1003], [1485, 966, 1515, 994], [1531, 970, 1769, 1003], [1784, 966, 1961, 1003], [1979, 966, 2039, 1000], [2056, 966, 2096, 1000], [451, 1011, 550, 1039], [567, 1020, 607, 1039], [624, 1011, 680, 1039], [699, 1011, 775, 1045], [795, 1011, 876, 1039], [892, 1011, 968, 1040], [984, 1011, 1061, 1039], [1079, 1020, 1164, 1039], [1182, 1015, 1318, 1048], [1338, 1015, 1365, 1039], [1381, 1011, 1470, 1048], [1487, 1011, 1690, 1039], [1707, 1011, 1775, 1039], [1791, 1011, 1839, 1039], [1855, 1011, 1989, 1048], [2005, 1011, 2100, 1039], [451, 1061, 553, 1086], [565, 1057, 814, 1094], [829, 1057, 865, 1085], [876, 1057, 974, 1085], [990, 1057, 1059, 1094], [1084, 1057, 1170, 1092], [1194, 1057, 1274, 1086], [1288, 1057, 1436, 1091], [1451, 1057, 1598, 1091], [1615, 1066, 1663, 1085], [1677, 1061, 1728, 1085], [1742, 1057, 1837, 1094], [1852, 1057, 1983, 1085], [1998, 1066, 2097, 1085], [451, 1103, 599, 1140], [601, 1112, 661, 1131], [672, 1107, 702, 1131], [715, 1103, 795, 1140], [808, 1107, 945, 1131], [958, 1103, 994, 1131], [1003, 1103, 1071, 1131], [1083, 1103, 1130, 1131], [1141, 1103, 1241, 1131], [1253, 1112, 1293, 1131], [1306, 1103, 1452, 1131], [1453, 1112, 1503, 1140], [1504, 1103, 1647, 1140], [1658, 1103, 1892, 1140], [1905, 1103, 1988, 1140], [1990, 1103, 2096, 1131], [451, 1174, 503, 1201], [520, 1173, 647, 1201], [663, 1173, 712, 1201], [727, 1173, 906, 1210], [921, 1173, 1069, 1210], [1085, 1182, 1143, 1201], [1160, 1177, 1224, 1210], [1240, 1173, 1352, 1201], [1369, 1173, 1426, 1201], [1443, 1177, 1565, 1210], [1581, 1177, 1612, 1201], [1628, 1173, 1709, 1201], [1727, 1173, 1886, 1201], [1904, 1173, 1983, 1201], [1999, 1173, 2098, 1201], [451, 1219, 564, 1256], [578, 1219, 653, 1247], [677, 1219, 740, 1247], [754, 1219, 821, 1247], [835, 1219, 860, 1247], [875, 1219, 945, 1253], [961, 1219, 1050, 1256], [1064, 1219, 1184, 1256], [1198, 1219, 1322, 1256], [1335, 1219, 1412, 1253], [1429, 1228, 1445, 1247], [1460, 1219, 1565, 1247], [1579, 1219, 1813, 1256], [1827, 1219, 1929, 1247], [1942, 1219, 1981, 1247], [1994, 1219, 2099, 1247], [451, 1269, 481, 1293], [497, 1269, 618, 1302], [633, 1265, 682, 1293], [698, 1274, 842, 1293], [857, 1265, 1002, 1293], [1018, 1265, 1156, 1293], [1173, 1269, 1327, 1293], [1345, 1265, 1424, 1293], [1440, 1265, 1580, 1293], [1596, 1265, 1768, 1302], [1796, 1265, 1884, 1293], [1900, 1269, 1940, 1293], [1941, 1265, 2099, 1302], [452, 1314, 606, 1338], [620, 1310, 697, 1339], [710, 1310, 740, 1338], [753, 1319, 897, 1338], [900, 1310, 957, 1344], [967, 1319, 1082, 1344], [1097, 1310, 1122, 1338], [1137, 1310, 1186, 1338], [1200, 1310, 1360, 1338], [1374, 1310, 1410, 1338], [1420, 1310, 1506, 1338], [1519, 1314, 1579, 1338], [1594, 1314, 1758, 1338], [1779, 1310, 1876, 1347], [1889, 1310, 1946, 1338], [1961, 1310, 2037, 1344], [2052, 1319, 2099, 1338], [450, 1365, 580, 1393], [593, 1365, 609, 1384], [621, 1356, 711, 1385], [722, 1356, 845, 1384], [857, 1356, 905, 1384], [916, 1356, 1050, 1393], [1063, 1360, 1165, 1385], [1175, 1356, 1424, 1393], [1439, 1360, 1466, 1384], [1478, 1356, 1527, 1384], [1539, 1356, 1622, 1384], [1634, 1356, 1712, 1385], [1725, 1356, 1782, 1384], [1793, 1356, 1922, 1393], [451, 1461, 499, 1491], [544, 1461, 704, 1499], [716, 1461, 825, 1499], [451, 1548, 624, 1585], [640, 1548, 689, 1576], [705, 1548, 850, 1576], [867, 1548, 1023, 1585], [1039, 1548, 1075, 1576], [1087, 1548, 1211, 1585], [1227, 1552, 1382, 1576], [1400, 1557, 1500, 1576], [1517, 1548, 1690, 1585], [1708, 1557, 1755, 1576], [1770, 1557, 1826, 1576], [1842, 1548, 1942, 1576], [1958, 1557, 1974, 1576], [1991, 1548, 2099, 1585], [450, 1594, 597, 1631], [616, 1594, 687, 1629], [706, 1594, 835, 1631], [853, 1594, 1067, 1631], [1087, 1603, 1167, 1622], [1185, 1594, 1321, 1622], [1341, 1603, 1372, 1622], [1392, 1594, 1522, 1622], [1553, 1594, 1651, 1623], [1671, 1603, 1687, 1622], [1705, 1594, 1939, 1631], [1959, 1598, 2099, 1622], [451, 1639, 553, 1667], [569, 1639, 693, 1674], [710, 1638, 794, 1673], [812, 1639, 911, 1667], [927, 1648, 1011, 1676], [1029, 1648, 1045, 1667], [1061, 1643, 1201, 1667], [1216, 1643, 1247, 1667], [1263, 1648, 1279, 1667], [1294, 1643, 1403, 1673], [1420, 1648, 1467, 1667], [1482, 1648, 1538, 1667], [1554, 1639, 1628, 1667], [1644, 1648, 1660, 1667], [1676, 1639, 1789, 1667], [1805, 1639, 1902, 1668], [1919, 1638, 1991, 1673], [2010, 1639, 2099, 1676], [452, 1694, 468, 1713], [484, 1694, 591, 1722], [610, 1684, 689, 1724], [710, 1685, 746, 1713], [759, 1685, 883, 1722], [899, 1685, 967, 1713], [983, 1685, 1063, 1713], [1079, 1685, 1128, 1713], [1145, 1685, 1293, 1722], [1309, 1685, 1373, 1722], [1389, 1683, 1427, 1721], [1440, 1685, 1478, 1713], [1510, 1686, 1566, 1713], [1582, 1685, 1656, 1713], [1672, 1685, 1736, 1722], [1752, 1685, 1788, 1713], [1801, 1685, 1925, 1722], [1942, 1689, 2097, 1713], [454, 1728, 536, 1769], [555, 1737, 576, 1761], [592, 1730, 684, 1770], [698, 1740, 745, 1759], [758, 1735, 880, 1768], [891, 1735, 922, 1759], [934, 1731, 1089, 1759], [1020, 1817, 1104, 1851], [1112, 1814, 1154, 1855], [1166, 1814, 1194, 1855], [1212, 1830, 1240, 1839], [1258, 1814, 1356, 1855], [1372, 1834, 1398, 1835], [1413, 1816, 1488, 1851], [1497, 1805, 1528, 1855], [2053, 1817, 2098, 1852], [451, 1893, 550, 1921], [563, 1903, 643, 1927], [658, 1893, 683, 1921], [696, 1893, 746, 1921], [757, 1897, 860, 1922], [870, 1893, 1074, 1930], [1088, 1897, 1228, 1921], [1241, 1903, 1260, 1921], [1273, 1893, 1330, 1921], [1343, 1892, 1419, 1927], [1434, 1893, 1484, 1921], [1495, 1897, 1598, 1922], [1608, 1893, 1812, 1930], [1826, 1897, 1947, 1921], [1949, 1892, 2002, 1921], [451, 1998, 501, 2028], [544, 1999, 612, 2028], [625, 1998, 765, 2028], [778, 1999, 890, 2028], [451, 2085, 479, 2113], [492, 2085, 548, 2114], [553, 2085, 698, 2113], [712, 2085, 856, 2113], [868, 2085, 1117, 2122], [1130, 2085, 1166, 2113], [1175, 2085, 1270, 2122], [1282, 2085, 1426, 2122], [1438, 2085, 1516, 2113], [1530, 2085, 1619, 2122], [1631, 2085, 1680, 2113], [1692, 2085, 1837, 2113], [1848, 2085, 2097, 2122], [451, 2130, 486, 2158], [495, 2130, 571, 2158], [582, 2130, 786, 2158], [804, 2131, 856, 2158], [869, 2139, 989, 2158], [1001, 2130, 1167, 2159], [1178, 2130, 1262, 2158], [1264, 2134, 1320, 2158], [1332, 2130, 1370, 2158], [1381, 2130, 1572, 2167], [1583, 2130, 1624, 2167], [1636, 2134, 1752, 2159], [1766, 2130, 1800, 2165], [1816, 2136, 1837, 2160], [1854, 2123, 1923, 2165], [451, 2201, 592, 2230], [607, 2201, 744, 2229], [759, 2201, 882, 2238], [894, 2201, 999, 2238], [1012, 2210, 1099, 2238], [1113, 2205, 1188, 2229], [1203, 2210, 1243, 2229], [1256, 2201, 1305, 2229], [1319, 2201, 1386, 2229], [1401, 2201, 1469, 2238], [1494, 2201, 1553, 2235], [1568, 2201, 1635, 2236], [1650, 2201, 1708, 2229], [1720, 2210, 1775, 2229], [1789, 2201, 1939, 2238], [1953, 2210, 1986, 2229], [1999, 2201, 2098, 2229], [450, 2247, 590, 2284], [603, 2247, 806, 2284], [819, 2247, 980, 2275], [1000, 2247, 1102, 2276], [1115, 2247, 1189, 2275], [1203, 2256, 1219, 2275], [1232, 2251, 1326, 2284], [1341, 2247, 1441, 2275], [1453, 2247, 1528, 2275], [1540, 2247, 1601, 2275], [1603, 2247, 1663, 2275], [1676, 2247, 1706, 2275], [1708, 2251, 1798, 2275], [1811, 2247, 1836, 2275], [1850, 2247, 1987, 2275], [1999, 2256, 2033, 2275], [2044, 2247, 2097, 2275], [451, 2296, 511, 2320], [523, 2292, 657, 2320], [670, 2292, 702, 2328], [716, 2299, 753, 2320], [769, 2302, 812, 2328], [824, 2292, 881, 2327], [896, 2301, 912, 2320], [922, 2292, 1028, 2329], [1040, 2292, 1243, 2329], [1256, 2292, 1392, 2320], [1404, 2292, 1495, 2320], [1507, 2292, 1574, 2320], [1586, 2292, 1635, 2320], [1647, 2292, 1806, 2329], [1818, 2292, 1906, 2320], [1073, 2378, 1137, 2404], [1151, 2365, 1314, 2406], [1326, 2365, 1368, 2406], [1383, 2372, 1411, 2399], [1425, 2365, 1471, 2406], [2053, 2368, 2098, 2403], [451, 2452, 550, 2480], [568, 2449, 619, 2490], [632, 2449, 673, 2490], [691, 2452, 715, 2480], [731, 2452, 780, 2480], [794, 2452, 1022, 2480], [1036, 2452, 1072, 2480], [1083, 2452, 1132, 2480], [1146, 2456, 1206, 2480], [1220, 2452, 1301, 2480], [1315, 2456, 1441, 2486], [1458, 2452, 1515, 2481], [1537, 2458, 1558, 2482], [1577, 2445, 1683, 2480], [1699, 2452, 1756, 2480], [1771, 2451, 1801, 2480], [1823, 2458, 1844, 2482], [1863, 2445, 1909, 2480], [1925, 2452, 1974, 2480], [1988, 2452, 2098, 2480], [451, 2498, 502, 2535], [515, 2498, 622, 2526], [636, 2498, 693, 2526], [706, 2498, 781, 2532], [795, 2498, 999, 2535], [1016, 2498, 1073, 2526], [1086, 2508, 1105, 2535], [1120, 2507, 1157, 2526], [1170, 2498, 1390, 2526], [1404, 2498, 1563, 2527], [1577, 2498, 1713, 2526], [1728, 2498, 1801, 2526], [1815, 2507, 1846, 2526], [1861, 2498, 1910, 2526], [1922, 2498, 2098, 2535], [451, 2547, 579, 2580], [599, 2544, 656, 2571], [668, 2543, 717, 2571], [729, 2552, 875, 2580], [889, 2543, 925, 2571], [935, 2543, 1105, 2572], [1118, 2543, 1167, 2571], [1179, 2543, 1326, 2580], [1340, 2543, 1437, 2580], [1449, 2543, 1600, 2580], [1615, 2543, 1719, 2577], [1734, 2552, 1781, 2571], [1795, 2543, 1930, 2580], [1944, 2543, 2001, 2571], [2015, 2552, 2098, 2571], [450, 2589, 583, 2626], [597, 2589, 734, 2617], [748, 2589, 788, 2626], [804, 2589, 912, 2626], [928, 2589, 967, 2617], [981, 2589, 1093, 2626], [1107, 2589, 1244, 2617], [1261, 2593, 1291, 2617], [1306, 2589, 1355, 2617], [1369, 2589, 1495, 2626], [1510, 2589, 1567, 2617], [1583, 2589, 1622, 2617], [1636, 2589, 1735, 2617], [1751, 2593, 1781, 2617], [1796, 2598, 1874, 2617], [1899, 2589, 2035, 2626], [2050, 2589, 2099, 2617], [452, 2635, 548, 2664], [561, 2635, 671, 2663], [673, 2639, 729, 2663], [742, 2644, 758, 2663], [771, 2635, 880, 2672], [892, 2635, 1022, 2664], [1034, 2635, 1237, 2672], [1250, 2635, 1395, 2663], [1309, 2710, 1339, 2739], [1155, 2770, 1235, 2794], [1252, 2773, 1280, 2782], [1296, 2748, 1352, 2806], [1363, 2770, 1392, 2794], [2053, 2760, 2098, 2795], [1298, 2818, 1349, 2838], [451, 2876, 495, 2905], [510, 2885, 625, 2910], [645, 2876, 702, 2904], [721, 2876, 745, 2904], [765, 2885, 781, 2904], [798, 2885, 869, 2913], [888, 2876, 1051, 2913], [1069, 2876, 1166, 2905], [1170, 2885, 1226, 2910], [1246, 2876, 1319, 2904], [1337, 2885, 1353, 2904], [1369, 2876, 1590, 2913], [1610, 2876, 1759, 2913], [1777, 2885, 1816, 2904], [1834, 2876, 1939, 2913], [1956, 2880, 2097, 2904], [451, 2921, 498, 2949], [515, 2921, 598, 2949], [616, 2921, 754, 2958], [773, 2921, 830, 2949], [848, 2921, 932, 2949], [949, 2921, 1055, 2949], [1074, 2921, 1174, 2949], [1193, 2930, 1209, 2949], [1226, 2930, 1310, 2949], [1327, 2921, 1468, 2958], [1486, 2921, 1583, 2950], [1602, 2921, 1697, 2958], [1715, 2925, 1843, 2958], [1877, 2922, 2031, 2955], [2052, 2921, 2100, 2949], [451, 2967, 500, 2995], [515, 2976, 660, 3004], [678, 2967, 713, 2995], [727, 2967, 784, 2995], [801, 2967, 970, 2996], [987, 2967, 1058, 3002], [1075, 2967, 1147, 2995], [1163, 2967, 1212, 2995], [1228, 2967, 1443, 3004], [1459, 2967, 1628, 2996], [1644, 2967, 1674, 2995], [1691, 2967, 1797, 3002], [1817, 2967, 1890, 2995], [1907, 2976, 1923, 2995], [1940, 2967, 2098, 3004], [451, 3013, 654, 3050], [666, 3013, 803, 3041], [816, 3013, 924, 3041], [935, 3013, 974, 3041], [987, 3013, 1137, 3041], [1149, 3017, 1180, 3041], [1192, 3013, 1327, 3042], [1339, 3013, 1388, 3041], [1400, 3013, 1489, 3042], [1501, 3013, 1650, 3050], [1662, 3013, 1799, 3041], [1810, 3022, 1941, 3050], [1942, 3013, 2051, 3041], [812, 1059, 1013, 1101], [1053, 1059, 1140, 1101], [1167, 1059, 1254, 1101], [1294, 1059, 1381, 1101], [1408, 1059, 1495, 1101], [1535, 1059, 1622, 1101], [1649, 1059, 1736, 1101], [897, 1125, 924, 1148], [1138, 1125, 1169, 1148], [1379, 1125, 1409, 1148], [1619, 1125, 1651, 1148], [451, 1216, 557, 1253], [578, 1216, 602, 1244], [628, 1216, 820, 1253], [837, 1216, 873, 1244], [887, 1225, 903, 1244], [919, 1216, 1066, 1253], [1082, 1216, 1185, 1244], [1201, 1216, 1273, 1244], [1289, 1216, 1413, 1253], [1429, 1216, 1513, 1253], [1531, 1220, 1686, 1244], [1705, 1226, 1724, 1244], [1742, 1216, 1799, 1244], [1817, 1215, 1839, 1244], [1870, 1216, 1934, 1244], [1950, 1216, 2099, 1253], [451, 1262, 587, 1290], [602, 1262, 638, 1290], [650, 1262, 707, 1290], [724, 1262, 826, 1290], [841, 1262, 866, 1290], [882, 1266, 913, 1290], [928, 1262, 1083, 1290], [1098, 1262, 1147, 1290], [1162, 1262, 1297, 1290], [1311, 1262, 1448, 1290], [1464, 1262, 1513, 1290], [1529, 1266, 1669, 1290], [1684, 1262, 1762, 1291], [1777, 1262, 1927, 1299], [1942, 1262, 1978, 1290], [1990, 1262, 2040, 1290], [2053, 1262, 2098, 1290], [451, 1312, 518, 1336], [536, 1308, 716, 1345], [729, 1317, 786, 1345], [798, 1308, 1002, 1345], [1014, 1308, 1151, 1336], [1163, 1317, 1219, 1336], [1230, 1308, 1269, 1336], [1280, 1308, 1355, 1336], [1367, 1312, 1398, 1336], [1410, 1312, 1549, 1345], [1561, 1308, 1610, 1336], [1622, 1308, 1856, 1345], [1869, 1312, 2010, 1336], [2021, 1308, 2099, 1337], [450, 1353, 708, 1390], [725, 1353, 788, 1381], [800, 1353, 1003, 1390], [1016, 1353, 1152, 1381], [1164, 1353, 1189, 1381], [1201, 1353, 1392, 1390], [1403, 1353, 1444, 1390], [1456, 1353, 1505, 1381], [1519, 1353, 1605, 1382], [1616, 1353, 1695, 1381], [1698, 1353, 1754, 1381], [1766, 1353, 1815, 1381], [1827, 1353, 1962, 1390], [1975, 1353, 2077, 1382], [451, 1530, 548, 1567], [561, 1530, 617, 1558], [632, 1530, 762, 1559], [775, 1530, 872, 1559], [886, 1539, 933, 1558], [945, 1539, 1012, 1558], [1014, 1534, 1067, 1558], [1080, 1530, 1224, 1567], [1236, 1530, 1285, 1558], [1296, 1530, 1432, 1567], [1434, 1530, 1536, 1558], [1549, 1530, 1645, 1567], [1658, 1530, 1778, 1558], [1792, 1530, 1887, 1559], [1900, 1530, 1965, 1567], [1988, 1530, 2025, 1565], [2043, 1531, 2100, 1558], [451, 1576, 500, 1604], [513, 1580, 656, 1610], [672, 1585, 774, 1604], [775, 1576, 866, 1604], [879, 1575, 924, 1606], [930, 1589, 952, 1610], [968, 1576, 992, 1604], [1008, 1585, 1024, 1604], [1036, 1576, 1183, 1613], [1196, 1576, 1310, 1604], [1324, 1576, 1421, 1605], [1437, 1585, 1488, 1604], [1490, 1576, 1584, 1604], [1598, 1586, 1678, 1610], [1693, 1580, 1860, 1613], [1874, 1576, 1924, 1604], [1938, 1576, 2097, 1604], [451, 1621, 486, 1649], [498, 1621, 548, 1649], [563, 1625, 704, 1649], [719, 1631, 746, 1649], [772, 1621, 899, 1655], [917, 1621, 975, 1649], [990, 1625, 1020, 1649], [1035, 1621, 1084, 1649], [1098, 1630, 1153, 1649], [1168, 1621, 1203, 1649], [1214, 1621, 1338, 1658], [1353, 1621, 1429, 1655], [1446, 1630, 1493, 1649], [1507, 1621, 1597, 1649], [1612, 1621, 1673, 1649], [1689, 1631, 1708, 1649], [1724, 1621, 1781, 1649], [1797, 1620, 1812, 1649], [1828, 1630, 1876, 1649], [1892, 1621, 2099, 1658], [451, 1667, 627, 1704], [656, 1668, 761, 1695], [777, 1676, 805, 1695], [807, 1667, 965, 1695], [981, 1667, 1030, 1695], [1047, 1667, 1191, 1695], [1206, 1667, 1387, 1704], [1403, 1667, 1563, 1695], [1579, 1667, 1609, 1695], [1625, 1666, 1698, 1701], [1716, 1671, 1788, 1695], [1805, 1666, 1877, 1701], [1884, 1667, 1948, 1704], [1964, 1667, 2099, 1704], [452, 1712, 528, 1751], [546, 1717, 577, 1741], [589, 1713, 753, 1741], [985, 1815, 1201, 1857], [1269, 1806, 1325, 1864], [1403, 1815, 1562, 1856], [2053, 1818, 2098, 1853], [1218, 1875, 1322, 1904], [1325, 1887, 1343, 1902], [1349, 1888, 1374, 1906], [451, 1986, 495, 2015], [505, 1995, 620, 2020], [634, 1986, 691, 2014], [704, 1986, 853, 2023], [865, 1986, 1002, 2014], [1015, 1995, 1135, 2014], [1137, 1995, 1180, 2014], [1192, 1986, 1268, 2023], [1281, 1986, 1394, 2014], [1406, 1986, 1509, 2014], [1520, 1986, 1620, 2014], [1632, 1995, 1660, 2014], [1662, 1986, 1731, 2014], [1743, 1995, 1783, 2014], [1785, 1986, 1864, 2015], [1865, 1990, 1922, 2014], [1934, 1986, 1991, 2014], [2006, 1990, 2096, 2023], [451, 2032, 551, 2060], [567, 2032, 624, 2060], [643, 2041, 698, 2060], [714, 2032, 753, 2060], [771, 2041, 787, 2060], [803, 2032, 904, 2060], [920, 2032, 1069, 2069], [1086, 2032, 1134, 2060], [1150, 2032, 1342, 2069], [1359, 2032, 1511, 2069], [1528, 2032, 1708, 2069], [1725, 2032, 1788, 2060], [1805, 2032, 2019, 2060], [2036, 2032, 2098, 2060], [451, 2086, 563, 2114], [579, 2077, 653, 2111], [667, 2077, 724, 2105], [737, 2077, 946, 2114], [958, 2077, 983, 2105], [996, 2081, 1048, 2105], [1059, 2077, 1176, 2114], [1189, 2077, 1277, 2105], [1289, 2077, 1371, 2105], [1383, 2077, 1407, 2105], [1421, 2086, 1461, 2105], [1473, 2077, 1564, 2105], [1566, 2077, 1618, 2105], [1631, 2077, 1712, 2105], [1725, 2077, 1804, 2105], [1816, 2077, 1847, 2105], [1859, 2077, 1922, 2105], [1933, 2077, 2028, 2114], [2046, 2078, 2099, 2105], [450, 2123, 568, 2152], [580, 2123, 637, 2151], [650, 2123, 732, 2151], [743, 2123, 784, 2160], [792, 2123, 902, 2160], [915, 2123, 1042, 2160], [1053, 2123, 1126, 2151], [1138, 2123, 1255, 2151], [1269, 2122, 1314, 2153], [1319, 2136, 1341, 2157], [1357, 2123, 1414, 2151], [1426, 2122, 1511, 2157], [450, 2194, 606, 2231], [619, 2194, 672, 2228], [688, 2198, 718, 2222], [730, 2194, 853, 2231], [866, 2194, 933, 2222], [945, 2203, 1067, 2222], [1080, 2194, 1141, 2222], [1152, 2194, 1225, 2222], [1238, 2194, 1355, 2222], [1368, 2194, 1450, 2222], [1463, 2203, 1479, 2222], [1492, 2194, 1598, 2222], [1609, 2194, 1843, 2231], [1857, 2198, 1884, 2222], [1896, 2194, 1946, 2222], [1959, 2198, 2099, 2222], [450, 2239, 536, 2268], [555, 2239, 598, 2267], [612, 2239, 662, 2267], [673, 2239, 797, 2276], [810, 2239, 894, 2276], [907, 2243, 1062, 2267], [1078, 2239, 1163, 2267], [1175, 2239, 1225, 2267], [1238, 2248, 1321, 2267], [1334, 2239, 1475, 2276], [1478, 2239, 1520, 2273], [1533, 2239, 1557, 2267], [1571, 2239, 1748, 2267], [1760, 2243, 1791, 2267], [1805, 2248, 1906, 2267], [1908, 2239, 1998, 2267], [2011, 2239, 2098, 2267], [450, 2285, 564, 2322], [577, 2285, 630, 2319], [645, 2285, 708, 2313], [720, 2285, 804, 2313], [816, 2285, 865, 2313], [877, 2285, 968, 2313], [969, 2285, 1021, 2313], [1033, 2285, 1115, 2313], [1127, 2285, 1202, 2313], [1214, 2285, 1358, 2313], [1370, 2285, 1612, 2322], [1629, 2286, 1683, 2313], [1696, 2284, 1738, 2319], [1755, 2298, 1783, 2307], [1799, 2284, 1876, 2323], [1892, 2284, 2019, 2323], [2036, 2285, 2099, 2313], [446, 2331, 525, 2368], [537, 2331, 686, 2368], [698, 2331, 835, 2359], [849, 2328, 949, 2369], [964, 2331, 1030, 2359], [1043, 2331, 1196, 2359], [1405, 2420, 1425, 2450], [1011, 2446, 1112, 2487], [1129, 2462, 1157, 2471], [1173, 2446, 1343, 2488], [1359, 2453, 1387, 2480], [1403, 2466, 1428, 2505], [1438, 2441, 1537, 2487], [2053, 2449, 2098, 2484], [451, 2560, 550, 2588], [563, 2557, 689, 2598], [705, 2560, 729, 2588], [743, 2560, 792, 2588], [805, 2560, 846, 2594], [860, 2560, 1090, 2597], [1102, 2564, 1184, 2588], [451, 2631, 474, 2658], [490, 2630, 515, 2658], [533, 2634, 673, 2667], [689, 2630, 750, 2658], [765, 2630, 822, 2658], [835, 2630, 914, 2667], [930, 2630, 1079, 2667], [1096, 2627, 1197, 2668], [1216, 2630, 1240, 2658], [1258, 2630, 1443, 2667], [1471, 2630, 1535, 2658], [1550, 2630, 1667, 2658], [1684, 2630, 1775, 2658], [1791, 2630, 1872, 2658], [1888, 2634, 1918, 2658], [1933, 2630, 2043, 2658], [2060, 2630, 2099, 2658], [451, 2676, 648, 2713], [664, 2676, 721, 2704], [734, 2676, 937, 2713], [951, 2676, 1077, 2713], [1091, 2680, 1122, 2704], [1135, 2685, 1204, 2704], [1219, 2676, 1276, 2704], [1289, 2676, 1412, 2713], [1425, 2676, 1580, 2704], [1593, 2676, 1642, 2704], [1655, 2676, 1804, 2713], [1817, 2676, 1961, 2704], [1982, 2677, 2035, 2704], [2049, 2676, 2098, 2704], [451, 2721, 533, 2749], [548, 2721, 605, 2749], [621, 2721, 702, 2749], [715, 2721, 756, 2758], [770, 2721, 946, 2758], [961, 2730, 977, 2749], [991, 2721, 1070, 2749], [1084, 2721, 1120, 2749], [1131, 2721, 1310, 2750], [1324, 2721, 1495, 2749], [1509, 2721, 1681, 2758], [1696, 2721, 1783, 2749], [1798, 2721, 1947, 2749], [1961, 2721, 2099, 2749], [451, 2767, 650, 2804], [665, 2771, 805, 2795], [818, 2767, 906, 2804], [930, 2768, 986, 2795], [999, 2776, 1088, 2804], [1102, 2767, 1166, 2804], [1180, 2767, 1215, 2795], [1226, 2767, 1350, 2804], [1365, 2771, 1520, 2795], [1539, 2764, 1621, 2805], [1639, 2776, 1686, 2795], [1701, 2767, 1816, 2804], [1831, 2776, 1847, 2795], [1861, 2767, 1972, 2795], [1973, 2767, 2036, 2795], [2048, 2767, 2098, 2795], [451, 2813, 576, 2841], [591, 2817, 746, 2841], [761, 2823, 784, 2841], [803, 2819, 824, 2843], [844, 2812, 902, 2847], [918, 2813, 1133, 2841], [1146, 2813, 1219, 2850], [1232, 2813, 1506, 2850], [1520, 2817, 1571, 2841], [1585, 2817, 1671, 2841], [1685, 2813, 1873, 2841], [1888, 2813, 1924, 2841], [1936, 2823, 1963, 2841], [1987, 2813, 2057, 2841], [2073, 2813, 2097, 2841], [451, 2858, 643, 2895], [658, 2862, 689, 2886], [704, 2858, 754, 2886], [770, 2858, 882, 2886], [898, 2862, 973, 2886], [988, 2858, 1024, 2886], [1036, 2858, 1086, 2886], [1101, 2858, 1162, 2886], [1179, 2858, 1316, 2886], [1332, 2858, 1367, 2886], [1381, 2867, 1397, 2886], [1412, 2858, 1493, 2895], [1509, 2858, 1624, 2895], [1639, 2862, 1755, 2886], [1771, 2858, 1938, 2895], [1953, 2858, 2100, 2886], [452, 2904, 516, 2939], [528, 2905, 580, 2941], [601, 2904, 637, 2932], [649, 2904, 680, 2932], [695, 2904, 782, 2939], [855, 2997, 962, 3031], [970, 2994, 1012, 3035], [1024, 2996, 1048, 3033], [1060, 2994, 1096, 3035], [1113, 3010, 1141, 3019], [1160, 2994, 1184, 3035], [1199, 3001, 1227, 3028], [1240, 2997, 1324, 3031], [1332, 2994, 1374, 3035], [1387, 2994, 1414, 3035], [1431, 3014, 1457, 3015], [1471, 2994, 1605, 3035], [1617, 2994, 1691, 3040], [2053, 2997, 2098, 3032], [451, 354, 550, 382], [571, 351, 636, 392], [663, 367, 691, 376], [716, 351, 888, 392], [908, 354, 1032, 382], [1051, 354, 1100, 382], [1118, 354, 1256, 382], [1272, 354, 1363, 391], [1380, 354, 1451, 382], [1483, 354, 1573, 388], [1593, 354, 1643, 382], [1659, 354, 1732, 382], [1749, 354, 1898, 391], [1914, 354, 2051, 382], [2068, 358, 2099, 382], [451, 400, 606, 428], [618, 400, 665, 428], [676, 400, 726, 428], [739, 400, 873, 429], [886, 400, 977, 428], [978, 400, 1035, 428], [1204, 464, 1218, 484], [1599, 479, 1619, 509], [818, 508, 841, 537], [846, 505, 918, 546], [935, 521, 963, 530], [1031, 496, 1087, 554], [1158, 463, 1239, 588], [1250, 508, 1357, 542], [1365, 505, 1407, 546], [1419, 507, 1443, 544], [1455, 463, 1532, 588], [1553, 512, 1581, 539], [1597, 525, 1622, 564], [1631, 500, 1731, 546], [2053, 508, 2098, 543], [980, 565, 1137, 595], [1185, 566, 1236, 585], [451, 663, 500, 692], [544, 663, 655, 692], [667, 662, 829, 700], [451, 748, 549, 777], [563, 748, 612, 776], [626, 748, 775, 785], [789, 748, 926, 776], [941, 757, 971, 776], [987, 748, 1108, 776], [1123, 748, 1227, 782], [1243, 748, 1345, 776], [1359, 748, 1494, 785], [1508, 757, 1564, 776], [1578, 748, 1701, 785], [1715, 748, 1764, 776], [1779, 757, 1862, 776], [1876, 748, 2050, 785], [2067, 757, 2097, 776], [452, 803, 508, 831], [519, 794, 727, 831], [739, 794, 836, 823], [841, 795, 892, 822], [902, 794, 1067, 831], [1081, 803, 1111, 822], [1124, 794, 1173, 822], [1184, 794, 1333, 831], [1344, 794, 1480, 822], [1491, 794, 1516, 822], [1528, 794, 1758, 828], [1771, 803, 1818, 822], [1828, 803, 1884, 822], [1894, 803, 1949, 822], [1961, 794, 2099, 822], [451, 839, 585, 876], [600, 839, 723, 867], [738, 839, 913, 876], [930, 839, 1004, 867], [1020, 848, 1050, 867], [1068, 839, 1228, 867], [1244, 839, 1379, 876], [1394, 839, 1525, 873], [1543, 839, 1661, 868], [1664, 839, 1733, 868], [1748, 839, 1797, 867], [1813, 839, 1949, 876], [1964, 839, 2099, 876], [452, 885, 611, 922], [622, 885, 752, 914], [753, 885, 838, 919], [855, 885, 967, 913], [979, 885, 1053, 913], [1065, 885, 1273, 922], [1286, 885, 1383, 914], [1387, 894, 1453, 919], [1463, 894, 1518, 913], [1529, 885, 1804, 922], [1816, 885, 1944, 922], [1956, 889, 2099, 913], [452, 931, 526, 959], [538, 931, 680, 968], [693, 931, 742, 959], [750, 931, 828, 968], [840, 940, 920, 959], [931, 935, 962, 959], [974, 931, 1048, 959], [1061, 935, 1182, 959], [1185, 931, 1291, 960], [1303, 931, 1390, 959], [451, 1045, 474, 1079], [525, 1045, 794, 1089], [451, 1148, 499, 1177], [544, 1149, 627, 1178], [640, 1149, 704, 1178], [717, 1149, 919, 1178], [451, 1235, 502, 1263], [515, 1235, 618, 1263], [631, 1235, 757, 1272], [772, 1244, 851, 1263], [864, 1235, 1022, 1272], [1036, 1235, 1198, 1263], [1210, 1235, 1299, 1272], [1314, 1244, 1330, 1263], [1343, 1235, 1494, 1264], [1507, 1235, 1704, 1263], [1726, 1235, 1821, 1263], [1835, 1244, 1884, 1263], [1898, 1244, 1914, 1263], [1927, 1235, 2039, 1263], [2039, 1235, 2102, 1263], [450, 1284, 629, 1317], [645, 1280, 706, 1308], [720, 1289, 776, 1308], [791, 1280, 942, 1308], [956, 1280, 1047, 1308], [1048, 1280, 1208, 1317], [1232, 1281, 1285, 1308], [1300, 1280, 1431, 1308], [1446, 1280, 1495, 1308], [1509, 1280, 1668, 1317], [1683, 1280, 1784, 1309], [1800, 1280, 1848, 1308], [1863, 1280, 2026, 1317], [2042, 1280, 2099, 1308], [451, 1326, 679, 1363], [696, 1326, 768, 1354], [783, 1326, 864, 1363], [879, 1326, 970, 1354], [1000, 1327, 1033, 1354], [1049, 1326, 1147, 1354], [1163, 1326, 1247, 1354], [1262, 1335, 1309, 1354], [1325, 1326, 1388, 1354], [1404, 1326, 1580, 1363], [1596, 1326, 1645, 1354], [1661, 1326, 1753, 1354], [1769, 1326, 1805, 1354], [1819, 1326, 1902, 1354], [1917, 1330, 2097, 1363], [451, 1372, 481, 1400], [495, 1376, 609, 1409], [622, 1372, 720, 1400], [742, 1372, 786, 1400], [799, 1372, 1028, 1409], [1042, 1372, 1097, 1407], [1113, 1372, 1256, 1409], [1270, 1372, 1356, 1407], [1372, 1372, 1498, 1400], [1510, 1372, 1546, 1400], [1557, 1372, 1643, 1400], [1656, 1372, 1801, 1400], [1817, 1372, 1892, 1407], [1907, 1372, 2022, 1409], [2037, 1372, 2099, 1400], [452, 1417, 527, 1452], [543, 1417, 726, 1454], [741, 1417, 986, 1454], [1001, 1416, 1129, 1452], [1154, 1417, 1217, 1445], [1231, 1417, 1317, 1445], [1332, 1417, 1476, 1445], [1493, 1417, 1623, 1454], [1639, 1426, 1718, 1445], [1731, 1417, 1889, 1454], [1904, 1417, 2005, 1445], [2020, 1417, 2099, 1445], [451, 1463, 500, 1491], [514, 1472, 607, 1500], [610, 1467, 666, 1491], [680, 1463, 808, 1500], [822, 1463, 903, 1497], [920, 1463, 1118, 1500], [1132, 1463, 1180, 1491], [1193, 1463, 1268, 1491], [1282, 1463, 1409, 1500], [1425, 1463, 1540, 1500], [1555, 1463, 1613, 1491], [1627, 1463, 1732, 1500], [1757, 1464, 1794, 1491], [1792, 1472, 1878, 1491], [1892, 1463, 1941, 1491], [1955, 1463, 2099, 1500], [451, 1517, 558, 1545], [574, 1501, 653, 1543], [672, 1508, 719, 1536], [732, 1508, 860, 1545], [874, 1508, 923, 1536], [936, 1508, 1083, 1545], [1097, 1508, 1207, 1536], [1230, 1508, 1293, 1536], [1307, 1517, 1414, 1545], [1430, 1517, 1476, 1536], [1479, 1508, 1735, 1545], [1748, 1508, 1837, 1545], [1851, 1508, 1901, 1536], [1915, 1512, 1959, 1536], [1973, 1508, 2009, 1536], [2020, 1508, 2097, 1536], [450, 1554, 596, 1591], [607, 1554, 648, 1591], [661, 1547, 750, 1582], [767, 1554, 808, 1588], [823, 1554, 871, 1582], [883, 1554, 1056, 1591], [1069, 1554, 1126, 1582], [1139, 1554, 1316, 1582], [1318, 1554, 1399, 1591], [1411, 1554, 1486, 1582], [1505, 1554, 1632, 1588], [1648, 1554, 1687, 1582], [1699, 1558, 1801, 1591], [1815, 1558, 1970, 1582], [1985, 1563, 2015, 1582], [2029, 1554, 2099, 1582], [452, 1609, 482, 1628], [495, 1600, 571, 1628], [582, 1600, 770, 1628], [784, 1609, 863, 1628], [874, 1600, 1017, 1629], [1029, 1600, 1109, 1628], [1120, 1600, 1169, 1628], [1181, 1609, 1298, 1637], [451, 1671, 488, 1698], [486, 1679, 621, 1707], [623, 1670, 749, 1698], [761, 1670, 841, 1698], [851, 1674, 911, 1698], [922, 1670, 1131, 1707], [1148, 1670, 1211, 1698], [1223, 1670, 1357, 1699], [1369, 1670, 1471, 1698], [1482, 1679, 1529, 1698], [1531, 1670, 1669, 1698], [1680, 1679, 1720, 1698], [1731, 1670, 1813, 1699], [1825, 1674, 1946, 1698], [1948, 1670, 2053, 1707], [2066, 1670, 2102, 1698], [451, 1716, 500, 1744], [512, 1716, 785, 1753], [797, 1716, 921, 1753], [934, 1716, 1049, 1744], [1062, 1716, 1098, 1744], [1108, 1716, 1157, 1744], [1169, 1716, 1313, 1753], [1326, 1725, 1442, 1753], [1462, 1716, 1525, 1744], [1539, 1716, 1673, 1745], [1677, 1716, 1803, 1744], [1804, 1716, 1901, 1744], [1914, 1716, 1971, 1744], [1985, 1716, 2099, 1744], [451, 1762, 481, 1790], [493, 1762, 699, 1790], [711, 1762, 783, 1790], [796, 1762, 919, 1790], [930, 1762, 1012, 1791], [1022, 1762, 1146, 1799], [1159, 1766, 1314, 1790], [1327, 1762, 1407, 1790], [1418, 1762, 1468, 1790], [1479, 1762, 1734, 1799], [1747, 1762, 1861, 1790], [1874, 1762, 1909, 1790], [1918, 1762, 1968, 1790], [1979, 1771, 2097, 1799], [450, 1807, 594, 1844], [607, 1807, 637, 1835], [654, 1807, 665, 1835], [681, 1807, 799, 1835], [812, 1807, 937, 1844], [950, 1811, 1115, 1841], [1130, 1807, 1204, 1835], [1215, 1807, 1318, 1844], [1330, 1816, 1371, 1844], [1383, 1807, 1455, 1835], [1468, 1807, 1561, 1835], [1574, 1816, 1590, 1835], [1602, 1807, 1714, 1836], [1715, 1816, 1780, 1835], [1793, 1816, 1809, 1835], [1821, 1807, 1935, 1835], [1948, 1811, 2096, 1835], [451, 1853, 532, 1881], [544, 1853, 718, 1890], [732, 1853, 913, 1890], [924, 1853, 999, 1881], [1011, 1853, 1132, 1881], [1144, 1853, 1309, 1890], [1323, 1857, 1353, 1881], [1366, 1853, 1454, 1882], [1465, 1853, 1610, 1890], [1622, 1853, 1751, 1890], [451, 1924, 514, 1952], [525, 1924, 701, 1953], [712, 1924, 824, 1952], [837, 1924, 971, 1953], [975, 1924, 1020, 1952], [1023, 1928, 1078, 1952], [1090, 1924, 1266, 1961], [1278, 1924, 1411, 1952], [1422, 1933, 1469, 1952], [1480, 1933, 1536, 1952], [1548, 1924, 1629, 1952], [1640, 1924, 1735, 1952], [1746, 1924, 1943, 1961], [1956, 1924, 1996, 1961], [2008, 1924, 2098, 1952], [451, 1969, 562, 2006], [577, 1969, 740, 1997], [754, 1969, 821, 1997], [835, 1969, 865, 1997], [880, 1978, 896, 1997], [910, 1969, 1050, 1997], [1063, 1969, 1219, 2006], [1241, 1969, 1312, 1997], [1327, 1969, 1352, 1997], [1368, 1969, 1481, 1997], [1494, 1973, 1525, 1997], [1538, 1969, 1618, 2006], [1631, 1969, 1715, 1997], [1728, 1969, 1759, 1997], [1773, 1969, 1893, 1997], [1895, 1969, 2099, 1997], [451, 2015, 550, 2043], [562, 2015, 687, 2052], [700, 2024, 746, 2043], [749, 2015, 848, 2043], [862, 2024, 892, 2043], [906, 2024, 922, 2043], [933, 2015, 1004, 2052], [1006, 2015, 1076, 2043], [1087, 2015, 1260, 2043], [1272, 2015, 1409, 2043], [1421, 2015, 1635, 2043], [1647, 2015, 1796, 2052], [1798, 2015, 1878, 2049], [451, 2086, 488, 2113], [486, 2094, 569, 2113], [580, 2085, 629, 2113], [641, 2085, 778, 2122], [789, 2085, 924, 2122], [935, 2085, 1067, 2119], [1080, 2085, 1210, 2114], [1212, 2085, 1298, 2119], [1311, 2085, 1358, 2113], [1368, 2085, 1513, 2122], [1524, 2085, 1574, 2113], [1585, 2085, 1711, 2122], [1724, 2085, 1760, 2113], [1768, 2094, 1823, 2113], [1834, 2085, 1961, 2119], [1975, 2094, 2011, 2113], [2013, 2085, 2098, 2113], [451, 2131, 562, 2159], [575, 2131, 702, 2168], [716, 2131, 790, 2159], [802, 2131, 842, 2160], [855, 2131, 1015, 2159], [1035, 2131, 1147, 2159], [1159, 2131, 1358, 2168], [1372, 2131, 1523, 2159], [1536, 2131, 1596, 2159], [1609, 2131, 1658, 2159], [1672, 2131, 1806, 2160], [1820, 2131, 1923, 2159], [1935, 2140, 2097, 2168], [451, 2177, 541, 2205], [556, 2177, 625, 2205], [640, 2177, 690, 2205], [705, 2177, 865, 2206], [881, 2177, 992, 2211], [1009, 2177, 1060, 2205], [1075, 2186, 1122, 2205], [1136, 2181, 1234, 2214], [1248, 2177, 1354, 2205], [1371, 2186, 1411, 2205], [1426, 2177, 1475, 2205], [1491, 2186, 1574, 2205], [1588, 2177, 1700, 2205], [1700, 2186, 1748, 2205], [1749, 2177, 1928, 2205], [1944, 2177, 1992, 2205], [2005, 2177, 2100, 2205], [451, 2215, 704, 2259], [451, 2325, 501, 2354], [545, 2325, 795, 2363], [807, 2326, 973, 2355], [976, 2325, 1235, 2355], [451, 2413, 503, 2440], [516, 2412, 651, 2441], [663, 2421, 718, 2440], [729, 2412, 832, 2440], [843, 2412, 932, 2449], [945, 2412, 995, 2440], [1007, 2412, 1220, 2449], [1232, 2412, 1383, 2440], [1385, 2412, 1622, 2440], [1636, 2412, 1771, 2447], [1784, 2412, 1850, 2440], [1862, 2412, 1898, 2440], [1908, 2412, 2099, 2441], [451, 2462, 479, 2486], [494, 2458, 529, 2486], [549, 2458, 621, 2492], [645, 2458, 716, 2486], [732, 2458, 798, 2486], [811, 2458, 946, 2487], [962, 2458, 1096, 2495], [1110, 2458, 1259, 2495], [1273, 2458, 1474, 2495], [1488, 2458, 1686, 2495], [1702, 2458, 1801, 2486], [1817, 2467, 1865, 2486], [1879, 2458, 1949, 2486], [1962, 2458, 2038, 2486], [2052, 2458, 2100, 2486], [451, 2503, 601, 2531], [603, 2503, 842, 2531], [857, 2512, 956, 2531], [972, 2503, 1021, 2531], [1035, 2503, 1308, 2540], [1322, 2503, 1470, 2540], [1483, 2503, 1552, 2540], [1575, 2504, 1632, 2531], [1645, 2503, 1712, 2537], [1728, 2503, 1836, 2532], [1851, 2503, 1973, 2540], [1976, 2512, 2021, 2531], [2034, 2512, 2098, 2540], [451, 2549, 556, 2577], [569, 2549, 642, 2577], [657, 2549, 693, 2577], [706, 2549, 903, 2586], [920, 2549, 1041, 2586], [1055, 2549, 1144, 2586], [1160, 2549, 1335, 2586], [1350, 2549, 1477, 2586], [1492, 2549, 1560, 2577], [1575, 2549, 1605, 2577], [1620, 2558, 1679, 2577], [1693, 2549, 1842, 2586], [1857, 2549, 1915, 2577], [1930, 2549, 2099, 2586], [451, 2594, 576, 2622], [592, 2594, 781, 2631], [797, 2594, 828, 2622], [844, 2594, 972, 2622], [1000, 2594, 1090, 2628], [1109, 2594, 1217, 2623], [1233, 2594, 1258, 2622], [1276, 2603, 1292, 2622], [1308, 2594, 1389, 2631], [1405, 2594, 1471, 2622], [1486, 2594, 1534, 2622], [1549, 2594, 1745, 2631], [1761, 2594, 1894, 2622], [1909, 2603, 1963, 2622], [1978, 2594, 2099, 2622], [450, 2640, 699, 2677], [713, 2649, 761, 2668], [774, 2640, 981, 2677], [992, 2640, 1093, 2668], [1106, 2649, 1206, 2668], [1219, 2640, 1356, 2677], [1368, 2640, 1540, 2677], [451, 2712, 488, 2739], [486, 2711, 619, 2739], [629, 2711, 678, 2739], [688, 2711, 903, 2748], [914, 2715, 999, 2748], [1009, 2711, 1167, 2739], [1177, 2711, 1207, 2739], [1221, 2711, 1294, 2745], [1306, 2711, 1378, 2739], [1388, 2711, 1438, 2739], [1448, 2711, 1607, 2748], [1617, 2711, 1678, 2739], [1688, 2720, 1735, 2739], [1745, 2711, 1826, 2739], [1836, 2720, 1891, 2739], [1900, 2711, 2097, 2748], [450, 2756, 539, 2793], [554, 2756, 650, 2793], [664, 2756, 713, 2784], [727, 2756, 871, 2793], [885, 2756, 952, 2784], [967, 2756, 1024, 2784], [1038, 2756, 1110, 2793], [1123, 2765, 1178, 2784], [1192, 2756, 1241, 2784], [1255, 2757, 1379, 2784], [1394, 2756, 1616, 2785], [1630, 2765, 1756, 2793], [1769, 2756, 1876, 2793], [1890, 2756, 1939, 2784], [1953, 2756, 2100, 2784], [451, 2802, 578, 2839], [593, 2802, 651, 2830], [665, 2802, 774, 2839], [790, 2806, 896, 2839], [921, 2802, 1002, 2830], [1016, 2802, 1167, 2830], [1168, 2802, 1223, 2830], [1238, 2802, 1287, 2830], [1301, 2802, 1516, 2830], [1531, 2802, 1597, 2830], [1611, 2802, 1635, 2830], [1650, 2802, 1841, 2839], [1854, 2802, 1895, 2839], [1909, 2802, 1959, 2830], [1974, 2811, 2099, 2839], [506, 2877, 893, 2915], [906, 2883, 1207, 2915], [503, 2921, 1209, 2961], [503, 2966, 605, 2999], [620, 2973, 746, 2999], [762, 2982, 833, 2999], [846, 2974, 964, 3007], [979, 2973, 1121, 3007], [1136, 2977, 1287, 2999], [1303, 2974, 1330, 2999], [1345, 2974, 1389, 2999], [1403, 2974, 1488, 3000], [1502, 2982, 1572, 3007], [1586, 2974, 1685, 2999], [1699, 2982, 1818, 3007], [1844, 2974, 1952, 2999], [1967, 2973, 2010, 2999], [2024, 2974, 2100, 2999], [451, 3016, 693, 3041], [705, 3016, 757, 3041], [768, 3024, 817, 3041], [828, 3024, 923, 3041], [934, 3016, 1003, 3041], [1014, 3015, 1057, 3041], [1067, 3024, 1116, 3041], [1126, 3016, 1218, 3041], [1229, 3024, 1273, 3041], [1284, 3015, 1415, 3041], [1426, 3019, 1452, 3041], [1463, 3016, 1700, 3048], [1710, 3018, 2029, 3042], [962, 345, 1069, 373], [1258, 345, 1397, 373], [1448, 345, 1587, 373], [962, 392, 1106, 429], [1118, 392, 1205, 421], [1292, 392, 1361, 421], [1482, 392, 1551, 421], [962, 438, 1094, 467], [1292, 438, 1359, 467], [1482, 438, 1552, 467], [962, 484, 1023, 511], [1292, 483, 1359, 512], [1482, 483, 1553, 512], [962, 529, 1101, 557], [1292, 529, 1362, 558], [1482, 529, 1549, 557], [963, 576, 1097, 605], [1293, 576, 1362, 605], [1482, 576, 1553, 604], [963, 622, 1122, 651], [1292, 621, 1363, 651], [1482, 621, 1553, 651], [450, 709, 540, 737], [558, 709, 582, 737], [604, 709, 829, 738], [844, 718, 988, 746], [1003, 709, 1050, 737], [1064, 709, 1191, 746], [1206, 718, 1246, 737], [1260, 709, 1385, 746], [1401, 709, 1458, 737], [1472, 709, 1604, 738], [1619, 709, 1691, 737], [1710, 709, 1787, 738], [1801, 709, 1919, 737], [1934, 709, 2096, 746], [450, 755, 673, 792], [685, 755, 919, 792], [930, 755, 1179, 792], [1194, 755, 1270, 790], [1275, 756, 1342, 783], [1356, 755, 1413, 783], [1427, 755, 1600, 790], [1604, 755, 1837, 792], [1848, 755, 2097, 792], [449, 800, 539, 837], [555, 800, 676, 828], [692, 800, 890, 837], [909, 800, 966, 828], [984, 809, 1020, 828], [1037, 800, 1213, 828], [1229, 800, 1336, 828], [1354, 800, 1518, 835], [1539, 800, 1600, 834], [1620, 800, 1780, 828], [1797, 800, 1883, 835], [1902, 800, 1959, 828], [1976, 800, 2099, 837], [451, 846, 609, 881], [624, 846, 732, 880], [748, 846, 805, 874], [819, 846, 868, 874], [881, 846, 1020, 883], [1034, 846, 1111, 874], [1125, 846, 1268, 874], [1290, 846, 1353, 874], [1366, 847, 1427, 874], [1441, 846, 1498, 874], [1512, 846, 1644, 875], [1656, 846, 1763, 874], [1778, 855, 1827, 874], [1841, 846, 1905, 874], [1919, 846, 2006, 874], [2020, 846, 2099, 874], [450, 892, 622, 920], [622, 901, 671, 921], [672, 892, 730, 920], [748, 892, 820, 926], [464, 1263, 493, 1487], [464, 1094, 501, 1251], [464, 1022, 499, 1081], [600, 1515, 657, 1544], [720, 1515, 779, 1544], [842, 1515, 901, 1544], [956, 1515, 1033, 1544], [1076, 1515, 1155, 1544], [1190, 1515, 1288, 1544], [1357, 1515, 1413, 1544], [1477, 1515, 1535, 1544], [1599, 1515, 1657, 1544], [0, 0, 2550, 3300], [1713, 1515, 1790, 1544], [1833, 1515, 1912, 1544], [1946, 1515, 2044, 1544], [724, 1579, 864, 1616], [876, 1580, 1062, 1607], [1077, 1579, 1140, 1614], [1481, 1579, 1621, 1616], [1633, 1580, 1819, 1607], [1833, 1579, 1896, 1614], [560, 1679, 631, 1701], [643, 1673, 777, 1702], [789, 1679, 861, 1701], [873, 1673, 935, 1702], [940, 1674, 1032, 1701], [1045, 1678, 1116, 1702], [1127, 1673, 1266, 1701], [1277, 1677, 1348, 1697], [1359, 1673, 1420, 1700], [1431, 1682, 1502, 1698], [1513, 1673, 1645, 1702], [1656, 1688, 1669, 1692], [1681, 1688, 1694, 1692], [1706, 1688, 1719, 1692], [1738, 1673, 1882, 1710], [1894, 1673, 1981, 1702], [451, 1790, 557, 1827], [570, 1790, 597, 1818], [616, 1790, 840, 1819], [853, 1799, 998, 1827], [1010, 1790, 1058, 1818], [1070, 1799, 1086, 1818], [1098, 1790, 1224, 1818], [1236, 1790, 1272, 1818], [1281, 1790, 1398, 1818], [1413, 1790, 1478, 1825], [1490, 1790, 1580, 1818], [1596, 1790, 1607, 1818], [1623, 1790, 1671, 1818], [1683, 1790, 1785, 1818], [1797, 1790, 2017, 1827], [2036, 1790, 2099, 1818], [451, 1836, 504, 1864], [520, 1836, 601, 1864], [618, 1836, 717, 1864], [733, 1836, 839, 1864], [856, 1836, 904, 1864], [919, 1836, 1003, 1864], [1018, 1836, 1135, 1864], [1153, 1836, 1241, 1864], [1257, 1836, 1370, 1864], [1386, 1845, 1426, 1864], [1442, 1836, 1567, 1873], [1583, 1836, 1650, 1864], [1667, 1836, 1724, 1864], [1740, 1836, 1895, 1865], [1911, 1845, 1951, 1864], [1967, 1836, 2099, 1865], [451, 1882, 527, 1916], [540, 1882, 590, 1910], [601, 1882, 678, 1919], [690, 1882, 772, 1910], [784, 1882, 851, 1911], [863, 1891, 956, 1911], [451, 2037, 486, 2065], [496, 2037, 545, 2065], [558, 2036, 794, 2065], [805, 2037, 1040, 2074], [1042, 2046, 1087, 2065], [1089, 2037, 1153, 2065], [1166, 2037, 1202, 2065], [1217, 2041, 1381, 2065], [1399, 2038, 1452, 2065], [1464, 2037, 1538, 2065], [1550, 2037, 1600, 2065], [1612, 2037, 1777, 2065], [1791, 2037, 1938, 2065], [1948, 2037, 2037, 2074], [2050, 2037, 2099, 2065], [452, 2091, 534, 2110], [547, 2082, 670, 2119], [684, 2082, 742, 2110], [754, 2082, 1013, 2119], [1025, 2082, 1060, 2110], [1070, 2082, 1119, 2110], [1132, 2082, 1277, 2119], [1289, 2086, 1465, 2119], [1477, 2082, 1624, 2110], [1638, 2082, 1679, 2116], [1695, 2091, 1726, 2110], [1738, 2082, 1813, 2110], [1826, 2082, 1856, 2110], [1871, 2082, 1943, 2116], [451, 2154, 503, 2181], [516, 2162, 568, 2181], [582, 2153, 631, 2181], [645, 2153, 753, 2182], [767, 2153, 966, 2190], [981, 2153, 1054, 2181], [1067, 2153, 1107, 2190], [1121, 2153, 1248, 2190], [1262, 2162, 1302, 2181], [1316, 2153, 1441, 2190], [1456, 2153, 1513, 2181], [1527, 2153, 1636, 2190], [1649, 2162, 1689, 2181], [1703, 2153, 1835, 2182], [1849, 2153, 2025, 2181], [2042, 2153, 2099, 2181], [451, 2199, 518, 2228], [531, 2208, 624, 2228], [646, 2199, 743, 2236], [756, 2199, 806, 2227], [819, 2199, 887, 2227], [901, 2199, 984, 2236], [998, 2199, 1144, 2236], [1157, 2199, 1197, 2236], [1214, 2199, 1287, 2233], [1302, 2208, 1349, 2227], [1362, 2199, 1437, 2227], [1450, 2199, 1574, 2236], [1588, 2199, 1715, 2236], [1729, 2199, 1796, 2227], [1810, 2199, 1887, 2227], [1902, 2199, 1981, 2227], [1998, 2199, 2055, 2228], [2068, 2203, 2099, 2227], [455, 2244, 563, 2278], [576, 2244, 738, 2272], [740, 2244, 814, 2272], [826, 2244, 953, 2281], [966, 2244, 1015, 2272], [1027, 2244, 1192, 2272], [1206, 2244, 1358, 2272], [1376, 2244, 1440, 2272], [1451, 2244, 1557, 2272], [1571, 2244, 1607, 2272], [1617, 2244, 1673, 2272], [1687, 2244, 1754, 2272], [1766, 2253, 1866, 2272], [1880, 2244, 2007, 2281], [2021, 2244, 2097, 2272], [452, 2299, 500, 2318], [513, 2290, 596, 2318], [598, 2290, 660, 2318], [672, 2290, 779, 2327], [791, 2290, 817, 2318], [835, 2290, 924, 2318], [940, 2290, 951, 2318], [968, 2290, 1052, 2318], [1055, 2290, 1130, 2318], [1141, 2290, 1247, 2318], [1260, 2290, 1308, 2318], [1319, 2290, 1447, 2327], [1459, 2299, 1498, 2318], [1515, 2290, 1602, 2324], [1614, 2290, 1800, 2318], [451, 2361, 529, 2389], [542, 2361, 669, 2395], [685, 2361, 819, 2390], [834, 2361, 891, 2389], [905, 2361, 1064, 2390], [1079, 2361, 1264, 2398], [1278, 2361, 1317, 2389], [1328, 2361, 1409, 2398], [1421, 2361, 1505, 2389], [1517, 2370, 1557, 2389], [1570, 2361, 1626, 2389], [1641, 2361, 1714, 2389], [1733, 2361, 1860, 2395], [1875, 2361, 1924, 2389], [1938, 2361, 2097, 2390], [451, 2406, 553, 2434], [566, 2406, 765, 2443], [780, 2406, 829, 2434], [843, 2406, 977, 2435], [991, 2406, 1102, 2440], [1117, 2406, 1281, 2443], [1294, 2406, 1344, 2434], [1355, 2406, 1526, 2434], [1541, 2406, 1576, 2434], [1588, 2406, 1698, 2443], [1711, 2406, 1838, 2443], [1851, 2406, 1919, 2434], [1932, 2415, 2007, 2435], [2020, 2406, 2099, 2434], [452, 2461, 468, 2480], [480, 2456, 614, 2489], [626, 2452, 774, 2489], [785, 2452, 854, 2489], [451, 2574, 500, 2604], [544, 2574, 773, 2604], [451, 2668, 551, 2696], [568, 2668, 617, 2696], [634, 2668, 742, 2697], [761, 2668, 945, 2705], [962, 2668, 1090, 2696], [1107, 2677, 1147, 2696], [1164, 2668, 1361, 2705], [1378, 2668, 1428, 2696], [1446, 2668, 1590, 2696], [1608, 2672, 1729, 2696], [1746, 2668, 1782, 2696], [1796, 2668, 1846, 2696], [1864, 2672, 2004, 2696], [2021, 2668, 2099, 2697], [450, 2714, 709, 2751], [724, 2723, 771, 2742], [785, 2714, 849, 2742], [862, 2723, 929, 2742], [930, 2718, 984, 2742], [996, 2714, 1104, 2751], [1117, 2714, 1293, 2751], [1305, 2714, 1355, 2742], [1368, 2714, 1497, 2742], [1510, 2714, 1594, 2742], [1607, 2714, 1813, 2751], [1833, 2715, 1866, 2742], [1878, 2714, 2038, 2751], [2050, 2714, 2099, 2742], [452, 2759, 611, 2788], [628, 2759, 719, 2787], [720, 2759, 770, 2787], [788, 2759, 961, 2796], [977, 2759, 1024, 2787], [1039, 2759, 1100, 2787], [1114, 2768, 1254, 2796], [1273, 2768, 1304, 2787], [1321, 2759, 1342, 2787], [1359, 2759, 1462, 2787], [1478, 2768, 1513, 2787], [1530, 2763, 1561, 2787], [1576, 2759, 1711, 2788], [1726, 2768, 1781, 2787], [1797, 2759, 1946, 2796], [1962, 2759, 1998, 2787], [2010, 2759, 2099, 2796], [451, 2805, 576, 2842], [589, 2814, 619, 2833], [634, 2814, 650, 2833], [660, 2805, 743, 2842], [755, 2805, 904, 2842], [916, 2805, 946, 2833], [959, 2814, 975, 2833], [987, 2805, 1189, 2842], [1201, 2809, 1294, 2842], [451, 2877, 483, 2904], [496, 2876, 603, 2913], [616, 2876, 632, 2905], [646, 2885, 693, 2904], [706, 2876, 761, 2904], [762, 2876, 851, 2904], [863, 2876, 940, 2905], [942, 2876, 1159, 2913], [1173, 2876, 1220, 2904], [1233, 2885, 1249, 2904], [1261, 2876, 1387, 2904], [1398, 2876, 1434, 2904], [1443, 2876, 1577, 2913], [1591, 2876, 1705, 2904], [1718, 2876, 1775, 2904], [1788, 2876, 1920, 2905], [1932, 2876, 2039, 2904], [2057, 2876, 2102, 2905], [450, 2921, 609, 2958], [620, 2921, 741, 2949], [754, 2921, 862, 2949], [873, 2921, 912, 2949], [924, 2921, 973, 2949], [984, 2921, 1062, 2958], [1074, 2921, 1164, 2955], [1178, 2921, 1278, 2949], [1289, 2921, 1453, 2958], [1466, 2921, 1613, 2958], [1625, 2921, 1823, 2958], [1835, 2921, 1973, 2949], [1985, 2921, 2099, 2949], [452, 2967, 509, 2995], [524, 2967, 656, 2996], [672, 2967, 779, 2995], [807, 2968, 890, 2996], [906, 2967, 1019, 3004], [1035, 2967, 1084, 2995], [1100, 2967, 1190, 2995], [1192, 2967, 1269, 2995], [1284, 2971, 1336, 2995], [1350, 2976, 1405, 2995], [1422, 2976, 1478, 3004], [1493, 2967, 1617, 3004], [1632, 2967, 1893, 2996], [1909, 2967, 1977, 2995], [1992, 2967, 2099, 3004], [451, 3013, 587, 3050], [600, 3013, 622, 3041], [635, 3013, 695, 3041], [707, 3013, 855, 3050], [867, 3017, 897, 3041], [909, 3013, 991, 3041], [1004, 3013, 1148, 3041], [1161, 3013, 1343, 3041], [1356, 3013, 1512, 3050], [1525, 3022, 1625, 3041], [1638, 3013, 1722, 3041], [1734, 3017, 1794, 3041], [1806, 3013, 1978, 3050], [541, 464, 548, 469], [636, 466, 639, 467], [1837, 436, 1950, 460], [511, 466, 662, 509], [1449, 479, 1676, 545], [1396, 519, 1446, 552], [645, 564, 810, 603], [1454, 551, 1462, 559], [1497, 560, 1619, 595], [1636, 598, 1640, 601], [811, 604, 989, 636], [1614, 602, 1689, 633], [1893, 613, 1985, 645], [840, 630, 888, 651], [894, 613, 1007, 664], [1890, 630, 1898, 651], [1935, 621, 1995, 659], [1074, 685, 1097, 691], [1105, 685, 1115, 693], [1135, 685, 1140, 686], [1675, 687, 1689, 698], [1858, 667, 1888, 682], [699, 684, 832, 733], [1044, 680, 1190, 735], [1596, 684, 1787, 751], [1852, 668, 1908, 706], [621, 759, 750, 798], [1655, 750, 1804, 797], [727, 799, 746, 807], [908, 822, 968, 854], [978, 816, 1029, 854], [1608, 801, 1759, 824], [1805, 797, 1813, 805], [991, 835, 1047, 863], [1740, 824, 1876, 888], [451, 986, 557, 1023], [571, 986, 598, 1015], [617, 986, 680, 1014], [693, 986, 746, 1014], [760, 990, 867, 1014], [878, 986, 942, 1023], [955, 986, 1054, 1014], [1068, 986, 1171, 1015], [1182, 986, 1365, 1023], [1379, 986, 1427, 1014], [1440, 995, 1456, 1014], [1468, 986, 1614, 1023], [1617, 986, 1674, 1014], [1687, 986, 1726, 1014], [1739, 986, 1821, 1014], [1833, 986, 1996, 1023], [2010, 986, 2099, 1023], [451, 1031, 500, 1059], [511, 1031, 760, 1068], [774, 1031, 895, 1059], [907, 1031, 938, 1059], [950, 1031, 999, 1059], [1013, 1031, 1075, 1060], [1080, 1032, 1172, 1059], [1186, 1031, 1296, 1059], [1314, 1032, 1397, 1060], [1410, 1031, 1523, 1068], [1536, 1031, 1585, 1059], [1598, 1031, 1700, 1059], [1712, 1031, 1763, 1059], [1776, 1035, 1827, 1059], [1839, 1040, 1894, 1059], [1907, 1040, 1963, 1068], [1975, 1031, 2099, 1068], [451, 1077, 712, 1106], [724, 1077, 792, 1105], [804, 1077, 910, 1114], [923, 1077, 1050, 1114], [1053, 1077, 1094, 1111], [1108, 1077, 1167, 1105], [1180, 1077, 1275, 1105], [1290, 1077, 1434, 1105], [1448, 1077, 1605, 1114], [1616, 1077, 1754, 1105], [1766, 1077, 1850, 1105], [1862, 1081, 1922, 1105], [1935, 1077, 2097, 1114], [450, 1123, 539, 1160], [551, 1123, 676, 1160], [690, 1132, 720, 1151], [735, 1132, 751, 1151], [763, 1123, 853, 1160], [872, 1124, 913, 1151], [925, 1123, 1074, 1160], [1086, 1123, 1153, 1157], [1168, 1123, 1217, 1151], [1228, 1123, 1306, 1160], [1318, 1123, 1382, 1160], [1395, 1123, 1494, 1151], [1509, 1123, 1631, 1151], [1644, 1127, 1688, 1151], [1700, 1123, 1736, 1151], [1745, 1123, 1843, 1151], [1858, 1123, 1990, 1158], [2004, 1123, 2040, 1151], [2050, 1123, 2099, 1151], [451, 1168, 533, 1205], [545, 1168, 634, 1205], [646, 1168, 719, 1205], [731, 1168, 780, 1196], [792, 1168, 924, 1197], [937, 1168, 994, 1196], [1006, 1168, 1120, 1196], [1132, 1168, 1239, 1196], [451, 1363, 473, 1397], [526, 1363, 780, 1398], [451, 1510, 530, 1538], [545, 1510, 601, 1538], [616, 1519, 709, 1547], [722, 1519, 769, 1538], [782, 1510, 859, 1539], [872, 1510, 1024, 1547], [1039, 1519, 1055, 1538], [1069, 1510, 1159, 1539], [1173, 1510, 1296, 1538], [1310, 1510, 1358, 1538], [1371, 1510, 1515, 1547], [1529, 1510, 1742, 1547], [1757, 1510, 1932, 1538], [1945, 1519, 2098, 1547], [451, 1556, 558, 1584], [576, 1556, 624, 1584], [640, 1556, 874, 1593], [891, 1556, 1060, 1584], [1092, 1556, 1189, 1593], [1207, 1565, 1223, 1584], [1240, 1565, 1311, 1593], [1329, 1556, 1437, 1593], [1454, 1556, 1577, 1584], [1594, 1556, 1641, 1584], [1658, 1556, 1802, 1584], [1820, 1556, 2032, 1593], [2052, 1565, 2099, 1584], [451, 1601, 651, 1630], [667, 1601, 815, 1638], [830, 1605, 861, 1629], [876, 1601, 978, 1629], [994, 1605, 1067, 1629], [1082, 1601, 1118, 1629], [1129, 1601, 1179, 1629], [1194, 1605, 1236, 1629], [1249, 1601, 1356, 1629], [1372, 1610, 1412, 1629], [1426, 1601, 1476, 1629], [1490, 1601, 1570, 1630], [1573, 1601, 1688, 1635], [1706, 1601, 1893, 1638], [1907, 1601, 2053, 1638], [2068, 1605, 2099, 1629], [451, 1647, 585, 1676], [600, 1647, 744, 1675], [759, 1647, 885, 1675], [899, 1656, 999, 1675], [1015, 1647, 1187, 1684], [1210, 1647, 1297, 1675], [1310, 1647, 1471, 1684], [1486, 1656, 1540, 1675], [1555, 1647, 1704, 1684], [1718, 1651, 1749, 1675], [1763, 1647, 1884, 1675], [1898, 1647, 2099, 1684], [451, 1693, 578, 1730], [590, 1693, 658, 1721], [670, 1693, 701, 1721], [713, 1693, 763, 1721], [776, 1693, 838, 1722], [843, 1694, 935, 1721], [949, 1693, 1060, 1727], [1074, 1702, 1121, 1721], [1133, 1702, 1212, 1721], [1225, 1693, 1292, 1721], [1304, 1697, 1335, 1721], [1347, 1693, 1549, 1721], [1561, 1693, 1622, 1721], [1635, 1693, 1745, 1730], [1759, 1693, 1922, 1721], [1934, 1693, 2097, 1730], [451, 1738, 563, 1766], [572, 1738, 722, 1775], [734, 1738, 784, 1766], [794, 1738, 903, 1766], [920, 1738, 1135, 1772], [1146, 1738, 1235, 1775], [1247, 1747, 1332, 1766], [1342, 1738, 1514, 1775], [1525, 1738, 1724, 1775], [1737, 1738, 1794, 1766], [1804, 1738, 2040, 1772], [2052, 1747, 2099, 1766], [452, 1784, 575, 1812], [587, 1784, 647, 1812], [659, 1793, 714, 1812], [726, 1784, 875, 1821], [889, 1784, 953, 1812], [966, 1784, 1069, 1812], [1082, 1793, 1116, 1812], [1130, 1788, 1160, 1812], [1172, 1784, 1254, 1812], [1267, 1784, 1474, 1821], [1485, 1784, 1597, 1812], [1609, 1784, 1807, 1821], [1821, 1793, 1921, 1812], [1935, 1784, 2097, 1821], [451, 1830, 576, 1858], [589, 1839, 645, 1867], [657, 1830, 750, 1858], [762, 1830, 890, 1867], [902, 1830, 977, 1858], [451, 1900, 514, 1929], [530, 1900, 679, 1937], [694, 1900, 834, 1937], [851, 1904, 933, 1937], [948, 1900, 1107, 1937], [1123, 1900, 1154, 1928], [1169, 1900, 1297, 1937], [1313, 1900, 1380, 1928], [1397, 1900, 1454, 1928], [1469, 1900, 1586, 1937], [1588, 1900, 1692, 1928], [1707, 1904, 1738, 1928], [1754, 1909, 1793, 1928], [1810, 1900, 1990, 1928], [2018, 1901, 2098, 1929], [451, 1946, 502, 1983], [515, 1946, 737, 1974], [750, 1946, 799, 1974], [813, 1946, 981, 1974], [994, 1946, 1121, 1983], [1134, 1946, 1170, 1974], [1181, 1946, 1325, 1974], [1338, 1946, 1587, 1983], [1601, 1946, 1690, 1983], [1704, 1950, 1845, 1974], [1858, 1946, 1978, 1983], [1991, 1946, 2067, 1980], [2083, 1955, 2099, 1974], [450, 1992, 599, 2029], [609, 1996, 679, 2020], [690, 1996, 754, 2029], [765, 1992, 789, 2020], [801, 1996, 832, 2020], [843, 1996, 965, 2029], [976, 1992, 1103, 2029], [1113, 1992, 1202, 2029], [1212, 1992, 1510, 2029], [1521, 1992, 1589, 2020], [1599, 2001, 1633, 2020], [1642, 2001, 1717, 2021], [1728, 2001, 1853, 2029], [1863, 1992, 1899, 2020], [1907, 1992, 2099, 2029], [451, 2037, 636, 2065], [654, 2037, 724, 2065], [738, 2046, 808, 2074], [819, 2037, 944, 2074], [956, 2046, 1031, 2066], [1043, 2041, 1158, 2074], [1168, 2037, 1364, 2074], [1378, 2037, 1425, 2065], [1436, 2037, 1573, 2074], [1585, 2037, 1657, 2065], [1669, 2037, 1883, 2065], [1895, 2037, 2067, 2074], [451, 2109, 483, 2136], [497, 2108, 546, 2136], [560, 2117, 643, 2136], [656, 2108, 734, 2142], [749, 2108, 799, 2136], [813, 2117, 933, 2136], [948, 2108, 984, 2136], [994, 2117, 1049, 2136], [1060, 2108, 1196, 2145], [1209, 2108, 1408, 2145], [1424, 2112, 1546, 2145], [1559, 2108, 1671, 2136], [1684, 2108, 1775, 2136], [1796, 2108, 1907, 2137], [1920, 2108, 2005, 2136], [2016, 2108, 2099, 2145], [452, 2154, 634, 2191], [638, 2154, 679, 2188], [690, 2154, 715, 2182], [727, 2163, 799, 2191], [811, 2158, 841, 2182], [853, 2154, 961, 2182], [972, 2163, 1027, 2182], [1037, 2154, 1128, 2182], [1129, 2154, 1181, 2182], [1192, 2154, 1268, 2183], [1279, 2154, 1416, 2191], [1426, 2154, 1509, 2191], [1520, 2154, 1692, 2191], [1709, 2154, 1789, 2182], [1803, 2163, 1870, 2182], [1871, 2154, 1995, 2191], [2008, 2154, 2099, 2182], [450, 2208, 589, 2236], [603, 2199, 743, 2227], [759, 2203, 874, 2236], [891, 2199, 965, 2227], [980, 2208, 1010, 2227], [1026, 2208, 1105, 2233], [1121, 2199, 1233, 2236], [1247, 2203, 1313, 2233], [1330, 2199, 1387, 2227], [1402, 2208, 1545, 2228], [1546, 2199, 1661, 2227], [1675, 2199, 1771, 2227], [1786, 2199, 1898, 2227], [1912, 2203, 1943, 2227], [1956, 2199, 2068, 2236], [2083, 2208, 2099, 2227], [452, 2245, 548, 2282], [559, 2245, 642, 2282], [654, 2245, 810, 2282], [451, 2315, 493, 2343], [508, 2324, 536, 2343], [538, 2315, 624, 2344], [626, 2315, 799, 2344], [812, 2315, 861, 2343], [873, 2315, 979, 2343], [993, 2315, 1024, 2343], [1036, 2315, 1093, 2343], [1106, 2324, 1199, 2352], [1211, 2315, 1283, 2343], [1296, 2324, 1312, 2343], [1324, 2315, 1478, 2352], [1492, 2315, 1600, 2352], [1614, 2315, 1711, 2344], [1714, 2315, 1756, 2349], [1769, 2315, 1871, 2343], [1884, 2315, 1948, 2343], [1960, 2315, 1999, 2343], [2011, 2315, 2098, 2343], [451, 2361, 548, 2398], [563, 2365, 593, 2389], [608, 2361, 751, 2389], [766, 2361, 899, 2389], [913, 2370, 967, 2389], [981, 2361, 1130, 2398], [1144, 2361, 1281, 2389], [1296, 2370, 1352, 2389], [1365, 2361, 1404, 2389], [1417, 2361, 1493, 2389], [1507, 2361, 1538, 2389], [1553, 2361, 1758, 2389], [1773, 2361, 1845, 2389], [1860, 2370, 1944, 2389], [1958, 2361, 2099, 2398], [451, 2407, 684, 2444], [701, 2411, 804, 2436], [820, 2407, 937, 2435], [956, 2407, 1030, 2435], [1048, 2416, 1079, 2435], [1097, 2408, 1259, 2435], [1280, 2407, 1341, 2441], [1362, 2416, 1396, 2435], [1412, 2407, 1619, 2435], [1637, 2407, 1830, 2444], [1850, 2411, 1881, 2435], [1899, 2416, 1950, 2435], [1967, 2407, 2100, 2435], [451, 2452, 534, 2480], [549, 2461, 605, 2480], [620, 2452, 732, 2480], [746, 2452, 882, 2489], [895, 2452, 1001, 2480], [1018, 2461, 1058, 2480], [1072, 2452, 1145, 2480], [1160, 2461, 1265, 2480], [1282, 2452, 1339, 2480], [1354, 2452, 1556, 2489], [1570, 2452, 1650, 2480], [1667, 2452, 1755, 2480], [1769, 2452, 1844, 2480], [1859, 2452, 1890, 2480], [1904, 2452, 2099, 2489], [451, 2498, 523, 2526], [536, 2507, 591, 2526], [604, 2498, 817, 2535], [831, 2498, 980, 2535], [993, 2498, 1138, 2526], [1160, 2498, 1285, 2526], [1299, 2502, 1330, 2526], [1344, 2498, 1411, 2532], [1427, 2507, 1474, 2526], [1487, 2498, 1550, 2526], [1565, 2498, 1629, 2526], [1644, 2498, 1734, 2535], [1747, 2507, 1802, 2526], [1815, 2498, 1917, 2526], [1931, 2502, 1961, 2526], [1976, 2507, 1992, 2526], [2006, 2498, 2100, 2526], [451, 2544, 563, 2581], [575, 2544, 611, 2572], [620, 2544, 700, 2572], [713, 2544, 869, 2581], [881, 2544, 1020, 2572], [1032, 2544, 1205, 2572], [1218, 2544, 1276, 2572], [1288, 2544, 1489, 2581], [1501, 2544, 1695, 2572], [1707, 2544, 1879, 2572], [450, 2729, 860, 2773], [451, 2876, 514, 2904], [526, 2876, 644, 2904], [658, 2876, 759, 2904], [772, 2876, 832, 2904], [844, 2880, 874, 2904], [886, 2876, 978, 2904], [989, 2876, 1160, 2904], [1172, 2876, 1362, 2905], [1376, 2876, 1433, 2904], [1444, 2876, 1490, 2904], [1504, 2876, 1676, 2904], [1689, 2876, 1737, 2904], [1748, 2876, 1871, 2913], [1883, 2876, 1958, 2904], [1969, 2876, 2097, 2904], [452, 2921, 509, 2949], [528, 2921, 673, 2958], [690, 2925, 867, 2958], [885, 2921, 1144, 2958], [1163, 2921, 1317, 2955], [1339, 2930, 1370, 2949], [1389, 2921, 1459, 2949], [1478, 2930, 1508, 2949], [1529, 2921, 1697, 2958], [1716, 2930, 1732, 2949], [1750, 2921, 1876, 2949], [1893, 2921, 1929, 2949], [1944, 2921, 2097, 2958], [450, 2967, 562, 2995], [576, 2971, 606, 2995], [620, 2967, 695, 2995], [708, 2967, 792, 2995], [805, 2976, 845, 2995], [859, 2967, 916, 2995], [931, 2967, 1004, 2995], [1026, 2967, 1097, 2995], [1112, 2967, 1196, 2995], [1209, 2976, 1270, 2995], [1286, 2967, 1447, 3004], [1460, 2967, 1501, 3004], [1515, 2967, 1639, 2996], [1654, 2971, 1737, 3004], [1751, 2967, 1992, 2996], [2011, 2967, 2068, 2995], [2083, 2976, 2099, 2995], [450, 3014, 552, 3041], [565, 3013, 751, 3041], [763, 3013, 878, 3041], [451, 348, 680, 383], [474, 426, 515, 460], [454, 1652, 515, 1686], [454, 1758, 515, 1792], [454, 1818, 515, 1852], [454, 1924, 515, 1958], [454, 2029, 515, 2063], [454, 2135, 515, 2169], [454, 2287, 515, 2321], [454, 2392, 515, 2426], [454, 2498, 515, 2532], [454, 2604, 515, 2638], [454, 2710, 515, 2744], [454, 2815, 515, 2849], [454, 2921, 515, 2955], [540, 427, 647, 454], [659, 426, 770, 454], [783, 426, 840, 454], [852, 426, 984, 454], [994, 426, 1184, 463], [1202, 427, 1307, 454], [1321, 435, 1370, 454], [1381, 430, 1507, 460], [1522, 426, 1682, 463], [1696, 435, 1744, 454], [1756, 426, 1903, 454], [1921, 427, 2098, 463], [540, 472, 592, 509], [605, 472, 847, 509], [859, 472, 1077, 500], [1091, 472, 1122, 500], [1135, 472, 1279, 500], [1293, 481, 1390, 509], [1409, 473, 1442, 500], [1453, 472, 1658, 509], [1670, 472, 1708, 509], [1712, 473, 1856, 506], [1870, 472, 1959, 501], [540, 532, 612, 560], [630, 532, 749, 560], [786, 532, 884, 560], [903, 532, 939, 560], [953, 532, 1023, 560], [1041, 532, 1175, 560], [1193, 532, 1274, 560], [1292, 532, 1341, 560], [1358, 532, 1514, 569], [1533, 532, 1569, 560], [1584, 532, 1691, 560], [1727, 532, 1911, 561], [1928, 532, 1991, 561], [2006, 533, 2098, 560], [540, 577, 690, 611], [704, 577, 951, 611], [965, 577, 1054, 606], [541, 637, 672, 674], [685, 637, 777, 666], [789, 637, 846, 665], [860, 637, 991, 674], [1004, 637, 1136, 665], [1157, 637, 1342, 674], [1356, 637, 1505, 674], [1519, 637, 1576, 665], [1589, 637, 1808, 665], [1820, 637, 1937, 665], [1951, 637, 1987, 665], [1997, 646, 2098, 665], [540, 683, 599, 720], [619, 684, 652, 711], [663, 683, 867, 720], [880, 683, 918, 720], [919, 683, 1014, 711], [1023, 683, 1132, 720], [1144, 683, 1331, 720], [1343, 693, 1382, 711], [1397, 683, 1548, 719], [1559, 684, 1750, 711], [1765, 683, 1853, 711], [1855, 684, 1973, 717], [1987, 683, 2076, 712], [540, 743, 607, 771], [619, 743, 750, 777], [764, 743, 951, 771], [964, 743, 1142, 777], [1157, 743, 1214, 771], [1226, 743, 1357, 780], [1369, 743, 1467, 772], [1485, 743, 1712, 771], [1723, 743, 1916, 771], [1929, 743, 1976, 771], [1988, 752, 2004, 771], [2015, 752, 2098, 771], [539, 789, 703, 826], [716, 789, 935, 817], [949, 789, 1051, 817], [1064, 789, 1100, 817], [1111, 789, 1260, 826], [1283, 789, 1415, 817], [1426, 789, 1606, 826], [1622, 790, 1788, 826], [1798, 789, 1949, 825], [1965, 789, 2100, 818], [541, 835, 610, 869], [623, 835, 712, 864], [540, 896, 649, 924], [662, 895, 750, 924], [765, 895, 822, 923], [836, 895, 956, 923], [970, 896, 1089, 932], [1113, 895, 1238, 923], [1239, 895, 1443, 923], [1456, 895, 1497, 932], [1510, 895, 1729, 932], [1750, 895, 1877, 932], [1891, 895, 2032, 924], [2044, 904, 2099, 923], [540, 940, 576, 968], [589, 940, 813, 977], [828, 949, 961, 977], [991, 941, 1024, 968], [1039, 940, 1243, 977], [1259, 940, 1297, 977], [1302, 940, 1387, 974], [1403, 949, 1495, 977], [1512, 940, 1665, 974], [1683, 941, 1805, 977], [1823, 940, 1925, 969], [1940, 940, 2097, 977], [539, 987, 615, 1015], [627, 986, 716, 1015], [731, 986, 925, 1014], [937, 986, 985, 1014], [996, 986, 1241, 1023], [1253, 986, 1444, 1023], [540, 1046, 675, 1074], [692, 1046, 818, 1075], [854, 1046, 1098, 1075], [1115, 1046, 1242, 1083], [1260, 1046, 1397, 1074], [1416, 1046, 1464, 1074], [1479, 1046, 1591, 1074], [1609, 1046, 1733, 1075], [1750, 1046, 1877, 1074], [1905, 1046, 2023, 1083], [2042, 1046, 2099, 1074], [540, 1092, 740, 1129], [759, 1092, 831, 1120], [849, 1096, 1025, 1129], [1044, 1092, 1227, 1129], [1266, 1093, 1299, 1120], [1316, 1092, 1521, 1129], [1539, 1092, 1577, 1129], [1585, 1092, 1819, 1121], [1840, 1092, 2034, 1120], [2052, 1092, 2100, 1120], [540, 1137, 786, 1174], [798, 1137, 989, 1174], [1003, 1137, 1092, 1166], [1111, 1137, 1171, 1165], [1193, 1137, 1642, 1166], [540, 1199, 647, 1226], [663, 1198, 818, 1227], [834, 1198, 892, 1226], [906, 1199, 998, 1227], [1013, 1199, 1143, 1226], [1173, 1198, 1201, 1226], [1216, 1198, 1331, 1226], [1347, 1198, 1541, 1226], [1556, 1198, 1604, 1226], [1619, 1198, 1732, 1226], [1748, 1198, 1896, 1235], [1910, 1198, 2096, 1235], [540, 1244, 606, 1271], [606, 1243, 741, 1280], [752, 1243, 901, 1271], [915, 1243, 987, 1271], [999, 1243, 1153, 1271], [1164, 1243, 1306, 1280], [1325, 1244, 1358, 1271], [1369, 1243, 1574, 1280], [1586, 1243, 1624, 1280], [1628, 1243, 1735, 1277], [1749, 1243, 1838, 1272], [539, 1303, 617, 1332], [628, 1303, 737, 1337], [750, 1303, 824, 1331], [835, 1304, 948, 1337], [962, 1303, 1019, 1331], [1031, 1304, 1140, 1331], [1152, 1303, 1263, 1340], [1280, 1303, 1429, 1340], [1441, 1303, 1632, 1340], [1643, 1303, 1766, 1331], [1769, 1303, 1841, 1331], [1851, 1303, 1954, 1331], [1964, 1303, 2099, 1340], [541, 1349, 599, 1377], [609, 1349, 770, 1377], [780, 1349, 996, 1386], [1009, 1349, 1137, 1378], [1147, 1349, 1184, 1386], [1185, 1349, 1329, 1377], [1339, 1350, 1490, 1386], [1498, 1349, 1659, 1383], [1675, 1349, 1918, 1383], [1929, 1349, 1997, 1386], [2007, 1349, 2096, 1378], [540, 1395, 628, 1424], [645, 1395, 827, 1424], [540, 1455, 627, 1484], [645, 1456, 733, 1492], [752, 1455, 852, 1483], [867, 1456, 978, 1492], [996, 1455, 1057, 1484], [1073, 1455, 1293, 1489], [1311, 1455, 1478, 1484], [1494, 1456, 1609, 1489], [1627, 1455, 1741, 1483], [1757, 1456, 1840, 1489], [1859, 1455, 1924, 1483], [1940, 1455, 2097, 1489], [540, 1500, 661, 1528], [678, 1500, 835, 1534], [853, 1500, 1002, 1528], [1017, 1500, 1183, 1534], [1203, 1500, 1260, 1528], [1276, 1500, 1373, 1537], [1389, 1500, 1511, 1528], [1542, 1500, 1625, 1528], [1650, 1500, 1678, 1528], [1694, 1500, 1831, 1534], [1850, 1500, 2022, 1537], [2042, 1500, 2099, 1528], [540, 1546, 675, 1583], [693, 1546, 873, 1574], [890, 1546, 937, 1574], [955, 1546, 1129, 1574], [1147, 1546, 1205, 1574], [1223, 1546, 1421, 1574], [1439, 1546, 1613, 1574], [1631, 1546, 1757, 1574], [1795, 1547, 1828, 1574], [1845, 1546, 2050, 1583], [2068, 1546, 2106, 1583], [537, 1592, 622, 1626], [636, 1592, 725, 1621], [540, 1653, 576, 1680], [589, 1652, 648, 1680], [659, 1652, 716, 1680], [727, 1652, 755, 1681], [768, 1652, 857, 1680], [872, 1652, 900, 1680], [911, 1652, 1075, 1680], [1085, 1656, 1187, 1681], [1197, 1661, 1287, 1689], [1297, 1652, 1399, 1680], [1409, 1652, 1457, 1680], [1466, 1652, 1549, 1680], [1560, 1652, 1701, 1689], [1711, 1652, 1742, 1680], [1752, 1656, 1880, 1680], [1894, 1652, 2098, 1689], [540, 1698, 578, 1735], [582, 1699, 718, 1727], [720, 1698, 829, 1732], [539, 1759, 611, 1787], [626, 1758, 712, 1786], [732, 1758, 760, 1786], [773, 1758, 912, 1795], [926, 1758, 961, 1786], [971, 1758, 1123, 1795], [1135, 1758, 1240, 1795], [1256, 1758, 1396, 1787], [1420, 1758, 1655, 1792], [1673, 1758, 1758, 1787], [540, 1818, 667, 1846], [680, 1818, 881, 1847], [895, 1818, 952, 1846], [965, 1818, 1152, 1846], [1165, 1818, 1343, 1847], [1364, 1818, 1586, 1855], [1600, 1822, 1722, 1855], [1734, 1818, 1782, 1846], [1795, 1827, 1811, 1846], [1823, 1818, 2003, 1855], [2015, 1827, 2098, 1846], [539, 1863, 703, 1900], [715, 1863, 934, 1891], [946, 1863, 1048, 1891], [1060, 1863, 1095, 1891], [1105, 1863, 1254, 1900], [1273, 1864, 1306, 1891], [1317, 1863, 1521, 1900], [1534, 1863, 1572, 1900], [1576, 1864, 1720, 1897], [1733, 1863, 1822, 1892], [540, 1924, 613, 1952], [631, 1924, 792, 1961], [814, 1925, 906, 1961], [924, 1924, 1028, 1961], [1049, 1924, 1156, 1961], [1173, 1924, 1466, 1961], [1488, 1924, 1545, 1952], [1563, 1925, 1631, 1952], [1649, 1924, 1747, 1952], [1786, 1924, 1935, 1961], [1952, 1924, 2099, 1961], [540, 1969, 675, 1997], [689, 1969, 768, 1997], [780, 1969, 988, 2006], [1000, 1978, 1133, 2006], [1152, 1970, 1185, 1997], [1196, 1969, 1400, 2006], [1413, 1969, 1451, 2006], [1453, 1969, 1622, 1998], [1621, 1969, 1729, 2003], [540, 2029, 613, 2057], [630, 2029, 741, 2057], [759, 2030, 912, 2057], [930, 2029, 988, 2057], [1005, 2029, 1071, 2057], [1088, 2029, 1244, 2057], [1281, 2029, 1344, 2057], [1362, 2029, 1439, 2057], [1456, 2029, 1492, 2057], [1508, 2029, 1620, 2066], [1638, 2029, 1668, 2057], [1686, 2030, 1794, 2057], [1811, 2029, 1908, 2066], [1925, 2029, 2047, 2057], [2066, 2029, 2102, 2057], [540, 2075, 783, 2112], [796, 2075, 972, 2104], [991, 2076, 1024, 2103], [1035, 2075, 1240, 2112], [1252, 2075, 1290, 2112], [1292, 2075, 1377, 2109], [1391, 2075, 1480, 2104], [540, 2135, 599, 2163], [613, 2135, 838, 2163], [853, 2135, 910, 2163], [924, 2135, 990, 2163], [1004, 2135, 1160, 2163], [1187, 2136, 1349, 2163], [1363, 2135, 1587, 2164], [1602, 2135, 1704, 2163], [1718, 2135, 1867, 2163], [1883, 2135, 1930, 2163], [1944, 2135, 2099, 2163], [540, 2181, 823, 2218], [853, 2182, 886, 2209], [900, 2181, 1105, 2218], [1121, 2181, 1158, 2218], [1168, 2181, 1215, 2209], [1233, 2181, 1393, 2218], [1409, 2191, 1448, 2209], [1466, 2181, 1654, 2210], [1672, 2182, 1776, 2210], [1789, 2181, 1886, 2218], [1900, 2181, 2022, 2210], [2038, 2181, 2101, 2210], [541, 2226, 619, 2254], [631, 2226, 922, 2263], [936, 2226, 1025, 2255], [540, 2287, 711, 2315], [729, 2287, 926, 2321], [948, 2288, 1019, 2316], [1037, 2287, 1129, 2321], [1152, 2287, 1209, 2315], [1227, 2287, 1327, 2315], [1345, 2287, 1503, 2315], [1542, 2287, 1688, 2324], [1707, 2287, 1906, 2324], [1924, 2287, 2099, 2315], [539, 2332, 789, 2369], [802, 2332, 838, 2360], [847, 2332, 954, 2360], [973, 2333, 1006, 2360], [1017, 2332, 1222, 2369], [1234, 2332, 1272, 2369], [1279, 2332, 1436, 2366], [1450, 2332, 1539, 2361], [541, 2392, 685, 2421], [699, 2392, 800, 2429], [814, 2392, 893, 2420], [905, 2392, 1083, 2429], [1099, 2392, 1156, 2420], [1169, 2393, 1259, 2429], [1272, 2392, 1455, 2420], [1476, 2392, 1624, 2429], [1637, 2392, 1838, 2429], [1850, 2392, 1934, 2420], [1945, 2401, 2098, 2429], [540, 2438, 648, 2466], [660, 2438, 750, 2475], [763, 2447, 779, 2466], [790, 2438, 1011, 2475], [1025, 2438, 1231, 2466], [1250, 2439, 1283, 2466], [1294, 2439, 1380, 2475], [1392, 2439, 1544, 2475], [1558, 2438, 1717, 2475], [1731, 2444, 1762, 2466], [1771, 2438, 1868, 2472], [1882, 2438, 1971, 2467], [540, 2499, 647, 2526], [666, 2498, 812, 2532], [832, 2498, 891, 2526], [908, 2498, 1003, 2532], [1023, 2498, 1104, 2535], [1121, 2498, 1264, 2532], [1285, 2498, 1343, 2526], [1359, 2498, 1472, 2535], [1489, 2499, 1583, 2526], [1619, 2498, 1759, 2526], [1777, 2498, 1948, 2526], [1965, 2498, 2001, 2526], [2016, 2498, 2099, 2526], [539, 2544, 789, 2581], [802, 2544, 833, 2572], [845, 2548, 947, 2573], [959, 2553, 1056, 2581], [1078, 2544, 1182, 2578], [1196, 2544, 1285, 2573], [540, 2605, 647, 2632], [661, 2604, 807, 2638], [822, 2604, 910, 2639], [923, 2605, 954, 2632], [969, 2605, 1020, 2638], [1036, 2604, 1093, 2632], [1106, 2604, 1169, 2641], [1183, 2604, 1347, 2633], [1369, 2604, 1542, 2641], [1556, 2604, 1737, 2632], [1752, 2613, 1862, 2641], [1875, 2604, 2038, 2641], [2052, 2604, 2100, 2632], [540, 2650, 661, 2678], [663, 2650, 873, 2678], [894, 2650, 998, 2684], [1012, 2650, 1101, 2679], [540, 2709, 647, 2738], [662, 2710, 809, 2744], [825, 2710, 936, 2738], [950, 2709, 1091, 2744], [1107, 2709, 1206, 2738], [1221, 2711, 1341, 2747], [1356, 2711, 1410, 2739], [1425, 2700, 1593, 2747], [1610, 2710, 1667, 2738], [1683, 2710, 1810, 2747], [1824, 2710, 2015, 2747], [2041, 2711, 2098, 2738], [540, 2759, 656, 2783], [668, 2755, 771, 2783], [782, 2755, 917, 2783], [927, 2755, 1021, 2783], [1033, 2755, 1182, 2792], [1194, 2755, 1303, 2783], [1323, 2756, 1356, 2783], [1367, 2755, 1571, 2792], [1584, 2755, 1621, 2792], [1625, 2755, 1897, 2784], [1897, 2755, 2006, 2789], [539, 2815, 603, 2844], [615, 2815, 754, 2843], [769, 2815, 826, 2843], [841, 2815, 962, 2843], [976, 2816, 1095, 2852], [1123, 2815, 1337, 2843], [1351, 2815, 1468, 2843], [1484, 2815, 1520, 2843], [1533, 2815, 1677, 2843], [1692, 2815, 1904, 2852], [1931, 2816, 1964, 2843], [1978, 2816, 2011, 2843], [2025, 2816, 2098, 2843], [540, 2861, 684, 2898], [696, 2861, 734, 2898], [736, 2861, 821, 2895], [834, 2861, 923, 2890], [540, 2922, 576, 2949], [592, 2922, 664, 2958], [688, 2921, 852, 2950], [866, 2921, 981, 2958], [994, 2921, 1142, 2958], [1156, 2921, 1345, 2958], [1364, 2921, 1571, 2958], [1586, 2921, 1616, 2949], [1630, 2921, 1713, 2949], [1726, 2921, 1868, 2958], [1890, 2922, 1981, 2949], [1995, 2922, 2098, 2950], [540, 2968, 658, 2996], [670, 2977, 709, 2995], [719, 2967, 919, 3001], [933, 2967, 1166, 3002], [1178, 2968, 1253, 2996], [1264, 2967, 1353, 2996], [1371, 2967, 1459, 2996], [1475, 2967, 1656, 2996], [1674, 2967, 1734, 2995], [1755, 2967, 2096, 2996], [541, 3013, 671, 3042], [454, 354, 515, 388], [454, 462, 515, 496], [454, 616, 515, 650], [454, 769, 515, 803], [454, 877, 515, 911], [454, 985, 515, 1019], [454, 1139, 515, 1173], [540, 354, 568, 382], [581, 355, 603, 382], [616, 354, 720, 383], [732, 354, 878, 388], [893, 355, 928, 382], [940, 354, 1061, 391], [1074, 354, 1196, 388], [1210, 355, 1234, 382], [1249, 354, 1428, 388], [1442, 354, 1534, 382], [1548, 354, 1673, 391], [1688, 354, 1746, 382], [1758, 354, 1874, 382], [1888, 354, 1973, 383], [1994, 354, 2098, 382], [540, 400, 654, 437], [666, 400, 743, 437], [755, 400, 897, 437], [916, 401, 949, 428], [960, 401, 1046, 437], [1058, 401, 1210, 437], [1224, 400, 1383, 437], [1397, 406, 1428, 428], [1437, 400, 1534, 434], [1548, 400, 1637, 429], [540, 462, 670, 490], [684, 462, 804, 496], [817, 462, 930, 499], [943, 462, 1139, 499], [1154, 462, 1221, 490], [1234, 463, 1270, 490], [1286, 463, 1404, 499], [1418, 462, 1549, 490], [1562, 463, 1593, 490], [1608, 463, 1666, 499], [1682, 462, 1739, 490], [1752, 462, 1947, 499], [1959, 463, 1995, 490], [2011, 463, 2098, 490], [540, 508, 620, 545], [646, 508, 920, 545], [933, 508, 1083, 537], [1097, 508, 1312, 536], [1328, 508, 1375, 536], [1387, 508, 1555, 545], [1569, 508, 1728, 536], [1742, 508, 1955, 536], [1980, 509, 2012, 536], [2025, 509, 2098, 536], [540, 553, 684, 590], [696, 553, 734, 590], [738, 554, 882, 587], [896, 553, 985, 582], [540, 616, 670, 644], [683, 616, 802, 650], [816, 616, 918, 653], [929, 616, 1037, 650], [1050, 616, 1245, 653], [1256, 617, 1292, 644], [1306, 616, 1463, 653], [1478, 616, 1535, 644], [1547, 616, 1677, 644], [1689, 617, 1720, 644], [1734, 617, 1791, 653], [1810, 616, 1961, 645], [1974, 625, 2098, 653], [541, 661, 705, 698], [719, 661, 846, 698], [859, 661, 1010, 690], [1023, 661, 1248, 690], [1262, 670, 1375, 698], [1401, 662, 1434, 689], [1447, 661, 1652, 698], [1666, 661, 1704, 698], [1710, 661, 1982, 690], [1984, 670, 2097, 698], [544, 707, 734, 741], [748, 707, 837, 736], [540, 769, 640, 797], [656, 769, 823, 798], [838, 769, 896, 797], [911, 769, 1024, 797], [1040, 769, 1282, 798], [1310, 769, 1505, 797], [1519, 769, 1654, 806], [1669, 769, 1741, 797], [1756, 769, 1832, 806], [1846, 769, 2021, 797], [2036, 778, 2098, 797], [540, 815, 652, 843], [672, 816, 705, 843], [716, 815, 920, 852], [933, 815, 971, 852], [973, 815, 1069, 844], [1084, 815, 1173, 844], [540, 878, 565, 905], [582, 878, 618, 905], [636, 878, 752, 914], [767, 877, 825, 905], [840, 878, 864, 905], [882, 877, 991, 905], [1019, 878, 1108, 905], [1122, 877, 1286, 914], [1300, 881, 1331, 905], [1346, 877, 1496, 914], [1519, 878, 1626, 905], [1641, 886, 1731, 914], [1746, 877, 1862, 905], [1879, 877, 1914, 905], [1927, 877, 2096, 905], [539, 923, 667, 952], [679, 923, 717, 960], [719, 923, 868, 960], [879, 923, 1073, 960], [1083, 923, 1245, 957], [1260, 923, 1512, 958], [1526, 923, 1615, 952], [540, 985, 642, 1013], [653, 985, 689, 1020], [703, 985, 894, 1022], [905, 985, 962, 1013], [974, 986, 1135, 1013], [1146, 986, 1182, 1013], [1196, 985, 1275, 1014], [1292, 985, 1436, 1013], [1447, 985, 1550, 1013], [1562, 985, 1696, 1022], [1708, 985, 1755, 1013], [1765, 985, 1846, 1022], [1857, 985, 1972, 1022], [1983, 989, 2099, 1013], [540, 1031, 672, 1068], [673, 1031, 920, 1059], [935, 1031, 1063, 1060], [1073, 1031, 1111, 1068], [1113, 1031, 1257, 1059], [1268, 1032, 1419, 1068], [1428, 1031, 1589, 1065], [1606, 1031, 1807, 1065], [1819, 1032, 1895, 1060], [1905, 1031, 1994, 1060], [2011, 1031, 2099, 1060], [544, 1076, 726, 1105], [540, 1139, 611, 1167], [626, 1140, 656, 1167], [672, 1140, 747, 1173], [764, 1139, 894, 1167], [910, 1139, 1029, 1173], [1046, 1139, 1155, 1167], [1170, 1139, 1235, 1173], [1253, 1139, 1310, 1167], [1325, 1139, 1520, 1176], [1534, 1140, 1570, 1167], [1587, 1139, 1743, 1176], [1771, 1139, 1924, 1176], [1938, 1139, 2021, 1167], [2036, 1148, 2098, 1167], [539, 1184, 687, 1221], [701, 1184, 748, 1212], [758, 1184, 974, 1221], [987, 1184, 1107, 1212], [1109, 1184, 1319, 1212], [1338, 1185, 1371, 1212], [1382, 1184, 1587, 1221], [1599, 1184, 1637, 1221], [1641, 1185, 1785, 1218], [1799, 1184, 1888, 1213]], "scores": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "structures": {"pages": {"version": "1.0", "structure_value": [[0, 437], [437, 1156], [1156, 1746], [1746, 2141], [2141, 2701], [2701, 3096], [3096, 3554], [3554, 4058], [4058, 4232]], "positions": [[0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300], [0, 0, 2550, 3300]]}, "lines": {"version": "1.0", "structure_value": [[0, 4], [4, 6], [6, 12], [12, 16], [16, 19], [19, 23], [23, 25], [25, 26], [26, 37], [37, 48], [48, 59], [59, 68], [68, 80], [80, 91], [91, 105], [105, 115], [115, 127], [127, 139], [139, 152], [152, 164], [164, 175], [175, 188], [188, 200], [200, 211], [211, 213], [213, 215], [215, 229], [229, 241], [241, 254], [254, 268], [268, 285], [285, 301], [301, 314], [314, 321], [321, 333], [333, 347], [347, 364], [364, 381], [381, 398], [398, 411], [411, 425], [425, 437], [437, 452], [452, 465], [465, 482], [482, 498], [498, 510], [510, 526], [526, 541], [541, 559], [559, 576], [576, 594], [594, 608], [608, 614], [614, 620], [620, 635], [635, 653], [653, 673], [673, 689], [689, 698], [698, 713], [713, 728], [728, 743], [743, 759], [759, 774], [774, 788], [788, 801], [801, 809], [809, 821], [821, 836], [836, 852], [852, 866], [866, 879], [879, 893], [893, 906], [906, 918], [918, 933], [933, 947], [947, 958], [958, 966], [966, 969], [969, 983], [983, 997], [997, 1011], [1011, 1025], [1025, 1040], [1040, 1052], [1052, 1069], [1069, 1083], [1083, 1099], [1099, 1115], [1115, 1130], [1130, 1144], [1144, 1156], [1156, 1173], [1173, 1189], [1189, 1204], [1204, 1218], [1218, 1222], [1222, 1239], [1239, 1255], [1255, 1274], [1274, 1284], [1284, 1287], [1287, 1301], [1301, 1317], [1317, 1331], [1331, 1347], [1347, 1362], [1362, 1378], [1378, 1391], [1391, 1408], [1408, 1422], [1422, 1425], [1425, 1439], [1439, 1451], [1451, 1469], [1469, 1487], [1487, 1494], [1494, 1503], [1503, 1518], [1518, 1522], [1522, 1535], [1535, 1550], [1550, 1567], [1567, 1584], [1584, 1599], [1599, 1605], [1605, 1625], [1625, 1640], [1640, 1655], [1655, 1672], [1672, 1680], [1680, 1681], [1681, 1686], [1686, 1687], [1687, 1703], [1703, 1718], [1718, 1733], [1733, 1746], [1746, 1753], [1753, 1757], [1757, 1773], [1773, 1790], [1790, 1804], [1804, 1818], [1818, 1835], [1835, 1852], [1852, 1872], [1872, 1886], [1886, 1889], [1889, 1893], [1893, 1896], [1896, 1914], [1914, 1928], [1928, 1947], [1947, 1959], [1959, 1975], [1975, 1992], [1992, 2009], [2009, 2015], [2015, 2016], [2016, 2023], [2023, 2030], [2030, 2047], [2047, 2061], [2061, 2075], [2075, 2091], [2091, 2106], [2106, 2122], [2122, 2127], [2127, 2141], [2141, 2156], [2156, 2162], [2162, 2163], [2163, 2164], [2164, 2177], [2177, 2179], [2179, 2182], [2182, 2197], [2197, 2212], [2212, 2225], [2225, 2237], [2237, 2247], [2247, 2249], [2249, 2253], [2253, 2268], [2268, 2282], [2282, 2297], [2297, 2312], [2312, 2324], [2324, 2340], [2340, 2356], [2356, 2372], [2372, 2380], [2380, 2396], [2396, 2410], [2410, 2424], [2424, 2441], [2441, 2451], [2451, 2466], [2466, 2482], [2482, 2495], [2495, 2512], [2512, 2525], [2525, 2542], [2542, 2543], [2543, 2547], [2547, 2560], [2560, 2575], [2575, 2588], [2588, 2602], [2602, 2617], [2617, 2624], [2624, 2640], [2640, 2655], [2655, 2670], [2670, 2672], [2672, 2673], [2673, 2688], [2688, 2701], [2701, 2704], [2704, 2708], [2708, 2711], [2711, 2714], [2714, 2717], [2717, 2720], [2720, 2723], [2723, 2737], [2737, 2746], [2746, 2759], [2759, 2775], [2775, 2779], [2779, 2782], [2782, 2795], [2795, 2801], [2801, 2817], [2817, 2833], [2833, 2849], [2849, 2855], [2855, 2870], [2870, 2884], [2884, 2900], [2900, 2918], [2918, 2933], [2933, 2948], [2948, 2963], [2963, 2977], [2977, 2981], [2981, 2983], [2983, 2997], [2997, 3011], [3011, 3028], [3028, 3037], [3037, 3055], [3055, 3068], [3068, 3083], [3083, 3096], [3096, 3099], [3099, 3101], [3101, 3102], [3102, 3106], [3106, 3109], [3109, 3113], [3113, 3118], [3118, 3122], [3122, 3124], [3124, 3129], [3129, 3131], [3131, 3148], [3148, 3165], [3165, 3178], [3178, 3197], [3197, 3205], [3205, 3207], [3207, 3221], [3221, 3234], [3234, 3250], [3250, 3262], [3262, 3278], [3278, 3290], [3290, 3304], [3304, 3309], [3309, 3324], [3324, 3337], [3337, 3352], [3352, 3364], [3364, 3380], [3380, 3397], [3397, 3413], [3413, 3416], [3416, 3435], [3435, 3450], [3450, 3463], [3463, 3478], [3478, 3495], [3495, 3505], [3505, 3506], [3506, 3521], [3521, 3534], [3534, 3551], [3551, 3554], [3554, 3555], [3555, 3556], [3556, 3557], [3557, 3558], [3558, 3559], [3559, 3560], [3560, 3561], [3561, 3562], [3562, 3563], [3563, 3564], [3564, 3565], [3565, 3566], [3566, 3567], [3567, 3568], [3568, 3569], [3569, 3581], [3581, 3592], [3592, 3606], [3606, 3609], [3609, 3621], [3621, 3634], [3634, 3646], [3646, 3656], [3656, 3658], [3658, 3670], [3670, 3682], [3682, 3688], [3688, 3699], [3699, 3709], [3709, 3714], [3714, 3726], [3726, 3737], [3737, 3750], [3750, 3761], [3761, 3763], [3763, 3775], [3775, 3787], [3787, 3798], [3798, 3800], [3800, 3816], [3816, 3819], [3819, 3829], [3829, 3840], [3840, 3850], [3850, 3861], [3861, 3870], [3870, 3885], [3885, 3892], [3892, 3903], [3903, 3915], [3915, 3918], [3918, 3928], [3928, 3936], [3936, 3947], [3947, 3959], [3959, 3972], [3972, 3978], [3978, 3991], [3991, 3995], [3995, 4007], [4007, 4018], [4018, 4031], [4031, 4035], [4035, 4047], [4047, 4057], [4057, 4058], [4058, 4059], [4059, 4060], [4060, 4061], [4061, 4062], [4062, 4063], [4063, 4064], [4064, 4065], [4065, 4080], [4080, 4090], [4090, 4104], [4104, 4114], [4114, 4118], [4118, 4131], [4131, 4141], [4141, 4143], [4143, 4154], [4154, 4160], [4160, 4175], [4175, 4182], [4182, 4196], [4196, 4207], [4207, 4208], [4208, 4222], [4222, 4232]], "positions": [[519, 463, 2031, 527], [1018, 545, 1532, 610], [914, 798, 1635, 828], [997, 845, 1552, 882], [1101, 890, 1448, 927], [1080, 936, 1470, 971], [709, 979, 1840, 1020], [1182, 1148, 1367, 1183], [600, 1272, 1950, 1309], [599, 1318, 1949, 1355], [599, 1363, 1948, 1400], [600, 1409, 1949, 1446], [599, 1455, 1949, 1492], [599, 1500, 1948, 1537], [600, 1546, 1950, 1583], [601, 1592, 1947, 1629], [600, 1637, 1949, 1674], [599, 1683, 1948, 1720], [600, 1729, 1949, 1766], [600, 1774, 1948, 1811], [600, 1820, 1950, 1857], [600, 1866, 1950, 1903], [600, 1911, 1948, 1948], [600, 1957, 1950, 1994], [600, 2003, 757, 2031], [452, 2182, 794, 2217], [450, 2303, 2098, 2340], [450, 2348, 2099, 2385], [450, 2394, 2099, 2431], [451, 2440, 2098, 2477], [449, 2485, 2096, 2522], [450, 2531, 2097, 2568], [450, 2577, 2098, 2614], [449, 2622, 1083, 2656], [450, 2693, 2099, 2730], [450, 2739, 2099, 2776], [450, 2784, 2099, 2821], [450, 2830, 2099, 2867], [450, 2876, 2099, 2913], [450, 2921, 2098, 2958], [451, 2967, 2099, 3004], [449, 3013, 1853, 3050], [451, 354, 2099, 391], [452, 400, 2098, 437], [450, 445, 2099, 482], [451, 491, 2099, 528], [451, 537, 2099, 574], [452, 582, 2098, 619], [451, 628, 2099, 665], [451, 674, 2098, 711], [451, 719, 2096, 756], [451, 765, 2099, 802], [450, 811, 2099, 848], [451, 856, 1023, 893], [451, 989, 1537, 1033], [451, 1104, 2098, 1141], [451, 1150, 2099, 1187], [451, 1195, 2098, 1232], [450, 1241, 2099, 1278], [450, 1287, 1502, 1324], [451, 1357, 2099, 1394], [451, 1403, 2097, 1440], [451, 1449, 2099, 1486], [451, 1494, 2099, 1531], [452, 1540, 2099, 1577], [451, 1586, 2102, 1623], [450, 1631, 2099, 1668], [451, 1677, 1531, 1714], [451, 1748, 2099, 1785], [451, 1793, 2102, 1830], [451, 1839, 2098, 1876], [451, 1884, 2099, 1921], [451, 1930, 2099, 1967], [452, 1976, 2098, 2013], [451, 2021, 2098, 2058], [451, 2067, 2099, 2104], [452, 2113, 2099, 2150], [452, 2158, 2099, 2195], [451, 2204, 2099, 2238], [450, 2250, 1486, 2284], [451, 2371, 995, 2409], [451, 2465, 2100, 2502], [452, 2510, 2099, 2547], [451, 2556, 2100, 2593], [452, 2602, 2099, 2639], [450, 2647, 2096, 2684], [454, 2693, 2097, 2730], [452, 2739, 2097, 2776], [451, 2784, 2099, 2821], [451, 2830, 2099, 2867], [451, 2876, 2099, 2913], [0, 0, 2550, 3300], [450, 2967, 2099, 3004], [452, 3013, 1694, 3050], [451, 354, 2098, 391], [451, 400, 2099, 437], [451, 445, 2097, 482], [450, 491, 2099, 528], [452, 537, 935, 574], [452, 607, 2099, 644], [451, 653, 2099, 690], [451, 699, 2099, 736], [451, 744, 1332, 781], [451, 860, 918, 904], [451, 966, 2096, 1003], [451, 1011, 2100, 1048], [451, 1057, 2097, 1094], [451, 1103, 2096, 1140], [451, 1173, 2098, 1210], [451, 1219, 2099, 1256], [451, 1265, 2099, 1302], [452, 1310, 2099, 1347], [450, 1356, 1922, 1393], [451, 1461, 825, 1499], [451, 1548, 2099, 1585], [450, 1594, 2099, 1631], [451, 1638, 2099, 1676], [452, 1683, 2097, 1724], [454, 1728, 1089, 1770], [1020, 1805, 2098, 1855], [451, 1892, 2002, 1930], [451, 1998, 890, 2028], [451, 2085, 2097, 2122], [451, 2123, 1923, 2167], [451, 2201, 2098, 2238], [450, 2247, 2097, 2284], [451, 2292, 1906, 2329], [1073, 2365, 2098, 2406], [451, 2445, 2098, 2490], [451, 2498, 2098, 2535], [451, 2543, 2098, 2580], [450, 2589, 2099, 2626], [452, 2635, 1395, 2672], [1309, 2710, 1339, 2739], [1155, 2748, 2098, 2806], [1298, 2818, 1349, 2838], [451, 2876, 2097, 2913], [451, 2921, 2100, 2958], [451, 2967, 2098, 3004], [451, 3013, 2051, 3050], [812, 1059, 1736, 1101], [897, 1125, 1651, 1148], [451, 1215, 2099, 1253], [451, 1262, 2098, 1299], [451, 1308, 2099, 1345], [450, 1353, 2077, 1390], [451, 1530, 2100, 1567], [451, 1575, 2097, 1613], [451, 1620, 2099, 1658], [451, 1666, 2099, 1704], [452, 1712, 753, 1751], [985, 1806, 2098, 1864], [1218, 1875, 1374, 1906], [451, 1986, 2096, 2023], [451, 2032, 2098, 2069], [451, 2077, 2099, 2114], [450, 2122, 1511, 2160], [450, 2194, 2099, 2231], [450, 2239, 2098, 2276], [450, 2284, 2099, 2323], [446, 2328, 1196, 2369], [1405, 2420, 1425, 2450], [1011, 2441, 2098, 2505], [451, 2557, 1184, 2598], [451, 2627, 2099, 2668], [451, 2676, 2098, 2713], [451, 2721, 2099, 2758], [451, 2764, 2098, 2805], [451, 2812, 2097, 2850], [451, 2858, 2100, 2895], [452, 2904, 782, 2941], [855, 2994, 2098, 3040], [451, 351, 2099, 392], [451, 400, 1035, 429], [1204, 464, 1218, 484], [1599, 479, 1619, 509], [818, 463, 2098, 588], [980, 565, 1236, 595], [451, 662, 829, 700], [451, 748, 2097, 785], [452, 794, 2099, 831], [451, 839, 2099, 876], [452, 885, 2099, 922], [452, 931, 1390, 968], [451, 1045, 794, 1089], [451, 1148, 919, 1178], [451, 1235, 2102, 1272], [450, 1280, 2099, 1317], [451, 1326, 2097, 1363], [451, 1372, 2099, 1409], [452, 1416, 2099, 1454], [451, 1463, 2099, 1500], [451, 1501, 2097, 1545], [450, 1547, 2099, 1591], [452, 1600, 1298, 1637], [451, 1670, 2102, 1707], [451, 1716, 2099, 1753], [451, 1762, 2097, 1799], [450, 1807, 2096, 1844], [451, 1853, 1751, 1890], [451, 1924, 2098, 1961], [451, 1969, 2099, 2006], [451, 2015, 1878, 2052], [451, 2085, 2098, 2122], [451, 2131, 2097, 2168], [451, 2177, 2100, 2214], [451, 2215, 704, 2259], [451, 2325, 1235, 2363], [451, 2412, 2099, 2449], [451, 2458, 2100, 2495], [451, 2503, 2098, 2540], [451, 2549, 2099, 2586], [451, 2594, 2099, 2631], [450, 2640, 1540, 2677], [451, 2711, 2097, 2748], [450, 2756, 2100, 2793], [451, 2802, 2099, 2839], [506, 2877, 1207, 2915], [503, 2921, 1209, 2961], [503, 2966, 2100, 3007], [451, 3015, 2029, 3048], [962, 345, 1587, 373], [962, 392, 1551, 429], [962, 438, 1552, 467], [962, 483, 1553, 512], [962, 529, 1549, 558], [963, 576, 1553, 605], [963, 621, 1553, 651], [450, 709, 2096, 746], [450, 755, 2097, 792], [449, 800, 2099, 837], [451, 846, 2099, 883], [450, 892, 820, 926], [464, 1022, 501, 1487], [0, 0, 2550, 3300], [724, 1579, 1896, 1616], [560, 1673, 1981, 1710], [451, 1790, 2099, 1827], [451, 1836, 2099, 1873], [451, 1882, 956, 1919], [451, 2036, 2099, 2074], [452, 2082, 1943, 2119], [451, 2153, 2099, 2190], [451, 2199, 2099, 2236], [455, 2244, 2097, 2281], [452, 2290, 1800, 2327], [451, 2361, 2097, 2398], [451, 2406, 2099, 2443], [452, 2452, 854, 2489], [451, 2574, 773, 2604], [451, 2668, 2099, 2705], [450, 2714, 2099, 2751], [452, 2759, 2099, 2796], [451, 2805, 1294, 2842], [451, 2876, 2102, 2913], [450, 2921, 2099, 2958], [452, 2967, 2099, 3004], [451, 3013, 1978, 3050], [541, 436, 1950, 469], [511, 466, 1676, 545], [1396, 519, 1446, 552], [645, 551, 1640, 603], [782, 602, 1985, 645], [840, 613, 1995, 664], [1074, 667, 1888, 698], [699, 668, 1908, 751], [621, 750, 1804, 798], [727, 797, 1813, 854], [991, 824, 1876, 888], [451, 986, 2099, 1023], [451, 1031, 2099, 1068], [451, 1077, 2097, 1114], [450, 1123, 2099, 1160], [451, 1168, 1239, 1205], [451, 1363, 780, 1398], [451, 1510, 2098, 1547], [451, 1556, 2099, 1593], [451, 1601, 2099, 1638], [451, 1647, 2099, 1684], [451, 1693, 2097, 1730], [451, 1738, 2099, 1775], [452, 1784, 2097, 1821], [451, 1830, 977, 1867], [451, 1900, 2098, 1937], [451, 1946, 2099, 1983], [450, 1992, 2099, 2029], [451, 2037, 2067, 2074], [451, 2108, 2099, 2145], [452, 2154, 2099, 2191], [450, 2199, 2099, 2236], [452, 2245, 810, 2282], [451, 2315, 2098, 2352], [451, 2361, 2099, 2398], [451, 2407, 2100, 2444], [451, 2452, 2099, 2489], [451, 2498, 2100, 2535], [451, 2544, 1879, 2581], [450, 2729, 860, 2773], [451, 2876, 2097, 2913], [452, 2921, 2097, 2958], [450, 2967, 2099, 3004], [450, 3013, 878, 3041], [451, 348, 680, 383], [474, 426, 515, 460], [454, 1652, 515, 1686], [454, 1758, 515, 1792], [454, 1818, 515, 1852], [454, 1924, 515, 1958], [454, 2029, 515, 2063], [454, 2135, 515, 2169], [454, 2287, 515, 2321], [454, 2392, 515, 2426], [454, 2498, 515, 2532], [454, 2604, 515, 2638], [454, 2710, 515, 2744], [454, 2815, 515, 2849], [454, 2921, 515, 2955], [540, 426, 2098, 463], [540, 472, 1959, 509], [540, 532, 2098, 569], [540, 577, 1054, 611], [541, 637, 2098, 674], [540, 683, 2076, 720], [540, 743, 2098, 780], [539, 789, 2100, 826], [541, 835, 712, 869], [540, 895, 2099, 932], [540, 940, 2097, 977], [539, 986, 1444, 1023], [540, 1046, 2099, 1083], [540, 1092, 2100, 1129], [540, 1137, 1642, 1174], [540, 1198, 2096, 1235], [540, 1243, 1838, 1280], [539, 1303, 2099, 1340], [541, 1349, 2096, 1386], [540, 1395, 827, 1424], [540, 1455, 2097, 1492], [540, 1500, 2099, 1537], [540, 1546, 2106, 1583], [537, 1592, 725, 1626], [540, 1652, 2098, 1689], [540, 1698, 829, 1735], [539, 1758, 1758, 1795], [540, 1818, 2098, 1855], [539, 1863, 1822, 1900], [540, 1924, 2099, 1961], [540, 1969, 1729, 2006], [540, 2029, 2102, 2066], [540, 2075, 1480, 2112], [540, 2135, 2099, 2164], [540, 2181, 2101, 2218], [541, 2226, 1025, 2263], [540, 2287, 2099, 2324], [539, 2332, 1539, 2369], [541, 2392, 2098, 2429], [540, 2438, 1971, 2475], [540, 2498, 2099, 2535], [539, 2544, 1285, 2581], [540, 2604, 2100, 2641], [540, 2650, 1101, 2684], [540, 2700, 2098, 2747], [540, 2755, 2006, 2792], [539, 2815, 2098, 2852], [540, 2861, 923, 2898], [540, 2921, 2098, 2958], [540, 2967, 2096, 3002], [541, 3013, 671, 3042], [454, 354, 515, 388], [454, 462, 515, 496], [454, 616, 515, 650], [454, 769, 515, 803], [454, 877, 515, 911], [454, 985, 515, 1019], [454, 1139, 515, 1173], [540, 354, 2098, 391], [540, 400, 1637, 437], [540, 462, 2098, 499], [540, 508, 2098, 545], [540, 553, 985, 590], [540, 616, 2098, 653], [541, 661, 2097, 698], [544, 707, 837, 741], [540, 769, 2098, 806], [540, 815, 1173, 852], [540, 877, 2096, 914], [539, 923, 1615, 960], [540, 985, 2099, 1022], [540, 1031, 2099, 1068], [544, 1076, 726, 1105], [540, 1139, 2098, 1176], [539, 1184, 1888, 1221]]}}}}]}
